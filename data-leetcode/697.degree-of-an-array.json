[
    {
        "title": "Unique Binary Search Trees",
        "question_content": "Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n.\n&nbsp;\nExample 1:\n\nInput: n = 3\nOutput: 5\n\nExample 2:\n\nInput: n = 1\nOutput: 1\n\n&nbsp;\nConstraints:\n\n\t1 <= n <= 19",
        "solutions": [
            {
                "id": 31666,
                "title": "dp-solution-in-6-lines-with-explanation-f-i-n-g-i-1-g-n-i",
                "content": "The problem can be solved in a dynamic programming way. I\\u2019ll explain the intuition and formulas in the following. \\n\\nGiven a sequence 1\\u2026n, to construct a Binary Search Tree (BST) out of the sequence, we could enumerate each number i in the sequence, and use the number as the root, naturally, the subsequence 1\\u2026(i-1) on its left side would lay on the left branch of the root, and similarly the right subsequence (i+1)\\u2026n lay on the right branch of the root. We then can construct the subtree from the subsequence recursively. Through the above approach, we could ensure that the BST that we construct are all unique, since they have unique roots.\\n\\nThe problem is to calculate the number of unique BST. To do so, we need to define two functions: \\n\\n`G(n)`: the number of unique BST for a sequence of length n. \\n\\n`F(i, n), 1 <= i <= n`: the number of unique BST, where the number i is the root of BST, and the sequence ranges from 1 to n. \\n\\nAs one can see, `G(n)` is the actual function we need to calculate in order to solve the problem. And `G(n)` can be derived from `F(i, n)`, which at the end, would recursively refer to `G(n)`.\\n\\nFirst of all, given the above definitions, we can see that the total number of unique BST `G(n)`, is the sum of BST `F(i)` using each number i as a root. \\n*i.e.* \\n\\n    G(n) = F(1, n) + F(2, n) + ... + F(n, n). \\n\\nParticularly, the bottom cases, there is only one combination to construct a BST out of a sequence of length 1 (only a root) or 0 (empty tree). \\n*i.e.*\\n\\n    G(0)=1, G(1)=1. \\n\\nGiven a sequence 1\\u2026n, we pick a number i out of the sequence as the root, then the number of unique BST with the specified root `F(i)`, is the cartesian product of the number of BST for its left and right subtrees. For example, `F(3, 7)`: the number of unique BST tree with number 3 as its root. To construct an unique BST out of the entire sequence [1, 2, 3, 4, 5, 6, 7] with 3 as the root, which is to say, we need to construct an unique BST out of its left subsequence [1, 2] and another BST out of the right subsequence [4, 5, 6, 7], and then combine them together (*i.e.* cartesian product). The tricky part is that we could consider the number of unique BST out of sequence [1,2] as `G(2)`, and the number of of unique BST out of sequence [4, 5, 6, 7] as `G(4)`. Therefore, `F(3,7) = G(2) * G(4)`.\\n\\n*i.e.*\\n\\n    F(i, n) = G(i-1) * G(n-i)\\t1 <= i <= n \\n\\n\\nCombining the above two formulas, we obtain the recursive formula for `G(n)`. *i.e.*\\n\\n    G(n) = G(0) * G(n-1) + G(1) * G(n-2) + \\u2026 + G(n-1) * G(0) \\n\\nIn terms of calculation, we need to start with the lower number, since the value of `G(n)` depends on the values of `G(0) \\u2026 G(n-1)`. \\n\\nWith the above explanation and formulas, here is the implementation in Java. \\n\\n    public int numTrees(int n) {\\n      int [] G = new int[n+1];\\n      G[0] = G[1] = 1;\\n        \\n      for(int i=2; i<=n; ++i) {\\n        for(int j=1; j<=i; ++j) {\\n          G[i] += G[j-1] * G[i-j];\\n        }\\n\\t  }\\n      return G[n];\\n    }",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "The problem can be solved in a dynamic programming way. I\\u2019ll explain the intuition and formulas in the following. \\n\\nGiven a sequence 1\\u2026n, to construct a Binary Search Tree (BST) out of the sequence, we could enumerate each number i in the sequence, and use the number as the root, naturally, the subsequence 1\\u2026(i-1) on its left side would lay on the left branch of the root, and similarly the right subsequence (i+1)\\u2026n lay on the right branch of the root. We then can construct the subtree from the subsequence recursively. Through the above approach, we could ensure that the BST that we construct are all unique, since they have unique roots.\\n\\nThe problem is to calculate the number of unique BST. To do so, we need to define two functions: \\n\\n`G(n)`: the number of unique BST for a sequence of length n. \\n\\n`F(i, n), 1 <= i <= n`: the number of unique BST, where the number i is the root of BST, and the sequence ranges from 1 to n. \\n\\nAs one can see, `G(n)` is the actual function we need to calculate in order to solve the problem. And `G(n)` can be derived from `F(i, n)`, which at the end, would recursively refer to `G(n)`.\\n\\nFirst of all, given the above definitions, we can see that the total number of unique BST `G(n)`, is the sum of BST `F(i)` using each number i as a root. \\n*i.e.* \\n\\n    G(n) = F(1, n) + F(2, n) + ... + F(n, n). \\n\\nParticularly, the bottom cases, there is only one combination to construct a BST out of a sequence of length 1 (only a root) or 0 (empty tree). \\n*i.e.*\\n\\n    G(0)=1, G(1)=1. \\n\\nGiven a sequence 1\\u2026n, we pick a number i out of the sequence as the root, then the number of unique BST with the specified root `F(i)`, is the cartesian product of the number of BST for its left and right subtrees. For example, `F(3, 7)`: the number of unique BST tree with number 3 as its root. To construct an unique BST out of the entire sequence [1, 2, 3, 4, 5, 6, 7] with 3 as the root, which is to say, we need to construct an unique BST out of its left subsequence [1, 2] and another BST out of the right subsequence [4, 5, 6, 7], and then combine them together (*i.e.* cartesian product). The tricky part is that we could consider the number of unique BST out of sequence [1,2] as `G(2)`, and the number of of unique BST out of sequence [4, 5, 6, 7] as `G(4)`. Therefore, `F(3,7) = G(2) * G(4)`.\\n\\n*i.e.*\\n\\n    F(i, n) = G(i-1) * G(n-i)\\t1 <= i <= n \\n\\n\\nCombining the above two formulas, we obtain the recursive formula for `G(n)`. *i.e.*\\n\\n    G(n) = G(0) * G(n-1) + G(1) * G(n-2) + \\u2026 + G(n-1) * G(0) \\n\\nIn terms of calculation, we need to start with the lower number, since the value of `G(n)` depends on the values of `G(0) \\u2026 G(n-1)`. \\n\\nWith the above explanation and formulas, here is the implementation in Java. \\n\\n    public int numTrees(int n) {\\n      int [] G = new int[n+1];\\n      G[0] = G[1] = 1;\\n        \\n      for(int i=2; i<=n; ++i) {\\n        for(int j=1; j<=i; ++j) {\\n          G[i] += G[j-1] * G[i-j];\\n        }\\n\\t  }\\n      return G[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1565543,
                "title": "c-python-5-easy-solutions-w-explanation-optimization-from-brute-force-to-dp-to-catalan-o-n",
                "content": "\\u274C ***Solution - I (Brute-Force) [TLE]***\\n\\nLet\\'s start by trying to solve the problem in Brute-Force manner. To form structurally unique BST consisting of `n` nodes, we can start by taking any of the node `1...n` as the root node. Let the chosen root node be `i`. Then, we have a BST where the root node is `i`, the left child consist of all nodes from `1...i-1` (since left sub-tree must have only less than root\\'s value) and right child consist of all nodes from `i+1...n`.\\n\\n```python\\n\\t\\n              1            1                   2                    3               3\\n\\t           \\\\            \\\\                 / \\\\                  /               /\\n    \\t        3             2              1   3                2               1\\n               /               \\\\                                 /                 \\\\\\n              2                 3                              1                    2\\n                     i = 1                   i = 2                       i = 3           \\n(i = root node)\\n```\\n\\nNow, we need to realize that the number of structurally unique BST formable with nodes having value `i+1...n` is equal to the number of structurally unique BST formable with nodes having value `i+1-i...n-i = 1...n-i`. Why? Because we only need to find BST which are structurally unique irrespective of their values and we can form an equal number of them with nodes from `1...n` or `2...n+1` or `n...2n-1` and so on. So, the number only depends on number of nodes using which BST is to be formed.\\n\\nNow, when we choose `i` as root node, we will have nodes from `1...i-1` (`i-1` nodes in total) in left sub-tree and nodes from `i+1...n` (`n-i` nodes in total) in the right side. We can then form  `numTrees(i-1)` BSTs for left sub-tree and `numTrees(n-i)` BSTs for the right sub-tree. The total number of structurally unique BSTs formed having root `i` will be equal to product of these two, i.e, `numTrees(i-1) * numTrees(n-i)`. The same can be followed recursively till we reach base case - `numTrees(0) = numTrees(1) = 1` because we can form only a single empty BST and single node BST in these cases respectively.\\n\\nThe final answer will be summation of answers considering all `1...n` as root nodes.\\n\\n```python\\n           3                          2                         1               \\n          / \\\\                        / \\\\                      /   \\\\      \\nnumTrees(2) numTrees(0)    numTrees(1) numTrees(1)   numTrees(0) numTrees(2)              \\n         i = 3                      i = 2                     i = 1           \\n\\t\\t \\n                      i\\n\\t=>              /   \\\\ \\n         numTrees(i-1)\\tnumTrees(n-i)\\n```\\n\\nWith that in mind, we have the following - \\n\\n<p align=\\'middle\\'>\\n<img src=https://assets.leetcode.com/users/images/be0cf3dd-364d-49d2-af1b-471be3a94855_1636332760.2597368.png />\\n</p>\\n\\n**C++**\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        if(n <= 1) return 1;\\n        int ans = 0;\\n        for(int i = 1; i <= n; i++) \\n            ans += numTrees(i-1) * numTrees(n-i);\\n        return ans;\\n    }\\n};\\n```\\n\\n**Python**\\n\\n\\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        if n <= 1: return 1\\n        return sum(self.numTrees(i-1) * self.numTrees(n-i) for i in range(1, n+1))\\n```\\n\\n***Time Complexity :*** <code><b>O(3<sup>N</sup>)</b></code>, where `N` is the given number of nodes in BST. Read **[here](https://stackoverflow.com/questions/27371612/catalan-numbers-recursive-function-time-complexity)** for proof.\\n***Space Complexity :*** **`O(N)`**, the maximum recursive stack depth.\\n\\n----\\n\\n\\u2714\\uFE0F ***Solution - II (Dynamic Programming - Memoization)***\\n\\nThe above approach times out due to lots of unnecessary repeated calculation.\\n\\n```ruby\\nf(i) = numTrees(i)\\n                                                                 f(5)\\n\\t\\t\\t\\t\\t\\t\\t\\t__________________________________|____________________________________________\\t\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t                  \\u2199                            \\u2193                \\u2193                \\u2193                 \\u2198\\n\\t\\t        (f(0)*           f(4))                 f(1)*f(3)        f(2)*f(2)        f(3)*f(1)          f(4)*f(0)\\n\\t\\t\\t\\t     _____________|_____________             \\u2B06\\uFE0F          \\u2B06\\uFE0F  \\u2B06\\uFE0F         \\u2B06\\uFE0F                 \\u2B06\\uFE0F\\n\\t\\t            \\u2199        \\u2193        \\u2193         \\u2198  \\t   \\n\\t        f(0)f(3)     f(1)f(2)   f(2)f(1)   f(3)f(0)      \\n\\t\\t   ______|_____       \\u2B06\\uFE0F\\t \\u2B06\\uFE0F        \\u2B06\\uFE0F\\n          \\u2199      \\u2193     \\u2198\\n      f(0)f(2) f(1)f(1) f(2)f(1)\\n          __|__\\t         \\u2B06\\uFE0F \\n     \\t\\u2199       \\u2198\\n     f(0)f(1)  f(1)f(0)\\n```\\n\\nIn the above diagram, drawing out even the partial recursion tree for the above approach, we can find that there are many redundant repeated calculations. We can instead store or memoize these result and later avoid repeated calculations over and over again.\\n\\nThe approach and code will be very similar. The only change is every time we calculate the result for `numTrees(i)`, we store the result in `dp[i]` and only then return it. After that, each time we encounter `dp[i]` that\\'s already calculated, we can directly return the result. This way, we won\\'t solve for the same `numTrees(i)` multiple times. \\n\\n**C++**\\n \\n```cpp\\nclass Solution {\\npublic:\\n    int dp[20]{};\\n    int numTrees(int n) {\\n        if(n <= 1) return 1;\\n        if(dp[n]) return dp[n];\\n        for(int i = 1; i <= n; i++) \\n            dp[n] += numTrees(i-1) * numTrees(n-i);\\n        return dp[n];\\n    }\\n};\\n```\\n\\n\\n**Python**\\n\\n```python\\nclass Solution:\\n    @cache\\n    def numTrees(self, n: int) -> int:\\n        if n <= 1: return 1\\n        return sum(self.numTrees(i-1) * self.numTrees(n-i) for i in range(1, n+1))\\n```\\n\\n***Time Complexity :*** <code><b>O(N<sup>2</sup>)</b></code> \\nHere we calculate `numTrees(i)` (for `1<=i<=N`) only once and memoize it which will take `O(N)`. For calculating each of `numTrees(i)`, we need `N` iterations to calculate `numTrees(0)*numTrees(i) + numTrees(1)*numTrees(i-1) + numTrees(2)*numTrees(i-2)+ ... + numTrees(i)*numTrees(0)`. Thus, the overall time complexity becomes `O(N*N)`.\\n***Space Complexity :*** **`O(N)`**, required for recursion and memoization\\n\\n---\\n\\n\\u2714\\uFE0F ***Solution - III (Dynamic Programming - Tabulation)***\\n\\nWe can also solve it using iterative dynamic programming. Again, the logic is similar to above with slight change in approach that we start from base conditions instead of other way around. \\n* We have base conditions of `dp[0] = dp[1] = 1`. \\n* Then we calculate result for each number of nodes `i` from `2...n` one after another.\\n* For `i` nodes. we can consider each of the node `j` from `1...i` as the root node of BST.\\n* Considering the `j`th node as the root node in BST having total of `i` nodes, the final result is summation  of `dp[j-1] * dp[i-j]`, for all `j` from `1...i`. (Comparing to above solution `dp[j-1] = numTrees(j-1)` and `dp[i-j]=numTrees(i-j)`)\\n\\n**C++**\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0] = dp[1] = 1;\\n        for(int i = 2; i <= n; i++) \\n            for(int j = 1; j <= i; j++)\\n                dp[i] += dp[j-1] * dp[i-j];\\n        return dp[n];\\n    }\\n};\\n```\\n\\n**Python**\\n\\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        dp = [0]*(n+1)\\n        dp[0], dp[1] = 1, 1\\n        for i in range(2, n+1):\\n            for j in range(1, i+1):\\n                dp[i] += dp[j-1] * dp[i-j]\\n        return dp[n]\\n```\\n\\n***Time Complexity :*** <code><b>O(N<sup>2</sup>)</b></code>, we iterate over the range `i=[2, n]` and iteratively calculate `dp[i]`. The total number of operations performed equals <code>2+3+4+5..n = (n*(n+1)/2)-1 \\u2248 O(N<sup>2</sup>)</code>\\n***Space Complexity :*** **`O(N)`**, required to store the results in `dp`\\n\\n---\\n\\n\\u2714\\uFE0F ***Solution - IV (Catalan Numbers)***\\n\\nObserving the series we get above for various `numTrees(n)`, we see that it is infact a series of popular numbers known as **[Catalan Numbers](https://en.wikipedia.org/wiki/Catalan_number)**. This approach is hard to get unless you are already familiar with catalan numbers and probably wont be expected in interview either. But I am mentioning this approach as another possible and more efficient solution to this question.\\n\\nWe can use the following formula for calculating catalan numbers <code>C<sub>n</sub></code> to calculate the result in `O(N)` time complexity -\\n\\n<p align=\\'middle\\'>\\n<img src=\"https://assets.leetcode.com/users/images/426d7a29-90f5-4316-8125-9eabbe88ebc9_1636339303.3556454.png\" width=300 />\\n</p>\\n\\nWe will use 1st equation of above image with binomial coefficient function - `ncr` in C++ to avoid overflow. In python, we can directly calculate factorial as it can handle long numbers\\n\\n**C++**\\n\\n```cpp\\nclass Solution {\\npublic:\\n    long ncr(int n, int r) {\\n        long ans = 1;\\n        for(int i = 0; i < r; i++) {\\n            ans *= n-i;\\n            ans /= i+1;\\n        }\\n        return ans;   \\n    }\\n    int numTrees(int n) {\\n        return ncr(2*n, n) / (n + 1);\\n    }\\n};\\n```\\n\\n<blockquote>\\n<details>\\n<summary><b>\\uD83D\\uDC49 Further Simplified! </b></summary>\\n\\nWe can further expand the above equation as follows to simplify the implementation in code -\\n\\n<p align=\\'middle\\'>\\n<img src=https://assets.leetcode.com/users/images/4d8fa0c1-0609-4b5c-a20e-07045e3308c6_1636369013.2969224.png />\\n</p>\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        long ans = 1;\\n        for(int i = 1; i < n; i++)  \\n            ans = ans*(n+i+1) / i;    // do note that numerator and denominator will always be divisible\\n        return ans / n;\\n    }\\n};\\n```\\n</details>\\n</blockquote>\\n\\n\\n**Python**\\n\\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        return factorial(2*n) // (factorial(n)*factorial(n+1))\\n```\\n\\n***Time Complexity :*** <code><b>O(N)</b></code> The `ncr` function runs in `O(N)` time. In python, the factorial function takes `O(N)` time as well.\\n***Space Complexity :*** **`O(1)`**\\n\\n---\\n\\n\\u2714\\uFE0F ***Solution - V (Catalan Numbers - 2)***\\n\\nThe **[Catalan Numbers](https://en.wikipedia.org/wiki/Catalan_number)** also follow the below recurrence relation - \\n\\n<p align=\\'middle\\'>\\n<img src=https://assets.leetcode.com/users/images/44f67316-d59f-48f5-9537-9f4991aa7e96_1636340974.5645378.png />\\n</p>\\n\\nThis can be said to be a kind of dynamic programming approach where our next result depends only on previous one. This is slightly easier to implement in code than the 1st formula for catalan numbers.\\n\\n**C++**\\n```cpp\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        long ans = 1;\\n        for(int i = 0; i < n; i++) \\n            ans *= (4*i+2) / (i+2.);\\n        return ans;\\n    }\\n};\\n```\\n\\n**Python**\\n\\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        return int(prod((4*i+2) / (i+2) for i in range(n)))\\n```\\n\\n***Time Complexity :*** <code><b>O(N)</b></code>\\n***Space Complexity :*** **`O(1)`**\\n\\n---\\n---\\n\\n\\uD83D\\uDCBBIf there are any suggestions / questions / mistakes in my post, comment below \\uD83D\\uDC47 \\n\\n---\\n---",
                "solutionTags": [],
                "code": "```python\\n\\t\\n              1            1                   2                    3               3\\n\\t           \\\\            \\\\                 / \\\\                  /               /\\n    \\t        3             2              1   3                2               1\\n               /               \\\\                                 /                 \\\\\\n              2                 3                              1                    2\\n                     i = 1                   i = 2                       i = 3           \\n(i = root node)\\n```\n```python\\n           3                          2                         1               \\n          / \\\\                        / \\\\                      /   \\\\      \\nnumTrees(2) numTrees(0)    numTrees(1) numTrees(1)   numTrees(0) numTrees(2)              \\n         i = 3                      i = 2                     i = 1           \\n\\t\\t \\n                      i\\n\\t=>              /   \\\\ \\n         numTrees(i-1)\\tnumTrees(n-i)\\n```\n```cpp\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        if(n <= 1) return 1;\\n        int ans = 0;\\n        for(int i = 1; i <= n; i++) \\n            ans += numTrees(i-1) * numTrees(n-i);\\n        return ans;\\n    }\\n};\\n```\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        if n <= 1: return 1\\n        return sum(self.numTrees(i-1) * self.numTrees(n-i) for i in range(1, n+1))\\n```\n```ruby\\nf(i) = numTrees(i)\\n                                                                 f(5)\\n\\t\\t\\t\\t\\t\\t\\t\\t__________________________________|____________________________________________\\t\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t                  \\u2199                            \\u2193                \\u2193                \\u2193                 \\u2198\\n\\t\\t        (f(0)*           f(4))                 f(1)*f(3)        f(2)*f(2)        f(3)*f(1)          f(4)*f(0)\\n\\t\\t\\t\\t     _____________|_____________             \\u2B06\\uFE0F          \\u2B06\\uFE0F  \\u2B06\\uFE0F         \\u2B06\\uFE0F                 \\u2B06\\uFE0F\\n\\t\\t            \\u2199        \\u2193        \\u2193         \\u2198  \\t   \\n\\t        f(0)f(3)     f(1)f(2)   f(2)f(1)   f(3)f(0)      \\n\\t\\t   ______|_____       \\u2B06\\uFE0F\\t \\u2B06\\uFE0F        \\u2B06\\uFE0F\\n          \\u2199      \\u2193     \\u2198\\n      f(0)f(2) f(1)f(1) f(2)f(1)\\n          __|__\\t         \\u2B06\\uFE0F \\n     \\t\\u2199       \\u2198\\n     f(0)f(1)  f(1)f(0)\\n```\n```cpp\\nclass Solution {\\npublic:\\n    int dp[20]{};\\n    int numTrees(int n) {\\n        if(n <= 1) return 1;\\n        if(dp[n]) return dp[n];\\n        for(int i = 1; i <= n; i++) \\n            dp[n] += numTrees(i-1) * numTrees(n-i);\\n        return dp[n];\\n    }\\n};\\n```\n```python\\nclass Solution:\\n    @cache\\n    def numTrees(self, n: int) -> int:\\n        if n <= 1: return 1\\n        return sum(self.numTrees(i-1) * self.numTrees(n-i) for i in range(1, n+1))\\n```\n```cpp\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0] = dp[1] = 1;\\n        for(int i = 2; i <= n; i++) \\n            for(int j = 1; j <= i; j++)\\n                dp[i] += dp[j-1] * dp[i-j];\\n        return dp[n];\\n    }\\n};\\n```\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        dp = [0]*(n+1)\\n        dp[0], dp[1] = 1, 1\\n        for i in range(2, n+1):\\n            for j in range(1, i+1):\\n                dp[i] += dp[j-1] * dp[i-j]\\n        return dp[n]\\n```\n```cpp\\nclass Solution {\\npublic:\\n    long ncr(int n, int r) {\\n        long ans = 1;\\n        for(int i = 0; i < r; i++) {\\n            ans *= n-i;\\n            ans /= i+1;\\n        }\\n        return ans;   \\n    }\\n    int numTrees(int n) {\\n        return ncr(2*n, n) / (n + 1);\\n    }\\n};\\n```\n```cpp\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        long ans = 1;\\n        for(int i = 1; i < n; i++)  \\n            ans = ans*(n+i+1) / i;    // do note that numerator and denominator will always be divisible\\n        return ans / n;\\n    }\\n};\\n```\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        return factorial(2*n) // (factorial(n)*factorial(n+1))\\n```\n```cpp\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        long ans = 1;\\n        for(int i = 0; i < n; i++) \\n            ans *= (4*i+2) / (i+2.);\\n        return ans;\\n    }\\n};\\n```\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        return int(prod((4*i+2) / (i+2) for i in range(n)))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 31707,
                "title": "fantastic-clean-java-dp-solution-with-detail-explaination",
                "content": "First note that dp[k] represents the number of BST trees built from 1....k;\\n\\nThen assume we have the number of the first 4 trees: dp[1] = 1 ,dp[2] =2 ,dp[3] = 5, dp[4] =14 , how do we get dp[5] based on these four numbers is the core problem here.\\n\\nThe essential process is: to build a tree, we need to pick a root node, then we need to know how many possible left sub trees and right sub trees can be held under that node, finally multiply them.\\n\\nTo build a tree contains {1,2,3,4,5}. First we pick 1 as root, for the left sub tree, there are none; for the right sub tree, we need count how many possible trees are there constructed from {2,3,4,5}, apparently it's the same number as {1,2,3,4}. So the total number of trees under \"1\" picked as root is dp[0] * dp[4] = 14. (assume dp[0] =1). Similarly, root 2 has dp[1]*dp[3] = 5 trees. root 3 has dp[2]*dp[2] = 4, root 4 has dp[3]*dp[1]= 5 and root  5 has dp[0]*dp[4] = 14. Finally sum the up and it's done.\\n\\nNow, we may have a better understanding of the dp[k], which essentially represents the number of BST trees with k consecutive nodes. It is used as database when we need to know how many left sub trees are possible for k nodes when picking (k+1) as root. \\n\\n     public int numTrees(int n) {\\n        int [] dp = new int[n+1];\\n        dp[0]= 1;\\n        dp[1] = 1;\\n        for(int level = 2; level <=n; level++)\\n            for(int root = 1; root<=level; root++)\\n                dp[level] += dp[level-root]*dp[root-1];\\n        return dp[n];\\n    }",
                "solutionTags": [],
                "code": "First note that dp[k] represents the number of BST trees built from 1....k;\\n\\nThen assume we have the number of the first 4 trees: dp[1] = 1 ,dp[2] =2 ,dp[3] = 5, dp[4] =14 , how do we get dp[5] based on these four numbers is the core problem here.\\n\\nThe essential process is: to build a tree, we need to pick a root node, then we need to know how many possible left sub trees and right sub trees can be held under that node, finally multiply them.\\n\\nTo build a tree contains {1,2,3,4,5}. First we pick 1 as root, for the left sub tree, there are none; for the right sub tree, we need count how many possible trees are there constructed from {2,3,4,5}, apparently it's the same number as {1,2,3,4}. So the total number of trees under \"1\" picked as root is dp[0] * dp[4] = 14. (assume dp[0] =1). Similarly, root 2 has dp[1]*dp[3] = 5 trees. root 3 has dp[2]*dp[2] = 4, root 4 has dp[3]*dp[1]= 5 and root  5 has dp[0]*dp[4] = 14. Finally sum the up and it's done.\\n\\nNow, we may have a better understanding of the dp[k], which essentially represents the number of BST trees with k consecutive nodes. It is used as database when we need to know how many left sub trees are possible for k nodes when picking (k+1) as root. \\n\\n     public int numTrees(int n) {\\n        int [] dp = new int[n+1];\\n        dp[0]= 1;\\n        dp[1] = 1;\\n        for(int level = 2; level <=n; level++)\\n            for(int root = 1; root<=level; root++)\\n                dp[level] += dp[level-root]*dp[root-1];\\n        return dp[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 703049,
                "title": "python-math-oneliner-o-n-using-catalan-number-explained",
                "content": "In this problem we are asked to get number of trees and not necceseraly to return all trees, only **number**. Here we can use the idea of **dynamic programming**, let `dp[n]` be the number of unique Binary Search Trees with `n` nodes. How can we evaluate them: we need to choose number of nodes in the left subtree and number of nodes in the right subtree, for example `n=5`, then we have options:\\n1. left subtree has 0 nodes, root = 1, and right subtree has 4 nodes, number of options `f[0]*f[4]`\\n2. left subtree has 1 nodes, root = 2, and right subtree has 3 nodes, number of options `f[1]*f[3]`\\n3. left subtree has 2 nodes, root = 3, and right subtree has 2 nodes, number of options `f[2]*f[2]`\\n4. left subtree has 3 nodes, root = 4, and right subtree has 1 nodes, number of options `f[3]*f[1]`\\n5. left subtree has 4 nodes, root = 5, and right subtree has 0 nodes, number of options `f[4]*f[0]`\\n\\nSo, in total `f[5] = f[0]*f[4] + f[1]*f[3] + f[2]*f[2] + f[3]*f[1] + f[4]*f[0]`, and in general:\\n`f[n] = f[0]*f[n-1] + f[1]*f[n-2] + ... + f[n-2]*f[1] + f[n-1]*f[0]`.\\n\\nWe can solve this in classical **dynamic programming** way with `O(n^2)` complexity. However we can recognize in this formula **Catalan Numbers**: https://en.wikipedia.org/wiki/Catalan_number and there is direct formula to evaluate them:\\n`f[n] = (2n)!/(n! * n! * (n+1))`.\\n\\n**Complexity**: time complexity is `O(n)` to evaluate all factorials, space complexity is `O(1)`.\\n\\n```\\nclass Solution:\\n    def numTrees(self, n):\\n        return factorial(2*n)//factorial(n)//factorial(n)//(n+1)\\n```\\n\\nIf you have any questions, feel free to ask. If you like solution and explanations, please **Upvote!**",
                "solutionTags": [
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n):\\n        return factorial(2*n)//factorial(n)//factorial(n)//(n+1)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1109205,
                "title": "detailed-analysis-3-different-approaches-explained",
                "content": "Let `C(i)` denote the number of nodes on left side of `root` \\n-> `C(n-i-1)` denotes the number of nodes on right side of `root`\\nHence the total number of **BST** possible will be : `C(i) * C(n-i-1)` **for a given root** \\n->Total number of BST possible will be : `m * C(i) * C(n-i-1)` , where `m`: number of different root configurations\\nSo, for example , the various *BST* for n=3:\\n![image](https://assets.leetcode.com/users/images/f1bb3c6c-f7ee-4276-ae1f-a4d09289a885_1615722107.5216558.png)\\n\\n`C(0)*C(2)  +  C(2)*C(0) + C(1)* C(1)` --> **This is known as Catalan number**\\nHence, the given question is asking us to find the **Catalan Number** `C` of a number `n`:\\n`C(n)= C(i) * C(n-i-1)` => `i` varies from `0` to `n-1`\\n\\nIt can be found in three ways:\\n\\n**1.) Recursion:** Worst approach (results in TLE)\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        int result=0;\\n        if(n==1 || n==0)\\n            return 1;\\n        for(int i=0;i<n;i++)\\n            result+=numTrees(i)*numTrees(n-i-1);\\n        return result;\\n    }\\n};\\n```\\n*Time Complexity: O(3^n)*\\n*For more details on this, visit this:* [https://stackoverflow.com/questions/27371612/catalan-numbers-recursive-function-time-complexity](http://)\\n\\n**2.) Dynamic Programming:** Better than Recursion\\nConcept: Instead of doing recursive calls to calculate `C(n-2).....C(1)` every time, we store the results of previous iteration in an array `result` . Doing so results in making only one call per function as we already know the value of `C(n-1)`,reducing overall runtime\\n\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int>result(n+1,0); //Initializing vector with 0\\n        result[1]=result[0]=1;\\n        for(int i=2;i<=n;i++)\\n        {\\n            for(int j=0;j<i;j++)\\n            {\\n                result[i]+=result[j]*result[i-j-1]; //Calculating C(i) to use for C(i+1) and storing it in result\\n            }\\n        }\\n        return result[n]; //return answer\\n    }\\n};\\n```\\n*Time Complexity : O(n^2)\\nSpace Complexity : O(n)*\\n\\n**3.) Binomial Coefficient:** Best approach\\nConcept: Instead of doing it again and again like in DP and recursion, there is a well known formula to calculate Catalan Number, which is\\n\\n\\t\\t\\t\\t\\t\\t`C(n)=Ci(2n,n)/n+1`\\nwhere `Ci`: Binomial Coefficient\\n\\n*For those interested in proof of this, visit this link:* [https://en.wikipedia.org/wiki/Catalan_number](http://) \\n```\\nclass Solution {\\npublic:\\n    long CalculateCoeff(int n,int k) //Function to calculate Ci(n.k)\\n    {\\n        long res=1;\\n        if(k>n-k)\\n            k=n-k;                    //Since Ci(n,k)=Ci(n,n-k), property of binomial coefficients\\n        for(int i=0;i<k;i++)\\n        {\\n            res*=(n-i);\\n            res/=(i+1);\\n        }\\n        return res;\\n    }\\n    int numTrees(int n) {\\n        return CalculateCoeff(2*n,n)/(n+1);\\n    }\\n};\\n```\\n*Time Complexity : O(n)\\nSpace Complexity : O(n)*\\n***Runtime** in both Approach 2 and Approach 3 is **0ms***\\n\\nI hope this article helped some of you, I tried my best to eplain everything \\nIf you like, please **UPVOTE**\\nHappy Coding :)",
                "solutionTags": [
                    "C++",
                    "C",
                    "Dynamic Programming",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        int result=0;\\n        if(n==1 || n==0)\\n            return 1;\\n        for(int i=0;i<n;i++)\\n            result+=numTrees(i)*numTrees(n-i-1);\\n        return result;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int>result(n+1,0); //Initializing vector with 0\\n        result[1]=result[0]=1;\\n        for(int i=2;i<=n;i++)\\n        {\\n            for(int j=0;j<i;j++)\\n            {\\n                result[i]+=result[j]*result[i-j-1]; //Calculating C(i) to use for C(i+1) and storing it in result\\n            }\\n        }\\n        return result[n]; //return answer\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    long CalculateCoeff(int n,int k) //Function to calculate Ci(n.k)\\n    {\\n        long res=1;\\n        if(k>n-k)\\n            k=n-k;                    //Since Ci(n,k)=Ci(n,n-k), property of binomial coefficients\\n        for(int i=0;i<k;i++)\\n        {\\n            res*=(n-i);\\n            res/=(i+1);\\n        }\\n        return res;\\n    }\\n    int numTrees(int n) {\\n        return CalculateCoeff(2*n,n)/(n+1);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 31706,
                "title": "dp-problem-10-lines-with-comments",
                "content": "    /**\\n     * Taking 1~n as root respectively:\\n     *      1 as root: # of trees = F(0) * F(n-1)  // F(0) == 1\\n     *      2 as root: # of trees = F(1) * F(n-2) \\n     *      3 as root: # of trees = F(2) * F(n-3)\\n     *      ...\\n     *      n-1 as root: # of trees = F(n-2) * F(1)\\n     *      n as root:   # of trees = F(n-1) * F(0)\\n     *\\n     * So, the formulation is:\\n     *      F(n) = F(0) * F(n-1) + F(1) * F(n-2) + F(2) * F(n-3) + ... + F(n-2) * F(1) + F(n-1) * F(0)\\n     */\\n\\n    int numTrees(int n) {\\n        int dp[n+1];\\n        dp[0] = dp[1] = 1;\\n        for (int i=2; i<=n; i++) {\\n            dp[i] = 0;\\n            for (int j=1; j<=i; j++) {\\n                dp[i] += dp[j-1] * dp[i-j];\\n            }\\n        }\\n        return dp[n];\\n    }",
                "solutionTags": [],
                "code": "    /**\\n     * Taking 1~n as root respectively:\\n     *      1 as root: # of trees = F(0) * F(n-1)  // F(0) == 1\\n     *      2 as root: # of trees = F(1) * F(n-2) \\n     *      3 as root: # of trees = F(2) * F(n-3)\\n     *      ...\\n     *      n-1 as root: # of trees = F(n-2) * F(1)\\n     *      n as root:   # of trees = F(n-1) * F(0)\\n     *\\n     * So, the formulation is:\\n     *      F(n) = F(0) * F(n-1) + F(1) * F(n-2) + F(2) * F(n-3) + ... + F(n-2) * F(1) + F(n-1) * F(0)\\n     */\\n\\n    int numTrees(int n) {\\n        int dp[n+1];\\n        dp[0] = dp[1] = 1;\\n        for (int i=2; i<=n; i++) {\\n            dp[i] = 0;\\n            for (int j=1; j<=i; j++) {\\n                dp[i] += dp[j-1] * dp[i-j];\\n            }\\n        }\\n        return dp[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31826,
                "title": "python-solutions-dp-catalan-number",
                "content": "   \\n    # DP\\n    def numTrees1(self, n):\\n        res = [0] * (n+1)\\n        res[0] = 1\\n        for i in xrange(1, n+1):\\n            for j in xrange(i):\\n                res[i] += res[j] * res[i-1-j]\\n        return res[n]\\n     \\n    # Catalan Number  (2n)!/((n+1)!*n!)  \\n    def numTrees(self, n):\\n        return math.factorial(2*n)/(math.factorial(n)*math.factorial(n+1))",
                "solutionTags": [
                    "Python",
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "   \\n    # DP\\n    def numTrees1(self, n):\\n        res = [0] * (n+1)\\n        res[0] = 1\\n        for i in xrange(1, n+1):\\n            for j in xrange(i):\\n                res[i] += res[j] * res[i-1-j]\\n        return res[n]\\n     \\n    # Catalan Number  (2n)!/((n+1)!*n!)  \\n    def numTrees(self, n):\\n        return math.factorial(2*n)/(math.factorial(n)*math.factorial(n+1))",
                "codeTag": "Python3"
            },
            {
                "id": 409987,
                "title": "summary-of-all-solutions-in-java-with-explanations",
                "content": "Reference: [LeetCode](https://leetcode.com/problems/unique-binary-search-trees/) <span class=\"gray\">EPI 15.9</span>\\nDifficulty: <span class=\"orange\">Medium</span>\\n\\n## Problem\\n\\n> Given `n`, how many structurally unique BST\\'s (binary search trees) that store values `1 ... n`?\\n\\n**Example:** \\n\\n```java\\nInput: 3\\nOutput: 5\\nExplanation:\\nGiven n = 3, there are a total of 5 unique BST\\'s:\\n\\n   1         3     3      2      1\\n    \\\\       /     /      / \\\\      \\\\\\n     3     2     1      1   3      2\\n    /     /       \\\\                 \\\\\\n   2     1         2                 3\\n```\\n\\n## Analysis\\n\\n### DP (Recursion)\\n\\nReference: [LeetCode Solution](https://leetcode.com/problems/unique-binary-search-trees/solution/)\\n\\nGiven a sequence `1, 2, ..., n`, we enumerate each number `i` in the sequence and take it as the root to form binary trees.\\n\\nWe define two functions:\\n\\n- `G(n)`: the number of unique BST for a sequence of length `n` (number of nodes).\\n- `F(i, n)`: the number of unique BST, where the number `i` (`1 <= i <= n`) is the root.\\n\\nWe construct `G(n)` by the sum of `F(i, n)`:\\n\\n`G(n) = \\\\sum^n_{i=1}F(i, n) = F(1, n) + F(2, n) + ... + F(n, n)`\\n\\nNotice that when we select `i` as a root i.e. `F(i, n)`, we have `i - 1` nodes which can be used to form a left subtree; similarly we have `n - i` nodes to form a right subtree. \\n\\n`F(i,n) = G(i - 1) x G(n - i)`\\n\\nThus, `F(i, n)` can be calculated by the product of the number of unique BST with `i - 1` nodes and the number of unique BST with `n - i` nodes. **Uniqueness is guaranteed by the sizes of the left subtree and the right subtree.**\\n\\nParticularly, consider two base cases when `i = 1` and `i = 2`:\\n\\n- `i = 1`: `F(1, n) = G(0) x G(n - 1)`. The empty left subtree is still a subtree, so `G(0) = 1`.\\n- `i = 2`: `F(2, n) = G(1) x G(n - 2)`. With one node we can only construct one unique left subtree, so `G(1) = 1`.\\n\\nFinally, we have the recurrence:\\n\\n`G(n) = \\\\sum^n_{i=1}F(i,n) = \\\\sum^n_{i=1} G(i - 1) x G(n - i)`\\n`\\\\text{where}\\\\ \\\\  G(0)=1, G(1)=1`\\n\\nHere is the code without memoization.\\n\\n```java\\n// numTress(n) is G(n)\\npublic int numTrees(int n) {\\n  if (n == 0 || n == 1) {\\n    return 1;\\n  }\\n  int sum = 0;\\n  for (int i = 1; i <= n; ++i) {\\n    sum += numTrees(i - 1) * numTrees(n - i);\\n  }\\n  return sum;\\n}\\n```\\n\\nHere is the recurrence tree:\\n\\n```java\\n                               G(4)\\n                     /      |        |        \\\\\\n             G(0)G(3)     G(1)G(2)  G(2)G(1)   G(3)G(0)        // 4\\n            /    |    \\\\\\n    G(0)G(2)  G(1)G(1)  G(2)G(0)                               // 4 x 3\\n    /     \\\\\\nG(0)G(1)  G(1)G(0) // base case                                // 4 x 3 x 2\\n```\\n\\n`C(N) = N x N!`\\n\\n**Time:** It is at most bounded by `O(N x N!)`. A tighter bound would be Catalan number times `N` since we\\'ve done `N` times, which is `N x G_N = O(N x \\\\frac{4^N}{N^{3/2}}) = O(\\\\frac{4^N}{N^{1/2}})`.\\n**Space:** `O(N)`\\n\\nExamining the recurrence carefully, we find that there are repeated calculations.\\n\\n```java\\nG(3) = G(0) x G(2)  // i = 1\\n     = G(1) x G(1)  // i = 2\\n     = G(2) x G(0)  // i = 3\\n\\nG(4) = G(0) x G(3)  // i = 1\\n     = G(1) x G(2)  // i = 2\\n     = G(2) x G(1)  // i = 3\\n     = G(3) x G(0)  // i = 4\\n```\\n\\nTherefore, we can use a `hash map` or an `integer array` to store calculated `G(n)`. Here is the hash map version.\\n\\n```java\\nMap<Integer, Integer> map = new HashMap<>();\\npublic int numTrees(int n) {\\n  if (n == 0 || n == 1) {\\n    return 1;\\n  }\\n  int sum = 0;\\n  for (int i = 1; i <= n; ++i) {\\n    if (!map.containsKey(i - 1)) {\\n      map.put(i - 1, numTrees(i - 1));\\n    }\\n    if (!map.containsKey(n - i)) {\\n      map.put(n - i, numTrees(n - i));\\n    }\\n    sum += map.get(i - 1) * map.get(n - i);\\n  }\\n  return sum;\\n}\\n```\\n\\nHere is the recurrence tree:\\n\\n```java\\n                               G(4)\\n                     /      |        |        \\\\\\n             G(0)G(3)     G(1)G(2)  G(2)G(1)   G(3)G(0)\\n            /    |    \\\\\\n    G(0)G(2)  G(1)G(1)  G(2)G(0)\\n    /     \\\\\\nG(0)G(1)  G(1)G(0) // base case\\n```\\n\\n**Note:** Without memoization, the time complexity is upper bounded by `O(N x N!)`.\\n\\nBy calculating the leftmost nodes, we have `G(0), G(1), ..., G(N)`, which takes `O(N)` time. Besides, we have to do product computations at each level, which takes `2 + 3 + 4 + ... + N = O(N^2)` time in total.\\n\\n**Time:** `O(N^2)`\\n**Space:** `O(N)` because of call stacks.\\n\\n\\n### DP (Iteration)\\n\\nBy observation, we can construct our solution by a bottom-up approach.\\n\\nThe recurrence formula: `G(n) = \\\\sum^n_i G(i - 1) x G(n - i)`\\n\\nFor example, `G(4) = G(0) x G(3) + G(1) x G(2) + G(2) x G(1) + G(3) x G(0)`\\n\\n```java\\nG(0) G(1)\\n// With these initially two base-case values, we can calculate G(2)\\nG(0) G(1) G(2)\\n// With these three values we have G(3)\\nG(0) G(1) G(2) G(3)\\n// ...\\n```\\n\\n**Note:** Notice that it is `G[i - j]` instead of `G[n - j]` and it is `j <= i` instead of `j <= n`.\\n\\n```java\\npublic int numTrees(int n) {\\n  int[] G = new int[n + 1];\\n  G[0] = 1; G[1] = 1; // init\\n  for (int i = 2; i <= n; ++i) {\\n    for (int j = 1; j <= i; ++j) { // sum\\n      G[i] += G[j - 1] * G[i - j];\\n    }\\n  }\\n  return G[n];\\n}\\n```\\n\\n**Time:** `O(N^2)`\\n**Space:** `O(N)`\\n\\n\\n\\n\\n\\n### Mathematical Deduction\\n\\nThe sequence of `G(n)` function results is known as `Catelan number` `C_n`.\\n\\n![](https://bloggg-1254259681.cos.na-siliconvalley.myqcloud.com/0bq2c.png)\\n\\n**Note:** Use `long` type.\\n\\n```java\\nC = 2 * (2 * i + 1) / (i + 2) * C;\\n```\\n\\n\\nIf we put `C` at the end of the statement, the result is not correct. **Do all multiplications first!** For example, when `i = 2` and `C_2 = 2`, we would have:\\n\\n- `C = 2 * (2 * 2 + 1) / (2 + 2) * C_2 = 2 * (5) / 4 * 2 = 10 / 4 * 2 = 4`\\n- instead of `C = 2 * 10 / 4 = 5`.\\n\\n```java\\npublic int numTrees(int n) {\\n  long C = 1;\\n  for (int i = 0; i < n; ++i) { // i stops at n - 1\\n    C = C * 2 * (2 * i + 1) / (i + 2); // calculate C_i+1\\n  }\\n  return (int) C;\\n}\\n```\\n\\n**Time:** `O(N)`\\n**Space:** `O(1)`",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming",
                    "Recursion",
                    "Iterator"
                ],
                "code": "```java\\nInput: 3\\nOutput: 5\\nExplanation:\\nGiven n = 3, there are a total of 5 unique BST\\'s:\\n\\n   1         3     3      2      1\\n    \\\\       /     /      / \\\\      \\\\\\n     3     2     1      1   3      2\\n    /     /       \\\\                 \\\\\\n   2     1         2                 3\\n```\n```java\\n// numTress(n) is G(n)\\npublic int numTrees(int n) {\\n  if (n == 0 || n == 1) {\\n    return 1;\\n  }\\n  int sum = 0;\\n  for (int i = 1; i <= n; ++i) {\\n    sum += numTrees(i - 1) * numTrees(n - i);\\n  }\\n  return sum;\\n}\\n```\n```java\\n                               G(4)\\n                     /      |        |        \\\\\\n             G(0)G(3)     G(1)G(2)  G(2)G(1)   G(3)G(0)        // 4\\n            /    |    \\\\\\n    G(0)G(2)  G(1)G(1)  G(2)G(0)                               // 4 x 3\\n    /     \\\\\\nG(0)G(1)  G(1)G(0) // base case                                // 4 x 3 x 2\\n```\n```java\\nG(3) = G(0) x G(2)  // i = 1\\n     = G(1) x G(1)  // i = 2\\n     = G(2) x G(0)  // i = 3\\n\\nG(4) = G(0) x G(3)  // i = 1\\n     = G(1) x G(2)  // i = 2\\n     = G(2) x G(1)  // i = 3\\n     = G(3) x G(0)  // i = 4\\n```\n```java\\nMap<Integer, Integer> map = new HashMap<>();\\npublic int numTrees(int n) {\\n  if (n == 0 || n == 1) {\\n    return 1;\\n  }\\n  int sum = 0;\\n  for (int i = 1; i <= n; ++i) {\\n    if (!map.containsKey(i - 1)) {\\n      map.put(i - 1, numTrees(i - 1));\\n    }\\n    if (!map.containsKey(n - i)) {\\n      map.put(n - i, numTrees(n - i));\\n    }\\n    sum += map.get(i - 1) * map.get(n - i);\\n  }\\n  return sum;\\n}\\n```\n```java\\n                               G(4)\\n                     /      |        |        \\\\\\n             G(0)G(3)     G(1)G(2)  G(2)G(1)   G(3)G(0)\\n            /    |    \\\\\\n    G(0)G(2)  G(1)G(1)  G(2)G(0)\\n    /     \\\\\\nG(0)G(1)  G(1)G(0) // base case\\n```\n```java\\nG(0) G(1)\\n// With these initially two base-case values, we can calculate G(2)\\nG(0) G(1) G(2)\\n// With these three values we have G(3)\\nG(0) G(1) G(2) G(3)\\n// ...\\n```\n```java\\npublic int numTrees(int n) {\\n  int[] G = new int[n + 1];\\n  G[0] = 1; G[1] = 1; // init\\n  for (int i = 2; i <= n; ++i) {\\n    for (int j = 1; j <= i; ++j) { // sum\\n      G[i] += G[j - 1] * G[i - j];\\n    }\\n  }\\n  return G[n];\\n}\\n```\n```java\\nC = 2 * (2 * i + 1) / (i + 2) * C;\\n```\n```java\\npublic int numTrees(int n) {\\n  long C = 1;\\n  for (int i = 0; i < n; ++i) { // i stops at n - 1\\n    C = C * 2 * (2 * i + 1) / (i + 2); // calculate C_i+1\\n  }\\n  return (int) C;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 31696,
                "title": "simple-recursion-java-solution-with-explanation",
                "content": "The idea is to use each number i as root node, then the left branch will be what's less than i, the right branch will be what's larger than i. The total number of distinct structure is their product. Thus, sum up the product for all numbers. Use a map to memorize the visited number.\\n\\n    public class Solution {\\n        public int numTrees(int n) {\\n            Map<Integer, Integer> map = new HashMap<Integer, Integer>();\\n            map.put(0,1);\\n            map.put(1,1);\\n            return numTrees(n, map);\\n        }\\n        \\n        private int numTrees(int n, Map<Integer, Integer> map){\\n            // check memory\\n            if(map.containsKey(n)) return map.get(n);\\n            // recursion\\n            int sum = 0;\\n            for(int i = 1;i <= n;i++)\\n                sum += numTrees(i-1, map) * numTrees(n-i, map);\\n            map.put(n, sum);\\n            return sum;\\n        }\\n    }",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "class Solution {\\n        public int numTrees(int n) {\\n            Map<Integer, Integer> map = new HashMap<Integer, Integer>();\\n            map.put(0,1);\\n            map.put(1,1);\\n            return numTrees(n, map);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 703644,
                "title": "python-easy-dp-solution-explained-by-someone-who-used-to-struggle-to-understand-dp",
                "content": "First of all, I am so happy because I was able to solve this problem without any help :) So, I am going to explained how I improved my DP skills. Of course, this is a \"medium\" question and I still struggle with the hard ones but I can see some improvement and I want to share my tips with you.\\n\\n***How to understand if a problem is DP problem?***\\nWell, I still struggle to understand that for some problem types but basically if you think that you can solve the problem easily by knowing the solution for previous values(like the solution on the previous grids for 2D cases or the solution for n-1 etc.), it is probably a DP problem.\\n\\nDP problems are usually an iterative version of a recursive solution. I find it easy to think about recursive solution first and then convert it to DP. \\n\\n**1. Recursive + Memoization**\\n\\nWe need to calculate how many possible trees can be made. \\nIf there is only ```1``` node then it is easy. The answer is 1. \\nFor ```2``` we can construct ```2``` different trees: One of the node is root, the second one can either be a left child or right child.\\n```\\nn = 2\\n\\n   1                            1\\n  /              or               \\\\\\n2\\t                                2\\n```\\nEasy!\\nWhat about n=3?\\n```\\n   1         3     3      2      1\\n    \\\\       /     /      / \\\\      \\\\\\n\\t---------------------------------- Let\\'s cut the trees from here\\n     3     2     1      1   3      2\\n    /     /       \\\\                 \\\\\\n   2     1         2                 3\\n ```\\nAs you can see, from where we cut, the bottom of the tree is actually another tree where the same logic applies. So the only thing we need to decide is how to distrubute the remaining nodes to childs of the root. The options can be:\\n```\\n------num of nodes------\\nleft_child   right_child\\n     0             2 --> These are the subtrees, like the new trees with n = 0 and n = 2\\n     1             1\\n     2             0\\n```\\nTo find how many possible solutions are there for n=3, add up all these possibilities . We can call the same function for calculating the values in all the options because it is actually the same problem. \\nTo sum up, we picked the root and then we need to decide on how the left and right subtrees will look like. The options are how many nodes can be on the left and right subtree at the same time.\\n\\n```\\n       -------------- 3 ---------------\\n\\t  /\\t\\t          |                \\\\\\n  /      \\\\\\t      /      \\\\\\t \\t   /\\t    \\\\\\n  0     --2--    1        1     --2--        0\\n       /     \\\\                 /     \\\\  \\n\\t /\\\\       /\\\\             /\\\\       /\\\\\\n\\t1  0     0  1           1  0     0  1\\n\\n```\\nHere is my attempt to draw the recursion tree. Even for a small n value there are multiple overlapping problems. So I used a memoization table and saved the values on that table before returning the total value from the function and if the value that we are looking for exists on the table, return that value without doing any extra calculations.\\n\\nHere is the code:\\n\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        self.table = [-1] * (n+1)\\n        self.table[0] = 1\\n        return self.numTreesRec(n)\\n        \\n    def numTreesRec(self, n):\\n        if self.table[n] != -1:\\n            return self.table[n]\\n        total = 0\\n        for m in range(n):\\n            total += (self.numTreesRec(n-1-m) * self.numTreesRec(m))\\n        self.table[n] = total\\n        return total\\n```\\n\\n**2. Dynamic Programming**\\nNow, we have our recursive solution. As you can see from the above recursion tree, values are calculated starting from 0 and then 1 and goes like this until n. The means we can do it iteratively. We can start from 1 (n=0 are our base case) and calculate the values upto n. So, I created a dp table and the solution for n = i is stored at dp[i]. Now, if we go back to our example, for n=3:\\n```\\n0 2 \\n1 1\\n2 0\\n```\\nWe have these options for distributing the remaining nodes to subtrees. We already calculated the values for 0, 1 and 2 because we used iterative approach. Therefore solution for dp[3] will be\\n```\\ndp[3] = dp[0] * dp[2] + dp[1] * dp[1] + dp[2] * dp[0]\\n```\\n\\nwhich is done by the inner for loop in the code.\\n\\nHere is the code:\\n\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        dp = [0] * (n+1)\\n        dp[0] = 1\\n        for i in range(1, n+1):\\n            for j in range(i):\\n                dp[i] += dp[j] * dp[i- 1 - j]\\n        return dp[n]\\n```\\n\\nThe time complexity is O(n^2) and the space complexity is O(n). There is a better solution by using catalan numbers. \\n\\nI tried  my best to explain how I think when solving  a dp problem. Hope that it helps and don\\'t worry if you are having diffuculties. Practice makes perfect!",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Dynamic Programming",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```1```\n```2```\n```2```\n```\\nn = 2\\n\\n   1                            1\\n  /              or               \\\\\\n2\\t                                2\\n```\n```\\n   1         3     3      2      1\\n    \\\\       /     /      / \\\\      \\\\\\n\\t---------------------------------- Let\\'s cut the trees from here\\n     3     2     1      1   3      2\\n    /     /       \\\\                 \\\\\\n   2     1         2                 3\\n ```\n```\\n------num of nodes------\\nleft_child   right_child\\n     0             2 --> These are the subtrees, like the new trees with n = 0 and n = 2\\n     1             1\\n     2             0\\n```\n```\\n       -------------- 3 ---------------\\n\\t  /\\t\\t          |                \\\\\\n  /      \\\\\\t      /      \\\\\\t \\t   /\\t    \\\\\\n  0     --2--    1        1     --2--        0\\n       /     \\\\                 /     \\\\  \\n\\t /\\\\       /\\\\             /\\\\       /\\\\\\n\\t1  0     0  1           1  0     0  1\\n\\n```\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        self.table = [-1] * (n+1)\\n        self.table[0] = 1\\n        return self.numTreesRec(n)\\n        \\n    def numTreesRec(self, n):\\n        if self.table[n] != -1:\\n            return self.table[n]\\n        total = 0\\n        for m in range(n):\\n            total += (self.numTreesRec(n-1-m) * self.numTreesRec(m))\\n        self.table[n] = total\\n        return total\\n```\n```\\n0 2 \\n1 1\\n2 0\\n```\n```\\ndp[3] = dp[0] * dp[2] + dp[1] * dp[1] + dp[2] * dp[0]\\n```\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        dp = [0] * (n+1)\\n        dp[0] = 1\\n        for i in range(1, n+1):\\n            for j in range(i):\\n                dp[i] += dp[j] * dp[i- 1 - j]\\n        return dp[n]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1565533,
                "title": "java-simple-clean-dp-solution-w-detailed-example-beats-100-tc-o-n-2-sc-o-n",
                "content": "This is a **Dynamic Programming (DP) question**.\\n\\nLet us assume: \\n`R(n)` represents the total number of unique Binary Search Trees with `n` nodes.\\n\\nFor `n == 0`, empty tree is a valid BST. Thus `R(0) = 1`.\\nFor `n == 1`, valid BST can have only one node. Thus `R(1) = 1`.\\nFor `n == 2`, valid BST can have only two nodes. Thus there can be following valid BSTs:\\n```\\n   1                                2\\n\\t \\\\                            /\\n\\t   2                        1\\n```\\nThus, `R(2) = R(0)*R(1) + R(1)*R(0) = 1 + 1 = 2`\\n\\nFor `n == 3`, valid BST can have only three nodes. Thus there can be following valid BSTs:\\n```\\n   1                1                2                  3                 3\\n\\t\\\\                \\\\              / \\\\                /                 /\\n\\t 2                3            1   3              2                 1\\n      \\\\              /                               /                   \\\\\\n\\t   3            2                               1                     2\\n```\\nThus, `R(3) = R(0)*R(2) + R(1)*R(1) + R(2)*R(0) = 2 + 1 + 2 = 5`\\n\\nTherefore, our generalized DP equation is: \\n`R(n) = R(0)*R(n-1) + R(1)*R(n-2) + R(2)*R(n-3) + ...... + R(n-3)*R(2) + R(n-2)*R(1) + R(n-1)*R(0)`\\n\\n---\\n**Time Complexity:** `O(N * N/2) = O(N^2)`. --> We only traverse `half of i` for `dp[i]`, as the DP equation is symmetrical.\\n\\n**Space Complexity:** `O(N)` --> Required for DP array.\\n\\n---\\n**Solution**\\n\\n```java\\nclass Solution {\\n    public int numTrees(int n) {\\n        // Checking for Invalid Input\\n        if (n < 0) {\\n            throw new IllegalArgumentException(\"Invalid Input\");\\n        }\\n        // For n == 0, empty tree is a valid BST.\\n        // For n == 1, valid BST can have only one node.\\n        if (n <= 1) {\\n            return 1;\\n        }\\n\\n        int[] dp = new int[n + 1];\\n        dp[0] = 1;\\n        dp[1] = 1;\\n\\n        for (int i = 2; i <= n; i++) {\\n            // We only need to do half as dp[i] is symmetrical.\\n            // For example, when i = 5:\\n            // dp[i] = dp[0]*dp[4] + dp[1]*dp[3] + dp[2]*dp[2] + dp[3]*dp[1] + dp[4]*dp[0]\\n            // Here except dp[2]*dp[2] all others are appearing twice.\\n            for (int j = 0; j < i / 2; j++) {\\n                dp[i] += dp[j] * dp[i - 1 - j];\\n            }\\n            dp[i] *= 2;\\n\\n            // Only add i/2 * i/2 for odd numbers.\\n            if ((i & 1) == 1) {\\n                dp[i] += dp[i / 2] * dp[i / 2];\\n            }\\n        }\\n\\n        return dp[n];\\n    }\\n}\\n```\\n\\n---\\n\\n<ins>Other Similar questions on LeetCode:</ins>\\n- [95. Unique Binary Search Trees II](https://leetcode.com/problems/unique-binary-search-trees-ii/)\\n- [241. Different Ways to Add Parentheses](https://leetcode.com/problems/different-ways-to-add-parentheses/)\\n",
                "solutionTags": [],
                "code": "```\\n   1                                2\\n\\t \\\\                            /\\n\\t   2                        1\\n```\n```\\n   1                1                2                  3                 3\\n\\t\\\\                \\\\              / \\\\                /                 /\\n\\t 2                3            1   3              2                 1\\n      \\\\              /                               /                   \\\\\\n\\t   3            2                               1                     2\\n```\n```java\\nclass Solution {\\n    public int numTrees(int n) {\\n        // Checking for Invalid Input\\n        if (n < 0) {\\n            throw new IllegalArgumentException(\"Invalid Input\");\\n        }\\n        // For n == 0, empty tree is a valid BST.\\n        // For n == 1, valid BST can have only one node.\\n        if (n <= 1) {\\n            return 1;\\n        }\\n\\n        int[] dp = new int[n + 1];\\n        dp[0] = 1;\\n        dp[1] = 1;\\n\\n        for (int i = 2; i <= n; i++) {\\n            // We only need to do half as dp[i] is symmetrical.\\n            // For example, when i = 5:\\n            // dp[i] = dp[0]*dp[4] + dp[1]*dp[3] + dp[2]*dp[2] + dp[3]*dp[1] + dp[4]*dp[0]\\n            // Here except dp[2]*dp[2] all others are appearing twice.\\n            for (int j = 0; j < i / 2; j++) {\\n                dp[i] += dp[j] * dp[i - 1 - j];\\n            }\\n            dp[i] *= 2;\\n\\n            // Only add i/2 * i/2 for odd numbers.\\n            if ((i & 1) == 1) {\\n                dp[i] += dp[i / 2] * dp[i / 2];\\n            }\\n        }\\n\\n        return dp[n];\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 31761,
                "title": "python-with-explanation-i-guess-you-could-call-this-dp",
                "content": "Let\\'s look at a naive recursive algorithm:\\n\\nSuppose you are given 1--n, and you want to generate all binary search trees.  How do you do it?  Suppose you put number i on the root, then simply\\n\\n 1. Generate all BST on the left branch by running the same algorithm\\n    with 1--(i-1), \\n 2. Generate all BST on the right branch by running the\\n    same algorithm with (i+1)--n.\\n 3. Take all combinations of left branch\\n    and right branch, and that\\'s it for i on the root.\\n\\nThen you let i go from 1 to n.  And that\\'s it.  If you want to write it in code, it\\'s like\\n\\n    def countTrees(n):\\n        if n == 0:\\n            return 1\\n        if n == 1:\\n            return 1\\n     \\n        Result = 0\\n        for i in xrange(n):\\n            LeftTrees = countTrees(i)\\n            RightTrees = countTrees(n - i - 1)\\n            Result += LeftTrees * RightTrees\\n        return Result\\n\\nThe only problem is, it\\'s very slow, because for large n, you\\'ll need to calculate `countTrees(i)` many many times, where i is a small number.  Naturally, to speed it up, you just need to remember the result of `countTrees(i)`, so that when you need it next time, you don\\'t need to calculate.  Let\\'s do that explicitly by having a list of n+1 numbers to store the calculation result!\\n\\n    def countTrees(n, cache):\\n        if n == 0:\\n            return 1\\n        if n == 1:\\n            return 1\\n    \\n        if cache[n] != -1: # -1 means we don\\'t know countTrees(n) yet.\\n            return cache[n]\\n    \\n        Result = 0\\n        for i in xrange(n):\\n            LeftTrees = countTrees(i, cache)\\n            RightTrees = countTrees(n - i - 1, cache)\\n            Result += LeftTrees * RightTrees\\n        cache[n] = Result\\n        return Result",
                "solutionTags": [
                    "Python",
                    "Dynamic Programming"
                ],
                "code": "Let\\'s look at a naive recursive algorithm:\\n\\nSuppose you are given 1--n, and you want to generate all binary search trees.  How do you do it?  Suppose you put number i on the root, then simply\\n\\n 1. Generate all BST on the left branch by running the same algorithm\\n    with 1--(i-1), \\n 2. Generate all BST on the right branch by running the\\n    same algorithm with (i+1)--n.\\n 3. Take all combinations of left branch\\n    and right branch, and that\\'s it for i on the root.\\n\\nThen you let i go from 1 to n.  And that\\'s it.  If you want to write it in code, it\\'s like\\n\\n    def countTrees(n):\\n        if n == 0:\\n            return 1\\n        if n == 1:\\n            return 1\\n     \\n        Result = 0\\n        for i in xrange(n):\\n            LeftTrees = countTrees(i)\\n            RightTrees = countTrees(n - i - 1)\\n            Result += LeftTrees * RightTrees\\n        return Result\\n\\nThe only problem is, it\\'s very slow, because for large n, you\\'ll need to calculate `countTrees(i)` many many times, where i is a small number.  Naturally, to speed it up, you just need to remember the result of `countTrees(i)`, so that when you need it next time, you don\\'t need to calculate.  Let\\'s do that explicitly by having a list of n+1 numbers to store the calculation result!\\n\\n    def countTrees(n, cache):\\n        if n == 0:\\n            return 1\\n        if n == 1:\\n            return 1\\n    \\n        if cache[n] != -1: # -1 means we don\\'t know countTrees(n) yet.\\n            return cache[n]\\n    \\n        Result = 0\\n        for i in xrange(n):\\n            LeftTrees = countTrees(i, cache)\\n            RightTrees = countTrees(n - i - 1, cache)\\n            Result += LeftTrees * RightTrees\\n        cache[n] = Result\\n        return Result",
                "codeTag": "Python3"
            },
            {
                "id": 31671,
                "title": "a-very-simple-and-straight-ans-based-on-math-catalan-number-o-n-times-o-1-space",
                "content": "        int numTrees(int n) {\\n        //cantalan\\u6811\\n        //C(2n,n)/(n+1)\\n        long long ans =1;\\n        for(int i=n+1;i<=2*n;i++){\\n            ans = ans*i/(i-n);\\n        }\\n        return ans/(n+1);\\n    }",
                "solutionTags": [
                    "Math"
                ],
                "code": "        int numTrees(int n) {\\n        //cantalan\\u6811\\n        //C(2n,n)/(n+1)\\n        long long ans =1;\\n        for(int i=n+1;i<=2*n;i++){\\n            ans = ans*i/(i-n);\\n        }\\n        return ans/(n+1);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 164915,
                "title": "python-solution",
                "content": "Denote by F(n) the number of unique BSTs containing 1,...,n. Now we can pick `root.val` be to any of the n values. Say we pick `root.val = i`, then the left subtree contains 1,...,i-1, and the right subtree contains i+1,...,n. The number of possible left subtrees is then F(i-1), and the number of possible right subtrees is F(n-i). The total number of BSTs with `root.val = i` is then `F(i-1)*F(n-i)`. The total number of BSTs is then obtained by summing over i = 0,1,...,n-1 the expression `F(i-1)*F(n-i)`. A naive recursive algorithm solving the recursion relation is:\\n```\\nclass Solution:\\n    def numTrees(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        if n == 0:\\n            return 1\\n        res = 0\\n        for i in range(1, n+1):\\n            res += self.numTrees(i-1)*self.numTrees(n-i)\\n        return res\\n```\\nWe can convert the above algorithm to a Dynamic Programming algorithm which costs O(n^2) time and O(n) space:\\n```\\nclass Solution:\\n    def numTrees(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        arr = [0]*(n+1)\\n        arr[0] = 1\\n        for i in range(1, n+1):\\n            for j in range(1, i+1):\\n                arr[i] += arr[j-1] * arr[i-j]\\n        return arr[-1]\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        if n == 0:\\n            return 1\\n        res = 0\\n        for i in range(1, n+1):\\n            res += self.numTrees(i-1)*self.numTrees(n-i)\\n        return res\\n```\n```\\nclass Solution:\\n    def numTrees(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        arr = [0]*(n+1)\\n        arr[0] = 1\\n        for i in range(1, n+1):\\n            for j in range(1, i+1):\\n                arr[i] += arr[j-1] * arr[i-j]\\n        return arr[-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 31809,
                "title": "c-code-w-explanation",
                "content": "    class Solution {\\n    public:\\n        int numTrees(int n) {\\n            vector<int> f;\\n            f.push_back(1);\\n            for (int i = 1; i <= n; ++i) {\\n                int t = 0;\\n                for (int j = 0; j < i; ++j)\\n                    t += f[j] * f[i-j-1];\\n                f.push_back(t);\\n            }\\n            return f.back();\\n        }\\n    };\\n\\n\\nConsider f_i:\\n\\n - choose 1 as the root, we have 0 node for the left tree, i-1 for the\\n   right;\\n - choose 2 as the root, we have 1 node for the left tree, i-2 for the\\n   right;\\n - ...\\n - choose i as the root, we have i-1 nodes for the left tree, 0 for the\\n   right.\\n\\nTherefore, the recursive solution is f_i = \\\\sum_{j=0}^{i-1} f_j f_{i-j-1}",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        int numTrees(int n) {\\n            vector<int> f;\\n            f.push_back(1);\\n            for (int i = 1; i <= n; ++i) {\\n                int t = 0;\\n                for (int j = 0; j < i; ++j)\\n                    t += f[j] * f[i-j-1];\\n                f.push_back(t);\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1565599,
                "title": "c-easy-intuitive-sol-2-approaches-recursive-dp-catalan-numbers",
                "content": "Hello Everyone, thank you for reading in advance!\\n\\n**Approach 1 (Catalan Number):**\\nWe can find the number of BST\\u2019s by thinking in recursive manner for ease:\\n\\n1. Choose 1 as root, no element present on left-subtree. N-1 elements present on the right subtree.\\n\\n2. Choose 2 as root, 1 element present on the left-subtree. N-2 elements present on the right-subtree.\\n\\n3. Similarly, Choose i as root, i-1 elements present on the left-subtree. N-i elements on the right-subtree.\\n\\nThen, Total number of BST\\u2019s ***C(N) = C(0)C(N-1) + C(1)C(N-2) +\\u2026\\u2026\\u2026+ C(i-1)C(N-i) +\\u2026\\u2026\\u2026\\u2026.+ C(N-1)C(0).***\\nwhere C(i) is the number of unique BST with i nodes.\\n\\nwhich is: ![image](https://assets.leetcode.com/users/images/9da2e01b-2240-45bc-b3b3-04ae93111c69_1636336728.9467251.png)\\n\\nThis formula is also called as Nth-Catalan Number. And finding unique BST with n nodes is one of the applications of catalan numbers!\\n\\n**Time Complexity:** O(N^2)\\n\\nBelow is the code for my approach:\\n\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int>cat(n+1, 0);\\n        \\n        cat[0] = 1;\\n        cat[1] = 1;\\n        \\n        for(int i{2}; i<=n; ++i){\\n            \\n            for(int j{}; j<i; ++j){\\n                \\n                cat[i] += cat[j]*cat[i-j-1];\\n            }\\n        }\\n        \\n        return cat[n];\\n    }\\n};\\n```\\n\\n**Approach 2 (Recursive DP):** \\n\\n1. My intuition is that if we have numbers from `1` to `N`, then we will make each `i` as root once, and then send the nodes `(1 to i-1)` to the` left subtree` and the nodes` (i+1 to N)` to the` right subtree.`\\n\\n2.  Note that the unique subtree for nodes `(1 to X)` is same as unique subtrees for `(X+1 to 2X)`, i.e., if we have `X` number of nodes irrespective of their values then the unique BST for those nodes will be same no matter what value they holds. For eg: the nodes 3 4 5 will make same number of unique BST as the nodes with values 7 8 9 as the number of nodes is same.\\n\\n3. So in our recursive solution, for a node `i` that will be root, then `numTrees(i-1)` will give answer for our `left subtree` for nodes `(1 to i-1)` and `numTrees(N-i)` will give answer for our right subtree for nodes `(i+1 to n)` because we will have `(N-i)` number of nodes in this range and we only care about the `number of nodes`.\\n\\n4. And then the answer for our node i will be the product of answer of left subtree and answer of right subtree, i.e. , `numTrees(i-1) * numTrees(N-i)`.\\n\\n5. We will store our precomputed answers in our dp vector so that no repeated call is made for same number.\\n\\n**Time Complexity:** O(N^2)\\n\\nHere is the code for my approach mentioned above:\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    int solve(int n, vector<int>&dp){\\n        if(n <= 1) return 1;\\n        if(dp[n] != -1) return dp[n];\\n        \\n        int res{};\\n        \\n        for(int i{1}; i<=n; ++i)\\n            res += solve(i-1, dp)*solve(n-i, dp);\\n        \\n        return dp[n] = res;\\n    }\\n    \\n    int numTrees(int n) {\\n        vector<int>dp(n+1, -1);\\n        return solve(n, dp);\\n    }\\n};\\n```\\n\\n",
                "solutionTags": [
                    "C",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int>cat(n+1, 0);\\n        \\n        cat[0] = 1;\\n        cat[1] = 1;\\n        \\n        for(int i{2}; i<=n; ++i){\\n            \\n            for(int j{}; j<i; ++j){\\n                \\n                cat[i] += cat[j]*cat[i-j-1];\\n            }\\n        }\\n        \\n        return cat[n];\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    \\n    int solve(int n, vector<int>&dp){\\n        if(n <= 1) return 1;\\n        if(dp[n] != -1) return dp[n];\\n        \\n        int res{};\\n        \\n        for(int i{1}; i<=n; ++i)\\n            res += solve(i-1, dp)*solve(n-i, dp);\\n        \\n        return dp[n] = res;\\n    }\\n    \\n    int numTrees(int n) {\\n        vector<int>dp(n+1, -1);\\n        return solve(n, dp);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 31714,
                "title": "simple-solution-with-easy-explaination",
                "content": "WE can know that by zero we can have 1 bst of null\\nby 1 we have 1 bst of 1\\nand for 2 we can arrange using two ways\\nNow idea is simple for rest numbers. for n=3 make 1 as root node so there will be 0 nodes in left subtree and 2 nodes in right subtree. we know the solution for 2 nodes that they can be used to make 2 bsts.\\nNow making 2 as the root node , there will be 1 in left subtree and 1 node in right subtree. ! node results in 1 way for making a BST. \\nNow making 3 as root node. There will be 2 nodes in left subtree and 0 nodes in right subtree. We know 2 will give 2 BST and zero will give 1 BST.\\nTotalling the result of all the 3 nodes as root will give 5. Same process can be applied for more numbers.\\n        \\n\\n\\n\\n        public int number(int n){\\n    \\tif(n==0)return 1;\\n    \\t\\tif(n==1)return 1;\\n    \\t\\t\\n    \\t\\tint result[]=new int [n+1];\\n    \\t\\tresult[0]=1;\\n    \\t\\tresult[1]=1;\\n    \\t\\tresult[2]=2;\\n    \\t\\tif(n<3){\\n    \\t\\t\\treturn result[n];\\n    \\t\\t}\\n    \\t\\t\\n    \\t\\tfor(int i=3;i<=n;i++){\\n    \\t\\t\\tfor(int k=1;k<=i;k++){\\n  \\n    \\t\\t\\t\\tresult[i]=result[i]+result[k-1]*result[i-k];\\n    \\t\\t\\t}\\n    \\t\\t}\\n    \\t\\t\\n    \\t\\t\\n    \\t\\treturn result[n];\\n    \\t}",
                "solutionTags": [],
                "code": "WE can know that by zero we can have 1 bst of null\\nby 1 we have 1 bst of 1\\nand for 2 we can arrange using two ways\\nNow idea is simple for rest numbers. for n=3 make 1 as root node so there will be 0 nodes in left subtree and 2 nodes in right subtree. we know the solution for 2 nodes that they can be used to make 2 bsts.\\nNow making 2 as the root node , there will be 1 in left subtree and 1 node in right subtree. ! node results in 1 way for making a BST. \\nNow making 3 as root node. There will be 2 nodes in left subtree and 0 nodes in right subtree. We know 2 will give 2 BST and zero will give 1 BST.\\nTotalling the result of all the 3 nodes as root will give 5. Same process can be applied for more numbers.\\n        \\n\\n\\n\\n        public int number(int n){\\n    \\tif(n==0)return 1;\\n    \\t\\tif(n==1)return 1;\\n    \\t\\t\\n    \\t\\tint result[]=new int [n+1];\\n    \\t\\tresult[0]=1;\\n    \\t\\tresult[1]=1;\\n    \\t\\tresult[2]=2;\\n    \\t\\tif(n<3){\\n    \\t\\t\\treturn result[n];\\n    \\t\\t}\\n    \\t\\t\\n    \\t\\tfor(int i=3;i<=n;i++){\\n    \\t\\t\\tfor(int k=1;k<=i;k++){\\n  \\n    \\t\\t\\t\\tresult[i]=result[i]+result[k-1]*result[i-k];\\n    \\t\\t\\t}\\n    \\t\\t}\\n    \\t\\t\\n    \\t\\t\\n    \\t\\treturn result[n];\\n    \\t}",
                "codeTag": "Unknown"
            },
            {
                "id": 1456611,
                "title": "python-top-down-dp-clean-concise",
                "content": "**Solution 1: Top down DP**\\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        @lru_cache(None)\\n        def dfs(left, right):\\n            if left > right: return 1\\n            ans = 0\\n            for i in range(left, right + 1):\\n                ans += dfs(left, i-1) * dfs(i+1, right)\\n            return ans\\n        \\n        return dfs(1, n)\\n```\\nComplexity:\\n- Time: `O(N^3)`, where `N <= 19`\\n- Space: `O(N^2)`",
                "solutionTags": [],
                "code": "```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        @lru_cache(None)\\n        def dfs(left, right):\\n            if left > right: return 1\\n            ans = 0\\n            for i in range(left, right + 1):\\n                ans += dfs(left, i-1) * dfs(i+1, right)\\n            return ans\\n        \\n        return dfs(1, n)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3681756,
                "title": "c-simple-solution-with-explanation-dp-memorization-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nBasic Intuition for this solution is using Dynamic Programming with memorization. For all possible values of i, consider i as root, then [1 . . . i-1] numbers will fall in the left subtree and [i+1 . . . N] numbers will fall in the right subtree. \\n\\nThen all possible BST\\u2019s will be\\\\\\n `numTrees(N)` = summation of `(numTrees(i-1)*numTrees(N-i))` where i lies in the range [1, N].\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nFollow the below steps to Implement the idea:\\n\\n- Create an array dp of size 20 (max 20 nodes as given)\\n- ` dp[0] = 1 and dp[1] = 1.` (Base condition)\\n- Run for loop from `i = 1 to i <= n` and call recursion for each i.\\n- `dp[n] += numTrees(i-1) * numTrees(n-i);` , this line fills the complete dp array.\\n- `if(dp[n]) return dp[n];` , here we simply return the dp[n] if it\\'s already filled so that we can avoid unneccesary recursion and calculations.\\n- finally, `return dp[n] ;`\\n# Complexity\\n- Time complexity: $$O(n^2)$$\\n\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(n)$$\\n\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int dp[20]{};\\n    int numTrees(int n) {\\n        if(n <= 1) return 1;\\n        if(dp[n]) return dp[n];\\n        for(int i = 1; i <= n; i++) \\n            dp[n] += numTrees(i-1) * numTrees(n-i);\\n        return dp[n];\\n    }\\n};\\n```\\n**Feel free to ask any question in the comment section.\\nIf you like this solution, do UPVOTE.**\\n\\n![Untitled video - Made with Clipchamp.gif](https://assets.leetcode.com/users/images/78b96441-bf24-4020-891f-a1c1ad3e91cd_1687707374.8100693.gif)\\n",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int dp[20]{};\\n    int numTrees(int n) {\\n        if(n <= 1) return 1;\\n        if(dp[n]) return dp[n];\\n        for(int i = 1; i <= n; i++) \\n            dp[n] += numTrees(i-1) * numTrees(n-i);\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 31815,
                "title": "a-0-ms-c-solution-with-my-explanation",
                "content": "set `t[0]=1`; just for easy calculation.\\n\\n`t[1]=1`, means when there is one node, return 1.\\n\\nWhen n=2, {1,2}:\\n\\nIf '1' is root, there is 0 node left to build up left branch, and 1 node left to build up right branch. Thus when n=2, '1' is root, there are `t[0] * t[1]` trees.\\n\\nIf '2' is root, there is 1 node to build left branch, and 0 node to build right branch. Thus n=2, '2' is root, there are `t[1] * t[0]` trees.\\n\\nSo when n=2, there are `t[0]*t[1] + t[1]*t[0];` trees. \\n\\nUse the 'root' to divide 1...n into two parts, then there are `t[remaining number of left] * t[remaining number of right]` trees for each 'root'.\\n\\n    int numTrees(int n) \\n    {\\n    \\tvector<int> t(n + 1, 0);\\n    \\tt[0] = t[1] = 1;\\n    \\tint i, j;\\n    \\tfor (i = 2; i <= n; ++i)\\n    \\t{\\n    \\t\\tfor (j = 1; j <= i / 2; ++j)\\n    \\t\\t\\tt[i] += t[j - 1] * t[i - j];\\n    \\t\\tt[i] *= 2;\\n    \\t\\tif (i % 2)\\n    \\t\\t\\tt[i] += t[i / 2] * t[i / 2];//Plus the middle 'root' trees.\\n    \\t}\\n    \\treturn t[n];\\n    }",
                "solutionTags": [
                    "C++"
                ],
                "code": "set `t[0]=1`; just for easy calculation.\\n\\n`t[1]=1`, means when there is one node, return 1.\\n\\nWhen n=2, {1,2}:\\n\\nIf '1' is root, there is 0 node left to build up left branch, and 1 node left to build up right branch. Thus when n=2, '1' is root, there are `t[0] * t[1]` trees.\\n\\nIf '2' is root, there is 1 node to build left branch, and 0 node to build right branch. Thus n=2, '2' is root, there are `t[1] * t[0]` trees.\\n\\nSo when n=2, there are `t[0]*t[1] + t[1]*t[0];` trees. \\n\\nUse the 'root' to divide 1...n into two parts, then there are `t[remaining number of left] * t[remaining number of right]` trees for each 'root'.\\n\\n    int numTrees(int n) \\n    {\\n    \\tvector<int> t(n + 1, 0);\\n    \\tt[0] = t[1] = 1;\\n    \\tint i, j;\\n    \\tfor (i = 2; i <= n; ++i)\\n    \\t{\\n    \\t\\tfor (j = 1; j <= i / 2; ++j)\\n    \\t\\t\\tt[i] += t[j - 1] * t[i - j];\\n    \\t\\tt[i] *= 2;\\n    \\t\\tif (i % 2)\\n    \\t\\t\\tt[i] += t[i / 2] * t[i / 2];//Plus the middle 'root' trees.\\n    \\t}\\n    \\treturn t[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1565544,
                "title": "c-easy-clean-solution-fastest-all-4-methods-detailed-explanation-comments",
                "content": "##### Method1: Recursion (TLE) [T(n) = O(3^n) and S(n) = O(n) [recursion stack]]\\nProblem is to find the no. of BSTs that are possible for given n: no. of nodes in BST. To solve this recursively, we need to build a recurrance relation [Inductive Hypothesis] and a base case.\\n`Let C(n) := no. of unique BSTs possible with n no. of nodes where n >= 0` \\nClearly, a null node and a single node, both are BSTs (only 1 unique BST for each). So, we have got our base case i.e `C(0) = C(1) = 1` or`C(n) = 1 when n <= 1`.\\nNow, Let\\'s break `n nodes of BST` into `1, i - 1, and n - i nodes`, where, 1 node is given to root, i - 1 nodes are given to left BST subtree and n - i nodes are given to right BST subtree respectively s.t overall we still have `1 + i - 1 + n - i = n nodes`. Cleary here, `1 <= i <= n` as both left and right BST subtrees can have: `atleast 0 and atmost n - 1 nodes`.\\n```\\n\\t\\t   (1)\\n\\t\\t  /   \\\\\\n\\t (i - 1)  (n - i)\\n\\t   \\ns.t total BST nodes are: 1 + i - 1 + n - i = n nodes\\nwhere (x) denotes x no. of nodes in BST and 1 <= i <= n\\n```\\nNow, we know that: `C(n) depends on C(i - 1) and C(n - i) where 1 <= i <= n`.\\nUpon experimentation, we can observe: `C(2) = C(0) * C(1) + C(1) * C(0) = 1 + 1 = 2`.\\n```\\n1                   2\\n  \\\\                /\\n\\t2            1\\ni = 1          i = 2\\n```\\nSimilarly, `C(3) = C(0) * C(2) + C(1) * C(1) + C(2) * C(0) = 2 + 1 + 2 = 5`.\\n```\\n   1                1                2                  3                 3\\n\\t\\\\                \\\\              / \\\\                /                 /\\n\\t 2                3            1   3              2                 1\\n      \\\\              /                               /                   \\\\\\n\\t   3            2                               1                     2\\n  i = 1            i = 1           i = 2         i = 3               i = 3         \\n```\\nSo, we have the recurrance relation: `C(n) := sum(C(i - 1) * C(n - i)), 1 <= i <= n`.\\n\\n**NOTE:** \\n1. Regarding the Time Complexity of above recurrance relation, please read [here](https://stackoverflow.com/questions/27371612/catalan-numbers-recursive-function-time-complexity) for more details.\\n2. This problem is actually the application of *[nth Catalan Number](https://en.wikipedia.org/wiki/Catalan_number)* [See Method4 Below for its implementation].\\n\\n```\\nint numTrees(int n) {\\n\\t// base case\\n\\tif (n <= 1) return 1;\\n\\tint ans = 0;\\n\\t// recursion\\n\\tfor (int i = 1; i <= n; i++)\\n\\t\\tans += numTrees(i - 1) * numTrees(n - i);\\n\\treturn ans;\\n}\\n```\\n\\n##### Method2: Recursion + Memoization (AC) [T(n) = O(n^2) and S(n) = O(n)] \\nIf you have understood the basics explained in Method1, it is obvious to see the overlapping subproblems in C(n), so, we can definitely use cache (called memoization) [:= memo in code] to solve subproblems only once in Top Down Approach. It drastically improves the Time Complexity from exponential to Polynomial (Quadratic) as now each subproblem is solved exactly once.\\n\\n```\\n// recursion + memoization\\nint numTrees(int n, vector<int> &memo) {\\n\\t// base case\\n\\tif (n <= 1) return 1;\\n\\t// if subProblem is not solved\\n\\tif (not memo[n])\\n\\t\\t// recursion\\n\\t\\tfor (int i = 1; i <= n; i++)\\n\\t\\t\\tmemo[n] += numTrees(i - 1, memo) * numTrees(n - i, memo);\\n\\t// return solved subProblem\\n\\treturn memo[n];\\n}\\n\\n// main\\nint numTrees(int n) {\\n\\t// init memo\\n\\tvector<int> memo(20);\\n\\treturn numTrees(n, memo);\\n}\\n```\\n\\n##### Method3: DP (AC) [T(n) = O(n^2) and S(n) = O(n)]\\nIf you have understood above methods, its not difficult to convert Method2 into Bottom Up DP. A nice trick is to first initialise the DP and then, replace in Method2, `n by i and i by j and func call by DP using two for loops` and we are done!\\nWe have now removed the explicit recursion stack space: O(n) from Method2 using this Bottom Up DP solution. The time and space complexity however remains same.\\n\\n```\\nint numTrees(int n) {\\n\\t// init dp\\n\\tvector<int> dp(n + 1);\\n\\tdp[0] = dp[1] = 1;\\n\\t// fill dp\\n\\tfor(int i = 2; i <= n; i++)\\n\\t\\tfor(int j = 1;  j <= i; j++)\\n\\t\\t\\tdp[i] += dp[j - 1] * dp[i - j];\\n\\t// return ans\\n\\treturn dp[n];\\n}\\n```\\n\\n##### Method4: Nth Catalan Number using Math (AC) [T(n) = O(n) and S(n) = O(1)]\\n![](https://wikimedia.org/api/rest_v1/media/math/render/svg/58374aa2b2e2c016a5b313e2bbd59940a2e1a5f9)\\n\\n**NOTE:**\\n1. This method is not intuitive and requires Combinatorics as pre-requisite, but I am still presenting it here for your reference.\\n1. I have used `long double` instead of `long long` in the code below because `long long` would lead to `int division` (kind of `floor` of what we need in the subsequent products) and thus will result into wrong answer. So, use `long double` instead to get the right division in subsequent products and thus the right answer. Finally, since the return type of func. is `int`, so the ans is type-casted by compiler to `int`:)\\n\\n```\\nint numTrees(int n) {\\n\\tlong double ans = 1;\\n\\tfor (int k = 2; k <= n; k++)\\n\\t\\tans *= (n + k), ans /= k;\\n\\treturn ans;\\n}\\n```\\n\\n**NOTE:**\\n*If you find this post helpful then please **upvote**. It keeps me **motivated** to post such helpful solutions. Thanks!*\\n\\n**PS:**\\nI have also written posts on:\\n1. All C++ (15+) sorting algorithms in a cleaner way [here](https://leetcode.com/problems/sort-an-array/discuss/1401412/C%2B%2B-Clean-Code-Solution-or-Fastest-or-All-(15%2B)-Sorting-Methods-or-Detailed) on leetcode.\\n2. Kadane\\'s Algorithm and Follow up Questions [C++] in a cleaner way [here](https://leetcode.com/problems/maximum-subarray/discuss/1470547/C++-Easy-and-Clean-Solution-or-Fastest:-0ms-or-All-Methods-or-Follow-Ups-or-Detailed-Explanation) on leetcode.\\n\\n*Do check it out/ bookmark (and upvote :)) to revise those concepts for the interview. Thanks!*\\n",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Dynamic Programming",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\n\\t\\t   (1)\\n\\t\\t  /   \\\\\\n\\t (i - 1)  (n - i)\\n\\t   \\ns.t total BST nodes are: 1 + i - 1 + n - i = n nodes\\nwhere (x) denotes x no. of nodes in BST and 1 <= i <= n\\n```\n```\\n1                   2\\n  \\\\                /\\n\\t2            1\\ni = 1          i = 2\\n```\n```\\n   1                1                2                  3                 3\\n\\t\\\\                \\\\              / \\\\                /                 /\\n\\t 2                3            1   3              2                 1\\n      \\\\              /                               /                   \\\\\\n\\t   3            2                               1                     2\\n  i = 1            i = 1           i = 2         i = 3               i = 3         \\n```\n```\\nint numTrees(int n) {\\n\\t// base case\\n\\tif (n <= 1) return 1;\\n\\tint ans = 0;\\n\\t// recursion\\n\\tfor (int i = 1; i <= n; i++)\\n\\t\\tans += numTrees(i - 1) * numTrees(n - i);\\n\\treturn ans;\\n}\\n```\n```\\n// recursion + memoization\\nint numTrees(int n, vector<int> &memo) {\\n\\t// base case\\n\\tif (n <= 1) return 1;\\n\\t// if subProblem is not solved\\n\\tif (not memo[n])\\n\\t\\t// recursion\\n\\t\\tfor (int i = 1; i <= n; i++)\\n\\t\\t\\tmemo[n] += numTrees(i - 1, memo) * numTrees(n - i, memo);\\n\\t// return solved subProblem\\n\\treturn memo[n];\\n}\\n\\n// main\\nint numTrees(int n) {\\n\\t// init memo\\n\\tvector<int> memo(20);\\n\\treturn numTrees(n, memo);\\n}\\n```\n```\\nint numTrees(int n) {\\n\\t// init dp\\n\\tvector<int> dp(n + 1);\\n\\tdp[0] = dp[1] = 1;\\n\\t// fill dp\\n\\tfor(int i = 2; i <= n; i++)\\n\\t\\tfor(int j = 1;  j <= i; j++)\\n\\t\\t\\tdp[i] += dp[j - 1] * dp[i - j];\\n\\t// return ans\\n\\treturn dp[n];\\n}\\n```\n```\\nint numTrees(int n) {\\n\\tlong double ans = 1;\\n\\tfor (int k = 2; k <= n; k++)\\n\\t\\tans *= (n + k), ans /= k;\\n\\treturn ans;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2364615,
                "title": "very-easy-0-ms-100-fully-explained-java-c-python-js-c-python3",
                "content": "# **Java Solution (Dynamic Programming Approach):**\\nRuntime: 0 ms, faster than 100.00% of Java online submissions for Unique Binary Search Trees.\\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        // Create \\'sol\\' array of length n+1...\\n        int[] sol = new int[n+1];\\n        // The value of the first index will be 1.\\n        sol[0] = 1;\\n        // Run a loop from 1 to n+1...\\n        for(int i = 1; i <= n; i++) {\\n            // Within the above loop, run a nested loop from 0 to i...\\n            for(int j = 0; j < i; j++) {\\n                // Update the i-th position of the array by adding the multiplication of the respective index...\\n                sol[i] += sol[j] * sol[i-j-1];\\n            }\\n        }\\n        // Return the value of the nth index of the array to get the solution...\\n        return sol[n];\\n    }\\n}\\n```\\n\\n# **C++ Solution (Dynamic Programming Approach):**\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        // If n <= 1, then return 1\\n        if (n <= 1) {\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0return 1;\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0}\\n        // Create \\'sol\\' array of length n+1...\\n        vector<int> sol(n+1, 0);\\n        // The value of the first and second index will be 1.\\n        sol[0] = sol[1] = 1;\\n        // Run a loop from 2 to n...\\n        for (int i = 2; i <= n; ++i) {\\n            // within the above loop, run a nested loop from 0 to i...\\n            for (int j = 0; j < i; j++) {\\n                // Update the i-th position of the array by adding the multiplication of the respective index...\\n                sol[i] += sol[j] * sol[i-j-1];\\n            }\\n        }\\n        // Return the value of the nth index of the array to get the solution...\\n        return sol[n];\\n    }\\n};\\n```\\n\\n# **Python Solution (Dynamic Programming Approach):**\\nRuntime: 17 ms, faster than 90.77% of Python online submissions for Unique Binary Search Trees.\\n```\\nclass Solution(object):\\n    def numTrees(self, n):\\n        if n == 0 or n == 1:\\n            return 1\\n        # Create \\'sol\\' array of length n+1...\\n        sol = [0] * (n+1)\\n        # The value of the first index will be 1.\\n        sol[0] = 1\\n        # Run a loop from 1 to n+1...\\n        for i in range(1, n+1):\\n            # Within the above loop, run a nested loop from 0 to i...\\n            for j in range(i):\\n                # Update the i-th position of the array by adding the multiplication of the respective index...\\n                sol[i] += sol[j] * sol[i-j-1]\\n        # Return the value of the nth index of the array to get the solution...\\n        return sol[n]\\n```\\n        \\n# **JavaScript Solution (Dynamic Programmming Approach):**\\n```\\nvar numTrees = function(n) {\\n    // Create \\'sol\\' array to store the solution...\\n    var sol = [1, 1];\\n    // Run a loop from 2 to n...\\n    for (let i = 2; i <= n; i++) {\\n        sol[i] = 0;\\n        // Within the above loop, run a nested loop from 1 to i...\\n        for (let j = 1; j <= i; j++) {\\n            // Update the i-th position of the array by adding the multiplication of the respective index...\\n            sol[i] += sol[i - j] * sol[j - 1];\\n        }\\n    }\\n    // Return the value of the nth index of the array to get the solution...\\n    return sol[n];\\n};\\n```\\n\\n# **C Language (Catalan Math Approach):**\\nRuntime: 0 ms, faster than 100.00% of C online submissions for Unique Binary Search Trees.\\n```\\nint numTrees(int n){\\n    long sol = 1;\\n    for (int i = 0; i < n; ++i) {\\n        sol = sol * 2 * (2 * i + 1) / (i + 2);\\n    }\\n    return (int) sol;\\n}\\n```\\n\\n# **Python3 Solution (Catalan Math Approach):**\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        sol = 1\\n        for i in range (0, n):\\n            sol = sol * 2 * (2 * i + 1) / (i + 2)\\n        return int(sol)\\n```\\n**I am working hard for you guys...\\nPlease upvote if you find any help with this code...**",
                "solutionTags": [
                    "Java",
                    "Python",
                    "Python3",
                    "C",
                    "JavaScript",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\n    public int numTrees(int n) {\\n        // Create \\'sol\\' array of length n+1...\\n        int[] sol = new int[n+1];\\n        // The value of the first index will be 1.\\n        sol[0] = 1;\\n        // Run a loop from 1 to n+1...\\n        for(int i = 1; i <= n; i++) {\\n            // Within the above loop, run a nested loop from 0 to i...\\n            for(int j = 0; j < i; j++) {\\n                // Update the i-th position of the array by adding the multiplication of the respective index...\\n                sol[i] += sol[j] * sol[i-j-1];\\n            }\\n        }\\n        // Return the value of the nth index of the array to get the solution...\\n        return sol[n];\\n    }\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        // If n <= 1, then return 1\\n        if (n <= 1) {\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0return 1;\\n\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0}\\n        // Create \\'sol\\' array of length n+1...\\n        vector<int> sol(n+1, 0);\\n        // The value of the first and second index will be 1.\\n        sol[0] = sol[1] = 1;\\n        // Run a loop from 2 to n...\\n        for (int i = 2; i <= n; ++i) {\\n            // within the above loop, run a nested loop from 0 to i...\\n            for (int j = 0; j < i; j++) {\\n                // Update the i-th position of the array by adding the multiplication of the respective index...\\n                sol[i] += sol[j] * sol[i-j-1];\\n            }\\n        }\\n        // Return the value of the nth index of the array to get the solution...\\n        return sol[n];\\n    }\\n};\\n```\n```\\nclass Solution(object):\\n    def numTrees(self, n):\\n        if n == 0 or n == 1:\\n            return 1\\n        # Create \\'sol\\' array of length n+1...\\n        sol = [0] * (n+1)\\n        # The value of the first index will be 1.\\n        sol[0] = 1\\n        # Run a loop from 1 to n+1...\\n        for i in range(1, n+1):\\n            # Within the above loop, run a nested loop from 0 to i...\\n            for j in range(i):\\n                # Update the i-th position of the array by adding the multiplication of the respective index...\\n                sol[i] += sol[j] * sol[i-j-1]\\n        # Return the value of the nth index of the array to get the solution...\\n        return sol[n]\\n```\n```\\nvar numTrees = function(n) {\\n    // Create \\'sol\\' array to store the solution...\\n    var sol = [1, 1];\\n    // Run a loop from 2 to n...\\n    for (let i = 2; i <= n; i++) {\\n        sol[i] = 0;\\n        // Within the above loop, run a nested loop from 1 to i...\\n        for (let j = 1; j <= i; j++) {\\n            // Update the i-th position of the array by adding the multiplication of the respective index...\\n            sol[i] += sol[i - j] * sol[j - 1];\\n        }\\n    }\\n    // Return the value of the nth index of the array to get the solution...\\n    return sol[n];\\n};\\n```\n```\\nint numTrees(int n){\\n    long sol = 1;\\n    for (int i = 0; i < n; ++i) {\\n        sol = sol * 2 * (2 * i + 1) / (i + 2);\\n    }\\n    return (int) sol;\\n}\\n```\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        sol = 1\\n        for i in range (0, n):\\n            sol = sol * 2 * (2 * i + 1) / (i + 2)\\n        return int(sol)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1071904,
                "title": "optimal-binary-search-tree",
                "content": "I could\\'nt find the Optimal Binary Search Tree, on leetcode. But learning from this problem made me do OBST.\\n\\nQuestion:\\nGiven a sorted array keys[0.. n-1] of search keys and an array freq[0.. n-1] of frequency counts, where freq[i] is the number of searches to keys[i]. Construct a binary search tree of all keys such that the total cost of all the searches is as small as possible.\\nLet us first define the cost of a BST. The cost of a BST node is level of that node multiplied by its frequency. Level of root is 1.\\n\\nExamples:\\n\\n```\\nInput:  keys[] = {10, 12}, freq[] = {34, 50}\\nThere can be following two possible BSTs \\n        10                       12\\n          \\\\                     / \\n           12                 10\\n          I                     II\\nFrequency of searches of 10 and 12 are 34 and 50 respectively.\\nThe cost of tree I is 34*1 + 50*2 = 134\\nThe cost of tree II is 50*1 + 34*2 = 118 \\n\\n\\nInput:  keys[] = {10, 12, 20}, freq[] = {34, 8, 50}\\nThere can be following possible BSTs\\n    10                12                 20         10              20\\n      \\\\             /    \\\\              /             \\\\            /\\n      12          10     20           12               20         10  \\n        \\\\                            /                 /           \\\\\\n         20                        10                12             12  \\n     I               II             III             IV             V\\nAmong all possible BSTs, cost of the fifth BST is minimum.  \\nCost of the fifth BST is 1*50 + 2*34 + 3*8 = 142\\n```\\n### Pattern: Dyanmic Programming Merge Intervals.\\n### Solution: \\n\\n```\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\nimport java.util.List;\\nimport java.util.Set;\\n\\nclass Solution_2 {\\n    int min = Integer.MAX_VALUE;\\n    List<Element> elementList = new ArrayList<>();\\n    int[][][] dp;\\n\\n    private int binaryTree(int[] nodes, int[] freq) {\\n        dp = new int[nodes.length][nodes.length][nodes.length];\\n        for (int i = 0; i < nodes.length; i++) {\\n            elementList.add(new Element(nodes[i], freq[i]));\\n        }\\n        elementList.sort((a, b) -> a.val - b.val);\\n        return binaryTree(0, nodes.length - 1, 1);\\n    }\\n\\n    private int binaryTree(int left, int right, int level) {\\n        if (left > right) return 0;\\n        if (left == right) {\\n            return level * elementList.get(left).freq;\\n        }\\n        if (dp[left][right][level] != 0) {\\n            return dp[left][right][level];\\n        }\\n        int min = Integer.MAX_VALUE;\\n        for (int mid = left; mid <= right; mid++) {\\n            int leftValue = binaryTree(left, mid - 1, level + 1);\\n            int rightValue = binaryTree(mid + 1, right, level + 1);\\n            min = Math.min(min, (elementList.get(mid).freq * level) + leftValue + rightValue);\\n        }\\n        return dp[left][right][level] = min;\\n    }\\n}\\n\\nclass Element {\\n    int val;\\n    int freq;\\n\\n    public Element(int node, int i) {\\n        val = node;\\n        freq = i;\\n    }\\n}\\n```\\n",
                "solutionTags": [],
                "code": "```\\nInput:  keys[] = {10, 12}, freq[] = {34, 50}\\nThere can be following two possible BSTs \\n        10                       12\\n          \\\\                     / \\n           12                 10\\n          I                     II\\nFrequency of searches of 10 and 12 are 34 and 50 respectively.\\nThe cost of tree I is 34*1 + 50*2 = 134\\nThe cost of tree II is 50*1 + 34*2 = 118 \\n\\n\\nInput:  keys[] = {10, 12, 20}, freq[] = {34, 8, 50}\\nThere can be following possible BSTs\\n    10                12                 20         10              20\\n      \\\\             /    \\\\              /             \\\\            /\\n      12          10     20           12               20         10  \\n        \\\\                            /                 /           \\\\\\n         20                        10                12             12  \\n     I               II             III             IV             V\\nAmong all possible BSTs, cost of the fifth BST is minimum.  \\nCost of the fifth BST is 1*50 + 2*34 + 3*8 = 142\\n```\n```\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\nimport java.util.List;\\nimport java.util.Set;\\n\\nclass Solution_2 {\\n    int min = Integer.MAX_VALUE;\\n    List<Element> elementList = new ArrayList<>();\\n    int[][][] dp;\\n\\n    private int binaryTree(int[] nodes, int[] freq) {\\n        dp = new int[nodes.length][nodes.length][nodes.length];\\n        for (int i = 0; i < nodes.length; i++) {\\n            elementList.add(new Element(nodes[i], freq[i]));\\n        }\\n        elementList.sort((a, b) -> a.val - b.val);\\n        return binaryTree(0, nodes.length - 1, 1);\\n    }\\n\\n    private int binaryTree(int left, int right, int level) {\\n        if (left > right) return 0;\\n        if (left == right) {\\n            return level * elementList.get(left).freq;\\n        }\\n        if (dp[left][right][level] != 0) {\\n            return dp[left][right][level];\\n        }\\n        int min = Integer.MAX_VALUE;\\n        for (int mid = left; mid <= right; mid++) {\\n            int leftValue = binaryTree(left, mid - 1, level + 1);\\n            int rightValue = binaryTree(mid + 1, right, level + 1);\\n            min = Math.min(min, (elementList.get(mid).freq * level) + leftValue + rightValue);\\n        }\\n        return dp[left][right][level] = min;\\n    }\\n}\\n\\nclass Element {\\n    int val;\\n    int freq;\\n\\n    public Element(int node, int i) {\\n        val = node;\\n        freq = i;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1565526,
                "title": "c-simple-6-line-dp-solution-clear-explanation",
                "content": "**Explanation:**\\nWe keep a dp vector. dp[i] = number of BSTs with i nodes.\\nWe know the base cases - dp[0] = 1 and dp[1] = 1.\\nNow, for example, n = 5.\\nSo we have {1,2,3,4,5}\\nFor each node, we can use it as a root and then we have sub problems - the right and left subtrees.\\nThis is typical **dynamic programming**.\\nFor example, if we are up to node #2. We use it as a root, now it\\'s a BST so all the smaller ones are in the left and all the greater ones in the right.\\nSo we take {1} as the left subtree - look for dp[1]\\nand {3,4,5} as the right subtree - look for dp[3] (three nodes).\\nNow, we can use each combination so we multiply the values.\\n\\n`dp[i-j]` is the right subtree - `i` is the current number of nodes and `j` is the current root.\\n`dp[j-1]` is the left subtree.\\n\\n**Time Complexity:** O(n^2)\\n**Space Complexity:** O(n)\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0] = 1, dp[1] = 1;\\n        for (int i = 2; i <= n; i++)\\n            for (int j = 1; j <= i; j++)\\n                dp[i] += dp[i-j] * dp[j-1];\\n        \\n        return dp[n];\\n    }\\n};\\n```\\n**Like it? please upvote!**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0] = 1, dp[1] = 1;\\n        for (int i = 2; i <= n; i++)\\n            for (int j = 1; j <= i; j++)\\n                dp[i] += dp[i-j] * dp[j-1];\\n        \\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1126879,
                "title": "swift-unique-binary-search-trees",
                "content": "#### Studying graph theory didn\\'t go in vain \\uD83E\\uDD78\\n\\n```swift\\nimport Foundation\\n\\nclass Solution {\\n    func numTrees(_ n: Int) -> Int {\\n        guard n > 1 else { return 1 }\\n        \\n        var arr: [Int] = .init(repeating: 0, count: n + 1)\\n        arr[0] = 1; arr[1] = 1\\n        \\n        for i in 2...n where n >= 2 {\\n            for j in 0..<i {\\n                arr[i] += arr[j] * arr[i - 1 - j]\\n            }\\n        }\\n        return arr[n]\\n    }\\n}\\n\\nfunc tests() {\\n    let s = Solution()\\n    assert(s.numTrees(3) == 5) // good\\n    assert(s.numTrees(1) == 1) // good\\n}\\n\\ntests()\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```swift\\nimport Foundation\\n\\nclass Solution {\\n    func numTrees(_ n: Int) -> Int {\\n        guard n > 1 else { return 1 }\\n        \\n        var arr: [Int] = .init(repeating: 0, count: n + 1)\\n        arr[0] = 1; arr[1] = 1\\n        \\n        for i in 2...n where n >= 2 {\\n            for j in 0..<i {\\n                arr[i] += arr[j] * arr[i - 1 - j]\\n            }\\n        }\\n        return arr[n]\\n    }\\n}\\n\\nfunc tests() {\\n    let s = Solution()\\n    assert(s.numTrees(3) == 5) // good\\n    assert(s.numTrees(1) == 1) // good\\n}\\n\\ntests()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1370252,
                "title": "how-to-think-for-solution-java",
                "content": "There is some common pattern for binary tree , if we have to answer something for root , we generally ask for answer from left child and right child , then give answer for complete tree\\neg.,\\n1  finding maximum in tree \\n2 . Height of tree \\n3 .  diameter of tree \\nHere  for n =  4 , consider it like an array **{10,20,30,40}** and this array is sorted array , and we have choice to make any of these element as root . \\nlet explore what  all unique  trees are possible  \\n* if we pick **10** the all element are greater than 10 , goes its right , **{20,30,40}** goes right  and this again become sub-problem . \\n\\n\\t\\t\\t\\t\\tans =  left_count * right_count \\n\\n```\\n\\t\\t10\\n\\t\\t    \\\\  [20,30 , 40]  // now find solution for this subproblem  for size 3 \\n```\\n\\t\\t\\n* if we pick 20 as root then smaller element than 10 goes to left and all element greater than 10 goes to right \\n```\\n\\t\\t      20\\n\\t  [10] /      \\\\  [30 , 40]  // now find solution for this subproblem  size 1 on left side and 2 size on right side\\n```\\n\\nif we pick 30 as root :\\n\\n```\\n\\t\\t        30\\n\\t[10 , 20] /\\t    \\\\  [ 40]  // now find solution for this subproblem 2 size for left and 1 size for right\\n\\t\\n\\t \\n```\\n\\nif we pick 40 as root :\\n```\\n\\t\\t            40\\n\\t[10 , 20,30] /\\t    // now find solution for this subproblem 3 size for left \\n\\t\\t \\n```\\n\\nNow suppose we have answer for all subproblem then it is really going very easy to answer for n size problem . so now what we do is , find solution for smaller problem on top of that we answer bigger size problem \\n\\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        int dp[] =  new int[n+1];\\n        dp[0] = 1;\\n        \\n        for(int i=1;i<=n;i++){\\n            if(i<=2){ dp[i] =  i; continue;}\\n            for(int k=0;k<i;k++){\\n                dp[i] += ( dp[k]*dp[i-1-k]); // dp[i] =  left_count * right_count \\n            }                        \\n        }\\n        return dp[n];\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "```\\n\\t\\t10\\n\\t\\t    \\\\  [20,30 , 40]  // now find solution for this subproblem  for size 3 \\n```\n```\\n\\t\\t      20\\n\\t  [10] /      \\\\  [30 , 40]  // now find solution for this subproblem  size 1 on left side and 2 size on right side\\n```\n```\\n\\t\\t        30\\n\\t[10 , 20] /\\t    \\\\  [ 40]  // now find solution for this subproblem 2 size for left and 1 size for right\\n\\t\\n\\t \\n```\n```\\n\\t\\t            40\\n\\t[10 , 20,30] /\\t    // now find solution for this subproblem 3 size for left \\n\\t\\t \\n```\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        int dp[] =  new int[n+1];\\n        dp[0] = 1;\\n        \\n        for(int i=1;i<=n;i++){\\n            if(i<=2){ dp[i] =  i; continue;}\\n            for(int k=0;k<i;k++){\\n                dp[i] += ( dp[k]*dp[i-1-k]); // dp[i] =  left_count * right_count \\n            }                        \\n        }\\n        return dp[n];\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 853183,
                "title": "python-recursion-memoization",
                "content": "Hi,\\n\\nI solved this problem by using recursion + memoization.\\nThe result is close to the DP solution.\\n\\n```\\ndef numTrees(self, n: int) -> int:\\n        return self.count_bsts(1, n, {})\\n        \\ndef count_bsts(self, min_val: int, max_val: int, memo: dict) -> int:\\n\\tif min_val >= max_val:\\n\\t\\treturn 1\\n\\n\\telif (min_val, max_val) in memo:\\n\\t\\treturn memo[(min_val, max_val)]\\n\\n\\tbsts_count = 0\\n\\tfor val in range(min_val, max_val + 1):\\n\\n\\t\\tleft_subtrees_count = self.count_bsts(min_val, val - 1, memo)\\n\\t\\tright_subtrees_count = self.count_bsts(val + 1, max_val, memo)\\n\\n\\t\\tbsts_count += left_subtrees_count * right_subtrees_count\\n\\n\\tmemo[(min_val, max_val)] = bsts_count\\n        \\n\\treturn bsts_count\\n\\t\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\ndef numTrees(self, n: int) -> int:\\n        return self.count_bsts(1, n, {})\\n        \\ndef count_bsts(self, min_val: int, max_val: int, memo: dict) -> int:\\n\\tif min_val >= max_val:\\n\\t\\treturn 1\\n\\n\\telif (min_val, max_val) in memo:\\n\\t\\treturn memo[(min_val, max_val)]\\n\\n\\tbsts_count = 0\\n\\tfor val in range(min_val, max_val + 1):\\n\\n\\t\\tleft_subtrees_count = self.count_bsts(min_val, val - 1, memo)\\n\\t\\tright_subtrees_count = self.count_bsts(val + 1, max_val, memo)\\n\\n\\t\\tbsts_count += left_subtrees_count * right_subtrees_count\\n\\n\\tmemo[(min_val, max_val)] = bsts_count\\n        \\n\\treturn bsts_count\\n\\t\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1150728,
                "title": "javascript-recursive-memo-explanation",
                "content": "First, consider what a BST is. Given a node N, every node in the left tree is < N and every node in the right tree is > N. We don\\'t actually have to build the trees, just figure out for the given n how many trees exist.\\n\\nLet\\'s walk through manually starting with the base case of n = 1, the set of nodes is [1]\\n1.  there is only one possible BST, the root is 1 with no left or gith.\\nTotal BSTs = 1\\n\\nNow for n = 2, the set is [1, 2].\\n1. pick 1 as the root node\\n2. there is nothing < 1, so we have no left tree.\\n3. we determine the number of bsts in the right tree [2]\\n4. the right tree has single node, so we know that is just 1 tree.\\n5. Repeat, picking 2 as the root node.\\n\\nAnd finally for n = 3, [1,2,3]\\n\\n1. pick 1 as the root node, and look into the right [2,3], you\\'ll notice n == 2 which we already solved above.\\n2. When we pick 2, and look at the left and right tree, both have a single node.\\n3. when we pick 3, it\\'s basically the same as 1.\\n\\nWe can implement this as a recursive function, and we want to use a cache (memo) since we will be solving the same sub-problems multiple times.\\n\\n\\n```\\nvar numTrees = function(n) {\\n    const cache = []\\n    return numTreeMemo(n, cache)\\n}\\n\\nvar numTreeMemo = function(n, cache) {\\n    // Base case\\n    if (n == 1) return 1\\n    // If we solved for n before, return saved answer\\n    if(cache[n]) return cache[n]\\n    \\n    let totalTrees = 0;\\n    //Pick each \\'node\\' once as the root node\\n    for (let root = 1; root <= n; root ++) {\\n        let leftTrees = 1\\n        //Determine the number of unique BST on the left side of the root\\n        if (root > 1)  leftTrees = numTreeMemo(root-1, cache)\\n        let rightTrees = 1\\n        // And then on the right\\n        if (root < n) rightTrees = numTreeMemo(n - root, cache)\\n        //If left has 2 unique trees, and right has 3\\n        //that equals 2 * 3 for the total combinations\\n        totalTrees += leftTrees * rightTrees\\n    }\\n    cache[n] = totalTrees\\n    return totalTrees\\n    \\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Dynamic Programming",
                    "Recursion"
                ],
                "code": "```\\nvar numTrees = function(n) {\\n    const cache = []\\n    return numTreeMemo(n, cache)\\n}\\n\\nvar numTreeMemo = function(n, cache) {\\n    // Base case\\n    if (n == 1) return 1\\n    // If we solved for n before, return saved answer\\n    if(cache[n]) return cache[n]\\n    \\n    let totalTrees = 0;\\n    //Pick each \\'node\\' once as the root node\\n    for (let root = 1; root <= n; root ++) {\\n        let leftTrees = 1\\n        //Determine the number of unique BST on the left side of the root\\n        if (root > 1)  leftTrees = numTreeMemo(root-1, cache)\\n        let rightTrees = 1\\n        // And then on the right\\n        if (root < n) rightTrees = numTreeMemo(n - root, cache)\\n        //If left has 2 unique trees, and right has 3\\n        //that equals 2 * 3 for the total combinations\\n        totalTrees += leftTrees * rightTrees\\n    }\\n    cache[n] = totalTrees\\n    return totalTrees\\n    \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 331678,
                "title": "with-illutrations-explanation-dp-solution",
                "content": "Let\\'s look at the simplest example first,where n=1 and n=2 :\\n![image](https://assets.leetcode.com/users/planegoose/image_1562758074.png)\\nThen let\\'s think about how to solve the problem when n=3.\\nWhen n=3,we have three conditions : the root of BST is 1,2 or 3.\\nWhen the root is 1,it has no left child,and have a two-element right subtree,so we have res[2] possible choices if the root is 1.It make the same sense when the root is 2 or 3.\\n![image](https://assets.leetcode.com/users/planegoose/image_1562758262.png)\\nThen we can easily get the expression :\\nres[3] = res[2] + res[1]*res[1] + res[2]\\nWe can spread the conclusion to n =4,5 and more:\\n![image](https://assets.leetcode.com/users/planegoose/image_1562758515.png)\\nFinally we can get the formula (for convenience,I set res[0]=1):\\nres[n] = res[0]*res[n-1] + res[1]*res[n-2] + res[2]*res[n-3] + ... + res[n-2]*res[1] + res[n-1]*res[0]\\nThen we can use bottom-up DP to calculate out res[0..n].\\nHere is a python3 solution excelling 99% (but actually we can achieve it in any language after understanding the formula above) :\\n```\\n    def numTrees(self, n) :\\n        res = [0]*(n+1)\\n        res[0] = 1\\n        for i in range(1,n+1) :\\n            for j in range(i) :\\n                res[i] += res[j]*res[i-1-j]\\n        return res[-1]\\n```",
                "solutionTags": [],
                "code": "```\\n    def numTrees(self, n) :\\n        res = [0]*(n+1)\\n        res[0] = 1\\n        for i in range(1,n+1) :\\n            for j in range(i) :\\n                res[i] += res[j]*res[i-1-j]\\n        return res[-1]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 488024,
                "title": "javascript-solution-dp-w-explanation",
                "content": "### The idea\\nA few key facts we have to understand:\\n1. The question is simply asking the sum of different combinations of BST if every number between 1 - n is used as a root node\\n2. If number `i` is the root node, then the total combinations for `i` will equal to the combination of BST to its left `[1... i-1]` times the combination of BST to its right `[i+1]...n`. \\n3. Think of BST are just combination of nodes instead of actual numbers, this means, the BST combinations for [1,2,3,4] equals to the BST combinations for [7,8,9,10] because they all have 4 elements. \\n4. When we calculate the product of left & right, we are mix and match different combinations of BST. And we don\\'t really care what are the actual numbers are, but instead, the length of the elements we are dealing with.\\n\\n``` javascript\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar numTrees = function(n) {\\n    let G = new Array(n+1).fill(0);\\n    G[0] = 1;\\n    G[1] = 1;\\n    for (let i=2;i<=n;i++) {\\n        for (let j=1;j<=i;j++) {\\n            G[i]+=G[j-1] * G[i - j];\\n        }\\n    }\\n    return G[n];\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "``` javascript\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar numTrees = function(n) {\\n    let G = new Array(n+1).fill(0);\\n    G[0] = 1;\\n    G[1] = 1;\\n    for (let i=2;i<=n;i++) {\\n        for (let j=1;j<=i;j++) {\\n            G[i]+=G[j-1] * G[i - j];\\n        }\\n    }\\n    return G[n];\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 703488,
                "title": "detailed-explanation-mental-leap-on-why-the-approach-actually-works",
                "content": "```\\npublic static int numTrees(int n) {\\n        /**\\n         * \\n         * Okay so Approach...... we know 2 things for sure when we have 0 nodes, how many unique BST we can make\\n         * just 1. right (it will be EMPTY BST)\\n         * Okay so now similarly when we have 1 node how many unique BST can we make .... just 1 node sitting at Root.\\n         *\\n         * Now interesting thing starts at when 2 nodes are there [1,2]\\n         * we can either put 2 as Root or 1 as root.... in both the cases we have 1 side empty.\\n         *    2          or        1\\n         *   /                      \\\\\\n         *  /                        \\\\\\n         * 1                          2\\n         *\\n         * Let\\'s check [1,2,3]\\n         * Keep 1 as root.                     keeping 2 as root.               keeping 1 as root.\\n         *\\n         *      1                   1                       2                      3        or     3\\n         *       \\\\                   \\\\                     / \\\\                    /               /\\n         *        \\\\                  3                    1   3                  1               2\\n         *        2                 /                                             \\\\             /\\n         *         \\\\               /                                               \\\\           1\\n         *          \\\\             2                                                 2\\n         *           3\\n         *\\n         *  So to get NumTrees At (N) it\\'s a combination of Number of Combination by putting [1..........N] numbers as root.\\n         *  NumTrees or G[3] = F[1, 3] + F[2, 3] + F[3,3]    where F is a function F(i=currentRoot, N=TotalNodes)\\n         *\\n         *                                        N u m T r e e s [3]\\n         *                                      /         |          \\\\\\n         *                                   F[1,3]      F[2]         F[3]\\n         *                                   /  \\\\        /  \\\\       /  \\\\\\n         *                                  /    \\\\      /    \\\\     /    \\\\\\n         *                                 G(0) G(2)  G(1)   G(1) G(2)  G(0)\\n         *  General Formula:\\n         *  F(i, n) = G(i-1) * G(n-i).\\n         */\\n        if (n <= 1) return 1;\\n        int[] G = new int[n + 1];\\n        G[0] = 1;\\n        G[1] = 1; // Base Clause.\\n\\n        for (int i = 2; i <= n; i++) {\\n            for (int j = 1; j <= i; j++) {\\n                G[i] += G[j - 1] * G[i - j];\\n            }\\n        }\\n        return G[n];\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic static int numTrees(int n) {\\n        /**\\n         * \\n         * Okay so Approach...... we know 2 things for sure when we have 0 nodes, how many unique BST we can make\\n         * just 1. right (it will be EMPTY BST)\\n         * Okay so now similarly when we have 1 node how many unique BST can we make .... just 1 node sitting at Root.\\n         *\\n         * Now interesting thing starts at when 2 nodes are there [1,2]\\n         * we can either put 2 as Root or 1 as root.... in both the cases we have 1 side empty.\\n         *    2          or        1\\n         *   /                      \\\\\\n         *  /                        \\\\\\n         * 1                          2\\n         *\\n         * Let\\'s check [1,2,3]\\n         * Keep 1 as root.                     keeping 2 as root.               keeping 1 as root.\\n         *\\n         *      1                   1                       2                      3        or     3\\n         *       \\\\                   \\\\                     / \\\\                    /               /\\n         *        \\\\                  3                    1   3                  1               2\\n         *        2                 /                                             \\\\             /\\n         *         \\\\               /                                               \\\\           1\\n         *          \\\\             2                                                 2\\n         *           3\\n         *\\n         *  So to get NumTrees At (N) it\\'s a combination of Number of Combination by putting [1..........N] numbers as root.\\n         *  NumTrees or G[3] = F[1, 3] + F[2, 3] + F[3,3]    where F is a function F(i=currentRoot, N=TotalNodes)\\n         *\\n         *                                        N u m T r e e s [3]\\n         *                                      /         |          \\\\\\n         *                                   F[1,3]      F[2]         F[3]\\n         *                                   /  \\\\        /  \\\\       /  \\\\\\n         *                                  /    \\\\      /    \\\\     /    \\\\\\n         *                                 G(0) G(2)  G(1)   G(1) G(2)  G(0)\\n         *  General Formula:\\n         *  F(i, n) = G(i-1) * G(n-i).\\n         */\\n        if (n <= 1) return 1;\\n        int[] G = new int[n + 1];\\n        G[0] = 1;\\n        G[1] = 1; // Base Clause.\\n\\n        for (int i = 2; i <= n; i++) {\\n            for (int j = 1; j <= i; j++) {\\n                G[i] += G[j - 1] * G[i - j];\\n            }\\n        }\\n        return G[n];\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1566035,
                "title": "java-solution",
                "content": "```\\nclass Solution {\\n    HashMap<Integer,Integer> map=new HashMap<>();\\n    public int numTrees(int n) {\\n        if(n==0 || n==1)\\n            return 1;\\n        if(map.containsKey(n))\\n            return map.get(n);\\n        \\n        int c=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n           c+=numTrees(i-1)*numTrees(n-i);    \\n        }\\n        map.put(n,c);\\n        return map.get(n);\\n    }\\n}\\n```\\n![image](https://assets.leetcode.com/users/images/a079eaf4-4a88-4269-af0a-6d344411aeb1_1636354636.9797418.png)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    HashMap<Integer,Integer> map=new HashMap<>();\\n    public int numTrees(int n) {\\n        if(n==0 || n==1)\\n            return 1;\\n        if(map.containsKey(n))\\n            return map.get(n);\\n        \\n        int c=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n           c+=numTrees(i-1)*numTrees(n-i);    \\n        }\\n        map.put(n,c);\\n        return map.get(n);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1232364,
                "title": "c-code-with-explanation-100-faster-easy-approach",
                "content": "class Solution {\\npublic:\\n    \\nset t[0]=1; just for easy calculation.\\n\\nt[1]=1, means when there is one node, return 1.\\n\\nWhen n=2, {1,2}:\\n\\nIf \\'1\\' is root, there is 0 node left to build up left branch, and 1 node left to build up right branch. Thus when n=2, \\'1\\' is root, there are t[0]  t[1] trees.\\n\\nIf \\'2\\' is root, there is 1 node to build left branch, and 0 node to build right branch. Thus n=2, \\'2\\' is root, there are t[1]  t[0] trees.\\n\\nSo when n=2, there are t[0]t[1] + t[1]t[0]; trees.\\n\\nUse the \\'root\\' to divide 1...n into two parts, then there are t[remaining number of left]  t[remaining number of right] trees for each \\'root\\'\\n    \\n    int numTrees(int n) {\\n        \\n        int dp[n+1];\\n        memset(dp,0,sizeof(dp));\\n        \\n        dp[0]=1; //unique bst with zero node is one\\n        dp[1]=1; //unique bst with one node is one\\n        for(int i=2;i<=n;i++){\\n            int left=0;\\n            int right=i-1;\\n            while(left<=i-1){\\n                dp[i]+= dp[left]*dp[right];\\n                left++;\\n                right--;\\n            }\\n        }\\n        return dp[n];\\n    }\\n\\t//Upvote if you find it useful\\n};",
                "solutionTags": [
                    "Dynamic Programming"
                ],
                "code": "class Solution {\\npublic:\\n    \\nset t[0]=1; just for easy calculation.\\n\\nt[1]=1, means when there is one node, return 1.\\n\\nWhen n=2, {1,2}",
                "codeTag": "Java"
            },
            {
                "id": 1185579,
                "title": "cpp-one-line-solution-iterative-catalan-number-100-fast-and-o-1-space",
                "content": "The number of distinct structural BSTs with nodes labelled 1 to n (inclusive) for a given number \\'n\\' can be calculated using the catalan number. \\n\\nBut calculating the cattlan number using iteration can lead to overflow.\\n\\nSo, I tried to minimize the number of operation as shown below:\\n![image](https://assets.leetcode.com/users/images/20b918e8-4eb2-475b-9b77-5be01d705c97_1619873793.3850749.png)\\n\\nHere i denotes the numerator calculation and j denotes the denominator calculaltion of the above equation. \\n```\\n\\tint numTrees(int n) {\\n        double prod=1.0;\\n        for(double i=2*n,j=n;i>n+1,j>1;i-=1,j-=1) prod*=(i/j);\\n        return round(prod);\\n    }\\n```\\n",
                "solutionTags": [
                    "C",
                    "Iterator"
                ],
                "code": "```\\n\\tint numTrees(int n) {\\n        double prod=1.0;\\n        for(double i=2*n,j=n;i>n+1,j>1;i-=1,j-=1) prod*=(i/j);\\n        return round(prod);\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 475097,
                "title": "c-dp-solution-w-o-catalan-no-memoization-tabulation",
                "content": "```C++\\nclass Solution {\\npublic:\\n    /*\\n    Without using catalan number, pure DP.\\n    Let T(i, j) be the number of BSTs using number in range [i, j]. Then:\\n    T(i, j) = 1, if i >= j\\n    T(i, j) = SUM{ T(i, root-1) * T(root+1, j) }, for root = [i, j]\\n    */\\n    \\n    int numTrees(int n) {\\n        return memoization(n);\\n    }\\n    \\n    // recursive\\n    // TLE\\n    int recursive(int l, int r) {\\n        if (l >= r) return 1;\\n        \\n        int res = 0;\\n        for (int root = l; root <= r; ++root) {\\n            res += recursive(l, root-1) * recursive(root+1, r);\\n        }\\n        return res;\\n    }\\n    \\n    // memoization\\n    int memoization(int n) {\\n        vector<vector<int>> mem(n+1, vector<int>(n+1, -1));\\n        return solve(mem, 1, n);\\n    }\\n    \\n    int solve(vector<vector<int>>& mem, int l, int r) {\\n        if (l >= r) return 1;\\n        if (mem[l][r] >= 0) return mem[l][r];\\n        \\n        mem[l][r] = 0;\\n        for(int root = l; root <= r; ++root) {\\n            mem[l][r] += solve(mem, l, root-1) * solve(mem, root+1, r);\\n        }\\n        return mem[l][r];\\n    }\\n    \\n    \\n    // tabulation\\n    int tabulation(int n) {\\n        // tab[i][j] = 1, if i >= j\\n        vector<vector<int>> tab(n+2, vector<int>(n+2, 1)); \\n        // For \"tab[l][r] += tab[l][root-1] * tab[root+1][r]\", the minimum\\n        // value of index is 0 and the maximum value of index is n+1. Thus,\\n        // the dimension of the dp table is n+2 x n+2.\\n        \\n        for(int l = n; l >= 1; --l) {\\n            for(int r = l + 1; r <= n; ++r) {\\n                tab[l][r] = 0;\\n                for(int root = l; root <= r; ++root) {\\n                    tab[l][r] += tab[l][root-1] * tab[root+1][r];\\n                }\\n            }\\n        }\\n        \\n        return tab[1][n];\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming"
                ],
                "code": "```C++\\nclass Solution {\\npublic:\\n    /*\\n    Without using catalan number, pure DP.\\n    Let T(i, j) be the number of BSTs using number in range [i, j]. Then:\\n    T(i, j) = 1, if i >= j\\n    T(i, j) = SUM{ T(i, root-1) * T(root+1, j) }, for root = [i, j]\\n    */\\n    \\n    int numTrees(int n) {\\n        return memoization(n);\\n    }\\n    \\n    // recursive\\n    // TLE\\n    int recursive(int l, int r) {\\n        if (l >= r) return 1;\\n        \\n        int res = 0;\\n        for (int root = l; root <= r; ++root) {\\n            res += recursive(l, root-1) * recursive(root+1, r);\\n        }\\n        return res;\\n    }\\n    \\n    // memoization\\n    int memoization(int n) {\\n        vector<vector<int>> mem(n+1, vector<int>(n+1, -1));\\n        return solve(mem, 1, n);\\n    }\\n    \\n    int solve(vector<vector<int>>& mem, int l, int r) {\\n        if (l >= r) return 1;\\n        if (mem[l][r] >= 0) return mem[l][r];\\n        \\n        mem[l][r] = 0;\\n        for(int root = l; root <= r; ++root) {\\n            mem[l][r] += solve(mem, l, root-1) * solve(mem, root+1, r);\\n        }\\n        return mem[l][r];\\n    }\\n    \\n    \\n    // tabulation\\n    int tabulation(int n) {\\n        // tab[i][j] = 1, if i >= j\\n        vector<vector<int>> tab(n+2, vector<int>(n+2, 1)); \\n        // For \"tab[l][r] += tab[l][root-1] * tab[root+1][r]\", the minimum\\n        // value of index is 0 and the maximum value of index is n+1. Thus,\\n        // the dimension of the dp table is n+2 x n+2.\\n        \\n        for(int l = n; l >= 1; --l) {\\n            for(int r = l + 1; r <= n; ++r) {\\n                tab[l][r] = 0;\\n                for(int root = l; root <= r; ++root) {\\n                    tab[l][r] += tab[l][root-1] * tab[root+1][r];\\n                }\\n            }\\n        }\\n        \\n        return tab[1][n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 276140,
                "title": "javascript-simplest-just-math-no-loops-faster-than-97",
                "content": "I\\'ve seen a lot of solutions that are very programmatic using for loops and such to do node traversal. But node combinations can be calculated with a simple Catalan number factorial equation: 2n!/(n+1)!n!\\n\\n```\\nvar numTrees = function(n) {\\n    return factorial( 2 * n ) / ( factorial( n + 1 ) * factorial( n ) );\\n};\\n\\nfunction factorial( num ){\\n    if( num <= 0 )\\n        return 1;\\n    else\\n        return num * factorial( num - 1 );\\n}\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "```\\nvar numTrees = function(n) {\\n    return factorial( 2 * n ) / ( factorial( n + 1 ) * factorial( n ) );\\n};\\n\\nfunction factorial( num ){\\n    if( num <= 0 )\\n        return 1;\\n    else\\n        return num * factorial( num - 1 );\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 31782,
                "title": "easy-to-understand-top-down-dp-solution",
                "content": "For a valid BST, there must be a node that is the root. The root can be any number between 1 and n. What if the root is k where k is in between 1 and n? It becomes obvious that 1 to k-1 should be k's left children and k+1 to n should be k's right children. Thus, a recursive formula is formulated as follows:\\n\\n    number of BSTs with k being the root \\n    = count of BSTs of k-1 consecutive numbers * count of BSTs of n-k consecutive numbers\\n\\nAnd since we have a total of n choices for k, total number of BSTs is thus a sum of all n choices for k.\\n\\nCode in Java:\\n\\n    public int numTrees(int n) {\\n        return numTrees(n, new int[n]);\\n    }\\n    \\n    private int numTrees(int n, int[] arr) {\\n        if(n<=1) return 1;\\n        if(arr[n-1] > 0) return arr[n-1];\\n        \\n        int num = 0;\\n        for(int i=1; i<=n; i++) \\n            num += numTrees(i-1, arr) * numTrees(n-i, arr);\\n\\n        arr[n-1] = num; // store for reuse\\n        return num;\\n    }",
                "solutionTags": [],
                "code": "For a valid BST, there must be a node that is the root. The root can be any number between 1 and n. What if the root is k where k is in between 1 and n? It becomes obvious that 1 to k-1 should be k's left children and k+1 to n should be k's right children. Thus, a recursive formula is formulated as follows:\\n\\n    number of BSTs with k being the root \\n    = count of BSTs of k-1 consecutive numbers * count of BSTs of n-k consecutive numbers\\n\\nAnd since we have a total of n choices for k, total number of BSTs is thus a sum of all n choices for k.\\n\\nCode in Java:\\n\\n    public int numTrees(int n) {\\n        return numTrees(n, new int[n]);\\n    }\\n    \\n    private int numTrees(int n, int[] arr) {\\n        if(n<=1) return 1;\\n        if(arr[n-1] > 0) return arr[n-1];\\n        \\n        int num = 0;\\n        for(int i=1; i<=n; i++) \\n            num += numTrees(i-1, arr) * numTrees(n-i, arr);\\n\\n        arr[n-1] = num; // store for reuse\\n        return num;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31802,
                "title": "9-line-clean-java-dp-solution",
                "content": "    public int numTrees(int n) {\\n    \\t\\tif (n < 2) return n;\\n    \\t\\tint[] dp = new int[n + 1];\\n    \\t\\tdp[0] = 1; dp[1] = 1;\\n    \\t\\tfor (int i = 2; i <= n; i++) {\\n    \\t\\t\\tint sum = 0;\\n    \\t\\t\\tfor (int j = 0; j < i; j++)\\n    \\t\\t\\t\\tsum += dp[j] * dp[i - j - 1];\\n    \\t\\t\\tdp[i] = sum;\\n    \\t\\t}\\n    \\t\\treturn dp[n];\\n    \\t}",
                "solutionTags": [],
                "code": "    public int numTrees(int n) {\\n    \\t\\tif (n < 2) return n;\\n    \\t\\tint[] dp = new int[n + 1];\\n    \\t\\tdp[0] = 1; dp[1] = 1;\\n    \\t\\tfor (int i = 2; i <= n; i++) {\\n    \\t\\t\\tint sum = 0;\\n    \\t\\t\\tfor (int j = 0; j < i; j++)\\n    \\t\\t\\t\\tsum += dp[j] * dp[i - j - 1];\\n    \\t\\t\\tdp[i] = sum;\\n    \\t\\t}\\n    \\t\\treturn dp[n];\\n    \\t}",
                "codeTag": "Unknown"
            },
            {
                "id": 1926210,
                "title": "100-fastest-swift-solution",
                "content": "```\\nclass Solution {\\n    func numTrees(_ n: Int) -> Int {\\n        guard n > 1 else { return 1 }\\n        \\n        var map: [Int] = [1, 1]\\n        \\n        for i in 2...n {\\n            var tmp = 0\\n            \\n            for j in 0..<i {\\n                tmp += map[j] * map[i - j - 1]\\n            }\\n            map.append(tmp)\\n        }\\n        \\n        return map[n]\\n    }\\n\\n}\\n```\\n\\nLet me know in comments if you have any doubts. I will be happy to answer.\\n\\nPlease upvote if you found the solution useful.",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func numTrees(_ n: Int) -> Int {\\n        guard n > 1 else { return 1 }\\n        \\n        var map: [Int] = [1, 1]\\n        \\n        for i in 2...n {\\n            var tmp = 0\\n            \\n            for j in 0..<i {\\n                tmp += map[j] * map[i - j - 1]\\n            }\\n            map.append(tmp)\\n        }\\n        \\n        return map[n]\\n    }\\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2083012,
                "title": "c-easy-short-simple-o-n-hindi-comments-dynamic-programming",
                "content": "```\\nclass Solution \\n{\\npublic:\\n    int numTrees(int n) \\n    {\\n        vector<int> dp(n+1, 0);\\n        dp[0] = 1;\\n        dp[1] = 1;\\n        \\n        for(int i=2 ; i<n+1 ; i++)\\n        {\\n            int left = 0;\\n            int right = i-1;\\n            \\n            while(left<=i-1)\\n            {\\n                dp[i] += dp[left] * dp[right];\\n                left++;\\n                right--;\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```\\n    manlo koi element nii h {} to 1 way hoga bnane ka\\n    ek element hoga {10} to v 1 way hoga\\n    2 elements k liye {10,20} 2 ways h\\n    3 elements k liye { 10,20,30 } aise bnega :\\n    \\n            10                   Left me ek v element ni h mtlb 0 element bnane ka 1 way\\n           / \\\\              ===> Ab wo {20,30} bnane ka 2 tareeka hoskta h kyuki 2 element h\\n         {}  {20,30}             Mtlb  (1 * 2) ways hoga\\n         \\n            20\\n           / \\\\              ===> 1-1 element h dono side mtlb 1*1 way h\\n        {10}  {30}\\n        \\n            30\\n           / \\\\              ===> left me 2 element mtlb 2 ways ar right me 0 element mtlb 1 way\\n     {10,20}   {}                Mtlb 2*1 ways\\n     \\n                        TOTAL => 1*2 + 1*1 + 2*1 = 5 ways\\n                    \\n                    Hmlg ye notice krenge ki left =0 se start hora h dp me ar right n-1\\n                    ar phr left har bar 1 badhra h ar right har bar 1 ghatra h to isiko hmlog\\n                    use krke dp table construct krlete h \\nSMJH GYE NA BRO !!",
                "solutionTags": [
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    int numTrees(int n) \\n    {\\n        vector<int> dp(n+1, 0);\\n        dp[0] = 1;\\n        dp[1] = 1;\\n        \\n        for(int i=2 ; i<n+1 ; i++)\\n        {\\n            int left = 0;\\n            int right = i-1;\\n            \\n            while(left<=i-1)\\n            {\\n                dp[i] += dp[left] * dp[right];\\n                left++;\\n                right--;\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 983454,
                "title": "visualize-the-intuition-step-by-step-with-added-diagrams-efficient-clean-c-solution",
                "content": "Let\\'s visualize and find out the number of structurally unique BST\\'s for some of the smallest valid values of \\'n\\', i.e. when n = 1, 2, 3, 4.\\n\\n![image](https://assets.leetcode.com/users/images/08ad0984-a2c1-4be2-ae4f-7aa47fb80a5a_1608737376.0809412.png)\\n\\n![image](https://assets.leetcode.com/users/images/76cffad1-b0bf-428d-b365-d0e68a62ca21_1608737451.4126863.png)\\n\\n![image](https://assets.leetcode.com/users/images/d8e31cba-ddc0-4e49-a7ff-98cada26e688_1608737469.9255254.png)\\n\\nIf n = 4, we can calculate the result, if we know the number of structurally unique BST\\'s possible when n = 3, 2 and 1. \\n\\n**N.B.:** Why are we multiplying the possible structurally unique BST\\'s we get from the root node\\'s left and right subtree ? As because we need to consider all the structurally unique BST combinations which we can get via rearranging the nodes in the left and right subtree of the root node.\\n\\nSimilarly, when **n = 5**, the total number of structurally unique BST\\'s would be: \\n```\\ndp[5] = dp[4] + (dp[1] * dp[3]) + (dp[2] * dp[2]) + (dp[3] * dp[1]) + dp[4]\\n\\t\\t = 14 + (1 * 5) + (2 * 2) + (5 * 1) + 14\\n         = 42\\n```\\n\\nIf n = 5, we can calculate the result, if we know the number of structurally unique BST\\'s possible when n = 4, 3, 2 and 1.\\nThus, we can see the presence of overlapping sub-problems, and in order to avoid the repetitive computation of the same set of sub-problems we would store the result of a computed sub-problem (here we are using an 1D array \\'dp\\'), and access it in future as and when needed. \\n\\nNow, a bit careful observation, and we can spot a pattern like this:\\n```\\n(dp[0] * dp[n - 1]) +\\n(dp[1] * dp[n - 2]) +\\n(dp[2] * dp[n - 3]) +\\n.... + \\n(dp[n - 1] * dp[0]).\\n```\\n\\nAs evident from above that, if dp[0] is 0, it will make `(dp[0] * dp[n - 1])` and `(dp[n - 1] * dp[0])` result to 0. Hence, we initialize dp[0] as 1.\\n\\nWe compute the result sequentially, (i.e. when i = 1, 2, 3, ..., n ) according to pattern described as follows:\\n```\\nfor (int i = 1; i < n + 1; ++i) {\\n\\tfor (int j = 0; j < i; ++j) {\\n\\t\\tdp[i] += dp[j] * dp[i - j - 1];\\n\\t}\\n}\\n```\\n\\nWoohoo ! That\\'s all.\\n\\n**Implementation in C++:** \\n\\n**Bottom-Up Approach:**\\n```\\nclass Solution {\\npublic:\\n    int dp[20];  // 1 <= n <= 19\\n    \\n    int numTrees(int n) {\\n        \\n        fill(dp, dp + 20, 0);\\n        \\n        dp[0] = 1;\\n        \\n        for (int i = 1; i < n + 1; ++i) {\\n            \\n            for (int j = 0; j < i; ++j) {\\n                \\n                dp[i] += dp[j] * dp[i - j - 1];\\n            }\\n        }\\n        \\n        return dp[n];\\n    }\\n};\\n```\\n\\n**Top-Down Approach:**\\n```\\nclass Solution {\\npublic:\\n    int dp[20];   // 1 <= n <= 19\\n    \\n    int numTreesUtil(int n) {\\n        \\n        if (n < 1)\\n            return 1;\\n        \\n        if (dp[n] != -1)\\n            return dp[n];\\n        \\n        int res = 0;\\n        \\n        for (int i = 0; i < n; ++i)\\n            res += numTreesUtil(i) * numTreesUtil(n - i - 1);\\n        \\n        return dp[n] = res;\\n    }\\n    \\n    int numTrees(int n) {\\n        fill(dp, dp + 20, -1);\\n        return numTreesUtil(n);\\n    }\\n};\\n```\\n\\n*Cheers !*",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming"
                ],
                "code": "```\\ndp[5] = dp[4] + (dp[1] * dp[3]) + (dp[2] * dp[2]) + (dp[3] * dp[1]) + dp[4]\\n\\t\\t = 14 + (1 * 5) + (2 * 2) + (5 * 1) + 14\\n         = 42\\n```\n```\\n(dp[0] * dp[n - 1]) +\\n(dp[1] * dp[n - 2]) +\\n(dp[2] * dp[n - 3]) +\\n.... + \\n(dp[n - 1] * dp[0]).\\n```\n```\\nfor (int i = 1; i < n + 1; ++i) {\\n\\tfor (int j = 0; j < i; ++j) {\\n\\t\\tdp[i] += dp[j] * dp[i - j - 1];\\n\\t}\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    int dp[20];  // 1 <= n <= 19\\n    \\n    int numTrees(int n) {\\n        \\n        fill(dp, dp + 20, 0);\\n        \\n        dp[0] = 1;\\n        \\n        for (int i = 1; i < n + 1; ++i) {\\n            \\n            for (int j = 0; j < i; ++j) {\\n                \\n                dp[i] += dp[j] * dp[i - j - 1];\\n            }\\n        }\\n        \\n        return dp[n];\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int dp[20];   // 1 <= n <= 19\\n    \\n    int numTreesUtil(int n) {\\n        \\n        if (n < 1)\\n            return 1;\\n        \\n        if (dp[n] != -1)\\n            return dp[n];\\n        \\n        int res = 0;\\n        \\n        for (int i = 0; i < n; ++i)\\n            res += numTreesUtil(i) * numTreesUtil(n - i - 1);\\n        \\n        return dp[n] = res;\\n    }\\n    \\n    int numTrees(int n) {\\n        fill(dp, dp + 20, -1);\\n        return numTreesUtil(n);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 515632,
                "title": "easy-understand-dp-solution-with-dictionary-beat-90-time-and-100-space",
                "content": "Unlike most people use list as cache, I use dictionary here. The performance for add and get will be exactly same. It is only good for when you want to print the DP result.\\n\\nSo DP dictionary has key, value pair. The key represent the number of left side children or the number of right side children and the value represnt the number of possible subtree. The answer is sum of each root\\'s posibilities of substree\\n\\nFor example:\\n\\nn = 1, the root is 1\\nthere is 0 left childen or 0 right children, root is the only node\\ndp[0] = 1 represnt there is 1 possible substree for the root has 0 left children or 0 right children. Here 1 possible subtree is node(None)\\nso when n = 1, ans is dp[0]xdp[0] = 1\\n```\\n\\t1\\n```\\n\\nn = 2, the root is either 1 or 2\\nwhen root is 1 there is 0 left children and 1 right children\\nwhen root is 2 there is 1 left children and 0 right children\\ndp[1]=1 represent there is 1 possible substree for the root has 1 left children or 1 right children. Here the 1 possible substree is left child node(1) when 2 is the root and right child node(2) when 1 is the root.\\n\\nso when n =2, the ans is dp[1]xdp[0]+dp[0]xdp[1] = 2\\n```\\n\\t   2                   1 \\n\\t  /          or          \\\\\\n\\t 1                        2\\n```\\n\\nn = 3, the root is 1,2 or 3\\nwhen root is 1 there is 0 left children and 2 right children\\nwhen root is 2 there is 1 left children and 1 right children\\nwhen root is 3 there is 2 left children and 0 right children\\ndp[2] = 2 represent there is 2 possible substree for the root has 2 left children or 2 right children. \\nand based on the above pattern we know that when root has 1 left children or 1 right children, here the 2 possible substree is left children node(1or 2) when root is 3 or right children node (2,3) when root is 1.\\nwhen n = 3, the ans is dp[0]xdp[2] + dp[2]xdp[0] + dp[2]xdp[0] + dp[1]xdp[1] + dp[0]xdp[1]=5\\n```\\n   1         3     3      2      1\\n    \\\\       /     /      / \\\\      \\\\\\n     3     2     1      1   3      2\\n    /     /       \\\\                 \\\\\\n   2     1         2                 3\\n```\\n``` python\\ndef numTrees(self, n: int) -> int:\\n        dp = {0:1, 1:1, 2:2}\\n        if n < 3: return dp[n]\\n        for i in range(3, n+1):\\n            num = 0\\n            for j in range(i):\\n                num += dp[j]*dp[i-j-1]\\n            dp[i] = num\\n        return dp[n]\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Dynamic Programming"
                ],
                "code": "```\\n\\t1\\n```\n```\\n\\t   2                   1 \\n\\t  /          or          \\\\\\n\\t 1                        2\\n```\n```\\n   1         3     3      2      1\\n    \\\\       /     /      / \\\\      \\\\\\n     3     2     1      1   3      2\\n    /     /       \\\\                 \\\\\\n   2     1         2                 3\\n```\n``` python\\ndef numTrees(self, n: int) -> int:\\n        dp = {0:1, 1:1, 2:2}\\n        if n < 3: return dp[n]\\n        for i in range(3, n+1):\\n            num = 0\\n            for j in range(i):\\n                num += dp[j]*dp[i-j-1]\\n            dp[i] = num\\n        return dp[n]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 132609,
                "title": "java-python-dp-on-tree",
                "content": "The problem is to get the number of unique structurally BST that stores `1...n`.\\n\\n* If `n = 1`, there is only one BST.\\n* If `n > 1`, each `r` for `1 <= r <= n` can be root. Then the problem is **divided** into two subproblems \\n\\t* How many structurally unique BST\\'s that store values `1 ... r-1`? (subproblem overlap)\\n\\t* How many structurally unique BST\\'s that store values `r+1 ... n`?\\n\\tThe answer is the same as `How many structurally unique BST\\'s that store values 1 ... n-r` (subproblem overlap) because values in tree don\\'t matter.\\n\\n```\\nIf we define\\nresult[i] as number of unique structurally BST that stores 1...i\\n\\nthen,\\nresult[i] = sum(result[r-1]* result[i-r]) for `1 <= r <= n`\\n\\nbase case result[0] = 1 which represents an empty tree\\n```\\n\\nWe can implement the idea above by Bottom-up Dp as below :\\n```\\n    public int numTrees(int n) {\\n        int[] result = new int[n + 1];\\n        result[0] = 1;\\n        for (int i = 1; i <= n; i++) {          \\n            for (int r = 1; r <= i; r++) {\\n                result[i] += result[r - 1] * result[i - r];\\n            }\\n        }\\n        return result[n];\\n    }\\n```\\nWe can also apply Recursion and Memorization technique :\\n```\\n    public int numTrees(int n) {\\n        // Memorization.\\n        int[] memo = new int[n + 1];        \\n        Arrays.fill(memo, -1);\\n        // Base case.\\n        memo[0] = 1;\\n        memo[1] = 1;\\n        \\n        return numTrees(n, memo);\\n    }\\n    \\n    private int numTrees(int n, int[] memo) {\\n        if (memo[n] != -1)\\n            return memo[n];\\n\\n        // Recursive case.\\n        int sum = 0;\\n        for (int i = 0; i < n; i++) {\\n            int leftRes = numTrees(n - i - 1, memo);\\n            memo[n - i - 1] = leftRes;\\n            int rightRes = numTrees(i, memo);\\n            memo[i] = rightRes;\\n            sum += leftRes * rightRes;\\n        }\\n        return sum;\\n    }\\n```\\n**Python**\\n```\\n    def numTrees(self, n):\\n        if n == 1:\\n            return 1\\n        state = [0] * (n+1)  # Number of structurally unique BST\\'s that store values 1..n\\n        \\n        state[0] = 1\\n        for i in range(1, n + 1):  \\n            for r in range(1, i + 1):  # Root candidates [1, i].\\n                state[i] += state[r - 1] * state[i - r]\\n                \\n        return state[n]\\n```\\n**(\\u4EBA \\u2022\\u0348\\u1D17\\u2022\\u0348)** Thanks for voting!",
                "solutionTags": [],
                "code": "```\\nIf we define\\nresult[i] as number of unique structurally BST that stores 1...i\\n\\nthen,\\nresult[i] = sum(result[r-1]* result[i-r]) for `1 <= r <= n`\\n\\nbase case result[0] = 1 which represents an empty tree\\n```\n```\\n    public int numTrees(int n) {\\n        int[] result = new int[n + 1];\\n        result[0] = 1;\\n        for (int i = 1; i <= n; i++) {          \\n            for (int r = 1; r <= i; r++) {\\n                result[i] += result[r - 1] * result[i - r];\\n            }\\n        }\\n        return result[n];\\n    }\\n```\n```\\n    public int numTrees(int n) {\\n        // Memorization.\\n        int[] memo = new int[n + 1];        \\n        Arrays.fill(memo, -1);\\n        // Base case.\\n        memo[0] = 1;\\n        memo[1] = 1;\\n        \\n        return numTrees(n, memo);\\n    }\\n    \\n    private int numTrees(int n, int[] memo) {\\n        if (memo[n] != -1)\\n            return memo[n];\\n\\n        // Recursive case.\\n        int sum = 0;\\n        for (int i = 0; i < n; i++) {\\n            int leftRes = numTrees(n - i - 1, memo);\\n            memo[n - i - 1] = leftRes;\\n            int rightRes = numTrees(i, memo);\\n            memo[i] = rightRes;\\n            sum += leftRes * rightRes;\\n        }\\n        return sum;\\n    }\\n```\n```\\n    def numTrees(self, n):\\n        if n == 1:\\n            return 1\\n        state = [0] * (n+1)  # Number of structurally unique BST\\'s that store values 1..n\\n        \\n        state[0] = 1\\n        for i in range(1, n + 1):  \\n            for r in range(1, i + 1):  # Root candidates [1, i].\\n                state[i] += state[r - 1] * state[i - r]\\n                \\n        return state[n]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3658717,
                "title": "easy-c-code-for-beginners-0ms",
                "content": "# Intuition\\n\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe Idea behind this problem :\\n\\nWe should iterate every possible node between 1 and n as a root node. Calculate the number of possible combinations for each root node by calculating the number of possible combinations of left subtree and right subtree.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nLet us suppose we take n=5\\nwe should iterate every root from 1 to 5 as a root node.\\nIf the root node is 3 we can have 1 and 2 in left subtree, 4 and 5 in right subtree. \\nThe number of possible combinations of left subtree = 2 \\nThe number of possible combinations of right subtree = 2\\n\\n\\n![leetcode.jpg](https://assets.leetcode.com/users/images/9d80b89c-d77a-4f7e-8a10-5b67e4168a24_1687207458.5306914.jpeg)\\n\\nThe number of possible ways to build a binary tree with root node 3 = (The number of possible ways to build left binary subtree)*(The number of possible ways to build right binary subtree) = 4.\\n\\nTherefore the total number of possible binary search trees with value of n = The sum of the total number of possible binary search trees with every node as root node.\\n# Complexity\\n- Time complexity:\\n- O(n^2)\\n\\n- Space complexity:\\n- O(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0]=1;\\n        for(int i=1;i<=n;i++)\\n        {\\n            int sum=0;\\n            for(int j=0;j<i;j++)\\n            {\\n                sum+=dp[j]*dp[i-j-1];\\n            }\\n            dp[i]=sum;\\n        }\\n        return dp[n];\\n    }\\n};\\n```\\n**Hope this helps you.**\\n**Thank you : )**",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Dynamic Programming",
                    "Binary Search Tree"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0]=1;\\n        for(int i=1;i<=n;i++)\\n        {\\n            int sum=0;\\n            for(int j=0;j<i;j++)\\n            {\\n                sum+=dp[j]*dp[i-j-1];\\n            }\\n            dp[i]=sum;\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 851000,
                "title": "easy-c-dp-solution-faster-then-100",
                "content": "Recursive \\n```\\n\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        if(n==0) return 1;\\n        if(n==1 || n==2) return n;\\n        \\n        int sum = 0;\\n        \\n        for(int i=1;i<=n;i++) {\\n            \\n            sum+=(numTrees(i-1) * numTrees(n-i));\\n        }\\n        return sum;\\n        \\n    }\\n};\\n```\\n\\ndp : memoization\\n```\\nclass Solution {\\npublic:\\n\\n    int makeTree(vector<int>& dp,int n) {\\n        if(n==0) return 1;\\n        if(n==1 || n==2) return n;\\n        \\n        int sum = 0;\\n        if(dp[n]!=-1) return dp[n];\\n        \\n        for(int i=1;i<=n;i++) {\\n            \\n            sum+=(makeTree(dp, i-1) * makeTree(dp, n-i));\\n        }\\n        dp[n] = sum;\\n        return dp[n];\\n    }\\n    int numTrees(int n) {\\n        vector<int> dp(20,-1);\\n\\n        dp[n] = makeTree(dp, n);\\n        return dp[n];\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Dynamic Programming",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\n\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        if(n==0) return 1;\\n        if(n==1 || n==2) return n;\\n        \\n        int sum = 0;\\n        \\n        for(int i=1;i<=n;i++) {\\n            \\n            sum+=(numTrees(i-1) * numTrees(n-i));\\n        }\\n        return sum;\\n        \\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n\\n    int makeTree(vector<int>& dp,int n) {\\n        if(n==0) return 1;\\n        if(n==1 || n==2) return n;\\n        \\n        int sum = 0;\\n        if(dp[n]!=-1) return dp[n];\\n        \\n        for(int i=1;i<=n;i++) {\\n            \\n            sum+=(makeTree(dp, i-1) * makeTree(dp, n-i));\\n        }\\n        dp[n] = sum;\\n        return dp[n];\\n    }\\n    int numTrees(int n) {\\n        vector<int> dp(20,-1);\\n\\n        dp[n] = makeTree(dp, n);\\n        return dp[n];\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 769437,
                "title": "o-n-time-o-1-space-solution-catalan-numbers-video-solution",
                "content": "This problem can be solved using Catalan Numbers..\\n\\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/iqv-qo_6xvE\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "solutionTags": [],
                "code": "This problem can be solved using Catalan Numbers..\\n\\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/iqv-qo_6xvE\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "codeTag": "Unknown"
            },
            {
                "id": 674968,
                "title": "very-intuitive-recursive-solution",
                "content": "We are supposed to find out the number of unique binary trees from the sequence 1....n \\nThis means the number of nodes is n\\n1. Lets us start by saying that we will have 0 left nodes. That means right nodes will be  n - 1. We are subtracting 1 from n because out of the n nodes there will be a root too. Hence, n - 1 right nodes.\\n2. Similarly if we have 1 left node that means right nodes will be n - 1 - 1. One 1 is being subracted from n because of the root node and one 1 is being subtracted because of 1 left node.\\n3. We will have to do this for 0 left nodes to n -1 left nodes. Read ( range(0,n) in python)\\n4. Now since we know the number of nodes in left and right subtrees, we can recursively call the function on these.\\n5. Our base case if n == 0, which is 1 because if n = 0, only null/empty tree would be present.\\n\\n**Basic/Naive Algorithm**\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        if n == 0:\\n            return 1\\n        numSubtrees = 0\\n        for leftSubtreeNodeCount in range(n):\\n            rightSubtreeNodeCount = n - 1 - leftSubtreeNodeCount\\n            leftSubtrees = self.numTrees(leftSubtreeNodeCount)\\n            rightSubtrees = self.numTrees(rightSubtreeNodeCount)\\n            numSubtrees += leftSubtrees * rightSubtrees\\n        return numSubtrees\\n```\\n\\n**With memoization to prevent calculating for same n multiple times. Similar to Fibonacci**\\n```\\nclass Solution:\\n    def numTrees(self, n: int, cache={}) -> int:\\n        if n == 0:\\n            return 1\\n        if n in cache:\\n            return cache[n]\\n        numSubtrees = 0\\n        for leftSubtreeNodeCount in range(n):\\n            rightSubtreeNodeCount = n - 1 - leftSubtreeNodeCount\\n            leftSubtrees = self.numTrees(leftSubtreeNodeCount, cache)\\n            rightSubtrees = self.numTrees(rightSubtreeNodeCount, cache)\\n            numSubtrees += leftSubtrees * rightSubtrees\\n        cache[n] = numSubtrees\\n        return numSubtrees\\n```\\n",
                "solutionTags": [
                    "Python3",
                    "Recursion"
                ],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        if n == 0:\\n            return 1\\n        numSubtrees = 0\\n        for leftSubtreeNodeCount in range(n):\\n            rightSubtreeNodeCount = n - 1 - leftSubtreeNodeCount\\n            leftSubtrees = self.numTrees(leftSubtreeNodeCount)\\n            rightSubtrees = self.numTrees(rightSubtreeNodeCount)\\n            numSubtrees += leftSubtrees * rightSubtrees\\n        return numSubtrees\\n```\n```\\nclass Solution:\\n    def numTrees(self, n: int, cache={}) -> int:\\n        if n == 0:\\n            return 1\\n        if n in cache:\\n            return cache[n]\\n        numSubtrees = 0\\n        for leftSubtreeNodeCount in range(n):\\n            rightSubtreeNodeCount = n - 1 - leftSubtreeNodeCount\\n            leftSubtrees = self.numTrees(leftSubtreeNodeCount, cache)\\n            rightSubtrees = self.numTrees(rightSubtreeNodeCount, cache)\\n            numSubtrees += leftSubtrees * rightSubtrees\\n        cache[n] = numSubtrees\\n        return numSubtrees\\n```",
                "codeTag": "Java"
            },
            {
                "id": 591544,
                "title": "faster-than-100-0ms-2-line-of-logic-sinlge-forloop-java-without-dp",
                "content": "**Logic**\\n\\n*i have just used the combination formula, C(n, k) = ( n ! ) / [ (n-k)! * k! ] = **[** n*(n-1)(n-2)(n-3)....1 **]** **/** **[** (n-k) ! * k ! **]**\\n\\t\\t\\t = **[**  n * (n-1)(n-2)...(n-k)! **]** **/** (n-k)! * k !\\n\\t\\t\\t \\nNow (n-k)! factor get cancelled from Numerator and Denominator , and we got\\nC(n, k) = **[** n(n-1)...( n-(k+1) ) **]** **/** **[** k*(k-1)*(k-2)....1 **]**.\\n          = **[** (n-1)/1 **]** * **[** ( n-2)/2 **]** * **[** (n-3) / 3 **]**.....**[** (n- (k+1) / k **]**\\n\\nAnd finally by usnig single for loop startng from 0 upto k times\\njust multiply and divide.\\n\\n\\n\\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        long ans = 1;\\n\\t\\tint k = n;\\n        n = 2*n;\\n        \\n        for(int i = 0  ; i < k ;i++){\\n            ans *=  (n-i);\\n            ans /=  (i+1);\\n        }\\n        return (int)(ans/(k+1));       \\n    }\\n} \\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int numTrees(int n) {\\n        long ans = 1;\\n\\t\\tint k = n;\\n        n = 2*n;\\n        \\n        for(int i = 0  ; i < k ;i++){\\n            ans *=  (n-i);\\n            ans /=  (i+1);\\n        }\\n        return (int)(ans/(k+1));       \\n    }\\n} \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1977541,
                "title": "solving-it-by-pattern",
                "content": "**Case 1 :**\\n\\nWe will start of solving this problem with base cases. If it\\'s just 1 node, it\\'s obvious that there will be only possibility\\n\\n**Case 2 :**\\n\\nFor 2 nodes (n = 2), there will be two possibilities \\n1. ```1```node as root and ```2```as right child\\n2. ```2```node as root and ```1```as left child\\n\\n\\nFrom the above, it can also be observed that irrespective of the node values, two nodes with ascending values will always have only 2 combinations.\\n\\n**Case 3 :**\\n\\nFor finding the number of combinations for n = 3, the possible root values are ```1, 2, 3``` \\n1. If we have ```1``` as root, ```2, 3```will be on the right which boils down to ```case 2``` which is 2 possibilities\\n2. If we have ```2```as root, ```1```will be on the left and ```3```will be on the right which boils down to ```case 1``` which is 1 possibility\\n3. If we have ```3```as root, ```2, 1```will be on the left which again boils down to ```case 2```which is 2 possibility\\n\\nIf we add all the combinations, it\\'s 2 + 1 + 2 = 5 combinations. Hence, for n = 3, the result is 5\\n\\n**Conclusion**\\n\\nIf u observe carefully, we are getting a pattern here. For any value of n, there will be \\'n\\' possible values of root and for each root node, there will be certain number of left and right subtrees totalling all of which gives the total number of combinations. For example, if we take n = 4, the possible root values are 1 to 4. For each root node value from 1 to 4, \\n1. the number of left nodes can be calculated by subracting the current root node value by 1\\n2. the number of right nodes can be calculated by subracting the total number of nodes by the current value\\n\\nThat is for dp[4], it\\'s the sum of\\n1. dp[0] * dp[3] => for root node \\'1\\' [0 left child, 3 right child]\\n2. dp[1] * dp[2] => for root node \\'2\\' [1 left child, 2 right child]\\n3. dp[2] * dp[1] => for root node \\'3\\' [2 left child, 1 right child]\\n4. dp[3] * dp[0] => for root node \\'4\\' [3 left child, 0 right child]\\n\\nSince, it\\'s obvious that there is a lot of re-computation, we can store the result of each computation against that certain number of nodes and reuse it.\\n\\n**Code :**\\n\\n```\\npublic int numTrees(int n) {\\n\\t\\t// array to cache the number of combinations against node count\\n        int[] dp = new int[n + 1];\\n\\t\\t// base case\\n\\t\\tdp[0] = dp[1] = 1;\\n\\t\\t// traversing from 1 to n even though we need the result of n because for finding the nth node, we need the sub nodes value.\\n        for (int node = 2; node <= n; ++node) {\\n\\t\\t\\t// for each root node, calculating the left and right node count and finding the number of possible combinations from the cached array\\n            for (int root = 1; root <= node; ++root) {\\n                int left = root - 1, right = node - root;\\n                dp[node] += dp[left] * dp[right];\\n            }\\n        }\\n\\t\\t// returning the last count since it gives the nth count\\n        return dp[n];\\n    }",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "```1```\n```2```\n```2```\n```1```\n```1, 2, 3```\n```1```\n```2, 3```\n```case 2```\n```2```\n```1```\n```3```\n```case 1```\n```3```\n```2, 1```\n```case 2```",
                "codeTag": "Unknown"
            },
            {
                "id": 1431292,
                "title": "0-ms-100-faster-dynamic-programming-memoization",
                "content": "assume every value as root and find the permutations around both sides of that value.\\n\\n```\\nclass Solution {\\npublic:\\n    int findx(vector<int> &dp,int n){\\n        if(n==1) return dp[n] = 1;\\n        if(n==2) return dp[n] = 2;\\n        \\n        if(dp[n]!=-1) return dp[n];\\n        int ans = 0;\\n        for(int i=1;i<=n;i++){\\n            ans += (findx(dp,i-1)*findx(dp,n-i));\\n        }\\n       return dp[n] = ans;\\n    }\\n    int numTrees(int n) {\\n        vector<int> dp(n+1,-1);\\n        dp[0] = 1;\\n        return findx(dp,n);\\n    }\\n};\\n```\\n\\n**Do upvote if code helps you**",
                "solutionTags": [
                    "C++",
                    "C",
                    "Dynamic Programming",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findx(vector<int> &dp,int n){\\n        if(n==1) return dp[n] = 1;\\n        if(n==2) return dp[n] = 2;\\n        \\n        if(dp[n]!=-1) return dp[n];\\n        int ans = 0;\\n        for(int i=1;i<=n;i++){\\n            ans += (findx(dp,i-1)*findx(dp,n-i));\\n        }\\n       return dp[n] = ans;\\n    }\\n    int numTrees(int n) {\\n        vector<int> dp(n+1,-1);\\n        dp[0] = 1;\\n        return findx(dp,n);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 703124,
                "title": "dp-solution-using-catalan-number-0ms-run-time",
                "content": "```\\n  public int numTrees(int n) {\\n        //catalan Number\\n     int v[]= new int[n+2];\\n        v[0]=1;\\n        v[1]=1;\\n        \\n        for(int i=2; i<=n; i++){\\n            v[i]=0;\\n            for(int j=0; j<i; j++){\\n                v[i]+=v[j]*v[i-j-1];\\n            }\\n        }\\n        return v[n];\\n    }\\n\\t```",
                "solutionTags": [],
                "code": "```\\n  public int numTrees(int n) {\\n        //catalan Number\\n     int v[]= new int[n+2];\\n        v[0]=1;\\n        v[1]=1;\\n        \\n        for(int i=2; i<=n; i++){\\n            v[i]=0;\\n            for(int j=0; j<i; j++){\\n                v[i]+=v[j]*v[i-j-1];\\n            }\\n        }\\n        return v[n];\\n    }\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 588903,
                "title": "dp-c-100-both-space-and-time",
                "content": "If you like or understood please upvote\\n```\\nint numTrees(int n) {\\n        if(n==1)\\n            return 1;\\n        vector<int> dp(n+1,0);\\n        dp[0]=1;dp[1]=1;\\n        dp[2]=2;\\n\\t\\t\\n        for(int i=2;i<n;i++){\\n            for(int j=0;j<=i;j++){\\n                dp[i+1]+=dp[j]*dp[i-j];\\n            }\\n        }\\n        return dp[n];\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\nint numTrees(int n) {\\n        if(n==1)\\n            return 1;\\n        vector<int> dp(n+1,0);\\n        dp[0]=1;dp[1]=1;\\n        dp[2]=2;\\n\\t\\t\\n        for(int i=2;i<n;i++){\\n            for(int j=0;j<=i;j++){\\n                dp[i+1]+=dp[j]*dp[i-j];\\n            }\\n        }\\n        return dp[n];\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 419773,
                "title": "easy-to-understand-java-solution-with-explanation",
                "content": "![image](https://assets.leetcode.com/users/cglotr/image_1572783162.png)\\n\\n`dp[n]` answers the question of \"what is the number of configurations if I have `n` numbers\".\\n\\nThe next important idea is that we don\\'t care what is the structure of the trees in the _boxes_ that\\nI drew in the above example. What we care is how many numbers that are inside the _box_.\\n\\nIt\\'s easy to answer that question since we can get it from `dp[n]`.\\n\\nNotice that to calculate `dp[n]`, we need to know `dp[n - 1]`, `dp[n - 2]`, and so on until we reach\\nthe base case which is `dp[0]` & `dp[1]`.\\n\\nNotice the pattern, `dp[n] = d[n - 1] * dp[0] + ... + dp[0] * d[n - 1]`. Therefore, we can build the Dynamic\\nProgramming (DP) table with bottom up fashion.\\n\\n**Code**\\n\\n```Java\\nclass Solution {\\n    \\n    public int numTrees(int n) {\\n        if (n < 2) {\\n            return 1;\\n        }\\n        \\n        int[] dp = new int[n + 1];\\n        \\n        dp[0] = 1;\\n        dp[1] = 1;\\n        \\n        for (int i = 2; i <= n; i++) {\\n            for (int j = 0; j < i; j++) {\\n                dp[i] += dp[i - 1 - j] * dp[j];\\n            }\\n        }\\n        \\n        return dp[n];\\n    }\\n    \\n}\\n\\n```",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "```Java\\nclass Solution {\\n    \\n    public int numTrees(int n) {\\n        if (n < 2) {\\n            return 1;\\n        }\\n        \\n        int[] dp = new int[n + 1];\\n        \\n        dp[0] = 1;\\n        dp[1] = 1;\\n        \\n        for (int i = 2; i <= n; i++) {\\n            for (int j = 0; j < i; j++) {\\n                dp[i] += dp[i - 1 - j] * dp[j];\\n            }\\n        }\\n        \\n        return dp[n];\\n    }\\n    \\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 343283,
                "title": "catalan-numbers",
                "content": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n      int dp[n+1];\\n      if(n==0 || n==1) return n;\\n      dp[0]=1; dp[1]=1;\\n      for(int i=2;i<=n;i++)\\n      {\\n          dp[i]=0;\\n          for(int j=0;j<i;j++)\\n          {\\n              dp[i]+=dp[j]*dp[i-j-1];\\n          }\\n      }\\n        return dp[n];\\n    }\\n};\\n```\\nhttps://www.geeksforgeeks.org/program-nth-catalan-number/",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n      int dp[n+1];\\n      if(n==0 || n==1) return n;\\n      dp[0]=1; dp[1]=1;\\n      for(int i=2;i<=n;i++)\\n      {\\n          dp[i]=0;\\n          for(int j=0;j<i;j++)\\n          {\\n              dp[i]+=dp[j]*dp[i-j-1];\\n          }\\n      }\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 305547,
                "title": "faster-than-100-00-of-java-most-detailed-chart-explanation",
                "content": "![image](https://assets.leetcode.com/users/python_qhuan/image_1559658584.png)\\nGive my clear DP thinking\\uFF1A\\nAs we all know ,  when n = 0\\uFF1Ares = 0;  when n = 1\\uFF1Ares = 1;   when n = 2: res = 2\\nso when n = 3\\uFF0Cwe can think like this:  \\u2461 show have two numbers Smaller than 3\\uFF0Cas a whole\\uFF0Conly this 3 structures\\uFF1A\\n**Attention\\uFF1Adp[0] = 1, it plays an auxiliary role.**\\n![image](https://assets.leetcode.com/users/python_qhuan/image_1559661396.png)\\n```\\nso  dp[3] = dp[2]dp[0] + dp[1]*dp[1] + dp[0]*dp[2] = 2 + 1 + 2 = 5\\n```\\n\\nso when n = 4\\uFF0Cwe can think like this: \\u2462 show have three numbers Smaller than 4:  only this 4 structures\\n![image](https://assets.leetcode.com/users/python_qhuan/image_1559661405.png)\\n```\\nso dp[4] = dp[3]*dp[0]  + dp[2]*dp[1] + dp[1]*dp[2] + dp[0] *dp[3] = 5 + 2 + 2 + 5 = 14\\t\\n```\\n\\n\\nso when n = 5\\uFF0Cwe can think like this: \\u2463 show have four numbers Smaller than 5:  only this 5 structures\\n![image](https://assets.leetcode.com/users/python_qhuan/image_1559661418.png)\\n```\\nso dp[5] = dp[4]*dp[0] + dp[3]*dp[1] + dp[2]*dp[2] + dp[1]*dp[3] + dp[0]*dp[4] = 14 + 5 + 2*2 + 5 + 14 = 42;\\n```\\n\\n\\nlike this,you can find the regular \\uFF0Cso my code is under\\uFF0Cthink  even and odd cases\\uFF1A\\n```\\npublic  int numTrees(int n) {\\n        if (n < 3) return n;\\n        int[] dp = new int[n + 1];\\n        dp[0] = 1;\\n        dp[1] = 1;\\n        dp[2] = 2;\\n        for (int i = 3; i <= n; i++) {\\n            int j = i - 1;\\n            int mid = i >> 1;\\n            if (i % 2 == 0) {\\n                while (j >= mid ) {\\n                    dp[i] += ((dp[j] * dp[i - 1 - j]) << 1);\\n                    j--;\\n                }\\n            } else {\\n                while (j > mid ) {\\n                    dp[i] += ((dp[j] * dp[i - 1 - j]) << 1);\\n                    j--;\\n                }\\n                dp[i] += dp[mid] * dp[mid];\\n            }\\n        }\\n        return dp[n];\\n    }\\n```\\nIf it helps you, can you give me a thumbs up  \\uD83D\\uDC4D ? Thanks ha\\'ha",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "```\\nso  dp[3] = dp[2]dp[0] + dp[1]*dp[1] + dp[0]*dp[2] = 2 + 1 + 2 = 5\\n```\n```\\nso dp[4] = dp[3]*dp[0]  + dp[2]*dp[1] + dp[1]*dp[2] + dp[0] *dp[3] = 5 + 2 + 2 + 5 = 14\\t\\n```\n```\\nso dp[5] = dp[4]*dp[0] + dp[3]*dp[1] + dp[2]*dp[2] + dp[1]*dp[3] + dp[0]*dp[4] = 14 + 5 + 2*2 + 5 + 14 = 42;\\n```\n```\\npublic  int numTrees(int n) {\\n        if (n < 3) return n;\\n        int[] dp = new int[n + 1];\\n        dp[0] = 1;\\n        dp[1] = 1;\\n        dp[2] = 2;\\n        for (int i = 3; i <= n; i++) {\\n            int j = i - 1;\\n            int mid = i >> 1;\\n            if (i % 2 == 0) {\\n                while (j >= mid ) {\\n                    dp[i] += ((dp[j] * dp[i - 1 - j]) << 1);\\n                    j--;\\n                }\\n            } else {\\n                while (j > mid ) {\\n                    dp[i] += ((dp[j] * dp[i - 1 - j]) << 1);\\n                    j--;\\n                }\\n                dp[i] += dp[mid] * dp[mid];\\n            }\\n        }\\n        return dp[n];\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 268910,
                "title": "c-dp-solution-with-detailed-explanation",
                "content": "we set dp[n] is the number of BST that store n consecutive values\\nwe can get dp[n] as follows:\\n\\nwe set 1 as root node, so left subtree has 0 children, right subtree has n - 1 children, the number of bst is dp[0] * dp[n - 1](we set dp[0] = 1);\\n\\nwe set 2 as root node, so left subtree has 1 children, right subtree has n - 2 children, the number of bst is dp[1] * dp[n - 2];\\n\\ngenerally, we set k as root noode, so left subtree has k - 1 children, right subtree has n - k children, the number of bst is dp[k - 1] * dp[n - k];\\n\\ndp[n] = d[0] * dp[n - 1] + ... + dp[k - 1] * dp[n - k] + ... + dp[n - 1] * dp[0];\\n\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n + 1, 0);\\n        dp[0] = 1;\\n        for (int i = 1; i <= n; ++i) {\\n            for (int k = 1; k <= i; ++k) {\\n                dp[i] += dp[k - 1] * dp[i - k];\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n + 1, 0);\\n        dp[0] = 1;\\n        for (int i = 1; i <= n; ++i) {\\n            for (int k = 1; k <= i; ++k) {\\n                dp[i] += dp[k - 1] * dp[i - k];\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 31743,
                "title": "simple-c-dp-solution",
                "content": "    int numTrees(int n) {\\n        vector<int> dp(n + 1, 0);\\n        dp[0] = dp[1] = 1;\\n        for (int i = 2; i <= n; i++) {\\n    \\t    for (int j = 0; j < i; j++) {\\n    \\t\\t    dp[i] += dp[j] * dp[i - 1 - j];\\n    \\t    }\\n        }\\n        return dp[n];\\n    }",
                "solutionTags": [],
                "code": "    int numTrees(int n) {\\n        vector<int> dp(n + 1, 0);\\n        dp[0] = dp[1] = 1;\\n        for (int i = 2; i <= n; i++) {\\n    \\t    for (int j = 0; j < i; j++) {\\n    \\t\\t    dp[i] += dp[j] * dp[i - 1 - j];\\n    \\t    }\\n        }\\n        return dp[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31745,
                "title": "attention-adding-five-lines-code-can-help-reducing-running-time-from-1140ms-to-4ms",
                "content": "if you comment the code between //code-start and //code-end, the running time will up to exceed 1000ms.\\nthis code avoid redundant calculation of the same size BST, because any sequence with the same size has the same BST number. for example, {1,2,3} has 5 BST, so does {1,2,4},{4,5,6}, ...{a,b,c}...\\n\\nclass Solution {\\npublic:\\n    \\n    int divideTrees(int start, int end, map<int,int> &mp)\\n    {\\n        if(start >= end)\\n        {\\n            return 1;\\n        }\\n        int k = end-start+1;\\n        //code-start\\n        if(mp.find(k) != mp.end())\\n        {\\n            return mp[k];\\n        }\\n        //code-end\\n        int res = 0;\\n        for(int i = start; i <= end; ++i)\\n        {\\n            int res1 = divideTrees(start, i-1, mp);\\n            int res2 = divideTrees(i+1,end,mp);\\n            res += res1*res2;\\n            mp[i-1-start+1] = res1;\\n            mp[end-i-1+1] = res2;\\n        }\\n        return res;\\n    }\\n    int numTrees(int n) {\\n        // IMPORTANT: Please reset any member data you declared, as\\n        // the same Solution instance will be reused for each test case.\\n        map<int,int> mp;\\n        mp[1] = 1;\\n        mp[2] = 2;\\n        return divideTrees(1,n,mp);\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    \\n    int divideTrees(int start, int end, map<int,int> &mp)\\n    {\\n        if(start >= end)\\n        {\\n            return 1;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1793822,
                "title": "beats-100-4-lines-easy-solution",
                "content": "```\\npublic:\\n    \\n//C(2n,n)/(n+1)\\n    \\n    int numTrees(int n) {\\n    long long ans=1;\\n    for(int i=1;i<=n;i++){\\n        ans=ans*(n+i)/i;\\n    }\\n    return ans/(n+1);\\n    }\\n\\t\\n\\tAbove solution is using formula of catalan number 2nCn/n+1\\n\\t",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\npublic:\\n    \\n//C(2n,n)/(n+1)\\n    \\n    int numTrees(int n) {\\n    long long ans=1;\\n    for(int i=1;i<=n;i++){\\n        ans=ans*(n+i)/i;\\n    }\\n    return ans/(n+1);\\n    }\\n\\t\\n\\tAbove solution is using formula of catalan number 2nCn/n+1\\n\\t",
                "codeTag": "Unknown"
            },
            {
                "id": 1686365,
                "title": "c-3-approaches-clean-and-concise",
                "content": "**1. Simple Catalan Number Logic**\\n\\nCatalan Numbers are defined as:\\n\\nCn=(2*nCn)/(n+1)\\n\\n**Time Complexity : O(n)\\nSpace Complexity : O(1)**\\n\\n```\\nclass Solution {\\npublic:\\n\\n    int numTrees(int n) {\\n        \\n        \\n        long long int a=2*n;\\n        int b=n;\\n\\t\\t\\n        int i,j;\\n        long long int ans=1;\\n        for(i=0;i<b;i++)\\n        {\\n            ans*=(a-i);\\n            ans/=(i+1);\\n        }\\n        return ans/(b+1);\\n    }\\n};\\n\\n```\\n\\n**2. DP Based Solution ( Memoization )**\\n\\n**Time Complexity : O(n*n)\\nSpace Complexity : O(n)**\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int dp[20];\\n    int solve(int n) {\\n        if(n <= 1)\\n            return 1;\\n        if(dp[n] != -1)\\n            return dp[n];\\n        int ans = 0;\\n        for(int i = 0; i < n; ++i)\\n            ans += (solve(i) * solve(n - i - 1));\\n        return dp[n] = ans;\\n    }\\n    int numTrees(int n) {\\n        memset(dp, -1, sizeof(dp));\\n        return solve(n);\\n    }\\n};\\n```\\n\\n\\n**3. DP Based Solution ( Tabulation )**\\n\\n**Time Complexity : O(n*n)\\nSpace Complexity : O(n)**\\n\\n```\\nclass Solution {\\npublic:\\n\\n    int numTrees(int n) {\\n        \\n        int dp[20];\\n        memset(dp,0,sizeof dp);\\n        dp[0]=1;\\n        dp[1]=1;\\n        \\n        int i,j;\\n        for(i=2;i<=n;i++)\\n        {\\n            for(j=0;j<i;j++)\\n            {\\n                dp[i]=dp[i]+dp[j]*dp[i-j-1];\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```\\n\\n\\n**Pls upvote if you found helpful**\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n\\n    int numTrees(int n) {\\n        \\n        \\n        long long int a=2*n;\\n        int b=n;\\n\\t\\t\\n        int i,j;\\n        long long int ans=1;\\n        for(i=0;i<b;i++)\\n        {\\n            ans*=(a-i);\\n            ans/=(i+1);\\n        }\\n        return ans/(b+1);\\n    }\\n};\\n\\n```\n```\\nclass Solution {\\npublic:\\n    int dp[20];\\n    int solve(int n) {\\n        if(n <= 1)\\n            return 1;\\n        if(dp[n] != -1)\\n            return dp[n];\\n        int ans = 0;\\n        for(int i = 0; i < n; ++i)\\n            ans += (solve(i) * solve(n - i - 1));\\n        return dp[n] = ans;\\n    }\\n    int numTrees(int n) {\\n        memset(dp, -1, sizeof(dp));\\n        return solve(n);\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n\\n    int numTrees(int n) {\\n        \\n        int dp[20];\\n        memset(dp,0,sizeof dp);\\n        dp[0]=1;\\n        dp[1]=1;\\n        \\n        int i,j;\\n        for(i=2;i<=n;i++)\\n        {\\n            for(j=0;j<i;j++)\\n            {\\n                dp[i]=dp[i]+dp[j]*dp[i-j-1];\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1519729,
                "title": "python-recursive-solution-with-explanation",
                "content": "### Introduction\\n\\nConsider the nodes with values ```1 - n``` in a list-like representation as follows:\\n\\n```\\n[ 1, 2, 3, 4, ..., n - 2, n - 1, n ]\\n  ^                              ^\\n  |                              |\\nstart                           end\\n```\\n\\nHere, ```start``` refers to the node with the least value, and ```end``` refers to the node with the greatest value. The  goal is to find the number of unique structural binary search trees (BST) that can be formed from ```start``` to ```end```, inclusive.\\n\\n---\\n\\n### Breaking it down\\n\\nConsider the simple example ```n = 3```. We have the following cases:\\n\\n1. ```start``` is the root node of the BST.\\n\\n```\\n[ 1, 2, 3 ]\\n  ^     ^\\n  |     |\\nstart  end\\n root\\n```\\n\\nPer BST rules, the remaining nodes with values 2 and 3 are to be added to the right subtree of the root node ```start```. How the remaining nodes are to be added is not of concern. But, **since the left subtree is left empty**, the number of distinct structural BSTs that can be formed **depend on the number of distinct structural BSTs that form from the right subtree**.\\n\\n2. ```end``` is the root node of the BST.\\n\\n```\\n[ 1, 2, 3 ]\\n  ^     ^\\n  |     |\\nstart  end\\n       root\\n```\\n\\nSimilar to case 1, the remaining nodes with values 1 and 2 have to be added to the left subtree. Since the right subtree is left empty, the number of distinct structural BSTs depend on the number of distinct structural BSTs that form from the left subtree.\\n\\nGeneralising cases 1 and 2, **if one subtree has _```N```_ distinct structures, and the other subtree is empty (```0``` distinct structures), then the BST represented by the current node has _```N```_ distinct structures.**\\n\\n3. The node with value 2 is the root of the BST.\\n\\n```\\n[ 1,    2,    3 ]\\n  ^     ^     ^\\n  |     |     |\\nstart  root  end\\n```\\n\\nAccordingly, the ```start``` node becomes the left subtree, and the ```end``` node becomes the right subtree. Since there is only one node at either subtree, the number of distinct structural BST subtrees for both the left and right subtrees is 1. Therefore, there is only 1 possible BST structure if the root node has value 2.\\n\\nWe can generalise this case as follows: **For any given node, if one subtree has _M_ distinct structures, and the other subtree has _N_ distinct structures (_```M```_```, ```_```N```_```> 0```), the BST with the node as its root will have _```M```_``` x ```_```N```_ distinct structures**.\\n\\nTo see why this is the case, consider the following illustration:\\n\\n```\\nConsider the root node of a given BST. Label as root.\\n\\nLabel the distinct structures of the left subtree as follows:\\nL1, L2, L3, ..., Lm.  --> Total of M distinct structures, M > 0.\\n\\nLabel the distinct structures of the right subtree as follows:\\nR1, R2, R3, ..., Rn.  --> Total of N distinct structures, N > 0.\\n\\nThen, the following BST structures are all distinct:\\n\\n   root           root           root                 root\\n  /    \\\\         /    \\\\         /    \\\\      ...      /    \\\\\\nL1      R1     L1      R2     L1      R3           L1      Rn\\n\\n   root           root           root                 root\\n  /    \\\\         /    \\\\         /    \\\\      ...      /    \\\\\\nL2      R1     L2      R2     L2      R3           L2      Rn\\n\\n...\\n\\n   root           root           root                 root\\n  /    \\\\         /    \\\\         /    \\\\      ...      /    \\\\\\nLm      R1     Lm      R2     Lm      R3           Lm      Rn\\n\\nM rows x N columns = MN distinct structures.\\n```\\n\\n---\\n\\n### Implementation\\n\\nUsing ```start``` and ```end``` as \"pointers\", we can tell our function:\\n\\n- Which portion of the BST we are working on.\\n- How many nodes to consider as the current root node.\\n\\nWe can also cache our results so that they don\\'t need to be recomputed later.\\n\\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        cache = {}  # to store results\\n        \\n        def dp(start: int, end: int) -> int:\\n            if end <= start:  # this is an invalid subsequence of nodes\\n                return 1      # return 1 because 1 will not affect the multiplication formula\\n            elif (start, end) in cache.keys():\\n                return cache[(start, end)]  # use saved result\\n            result = 0\\n            for i in range(end-start+1):          # let each node be the root node once\\n\\t\\t\\t\\t# now that the node start+i is the root node,\\n\\t\\t\\t\\t# left subtree: start ~ (start+i)-1,\\n\\t\\t\\t\\t# right subtree: (start+i)+1 ~ end\\n                result += dp(start, start+i-1) \\\\  # distinct structures of the left subtree\\n\\t\\t\\t\\t\\t\\t* dp(start+i+1, end)      # distinct structures of the right subtree\\n            cache[(start, end)] = result  # store the result\\n            return result\\n        \\n        return dp(1, n)  # inclusive\\n```\\n\\n**EDIT:** We can get rid of the inner `dp()` function by calling `numTrees` with `end-start` instead.\\n\\n```python\\nclass Solution:\\n    @cache\\n    def numTrees(self, n: int) -> int:\\n        if n <= 1:\\n            return 1\\n        result = 0\\n        for i in range(n):\\n            result += self.numTrees(i)*self.numTrees(n-i-1)\\n        return result\\n```\\n\\n---\\n\\n### Final Result\\n\\n![image](https://assets.leetcode.com/users/images/ad4f746e-9804-4ef8-bbed-2638a1861c53_1634144681.9373739.png)\\n\\nPlease upvote if this has helped you! Appreciate any comments as well :)",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Dynamic Programming",
                    "Recursion"
                ],
                "code": "```1 - n```\n```\\n[ 1, 2, 3, 4, ..., n - 2, n - 1, n ]\\n  ^                              ^\\n  |                              |\\nstart                           end\\n```\n```start```\n```end```\n```start```\n```end```\n```n = 3```\n```start```\n```\\n[ 1, 2, 3 ]\\n  ^     ^\\n  |     |\\nstart  end\\n root\\n```\n```start```\n```end```\n```\\n[ 1, 2, 3 ]\\n  ^     ^\\n  |     |\\nstart  end\\n       root\\n```\n```N```\n```0```\n```N```\n```\\n[ 1,    2,    3 ]\\n  ^     ^     ^\\n  |     |     |\\nstart  root  end\\n```\n```start```\n```end```\n```M```\n```, ```\n```N```\n```> 0```\n```M```\n``` x ```\n```N```\n```\\nConsider the root node of a given BST. Label as root.\\n\\nLabel the distinct structures of the left subtree as follows:\\nL1, L2, L3, ..., Lm.  --> Total of M distinct structures, M > 0.\\n\\nLabel the distinct structures of the right subtree as follows:\\nR1, R2, R3, ..., Rn.  --> Total of N distinct structures, N > 0.\\n\\nThen, the following BST structures are all distinct:\\n\\n   root           root           root                 root\\n  /    \\\\         /    \\\\         /    \\\\      ...      /    \\\\\\nL1      R1     L1      R2     L1      R3           L1      Rn\\n\\n   root           root           root                 root\\n  /    \\\\         /    \\\\         /    \\\\      ...      /    \\\\\\nL2      R1     L2      R2     L2      R3           L2      Rn\\n\\n...\\n\\n   root           root           root                 root\\n  /    \\\\         /    \\\\         /    \\\\      ...      /    \\\\\\nLm      R1     Lm      R2     Lm      R3           Lm      Rn\\n\\nM rows x N columns = MN distinct structures.\\n```\n```start```\n```end```\n```python\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        cache = {}  # to store results\\n        \\n        def dp(start: int, end: int) -> int:\\n            if end <= start:  # this is an invalid subsequence of nodes\\n                return 1      # return 1 because 1 will not affect the multiplication formula\\n            elif (start, end) in cache.keys():\\n                return cache[(start, end)]  # use saved result\\n            result = 0\\n            for i in range(end-start+1):          # let each node be the root node once\\n\\t\\t\\t\\t# now that the node start+i is the root node,\\n\\t\\t\\t\\t# left subtree: start ~ (start+i)-1,\\n\\t\\t\\t\\t# right subtree: (start+i)+1 ~ end\\n                result += dp(start, start+i-1) \\\\  # distinct structures of the left subtree\\n\\t\\t\\t\\t\\t\\t* dp(start+i+1, end)      # distinct structures of the right subtree\\n            cache[(start, end)] = result  # store the result\\n            return result\\n        \\n        return dp(1, n)  # inclusive\\n```\n```python\\nclass Solution:\\n    @cache\\n    def numTrees(self, n: int) -> int:\\n        if n <= 1:\\n            return 1\\n        result = 0\\n        for i in range(n):\\n            result += self.numTrees(i)*self.numTrees(n-i-1)\\n        return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 788990,
                "title": "98-47-simple-python-solution-explanation-dp-catalan",
                "content": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n                \\n        # G(n) = solutions for n elements\\n        # F(i,n) = element i as root, n elements\\n        \\n        \\n        # Pseudo Code\\n        #G(n) = Sum of all F(i,n)\\n        #F(i,n) = G(i-1)*G(n-i)\\n        \\n        \\n        # Example\\n        # n = 3\\n        \\n        # base cases\\n        # G(0) = 1\\n        # G(1) = 1\\n        \\n        # G(3) = F(1,3)+F(2,3)+F(3,3)\\n        \\n        \\n        # F(1,3) = G(0)*G(2) = 2\\n        # Explanation \\n        # Ex: G(0) = no elements on the left branch\\n        # Ex: G(2) = 2 elements on the right branch\\n        \\n        # F(2,3) = G(1)*G(1) = 1\\n        # Explanation\\n        # Ex: G(1) = 1 element on the left branch\\n        # Ex: G(1) = 1 element on the right branch\\n        \\n        # F(3,3) = G(2)*G(0) = 2\\n        # Explanation \\n        # Ex: G(2) = 2 elements on the left branch\\n        # Ex: G(0) = no elements on the right branch\\n        \\n\\n        g_array = [1,1]\\n        \\n        for j in range(2,n+1):\\n            sum_g = 0\\n            for i in range(1,j+1):\\n                f_i = g_array[i-1]*g_array[j-i]\\n                sum_g += f_i\\n            g_array.append(sum_g)\\n                        \\n        return g_array[n]\\n        \\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n                \\n        # G(n) = solutions for n elements\\n        # F(i,n) = element i as root, n elements\\n        \\n        \\n        # Pseudo Code\\n        #G(n) = Sum of all F(i,n)\\n        #F(i,n) = G(i-1)*G(n-i)\\n        \\n        \\n        # Example\\n        # n = 3\\n        \\n        # base cases\\n        # G(0) = 1\\n        # G(1) = 1\\n        \\n        # G(3) = F(1,3)+F(2,3)+F(3,3)\\n        \\n        \\n        # F(1,3) = G(0)*G(2) = 2\\n        # Explanation \\n        # Ex: G(0) = no elements on the left branch\\n        # Ex: G(2) = 2 elements on the right branch\\n        \\n        # F(2,3) = G(1)*G(1) = 1\\n        # Explanation\\n        # Ex: G(1) = 1 element on the left branch\\n        # Ex: G(1) = 1 element on the right branch\\n        \\n        # F(3,3) = G(2)*G(0) = 2\\n        # Explanation \\n        # Ex: G(2) = 2 elements on the left branch\\n        # Ex: G(0) = no elements on the right branch\\n        \\n\\n        g_array = [1,1]\\n        \\n        for j in range(2,n+1):\\n            sum_g = 0\\n            for i in range(1,j+1):\\n                f_i = g_array[i-1]*g_array[j-i]\\n                sum_g += f_i\\n            g_array.append(sum_g)\\n                        \\n        return g_array[n]\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 741635,
                "title": "unique-binary-search-tree-python3-solution-with-a-detailed-explanation",
                "content": "Read [this](https://leetcode.com/problems/unique-binary-search-trees/discuss/703488/Detailed-Explanation-%3A-Mental-Leap-on-Why-the-approach-actually-works) first to get a better idea of how we\\'re going to proceed. \\n\\nThe high level idea is that for whatever `n` you assume, you have right and left sub-trees! Each of these sub-trees can be further broken down into smaller pieces. The first way that might come to your mind is to find the unique trees for each `n` (check [this](https://leetcode.com/problems/unique-binary-search-trees/discuss/31761/Python-with-explanation.-I-guess-you-could-call-this-%22DP%22...) out) and sum all of them to get to the total unique trees. If that\\'s what you have in mind, you can come up with something like this:\\n\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        if n == 0 or n == 1:\\n            return 1\\n        unique_trees = 0\\n        for i in range(n):\\n            left_trees = self.numTrees(i)\\n            right_trees = self.numTrees(n-i-1)\\n            unique_trees += left_trees*right_trees\\n            \\n        return unique_trees\\n```\\n\\nThis solution, altough correct, would give you time limit error when you submit it. This is because we\\'re trying to solve `numTrees` multiple times for every `n` (which is not required right?). Better would be to store what you once calculated and use it for later calculations. There are two ways of doing this: 1) bottom-up and 2) top-down.The main difference between the approach is that one start from bases cases when `n=0` or `n=1`. However, in the top-down, we assume different values as the root node and calculate unique left and right subtrees with all the n values.\\n\\n**1) Bottom-up**\\nIn this approach (as you see in a lot of posts in the discussion), you build from base cases ( `n=0` and `n=1`) to the desired `n`. Following code is doing such a thing. You initialize a `cache` array to keep track of already calculated cases. When `n = 0`, we have one tree. Similarly, when is `n=1`, we have one tree. For `n >= 2`, we follow similar approach to the above solution (that was top-down approach). For each value of `n >=2` (let\\'s say `n=3`), we calculate unique trees assuming all the numbers from `1` to `n` as root. In the case of `n=3`, we assume `1`, `2` and `3` to be root and calculate corresponding unique subtrees and sum them up (line `#1` and `#2`). And, finally, the last entry of `cache` is what we\\'re looking for. \\n\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        cache = [0]*(n+1)\\n        cache[0] = 1\\n        cache[1] = 1\\n        for i in range(2, n+1):\\n            for j in range(i): #1\\n                cache[i] += cache[j]*cache[i -j - 1] #2\\n            \\n        return cache[-1]\\n```\\n\\n\\n**1) Top-down**\\nIt\\'s different than bottom-up in a sense that it assumes all `n` numbers in the game every time, and just tries to change `root` value by looping over different numbers from `1` to `n`. The general idea is similar to the first solution of this post (the one with time error). \\n\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n\\n        cache = [-1]*(n+1)\\n        cache[0] = 1\\n        cache[1] = 1\\n        return self.helper(n, cache)\\n    \\n    def helper(self, n, cache):\\n        if cache[n] != -1:\\n            return cache[n]\\n        \\n        \\n        unique_trees = 0\\n        for i in range(n):\\n            left_trees = self.helper(i, cache)\\n            right_trees = self.helper(n - i -1, cache)\\n            unique_trees += left_trees*right_trees\\n        cache[n] = unique_trees\\n        return unique_trees\\n```\\n\\nThat\\'s it! \\n\\n=================================================\\nFinal note: Please let me know if you found any typo/error/etc. I\\'ll try to fix it. \\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Dynamic Programming",
                    "Recursion"
                ],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        if n == 0 or n == 1:\\n            return 1\\n        unique_trees = 0\\n        for i in range(n):\\n            left_trees = self.numTrees(i)\\n            right_trees = self.numTrees(n-i-1)\\n            unique_trees += left_trees*right_trees\\n            \\n        return unique_trees\\n```\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        cache = [0]*(n+1)\\n        cache[0] = 1\\n        cache[1] = 1\\n        for i in range(2, n+1):\\n            for j in range(i): #1\\n                cache[i] += cache[j]*cache[i -j - 1] #2\\n            \\n        return cache[-1]\\n```\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n\\n        cache = [-1]*(n+1)\\n        cache[0] = 1\\n        cache[1] = 1\\n        return self.helper(n, cache)\\n    \\n    def helper(self, n, cache):\\n        if cache[n] != -1:\\n            return cache[n]\\n        \\n        \\n        unique_trees = 0\\n        for i in range(n):\\n            left_trees = self.helper(i, cache)\\n            right_trees = self.helper(n - i -1, cache)\\n            unique_trees += left_trees*right_trees\\n        cache[n] = unique_trees\\n        return unique_trees\\n```",
                "codeTag": "Java"
            },
            {
                "id": 471900,
                "title": "dp-solution-with-commented-code-in-python",
                "content": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        # Intuition:\\n        #   - For each n we try to build BST with node i from 1 -> n as root node\\n        #   - If n = 0 or 1 then only 1 way to form a BST tree\\n        #   - For each i we have i - 1 nodes on left subtree and n - i nodes on right subtree\\n        #   - The result is sum of all BST above. \\n        #       G(n) = f(1, n) + f(2, n) + ... + f(n, n)\\n        #   - For each BST tree above we calculate number of left subtree * number of right subtree. We can see the sub problem here\\n        #       f(i, n) = G(i - 1) * G(n - i)\\n        #   - Final formula:\\n        #       G(n) = G(0) * G(n - 1) + G(1) * G(n - 2) + ... + G(n - 1) * G(0)\\n        \\n        # There is only one way to form BST with 0 or 1 node\\n        if n <= 1:\\n            return 1\\n        \\n        # Build up solution from 0 to n\\n        dp = [0] * (n + 1)\\n        # We already know the result for input = 1, input = 2\\n        dp[0], dp[1] = 1, 1\\n        \\n        # Continue calculate result for input from 2 -> n\\n        for i in range(2, n + 1):\\n            # For each i calculate all possible structurally BSTs that can form by j as root node\\n            for j in range(1, i + 1):\\n                dp[i] += dp[j - 1] * dp[i - j]\\n            \\n        return dp[n]\\n        \\n        \\n```",
                "solutionTags": [
                    "Python3",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        # Intuition:\\n        #   - For each n we try to build BST with node i from 1 -> n as root node\\n        #   - If n = 0 or 1 then only 1 way to form a BST tree\\n        #   - For each i we have i - 1 nodes on left subtree and n - i nodes on right subtree\\n        #   - The result is sum of all BST above. \\n        #       G(n) = f(1, n) + f(2, n) + ... + f(n, n)\\n        #   - For each BST tree above we calculate number of left subtree * number of right subtree. We can see the sub problem here\\n        #       f(i, n) = G(i - 1) * G(n - i)\\n        #   - Final formula:\\n        #       G(n) = G(0) * G(n - 1) + G(1) * G(n - 2) + ... + G(n - 1) * G(0)\\n        \\n        # There is only one way to form BST with 0 or 1 node\\n        if n <= 1:\\n            return 1\\n        \\n        # Build up solution from 0 to n\\n        dp = [0] * (n + 1)\\n        # We already know the result for input = 1, input = 2\\n        dp[0], dp[1] = 1, 1\\n        \\n        # Continue calculate result for input from 2 -> n\\n        for i in range(2, n + 1):\\n            # For each i calculate all possible structurally BSTs that can form by j as root node\\n            for j in range(1, i + 1):\\n                dp[i] += dp[j - 1] * dp[i - j]\\n            \\n        return dp[n]\\n        \\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 406360,
                "title": "java-recursive-and-dp-solutions-with-clear-explanations-100-runtime",
                "content": "Before we reach the DP solution, it is useful to first think about recursion.\\n\\nWhen we first see the problem, we can try to come up with some examples to see if there are any patterns involved. Since `n = 3` is given in the problem, let\\'s try `n = 4`, with nodes [1, 2, 3, 4]. To find the number of trees systematically, we can start by letting the first node (i.e. 1) be the root node, and then let the second node be the root node and so on.\\n\\nFor the case where the root node is 1, how many possible BSTs are there? We know that everything on the left hand side must be less than the root, and everything on the right hand side must be more than the root. Since nothing is smaller than the root node here, the number of nodes on the left subtree is 0. Meanwhile, [2, 3, 4] are all larger than 1, and belong to the right subtree, so the right subtree has 3 roots. This means that we need to find the number of BSTs for the right subtree....which is essentially `numTrees(n - 1)`.\\n\\nSo we notice a pattern here:\\n- any value <= n can become the root node\\n- any value smaller than the current root node forms the left subtree\\n- any value bigger than the current root node forms the right subtree\\n- the total number of BSTs for the left subtree is `numTrees(# of nodes in leftTree)`\\n- the total number of BSTs for the right subtree is `numTrees(# of nodes in rightTree)`\\n- the total number of BSTs for the entire tree is `numTrees(# of nodes in leftTree) * numTrees(# of nodes in rightTree)` (by simple combinatorics)\\n\\nNow, we can write out a recursive solution:\\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        if (n == 0 || n == 1) {\\n            return 1;\\n        }\\n        \\n        int totalWays = 0;\\n\\t\\t\\n\\t\\t// i is the possible number of nodes in the left subtree\\n        for (int i = 0; i < n; i++) {\\n            totalWays += numTrees(i) * numTrees(n - i - 1);\\n        }\\n        \\n        return totalWays;   \\n    }\\n}\\n```\\n\\nThis solution works. However, we can make it better - there are repeated computations being done in the `for` loop. Let\\'s improve things using DP by storing the computed results in an array:\\n\\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        if (n == 0 || n == 1) {\\n            return 1;\\n        }\\n        \\n        int[] nums = new int[n + 1];\\n        nums[0] = 1;\\n        nums[1] = 1;\\n        \\n\\t\\t// computing bottom-up to tree with size n\\n        for (int i = 2; i <= n; i++) {\\n            int totalWays = 0;\\n\\t\\t\\t\\n\\t\\t\\t// j is the number of possible nodes in the left subtree\\n            for (int j = 0; j < i; j++) {\\n                totalWays += nums[j] * nums[i - j - 1];\\n            }\\n            nums[i] = totalWays;\\n        }\\n\\n        return nums[n];\\n    }\\n}\\n```\\n\\nThis is a solution that beats 100% of the other solutions in terms of the runtime.",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\n    public int numTrees(int n) {\\n        if (n == 0 || n == 1) {\\n            return 1;\\n        }\\n        \\n        int totalWays = 0;\\n\\t\\t\\n\\t\\t// i is the possible number of nodes in the left subtree\\n        for (int i = 0; i < n; i++) {\\n            totalWays += numTrees(i) * numTrees(n - i - 1);\\n        }\\n        \\n        return totalWays;   \\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        if (n == 0 || n == 1) {\\n            return 1;\\n        }\\n        \\n        int[] nums = new int[n + 1];\\n        nums[0] = 1;\\n        nums[1] = 1;\\n        \\n\\t\\t// computing bottom-up to tree with size n\\n        for (int i = 2; i <= n; i++) {\\n            int totalWays = 0;\\n\\t\\t\\t\\n\\t\\t\\t// j is the number of possible nodes in the left subtree\\n            for (int j = 0; j < i; j++) {\\n                totalWays += nums[j] * nums[i - j - 1];\\n            }\\n            nums[i] = totalWays;\\n        }\\n\\n        return nums[n];\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 392368,
                "title": "simple-solution-provided-explanation-of-the-the-logic-with-comments",
                "content": "We can form a tree with n nodes using a tree with (n-1) nodes in 3 ways \\n1) Put n at the leaf node \\n2) Put n as the root node\\n3) n is an intermediate node\\n\\nThe count of new trees in 1) and 2) is  simply same as total number of trees with n-1 nodes.\\nIn 3) We can have nodes on both sides of node n.\\nWe split the count  in two parts: \\nTrees which can be formed above node n\\nTrees which can be formed below node n.\\nAnd total number of trees is the number of permuations of the trees above and below.\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1,0);\\n        dp[1] = 1;\\n        for(int i=2; i<=n;i++){\\n            // when n is leaf node or root node, count of such trees is dp[n-1]\\n            dp[i]+= 2*dp[i-1];\\n\\n         // when n is intermediate node we have nodes on both sides of node n \\n        // if there are x nodes above node n, no of trees which can be formed above =dp[x]\\n        // There will be n-1 - x nodes below node n \\n        // no of trees which can be formed  below = dp[n-1-x]\\n    \\n        // we can select any permutation of the trees above and below\\n    //therefore total number of trees with node n as intermediate  =  dp[x] * dp[n-1-x]\\n            \\n            for(int j=1; j<i-1; j++)\\n                dp[i]+= dp[j]*dp[i-1-j];\\n         \\n        }\\n        return dp[n];\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1,0);\\n        dp[1] = 1;\\n        for(int i=2; i<=n;i++){\\n            // when n is leaf node or root node, count of such trees is dp[n-1]\\n            dp[i]+= 2*dp[i-1];\\n\\n         // when n is intermediate node we have nodes on both sides of node n \\n        // if there are x nodes above node n, no of trees which can be formed above =dp[x]\\n        // There will be n-1 - x nodes below node n \\n        // no of trees which can be formed  below = dp[n-1-x]\\n    \\n        // we can select any permutation of the trees above and below\\n    //therefore total number of trees with node n as intermediate  =  dp[x] * dp[n-1-x]\\n            \\n            for(int j=1; j<i-1; j++)\\n                dp[i]+= dp[j]*dp[i-1-j];\\n         \\n        }\\n        return dp[n];\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 384511,
                "title": "python-96-explaining-dp-solution-with-neat-example",
                "content": "Please note, I haven\\'t come up with a new logic, instead I have made sure to understand and explain the solution in detail with an example.\\nHave a look at how the recursive formula came in place.\\n```\\nclass Solution(object):\\n    def numTrees(self, n):\\n        \"\"\"\\n        The recursive equation.\\n        Let G(n) be the function which returns number of uninque BSTs.\\n\\t\\tConsider [0,1,....i...., n]\\n        Let F(i,n) be the intermediate number of unique BSTs when i is the root.\\n        \\n        F(i,n) = G(i-1) * G(n-i) \\n        When i is the root, there are i-1 nodes to left & n-i nodes to right\\n        \\n        for example -  to find G(4), we must also calculate G(3), G(2), G(1), G(0):\\n        G(4) ==> F(1,4) + F(2,4) + F(3,4) + F(4,4)\\n            for i = 1 --> F(1,4) = G(0) * G(3) = 1 * 5 = 5\\n            for i = 2 --> F(2,4) = G(1) * G(2) = 1 * 2 = 2\\n            for i = 3 --> F(3,4) = G(2) * G(1) = 2 * 1 = 2\\n            for i = 4 --> F(4,4) = G(3) * G(0) = 5 * 1 = 5\\n            Therefore G(4) = [G(0) * G(3)] + [G(1) * G(2)] + [G(2) * G(1)] + [G(3) * G(0)]\\n            G(4) = \\u03A3(i = 1 to 4) G(i - 1) * G(4 - i)  \\n            G(4) = 5 + 2 + 2 + 5 = 14\\n        \\n        we know that G(0) = 1, G(1) = 1\\n        G(2) ==> F(1,2) + F(2,2)\\n            for i = 1 --> F(1,2) = G(0) * G(1) = 1\\n            for i = 2 --> F(2,2) = G(1) * G(0) = 1\\n            Therefore G(2) = 1 + 1 = 2\\n        \\n        G(3) ==> F(1,3) + F(2,3) + F(3,3)\\n            for i = 1 --> F(1,3) = G(0) * G(2) = 2 \\n            for i = 2 --> F(2,3) = G(1) * G(1) = 1\\n            for i = 3 --> F(3,3) = G(2) * G(0) = 2\\n            Therefore G(3) = 2 + 1 + 2 = 5\\n        \\n\\n\\t\\tTo generalize:\\n                G(n) = \\u03A3(i = 1 to n) G(i - 1) * G(n - i)  #Final formula\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n        Clearly we can see that previous values of G are recomputed again and again \\n        hence we can memoize a.k.a Dynamic programming.\\n        \"\"\"\\n        \\n        G = [0]*(n+1)\\n        G[0], G[1] = 1, 1\\n        \\n        #G(n) = \\u03A3(i = 1 to n) G(i - 1) * G(n - i)\\n        for i in range(2, n+1):\\n            for j in range(1, i+1):\\n                G[i] += G[j-1] * G[i-j]\\n        \\n        return G[n]\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def numTrees(self, n):\\n        \"\"\"\\n        The recursive equation.\\n        Let G(n) be the function which returns number of uninque BSTs.\\n\\t\\tConsider [0,1,....i...., n]\\n        Let F(i,n) be the intermediate number of unique BSTs when i is the root.\\n        \\n        F(i,n) = G(i-1) * G(n-i) \\n        When i is the root, there are i-1 nodes to left & n-i nodes to right\\n        \\n        for example -  to find G(4), we must also calculate G(3), G(2), G(1), G(0):\\n        G(4) ==> F(1,4) + F(2,4) + F(3,4) + F(4,4)\\n            for i = 1 --> F(1,4) = G(0) * G(3) = 1 * 5 = 5\\n            for i = 2 --> F(2,4) = G(1) * G(2) = 1 * 2 = 2\\n            for i = 3 --> F(3,4) = G(2) * G(1) = 2 * 1 = 2\\n            for i = 4 --> F(4,4) = G(3) * G(0) = 5 * 1 = 5\\n            Therefore G(4) = [G(0) * G(3)] + [G(1) * G(2)] + [G(2) * G(1)] + [G(3) * G(0)]\\n            G(4) = \\u03A3(i = 1 to 4) G(i - 1) * G(4 - i)  \\n            G(4) = 5 + 2 + 2 + 5 = 14\\n        \\n        we know that G(0) = 1, G(1) = 1\\n        G(2) ==> F(1,2) + F(2,2)\\n            for i = 1 --> F(1,2) = G(0) * G(1) = 1\\n            for i = 2 --> F(2,2) = G(1) * G(0) = 1\\n            Therefore G(2) = 1 + 1 = 2\\n        \\n        G(3) ==> F(1,3) + F(2,3) + F(3,3)\\n            for i = 1 --> F(1,3) = G(0) * G(2) = 2 \\n            for i = 2 --> F(2,3) = G(1) * G(1) = 1\\n            for i = 3 --> F(3,3) = G(2) * G(0) = 2\\n            Therefore G(3) = 2 + 1 + 2 = 5\\n        \\n\\n\\t\\tTo generalize:\\n                G(n) = \\u03A3(i = 1 to n) G(i - 1) * G(n - i)  #Final formula\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n        Clearly we can see that previous values of G are recomputed again and again \\n        hence we can memoize a.k.a Dynamic programming.\\n        \"\"\"\\n        \\n        G = [0]*(n+1)\\n        G[0], G[1] = 1, 1\\n        \\n        #G(n) = \\u03A3(i = 1 to n) G(i - 1) * G(n - i)\\n        for i in range(2, n+1):\\n            for j in range(1, i+1):\\n                G[i] += G[j-1] * G[i-j]\\n        \\n        return G[n]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3187711,
                "title": "95-38-unique-binary-search-trees-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nSolution for Leetcode 96. Unique Binary Search Trees:\\n\\nTo solve this problem, we can use the dynamic programming approach. Let\\'s create an array dp of size n + 1, where dp[i] represents the number of unique BSTs that can be formed using i nodes.\\n\\nThe base cases are dp[0] = 1 and dp[1] = 1, as there is only one unique BST that can be formed using zero and one node(s) respectively.\\n\\nFor i nodes, we can select a root node in i different ways, and then recursively calculate the number of unique BSTs in the left and right subtrees. Finally, we can multiply the number of unique BSTs in the left and right subtrees and add it to the total count.\\n\\nTherefore, for i nodes, the number of unique BSTs that can be formed is given by the formula:\\n```\\ndp[i] = dp[0]*dp[i-1] + dp[1]*dp[i-2] + ... + dp[i-1]*dp[0]\\n```\\nThe above formula takes into account all the possible combinations of left and right subtrees.\\n# Complexity\\n- Time complexity:\\nO(n^2)\\n\\n- Space complexity:\\nO(n) Beats\\n95.38%\\n\\n# Code\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        # initialize the dp array with base cases\\n        dp = [0] * (n + 1)\\n        dp[0] = dp[1] = 1\\n        \\n        # calculate the number of unique BSTs for i nodes\\n        for i in range(2, n + 1):\\n            for j in range(1, i + 1):\\n                dp[i] += dp[j - 1] * dp[i - j]\\n        \\n        return dp[n]\\n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndp[i] = dp[0]*dp[i-1] + dp[1]*dp[i-2] + ... + dp[i-1]*dp[0]\\n```\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        # initialize the dp array with base cases\\n        dp = [0] * (n + 1)\\n        dp[0] = dp[1] = 1\\n        \\n        # calculate the number of unique BSTs for i nodes\\n        for i in range(2, n + 1):\\n            for j in range(1, i + 1):\\n                dp[i] += dp[j - 1] * dp[i - j]\\n        \\n        return dp[n]\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2175621,
                "title": "python-recursion-memoization-easy-60-faster-explained",
                "content": "```\\n/*\\n    if we try to break this problem, we realize we can solve this using recursion\\n    for n = 1, number of trees that can be formed is 1\\n    for n = 2, number of trees that can be formed is 2\\n    for n = 3,\\n    we have to consider three cases:\\n    when root is 1:\\n    left subtree is empty\\n    right subtree can have two nodes 2, 3 so possible trees that can be made is 2\\n    \\n    when root is 2\\n    left subtree can have 1 node i.e. 1\\n    right subtree can have 1 node i.e. 3\\n    hence total trees with root as 2 can be 1\\n    \\n    when root is 3\\n    left subtree can have two nodes i.e. 1, 2 so possible trees that can be made using\\n    the two nodes will be 2\\n    hence there can be 2 subtrees with root as 3\\n    total trees with n=3 will be 2 + 1 + 2 = 5\\n    \\n    we apply the same logic for greater values of n\\n    we can use memoization to avoid solving the same overlapping problem again\\n    \\n */\\n```\\n\\n```\\nclass Solution:\\n\\n    def numTrees(self, n: int) -> int:\\n        question_bank = {}\\n        def fun(n):\\n            if n == 0 or n == 1:\\n                return 1\\n            if n == 2:\\n                return 2\\n            if n in question_bank:\\n                return question_bank[n]\\n            count = 0\\n            for i in range(1, n+1):\\n                left = i - 1\\n                right = n - i \\n                sub_left = fun(left)\\n                sub_right = fun(right)\\n                count += sub_left * sub_right\\n            question_bank[n] = count\\n            return question_bank[n]\\n        return fun(n)\\n```",
                "solutionTags": [
                    "Python",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\n/*\\n    if we try to break this problem, we realize we can solve this using recursion\\n    for n = 1, number of trees that can be formed is 1\\n    for n = 2, number of trees that can be formed is 2\\n    for n = 3,\\n    we have to consider three cases:\\n    when root is 1:\\n    left subtree is empty\\n    right subtree can have two nodes 2, 3 so possible trees that can be made is 2\\n    \\n    when root is 2\\n    left subtree can have 1 node i.e. 1\\n    right subtree can have 1 node i.e. 3\\n    hence total trees with root as 2 can be 1\\n    \\n    when root is 3\\n    left subtree can have two nodes i.e. 1, 2 so possible trees that can be made using\\n    the two nodes will be 2\\n    hence there can be 2 subtrees with root as 3\\n    total trees with n=3 will be 2 + 1 + 2 = 5\\n    \\n    we apply the same logic for greater values of n\\n    we can use memoization to avoid solving the same overlapping problem again\\n    \\n */\\n```\n```\\nclass Solution:\\n\\n    def numTrees(self, n: int) -> int:\\n        question_bank = {}\\n        def fun(n):\\n            if n == 0 or n == 1:\\n                return 1\\n            if n == 2:\\n                return 2\\n            if n in question_bank:\\n                return question_bank[n]\\n            count = 0\\n            for i in range(1, n+1):\\n                left = i - 1\\n                right = n - i \\n                sub_left = fun(left)\\n                sub_right = fun(right)\\n                count += sub_left * sub_right\\n            question_bank[n] = count\\n            return question_bank[n]\\n        return fun(n)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1566638,
                "title": "very-simple-dp-solution-c-with-comments",
                "content": "```\\nvoid recur(int n,unordered_map<int,int> &mp)\\n    {\\n\\t//base case\\n        if(n==0 || n==1) return;\\n\\t\\t\\n\\t\\t//recursive call for n-1\\n        recur(n-1,mp);\\n\\t\\t//variable to calculate answer for current n\\n        int val = 0;\\n\\t\\t\\n\\t\\t//for every i such that 1<=i<=n, we\\'ll calculate number of\\n\\t\\t//BSTs made by taking node with value i as root and\\n\\t\\t//add it to our val\\n        for(int i=1;i<=n;i++)\\n        {\\n\\t\\t\\t//to calculate no of BSTs after making ith node as root\\n\\t\\t\\t//we\\'ll first calculate no, of nodes in left and right subtree\\n\\t\\t\\t//(all those nodes with values less than i will be on left and rest will be\\n\\t\\t\\t//on right).\\n            int left = i-1;\\n            int right = n-i;\\n\\t\\t\\t\\n\\t\\t\\t//then we\\'ll use the dp map to calculate no. of BSTs\\n\\t\\t\\t//NOTE : it can be guaranteed that left and right will always be there in\\n\\t\\t\\t//map as left and right can be at max n-1 which is calculated earlier\\n\\t\\t\\t//when we made call for n-1\\n            val += mp[left]*mp[right];\\n        }\\n\\t\\t\\n\\t\\t//memoize the value for current n\\n        mp[n] = val;\\n    }\\n\\t\\n\\tint numTrees(int n) {\\n\\t\\t// map for memoization\\n        unordered_map<int,int> mp;\\n\\t\\t\\n\\t\\t//base cases , can be easily observed by drwaing on paper\\n        mp[0] = mp[1] = 1;\\n\\t\\t\\n\\t\\t//call recursion\\n        recur(n,mp);\\n\\t\\t\\n\\t\\treturn the answer\\n        return mp[n];\\n    }\\n```\\n\\n**Time Complexity :**  O(n * n) [for each n we made at most n iterations)\\n**Space Complexity :** O(n) (dp map) [ignoring recursion stack]",
                "solutionTags": [
                    "C",
                    "Dynamic Programming",
                    "Tree",
                    "Binary Search Tree",
                    "Recursion"
                ],
                "code": "```\\nvoid recur(int n,unordered_map<int,int> &mp)\\n    {\\n\\t//base case\\n        if(n==0 || n==1) return;\\n\\t\\t\\n\\t\\t//recursive call for n-1\\n        recur(n-1,mp);\\n\\t\\t//variable to calculate answer for current n\\n        int val = 0;\\n\\t\\t\\n\\t\\t//for every i such that 1<=i<=n, we\\'ll calculate number of\\n\\t\\t//BSTs made by taking node with value i as root and\\n\\t\\t//add it to our val\\n        for(int i=1;i<=n;i++)\\n        {\\n\\t\\t\\t//to calculate no of BSTs after making ith node as root\\n\\t\\t\\t//we\\'ll first calculate no, of nodes in left and right subtree\\n\\t\\t\\t//(all those nodes with values less than i will be on left and rest will be\\n\\t\\t\\t//on right).\\n            int left = i-1;\\n            int right = n-i;\\n\\t\\t\\t\\n\\t\\t\\t//then we\\'ll use the dp map to calculate no. of BSTs\\n\\t\\t\\t//NOTE : it can be guaranteed that left and right will always be there in\\n\\t\\t\\t//map as left and right can be at max n-1 which is calculated earlier\\n\\t\\t\\t//when we made call for n-1\\n            val += mp[left]*mp[right];\\n        }\\n\\t\\t\\n\\t\\t//memoize the value for current n\\n        mp[n] = val;\\n    }\\n\\t\\n\\tint numTrees(int n) {\\n\\t\\t// map for memoization\\n        unordered_map<int,int> mp;\\n\\t\\t\\n\\t\\t//base cases , can be easily observed by drwaing on paper\\n        mp[0] = mp[1] = 1;\\n\\t\\t\\n\\t\\t//call recursion\\n        recur(n,mp);\\n\\t\\t\\n\\t\\treturn the answer\\n        return mp[n];\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1565610,
                "title": "runtime-0-ms-faster-than-100-00-of-c",
                "content": "For a value n, we fix root and find different combinations of left and right subtree with remaining n-1 nodes\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0]=1;\\n        for(int i=1;i<=n;i++){\\n            int sum=0;\\n            for(int j=0;j<i;j++)\\n                sum+=(dp[j]*dp[i-1-j]);\\n            dp[i]=sum;\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0]=1;\\n        for(int i=1;i<=n;i++){\\n            int sum=0;\\n            for(int j=0;j<i;j++)\\n                sum+=(dp[j]*dp[i-1-j]);\\n            dp[i]=sum;\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1373703,
                "title": "cpp-catalan-numbers-dp-0-ms-100-o-n-2",
                "content": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        //number of bsts is simply the nth catalan number\\n\\n        //Catalan Number, Cn = C0Cn-1 + C1Cn-2 + C2Cn-3 + .. \\n        \\n        //c[3] = C0C2 + C1C1 + C2C0\\n        \\n        int catalan[n+1];\\n        catalan[0] = 1;\\n        catalan[1] = 1;\\n        \\n        for(int i =2 ; i<=n; i++){\\n            int x = 0;\\n            for(int j = 0; j < i; j++)\\n                x+= catalan[j]*catalan[i-j - 1];\\n            catalan[i] = x;\\n        }\\n        \\n        return catalan[n];\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        //number of bsts is simply the nth catalan number\\n\\n        //Catalan Number, Cn = C0Cn-1 + C1Cn-2 + C2Cn-3 + .. \\n        \\n        //c[3] = C0C2 + C1C1 + C2C0\\n        \\n        int catalan[n+1];\\n        catalan[0] = 1;\\n        catalan[1] = 1;\\n        \\n        for(int i =2 ; i<=n; i++){\\n            int x = 0;\\n            for(int j = 0; j < i; j++)\\n                x+= catalan[j]*catalan[i-j - 1];\\n            catalan[i] = x;\\n        }\\n        \\n        return catalan[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 789982,
                "title": "runtime-0-ms-faster-than-100-00-c-2-approach-dp-without-dp",
                "content": "\\n\\t //1. without dp\\n\\t \\n     //as for n number of trees possible= ((2n)C(n))/(n+1)\\n     //(2n)C(n) is equal to ((2n)*(2n-1)*...n terms) / (n*(n-1)*...*1)\\n\\n     class Solution {\\n     public:\\n         int numTrees(int n) {\\n             double ans=1,i=2*n;\\n             for(int j=1;j<=n;j++,i--){\\n                 ans*=(i/j);\\n                  }\\n             return ans/(n+1);\\n         }\\n     };\\n\\t \\n\\t //2. with dp\\n\\t \\n\\t class Solution {\\n    public:\\n        int numTrees(int n) {\\n            vector<int> dp(n + 1);\\n            dp[0]=1;\\n            dp[1]=1;\\n            for(int i=2;i<=n;i++){\\n                for(int j=0;j<i;j++){\\n                    dp[i]+=dp[j]*dp[i-j-1];  //catalan number\\n                }\\n            }\\n            return dp[n];\\n        }\\n    };\\n\\t \\n**Feel free to ask any question in the comment section.\\nIf you like this solution, do UPVOTE.\\nHappy Coding :)**\\n\\t",
                "solutionTags": [
                    "C++",
                    "C",
                    "Dynamic Programming"
                ],
                "code": "class Solution {\\n     public:\\n         int numTrees(int n) {\\n             double ans=1,i=2*n;\\n             for(int j=1;j<=n;j++,i--){\\n                 ans*=(i/j);\\n                  }",
                "codeTag": "Java"
            },
            {
                "id": 537764,
                "title": "my-c-0ms-solution-detailed-explanation",
                "content": "It is not hard to draw the conclusion that once the structure of the tree has been determined, the binary search tree will be also determined. Actually this problem is equivalent to the number of structures of binary trees that are consist of n nodes, so we don\\'t need to think about the definition of binary search trees.\\nMost binary tree problems can be solved in recursive methods, so it\\'s important to find the recursive relationship.\\nTake \"n=3\" for example, it must has a root node, then 2 nodes will be allocated to its left and right sides. There are 3 situations: left=2&right=0, left=1&right=1, left=0&right=2.\\nAssume the number of  structurally unique BST for n nodes is f(n), we can get the following recursive relationship:\\nf(n)=f(0)*f(n-1)+f(1)*f(n-2)+...+f(n-2)*f(1)+f(n-1)*f(0)\\nNote: Coding in a recursive way will result in time limit exceeding. But the recursive idea can help us better understand this problem.\\nSorry for my bad English, hope it won\\'t cause any misunderstanding.\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> nums(n+1, 0);\\n        nums[0]=1;  nums[1]=1;\\n        for(int i=2;i<=n;i++){\\n            for(int j=0;j<i;j++){\\n                nums[i]+=nums[j]*nums[i-1-j];\\n            }\\n        }\\n        return nums[n];\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> nums(n+1, 0);\\n        nums[0]=1;  nums[1]=1;\\n        for(int i=2;i<=n;i++){\\n            for(int j=0;j<i;j++){\\n                nums[i]+=nums[j]*nums[i-1-j];\\n            }\\n        }\\n        return nums[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 314746,
                "title": "detailed-analysis-of-how-to-approach-this-problem-using-dynamic-programming-no-need-to-know-catalan",
                "content": "Here is how I think of this problem and break it down into several steps to solve, hope it helps!\\n* since this problem is basically asking for number of possible ways to generate a BST using a given range of values from 1 to n. My first intuition would be using `dynamic programming` to solve for this since it falls into the one of three common categories that can be solved by dynamic programming.\\n* Dynamica programming requires us to find out the [optimal subsubstructure](https://en.wikipedia.org/wiki/Dynamic_programming) for the problem, which is the core to solve this problem. If we are able to find out the optimal substructure, we then usually break the current problem into several subproblems, solve subproblems and evenually we are able to solve the original problem using the solutions to its subproblems\\n* For example, let say `n = 3`, then there will be three nodes in the BST which are `1`, `2` and `3`. As shown in the problem description, each of these three values can be treated as the root for BST. Let\\'s treat `2` as the root of BST, then according to the property of BST, `1` has to be in its left subtree and `3` has to be in its right subtree. How many possible left subtree it can be, given the fact that this BST only contain one element which is `1`. Obviously, there is only one possible form of the left subtree. Similarly, there is only one possible form of the right subtree. As a result, given the root is `2`, and there is one possible left subtree that can be formed, one possible right subtree that can be formed. Together there will be only `1 * 1 = 1` possible form of BST that can be formed, given the root is `2`\\n* Observing the example above, we\\'ve found the `optimal substructure` of this problem: given `n`, if we choose root to be `i` where `1 <= i <= n`, then the number of possible BSTs can be formed is this case is the `number of possible left subtree (still a BST)` `*` `number of possible right subtree (still a BST)`. The left subtree will be using values from `0 to i - 1` so that their solution is just the solution to subproblem where `n = i - 1` and the right subtree will be using values from `i + 1 to n`, so that their solution is just the solution to the subproblem where `n = n (the original n) - i`. Eventually, the total number of BST that can be formed is just the sum of number of BST that can be formed with `1` as the root, with `2` as the root and so on.\\n* state transfer function: define `C(n)` as the total number of possible BSTs that can be formed using values from `1 to n`, then the recursive relation is that `C(n) = summation of C(i - 1) * C(n - i)` where `1 <= i <= n`\\n* base case: `C(0) = 1`\\n\\nSolution:\\n```java\\nclass Solution {\\n    public int numTrees(int n) {\\n        if (n < 0) return 1;\\n        \\n        int[] dp = new int[n + 1];\\n        // base case: dp[0] = 1 to avoid possible index out of bound exceptions\\n        dp[0] = 1;\\n        \\n        // state transfer function: dp[n] = summation of dp[i - 1] * dp[n - i] where 1 <= i <= n\\n        for (int nn = 1; nn <= n; ++nn) {\\n            for (int i = 1; i <= nn; ++i) {\\n                dp[nn] += dp[i - 1] * dp[nn - i];\\n            }\\n        }\\n        return dp[n];\\n    }\\n}\\n```\\n\\n```js\\nvar numTrees = function(n) {\\n  // state: dp[i] => number of different BST can be formed using 1...n\\n  // state transfer function:\\n  // take j as the root, where 1 <= j <= i\\n  // the number of different left subtree: dp[j - 1]\\n  // the number of different right subtree: dp[i - j]\\n  // dp[i] = sum(dp[j - 1] * dp[i - j] for 1 <= j <= i)\\n  // base case:\\n  // dp[0] = 1\\n  // dp[1] = 1\\n  const dp = Array(n + 1).fill(0);\\n  dp[0] = 1;\\n  dp[1] = 1;\\n\\n  for (let i = 2; i <= n; ++i) {\\n    for (let j = 1; j <= i; ++j) {\\n      dp[i] += dp[j - 1] * dp[i - j];\\n    }\\n  }\\n  return dp[n];\\n};\\n```\\n\\nHappy Coding~",
                "solutionTags": [],
                "code": "```java\\nclass Solution {\\n    public int numTrees(int n) {\\n        if (n < 0) return 1;\\n        \\n        int[] dp = new int[n + 1];\\n        // base case: dp[0] = 1 to avoid possible index out of bound exceptions\\n        dp[0] = 1;\\n        \\n        // state transfer function: dp[n] = summation of dp[i - 1] * dp[n - i] where 1 <= i <= n\\n        for (int nn = 1; nn <= n; ++nn) {\\n            for (int i = 1; i <= nn; ++i) {\\n                dp[nn] += dp[i - 1] * dp[nn - i];\\n            }\\n        }\\n        return dp[n];\\n    }\\n}\\n```\n```js\\nvar numTrees = function(n) {\\n  // state: dp[i] => number of different BST can be formed using 1...n\\n  // state transfer function:\\n  // take j as the root, where 1 <= j <= i\\n  // the number of different left subtree: dp[j - 1]\\n  // the number of different right subtree: dp[i - j]\\n  // dp[i] = sum(dp[j - 1] * dp[i - j] for 1 <= j <= i)\\n  // base case:\\n  // dp[0] = 1\\n  // dp[1] = 1\\n  const dp = Array(n + 1).fill(0);\\n  dp[0] = 1;\\n  dp[1] = 1;\\n\\n  for (let i = 2; i <= n; ++i) {\\n    for (let j = 1; j <= i; ++j) {\\n      dp[i] += dp[j - 1] * dp[i - j];\\n    }\\n  }\\n  return dp[n];\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 31791,
                "title": "simple-java-solution-a-dp-problem",
                "content": "public class Solution {\\n\\n    public int numTrees(int n) {\\n        int[] dp = new int[n+1];\\n        dp[0] = 1;\\n        for (int i=1; i<=n; i++) {\\n            int sum = 0;\\n            for (int j=1;j<=i;j++) {\\n                sum += dp[j-1] * dp[i-j];\\n            }\\n            dp[i] = sum;\\n        }\\n        return dp[n];\\n    }\\n}",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "class Solution {\\n\\n    public int numTrees(int n) {\\n        int[] dp = new int[n+1];\\n        dp[0] = 1;\\n        for (int i=1; i<=n; i++) {\\n            int sum = 0;\\n            for (int j=1;j<=i;j++) {\\n                sum += dp[j-1] * dp[i-j];\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3647145,
                "title": "recursion-memoization-tabulation",
                "content": "# Pls Upvote if it Helps!!!!\\n\\n# Approach\\nThe no of Uniquely structured binary search tree are eqaul to the catalan no of that number...\\n\\n# Complexity\\n- Time complexity: O(N^2)\\n\\n- Space complexity: O(N)\\n\\n# Pls Upvote if Helpful \\uD83E\\uDD79\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n\\n    // SOLUTION 1 : RECURSIVE SOLUTION\\n    int solve(int n){\\n        // base case\\n        if(n==0 || n==1){\\n            return 1;\\n        }\\n\\n        // recursive calls\\n        int ans = 0;\\n        for(int i = 0; i<n; i++){\\n            int temp = solve(i) * solve(n-i-1);\\n            ans += temp;\\n        }\\n\\n        return ans;\\n    }\\n\\n    // SOLUTION 2 : RECURSION + MEMOIZATION\\n    int solve2(int n, vector<int>&dp){\\n        // base case\\n        if(n <= 1){\\n            return 1;\\n        }\\n\\n        // dp call\\n        if(dp[n-1] != -1){\\n            return dp[n-1];\\n        }\\n\\n        // recursive calls\\n        int ans = 0;\\n        for(int i = 1; i<=n; i++){\\n            int temp = solve2(i-1, dp) * solve2(n-i, dp);\\n            ans += temp;\\n        }\\n\\n        return dp[n-1] = ans;\\n    }\\n\\n    // SOLUTION 3 : TABULATION METHOD\\n    int solveTab(int n){\\n        // creating dp vector\\n        vector<int>dp(n+1, 0);\\n\\n        // base cases handling\\n        dp[0] = dp[1] = 1;\\n\\n        // i --> no of nodes\\n        for(int i = 2; i<=n; i++){\\n            // j --> no of roots\\n            for(int j = 1; j<=i; j++){\\n                int temp = dp[j-1] * dp[i-j];\\n                dp[i] += temp;\\n            }\\n        }\\n\\n        return dp[n];\\n    }\\n\\n\\n    int numTrees(int n) {\\n        // recursive solution\\n        // return solve(n);\\n\\n        // recursive + memoization solution\\n        // vector<int>dp(n, -1);\\n        // return solve2(n, dp);\\n\\n        // tabulation method\\n        return solveTab(n);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n\\n    // SOLUTION 1 : RECURSIVE SOLUTION\\n    int solve(int n){\\n        // base case\\n        if(n==0 || n==1){\\n            return 1;\\n        }\\n\\n        // recursive calls\\n        int ans = 0;\\n        for(int i = 0; i<n; i++){\\n            int temp = solve(i) * solve(n-i-1);\\n            ans += temp;\\n        }\\n\\n        return ans;\\n    }\\n\\n    // SOLUTION 2 : RECURSION + MEMOIZATION\\n    int solve2(int n, vector<int>&dp){\\n        // base case\\n        if(n <= 1){\\n            return 1;\\n        }\\n\\n        // dp call\\n        if(dp[n-1] != -1){\\n            return dp[n-1];\\n        }\\n\\n        // recursive calls\\n        int ans = 0;\\n        for(int i = 1; i<=n; i++){\\n            int temp = solve2(i-1, dp) * solve2(n-i, dp);\\n            ans += temp;\\n        }\\n\\n        return dp[n-1] = ans;\\n    }\\n\\n    // SOLUTION 3 : TABULATION METHOD\\n    int solveTab(int n){\\n        // creating dp vector\\n        vector<int>dp(n+1, 0);\\n\\n        // base cases handling\\n        dp[0] = dp[1] = 1;\\n\\n        // i --> no of nodes\\n        for(int i = 2; i<=n; i++){\\n            // j --> no of roots\\n            for(int j = 1; j<=i; j++){\\n                int temp = dp[j-1] * dp[i-j];\\n                dp[i] += temp;\\n            }\\n        }\\n\\n        return dp[n];\\n    }\\n\\n\\n    int numTrees(int n) {\\n        // recursive solution\\n        // return solve(n);\\n\\n        // recursive + memoization solution\\n        // vector<int>dp(n, -1);\\n        // return solve2(n, dp);\\n\\n        // tabulation method\\n        return solveTab(n);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3392710,
                "title": "java-dp-beats-100-6-lines",
                "content": "# Complexity\\n- Time complexity: $$O(n^2)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(n)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  public int numTrees(int n) {\\n    var dp = new int[n+1];\\n    dp[0] = 1;\\n\\n    for (var i=1; i<=n; i++)\\n      for (var j=0; j<i; j++)\\n        dp[i] += dp[j] * dp[i-1-j];\\n    \\n    return dp[n];\\n  }\\n}\\n```\\nIf you like my solution, please upvote it!",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Dynamic Programming",
                    "Binary Search Tree"
                ],
                "code": "```\\nclass Solution {\\n  public int numTrees(int n) {\\n    var dp = new int[n+1];\\n    dp[0] = 1;\\n\\n    for (var i=1; i<=n; i++)\\n      for (var j=0; j<i; j++)\\n        dp[i] += dp[j] * dp[i-1-j];\\n    \\n    return dp[n];\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3044439,
                "title": "accepted-easy-solution-short-simple-best-method",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0]=1;\\n        dp[1]=1;\\n        for(int i=2;i<=n;i++)\\n        {\\n            for(int j=0;j<i;j++)\\n            dp[i]+=dp[j]*dp[i-j-1];\\n        }\\n        for(int i:dp)\\n        cout<<i<<\" \";\\n        return dp[n];\\n    }\\n};\\n```\\nPlease **UPVOTE** if it helps \\u2764\\uFE0F\\uD83D\\uDE0A\\nThank You and Happy To Help You!!",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> dp(n+1);\\n        dp[0]=1;\\n        dp[1]=1;\\n        for(int i=2;i<=n;i++)\\n        {\\n            for(int j=0;j<i;j++)\\n            dp[i]+=dp[j]*dp[i-j-1];\\n        }\\n        for(int i:dp)\\n        cout<<i<<\" \";\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 2865654,
                "title": "o-n-solution",
                "content": "\\n\\n# Approach\\nusing formula\\n# Complexity\\n- Time complexity:\\nO(N)\\n\\n- Space complexity:\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n  long long int abhi1(int n){\\n    long long int ans=n;\\n    for (int  i = n-1; i>20; i--)\\n    {\\n        ans*=i;\\n    }\\n    return ans;\\n    \\n}\\nlong long int abhi2(int n){\\n    long long int ans=n;\\n    for (int  i = n-1; i>30; i--)\\n    {\\n        ans*=i;\\n    }\\n    return ans;\\n    \\n}\\nlong long int fact(long long int n){\\n    if (n==1)\\n    {\\n       return 1;\\n    }\\n    return n*fact(n-1);\\n}\\n\\n    int numTrees(int n) {\\n        long long int x,y,z;\\n        y=fact(n);\\n        z=y*(n+1);\\n        long long int a,b,c;\\n        if (2*n>20)\\n        {\\n            if (2*n>30)\\n            {\\n                x=fact(20);\\n                a=abhi1(30);\\n                b=abhi2(2*n);\\n               \\n                double m1=x/z;\\n               \\n\\n                return (m1*a*b)/y;\\n            }\\n            else\\n            {\\n               \\n            \\n              x=fact(20);\\n                a=abhi1(2*n);\\n                 double m1=x/z;\\n                \\n                return (m1*a)/y;\\n               \\n        }\\n        }\\n         x=fact(2*n);\\n        long long int ans=y*z;\\n        x/=ans;\\n        return x;\\n\\n\\n       \\n    }\\n};\\n",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "class Solution {\\npublic:\\n  long long int abhi1(int n){\\n    long long int ans=n;\\n    for (int  i = n-1; i>20; i--)\\n    {\\n        ans*=i;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2449867,
                "title": "3-approaches-recursive-memoisation-tabulation",
                "content": "```\\n//<----------------------------------- Recursive ----------------------------------------->\\n\\nclass Solution {\\npublic:\\n    int numTrees(int n)\\n    {\\n        if(n == 0 || n == 1)    \\n            return 1;\\n        \\n        int count = 0;\\n        \\n        for(int i = 1 ; i <= n ; i++)\\n        {\\n            count += (numTrees(i-1)*numTrees(n-i));\\n        }\\n        \\n        return count;\\n    }\\n};\\n\\n//<---------------------------------- Memoisation ------------------------------------------>\\n\\nclass Solution {\\npublic:\\n    int getCount(int n , vector<int>&dp)\\n    {\\n        if(n == 0 || n == 1)    \\n            return dp[n] = 1;\\n        \\n        int count = 0;\\n        \\n        if(dp[n] != -1)\\n            return dp[n];\\n        \\n        for(int i = 1 ; i <= n ; i++)\\n        {\\n            count += (getCount(i-1 , dp)*getCount(n-i , dp));\\n        }\\n        \\n        return dp[n] = count;\\n    }\\n    \\n    int numTrees(int n)\\n    {\\n        vector<int>dp(n+1,-1);\\n        return getCount(n , dp);\\n    }\\n};\\n\\n//<-------------------------------------- Tabulation ----------------------------------------->\\n\\nclass Solution {\\npublic:\\n    int numTrees(int n)\\n    {\\n       vector<int> dp(n+1,0);\\n        dp[0] = dp[1] = 1;\\n        \\n        // i -> node\\n        for(int i=2;i<=n;i++){\\n            int ans = 0;\\n            for(int j=1;j<=i;j++){\\n                ans += dp[j-1] * dp[i-j];\\n            }\\n            dp[i] = ans;\\n        }\\n        \\n        return dp[n];\\n    }\\n };\\n \\n ```\\n \\n \\n Please Upvote , if you\\'ve found this helpful",
                "solutionTags": [
                    "Dynamic Programming",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\n//<----------------------------------- Recursive ----------------------------------------->\\n\\nclass Solution {\\npublic:\\n    int numTrees(int n)\\n    {\\n        if(n == 0 || n == 1)    \\n            return 1;\\n        \\n        int count = 0;\\n        \\n        for(int i = 1 ; i <= n ; i++)\\n        {\\n            count += (numTrees(i-1)*numTrees(n-i));\\n        }\\n        \\n        return count;\\n    }\\n};\\n\\n//<---------------------------------- Memoisation ------------------------------------------>\\n\\nclass Solution {\\npublic:\\n    int getCount(int n , vector<int>&dp)\\n    {\\n        if(n == 0 || n == 1)    \\n            return dp[n] = 1;\\n        \\n        int count = 0;\\n        \\n        if(dp[n] != -1)\\n            return dp[n];\\n        \\n        for(int i = 1 ; i <= n ; i++)\\n        {\\n            count += (getCount(i-1 , dp)*getCount(n-i , dp));\\n        }\\n        \\n        return dp[n] = count;\\n    }\\n    \\n    int numTrees(int n)\\n    {\\n        vector<int>dp(n+1,-1);\\n        return getCount(n , dp);\\n    }\\n};\\n\\n//<-------------------------------------- Tabulation ----------------------------------------->\\n\\nclass Solution {\\npublic:\\n    int numTrees(int n)\\n    {\\n       vector<int> dp(n+1,0);\\n        dp[0] = dp[1] = 1;\\n        \\n        // i -> node\\n        for(int i=2;i<=n;i++){\\n            int ans = 0;\\n            for(int j=1;j<=i;j++){\\n                ans += dp[j-1] * dp[i-j];\\n            }\\n            dp[i] = ans;\\n        }\\n        \\n        return dp[n];\\n    }\\n };\\n \\n ```",
                "codeTag": "Java"
            },
            {
                "id": 2110463,
                "title": "explanation-python-easy",
                "content": "Case 1 : **n = 1** Only one combination is possible.\\n\\nCase 2 : **n = 2** Let fix one node. Two possibilities for second node. It can either be on right or left.\\nHence for n=2 , 2 trees possible\\n\\nCase 3: **n = 3**\\nAgain fix one node, and we are left with two nodes.\\nPossibilities **:**\\n* Both are on right\\n* Both are on left\\n* One on right and other on left\\n\\nAnswer to each above case will be **Combinations on right X Combinations on left**.\\nNow we know answer of **TWO** nodes = 2\\nAnswer for **ONE** node is 1\\nAnswer for  **THREE** nodes : ( ( 2 on right X 0 on left ) + ( 1 on right X 1 on left ) +( 0 on right X 2 on left ) )\\n\\nOther CASES :\\nSIMILARLY a problem with **n nodes** can be broken into for **n - 1** nodes.\\n\\nArray **a** is created for memomization so that repeated recurcive calls for same value of n are prevented.\\n\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        \\n        a = [0]*n\\n        \\n        def solve(n):\\n            \\n            if n <= 1:\\n                return 1\\n            if a[ n - 1 ] != 0:\\n                return a[ n - 1 ]\\n            k = 0\\n            for i in range(n):\\n                k += ( solve(i) * solve( n-i-1 ) )\\n            a[n-1] = k\\n            return k\\n        \\n        return s( n )\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Dynamic Programming",
                    "Memoization"
                ],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        \\n        a = [0]*n\\n        \\n        def solve(n):\\n            \\n            if n <= 1:\\n                return 1\\n            if a[ n - 1 ] != 0:\\n                return a[ n - 1 ]\\n            k = 0\\n            for i in range(n):\\n                k += ( solve(i) * solve( n-i-1 ) )\\n            a[n-1] = k\\n            return k\\n        \\n        return s( n )\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1806089,
                "title": "c-easy-to-understand-0ms",
                "content": "![image](https://assets.leetcode.com/users/images/87586211-1c8e-463b-be5d-9aa591d89916_1646029967.6867256.jpeg)\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> arr(n+1);\\n        arr[0] = 1, arr[1] = 1;    //If there are 1 or 0 nodes, then we have one unique BST\\n        for (int i = 2; i <= n; i++)\\n            for (int j =0 ; j <i; j++)\\n                arr[i] += arr[j] * arr[i-j-1];\\n        \\n        return arr[n];\\n    }\\n};\\n```\\n\\n* If you have understood the solution, please do up-vote.",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        vector<int> arr(n+1);\\n        arr[0] = 1, arr[1] = 1;    //If there are 1 or 0 nodes, then we have one unique BST\\n        for (int i = 2; i <= n; i++)\\n            for (int j =0 ; j <i; j++)\\n                arr[i] += arr[j] * arr[i-j-1];\\n        \\n        return arr[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1775259,
                "title": "java-dp-memorization-solution-100-faster",
                "content": "//The idea is just like MCM we wil traverse from 0 to n-1 and partition the imaginary array of\\n//n elements(0 to n-1) at each index i in two parts left and right\\n//e.g n=5\\n//[1,2,3,4,5]\\n//we call recursive functions\\n// here we assume cut is the root index\\n// for left tree it is (starting_index,cut-1)\\n// for right tree it is (cut+1,ending_index)\\n//and add the product of both in our final answer.\\n\\n// code \\n\\npublic int helper(int si,int ei,int [][]dp){\\n        if(si>ei) return 1;\\n        if(si == ei) return dp[si][ei] = 1;\\n        \\n        if(dp[si][ei] != 0) return dp[si][ei];\\n        \\n        int count = 0;\\n        for(int cut = si;cut<=ei;cut++){\\n            \\n            int leftTree = helper(si,cut-1,dp);\\n            int rightTree = helper(cut+1,ei,dp);\\n            \\n            count += (leftTree*rightTree);\\n        }\\n        return dp[si][ei] = count;\\n    }\\n    public int numTrees(int n) {\\n        \\n        int [][]dp = new int[n][n];\\n        \\n        return helper(0,n-1,dp);\\n    }",
                "solutionTags": [
                    "Dynamic Programming",
                    "Tree",
                    "Memoization"
                ],
                "code": "//The idea is just like MCM we wil traverse from 0 to n-1 and partition the imaginary array of\\n//n elements(0 to n-1) at each index i in two parts left and right\\n//e.g n=5\\n//[1,2,3,4,5]\\n//we call recursive functions\\n// here we assume cut is the root index\\n// for left tree it is (starting_index,cut-1)\\n// for right tree it is (cut+1,ending_index)\\n//and add the product of both in our final answer.\\n\\n// code \\n\\npublic int helper(int si,int ei,int [][]dp){\\n        if(si>ei) return 1;\\n        if(si == ei) return dp[si][ei] = 1;\\n        \\n        if(dp[si][ei] != 0) return dp[si][ei];\\n        \\n        int count = 0;\\n        for(int cut = si;cut<=ei;cut++){\\n            \\n            int leftTree = helper(si,cut-1,dp);\\n            int rightTree = helper(cut+1,ei,dp);\\n            \\n            count += (leftTree*rightTree);\\n        }\\n        return dp[si][ei] = count;\\n    }\\n    public int numTrees(int n) {\\n        \\n        int [][]dp = new int[n][n];\\n        \\n        return helper(0,n-1,dp);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1686104,
                "title": "java-solution-recursion-dp-catalan-numbers",
                "content": "So lets start from the most basic solution that is recursion. Now consider we have n nodes and each of these nodes are candidates for root node right. So lets say we have node i as the root what are possible number of structurally unique BSTs? It would be ```numTress(number of nodes on left side) * numTrees(number of nodes on right side)``` right.\\n![image](https://assets.leetcode.com/users/images/2e8a3386-bde7-48e8-9d4c-0dd0ebc78cd6_1642027238.033934.png)\\nwhere ```C(i-1)``` represents number of structurally unique BSTs from i-1 nodes. And for each node we would find the possible number and simply add. So thinking about the base case for this recursion if n<2 we would have no node or one node and for that the number of possible structurally unique BSTs would be 1. So let\\'s recurse:\\n\\nCode:\\n```\\npublic int numTrees(int n) {\\n        return recur( n );\\n    }\\n    public int recur( int n ) {\\n        if ( n<2 ) {\\n            return 1;\\n        }\\n        int res = 0;\\n        for ( int i=n; i>0; i-- ) {\\n            res += recur( i-1 ) * recur( n-i );\\n        }\\n        return res;\\n    }\\n```\\n\\nNow recursion would lead to TLE. What to do now? Did you say \"Memoize it!\". Ok so let\\'s memoize it.\\n\\nCode:\\n```\\nInteger[] dp;\\n    public int numTrees(int n) {\\n        dp = new Integer[n+1];\\n        return recur( n );\\n    }\\n    public int recur( int n ) {\\n        if ( n<2 ) {\\n            return 1;\\n        }\\n        if ( dp[n]!=null ) {\\n            return dp[n];\\n        }\\n        int res = 0;\\n        for ( int i=n-1; i>=0; i-- ) {\\n            res += recur( i ) * recur( n-i-1 );\\n        }\\n        return dp[n] = res;\\n    }\\n```\\n\\nAnother interesting solution is using Catalan numbers. So before diving into that lets first understand catalan numbers.\\n```Catalan(n) = Catalan(0)*Catalan(n-1) + Catalan(1)*Catalan(n-2).....+Catalan(i)*Catalan(n-i-1)....+Catalan(n-1)*Catalan(0)```\\nThis is the basic formula for Catalan numbers that can be found using recursion and then memoizing it which would take time complexity of O(n^2). Can we do better? Yes indeed! This whole complex looking expression evaluates to:\\n![image](https://assets.leetcode.com/users/images/a032554f-72a1-4064-aa1f-10520edfea6b_1642027916.3883116.png)\\nSo we can calculate this expression in O(n) time with O(1) space.\\n\\nOk, so we get what Catalan numbers are, but how does that help???????\\n![image](https://assets.leetcode.com/users/images/e60a16a7-a1f8-4a56-826c-5e1052af290e_1642028210.074719.png)\\nNow look at the expression Catalan(n). Looks the same right? Exactly so counting structurally unique BSTs is an application of Catalan numbers.\\n\\nCode:\\n```\\npublic int numTrees1(int n) {\\n\\treturn (int)(comb(2*n, n)/(n+1));\\n}\\npublic double comb( int n, int k ) {\\n\\tdouble res = 1;\\n\\tif ( k > n-k ) {\\n\\t\\tk = n - k;\\n\\t}\\n\\tfor ( int i=0; i<k; i++ ) {\\n\\t\\tres *= (n - i);\\n\\t\\tres /= (i + 1);\\n\\t}\\n\\treturn res;\\n}\\n```\\n\\nResources: [Wiki](https://en.wikipedia.org/wiki/Catalan_number), [Recursive of catalan numbers taken exponential time complexity](https://stackoverflow.com/questions/27371612/catalan-numbers-recursive-function-time-complexity)",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming",
                    "Recursion"
                ],
                "code": "```numTress(number of nodes on left side) * numTrees(number of nodes on right side)```\n```C(i-1)```\n```\\npublic int numTrees(int n) {\\n        return recur( n );\\n    }\\n    public int recur( int n ) {\\n        if ( n<2 ) {\\n            return 1;\\n        }\\n        int res = 0;\\n        for ( int i=n; i>0; i-- ) {\\n            res += recur( i-1 ) * recur( n-i );\\n        }\\n        return res;\\n    }\\n```\n```\\nInteger[] dp;\\n    public int numTrees(int n) {\\n        dp = new Integer[n+1];\\n        return recur( n );\\n    }\\n    public int recur( int n ) {\\n        if ( n<2 ) {\\n            return 1;\\n        }\\n        if ( dp[n]!=null ) {\\n            return dp[n];\\n        }\\n        int res = 0;\\n        for ( int i=n-1; i>=0; i-- ) {\\n            res += recur( i ) * recur( n-i-1 );\\n        }\\n        return dp[n] = res;\\n    }\\n```\n```Catalan(n) = Catalan(0)*Catalan(n-1) + Catalan(1)*Catalan(n-2).....+Catalan(i)*Catalan(n-i-1)....+Catalan(n-1)*Catalan(0)```\n```\\npublic int numTrees1(int n) {\\n\\treturn (int)(comb(2*n, n)/(n+1));\\n}\\npublic double comb( int n, int k ) {\\n\\tdouble res = 1;\\n\\tif ( k > n-k ) {\\n\\t\\tk = n - k;\\n\\t}\\n\\tfor ( int i=0; i<k; i++ ) {\\n\\t\\tres *= (n - i);\\n\\t\\tres /= (i + 1);\\n\\t}\\n\\treturn res;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1649147,
                "title": "python-catalan-number-one-liner",
                "content": "```\\nimport math\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        # Total number of possible Binary Search Trees with n different nodes \\n        \\n        # 1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862\\n        \\n        # This series is CATALEN NUMBER series \\n            \\n        # Formula = (2n)! / ((n + 1)! * n!) \\n        \\n        \\n        return math.factorial((2*n)) // (math.factorial((n + 1)) * math.factorial(n)) \\n```",
                "solutionTags": [
                    "Python",
                    "Math"
                ],
                "code": "```\\nimport math\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        # Total number of possible Binary Search Trees with n different nodes \\n        \\n        # 1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862\\n        \\n        # This series is CATALEN NUMBER series \\n            \\n        # Formula = (2n)! / ((n + 1)! * n!) \\n        \\n        \\n        return math.factorial((2*n)) // (math.factorial((n + 1)) * math.factorial(n)) \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1574811,
                "title": "easy-detailed-explanation-dp-0ms",
                "content": "dp[i] -> number of BSTs possible for i nodes.\\n1. For every i=[1...n], we take (j=[1...i]) as root in turn and sum up all possible combinations. This gives us the total number of BSTs for i nodes.\\n2. For every j, if j is made the root, (j-1) nodes are in the left subtree and (i-j) nodes are in the right subtree of the BST.\\n3. These (j-1) nodes and (i-j) nodes can arrange among themselves.\\n4. The arrangement of (j-1) and (i-j) nodes among themselves becomes a subproblem similar to when the BST has (j-1) nodes and (i-j) nodes in total respectively.\\n5. So the summation of the products of dp[j-1] and dp[i-j] gives all possible combinations for i nodes in total. \\n\\nTime Complexity: O(n^2)\\nSpace Complexity:O(n)\\n\\n```class Solution {\\n    public int numTrees(int n) {\\n        int dp[]=new int[n+1];\\n        dp[0]=1;\\n        for(int i=1;i<=n;i++){\\n            int sum=0;\\n            for(int j=1;j<=i;j++){\\n                sum+=dp[j-1]*dp[i-j];\\n            }\\n            dp[i]=sum;\\n        }\\n        return dp[n];\\n    }\\n}",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "class Solution {\\n    public int numTrees(int n) {\\n        int dp[]=new int[n+1];\\n        dp[0]=1;\\n        for(int i=1;i<=n;i++){\\n            int sum=0;\\n            for(int j=1;j<=i;j++){\\n                sum+=dp[j-1]*dp[i-j];\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1566338,
                "title": "daily-leetcoding-challenge-november-day-8-catalan-number-approach",
                "content": "class Solution {\\npublic:\\n\\n    int numTrees(int n) {\\n        if(n==0) return 1;\\n        if(n==1 || n==2) return n;\\n        int res=0;\\n        for(int i=1;i<=n;i++){\\n            res+=(numTrees(i-1)*numTrees(n-i));\\n        }\\n        return res;\\n    }\\n};\\n",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n\\n    int numTrees(int n) {\\n        if(n==0) return 1;\\n        if(n==1 || n==2) return n;\\n        int res=0;\\n        for(int i=1;i<=n;i++){\\n            res+=(numTrees(i-1)*numTrees(n-i));\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1440307,
                "title": "dp-c-solution",
                "content": "Idea : \\nFor a node i as a root , all the nodes less than i will be on the left side of ith node and greater than i will be on the right side of ith node.\\nIn this two subtrees, the combinations possible is (i-1)C1 => i-1 , similarly for the other side .... so for node i, the total combinations would become (i-1) x (i+1). \\nBelow code is an implementation using DP.\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        int dp[n+1];\\n        dp[0]=dp[1]=1;\\n        for(int i=2;i<=n;i++){\\n            dp[i]=0;\\n            for(int j=0;j<i;j++){\\n                dp[i]+=dp[j]*dp[i-j-1];\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        int dp[n+1];\\n        dp[0]=dp[1]=1;\\n        for(int i=2;i<=n;i++){\\n            dp[i]=0;\\n            for(int j=0;j<i;j++){\\n                dp[i]+=dp[j]*dp[i-j-1];\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1423877,
                "title": "java-100-beat-memoization-with-comment",
                "content": "```\\nclass Solution {\\n    //use map as the DP cache, store the number of unique BST that the key number can generate\\n    private HashMap<Integer, Integer> map = new HashMap<>();\\n    public int numTrees(int n) {\\n        if (map.containsKey(n)) {\\n            return map.get(n);\\n        }\\n        if (n == 0) {\\n            map.put(0, 1);\\n            return 1;\\n        }\\n        int res = 0;\\n        //loop through n, because of BST, so the left side is numTrees(i - 1), and right side is numTrees(n - i)\\n        for (int i = 1; i <= n; i++) {\\n            res += numTrees(i - 1) * numTrees(n - i);\\n        }\\n        //when we get the res, put it in the map\\n        map.put(n, res);\\n        return res;\\n    }\\n}\\n```\\n\\ntime complexity will be O(n^2)\\nwhen the case like\\n1\\n\\t3\\n2\\nwe have 3 nodes and also we have 3 levels, so for each node it needs to loop n times(worst case)\\n\\nspace complexity is O(n)",
                "solutionTags": [
                    "Java",
                    "Memoization"
                ],
                "code": "```\\nclass Solution {\\n    //use map as the DP cache, store the number of unique BST that the key number can generate\\n    private HashMap<Integer, Integer> map = new HashMap<>();\\n    public int numTrees(int n) {\\n        if (map.containsKey(n)) {\\n            return map.get(n);\\n        }\\n        if (n == 0) {\\n            map.put(0, 1);\\n            return 1;\\n        }\\n        int res = 0;\\n        //loop through n, because of BST, so the left side is numTrees(i - 1), and right side is numTrees(n - i)\\n        for (int i = 1; i <= n; i++) {\\n            res += numTrees(i - 1) * numTrees(n - i);\\n        }\\n        //when we get the res, put it in the map\\n        map.put(n, res);\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1322559,
                "title": "java-solution",
                "content": "```\\nclass Solution {\\n    HashMap<Integer,Integer> map=new HashMap<>();\\n    public int numTrees(int n) {\\n        if(n==0 || n==1)\\n            return 1;\\n        if(map.containsKey(n))\\n            return map.get(n);\\n        \\n        int c=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n           c+=numTrees(i-1)*numTrees(n-i);    \\n        }\\n        map.put(n,c);\\n        return map.get(n);\\n    }\\n}\\n```\\n\\n\\n![image](https://assets.leetcode.com/users/images/d3129d3e-4cb3-4e57-b71d-a051506c2ba2_1625806739.1477046.png)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    HashMap<Integer,Integer> map=new HashMap<>();\\n    public int numTrees(int n) {\\n        if(n==0 || n==1)\\n            return 1;\\n        if(map.containsKey(n))\\n            return map.get(n);\\n        \\n        int c=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n           c+=numTrees(i-1)*numTrees(n-i);    \\n        }\\n        map.put(n,c);\\n        return map.get(n);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1309476,
                "title": "c-very-simple-dp-easy-explaination-with-comments-100-faster",
                "content": "Hi,\\nFor this question we have sorted sequence and we need to make different Binary Search Trees. \\nSo lets discuss,\\nIf we choose any number from the sequence say it has index ```i``` and we have total ```n``` nodes. Now to calculate the  answer for this ```i``` we can observe that answer would be just ```number of ways of left subtree * number of ways of right subtree``` . Hence problem now reduced to a smaller subproblems ``` (i-1)-0```  and  ```n-(i+1)```.\\n\\nLets see an example \\nif ```n=4``` then\\n- for ```i=1``` we have ```left = 0``` and ```right = 3``` so this will add ```ways(0) * ways(3)``` to answer\\n- for ```i=2``` we have ```left = 1``` and ```right = 2``` so this will add ```ways(1) * ways(2)``` to answer\\n- for ```i=3``` we have ```left = 2``` and ```right = 1``` so this will add ```ways(2) * ways(1)``` to answer\\n- for ```i=4``` we have ```left = 3``` and ```right = 0``` so this will add ```ways(3) * ways(0)``` to answer\\n\\n ```ways(0) = 1, ways(1) = 1, ways(2) =2``` are trivial so now we need to calculate only ```ways(3)``` by similar procedure we can find ```ways(3)``` and put it to the final answer.\\n\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n\\t\\n\\t// maximum value of n is 19 so take array of size 20 to be safe\\n        vector<int> dp(20,0);\\n\\t\\t\\n\\t\\t// initialize trivial values to it\\n        dp[0]=1;\\n        dp[1]=1;\\n        dp[2]=2;\\n        if(n<3) return dp[n];\\n\\t\\t\\n\\t\\t//calculate smaller values which are less than n which will help us to find final answer\\n        for(int i=3;i<=n;i++){\\n            int temp=0;\\n            for(int j=0;j<i;j++){\\n                temp+= dp[j]*dp[i-j-1];\\n            }\\n            dp[i]=temp;\\n        }\\n\\t\\t// return answer\\n        return dp[n];\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "```i```\n```n```\n```i```\n```number of ways of left subtree * number of ways of right subtree```\n``` (i-1)-0```\n```n-(i+1)```\n```n=4```\n```i=1```\n```left = 0```\n```right = 3```\n```ways(0) * ways(3)```\n```i=2```\n```left = 1```\n```right = 2```\n```ways(1) * ways(2)```\n```i=3```\n```left = 2```\n```right = 1```\n```ways(2) * ways(1)```\n```i=4```\n```left = 3```\n```right = 0```\n```ways(3) * ways(0)```\n```ways(0) = 1, ways(1) = 1, ways(2) =2```\n```ways(3)```\n```ways(3)```\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n\\t\\n\\t// maximum value of n is 19 so take array of size 20 to be safe\\n        vector<int> dp(20,0);\\n\\t\\t\\n\\t\\t// initialize trivial values to it\\n        dp[0]=1;\\n        dp[1]=1;\\n        dp[2]=2;\\n        if(n<3) return dp[n];\\n\\t\\t\\n\\t\\t//calculate smaller values which are less than n which will help us to find final answer\\n        for(int i=3;i<=n;i++){\\n            int temp=0;\\n            for(int j=0;j<i;j++){\\n                temp+= dp[j]*dp[i-j-1];\\n            }\\n            dp[i]=temp;\\n        }\\n\\t\\t// return answer\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1173886,
                "title": "c-100-faster-and-easy-explanation",
                "content": "**Given an integer n, return the number of structurally unique BST\\'s (binary search trees) which has exactly n nodes of unique values from 1 to n.**\\n\\nIf a tree with a root R has 2 unique combinations in LST(left sub-tree) and 3 unique combinations in RST, then the total number of structuraly unique combinations of that tree with root R is 2*3=6\\n\\nSuppose we have a tree with 4 nodes[1,2,3,4] then we can find structurally unique BSTs as follows:\\n* structurally unique BSTs with root 1 are:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t`\\t    1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   /    \\\\\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tNULL   (2,3,4)--------------> 3 combinations on rhs\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcount=c0*c3`\\n* with root 2:[[1],[2],[3,4]]-------------->c1*c2\\n* with root 3:[[1,2],[3],[4]]-------------->c2*c1\\n* with root 4: [[1,2,3],[4]]--------------->c3*c0;\\n\\nTotal number of combinations is :c0c3+c1c2+c2c1+c3c0;\\nwe caqn generalize this math equation as : Cn=summation of(ci*cn-i-1) from i=0 to n\\n\\nUsing this formula we can calculate for each index and return the nth index\\n\\nCode:\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        int c[n+1];\\n        c[0]=1;c[1]=1;\\n        for(int i=2;i<=n;i++)\\n        {\\n            c[i]=0;\\n            for(int j=0;j<i;j++)\\n                c[i]+=c[j]*c[i-j-1];\\n        }\\n        return c[n];\\n        \\n        \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        int c[n+1];\\n        c[0]=1;c[1]=1;\\n        for(int i=2;i<=n;i++)\\n        {\\n            c[i]=0;\\n            for(int j=0;j<i;j++)\\n                c[i]+=c[j]*c[i-j-1];\\n        }\\n        return c[n];\\n        \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 881535,
                "title": "java-dp-top-down",
                "content": "```\\nclass Solution {\\n     HashMap<Integer,Integer> map=new HashMap();\\n    public int numTrees(int n) {\\n        \\n         if(n == 0 || n == 1)\\n            return 1;\\n        if(map.containsKey(n))\\n            return map.get(n);\\n        int count=0;\\n        for(int i = 1; i <= n; i++)\\n            count += numTrees(i - 1) * numTrees(n - i);\\n        map.put(n, count);\\n        \\n        \\n        \\n        return map.get(n);\\n        \\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n     HashMap<Integer,Integer> map=new HashMap();\\n    public int numTrees(int n) {\\n        \\n         if(n == 0 || n == 1)\\n            return 1;\\n        if(map.containsKey(n))\\n            return map.get(n);\\n        int count=0;\\n        for(int i = 1; i <= n; i++)\\n            count += numTrees(i - 1) * numTrees(n - i);\\n        map.put(n, count);\\n        \\n        \\n        \\n        return map.get(n);\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 703914,
                "title": "python-top-down-dp-more-straightforward-from-brute-force-to-dp",
                "content": "I\\'ve gone through many most-votes posts and most of them are about bottom-up DP. If you know DP well, then you can come up with that easily. However, we can derive the top-down approach from the brute force solution in a more straightforward way, so that even you may not be aware of using DP in the first place, you still will find that in the middle.\\n\\nTo build a BST from ```[1...n]```, we only need to divide it into three parts: the left subtree, root, and the right subtree. For both subtrees, similar processing will be applied again. Well, recursions happened.\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        # build a BST from [left...right]\\n        def helper(left=1,right=n):\\n            if left >= right:\\n                return 1\\n            ret = 0\\n            for i in range(left,right+1):\\n                l_tree = helper(left,i-1)\\n                r_tree = helper(i+1,right)\\n                ret += l_tree * r_tree\\n            return ret\\n        return helper()\\n```\\nNot surprisingly, we will get ```TLE```. The problem is that, many redundant computations will be made. For example, ```helper(1,2)``` will be computed every time when you want to build a subtree from ```[1...n], n>2```. To optimise it, we can store the ```helper(1,2)``` for further references. There it is, DP~\\nWe can implement a hashmap to store the result, or in Python, we simply add ```@lru_cache(None)```:\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        @lru_cache(None)\\n        def helper(left=1,right=n):\\n            if left >= right:\\n                return 1\\n            ret = 0\\n            for i in range(left,right+1):\\n                l_tree = helper(left,i-1)\\n                r_tree = helper(i+1,right)\\n                ret += l_tree * r_tree\\n            return ret\\n        return helper()\\n```\\n",
                "solutionTags": [
                    "Python",
                    "Dynamic Programming"
                ],
                "code": "```[1...n]```\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        # build a BST from [left...right]\\n        def helper(left=1,right=n):\\n            if left >= right:\\n                return 1\\n            ret = 0\\n            for i in range(left,right+1):\\n                l_tree = helper(left,i-1)\\n                r_tree = helper(i+1,right)\\n                ret += l_tree * r_tree\\n            return ret\\n        return helper()\\n```\n```TLE```\n```helper(1,2)```\n```[1...n], n>2```\n```helper(1,2)```\n```@lru_cache(None)```\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        @lru_cache(None)\\n        def helper(left=1,right=n):\\n            if left >= right:\\n                return 1\\n            ret = 0\\n            for i in range(left,right+1):\\n                l_tree = helper(left,i-1)\\n                r_tree = helper(i+1,right)\\n                ret += l_tree * r_tree\\n            return ret\\n        return helper()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 694086,
                "title": "python-one-liner",
                "content": "You can notice that the answer is the *n*^th Catalan number wich is the difference between central element in Pascal triangle and it\\'s adjacent one, so we just use the simplifyed \\n(*2n* choose *n*) - (*2n* choose *n+1*) formula:\\n\\n\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        return math.factorial(2*n)//(math.factorial(n)*math.factorial(n+1))\\n\\t\\t",
                "solutionTags": [],
                "code": "You can notice that the answer is the *n*^th Catalan number wich is the difference between central element in Pascal triangle and it\\'s adjacent one, so we just use the simplifyed \\n(*2n* choose *n*) - (*2n* choose *n+1*) formula:\\n\\n\\n```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        return math.factorial(2*n)//(math.factorial(n)*math.factorial(n+1))\\n\\t\\t",
                "codeTag": "Java"
            },
            {
                "id": 667777,
                "title": "catalan-number-explained-java",
                "content": "**Note: This solution does not fare that well in memory nor runtime. It\\'s clearly not the best solution (as compared to DP) but I thought it\\'s the easiest to understand and wish to explain the concept behind.**\\n\\nSince we are dealing with BSTs with unique elements, we know that everything in the left sub-tree is less than the root and everything in the right sub-tree is greater than the root. Now, the input given is 1,2,3,...n. So we know there are n nodes and hence when we consider unique BSTs, we know there can be n possible roots. \\n\\nLet\\'s say we pick number i as the root. With the given input, we know that there are i - 1 elements in the left-subtree of the root. (say if I pick 3 as the root, the left subtree can only contain 1 and 2, hence 3 - 1 = 2 elements) As such, in the right-subtree of the chosen root, we know there are n - i elements.\\n\\nSo what is the total number of BSTs with number i as the root? This is given by t(i - 1) * t(n - 1) because the different permutations in the left-subtree and right-subtree are independent events. t is the function of the number of unique BSTs for a given input. \\n\\nNow we know what\\'s the total number of BSTs with number i as the root and we know if the input is n, there can be n possible roots, we thus find the formula to be t(i - 1) * t (n - i) from i = 1 .... to n.\\n\\nLet\\'s convert this to code:\\n```\\n//Recursion using catalan number\\nclass Solution {\\n    public int numTrees(int n) {\\n\\t\\t//this is the base case, when n = 0 we get an empty BST; when n = 1 we get a BST with a root\\n        if (n == 0 || n == 1) return 1;\\n        int toReturn = 0;\\n\\t\\t//the for-loop below is simply t(i - 1) * t (n - i) from i = 1 .... to n in my explanation\\n        for (int i = 1; i <= n; i++) {\\n            toReturn += numTrees(i - 1) * numTrees(n - i);\\n        }\\n        return toReturn;\\n    }\\n}\\n```\\n\\nI hope this explanation helps in the understanding of the formula! :) But do note that there are many better solutions out there!",
                "solutionTags": [],
                "code": "```\\n//Recursion using catalan number\\nclass Solution {\\n    public int numTrees(int n) {\\n\\t\\t//this is the base case, when n = 0 we get an empty BST; when n = 1 we get a BST with a root\\n        if (n == 0 || n == 1) return 1;\\n        int toReturn = 0;\\n\\t\\t//the for-loop below is simply t(i - 1) * t (n - i) from i = 1 .... to n in my explanation\\n        for (int i = 1; i <= n; i++) {\\n            toReturn += numTrees(i - 1) * numTrees(n - i);\\n        }\\n        return toReturn;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 589578,
                "title": "c-detailed-explanation-simple-code",
                "content": "```C++\\n/*\\nchoose 1 as the root, we have 0 node for the left tree, i-1 for the right;\\nchoose 2 as the root, we have 1 node for the left tree, i-2 for the right;\\n...\\nchoose i as the root, we have i-1 nodes for the left tree, 0 for the right.\\n\\nG[0] = 1\\nG[1] = 1\\nG(n) = G(0)*G(n-1) + G(1)*G(n-2) + \\u2026 + G(n-1)*G(0)\\n*/\\n\\nint numTrees( int n ) {\\n    if( n == 1 || n == 0 ) return 1;\\n    unordered_map<int, int> hash;\\n    hash[0] = 1;\\n    hash[1] = 1;\\n        \\n    int result = 0;\\n    for( int i=0; i < n; i++ ) {\\n        if( hash.find(i) == hash.end() )\\n            hash[i] = numTrees( i );\\n        if( hash.find( n-i-1 ) == hash.end() )\\n            hash[ n-i-1 ] = numTrees( n-i-1 );\\n        result += hash[i] * hash[ n - i - 1 ];   \\n    }\\n    return result;\\n}\\n\\nclass Solution {\\npublic:\\n    int numTrees( int n ) {\\n        if( n == 0 ) return 1;\\n        vector<int> trees( n + 1);\\n        trees[0] = 1;\\n        trees[1] = 1;\\n        for( int i=2; i <= n; i++ ) {\\n            for( int j=0; j < i; j++ ) {\\n                trees[i] += trees[j]*trees[i-j-1];   \\n            }\\n        }\\n        return trees[n];\\n    }\\n};\\n\\n```",
                "solutionTags": [],
                "code": "```C++\\n/*\\nchoose 1 as the root, we have 0 node for the left tree, i-1 for the right;\\nchoose 2 as the root, we have 1 node for the left tree, i-2 for the right;\\n...\\nchoose i as the root, we have i-1 nodes for the left tree, 0 for the right.\\n\\nG[0] = 1\\nG[1] = 1\\nG(n) = G(0)*G(n-1) + G(1)*G(n-2) + \\u2026 + G(n-1)*G(0)\\n*/\\n\\nint numTrees( int n ) {\\n    if( n == 1 || n == 0 ) return 1;\\n    unordered_map<int, int> hash;\\n    hash[0] = 1;\\n    hash[1] = 1;\\n        \\n    int result = 0;\\n    for( int i=0; i < n; i++ ) {\\n        if( hash.find(i) == hash.end() )\\n            hash[i] = numTrees( i );\\n        if( hash.find( n-i-1 ) == hash.end() )\\n            hash[ n-i-1 ] = numTrees( n-i-1 );\\n        result += hash[i] * hash[ n - i - 1 ];   \\n    }\\n    return result;\\n}\\n\\nclass Solution {\\npublic:\\n    int numTrees( int n ) {\\n        if( n == 0 ) return 1;\\n        vector<int> trees( n + 1);\\n        trees[0] = 1;\\n        trees[1] = 1;\\n        for( int i=2; i <= n; i++ ) {\\n            for( int j=0; j < i; j++ ) {\\n                trees[i] += trees[j]*trees[i-j-1];   \\n            }\\n        }\\n        return trees[n];\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 428600,
                "title": "golang-dp-solution-with-explanation",
                "content": "```\\n/*\\np from 1 to n, each node use to root, left tree has p-1 nodes, right tree has n-p nodes\\n\\nf(n): numbers of unique BST with n nodes\\nn \\tf(n)\\n0:\\tf(0) = 1\\n1:\\tf(0) * f(0) = 1 (right 0 left 0)\\n2:\\tf(1) * f(0) + f(0) * f(1) = 1 + 1 = 2 (right 1 left 0\\uFF0Cright 0 left 1)\\n3\\uFF1A\\tf(2) * f(0) + f(1) * f(1) + f(0) * f(2) = 2 + 1 + 2 = 5 (right 2 left 0\\uFF0Cright 1 left 1\\uFF0Cright 0 left 2)\\n4\\uFF1A\\tf(3) * f(0) + f(2) * f(1) + f(1) * f(2) + f(0) * f(3) = 5 + 2 + 2 + 5 = 14 (right 3 left 0\\uFF0Cright 2 left 1\\uFF0Cright 1 left 2\\uFF0Cright 0 left 3)\\n5\\uFF1A\\tf(4) * f(0) + f(3) * f(1) + f(2) * f(2) + f(1) * f(3) + f(0) * f(4) = 14 + 5 + 4 + 5 + 14 = 42 (right 4 left 0\\uFF0Cright 3 left 1\\uFF0Cright 2 left 2\\uFF0Cright 1 left 3\\uFF0Cright 0 left 4)\\n......\\nn:\\ti from n-1 to 0, j=n-1-i, f(n) init to 0, f(n) += f(i) * f(j) \\n*/\\n\\nfunc f(n int, pool []int) int {\\n\\tif pool[n] != 0 {\\n\\t\\treturn pool[n]\\n\\t}\\n\\n\\tsum := 0\\n\\tfor i := n-1; i >= 0; i--{\\n\\t\\tsum += f(i, pool) * f(n-1-i, pool)\\n\\t}\\n\\tpool[n] = sum\\n\\treturn sum\\n}\\n\\nfunc numTrees(n int) int {\\n    pool := make([]int, n+1) //save f(i)\\n    pool[0] = 1 //recursive base case, init here\\n    return f(n, pool)\\n}\\n```",
                "solutionTags": [
                    "Go",
                    "Dynamic Programming"
                ],
                "code": "```\\n/*\\np from 1 to n, each node use to root, left tree has p-1 nodes, right tree has n-p nodes\\n\\nf(n): numbers of unique BST with n nodes\\nn \\tf(n)\\n0:\\tf(0) = 1\\n1:\\tf(0) * f(0) = 1 (right 0 left 0)\\n2:\\tf(1) * f(0) + f(0) * f(1) = 1 + 1 = 2 (right 1 left 0\\uFF0Cright 0 left 1)\\n3\\uFF1A\\tf(2) * f(0) + f(1) * f(1) + f(0) * f(2) = 2 + 1 + 2 = 5 (right 2 left 0\\uFF0Cright 1 left 1\\uFF0Cright 0 left 2)\\n4\\uFF1A\\tf(3) * f(0) + f(2) * f(1) + f(1) * f(2) + f(0) * f(3) = 5 + 2 + 2 + 5 = 14 (right 3 left 0\\uFF0Cright 2 left 1\\uFF0Cright 1 left 2\\uFF0Cright 0 left 3)\\n5\\uFF1A\\tf(4) * f(0) + f(3) * f(1) + f(2) * f(2) + f(1) * f(3) + f(0) * f(4) = 14 + 5 + 4 + 5 + 14 = 42 (right 4 left 0\\uFF0Cright 3 left 1\\uFF0Cright 2 left 2\\uFF0Cright 1 left 3\\uFF0Cright 0 left 4)\\n......\\nn:\\ti from n-1 to 0, j=n-1-i, f(n) init to 0, f(n) += f(i) * f(j) \\n*/\\n\\nfunc f(n int, pool []int) int {\\n\\tif pool[n] != 0 {\\n\\t\\treturn pool[n]\\n\\t}\\n\\n\\tsum := 0\\n\\tfor i := n-1; i >= 0; i--{\\n\\t\\tsum += f(i, pool) * f(n-1-i, pool)\\n\\t}\\n\\tpool[n] = sum\\n\\treturn sum\\n}\\n\\nfunc numTrees(n int) int {\\n    pool := make([]int, n+1) //save f(i)\\n    pool[0] = 1 //recursive base case, init here\\n    return f(n, pool)\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 261505,
                "title": "clean-java-dp-solution-with-detailed-explanation-and-tree-construction",
                "content": "**Explanation**: \\nWe need to define two functions:\\n\\n```G(n)```: the number of unique BST for a sequence of length n.\\n\\n```F(i, n), 1 <= i <= n```: the number of unique BST, where the number i is the root of BST, and the sequence ranges from 1 to n.\\n\\nAs one can see, G(n) is the actual function we need to calculate in order to solve the problem. And G(n) can be derived from F(i, n), which at the end, would recursively refer to G(n).\\n\\nFirst of all, given the above definitions, we can see that the total number of unique BST G(n), is the sum of BST F(i) using each number i as a root.\\ni.e. ```G(n) = F(1, n) + F(2, n) + ... + F(n, n). ```\\n\\nWhenever we have a tree with only 1 root, then we have a only 1 combination possible. So that\\'s why dp[1] = 1. Also we initialize dp[0] = 1, because we are going to get cases where we are going to need dp[0]\\n```\\n\\t\\t\\t\\t\\t\\t     G(3)\\n\\t\\t\\t\\t\\t/             |            \\\\\\n\\t\\t\\t\\t    F(1,3)            F(2,3)        F(3,3)\\n\\t\\t\\t\\t    /   \\\\              /  \\\\           /  \\\\\\n\\t\\t  \\t        G(0)  G(2)           G(1) G(1)      G(2) G(0)   \\n ```\\nSo the  code is: \\n\\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n\\t int[] dp = new int[n + 1];\\n     dp[0] = 1;\\n     dp[1] = 1;\\n        \\n     for (int i = 2; i <= n; ++i) {\\n          for (int j = 1; j <= i; ++j) {\\n                dp[i] += dp[j - 1] * dp[i - j];\\n            } \\n         }\\n \\n\\treturn dp[n];\\n    }\\n}\\n\\nExample: \\n\\nFor n = 3\\nInitial -> dp[0] = 1, dp[1] = 1\\n\\n1. Iteration 1: i = 2, means we have a total of 2 nodes in our BST. \\n    i)  dp[2] = dp[2] + dp[0]*dp[1] = 0 + 1*1 = 1 <-- We have 0 node on left and 1 node on right subtree out of the total 2 nodes, bcoz one node is going to be the root node so that\\'s why 0 nodes on left and 1 node on right.\\n    ii) dp[2] = dp[2] + dp[1]*dp[0] = 1 + 1*1 = 2 <-- We are having 1 node on left and 0 node on the right subtree of 2 nodes.\\n    The cases of the above one are: \\n    i)     1            ii)      2\\n            \\\\                   /\\n             2                 1\\n    \\n2. Iteration 2: i = 3, means we have a total of 3 nodes in our BST.\\n    i)  dp[3] = dp[3] + dp[0]*dp[2] = 0 + 1*2 = 2 <-- We have 0 nodes on the left and 2 nodes on the right. Final answer is 2 which means that we have 2 combinations available for 0 nodes on left and 2 nodes on right. \\n    ii) dp[3] = dp[3] + dp[1]*dp[1] = 2 + 1*1 = 3 <-- We have 1 nodes on the left and 1 nodes on the right. Final answer is 3 which means that we have 1 combinations available for 1 nodes on left and 1 nodes on right, with addition of 2 previous combinations\\n    iii)  dp[3] = dp[3] + dp[2]*dp[0] = 3 + 2*1 = 5 <-- We have 2 nodes on the left and 0 nodes on the right. Final answer is 5 which means that we have total 2 combinations available for 2 nodes on left and 0 nodes on right, with addition of 3 previous combinations\\n    \\n     The cases of the above one are: \\n    i) 0 nodes on the left and 2 nodes on the right = 2 combinations\\n           1                   1\\n            \\\\                   \\\\\\n             2                   3\\n              \\\\                 /\\n               3               2\\n    ii) 1 nodes on the left and 1 nodes on the right = 1 combination\\n                 2\\n                / \\\\\\n               1   3\\n    iii) 2 nodes on the left and 0 nodes on the right = 2 combination\\n              3                   3\\n             /                   /\\n             1                  2\\n              \\\\                /\\n               2              1\\n",
                "solutionTags": [],
                "code": "```G(n)```\n```F(i, n), 1 <= i <= n```\n```G(n) = F(1, n) + F(2, n) + ... + F(n, n). ```\n```\\n\\t\\t\\t\\t\\t\\t     G(3)\\n\\t\\t\\t\\t\\t/             |            \\\\\\n\\t\\t\\t\\t    F(1,3)            F(2,3)        F(3,3)\\n\\t\\t\\t\\t    /   \\\\              /  \\\\           /  \\\\\\n\\t\\t  \\t        G(0)  G(2)           G(1) G(1)      G(2) G(0)   \\n ```",
                "codeTag": "Unknown"
            },
            {
                "id": 31747,
                "title": "my-simple-dp-solution-with-explanation",
                "content": "   \\n\\n       basic idea is the recursion relationship between dps\\n       eg. n=4 \\n       1 is the root: left 0 node right 3 nodes :temp[1]=dp[0]*dp[3]=5\\n       2 is the root: left 1 node right 2 nodes :temp[2]=dp[1]*dp[2]=2\\n       3 is the root: left 2 node right 1 nodes :temp[3]=dp[2]*dp[1]=2\\n       4 is the root: left 3 node right 0 nodes :temp[4]=dp[3]*dp[0]=5\\n       dp[4]=temp[1]+...temp[4]=14\\n\\n     public int numTrees(int n) {\\n        \\tif(n==0) return 0;\\n        \\tif(n==1) return 1;\\n            int[] dp=new int[n+1];\\n            dp[0]=1;\\n            dp[1]=1;//n=1\\n            dp[2]=2;//n=2\\n            for(int i=3;i<=n;i++){\\n            \\tfor(int j=1;j<=i;j++){\\n            \\t\\tdp[i]+=dp[j-1]*dp[i-j];\\n            \\t}\\n            }\\n            return dp[n];\\n        }",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "   \\n\\n       basic idea is the recursion relationship between dps\\n       eg. n=4 \\n       1 is the root: left 0 node right 3 nodes :temp[1]=dp[0]*dp[3]=5\\n       2 is the root: left 1 node right 2 nodes :temp[2]=dp[1]*dp[2]=2\\n       3 is the root: left 2 node right 1 nodes :temp[3]=dp[2]*dp[1]=2\\n       4 is the root: left 3 node right 0 nodes :temp[4]=dp[3]*dp[0]=5\\n       dp[4]=temp[1]+...temp[4]=14\\n\\n     public int numTrees(int n) {\\n        \\tif(n==0) return 0;\\n        \\tif(n==1) return 1;\\n            int[] dp=new int[n+1];\\n            dp[0]=1;\\n            dp[1]=1;//n=1\\n            dp[2]=2;//n=2\\n            for(int i=3;i<=n;i++){\\n            \\tfor(int j=1;j<=i;j++){\\n            \\t\\tdp[i]+=dp[j-1]*dp[i-j];\\n            \\t}\\n            }\\n            return dp[n];\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 31765,
                "title": "dp-solution-java",
                "content": "      public int numTrees(int n) {\\n           \\n            int[] tree = new int[n+1];\\n            tree[0]=1;\\n            tree[1]=1;\\n            for(int i=2; i<=n; i++){\\n                int sum=0;\\n                for(int j=1; j<=i; j++){\\n                    sum=sum+tree[j-1]*tree[i-j];\\n                }\\n                tree[i]=sum;\\n            }\\n            return tree[n];\\n        }",
                "solutionTags": [],
                "code": "      public int numTrees(int n) {\\n           \\n            int[] tree = new int[n+1];\\n            tree[0]=1;\\n            tree[1]=1;\\n            for(int i=2; i<=n; i++){\\n                int sum=0;\\n                for(int j=1; j<=i; j++){\\n                    sum=sum+tree[j-1]*tree[i-j];\\n                }\\n                tree[i]=sum;\\n            }\\n            return tree[n];\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 31762,
                "title": "math-solution",
                "content": "    public class Solution {\\n        public int numTrees(int n) {\\n            long k =1;\\n            for (int i = 2; i <= n; i++) \\n            {\\n                k = 2*(2*i-1)*k/(i+1);\\n            }\\n            int res = Math.toIntExact(k);\\n            return res;\\n        }\\n    }\\nbased on [WIKI Catalan Number][1]\\n\\n\\n  [1]: https://en.wikipedia.org/wiki/Catalan_number",
                "solutionTags": [
                    "Math"
                ],
                "code": "class Solution {\\n        public int numTrees(int n) {\\n            long k =1;\\n            for (int i = 2; i <= n; i++) \\n            {\\n                k = 2*(2*i-1)*k/(i+1);\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 31785,
                "title": "catalan-numbers-4-lines-java-solution",
                "content": "  public int numTrees(int n) {\\n\\n        double count = 1.0;\\n        for (double i = 1.0; i <= n; i = i + 1.0) \\n            count *= ((i + n) / i);\\n        return (int) Math.round(count / (n+1));\\n  }",
                "solutionTags": [],
                "code": "  public int numTrees(int n) {\\n\\n        double count = 1.0;\\n        for (double i = 1.0; i <= n; i = i + 1.0) \\n            count *= ((i + n) / i);\\n        return (int) Math.round(count / (n+1));\\n  }",
                "codeTag": "Unknown"
            },
            {
                "id": 31805,
                "title": "easy-to-read-dp-solution-though-not-the-first-to-the-party",
                "content": "    // DP solution based upon the idea that the number of trees with \"n\" elements is\\n    // related to the number of left and right subtrees that can be constructed\\n    // using 0 to n-1 elements.\\n\\n    public int numTrees(int n) {\\n    \\n        int[] trees = new int[n+1];\\n        trees[0] = 1;\\n        trees[1] = 1;\\n\\n        for (int tree=2; tree <= n; tree++) {\\n            int numTrees = 0;\\n            for (int i=1; i <= tree; i++) {\\n                int numLTrees = trees[i-1];\\n                int numRTrees = trees[tree-i];\\n                numTrees += numLTrees * numRTrees;\\n            }\\n            trees[tree] = numTrees;\\n        }\\n        \\n        return trees[n];\\n    }",
                "solutionTags": [
                    "Dynamic Programming"
                ],
                "code": "    // DP solution based upon the idea that the number of trees with \"n\" elements is\\n    // related to the number of left and right subtrees that can be constructed\\n    // using 0 to n-1 elements.\\n\\n    public int numTrees(int n) {\\n    \\n        int[] trees = new int[n+1];\\n        trees[0] = 1;\\n        trees[1] = 1;\\n\\n        for (int tree=2; tree <= n; tree++) {\\n            int numTrees = 0;\\n            for (int i=1; i <= tree; i++) {\\n                int numLTrees = trees[i-1];\\n                int numRTrees = trees[tree-i];\\n                numTrees += numLTrees * numRTrees;\\n            }\\n            trees[tree] = numTrees;\\n        }\\n        \\n        return trees[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31833,
                "title": "0ms-10line-dp-c-solution-with-explain",
                "content": "when ask f(n),the root of possible tree can be 1,2...n,if the root is i,the possible number  f(n,i) is the possible number of the left tree multiply by the right;the elements of left child tree is 1...i-1, number is i-1; the right is i+1...n,number is n-i;so f(n,i)=f(i-1)*f(n-i),f(n)=sum( f(n,i) ) \\n\\n    int numTrees(int n) {\\n        int dp[10000];\\n        dp[0]=1;\\n        for(int i=1;i<=n;i++){\\n            dp[i]=0;\\n            for(int j=1;j<=i;j++){\\n                dp[i]+=dp[j-1]*dp[i-j];\\n            }\\n        }\\n        return dp[n];\\n    }",
                "solutionTags": [],
                "code": "when ask f(n),the root of possible tree can be 1,2...n,if the root is i,the possible number  f(n,i) is the possible number of the left tree multiply by the right;the elements of left child tree is 1...i-1, number is i-1; the right is i+1...n,number is n-i;so f(n,i)=f(i-1)*f(n-i),f(n)=sum( f(n,i) ) \\n\\n    int numTrees(int n) {\\n        int dp[10000];\\n        dp[0]=1;\\n        for(int i=1;i<=n;i++){\\n            dp[i]=0;\\n            for(int j=1;j<=i;j++){\\n                dp[i]+=dp[j-1]*dp[i-j];\\n            }\\n        }\\n        return dp[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31841,
                "title": "shorter-solution-in-java-with-a-minor-issue",
                "content": "    class UniqueBSTs {\\n     public int numTrees(int n){\\n        int sum = 0;\\n        if(n == 0) return 1;\\n        for(int i = 1; i <= n; i++)\\n           sum += numTress(n -i) * numTrees(i - 1);\\n      }\\n      return sum;\\n    }  \\n\\nThe solution is accepted at time cost 205ms;\\nOne minor issue is when n = 0, then this solution would give 1. But actually 0 nodes should generate 0 trees.\\nOr this issue is acceptable?",
                "solutionTags": [
                    "Tree",
                    "Recursion"
                ],
                "code": "    class UniqueBSTs {\\n     public int numTrees(int n){\\n        int sum = 0;\\n        if(n == 0) return 1;\\n        for(int i = 1; i <= n; i++)\\n           sum += numTress(n -i) * numTrees(i - 1);\\n      }\\n      return sum;\\n    }  \\n\\nThe solution is accepted at time cost 205ms;\\nOne minor issue is when n = 0, then this solution would give 1. But actually 0 nodes should generate 0 trees.\\nOr this issue is acceptable?",
                "codeTag": "Java"
            },
            {
                "id": 3607964,
                "title": "c-dp",
                "content": "````\\nclass Solution {\\npublic:\\n    vector<int> dp;\\n    int f(int n){\\n         if(n<=1) return 1;\\n         if(dp[n]!=-1) return dp[n];\\n         int ans=0;\\n         for(int i=1 ; i<=n ; i++){\\n             int left = f(i-1);\\n             int right = f(n-i);                 \\n             ans+=left*right;\\n         }\\n        \\n        return dp[n] = ans;\\n         \\n    }\\n    int numTrees(int n) {\\n        \\n        dp = vector<int>(n+1,-1);\\n        return f(n);\\n        \\n    }\\n};\\n\\n",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    vector<int> dp;\\n    int f(int n){\\n         if(n<=1) return 1;\\n         if(dp[n]!=-1) return dp[n];\\n         int ans=0;\\n         for(int i=1 ; i<=n ; i++){\\n             int left = f(i-1);\\n             int right = f(n-i);                 \\n             ans+=left*right;\\n         }",
                "codeTag": "Java"
            },
            {
                "id": 3105865,
                "title": "beats-100-easiest-solution-using-dp",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n  \\n  int exe(int n , vector<int> &dp){\\nif(n==0 || n==1)\\nreturn 1;\\n\\nif(dp[n]!=-1)\\nreturn dp[n];\\n\\nint ans=0;\\nfor(int i=1; i<=n; i++){\\n    ans+=exe(i-1,dp)*exe(n-i,dp);\\n}\\nreturn dp[n]=ans;\\n  }\\n\\n int numTrees(int n) {\\n    vector<int>dp(n+1,-1);\\n    return exe(n,dp);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming",
                    "Binary Search Tree"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n  \\n  int exe(int n , vector<int> &dp){\\nif(n==0 || n==1)\\nreturn 1;\\n\\nif(dp[n]!=-1)\\nreturn dp[n];\\n\\nint ans=0;\\nfor(int i=1; i<=n; i++){\\n    ans+=exe(i-1,dp)*exe(n-i,dp);\\n}\\nreturn dp[n]=ans;\\n  }\\n\\n int numTrees(int n) {\\n    vector<int>dp(n+1,-1);\\n    return exe(n,dp);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2967513,
                "title": "c-detailed-explanation-of-recursion-fourmula-used-of-counting",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n- Total number of binary search tree is sum of number of subtree with each root\\n- Total = bst(root1) + bst(root2) + bst(root3) \\nF(x) -> gives number of unique bst with x number of nodes \\nG(y) -> gives number of BST with root elemnt y \\n\\nRecursive Define G(Y) : \\nG(y) = number of left subtree with y root * number of right subtree of y as root\\n\\nx1 = number of nodes in left subtree \\nHence F(x1) = number of left subtree with root y \\nx2 = number of nodes in right subtree\\nHence F(x2) = number of right subtree with root y \\n\\nG(y)= F(x1)*F(x2)\\n\\nIn this Quesition n nodew with value 1 ,2 ,3 , 4 \\n \\nF(n) = G(1) + G(2) + G(3) + G(4) + G(5) +.....+ G(n)\\nG(1) = F(0) * F(n-1-0)\\nG(2) = F(1) * F(n-2)\\nG(3) = F(2) * F(n-3) \\n\\nF(n)\\n{\\n    for( int j = 0 ; j < n ; ++j)\\n    {\\n        res += F(j) * F(n-1-j);  \\n    }\\n}\\n \\n- Number of Subtree is only depend on number of nodes \\ndoes not depend on wiche are they numbers \\ne.g 2 node 1,2 or 3,4\\nnumber of bst : \\n1        2        3       4            \\n \\\\     /           \\\\     /\\n  2   1             4   3 \\n\\nwe can replace by 1,2 by 3,4  \\nBST : one rule to follow \\nnodes on left subtree are < root->val\\nnodes on right subtree are > root->val \\n\\n# Recusion is Solved Using Dp memo & iterative\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int rec(int i )\\n    {\\n        if( i ==0 ) return 1; // Number of bst 1 nodes present in tree -> 1 \\n         if(i ==1) return 1; // Number of BST conting 1 node ->1\\n         \\n         int res = 0 ; \\n          for( int j = 0 ; j < i ; ++j ) \\n          res += rec(j)*rec(i-j-1);  // adding number of subtree with root i+1 \\n          returnres;\\n    }\\n    int numTrees(int n) {\\n\\n        vector<int> dp(n+1,-1);  \\n        dp[0]=1;\\n        dp[1]=1;\\n        for (int i = 2 ;i <= n ; ++i )\\n        {\\n            int res = 0;\\n            for (int j = 0 ; j < i ; ++j ) // adding number of subtree with root 0 to n-1 \\n            {\\n                res += dp[j]*dp[i-j-1];\\n            }\\n            dp[i]=res;\\n        }  \\n        return dp[n];\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming",
                    "Binary Search Tree",
                    "Recursion",
                    "Binary Tree"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int rec(int i )\\n    {\\n        if( i ==0 ) return 1; // Number of bst 1 nodes present in tree -> 1 \\n         if(i ==1) return 1; // Number of BST conting 1 node ->1\\n         \\n         int res = 0 ; \\n          for( int j = 0 ; j < i ; ++j ) \\n          res += rec(j)*rec(i-j-1);  // adding number of subtree with root i+1 \\n          returnres;\\n    }\\n    int numTrees(int n) {\\n\\n        vector<int> dp(n+1,-1);  \\n        dp[0]=1;\\n        dp[1]=1;\\n        for (int i = 2 ;i <= n ; ++i )\\n        {\\n            int res = 0;\\n            for (int j = 0 ; j < i ; ++j ) // adding number of subtree with root 0 to n-1 \\n            {\\n                res += dp[j]*dp[i-j-1];\\n            }\\n            dp[i]=res;\\n        }  \\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2723339,
                "title": "simple-approach-solved-without-catalan-numbers-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nSolving the problem using recursion considering each node as root each time.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nMentioned as Comments\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(N) --> auxilliary stack space\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int arrange(int i, int j, int n, vector<int>& dp){\\n        // base case\\n        if(i > j) return 1;\\n        if(i == j) return 1;\\n\\n        // dp check\\n        if(dp[j-i+1]!=-1) return dp[j-i+1];\\n\\n        // approach: arrange(i, j, n, dp) --> function which returns no. of bst from [i...j]\\n        // we iterate through the entire [i...j] and take each element as root and generate no. of\\n        // possibilities for its left and right subtrees.\\n        \\n        // Note: 1D DP optimized version\\n\\n        int ans = 0;\\n        for(int k=i; k<=j; k++){\\n            ans += arrange(i, k-1, n, dp) * arrange(k+1, j, n, dp);\\n        }\\n        return dp[j-i+1] = ans;\\n    }\\n    int numTrees(int n) {\\n        // memoization:\\n        // vector<vector<int>> dp(n+1, vector<int>(n+1, -1));\\n        // we can further optimize it to 1D DP, as i and j need not to be unique, since we are not given\\n        // an array, only the no. of elements b/w i and j matters to us.\\n        vector<int> dp(n+1, -1);\\n        return arrange(0, n-1, n, dp);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int arrange(int i, int j, int n, vector<int>& dp){\\n        // base case\\n        if(i > j) return 1;\\n        if(i == j) return 1;\\n\\n        // dp check\\n        if(dp[j-i+1]!=-1) return dp[j-i+1];\\n\\n        // approach: arrange(i, j, n, dp) --> function which returns no. of bst from [i...j]\\n        // we iterate through the entire [i...j] and take each element as root and generate no. of\\n        // possibilities for its left and right subtrees.\\n        \\n        // Note: 1D DP optimized version\\n\\n        int ans = 0;\\n        for(int k=i; k<=j; k++){\\n            ans += arrange(i, k-1, n, dp) * arrange(k+1, j, n, dp);\\n        }\\n        return dp[j-i+1] = ans;\\n    }\\n    int numTrees(int n) {\\n        // memoization:\\n        // vector<vector<int>> dp(n+1, vector<int>(n+1, -1));\\n        // we can further optimize it to 1D DP, as i and j need not to be unique, since we are not given\\n        // an array, only the no. of elements b/w i and j matters to us.\\n        vector<int> dp(n+1, -1);\\n        return arrange(0, n-1, n, dp);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2663540,
                "title": "java-catalan-number-pattern",
                "content": "```\\nclass Solution {\\n    public int numTrees(int n) {\\n        int dp[]=new int[n+1];\\n         dp[0]=1;\\n         dp[1]=1;\\n    for(int i=2;i<dp.length;i++)\\n    {\\n        int l=0; int r=i-1;\\n        while(l<=(i-1))\\n        {\\n            dp[i]+=dp[l]*dp[r];\\n            l++;\\n            r--;\\n        }\\n    }\\n        return dp[n];\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int numTrees(int n) {\\n        int dp[]=new int[n+1];\\n         dp[0]=1;\\n         dp[1]=1;\\n    for(int i=2;i<dp.length;i++)\\n    {\\n        int l=0; int r=i-1;\\n        while(l<=(i-1))\\n        {\\n            dp[i]+=dp[l]*dp[r];\\n            l++;\\n            r--;\\n        }\\n    }\\n        return dp[n];\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2416401,
                "title": "simple-c-solution-recursion-memoization-easy-understanding",
                "content": "**Solution -->**\\n```\\nclass Solution {\\npublic:\\n    long long int catalan(long int n,vector<long long int>& memo) \\n    { \\n        // Base case \\n        if (n <= 1) return 1; \\n        if(memo[n]!=-1)return memo[n];\\n        \\n        // catalan(n) is sum of catalan(i)*catalan(n-i-1) \\n        long long int res = 0; \\n        for (int i=0; i<n; i++) \\n            res += catalan(i,memo)*catalan(n-i-1,memo); \\n        memo[n]=res;\\n        return res; \\n    } \\n    int numTrees(int n) {\\n        vector<long long int> memo(n+1,-1);\\n        return catalan(n,memo);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Dynamic Programming",
                    "Memoization"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    long long int catalan(long int n,vector<long long int>& memo) \\n    { \\n        // Base case \\n        if (n <= 1) return 1; \\n        if(memo[n]!=-1)return memo[n];\\n        \\n        // catalan(n) is sum of catalan(i)*catalan(n-i-1) \\n        long long int res = 0; \\n        for (int i=0; i<n; i++) \\n            res += catalan(i,memo)*catalan(n-i-1,memo); \\n        memo[n]=res;\\n        return res; \\n    } \\n    int numTrees(int n) {\\n        vector<long long int> memo(n+1,-1);\\n        return catalan(n,memo);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2238815,
                "title": "java-in-depth-explanation",
                "content": "**Intuition**\\nThe idea is we place the root in different places, then we could use previous result to solve the problem. See the notes below. Also refer to [NeetCode\\'s YouTube](https://www.youtube.com/watch?v=Ox0TenN3Zpg).\\n\\n```\\n/*    \\nHope it will help you to understand :\\n    \\n    n = 0;     null   \\n    \\n    count[0] = 1\\n    \\n    \\n    n = 1;      1       \\n    \\n    count[1] = 1 \\n    \\n    \\n    n = 2;    1__       \\t\\t\\t __2     \\n    \\t\\t      \\\\\\t\\t\\t\\t\\t/                 \\n    \\t\\t     count[1]\\t   \\tcount[1]\\t\\n    \\n    count[2] = 1 + 1 = 2\\n    \\n    \\n    \\n    n = 3;    1__\\t\\t\\t\\t      __2__\\t                   __3\\n    \\t\\t      \\\\\\t\\t            /       \\\\\\t\\t\\t      /\\t\\t\\n    \\t\\t  count[2]\\t\\t  count[1]    count[1]\\t\\tcount[2]\\n    \\n    count[3] = 2 + 1 + 2  = 5\\n    \\n    \\n    \\n    n = 4;    1__  \\t\\t\\t\\t\\t__2__\\t\\t\\t\\t\\t   ___3___                  \\n    \\t\\t      \\\\\\t\\t\\t\\t /        \\\\\\t\\t\\t\\t\\t  /\\t\\t  \\\\\\t\\t\\t\\n    \\t\\t  count[3]\\t\\t count[1]    count[2]\\t\\t  count[2]   count[1]\\n    \\n                 __4\\t\\t\\t\\t\\n               /\\n           count[3]   \\n    \\n    count[4] = 5 + 2 + 2 + 5 = 14     \\n    \\n\\nAnd  so on...\\n*/\\n```\\n\\n\\n\\n  ```\\n  class Solution\\n{\\n    public int numTrees(int n)\\n    {\\n        // O(n^2) time | O(n) space\\n        int[] tree = new int[n+1];\\n        \\n        // 0 node = empty tree  = 1 tree\\n        // 1 node = 1 root-tree = 1 tree\\n        tree[0] = 1;\\n        tree[1] = 1;\\n        \\n        for(int i = 2; i <= n; i++)\\n        {         \\n            for(int j = 1; j <= i; j++)\\n            {\\n                int left = j - 1;\\n                int right = i - j;\\n                tree[i] += tree[left] * tree[right];\\n            }        \\n        }\\n        return tree[n];\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n/*    \\nHope it will help you to understand :\\n    \\n    n = 0;     null   \\n    \\n    count[0] = 1\\n    \\n    \\n    n = 1;      1       \\n    \\n    count[1] = 1 \\n    \\n    \\n    n = 2;    1__       \\t\\t\\t __2     \\n    \\t\\t      \\\\\\t\\t\\t\\t\\t/                 \\n    \\t\\t     count[1]\\t   \\tcount[1]\\t\\n    \\n    count[2] = 1 + 1 = 2\\n    \\n    \\n    \\n    n = 3;    1__\\t\\t\\t\\t      __2__\\t                   __3\\n    \\t\\t      \\\\\\t\\t            /       \\\\\\t\\t\\t      /\\t\\t\\n    \\t\\t  count[2]\\t\\t  count[1]    count[1]\\t\\tcount[2]\\n    \\n    count[3] = 2 + 1 + 2  = 5\\n    \\n    \\n    \\n    n = 4;    1__  \\t\\t\\t\\t\\t__2__\\t\\t\\t\\t\\t   ___3___                  \\n    \\t\\t      \\\\\\t\\t\\t\\t /        \\\\\\t\\t\\t\\t\\t  /\\t\\t  \\\\\\t\\t\\t\\n    \\t\\t  count[3]\\t\\t count[1]    count[2]\\t\\t  count[2]   count[1]\\n    \\n                 __4\\t\\t\\t\\t\\n               /\\n           count[3]   \\n    \\n    count[4] = 5 + 2 + 2 + 5 = 14     \\n    \\n\\nAnd  so on...\\n*/\\n```\n```\\n  class Solution\\n{\\n    public int numTrees(int n)\\n    {\\n        // O(n^2) time | O(n) space\\n        int[] tree = new int[n+1];\\n        \\n        // 0 node = empty tree  = 1 tree\\n        // 1 node = 1 root-tree = 1 tree\\n        tree[0] = 1;\\n        tree[1] = 1;\\n        \\n        for(int i = 2; i <= n; i++)\\n        {         \\n            for(int j = 1; j <= i; j++)\\n            {\\n                int left = j - 1;\\n                int right = i - j;\\n                tree[i] += tree[left] * tree[right];\\n            }        \\n        }\\n        return tree[n];\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2171720,
                "title": "python-dp-calculate-combination-ways-of-forming-left-and-right-subtrees",
                "content": "combination ways = ways to form left subtree * ways to form right subtree\\n   ways to form left subtree -> select values less than root value\\n   ways to form right subtree -> select values larger than root value\\n        \\n     n = 0 -> 1 way to form a tree, the tree is an empty tree\\n     n = 1 -> 1 way to form a tree, the tree only has one node\\n     n = 2\\n        select root: 1 or 2, then select the rest nodes to form their subtrees, so two nodes have two form ways\\n        1                  2\\n          \\\\              /\\n            2           1\\n        \\n     n = 3\\n        select root: 1, 2, 3\\n        1              1                           2                  3                3\\n          \\\\              \\\\                        / \\\\                /                /\\n            2             3                      1   3              1                2\\n             \\\\            /                                          \\\\              /\\n              3          2                                            2            1\\n        \\n        select 1 as root: no value less than 1, left subtree is always empty, right subtree has two nodes to form -> 2 nodes have 2 ways\\n        select 2 as root: left subtree should take 1, right subtree should take 3 -> one node have one way \\n        select 3 as root: no value larger than 3, left subtree is always empty, right subtree has two nodes to form -> 2 nodes have 2 ways\\n        \\n        answer = 1*2+1*1+2*1\\n\\n```python\\ndef numTrees(self, n: int) -> int:\\n\\t\\t# index of dp i represents the number of nodes to form a tree -> range is [0, n], length is n+1\\n        # when 0 or 1 node, there\\'s only one way to form a tree\\n        dp = [0]*(n+1)\\n        dp[0] = dp[1] = 1\\n        for i in range(2, len(dp)):\\n            # number of (current root + left nodes) is from 1 to j\\n            for j in range(1, i+1):\\n                # left subtree has j-1 nodes, 1 is current root, then the number of right subtree\\'s nodes is i-j\\n                dp[i] += dp[j-1]*dp[i-j]\\n        return dp[n] # when there are n nodes\\n```",
                "solutionTags": [
                    "Python3",
                    "Dynamic Programming"
                ],
                "code": "```python\\ndef numTrees(self, n: int) -> int:\\n\\t\\t# index of dp i represents the number of nodes to form a tree -> range is [0, n], length is n+1\\n        # when 0 or 1 node, there\\'s only one way to form a tree\\n        dp = [0]*(n+1)\\n        dp[0] = dp[1] = 1\\n        for i in range(2, len(dp)):\\n            # number of (current root + left nodes) is from 1 to j\\n            for j in range(1, i+1):\\n                # left subtree has j-1 nodes, 1 is current root, then the number of right subtree\\'s nodes is i-j\\n                dp[i] += dp[j-1]*dp[i-j]\\n        return dp[n] # when there are n nodes\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2059297,
                "title": "o-n-28-ms-faster-than-94-46-of-python3-online-submissions-for-unique-binary-search-trees",
                "content": "28 ms, faster than 94.46% of Python3 online submissions for Unique Binary Search Trees.\\n\\t\\n\\t\\tcat_ = 1\\n\\n        for i in range(1, n+1):\\n            cat_ *= (4 * i - 2);\\n            cat_ //= (i + 1);\\n        \\n        return cat_",
                "solutionTags": [
                    "Python3"
                ],
                "code": "28 ms, faster than 94.46% of Python3 online submissions for Unique Binary Search Trees.\\n\\t\\n\\t\\tcat_ = 1\\n\\n        for i in range(1, n+1):\\n            cat_ *= (4 * i - 2);\\n            cat_ //= (i + 1);\\n        \\n        return cat_",
                "codeTag": "Unknown"
            },
            {
                "id": 2041389,
                "title": "java-recursion-solution-with-explain",
                "content": "Assume i is root, every integer less than i locate at left tree and larger than i is right tree\\n\\nThe number of combination is\\n```\\nall possible left tree * all possible right tree\\n```\\n\\nAnd for left tree and right tree, they are just the recursion of using another i as root.\\n\\n```\\n    HashMap<Integer, Integer> hashMap = new HashMap<>();\\n\\n    public int numTrees(int n) {\\n        if(n == 0 || n == 1){\\n            return 1;\\n        }\\n\\n        if(hashMap.containsKey(n)){\\n            return hashMap.get(n);\\n        }\\n\\n        int sum = 0;\\n        for(int i = 1; i <= n; i++){\\n            sum += numTrees(i - 1) * numTrees(n - i);\\n        }\\n        hashMap.put(n, sum);\\n        return sum;\\n    }\\n```",
                "solutionTags": [
                    "Java",
                    "Recursion"
                ],
                "code": "```\\nall possible left tree * all possible right tree\\n```\n```\\n    HashMap<Integer, Integer> hashMap = new HashMap<>();\\n\\n    public int numTrees(int n) {\\n        if(n == 0 || n == 1){\\n            return 1;\\n        }\\n\\n        if(hashMap.containsKey(n)){\\n            return hashMap.get(n);\\n        }\\n\\n        int sum = 0;\\n        for(int i = 1; i <= n; i++){\\n            sum += numTrees(i - 1) * numTrees(n - i);\\n        }\\n        hashMap.put(n, sum);\\n        return sum;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1592963,
                "title": "dp-explanation-without-the-need-to-know-catalan-forumla",
                "content": "To solve this problem with DP, we don\\'t need to know the Catalan numbers in advance.\\nWe don\\'t even have to know this is a DP problem in advance. (But you need to know DP for sure)\\nAll we need is to think about the process of how the tree is constructed.\\nWe can always start with the most simple case, then extend from it.\\n\\nFor n = 1, [1], the number is 1. It should be very intuitive to know this without any difficulty.\\n\\nFor n = 2, [1,2] the number is 2. It may take you a few seconds to draw the possible on the paper, but you will get it.\\n\\nFor n = 3, [1,2,3]. Again we try to figure it out by drawing the possible tree on paper. \\nLet\\'s start by making 1 as the root node, and continue to construct possible trees from [2,3].\\nBut then you come to realize isn\\'t it the same as [1,2] if we consider they are unique numbers and the actual tree does not matter because we only need to know the number of possible trees. So the number of unique trees of [2,3] is the same as the number of [1,2].\\nSo by far, it may remind you it\\'s very similar to the structure of Fibonacci number, that we can get the latter number by adding the previous number. Only in this problem, it is to multiply the number of possible left trees with the number of possible right trees. \\nSo just for [1,2,3], let start with a simple loop to see how to put the things together\\n\\n```\\n// For n = 3\\nint count = 0;\\nfor(int i=1; i<=3; i++) {\\n\\xA0 \\xA0// let i be the root node, then the possible number of trees with i being the root is\\n\\xA0 \\xA0int i_count = number of trees from (i-1 nodes) * number of trees from (3-i nodes)\\n\\xA0 \\xA0// add the possible number of trees with i begin the root to count\\n\\xA0 \\xA0count += i_count;\\n\\n}\\n```\\n\\nI believe you\\'ve got the idea of how to extend the simple case of 3 to any number n.\\nThis is also a very classic DP problem that we can\\n1. find the optimal substructure for the problem\\n2. find recurrence between the problem and subproblem\\n\\nThe final solution\\n\\n```\\nclass Solution {\\npublic:\\n\\xA0 \\xA0 int numTrees(int n) {\\n\\xA0 \\xA0 \\xA0 \\xA0 vector<int> dp(n+1, 0);\\n\\xA0 \\xA0 \\xA0 \\xA0 dp[0] = 1; \\xA0 // for null tree, it is counted as 1\\n\\xA0 \\xA0 \\xA0 \\xA0 for(int i=1; i<=n; i++) {\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 for(int j=1; j<=i; j++) {\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 // for every j as the root node\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 // the number is dp[left]*dp[right]\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 dp[i] += dp[j-1]*dp[i-j];\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 }\\n\\xA0 \\xA0 \\xA0 \\xA0 }\\n\\xA0 \\xA0 \\xA0 \\xA0 \\n\\xA0 \\xA0 \\xA0 \\xA0 return dp[n];\\n\\xA0 \\xA0 }\\n};\\n```\\n",
                "solutionTags": [],
                "code": "```\\n// For n = 3\\nint count = 0;\\nfor(int i=1; i<=3; i++) {\\n\\xA0 \\xA0// let i be the root node, then the possible number of trees with i being the root is\\n\\xA0 \\xA0int i_count = number of trees from (i-1 nodes) * number of trees from (3-i nodes)\\n\\xA0 \\xA0// add the possible number of trees with i begin the root to count\\n\\xA0 \\xA0count += i_count;\\n\\n}\\n```\n```\\nclass Solution {\\npublic:\\n\\xA0 \\xA0 int numTrees(int n) {\\n\\xA0 \\xA0 \\xA0 \\xA0 vector<int> dp(n+1, 0);\\n\\xA0 \\xA0 \\xA0 \\xA0 dp[0] = 1; \\xA0 // for null tree, it is counted as 1\\n\\xA0 \\xA0 \\xA0 \\xA0 for(int i=1; i<=n; i++) {\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 for(int j=1; j<=i; j++) {\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 // for every j as the root node\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 // the number is dp[left]*dp[right]\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 dp[i] += dp[j-1]*dp[i-j];\\n\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 }\\n\\xA0 \\xA0 \\xA0 \\xA0 }\\n\\xA0 \\xA0 \\xA0 \\xA0 \\n\\xA0 \\xA0 \\xA0 \\xA0 return dp[n];\\n\\xA0 \\xA0 }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1566949,
                "title": "python3-catalan-s-number-simple-solution-beats-99-97-on-time",
                "content": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        if n==1:\\n            return 1\\n        def catalan(n):\\n            temp = [0] * (n + 1)\\n\\n            temp[0], temp[1] = 1, 1\\n\\n            for i in range(2, n + 1):\\n                for j in range(i):\\n                    temp[i] += (temp[j] * temp[i - 1 - j])\\n\\n            return temp[n]\\n        \\n        return catalan(n)\\n```\\n\\nPlease upvote if you like the solution. Comment for any questions.",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        if n==1:\\n            return 1\\n        def catalan(n):\\n            temp = [0] * (n + 1)\\n\\n            temp[0], temp[1] = 1, 1\\n\\n            for i in range(2, n + 1):\\n                for j in range(i):\\n                    temp[i] += (temp[j] * temp[i - 1 - j])\\n\\n            return temp[n]\\n        \\n        return catalan(n)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1566578,
                "title": "python3",
                "content": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        def factorial(num):\\n            if n == 1:\\n                return 1\\n            else:\\n                tot = 1\\n                for i in range(1, num + 1):\\n                    tot = tot * i\\n                \\n                return tot\\n        \\n        if n == 1:\\n            return 1\\n        elif n == 2:\\n            return 2\\n        else:\\n            first = 1\\n            for i in range(n+2, (n*2) + 1):\\n                first = first * i\\n            second = factorial(n)\\n            \\n            total = first//second\\n            return total\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def numTrees(self, n: int) -> int:\\n        def factorial(num):\\n            if n == 1:\\n                return 1\\n            else:\\n                tot = 1\\n                for i in range(1, num + 1):\\n                    tot = tot * i\\n                \\n                return tot\\n        \\n        if n == 1:\\n            return 1\\n        elif n == 2:\\n            return 2\\n        else:\\n            first = 1\\n            for i in range(n+2, (n*2) + 1):\\n                first = first * i\\n            second = factorial(n)\\n            \\n            total = first//second\\n            return total\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1550466,
                "title": "c-resursive-to-optimzed-explained-0ms-beats-100",
                "content": "### catalans number series : 1, 1, 2, 3, 5, 14, ...\\nC(0) = 1\\nC(1) = 1\\nC(2) = 2 , so on.....\\n\\n#### Total unique BST for n keys equals to nth catalan number.\\n#### So, I have just shown here on how to find nth catalan number.\\n\\n### Recursive solution\\n**Time: O(2^n)** // for recursion tree with two choices and depth \\'n\\'\\n**space: O(n)** \\n\\ncatalan(n) = (C0 * Cn-1) + (C1 * Cn-2) + .... + (Cn-1 * C0 )\\nex: Catalan(3) = C0C1 + C1C1 + C2C0 ==> 2 + 1 + 2 ==> 5\\n```\\nint catalan(int n)\\n{\\n    if (n <= 1)\\n    {\\n        return 1;\\n    }\\n\\n    int result = 0;\\n    for (int i = 0; i < n; i++)\\n    {\\n        result += (catalan(i) * catalan(n - i - 1));\\n    }\\n\\n    return result;\\n}\\n```\\n\\n### Memoization\\n**Time: O(n * m)**\\n**Space: O(n)** \\n```\\nint catalan(int n, vector<int> &memo)\\n{\\n    if (memo.at(n) != 0)\\n    {\\n        return memo.at(n);\\n    }\\n    if (n <= 1)\\n    {\\n        return 1;\\n    }\\n\\n    int result = 0;\\n    for (int i = 0; i < n; i++)\\n    {\\n        result += (catalan(i, memo) * catalan(n - i - 1, memo));\\n    }\\n    memo.at(n) = result;\\n    // for (int i = 0; i < n; i++)\\n    // result += catalan(i) * catalan(n - i - 1);\\n\\n    return memo.at(n);\\n}\\n```\\n\\n### DP \\n**Time: O(n^2)** \\n**space: O(n)** \\n- multily with mirror index element ranging from [0 --> i -1 ]\\n```\\nint catalanDP(int n)\\n{\\n    vector<int> catalans(n + 1, 0);\\n    catalans.at(0) = 1;\\n    catalans.at(1) = 1;\\n\\n    for (int i = 2; i <= n; i++)\\n    {\\n        for (int j = 0; j < i; ++j)\\n        {\\n            catalans.at(i) += (catalans.at(j) * catalans.at(i - j - 1));\\n        }\\n    }\\n    return catalans.at(n);\\n}\\n```\\n\\n### Binomial Coefficient\\n**Time: O(n)** // time taken for calculating binomial coefficient \\n```\\n    unsigned long int binomialCoeff(int n, int r){\\n        if(r>n-r){\\n            r = n-r;\\n        }\\n        \\n        unsigned long int res = 1;\\n        \\n        for(int i=0; i<r; ++i){\\n            res = res * (n-i);\\n            res = res / (i+1);\\n        }\\n        return res;\\n    }\\n    int numTrees(int n) {\\n        unsigned long int result = binomialCoeff(2*n, n);\\n        \\n        return result/(n+1);\\n    }\\n```\\n\\n\\t\\n#### Learning resource click this link: [Click here](program-nth-catalan-number)\\n#### Upvote if it has helped you. Thanks:)\\n\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "Binary Search Tree"
                ],
                "code": "```\\nint catalan(int n)\\n{\\n    if (n <= 1)\\n    {\\n        return 1;\\n    }\\n\\n    int result = 0;\\n    for (int i = 0; i < n; i++)\\n    {\\n        result += (catalan(i) * catalan(n - i - 1));\\n    }\\n\\n    return result;\\n}\\n```\n```\\nint catalan(int n, vector<int> &memo)\\n{\\n    if (memo.at(n) != 0)\\n    {\\n        return memo.at(n);\\n    }\\n    if (n <= 1)\\n    {\\n        return 1;\\n    }\\n\\n    int result = 0;\\n    for (int i = 0; i < n; i++)\\n    {\\n        result += (catalan(i, memo) * catalan(n - i - 1, memo));\\n    }\\n    memo.at(n) = result;\\n    // for (int i = 0; i < n; i++)\\n    // result += catalan(i) * catalan(n - i - 1);\\n\\n    return memo.at(n);\\n}\\n```\n```\\nint catalanDP(int n)\\n{\\n    vector<int> catalans(n + 1, 0);\\n    catalans.at(0) = 1;\\n    catalans.at(1) = 1;\\n\\n    for (int i = 2; i <= n; i++)\\n    {\\n        for (int j = 0; j < i; ++j)\\n        {\\n            catalans.at(i) += (catalans.at(j) * catalans.at(i - j - 1));\\n        }\\n    }\\n    return catalans.at(n);\\n}\\n```\n```\\n    unsigned long int binomialCoeff(int n, int r){\\n        if(r>n-r){\\n            r = n-r;\\n        }\\n        \\n        unsigned long int res = 1;\\n        \\n        for(int i=0; i<r; ++i){\\n            res = res * (n-i);\\n            res = res / (i+1);\\n        }\\n        return res;\\n    }\\n    int numTrees(int n) {\\n        unsigned long int result = binomialCoeff(2*n, n);\\n        \\n        return result/(n+1);\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1441283,
                "title": "c-easy-to-understand-3-methods",
                "content": "**Using Dynamic programming ( Time complexity O(nxn) and space complexity O(n) )**\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n    int c[n+1];\\n    c[0]=c[1]=1;    \\n    for(int i=2;i<=n;i++)\\n    {\\n        c[i]=0;\\n        for(int j=0;j<i;j++)\\n        {\\n            c[i]+=c[j]*c[i-j-1];\\n        }\\n    }\\n        return c[n];\\n    }\\n};\\n```\\n**Using Binomial formula for catalan number\\nTime complexity O(n) and space complexity O(1)**\\n```\\nclass Solution {\\n    public:\\n    int numTrees(int n) {\\n        long long ans=1;\\n        for(int i=n+1;i<=2*n;i++)\\n        {\\n            ans=(ans*i)/(i-n);\\n        }\\n        return ans/(n+1);\\n    }\\n};\\n```\\n**Exponential time complexity (gives TLE)**\\n```\\nclass Solution {\\npublic:\\n    int catalan(int n)\\n    {\\n        if(n==0||n==1)\\n        return 1;\\n        int result=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            result+=catalan(i)*catalan(n-i-1);\\n        }   \\n        return result;\\n    }\\n    int numTrees(int n) {\\n     return catalan(n);   \\n    }\\n};\\n```\\n**Please upvote if you like\\nHappy Coding :)**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n    int c[n+1];\\n    c[0]=c[1]=1;    \\n    for(int i=2;i<=n;i++)\\n    {\\n        c[i]=0;\\n        for(int j=0;j<i;j++)\\n        {\\n            c[i]+=c[j]*c[i-j-1];\\n        }\\n    }\\n        return c[n];\\n    }\\n};\\n```\n```\\nclass Solution {\\n    public:\\n    int numTrees(int n) {\\n        long long ans=1;\\n        for(int i=n+1;i<=2*n;i++)\\n        {\\n            ans=(ans*i)/(i-n);\\n        }\\n        return ans/(n+1);\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int catalan(int n)\\n    {\\n        if(n==0||n==1)\\n        return 1;\\n        int result=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            result+=catalan(i)*catalan(n-i-1);\\n        }   \\n        return result;\\n    }\\n    int numTrees(int n) {\\n     return catalan(n);   \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1418455,
                "title": "java-2-methods-1-liner-idea",
                "content": "**Idea:** Solve [LC 108. Convert Sorted Array to Binary Search Tree](https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/discuss/1418449/Java-or-Recursive) before this problem to understand the concept\\n\\n**Method 1:** Memoization/Top Down DP gets TLE but AC if memoization is removed.\\n**T/S:** O(n\\xB2)/O(n)\\n```\\npublic int numTrees(int n) {\\n\\treturn numTrees(n, new HashMap<>());\\n}\\n\\nprivate int numTrees(int n, Map<Integer, Integer> map) {\\n\\tif (n <= 1)\\n\\t\\treturn 1;\\n\\tif (map.containsKey(n))\\n\\t\\treturn map.get(n);\\n\\n\\tvar numTrees = 0;\\n\\tfor (var i = 1; i <= n; i++)\\n\\t\\tnumTrees += numTrees(i - 1) * numTrees(n - i);\\n\\n\\tmap.put(n, numTrees);\\n\\treturn numTrees;\\n}\\n```\\n*Same as above, using streams, but without memoization.* TLE\\n```\\npublic int numTrees(int n) {\\n\\treturn n <= 1 ? 1 : IntStream.rangeClosed(1, n)\\n\\t\\t\\t\\t\\t\\t\\t\\t .map(i -> numTrees(i - 1) * numTrees(n - i))\\n\\t\\t\\t\\t\\t\\t\\t\\t .sum();\\n}\\n```\\n\\n**Method 2:** Tabulation. Same idea, just bottom-up DP.\\n**T/S:** O(n\\xB2)/O(n)\\n```\\npublic int numTrees(int n) {\\n\\tvar dp = new int[n + 1];\\n\\tdp[0] = dp[1] = 1;\\n\\n\\tfor (var i = 2; i <= n; i++)\\n\\t\\tfor (var j = 1; j <= i; j++)\\n\\t\\t\\tdp[i] += dp[j - 1] * dp[i - j];\\n\\treturn dp[n];\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Memoization"
                ],
                "code": "```\\npublic int numTrees(int n) {\\n\\treturn numTrees(n, new HashMap<>());\\n}\\n\\nprivate int numTrees(int n, Map<Integer, Integer> map) {\\n\\tif (n <= 1)\\n\\t\\treturn 1;\\n\\tif (map.containsKey(n))\\n\\t\\treturn map.get(n);\\n\\n\\tvar numTrees = 0;\\n\\tfor (var i = 1; i <= n; i++)\\n\\t\\tnumTrees += numTrees(i - 1) * numTrees(n - i);\\n\\n\\tmap.put(n, numTrees);\\n\\treturn numTrees;\\n}\\n```\n```\\npublic int numTrees(int n) {\\n\\treturn n <= 1 ? 1 : IntStream.rangeClosed(1, n)\\n\\t\\t\\t\\t\\t\\t\\t\\t .map(i -> numTrees(i - 1) * numTrees(n - i))\\n\\t\\t\\t\\t\\t\\t\\t\\t .sum();\\n}\\n```\n```\\npublic int numTrees(int n) {\\n\\tvar dp = new int[n + 1];\\n\\tdp[0] = dp[1] = 1;\\n\\n\\tfor (var i = 2; i <= n; i++)\\n\\t\\tfor (var j = 1; j <= i; j++)\\n\\t\\t\\tdp[i] += dp[j - 1] * dp[i - j];\\n\\treturn dp[n];\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1388269,
                "title": "c-dp-solution",
                "content": "**Complexity**\\n- time: O(n^2)\\n- space: O(n)\\n\\n**Implementation**\\n```\\npublic class Solution {\\n    public int NumTrees(int n) {\\n       \\n        if(n <= 1)\\n            return 1;\\n        \\n        // dp[i]: # of unique BST formed by i nodes\\n        int[] dp = new int[n+1];\\n        dp[0] = 1;\\n        dp[1] = 1;\\n        \\n        // build dp array for 2 nodes, 3 nodes, ..., n nodes\\n        for(int i = 2; i <= n; i++)\\n        {\\n            // there j number of nodes in the left subtree\\n            for(int j = 0; j < i; j++)\\n            {\\n\\t\\t\\t\\t// number of BST constructed by i nodes = # of left sub-BST * # of righ sub-BST\\n                dp[i] += dp[j] * dp[i-1-j];\\n            }\\n        }\\n        \\n        return dp[n];\\n    }\\n}\\n```\\n\\n**Note**\\n![image](https://assets.leetcode.com/users/images/81455de5-8ee5-4daf-985b-79e7c9280df8_1630648865.3709857.png)\\n",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int NumTrees(int n) {\\n       \\n        if(n <= 1)\\n            return 1;\\n        \\n        // dp[i]: # of unique BST formed by i nodes\\n        int[] dp = new int[n+1];\\n        dp[0] = 1;\\n        dp[1] = 1;\\n        \\n        // build dp array for 2 nodes, 3 nodes, ..., n nodes\\n        for(int i = 2; i <= n; i++)\\n        {\\n            // there j number of nodes in the left subtree\\n            for(int j = 0; j < i; j++)\\n            {\\n\\t\\t\\t\\t// number of BST constructed by i nodes = # of left sub-BST * # of righ sub-BST\\n                dp[i] += dp[j] * dp[i-1-j];\\n            }\\n        }\\n        \\n        return dp[n];\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1278581,
                "title": "java-easy-solution-without-dp",
                "content": "```\\nclass Solution {\\n    \\n    public int numTrees(int n) {\\n        return helper(n);\\n    }\\n    int helper(int n)\\n    {\\n        if(n <= 1)\\n            return 1;\\n        int res = 0;\\n        for(int i=0;i<=n-1;i++)\\n        {\\n            res += (helper(i) * helper(n-i-1));\\n        }\\n        return res;\\n    }\\n}\\n```\\nPlease upvote i u find my code easy to understand",
                "solutionTags": [
                    "Java",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\n    \\n    public int numTrees(int n) {\\n        return helper(n);\\n    }\\n    int helper(int n)\\n    {\\n        if(n <= 1)\\n            return 1;\\n        int res = 0;\\n        for(int i=0;i<=n-1;i++)\\n        {\\n            res += (helper(i) * helper(n-i-1));\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1190656,
                "title": "solutions-pictures",
                "content": "The solution basically wants us to calculate `n-th` [Catalan number](https://en.wikipedia.org/wiki/Catalan_number). However the first solution could be derived using simple logic without any references to Catalan. By the way [22. Generate Parentheses](https://leetcode.com/problems/generate-parentheses/) is another problem that is connected to Catalan.\\n**Erratum**: In the first recursive relation there is an error: the upper limit in summation should be `n-1` instead of `n`.\\n\\n![image](https://assets.leetcode.com/users/images/2d342865-1162-4286-9946-3d765b352237_1620116536.6667213.png)\\n\\n### Solution 1\\n**Dp with up->bottom memoization/recursion**\\n**time: `O(N^2)`, space: `O(N)`**\\nAs there are `n` nodes we can distribute them in number of ways between left and right subtree:\\n```\\n(0, n-1), (1, n-2), (2, n-3)...(n-1,0)\\n```\\nand we need to consider them all. For each distribution of nodes we delegate the question we are being asked to the left and right subtree. Then we just multiply the answers from the left and right subtree (combinatorically we need to account every combination of left BST and right BST) and add them up.\\nHere `n=3`.\\n<br>\\n\\n![image](https://assets.leetcode.com/users/images/feed2bc4-9975-4929-956a-a81b0e6973c4_1620126357.7661562.png)\\n\\n<br>\\n\\nTo avoid recalculations we use `unordered_map` to memoize the result.\\n```\\nint numTrees(int n)\\n{\\n\\tstatic unordered_map<int, int> m{{0,1}};\\n\\tif(m.count(n)) return m[n];\\n\\tfor(auto i{0}; i<n; m[n] += numTrees(i)*numTrees(n-1-i), ++i); \\n\\treturn m[n];\\n}\\n```\\n**Dp with bottom->up recursion**\\n**time: `O(N^2)`, space: `O(N)`**\\n```\\nint numTrees(int n)\\n{\\n    int C[20]{1};\\n    for(auto m{1}; m<=n; m++)\\n        for(auto i{0}; i<m; C[m] += C[i]*C[m-1-i], ++i);\\n\\treturn C[n];\\n}\\n```\\nNote, that \\n``` \\nint C[20]{1}; // = {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\\n```\\n### Solution 2\\n**Recursion (Catalan numbers recursion relation)**\\n**time: `O(N)`, space: `O(N)` (if no tail recursion)**\\nIf we know a bit about Catalan we can use tail-recursive relation. Mind overflow for `int` return type for `n==19` (hence I use `int64_t`).\\n```\\nint64_t numTrees(int n)\\n{\\n\\treturn n ? numTrees(n-1)*2*(2*n-1)/(n+1) : 1;\\n}\\n```\\n### Solution 3\\n**Look up [Catalan numbers](https://oeis.org/A000108)**\\n\\nWe have only 19 inputs to consider. Catalans grow fast\\n![image](https://assets.leetcode.com/users/images/c0384506-d7ec-418f-a8d1-98825ee8bd48_1620126652.8174157.png)\\n\\nhence the input range is so small. We can just look them up (or just use someone\\'s solution to tabulate them, ha-ha). This may seem like cheating but look up techniques are quiet useful in practical problems. We should always mind the range of the input anyway.\\n**time: `O(1)`, space: `O(N)`**\\n```\\nconstexpr int numTrees(int n)\\n{\\n\\tconstexpr int C[]{1,1,2,5,14,42,132,429,1430,4862,16796,58786,208012,742900,2674440,9694845,35357670,129644790,477638700,1767263190};\\n\\treturn C[n];\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\n(0, n-1), (1, n-2), (2, n-3)...(n-1,0)\\n```\n```\\nint numTrees(int n)\\n{\\n\\tstatic unordered_map<int, int> m{{0,1}};\\n\\tif(m.count(n)) return m[n];\\n\\tfor(auto i{0}; i<n; m[n] += numTrees(i)*numTrees(n-1-i), ++i); \\n\\treturn m[n];\\n}\\n```\n```\\nint numTrees(int n)\\n{\\n    int C[20]{1};\\n    for(auto m{1}; m<=n; m++)\\n        for(auto i{0}; i<m; C[m] += C[i]*C[m-1-i], ++i);\\n\\treturn C[n];\\n}\\n```\n``` \\nint C[20]{1}; // = {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\\n```\n```\\nint64_t numTrees(int n)\\n{\\n\\treturn n ? numTrees(n-1)*2*(2*n-1)/(n+1) : 1;\\n}\\n```\n```\\nconstexpr int numTrees(int n)\\n{\\n\\tconstexpr int C[]{1,1,2,5,14,42,132,429,1430,4862,16796,58786,208012,742900,2674440,9694845,35357670,129644790,477638700,1767263190};\\n\\treturn C[n];\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1089283,
                "title": "c-clean-code-very-easy-to-understand-faster-than-100",
                "content": "1. The number of unique trees with 0 and 1 nodes will be 1.\\n2. The number of unique structures of a tree will be product of patterns of its child nodes(left and right)\\n3. Consider if the left subtree has 0 nodes then right subtree will have n-1 , similarly if left has 1 , then right will have n-2 ( sparing one node for root node ).  and the loop continues till left have n-1 and right have 0 nodes.\\n\\n/*    \\nHope it will help you to understand :\\n    \\n    n = 0;     null   \\n    \\n    count[0] = 1\\n    \\n    \\n    n = 1;      1       \\n    \\n    count[1] = 1 \\n    \\n    \\n    n = 2;    1__       \\t\\t\\t __2     \\n    \\t\\t      \\\\\\t\\t\\t\\t\\t/                 \\n    \\t\\t     count[1]\\t   \\tcount[1]\\t\\n    \\n    count[2] = 1 + 1 = 2\\n    \\n    \\n    \\n    n = 3;    1__\\t\\t\\t\\t      __2__\\t                   __3\\n    \\t\\t      \\\\\\t\\t            /       \\\\\\t\\t\\t      /\\t\\t\\n    \\t\\t  count[2]\\t\\t  count[1]    count[1]\\t\\tcount[2]\\n    \\n    count[3] = 2 + 1 + 2  = 5\\n    \\n    \\n    \\n    n = 4;    1__  \\t\\t\\t\\t\\t__2__\\t\\t\\t\\t\\t   ___3___                  \\n    \\t\\t      \\\\\\t\\t\\t\\t /        \\\\\\t\\t\\t\\t\\t  /\\t\\t  \\\\\\t\\t\\t\\n    \\t\\t  count[3]\\t\\t count[1]    count[2]\\t\\t  count[2]   count[1]\\n    \\n                 __4\\t\\t\\t\\t\\n               /\\n           count[3]   \\n    \\n    count[4] = 5 + 2 + 2 + 5 = 14     \\n    \\n\\nAnd  so on...\\n*/\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        \\n        vector<int>dp(n+1,0);\\n        \\n        dp[0]=dp[1]=1;\\n        \\n\\t\\t\\n        for(int i=2 ; i<=n ; i++ ){\\n           \\n            for(int j=0;j<i;j++){\\n           \\n\\t\\t\\t\\t   dp[i] += dp[j] * dp[i-j-1] ;\\n           \\n\\t\\t   }\\n        }\\n\\t\\t\\n        return dp[n];\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    int numTrees(int n) {\\n        \\n        vector<int>dp(n+1,0);\\n        \\n        dp[0]=dp[1]=1;\\n        \\n\\t\\t\\n        for(int i=2 ; i<=n ; i++ ){\\n           \\n            for(int j=0;j<i;j++){\\n           \\n\\t\\t\\t\\t   dp[i] += dp[j] * dp[i-j-1] ;\\n           \\n\\t\\t   }",
                "codeTag": "Java"
            },
            {
                "id": 978929,
                "title": "recursion-memoization-dp-0ms",
                "content": "Here\\'s the super slow recursive solution :\\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        int res = 0;\\n        if (n <= 1)\\n            return 1;\\n        for (int i = 1; i <=n ; i++)    {\\n            res += numTrees(i-1) * numTrees(n-i);\\n        }\\n        return res;\\n    }\\n}\\n```\\n\\nMemoization makes it super fast : \\n\\n```\\nclass Solution {\\n    HashMap<Integer, Integer> hmap = new HashMap<>();\\n    public int numTrees(int n) {\\n        if (hmap.containsKey(n)) return hmap.get(n);\\n        int res = 0;\\n        if (n <= 1)\\n            return 1;\\n        for (int i = 1; i <=n ; i++)    {\\n            res += numTrees(i-1) * numTrees(n-i);\\n        }\\n        hmap.put(n, res);\\n        return res;\\n    }\\n}\\n```\\nThe DP version: \\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        int[] dp = new int[n+1];\\n        dp[0] = dp[1] = 1;\\n        for (int i = 2; i <=n ; i++)    {\\n            for (int j = 0; j < i; j++) {\\n                dp[i]+= dp[j] * dp[i-j-1];\\n            }\\n        }\\n        return dp[n];\\n    }\\n}\\n```\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int numTrees(int n) {\\n        int res = 0;\\n        if (n <= 1)\\n            return 1;\\n        for (int i = 1; i <=n ; i++)    {\\n            res += numTrees(i-1) * numTrees(n-i);\\n        }\\n        return res;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    HashMap<Integer, Integer> hmap = new HashMap<>();\\n    public int numTrees(int n) {\\n        if (hmap.containsKey(n)) return hmap.get(n);\\n        int res = 0;\\n        if (n <= 1)\\n            return 1;\\n        for (int i = 1; i <=n ; i++)    {\\n            res += numTrees(i-1) * numTrees(n-i);\\n        }\\n        hmap.put(n, res);\\n        return res;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        int[] dp = new int[n+1];\\n        dp[0] = dp[1] = 1;\\n        for (int i = 2; i <=n ; i++)    {\\n            for (int j = 0; j < i; j++) {\\n                dp[i]+= dp[j] * dp[i-j-1];\\n            }\\n        }\\n        return dp[n];\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 875023,
                "title": "java-with-dp-detailed-explanation",
                "content": "I feel this is not an obvious DP problem comparing with [those problems](https://leetcode.com/discuss/general-discussion/458695/Dynamic-Programming-Patterns#DP-on-Strings). Below, I will explain how I find the pattern. \\n\\nAs given, we know when n = 3, total of unique BST is 5. But how is that been resolved? \\nMaybe we can start from n = 1? Okay, let\\'s see. \\n\\n```\\nwhen n = 1, count = 1 (root node is 1, and that\\'s it)\\nwhen n = 2, count = 2 (one tree\\'s root node is 1, and the other\\'s root node is 2)\\n```\\n\\nNow we back to look at `n=3`, so we can explain it as:\\n\\n```\\narray = [1,2,3]\\nwhen 1 is the root node: count = 2, because two nodes count is resolved (n = 2, count = 2)\\nwhen 2 is the root node: count = 1, root is 2, left is 1, right is 2\\nwhen 3 is the root node: count = 2, because two nodes count is resolved (n = 2, count = 2)\\n\\nHence when n = 3, the result is 2 + 1 + 2 = 5\\n```\\n\\nlet\\'s see when `n = 4`: \\n\\n```\\narray = [1,2,3,4]\\nwhen 1 is the root node, 3 nodes become it\\'s children, the count is 5, resolved by n = 3.\\nwhen 4 is the root node, 3 nodes become it\\'s children, the cound is 5, resolved by n = 3.\\n\\nHere is the other observation:\\nwhen 2 is root, total number of left tree is 1, and total number of right tree is 2, (look at result for n=1 and n = 2), so count = 1 * 2\\nwhen 3 is root, total number of right tree is 2, and totoal number of left tree is 1, (look at result for n=1 and n = 2), so count = 1 * 2\\n\\nHence when = 4, the result is 5 + 5 + 1*2 + 1*2 = 14\\n```\\n\\nlet\\'s see when `n=5`:\\n\\n```\\narray = [1,2,3,4,5]\\n\\nwhen 1 is the root node, count = 14, resolved by n = 4\\nwhen 5 is the root node, count = 14, resolved by n = 4\\n\\nwhen 2 is the root node, total number of left tree is 1, and total number of right tree is 3, (resolved by n =3), so count = 1 * 5\\nwhen 3 is the root node, total number of left tree is 2, and total number of right tree is 2, so count = 2 * 2\\nwhen 4 is the root node, total number of left tree is 3, and total number of right tree is 1, so count = 5 * 1\\n\\nHence the result is 14 + 14 + 5 + 4 + 5 = 42\\n```\\n\\nTill now, you should be able to find the pattern, and think of DP. And we can use an array to store the result of each stage.\\n\\nHere is the code:\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
                "solutionTags": [],
                "code": "```\\nwhen n = 1, count = 1 (root node is 1, and that\\'s it)\\nwhen n = 2, count = 2 (one tree\\'s root node is 1, and the other\\'s root node is 2)\\n```\n```\\narray = [1,2,3]\\nwhen 1 is the root node: count = 2, because two nodes count is resolved (n = 2, count = 2)\\nwhen 2 is the root node: count = 1, root is 2, left is 1, right is 2\\nwhen 3 is the root node: count = 2, because two nodes count is resolved (n = 2, count = 2)\\n\\nHence when n = 3, the result is 2 + 1 + 2 = 5\\n```\n```\\narray = [1,2,3,4]\\nwhen 1 is the root node, 3 nodes become it\\'s children, the count is 5, resolved by n = 3.\\nwhen 4 is the root node, 3 nodes become it\\'s children, the cound is 5, resolved by n = 3.\\n\\nHere is the other observation:\\nwhen 2 is root, total number of left tree is 1, and total number of right tree is 2, (look at result for n=1 and n = 2), so count = 1 * 2\\nwhen 3 is root, total number of right tree is 2, and totoal number of left tree is 1, (look at result for n=1 and n = 2), so count = 1 * 2\\n\\nHence when = 4, the result is 5 + 5 + 1*2 + 1*2 = 14\\n```\n```\\narray = [1,2,3,4,5]\\n\\nwhen 1 is the root node, count = 14, resolved by n = 4\\nwhen 5 is the root node, count = 14, resolved by n = 4\\n\\nwhen 2 is the root node, total number of left tree is 1, and total number of right tree is 3, (resolved by n =3), so count = 1 * 5\\nwhen 3 is the root node, total number of left tree is 2, and total number of right tree is 2, so count = 2 * 2\\nwhen 4 is the root node, total number of left tree is 3, and total number of right tree is 1, so count = 5 * 1\\n\\nHence the result is 14 + 14 + 5 + 4 + 5 = 42\\n```\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 779622,
                "title": "python-very-simple-solution-with-explanation",
                "content": "```\\nclass Solution(object):\\n    def numTrees(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        # Start out by building trees for n = 3, n= 4, n = 5 and observe the pattern of trees that they are forming\\n        # For eg: n = 4\\n        # With root as 1, it can have no left subtree and right subtree will have rest of the 3 elements (2, 3, 4). \\n        # These 3 elements can be constructed uniquely in 5 different ways. Why?\\n        \\n        # consider n = 3 now\\n        # With root as 1, it can have 0 left subtree and 2 elements in right subtree which will have 2 combinations.\\n        # With root as 2, it will have 1 left and 1 right subbtree so just 1 combination\\n        # With root as 3, it will have 2 elements in left subtree and 0 element in right subtree. This will result in 2 combinations.\\n        # So totally with n =3, we have 2 + 1 + 2 = 5 combinations\\n        # That is because F[0]*F[2] + F[1]*F[1] + F[2] * F[0]\\n        \\n        # if you consider n = 2, it will have totally 2 combinations\\n        \\n        # If you consider n = 4, it will have these many combinations\\n        # F[0]*F[3] + F[1]*F[2] + F[2]*F[1] + F[3]*F[0] = 1*5 + 1*2 + 2*1 + 5*1 = 14\\n        \\n        # If you consider n = 5, it will have these many combinations\\n        # F[0]*F[4] + F[1]*F[3] + F[2]*F[2] + F[3]*F[1] + F[4]*F[0]\\n        # = 1*14    + 1*5       + 2*2       +  5*1      + 14*1\\n        # = 42    \\n    \\n        \\n        dp = [0 for _ in range(n + 1)]\\n        dp[0] = 1\\n        for i in range(1, n + 1):\\n            total = 0\\n            for k in range(0, i):\\n                # print k, i - k - 1\\n                total += dp[k] * dp[i - k - 1]\\n            dp[i] = total\\n        # print dp\\n        return dp[n]\\n    \\n        \\n        \"\"\"\\n        def numTreesRecursive(num):\\n            if num == 1:\\n                return 1\\n            elif num < 1:\\n                return 1\\n            else:\\n                ans = 0\\n                for k in range(1, num + 1):\\n                    ans += numTreesRecursive(k - 1) * numTreesRecursive(num - k)\\n                return ans\\n            \\n        def numTreesMemoization(num):\\n            if num == 1:\\n                return 1\\n            elif num < 1:\\n                return 1\\n            elif memoize[num] != None:\\n                return memoize[num]\\n            else:\\n                ans = 0\\n                for k in range(1, num + 1):\\n                    ans += numTreesMemoization(k - 1) * numTreesMemoization(num - k)\\n                memoize[num] = ans\\n                return memoize[num]\\n        \\n        def numTreesTabulation(num):\\n            table = [0 for _ in range(num + 1)]\\n            table[0] = 1\\n            table[1] = 1\\n            for i in range(2, num + 1):\\n                for k in range(1, i + 1):\\n                    table[i] += table[k - 1] * table[i - k]\\n\\n            return table[num]\\n        \\n        # Times out\\n        # return numTreesRecursive(n)\\n        \\n        # memoize = [None for _ in range(n + 1)]\\n        # return numTreesMemoization(n)\\n        \\n        return numTreesTabulation(n)\\n        \"\"\"\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def numTrees(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        # Start out by building trees for n = 3, n= 4, n = 5 and observe the pattern of trees that they are forming\\n        # For eg: n = 4\\n        # With root as 1, it can have no left subtree and right subtree will have rest of the 3 elements (2, 3, 4). \\n        # These 3 elements can be constructed uniquely in 5 different ways. Why?\\n        \\n        # consider n = 3 now\\n        # With root as 1, it can have 0 left subtree and 2 elements in right subtree which will have 2 combinations.\\n        # With root as 2, it will have 1 left and 1 right subbtree so just 1 combination\\n        # With root as 3, it will have 2 elements in left subtree and 0 element in right subtree. This will result in 2 combinations.\\n        # So totally with n =3, we have 2 + 1 + 2 = 5 combinations\\n        # That is because F[0]*F[2] + F[1]*F[1] + F[2] * F[0]\\n        \\n        # if you consider n = 2, it will have totally 2 combinations\\n        \\n        # If you consider n = 4, it will have these many combinations\\n        # F[0]*F[3] + F[1]*F[2] + F[2]*F[1] + F[3]*F[0] = 1*5 + 1*2 + 2*1 + 5*1 = 14\\n        \\n        # If you consider n = 5, it will have these many combinations\\n        # F[0]*F[4] + F[1]*F[3] + F[2]*F[2] + F[3]*F[1] + F[4]*F[0]\\n        # = 1*14    + 1*5       + 2*2       +  5*1      + 14*1\\n        # = 42    \\n    \\n        \\n        dp = [0 for _ in range(n + 1)]\\n        dp[0] = 1\\n        for i in range(1, n + 1):\\n            total = 0\\n            for k in range(0, i):\\n                # print k, i - k - 1\\n                total += dp[k] * dp[i - k - 1]\\n            dp[i] = total\\n        # print dp\\n        return dp[n]\\n    \\n        \\n        \"\"\"\\n        def numTreesRecursive(num):\\n            if num == 1:\\n                return 1\\n            elif num < 1:\\n                return 1\\n            else:\\n                ans = 0\\n                for k in range(1, num + 1):\\n                    ans += numTreesRecursive(k - 1) * numTreesRecursive(num - k)\\n                return ans\\n            \\n        def numTreesMemoization(num):\\n            if num == 1:\\n                return 1\\n            elif num < 1:\\n                return 1\\n            elif memoize[num] != None:\\n                return memoize[num]\\n            else:\\n                ans = 0\\n                for k in range(1, num + 1):\\n                    ans += numTreesMemoization(k - 1) * numTreesMemoization(num - k)\\n                memoize[num] = ans\\n                return memoize[num]\\n        \\n        def numTreesTabulation(num):\\n            table = [0 for _ in range(num + 1)]\\n            table[0] = 1\\n            table[1] = 1\\n            for i in range(2, num + 1):\\n                for k in range(1, i + 1):\\n                    table[i] += table[k - 1] * table[i - k]\\n\\n            return table[num]\\n        \\n        # Times out\\n        # return numTreesRecursive(n)\\n        \\n        # memoize = [None for _ in range(n + 1)]\\n        # return numTreesMemoization(n)\\n        \\n        return numTreesTabulation(n)\\n        \"\"\"\\n```",
                "codeTag": "Java"
            },
            {
                "id": 754109,
                "title": "c-easy-dp-solution-o-n-2-bottom-up",
                "content": "We can solve the problem using dynamic programming. We will solve for small problem (i<n) then will use this results to find for other. \\n\\nFor n=1, dp[n]=1, since 1 BST can be formed with this.\\nFor n=2, dp[n]=2, since 2 BST can be formed with this.\\nFor n=3, there would be 5 BST as desribed below:\\n\\nNo of BST in which there are 0 left children and 2 right children (dp[0] * dp[2])\\nNo of BST in which there are 1 left children and 1 right children (dp[1] * dp[1])\\nNo of BST in which  there are 2 left children and 0 right children (dp[2] * dp[0])\\n\\nTotal number of BST =2+1+2=5.\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        if(n==0)\\n            return 1;\\n        if(n==1)\\n            return 1;\\n        vector<int> dp(n+1, 1);\\n        int ans=0;\\n        for(int i=2;i<=n;i++)\\n        {\\n            dp[i]=0;\\n            for(int j=0;j<i;j++)\\n            {\\n                dp[i]+=(dp[j]*dp[i-j-1]);\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        if(n==0)\\n            return 1;\\n        if(n==1)\\n            return 1;\\n        vector<int> dp(n+1, 1);\\n        int ans=0;\\n        for(int i=2;i<=n;i++)\\n        {\\n            dp[i]=0;\\n            for(int j=0;j<i;j++)\\n            {\\n                dp[i]+=(dp[j]*dp[i-j-1]);\\n            }\\n        }\\n        return dp[n];\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 727240,
                "title": "faster-than-100-submissions-c",
                "content": "Based on Multinomial theorem.\\nEach binary tree can be represented as an array along with null values. Now, if n=N, then the array consists of numbers 1...N and N+1 ```null``` values, that is array for N=3 will be \\n```[1,2,3,null,null,null,null]```.\\nNow, 1...N must be in order and you can place ```null``` values in the spaces between the numbers. That is,\\n```[some null values],1,[some null values],2,[some null values],3,[some null values]...```\\nNow, let a1,a2,a3,...a(N+1) represent number of null values within gaps.\\nthere are N+1 gaps and a1+a2+...+a(N+1)\\nAfter applying multinomial theorem we obtain result as ```(2N C N)/(N+1)```\\n\\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        long long int p = 1;\\n        for(int i=1;i<=n;i++){\\n            p*=(n+i);\\n            p/=i;\\n        }\\n        p/=(n+1);\\n        return p;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```null```\n```[1,2,3,null,null,null,null]```\n```null```\n```[some null values],1,[some null values],2,[some null values],3,[some null values]...```\n```(2N C N)/(N+1)```\n```\\nclass Solution {\\npublic:\\n    int numTrees(int n) {\\n        long long int p = 1;\\n        for(int i=1;i<=n;i++){\\n            p*=(n+i);\\n            p/=i;\\n        }\\n        p/=(n+1);\\n        return p;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 703139,
                "title": "c-detailed-explaination-faster-than-100-of-ac-solutions-o-n-runtime-dp-o-n-space",
                "content": "Ok so for any tree, you have a root, a left sub-tree(lets call it LST) and a right sub-tree(RST). \\nIf I give you a BST of n-nodes and ask you to change position of any node in LST OR/AND RST, it will give rise to a new BST. So you have got a new/unique BST.\\nSo by **Fundamental Principle Of Counting**, you need to employ multiplication b/w number of possible permutations on the left and the right.\\nHence the recurrence developes:\\n```\\nT(n) = Summation(k=1 to n){T(k-1)*T(n-k)}\\n```\\nThink of it this way: If you take \\'**k-1**\\' nodes in the LST, how many nodes are left to be picked up for the RST?\\n\\'**n-k**\\', Right? Because 1 node has to be the root.\\n\\nFollowing is the code snippet for it:\\n```\\nclass Solution {\\npublic:\\n    int rec(int n, map<int,int> &dp){\\n        if(n==0){\\n            dp[0] = 1;\\n            return 1;\\n        }\\n        if(dp.find(n)!=dp.end())\\n            return dp[n];\\n        int sum = 0;\\n        for(int k=1;k<=n;k++)\\n            sum += rec(n-k,dp)*rec(k-1,dp);\\n        dp[n] = sum;\\n        return sum;\\n    }\\n    int numTrees(int n) {\\n        map<int,int> dp;\\n        return rec(n,dp);\\n    }\\n};\\n```\\n\\nAlso if you want to have a mathematical formula, its the n-th Catalan Number, \\n```\\nC(2n,n)/(n+1) where C(n,r) is the number of combinations possible for picking up r items from n unique items.\\n```\\n\\nHappy Coding!\\nAlso if you feel like, please Upvote\\n",
                "solutionTags": [
                    "Dynamic Programming",
                    "Binary Search Tree",
                    "Recursion"
                ],
                "code": "```\\nT(n) = Summation(k=1 to n){T(k-1)*T(n-k)}\\n```\n```\\nclass Solution {\\npublic:\\n    int rec(int n, map<int,int> &dp){\\n        if(n==0){\\n            dp[0] = 1;\\n            return 1;\\n        }\\n        if(dp.find(n)!=dp.end())\\n            return dp[n];\\n        int sum = 0;\\n        for(int k=1;k<=n;k++)\\n            sum += rec(n-k,dp)*rec(k-1,dp);\\n        dp[n] = sum;\\n        return sum;\\n    }\\n    int numTrees(int n) {\\n        map<int,int> dp;\\n        return rec(n,dp);\\n    }\\n};\\n```\n```\\nC(2n,n)/(n+1) where C(n,r) is the number of combinations possible for picking up r items from n unique items.\\n```",
                "codeTag": "Java"
            },
            {
                "id": 703075,
                "title": "finding-the-nth-catalan-number",
                "content": "```\\nclass Solution {\\npublic:\\n    long long binomialCoeff(int n, int k) {\\n        long long res = 1; \\n        if (k > n - k) {\\n            k = n - k;\\n        }\\n        for (int i = 0; i < k; ++i) { \\n            res *= (n - i); \\n            res /= (i + 1); \\n        } \\n        return res; \\n    }\\n    \\n    int numTrees(int n) {\\n        //Catalan Number (2*n)!/((n+1)! * n!)\\n        long long c = binomialCoeff(2 * n, n);  \\n        return c / (n + 1); \\n        \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    long long binomialCoeff(int n, int k) {\\n        long long res = 1; \\n        if (k > n - k) {\\n            k = n - k;\\n        }\\n        for (int i = 0; i < k; ++i) { \\n            res *= (n - i); \\n            res /= (i + 1); \\n        } \\n        return res; \\n    }\\n    \\n    int numTrees(int n) {\\n        //Catalan Number (2*n)!/((n+1)! * n!)\\n        long long c = binomialCoeff(2 * n, n);  \\n        return c / (n + 1); \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 493155,
                "title": "simple-recursion-with-memoization-in-java-with-comments",
                "content": "```java\\nclass Solution {\\n    Map<Integer,Integer> map = new HashMap<>();\\n    public int numTrees(int n) {\\n\\t    // Empty tree\\n        if(n == 0){\\n            return 1;\\n        }\\n\\t\\t// One tree with root as 1\\n        if(n == 1){\\n            return 1;\\n        }\\n\\t\\t// Two trees \\n        if(n == 2){\\n            return 2;\\n        }\\n        if(map.containsKey(n)){\\n            return map.get(n);\\n        }\\n        int result = 0;\\n        for(int i = 1;i<=n;i++){\\n            int left = numTrees(i-1); // when i is root then we can have as many as i-1 as nodes on the left\\n            int right = numTrees(n-i); // as many as n-i as right subtree nodes\\n            result += (left * right); // take the cartesian product or all the combinations for every left and right subtree\\n        }\\n        map.put(n,result);\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```java\\nclass Solution {\\n    Map<Integer,Integer> map = new HashMap<>();\\n    public int numTrees(int n) {\\n\\t    // Empty tree\\n        if(n == 0){\\n            return 1;\\n        }\\n\\t\\t// One tree with root as 1\\n        if(n == 1){\\n            return 1;\\n        }\\n\\t\\t// Two trees \\n        if(n == 2){\\n            return 2;\\n        }\\n        if(map.containsKey(n)){\\n            return map.get(n);\\n        }\\n        int result = 0;\\n        for(int i = 1;i<=n;i++){\\n            int left = numTrees(i-1); // when i is root then we can have as many as i-1 as nodes on the left\\n            int right = numTrees(n-i); // as many as n-i as right subtree nodes\\n            result += (left * right); // take the cartesian product or all the combinations for every left and right subtree\\n        }\\n        map.put(n,result);\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 467450,
                "title": "java-dynamic-programming-with-detail-explainations",
                "content": "```\\n1. Assume that dp[n] is number of unique BST from 1 -> n\\n2. From 1 -> n we could choose different root 1 or 2 or 3 or ..n\\n3. Ex: dp[3] = (dp[0] * dp[2] /*1 is root*/) + (dp[1] * dp[1] /*2 is root*/) + (dp[2] * dp[0] /*3 is root*/)\\n4. We need to find dp[0], dp[1] and dp[2] before finding dp[3], the result of dp[3] is built from\\ndp[0] and dp[1] and dp[2] ==> This is bottom up dynamic programming\\n    \\nclass Solution {\\n    public int numTrees(int n) {\\n        \\n        int[] dp = new int[n + 1];\\n        dp[0] = 1;\\n        for(int i = 1; i <= n; i++) {\\n            for(int j = 1; j <= i; j++) {\\n                dp[i] += dp[j - 1] * dp[i - j];\\n            }\\n        }\\n        \\n        return dp[n];\\n        \\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\n1. Assume that dp[n] is number of unique BST from 1 -> n\\n2. From 1 -> n we could choose different root 1 or 2 or 3 or ..n\\n3. Ex: dp[3] = (dp[0] * dp[2] /*1 is root*/) + (dp[1] * dp[1] /*2 is root*/) + (dp[2] * dp[0] /*3 is root*/)\\n4. We need to find dp[0], dp[1] and dp[2] before finding dp[3], the result of dp[3] is built from\\ndp[0] and dp[1] and dp[2] ==> This is bottom up dynamic programming\\n    \\nclass Solution {\\n    public int numTrees(int n) {\\n        \\n        int[] dp = new int[n + 1];\\n        dp[0] = 1;\\n        for(int i = 1; i <= n; i++) {\\n            for(int j = 1; j <= i; j++) {\\n                dp[i] += dp[j - 1] * dp[i - j];\\n            }\\n        }\\n        \\n        return dp[n];\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 433872,
                "title": "java-dp-with-memoization-easy-to-understand-beats-100",
                "content": "Think about an array [1, 2, 3, ... n]. If we choose k as the root, then \\n- Its left subtree can only contain numbers from 1 to k-1.\\n- Its right subtree can only contain numbers from k+1 to n.\\n- The total combination for unqiue binary trees with k being the root would be count_left * count_right.\\n- Each number in the array can either be picked as the root or not.\\n\\nUse memoization to store the number of unique trees we\\'ve computed.\\n```\\nclass Solution {\\n    public int numTrees(int n) {\\n        // memoization table\\n        Integer[] memo = new Integer[n + 1];\\n        // subtree is null or just one node\\n        memo[0] = 1;\\n        memo[1] = 1;\\n\\n        return numTrees(n, memo);\\n    }\\n\\n    private int numTrees(int n, Integer[] memo) {\\n        if (memo[n] != null) return memo[n];\\n\\n        // pick each node as the root node\\n        int count = 0;\\n        for (int i = 1; i <= n; i++) {\\n            // number of possibilities of left subtree\\n            int left = numTrees(i - 1, memo);\\n            int right = numTrees(n - i, memo);\\n            count += (left * right);\\n        }\\n\\n        memo[n] = count;\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Dynamic Programming",
                    "Memoization"
                ],
                "code": "```\\nclass Solution {\\n    public int numTrees(int n) {\\n        // memoization table\\n        Integer[] memo = new Integer[n + 1];\\n        // subtree is null or just one node\\n        memo[0] = 1;\\n        memo[1] = 1;\\n\\n        return numTrees(n, memo);\\n    }\\n\\n    private int numTrees(int n, Integer[] memo) {\\n        if (memo[n] != null) return memo[n];\\n\\n        // pick each node as the root node\\n        int count = 0;\\n        for (int i = 1; i <= n; i++) {\\n            // number of possibilities of left subtree\\n            int left = numTrees(i - 1, memo);\\n            int right = numTrees(n - i, memo);\\n            count += (left * right);\\n        }\\n\\n        memo[n] = count;\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 429967,
                "title": "simple-dp-solution-with-explanation",
                "content": "**\\u672C\\u9898\\u7684\\u6838\\u5FC3\\u601D\\u60F3\\u5728\\u4E8E\\u5982\\u4F55\\u6784\\u9020BST \\u8FDB\\u800C \\u63A8\\u65AD\\u51FA\\u6211\\u4EEC\\u7684\\u72B6\\u6001\\u65B9\\u7A0B\\n\\u5229\\u7528bst\\u7684\\u6027\\u8D28\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u91CD\\u590D\\u5229\\u7528smaller bst \\u6784\\u9020 bigger bst**\\n    \\ndynamic programming method\\nlet f(k) be the total num of unique bsts formed by 1 to k\\nwhat\\'s the relation bewteen f(n) & f(n-1)? \\n    \\neg.   \\nwhen n = 4\\nroot node can be 1,2,3,4\\nfor root = 1\\ncan only be f(3) cuz all rest numbers must be in its right sub trees\\nf(0) * f(3)\\nfor root = 2\\nleft subtree only has 1 and right subtree has 3,4\\nthat is f(1) * f(2)\\nfor root = 3\\nleft tree has node 1,2 and right subtree only has 4\\nthat is f(2) * f(1)\\nfor root = 4\\nno right sub tree and left subtree has 1,2,3\\nthat is f(3) * f(0) \\n\\nthrough this analysis we can have the following logic induction\\nfor root value = k and range n\\nnum of its bsts is f(k-1)f(n-k) \\nf(k) = sum of  f(k-1)f(n-k)  (k  is [1,n])\\nbase case : f(0) = 1; f(1) = 1;\\n\\t\\n    public int numTrees(int n) {    // time O(n ^ 2) space O(n)\\n        int[] f = new int[n+1];\\n        f[0] = 1; \\n        f[1] = 1;\\n        if(n <= 1) return 1; // corner case\\n        for(int r = 2; r<= n; r++){\\n            for(int k = 1; k <= r; k++){\\n                f[r] += f[k-1]*f[r-k];\\n            }\\n        }        \\n        return f[n];        \\n    }\\n",
                "solutionTags": [],
                "code": "**\\u672C\\u9898\\u7684\\u6838\\u5FC3\\u601D\\u60F3\\u5728\\u4E8E\\u5982\\u4F55\\u6784\\u9020BST \\u8FDB\\u800C \\u63A8\\u65AD\\u51FA\\u6211\\u4EEC\\u7684\\u72B6\\u6001\\u65B9\\u7A0B\\n\\u5229\\u7528bst\\u7684\\u6027\\u8D28\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u91CD\\u590D\\u5229\\u7528smaller bst \\u6784\\u9020 bigger bst**\\n    \\ndynamic programming method\\nlet f(k) be the total num of unique bsts formed by 1 to k\\nwhat\\'s the relation bewteen f(n) & f(n-1)? \\n    \\neg.   \\nwhen n = 4\\nroot node can be 1,2,3,4\\nfor root = 1\\ncan only be f(3) cuz all rest numbers must be in its right sub trees\\nf(0) * f(3)\\nfor root = 2\\nleft subtree only has 1 and right subtree has 3,4\\nthat is f(1) * f(2)\\nfor root = 3\\nleft tree has node 1,2 and right subtree only has 4\\nthat is f(2) * f(1)\\nfor root = 4\\nno right sub tree and left subtree has 1,2,3\\nthat is f(3) * f(0) \\n\\nthrough this analysis we can have the following logic induction\\nfor root value = k and range n\\nnum of its bsts is f(k-1)f(n-k) \\nf(k) = sum of  f(k-1)f(n-k)  (k  is [1,n])\\nbase case : f(0) = 1; f(1) = 1;\\n\\t\\n    public int numTrees(int n) {    // time O(n ^ 2) space O(n)\\n        int[] f = new int[n+1];\\n        f[0] = 1; \\n        f[1] = 1;\\n        if(n <= 1) return 1; // corner case\\n        for(int r = 2; r<= n; r++){\\n            for(int k = 1; k <= r; k++){\\n                f[r] += f[k-1]*f[r-k];\\n            }\\n        }        \\n        return f[n];        \\n    }\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 394282,
                "title": "c-recursion-w-memo-100",
                "content": "Idea:\\n\\teach time pick a number from 1 to n to be the root of current tree, and divide the whole tree into two subtrees and solve the question recursively. To avoid duplicate calculation, using a hashmap to record completed results.\\n```\\nclass Solution {\\nprivate:\\n    unordered_map<int, int> m{{0,1},{1,1}};\\npublic:\\n    int numTrees(int n) {\\n        if (m.count(n)) return m[n];\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++)\\n            sum += numTrees(i - 1) * numTrees(n - i);\\n        m[n] = sum;\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\nprivate:\\n    unordered_map<int, int> m{{0,1},{1,1}};\\npublic:\\n    int numTrees(int n) {\\n        if (m.count(n)) return m[n];\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++)\\n            sum += numTrees(i - 1) * numTrees(n - i);\\n        m[n] = sum;\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 178999,
                "title": "use-the-power-of-discrete-math-java-5-line-100-0ms-no-dp-needed",
                "content": "Discrete Mathematics by Richard Johnsonbaugh (7th edition)\\nPage 491\\nTheorem 9.8.12: \"There are Cn nonisomorphic binary trees with n vertices where Cn = C(2n, n)/(n+1) is the nth Catalan number.\"\\n\\n```\\npublic int numTrees(int n) {\\n\\t//formula is C(2n,n)/(n+1)\\n\\tdouble answer = 1;\\n\\tfor(double i = n+2; i<=2*n; i++) {\\n\\t\\tanswer*=i;\\n\\t\\tanswer/=i-n;\\n\\t}\\n\\treturn (int)Math.round(answer);\\n}\\n```\\nO(n) time\\nO(1) memory",
                "solutionTags": [],
                "code": "```\\npublic int numTrees(int n) {\\n\\t//formula is C(2n,n)/(n+1)\\n\\tdouble answer = 1;\\n\\tfor(double i = n+2; i<=2*n; i++) {\\n\\t\\tanswer*=i;\\n\\t\\tanswer/=i-n;\\n\\t}\\n\\treturn (int)Math.round(answer);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 31758,
                "title": "java-dp-solution",
                "content": "        \\n    public int numTrees(int n) {\\n        int[] dp = new int[n+1];\\n        dp[0] = 1;\\n        for (int i = 1; i <= n; i++) {\\n            for (int j = 0; j < i; j++) {\\n                dp[i] += dp[j] * dp[i-j-1];\\n            }\\n        }\\n        return dp[n];\\n    }",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "        \\n    public int numTrees(int n) {\\n        int[] dp = new int[n+1];\\n        dp[0] = 1;\\n        for (int i = 1; i <= n; i++) {\\n            for (int j = 0; j < i; j++) {\\n                dp[i] += dp[j] * dp[i-j-1];\\n            }\\n        }\\n        return dp[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31790,
                "title": "c-explained-44ms-dp-solution",
                "content": "    public int NumTrees(int n) {\\n        if(n <= 2){\\n            return n;\\n        }\\n        \\n        var arr = new int[n+1];\\n        \\n        arr[0] = 1; \\n        arr[1] = 1; \\n        \\n        for(int i = 2; i <= n; i++){\\n            for(int j=0; j<i ; j++){\\n                arr[i] += arr[i-j-1]* arr[j];\\n            }\\n        }\\n        \\n        return arr[n];\\n    }\\n\\nExplanation:\\nThey key is to find out that the maximum number in a BST is always the right most one : \\nLet NT be a tree made of N element\\nTo get an N+1 element trees from NT, I need to find out where can I insert element N+1 in NT\\n=> I can replace every element of the right most branch.\\n\\neg: if I have \\n\\n    1\\n      \\\\\\n        3\\n       /\\n     2\\n\\nI can insert 4 these ways : \\n\\n     position    0              1                   2                  3\\n\\n              4                   1                  1                    1\\n            /                      \\\\                 \\\\                     \\\\\\n          1                         4                 3                     3\\n            \\\\                      /                   \\\\                  /   \\\\\\n              3                 3                        4               2      4\\n             /                  /                       /\\n           2                 2                        2\\n\\n\\nThen we need to find the DP recurrence : \\nLet N(i) be the number of possible tree made of i element.\\nto get N(i+1) we to need to take every tree of N(i) and insert i+1 on every possible location on the rightmost branch.\\nwe can use the previous result to do so : \\n\\n - when i+1 is in position 0, there are N(i) * N(0) results : every tree\\n   made of 1 element below, and every tree made of 0 element above \\n - when i+1 is in position 1, there are N(i-1) * N(1) results : every tree\\n   made of i-1 element below, and every tree made of 1 element above\\n - when i+1 is in position 1, there are N(i-2) * N(2) results : every\\n   tree made of i-2 elements below, an every tree made of 2 elements\\n   above .\\n - etc\\n\\ntherefore we have \\n\\n       for(int i = 2; i <= n; i++){\\n           for(int j=0; j<i ; j++){\\n                arr[i] += arr[i-j-1]* arr[j];\\n            }\\n        }\\n\\nNow we just need to fill the initial cases : \\n\\n        arr[0] = 1; \\n        arr[1] = 1; \\n\\nSpace complexity : O(n)\\nTime Complexity : O(n^2)",
                "solutionTags": [],
                "code": "    public int NumTrees(int n) {\\n        if(n <= 2){\\n            return n;\\n        }\\n        \\n        var arr = new int[n+1];\\n        \\n        arr[0] = 1; \\n        arr[1] = 1; \\n        \\n        for(int i = 2; i <= n; i++){\\n            for(int j=0; j<i ; j++){\\n                arr[i] += arr[i-j-1]* arr[j];\\n            }\\n        }\\n        \\n        return arr[n];\\n    }\\n\\nExplanation:\\nThey key is to find out that the maximum number in a BST is always the right most one : \\nLet NT be a tree made of N element\\nTo get an N+1 element trees from NT, I need to find out where can I insert element N+1 in NT\\n=> I can replace every element of the right most branch.\\n\\neg: if I have \\n\\n    1\\n      \\\\\\n        3\\n       /\\n     2\\n\\nI can insert 4 these ways : \\n\\n     position    0              1                   2                  3\\n\\n              4                   1                  1                    1\\n            /                      \\\\                 \\\\                     \\\\\\n          1                         4                 3                     3\\n            \\\\                      /                   \\\\                  /   \\\\\\n              3                 3                        4               2      4\\n             /                  /                       /\\n           2                 2                        2\\n\\n\\nThen we need to find the DP recurrence : \\nLet N(i) be the number of possible tree made of i element.\\nto get N(i+1) we to need to take every tree of N(i) and insert i+1 on every possible location on the rightmost branch.\\nwe can use the previous result to do so : \\n\\n - when i+1 is in position 0, there are N(i) * N(0) results : every tree\\n   made of 1 element below, and every tree made of 0 element above \\n - when i+1 is in position 1, there are N(i-1) * N(1) results : every tree\\n   made of i-1 element below, and every tree made of 1 element above\\n - when i+1 is in position 1, there are N(i-2) * N(2) results : every\\n   tree made of i-2 elements below, an every tree made of 2 elements\\n   above .\\n - etc\\n\\ntherefore we have \\n\\n       for(int i = 2; i <= n; i++){\\n           for(int j=0; j<i ; j++){\\n                arr[i] += arr[i-j-1]* arr[j];\\n            }\\n        }\\n\\nNow we just need to fill the initial cases : \\n\\n        arr[0] = 1; \\n        arr[1] = 1; \\n\\nSpace complexity : O(n)\\nTime Complexity : O(n^2)",
                "codeTag": "Unknown"
            },
            {
                "id": 31807,
                "title": "ac-clean-java-dp-solution",
                "content": "    public int numTrees(int n) {\\n        // base case\\n        if (n == 0) return 0;\\n        \\n        // dp(i) represents the no. of unique BSTs till i\\n        // dp(0) = 1, means there's a null node\\n        int[] dp = new int[n + 1]; dp[0] = 1;\\n        \\n        for (int i = 1; i <= n; i++)\\n            // use j as root\\n            for (int j = 1; j <= i; j++)\\n                dp[i] += dp[j - 1] * dp[i - j];\\n        \\n        return dp[n];\\n    }",
                "solutionTags": [
                    "Java",
                    "Dynamic Programming"
                ],
                "code": "    public int numTrees(int n) {\\n        // base case\\n        if (n == 0) return 0;\\n        \\n        // dp(i) represents the no. of unique BSTs till i\\n        // dp(0) = 1, means there's a null node\\n        int[] dp = new int[n + 1]; dp[0] = 1;\\n        \\n        for (int i = 1; i <= n; i++)\\n            // use j as root\\n            for (int j = 1; j <= i; j++)\\n                dp[i] += dp[j - 1] * dp[i - j];\\n        \\n        return dp[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31817,
                "title": "non-recursive-c-solution-with-comments",
                "content": "    int numTrees(int n)\\n    {\\n      /*  if (n<=0) return 0; */\\n      int dp[n+1]; /* dp[i] meaning total # of BST tree with i consecutive nodes */\\n      memset(dp, 0, sizeof(int)*(n+1));\\n      dp[0] = 1; /* NULL is one tree */\\n    \\n      for(int i = 1; i<=n; i++)\\n         /* the idea is for 1....i,  each node can be the root and count the full combination of \\n             left sub BST and right sub BST*/\\n        for(int j = 0; j<i ; j++) \\n            dp[i]+= dp[j] * dp[i-j-1];\\n      \\n      return dp[n];\\n    }",
                "solutionTags": [
                    "Dynamic Programming",
                    "Binary Tree"
                ],
                "code": "    int numTrees(int n)\\n    {\\n      /*  if (n<=0) return 0; */\\n      int dp[n+1]; /* dp[i] meaning total # of BST tree with i consecutive nodes */\\n      memset(dp, 0, sizeof(int)*(n+1));\\n      dp[0] = 1; /* NULL is one tree */\\n    \\n      for(int i = 1; i<=n; i++)\\n         /* the idea is for 1....i,  each node can be the root and count the full combination of \\n             left sub BST and right sub BST*/\\n        for(int j = 0; j<i ; j++) \\n            dp[i]+= dp[j] * dp[i-j-1];\\n      \\n      return dp[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31813,
                "title": "0ms-easy-to-understand-solution-in-c",
                "content": "I used the formula discussed in: \\nhttp://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there\\n\\n    class Solution {\\n    public:\\n        int numTrees(int n) \\n        {\\n            if(n == 0)\\n                return 0;\\n                \\n            vector<int> nums(n + 1, 0);\\n            nums[0] = 1;\\n            \\n            for(int i = 1; i <= n; i++)\\n            {\\n                int num = 0;\\n                for(int k = 1; k <= i; k++)\\n                {\\n                    num += nums[k - 1] * nums[i - k];\\n                }\\n                \\n                nums[i] = num;\\n            }\\n            \\n            return nums.back();\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        int numTrees(int n) \\n        {\\n            if(n == 0)\\n                return 0;\\n                \\n            vector<int> nums(n + 1, 0);\\n            nums[0] = 1;\\n            \\n            for(int i = 1; i <= n; i++)\\n            {\\n                int num = 0;\\n                for(int k = 1; k <= i; k++)\\n                {\\n                    num += nums[k - 1] * nums[i - k];\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 31837,
                "title": "o-n2-java-solution",
                "content": "    public int numTrees(int n) {\\n        int ret[] = new int[n + 1];\\n\\t\\n\\t\\tfor (int i = 0; i <= n; i ++) {\\n\\t\\t\\tret[i] = 0;\\n\\t\\t}\\n\\t\\tret[0] = 1;\\n\\t\\tfor (int i = 1; i < n + 1; i ++) {\\n\\t\\t\\tfor (int j = 1; j <= i; j ++) {\\n\\t\\t\\t\\tret[i] += ret[j - 1] * ret[i - j];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn ret[n];\\n    }",
                "solutionTags": [],
                "code": "    public int numTrees(int n) {\\n        int ret[] = new int[n + 1];\\n\\t\\n\\t\\tfor (int i = 0; i <= n; i ++) {\\n\\t\\t\\tret[i] = 0;\\n\\t\\t}\\n\\t\\tret[0] = 1;\\n\\t\\tfor (int i = 1; i < n + 1; i ++) {\\n\\t\\t\\tfor (int j = 1; j <= i; j ++) {\\n\\t\\t\\t\\tret[i] += ret[j - 1] * ret[i - j];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn ret[n];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 31854,
                "title": "python-dp-solution",
                "content": "    class Solution:\\n        # @return an integer]\\n        # 1:05\\n        def numTrees(self, n):\\n            count = [0] * (n + 1)\\n            count[0] = 1\\n    \\n            for i in range(1, n + 1):\\n                for j in range(0, i):\\n                    count[i] += count[j] * count[i - j - 1]\\n    \\n            return count[n]",
                "solutionTags": [
                    "Python"
                ],
                "code": "    class Solution:\\n        # @return an integer]\\n        # 1:05\\n        def numTrees(self, n):\\n            count = [0] * (n + 1)\\n            count[0] = 1\\n    \\n            for i in range(1, n + 1):\\n                for j in range(0, i):\\n                    count[i] += count[j] * count[i - j - 1]\\n    \\n            return count[n]",
                "codeTag": "Java"
            },
            {
                "id": 31867,
                "title": "10-line-java-solution-explanation-given",
                "content": "The main point of the problem is to **recognize how to build up the solution to the bigger problem( n ) using the\\nsolution to smaller problems( 0 , 1, .... n - 1 )**\\nThe best way to understand would be **draw out the possible combination for cases when n = 0, 1, 2, 3 and 4**\\nYou should be able to see how to build the answer for higher values once you know the result for lower values of n. I got this relation... let's say that t(n) be the number of trees, then \\nt(n) = *Summation over i from 0 to n - 1 of* ( t ( i ) * t ( n - 1 - i ) )\\n\\n    public class Solution {\\n        public int numTrees(int n) {\\n            int[] a = new int[n+1];\\n            a[0] = a[1] = 1;\\n            for(int i = 2; i <= n; i++)\\n                for(int j = 0; j < i; j++)  \\n                    a[i] += a[j]*a[i - 1 - j];\\n            return a[n];\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public int numTrees(int n) {\\n            int[] a = new int[n+1];\\n            a[0] = a[1] = 1;\\n            for(int i = 2; i <= n; i++)\\n                for(int j = 0; j < i; j++)  \\n                    a[i] += a[j]*a[i - 1 - j];\\n            return a[n];\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 31871,
                "title": "dfs-memory-search-4ms",
                "content": "Algo: dfs + memory search\\n\\nThe following code is for your reference. But there are still a lot of improvement we can do. Like, integer overflow, private data member, ...\\nHow many ones can you find out? :)\\n\\n    class Solution {\\n    public:\\n        int numTrees(int n) {\\n    \\t\\tif (n <= 1)\\n    \\t\\t\\treturn 1;\\n    \\t\\tif (dic.find(n) != dic.end())\\n    \\t\\t\\treturn dic[n];\\n    \\t\\tint ans = 0;\\n    \\t\\tfor (int i = 0; i < n; ++i) {\\n    \\t\\t\\tint left = i;\\n    \\t\\t\\tint right = n - i - 1;\\n    \\t\\t\\tans += numTrees(left) * numTrees(right);\\n    \\t\\t}\\n    \\t\\treturn dic[n] = ans;\\n        }\\n    \\tunordered_map<int, int> dic;\\n    };",
                "solutionTags": [
                    "Recursion"
                ],
                "code": "class Solution {\\n    public:\\n        int numTrees(int n) {\\n    \\t\\tif (n <= 1)\\n    \\t\\t\\treturn 1;\\n    \\t\\tif (dic.find(n) != dic.end())\\n    \\t\\t\\treturn dic[n];\\n    \\t\\tint ans = 0;\\n    \\t\\tfor (int i = 0; i < n; ++i) {\\n    \\t\\t\\tint left = i;\\n    \\t\\t\\tint right = n - i - 1;\\n    \\t\\t\\tans += numTrees(left) * numTrees(right);\\n    \\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3794929,
                "title": "solution-using-dp",
                "content": "# Homework for you\\nSolve using catalan number and comment the code \\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nThe main function numTrees(n) takes an integer n as input and returns the total number of unique binary search trees that can be formed with n nodes.\\n\\nThe helper function solve(n) takes an integer n (representing the number of nodes to form a binary search tree) and returns the number of unique binary search trees that can be formed with n nodes.\\n\\nIn the helper function solve, it initializes a vector dp of size n + 1 with all elements set to 0. The vector dp will be used to store the number of unique binary search trees for i nodes.\\n\\nInitialize dp[0] and dp[1] to 1 since there is only one way to form binary search trees with 0 and 1 nodes (empty tree and single-node tree).\\n\\nIterate from i = 2 up to n. For each i, calculate the number of unique binary search trees using the Catalan number formula: dp[i] = dp[0] * dp[i - 1] + dp[1] * dp[i - 2] + ... + dp[i - 1] * dp[0]. This calculation is done by considering each element j as the root and multiplying the number of unique binary search trees for the left subtree (with j - 1 nodes) and the right subtree (with i - j nodes).\\n\\nReturn dp[n], which represents the total number of unique binary search trees with n nodes.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:0(n*n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:0(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\nint solve(int n)\\n{\\n    vector<int>dp(n+1,0);    \\n    dp[0]=dp[1]=1;\\n    for(int i=2;i<=n;i++)\\n    {\\n        for(int j= 1;j<=i;j++)\\n        {\\n            dp[i]+= dp[j-1]*dp[i-j];\\n        }\\n    }\\n        return dp[n];\\n}\\n    int numTrees(int n) {\\n    return solve(n); \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming",
                    "Binary Search Tree"
                ],
                "code": "```\\nclass Solution {\\npublic:\\nint solve(int n)\\n{\\n    vector<int>dp(n+1,0);    \\n    dp[0]=dp[1]=1;\\n    for(int i=2;i<=n;i++)\\n    {\\n        for(int j= 1;j<=i;j++)\\n        {\\n            dp[i]+= dp[j-1]*dp[i-j];\\n        }\\n    }\\n        return dp[n];\\n}\\n    int numTrees(int n) {\\n    return solve(n); \\n    }\\n};\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1568543,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1565075,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1565512,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1564998,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1565252,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1708614,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1568195,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1567856,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1570808,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1570205,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1568543,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1565075,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1565512,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1564998,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1565252,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1708614,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1568195,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1567856,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1570808,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1570205,
                "content": [
                    {
                        "username": "aives",
                        "content": "This is just a helpful hint to think about the problem, it does not give away the solution, but might help guide someone who is looking for it in the right direction.\\n\\nSuppose I want to know how many distinct BST there are with `n` nodes from `0` to `n-1`.\\n\\nIf my BST has `n-1` at the head, how many nodes will be on the left side? How many nodes will be on\\nthe right side?\\n\\nIf my BST has `n-2` at the head, how many nodes will be on the left side? How many nodes will be on \\nthe right side?"
                    },
                    {
                        "username": "poundppx",
                        "content": "this is so binary!"
                    },
                    {
                        "username": "n_209",
                        "content": "\\uD83D\\uDC4D\\uD83C\\uDFFB"
                    },
                    {
                        "username": "Prajju22",
                        "content": "you dropped this crown.... you are king "
                    },
                    {
                        "username": "blazeVortex",
                        "content": "This hint helped me solve this question without looking up the solution.. Thanks!!"
                    },
                    {
                        "username": "robertointerview",
                        "content": "nice hint!!"
                    },
                    {
                        "username": "bumate90",
                        "content": "King!"
                    },
                    {
                        "username": "bengol",
                        "content": "[http://en.wikipedia.org/wiki/Catalan_number][1]\\n\\n![enter image description here][2]\\n\\n\\n  [1]: http://en.wikipedia.org/wiki/Catalan_number\\n  [2]: http://i.imgur.com/hVkEdbp.png"
                    },
                    {
                        "username": "AlecLC",
                        "content": "Bout to whip this out during an interview can\\'t wait to see their face \\uD83D\\uDE06\\n![x](https://assets.leetcode.com/users/images/04095cb9-f81e-4df1-a580-e7c4c05284fe_1675746700.6865969.png)"
                    },
                    {
                        "username": "ytliang97",
                        "content": "great video [10 Questions, 1 concept - Catalan Numbers Applications | Dynamic Programming!](https://www.youtube.com/watch?v=0pTN0qzpt-Y)"
                    },
                    {
                        "username": "johnny411",
                        "content": "Because we have to combine left subtree & right subtrees together.\\nTake `G(5)` \\'s `F(3,5)` as example (I\\'ll skip F(1,5), F(2,5), F(4,5), F(5,5))\\nHope this visualization helps.\\n\\n![image](https://assets.leetcode.com/users/images/173eb88a-2756-4770-8358-ee775d0061af_1629901999.2974467.png)\\n\\n"
                    },
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Day 8.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/unique-binary-search-trees/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Dynamic Programming\n\n  \n**Approach 2:** Mathematical Deduction\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "nithanaroy",
                        "content": "https://www.quora.com/Given-n-how-many-structurally-unique-BSTs-binary-search-trees-that-store-values-1-to-n-are-there"
                    },
                    {
                        "username": "erickaky",
                        "content": "If someone has already checked the solution, but still wonders **why there are TWO FOR loops**, while the formula only suggests ONE (at first glance)\\n\\n$$\\\\mathrm{G(n)} = \\\\sum_{i=1}^n G(i - 1) * G(n - i) $$\\n\\nHere is my attempt to explain.\\n\\nImagine we want to find G(3), it can be expressed as:\\n$$\\\\mathrm{G(3)} = G(0) * G(2) + G(1) * G(1) + G(2) * G(0) $$\\n\\nNow we don\\'t know what is G(2), but we can calculate it like this:\\n$$\\\\mathrm{G(2)} = G(0) * G(1) + G(1) * G(0) $$\\n\\nWe can clealy see that to calculate G(3), we need to know all previous G(2), G(1), and etc.\\n\\nThat\\'s why it actually makes sense to start calculating from smaller number. eg: G(2), G(3), G(4) ..\\n\\nWe don\\'t need to calculate G(0) and G(1) they are both 1.\\n1 node tree is 1 combination\\n0 node (empty tree) is 1 combination\\n\\nSo, now back to the original question.\\n\\n```\\npublic class Solution {\\n  public int numTrees(int n) {\\n    int[] G = new int[n + 1];\\n    G[0] = 1;\\n    G[1] = 1;\\n\\n    for (int i = 2; i <= n; ++i) {\\n      for (int j = 1; j <= i; ++j) {\\n        G[i] += G[j - 1] * G[i - j];\\n      }\\n    }\\n    return G[n];\\n  }\\n}\\n```\\n\\nSo, we have 2 loops because to find `G(n)`, we first need to find all previous G(n-1), G(n-2) ... G(2).\\nSo, we essentially first compute G(2) then G(3), G(4) and etc till G(n)\\n\\nThe outer loop `for (int i = 2; i <= n; ++i) {` is where we point which `G` we want to compute, so we start with G(2), then G(3) ... G(n)\\n\\nThe inner loop `for (int j = 1; j <= i; ++j) {` is actually the place where we compute the pointed G[i] using the formula:\\n$$\\\\mathrm{G(i)} = \\\\sum_{j=1}^n G(j - 1) * G(i - j) $$\\n\\nIn other words, due to recursive nature of the formula we have 2 for loops.\\n\\nIt took me a while to realise that.\\nHope it will help someone else!\\n\\n"
                    },
                    {
                        "username": "erickaky",
                        "content": "[@ucancallmex](/ucancallmex) happy to help :)"
                    },
                    {
                        "username": "ucancallmex",
                        "content": "You explained exactly what I am wondering. Thank you."
                    },
                    {
                        "username": "huiqing18",
                        "content": "http://www.cs.cmu.edu/afs/cs/academic/class/15750-s17/ScribeNotes/lecture7.pdf\\nIt is the clearest and detailed with proof steps for the unique binary search tree problems.\\nThere are a lot of great codes in the discussion. So I just share the lecture. It is great!"
                    },
                    {
                        "username": "ben",
                        "content": "i simulate a BST generation, and got TLE."
                    },
                    {
                        "username": "aumo",
                        "content": "memo"
                    },
                    {
                        "username": "oka96",
                        "content": "The tricky part of this question is how to break the problem into subproblem without any duplicate combination.\\n\\nLet\\'s say we have N nodes to form the BST.\\nWe easily to know \\nbst[0] = 1;\\nbst[1] = 1;\\n\\nTo break into subproblem, we can remove the ``root`` node of the BST.\\nThen the single bst will break into two separate bst (left and right bst).\\n\\nThe total nodes to form left and right bst will be (N-1) nodes.\\nIf left bst have 0 node, then right bst will have (N-1)-0 nodes.\\nIf left bst have 1 node, then right bst will have (N-1)-1 nodes.\\n\\nWe can notice that left bst and right bst are separate, so if bst[N] with left bst have 0 node, then the number of way to form will be bst[0] multiply bst[N-1-0]\\n\\nThe sum up of the possible numbers of nodes for left bst.\\nbst[N] = bst[0]*bst[N-1] + bst[1]*bst[N-2] + ... + bst[N-1]*bst[0];\\n\\nTo understand more about this, you can search about Catalan number too.\\n"
                    },
                    {
                        "username": "impwork8053",
                        "content": "ain\\'t getting run code and submit button idk what\\'s the problem.\\ncan anyone help me with this?"
                    }
                ]
            },
            {
                "id": 1736630,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 2000986,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 1986285,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 1641997,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 1575151,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 1572038,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 1575940,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 2001281,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 2001159,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            },
            {
                "id": 1991903,
                "content": [
                    {
                        "username": "rahulseith",
                        "content": "what is the meaning of structurally unique BST ?  "
                    },
                    {
                        "username": "sunny8080",
                        "content": "Came here after today\\'s Daily LeetCode Challenges "
                    },
                    {
                        "username": "speye_21",
                        "content": "I think the solution is wrong.  It claims there are 14 possible unique BSTs for n=4.  But if you draw a perfect tree of height 4 and trace all possible paths of 4 nodes, there are only 12 possibilities:  8 paths from the root to all the leaves, plus 4 subtree paths from the root to the h-1 nodes (with 1 node spilling over to the opposite side of the root).  There are no paths at higher subtrees because they contain less than 4 nodes, or will repeat paths we have already traced.  So where are the other 2 paths the expected solution claims exist?"
                    },
                    {
                        "username": "coding_menance",
                        "content": "in the dynamic programming solutions, why do we define the vector [where we store the already calculated numbers] outside of the function? What is the difference when we initialize it within the function? Some of the test cases\\' time were exceeding when I initialized vector within the function while it was extremely efficient if done outside.\\n"
                    },
                    {
                        "username": "anto777",
                        "content": "You can view the solution here. This is my blog. If you find the content useful kindly upvote :)\\nYou can find the detailed explanation of the code in the link below :\\nhttps://cpexplanations.blogspot.com/2021/04/96-unique-binary-search-trees.html"
                    },
                    {
                        "username": "srini_lee",
                        "content": "How did we derive that the solution is the Catalan Number sequence?"
                    },
                    {
                        "username": "kushidhar_ch",
                        "content": "The following pattren is similar to catalan series \\n![image](https://assets.leetcode.com/users/images/17ddb341-6836-4251-8762-63ce2b6682a6_1636350253.4083447.jpeg)\\n\\n<hr>\\n<h1>CODE</h1>\\n\\n![image](https://assets.leetcode.com/users/images/2d90369e-1a1b-431c-99bb-de6312ec4309_1636350273.8615704.png)\\n"
                    },
                    {
                        "username": "trashw1n",
                        "content": "baffling how catalan numbers are behind some seemingly different problems involving dyck paths, binary trees, balanced parantheses, etc."
                    },
                    {
                        "username": "Jeya_Mathesh_Ganesh",
                        "content": "This is similar to different binary trees possible with n nodes."
                    },
                    {
                        "username": "mishra_shashank",
                        "content": "For those who does not need any solution and just need some direction in this question they can refer to any article related to catalan number.I am providing wikipedia link for the same --> https://en.wikipedia.org/wiki/Catalan_number#:~:text=In%20combinatorial%20mathematics%2C%20the%20Catalan,Belgian%20mathematician%20Eug%C3%A8ne%20Charles%20Catalan."
                    }
                ]
            }
        ]
    },
    {
        "title": "Delete Duplicate Emails",
        "question_content": "<p>Table: <code>Person</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| email       | varchar |\n+-------------+---------+\nid is the primary key (column with unique values) for this table.\nEach row of this table contains an email. The emails will not contain uppercase letters.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write a solution to<strong> delete</strong> all duplicate emails, keeping only one unique email with the smallest <code>id</code>.</p>\n\n<p>For SQL users, please note that you are supposed to write a <code>DELETE</code> statement and not a <code>SELECT</code> one.</p>\n\n<p>For Pandas users, please note that you are supposed to modify <code>Person</code> in place.</p>\n\n<p>After running your script, the answer shown is the <code>Person</code> table. The driver will first compile and run your piece of code and then show the <code>Person</code> table. The final order of the <code>Person</code> table <strong>does not matter</strong>.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nPerson table:\n+----+------------------+\n| id | email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n| 3  | john@example.com |\n+----+------------------+\n<strong>Output:</strong> \n+----+------------------+\n| id | email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n+----+------------------+\n<strong>Explanation:</strong> john@example.com is repeated two times. We keep the row with the smallest Id = 1.\n</pre>\n",
        "solutions": [
            {
                "id": 55553,
                "title": "simple-solution",
                "content": "> DELETE p1  \\nFROM Person p1, Person p2  \\nWHERE p1.Email = p2.Email AND\\n>               p1.Id > p2.Id\\n\\nEXPLANATION:\\n\\n - Take the table in the example\\n \\n**Id | Email**\\n\\n**1 | john@example.com** \\n\\n**2 | bob@example.com** \\n\\n**3 | john@example.com**\\n\\n - Join the table on itself by the Email and you'll get:\\n\\n> FROM Person p1, Person p2  WHERE p1.Email = p2.Email\\n\\n**p1.Id  | p1.Email | p2.Id | p2.Email**\\n\\n**1\\t| john@example.com\\t| 1\\t| john@example.com**\\n\\n**3\\t| john@example.com      | 1\\t| john@example.com**\\n\\n**2\\t| bob@example.com\\t| 2\\t| bob@example.com**\\n\\n**1\\t| john@example.com\\t| 3\\t| john@example.com**\\n\\n**3\\t| john@example.com\\t| 3\\t| john@example.com**\\n\\n - From this results filter the records that have p1.Id>p2.ID, in this case you'll get just one record:\\n\\n> AND           p1.Id > p2.Id\\n\\n**p1.Id  | p1.Email | p2.Id | p2.Email**\\n\\n**3\\t| john@example.com\\t| 1\\t| john@example.com**\\n\\n - This is the record we need to delete, and by saying\\n\\n> DELETE p1\\n\\nin this multiple-table syntax, only matching rows from the tables listed before the FROM clause are deleted, in this case just\\n\\n**p1.Id  | p1.Email**\\n\\n**3\\t| john@example.com**\\n\\nwill be deleted",
                "solutionTags": [],
                "code": "> DELETE p1  \\nFROM Person p1, Person p2  \\nWHERE p1.Email = p2.Email AND\\n>               p1.Id > p2.Id\\n\\nEXPLANATION:\\n\\n - Take the table in the example\\n \\n**Id | Email**\\n\\n**1 | john@example.com** \\n\\n**2 | bob@example.com** \\n\\n**3 | john@example.com**\\n\\n - Join the table on itself by the Email and you'll get:\\n\\n> FROM Person p1, Person p2  WHERE p1.Email = p2.Email\\n\\n**p1.Id  | p1.Email | p2.Id | p2.Email**\\n\\n**1\\t| john@example.com\\t| 1\\t| john@example.com**\\n\\n**3\\t| john@example.com      | 1\\t| john@example.com**\\n\\n**2\\t| bob@example.com\\t| 2\\t| bob@example.com**\\n\\n**1\\t| john@example.com\\t| 3\\t| john@example.com**\\n\\n**3\\t| john@example.com\\t| 3\\t| john@example.com**\\n\\n - From this results filter the records that have p1.Id>p2.ID, in this case you'll get just one record:\\n\\n> AND           p1.Id > p2.Id\\n\\n**p1.Id  | p1.Email | p2.Id | p2.Email**\\n\\n**3\\t| john@example.com\\t| 1\\t| john@example.com**\\n\\n - This is the record we need to delete, and by saying\\n\\n> DELETE p1\\n\\nin this multiple-table syntax, only matching rows from the tables listed before the FROM clause are deleted, in this case just\\n\\n**p1.Id  | p1.Email**\\n\\n**3\\t| john@example.com**\\n\\nwill be deleted",
                "codeTag": "Unknown"
            },
            {
                "id": 2627589,
                "title": "my-sql-solution",
                "content": "***Using Cartesian Product***\\n```\\ndelete p1 from person p1,person p2 \\nwhere p1.email=p2.email and p1.id>p2.id;\\n```\\n\\n***Explanation:***\\n```\\nInput: \\nPerson table:\\n+----+------------------+\\n| id | email            |\\n+----+------------------+\\n| 1  | john@example.com |\\n| 2  | bob@example.com  |\\n| 3  | john@example.com |\\n+----+------------------+\\n\\n=> From Person p1, Person p2 : it would look like:\\n1|john@example.com|1|john@example.com\\n1|john@example.com|2|bob@example.com \\n1|john@example.com|3|john@example.com\\n\\n2|bob@example.com|1|john@example.com\\n2|bob@example.com|2|bob@example.com\\n2|bob@example.com|3|john@example.com\\n\\n3|john@example.com|1|john@example.com\\n3|john@example.com|2|bob@example.com\\n3|john@example.com|3|john@example.com\\n\\n=> From Person p1, Person p2 where p1.email=p2.email and p1.id>p2.id:\\nIt would look like:\\n3|john@example.com|1|john@example.com\\n\\nNow delete this row\\'s matching row in p1 using p1:  delete p1\\n```\\n***PLEASE UPVOTE IF YOU FIND IT A LITTLE BIT HELFPFUL, MEANS A LOT ;)***",
                "solutionTags": [
                    "MySQL",
                    "Oracle"
                ],
                "code": "```\\ndelete p1 from person p1,person p2 \\nwhere p1.email=p2.email and p1.id>p2.id;\\n```\n```\\nInput: \\nPerson table:\\n+----+------------------+\\n| id | email            |\\n+----+------------------+\\n| 1  | john@example.com |\\n| 2  | bob@example.com  |\\n| 3  | john@example.com |\\n+----+------------------+\\n\\n=> From Person p1, Person p2 : it would look like:\\n1|john@example.com|1|john@example.com\\n1|john@example.com|2|bob@example.com \\n1|john@example.com|3|john@example.com\\n\\n2|bob@example.com|1|john@example.com\\n2|bob@example.com|2|bob@example.com\\n2|bob@example.com|3|john@example.com\\n\\n3|john@example.com|1|john@example.com\\n3|john@example.com|2|bob@example.com\\n3|john@example.com|3|john@example.com\\n\\n=> From Person p1, Person p2 where p1.email=p2.email and p1.id>p2.id:\\nIt would look like:\\n3|john@example.com|1|john@example.com\\n\\nNow delete this row\\'s matching row in p1 using p1:  delete p1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 55614,
                "title": "a-skillful-mysql-solution-avoid-select-and-update-conflict",
                "content": "**where we try this clause :**\\n\\n    delete from Person where id not in(select min(id) as id from Person group by email)\\n\\nyou will be noted \" **You can't specify target table 'Person' for update in FROM clause** \",\\nThe solution is using a middle table with select clause:\\n\\n    delete from Person where id not in( \\n        select t.id from (\\n            select min(id) as id from Person group by email\\n        ) t\\n    )",
                "solutionTags": [],
                "code": "**where we try this clause :**\\n\\n    delete from Person where id not in(select min(id) as id from Person group by email)\\n\\nyou will be noted \" **You can't specify target table 'Person' for update in FROM clause** \",\\nThe solution is using a middle table with select clause:\\n\\n    delete from Person where id not in( \\n        select t.id from (\\n            select min(id) as id from Person group by email\\n        ) t\\n    )",
                "codeTag": "Unknown"
            },
            {
                "id": 3142892,
                "title": "explanation-of-official-solution",
                "content": "```\\nDELETE p1 FROM Person p1,\\n    Person p2\\nWHERE\\n    p1.Email = p2.Email AND p1.Id > p2.Id\\n```\\n\\nThis SQL-environment doesn\\'t show in-between results. It shows only currect state of P1.\\n\\n`FROM Person p1,\\n    Person p2`\\n\\nHere we take the whole table P1 and then CROSS JOIN P2. It is like for each row in P1 we take each row in P2. The result should be:\\n\\n| id | email            | what happens during CROSS JOIN\\n| -- | ---------------- |-------------------------------\\n| 1  | john@example.com |         P1.1 & P2.1\\n| 2  | bob@example.com  |         P1.2 & P2.1\\n| 3  | john@example.com |         P1.3 & P2.1\\n| 1  | john@example.com |         P1.1 & P2.2\\n| 2  | bob@example.com  |         P1.2 & P2.2\\n| 3  | john@example.com |         P1.3 & P2.2\\n| 1  | john@example.com |         P1.1 & P2.3\\n| 2  | bob@example.com  |         P1.2 & P2.3\\n| 3  | john@example.com |         P1.3 & P2.3\\n\\nWhen we apply the condition `WHERE p1.Email = p2.Email`, our table will consist only of rows where in P1 and P2 are the same emails (1&1, 2&2, 3&3, 1&3, 3&1):\\n\\n| id | email            |         chosen rows     \\n| -- | ---------------- |--------------------\\n| 1  | john@example.com |         P1.1 & P2.1\\n| 3  | john@example.com |         P1.3 & P2.1\\n| 2  | bob@example.com  |         P1.2 & P2.2\\n| 1  | john@example.com |         P1.1 & P2.3\\n| 3  | john@example.com |         P1.3 & P2.3\\n\\nThe next step: `WHERE\\n    p1.Email = p2.Email AND p1.Id > p2.Id` leaves only rows where id in P1 greater then id in P2 (3&1):\\n\\n| id | email            |chosen rows                  \\n| -- | ---------------- |----------------------\\n| 3  | john@example.com |         P1.3 & P2.1\\n\\nAnd then we delete this row(s) from p1 table and get the answer (yes, that would work with several identical emails):\\n\\n| id | email            |                  \\n| -- | ---------------- |\\n| 1  | john@example.com |\\n| 2  | bob@example.com  |\\n\\nBTW, I think it is no way EASY problem.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE p1 FROM Person p1,\\n    Person p2\\nWHERE\\n    p1.Email = p2.Email AND p1.Id > p2.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2636855,
                "title": "delete-duplicate-emails-one-liner",
                "content": "\\tdelete A from Person A, Person B where A.id > B.id and A.email=B.email;\\n\\nhere A represent the email you want to delete and A.id > B.id means the id with the greater count should be deleted and A.email=B.email means if both the email is same.\\n\\nUpvote if u find the explanation easy!\\uD83D\\uDE04",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "\\tdelete A from Person A, Person B where A.id > B.id and A.email=B.email;\\n\\nhere A represent the email you want to delete and A.id > B.id means the id with the greater count should be deleted and A.email=B.email means if both the email is same.\\n\\nUpvote if u find the explanation easy!\\uD83D\\uDE04",
                "codeTag": "Unknown"
            },
            {
                "id": 3863077,
                "title": "pandas-2-liner-very-simple-approach",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe approach is very simple we just need to: \\n1. sort the rows based on the id column since while removing the duplicates we need to keep the lowest id one.\\n2. Now we can simply delete the duplicates using the drop_duplicates method.\\n\\n# Code\\n```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    # Sort the rows based on id (Ascending order)\\n    person.sort_values(by=\\'id\\',ascending=True,inplace=True)\\n    # Drop the duplicates based on email.\\n    person.drop_duplicates(subset=\\'email\\', keep=\\'first\\', inplace=True)\\n\\n```\\n![upvote img.jpg](https://assets.leetcode.com/users/images/0f1dbc79-d670-4656-80b4-79b78f9a597c_1691157702.2521527.jpeg)\\n",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    # Sort the rows based on id (Ascending order)\\n    person.sort_values(by=\\'id\\',ascending=True,inplace=True)\\n    # Drop the duplicates based on email.\\n    person.drop_duplicates(subset=\\'email\\', keep=\\'first\\', inplace=True)\\n\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 719983,
                "title": "simple-solution-with-delete",
                "content": "Delete like Select evaluates for every record.\\nWhen we say Delete P1 we are deleting each record satifying our where condition not the entire table if you got confused with the nomeclature.\\nA property of  a duplicate record is having same value but different id\\'s/\\nWe take two copies of the table and conpare each record in one table with the other and check if they have same email but different ids. \\nWe then delete if the repeated records with greater ID values.\\n```\\nDELETE P1\\nFROM PERSON P1, PERSON P2\\nWHERE P1.EMAIL=P2.EMAIL AND P1.ID>P2.ID;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE P1\\nFROM PERSON P1, PERSON P2\\nWHERE P1.EMAIL=P2.EMAIL AND P1.ID>P2.ID;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2099682,
                "title": "sql-3-easy-sols-well-explained-join-min-group",
                "content": "**Approach 1:**\\nLet\\'s say if we self join the table and say join result is table `rst`, then we would like to delete those rows from `Person`  for which  `p1.email = p2.email` && `p1.id > p2.id` in the rows of `rst`.\\n\\n```\\nDELETE\\nFROM Person \\nWHERE (\\n    id IN (\\n        SELECT *\\n        FROM (\\n            SELECT p1.id\\n            FROM Person p1, Person p2\\n            WHERE p1.email = p2.email AND p1.id >p2.id\\n        ) AS rst\\n    )\\n)\\n```\\n\\n**Approach 2:**\\nKind of better way of above approach\\n```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE (\\n    p1.email = p2.email AND p1.id > p2.id\\n)\\n```\\n\\n**Approach 3:**\\nOther way could be like, \\nLet\\'s say if we just need to select those rows which we want to show.... means unique emails with minimum ids, this could be done with below query\\n```\\nSELECT min(id)\\nFROM Person\\nGROUP BY email\\n```\\n\\nNow store the result of above query in temporary table (*say `rst`*) and just delete all the ids which are not present in above table\\n\\t\\t\\t\\n```\\nDELETE\\nFROM Person \\nWHERE (\\n    id NOT IN (\\n        SELECT *\\n        FROM (\\n            SELECT min(id)\\n            FROM Person\\n            GROUP BY email\\n        ) AS rst\\n    )\\n)\\n```\\n\\nPlease ***upVote***, if you like the explanation and sols :)\\nCheckout ***blazeyp***, just in case you want to explore my sols and explanation and ofc if I had done the question too XD.\\n\\nHAPPY CODING ;) !!\\n\\nhttps://www.youtube.com/channel/UCczVNrgFTTo0fH3TK915eyQ\\nTrying to help the community with my channel for easy placement preps and insights of corporate world for freshers.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE\\nFROM Person \\nWHERE (\\n    id IN (\\n        SELECT *\\n        FROM (\\n            SELECT p1.id\\n            FROM Person p1, Person p2\\n            WHERE p1.email = p2.email AND p1.id >p2.id\\n        ) AS rst\\n    )\\n)\\n```\n```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE (\\n    p1.email = p2.email AND p1.id > p2.id\\n)\\n```\n```\\nSELECT min(id)\\nFROM Person\\nGROUP BY email\\n```\n```\\nDELETE\\nFROM Person \\nWHERE (\\n    id NOT IN (\\n        SELECT *\\n        FROM (\\n            SELECT min(id)\\n            FROM Person\\n            GROUP BY email\\n        ) AS rst\\n    )\\n)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2504878,
                "title": "how-to-approach-this-question-easy-explanation",
                "content": "# IF YOU LIKE THIS POST , DO UPVOTE , SO THAT OTHER FIND IT HELPFUL...... \\n\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n\\n-- You have to deleted duplicates emails, by keeping unique emails with smallest id . \\n-- 1)  So , it is clear that we have to use \\' DELETE \\' command \\n-- Syntax for delete command is \\n-- \" delete from tablename where condition\"\\n-- and condition for deletion is duplicate emails and greater id \\n\\n\\n-- 2) We have to one email to other emails of the same table \\n-- from here we are able to figure out that we have to use join concept\\n\\n# Note: \\n# A DELETE statement can include JOIN operations.\\n# It can contain zero, one, or multiple JOIN operations.\\n# The DELETE removes records that satisfy the JOIN conditions.\\n\\n#-------------------------------------------------------------------------------\\n# DELETE tablename1\\n#   FROM tablename1 \\n#   JOIN tablename2 ON columnName3 = columnName4\\n#  WHERE condition\\n\\n# --------------------------------------------------------------------------------\\n\\n\\ndelete p1 from Person p1\\njoin Person p2\\nwhere p1.email = p2.email and p1.id > p2.id;\\n\\n```\\n# IF YOU LIKE THIS POST , DO UPVOTE , SO THAT OTHER FIND IT HELPFUL...... \\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n\\n-- You have to deleted duplicates emails, by keeping unique emails with smallest id . \\n-- 1)  So , it is clear that we have to use \\' DELETE \\' command \\n-- Syntax for delete command is \\n-- \" delete from tablename where condition\"\\n-- and condition for deletion is duplicate emails and greater id \\n\\n\\n-- 2) We have to one email to other emails of the same table \\n-- from here we are able to figure out that we have to use join concept\\n\\n# Note: \\n# A DELETE statement can include JOIN operations.\\n# It can contain zero, one, or multiple JOIN operations.\\n# The DELETE removes records that satisfy the JOIN conditions.\\n\\n#-------------------------------------------------------------------------------\\n# DELETE tablename1\\n#   FROM tablename1 \\n#   JOIN tablename2 ON columnName3 = columnName4\\n#  WHERE condition\\n\\n# --------------------------------------------------------------------------------\\n\\n\\ndelete p1 from Person p1\\njoin Person p2\\nwhere p1.email = p2.email and p1.id > p2.id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 55555,
                "title": "i-can-t-believe-i-get-it-wrong-what-s-wrong-with-my-code",
                "content": "select email,min(id) from Person group by email\\n\\nThis is very simple sql right? How's possible it return duplicate emails?",
                "solutionTags": [],
                "code": "select email,min(id) from Person group by email\\n\\nThis is very simple sql right? How's possible it return duplicate emails?",
                "codeTag": "Unknown"
            },
            {
                "id": 3827366,
                "title": "100-easy-fast-clean-solution",
                "content": "# Code\\n```\\n/* Write your PL/SQL query statement below */\\nDELETE FROM Person WHERE id NOT IN ( SELECT MIN(id) FROM \\n\\nPerson GROUP BY email)\\n```\\nIF THIS WILL BE HELPFUL TO YOU, PLEASE UPVOTE !\\n\\n![5kej8w.jpg](https://assets.leetcode.com/users/images/8045189d-f197-4b07-bbd5-30a0db814111_1690527555.9023635.jpeg)\\n\\n\\n",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server",
                    "Oracle",
                    "Database"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nDELETE FROM Person WHERE id NOT IN ( SELECT MIN(id) FROM \\n\\nPerson GROUP BY email)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 55565,
                "title": "745-ms-solution-beats-97-submissions",
                "content": "    delete from \\n    Person\\n    where  \\n    Id not in (select Id \\n               from \\n                (select min(Id) as Id \\n                 from Person \\n                 group by Email\\n                ) p\\n              );",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "    delete from \\n    Person\\n    where  \\n    Id not in (select Id \\n               from \\n                (select min(Id) as Id \\n                 from Person \\n                 group by Email\\n                ) p\\n              );",
                "codeTag": "Unknown"
            },
            {
                "id": 55568,
                "title": "a-simple-ac-solution",
                "content": "delete from Person where Id not in ( select A.Id from (select min(Id) as Id from Person GROUP BY Email) A )",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "delete from Person where Id not in ( select A.Id from (select min(Id) as Id from Person GROUP BY Email) A )",
                "codeTag": "Unknown"
            },
            {
                "id": 3218913,
                "title": "196-solution-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\nTo delete all the duplicate emails, keeping only one unique email with the smallest id, we can use the following SQL query:\\n\\n```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.email = p2.email AND p1.id > p2.id;\\n\\n```\\nThis query deletes all rows in which there exists another row with the same email and a smaller id. We use a self-join to compare each row with all other rows that have the same email, and then delete the rows that satisfy the condition.\\n\\nAfter running this query, the Person table will contain only unique emails with the smallest id.",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.email = p2.email AND p1.id > p2.id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1538695,
                "title": "simple-delete-solution",
                "content": "```\\ndelete P1 from Person P1 \\njoin Person P2 \\nwhere P1.email = P2.email and P1.id > P2.id\\n\\n```\\n\\n**Like it ? please upvote !**",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndelete P1 from Person P1 \\njoin Person P2 \\nwhere P1.email = P2.email and P1.id > P2.id\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3219351,
                "title": "delete-duplicate-emails-group-by-ms-sql-server",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nAs it\\'s based on deletion of duplicates,i\\'ve thought of grouping them using their email and delete everything except the data of only person with least ID number of their respective groups.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nAs i\\'ve said earlier,i\\'ve used GROUP BY clause to group the data of tuples with same email and i\\'ve used aggregate operator MIN() to find tuple and i\\'ve deleted every tuple of it\\'s group except the tuple with minimum ID itself using NOT IN.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nTime Taken : 942ms.Beats 25.29% !.\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nJust some space inside your database.\\n# Code\\n```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\nDELETE FROM PERSON\\nWHERE ID NOT IN(SELECT MIN(ID) FROM PERSON GROUP BY EMAIL)\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\nDELETE FROM PERSON\\nWHERE ID NOT IN(SELECT MIN(ID) FROM PERSON GROUP BY EMAIL)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2077469,
                "title": "mysql-clean-code-easy-to-understand",
                "content": "**Pls Upvote if you like the solution!**\\n```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email AND\\np1.Id > p2.Id",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "**Pls Upvote if you like the solution!**\\n```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email AND\\np1.Id > p2.Id",
                "codeTag": "Unknown"
            },
            {
                "id": 416965,
                "title": "2-methods-in-mysql-easy-understand-by-using-double-table-and-not-in-set",
                "content": "1. Using two table to compare in the condition email and delete larger Id table\\n```\\ndelete q from Person as p, Person as q\\nwhere p.Email = q.Email and p.Id < q.Id\\n```\\n2. double select to create a set that Id have to keep, set delete Id not in this set.\\n```\\n# Method 2\\ndelete from Person where Id not in (\\n    select id from(\\n        select min(Id) as id from Person\\n        group by Email\\n    ) as _      # it needs an alias for set\\n)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndelete q from Person as p, Person as q\\nwhere p.Email = q.Email and p.Id < q.Id\\n```\n```\\n# Method 2\\ndelete from Person where Id not in (\\n    select id from(\\n        select min(Id) as id from Person\\n        group by Email\\n    ) as _      # it needs an alias for set\\n)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 55588,
                "title": "my-answer-to-delete-duplicate-emails-with-double-nested-query",
                "content": "    delete from Person where Id not in \\n    (select min_id from \\n    (select min(Id) as min_id from Person group by Email) \\n    as Cid) ;\\n\\nRefer here: http://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause",
                "solutionTags": [],
                "code": "    delete from Person where Id not in \\n    (select min_id from \\n    (select min(Id) as min_id from Person group by Email) \\n    as Cid) ;\\n\\nRefer here: http://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause",
                "codeTag": "Unknown"
            },
            {
                "id": 3849211,
                "title": "pandas-vs-sql-elegant-short-all-30-days-of-pandas-solutions",
                "content": "# Complexity\\n- Time complexity: $$O(n * \\\\log_{2} n)$$\\n- Space complexity: $$O(n)$$\\n\\n# Code\\n```Python []\\ndef delete_duplicate_emails(person: pd.DataFrame):\\n    person.sort_values(by=\\'id\\', inplace=True)\\n    person.drop_duplicates(subset=[\\'email\\'], inplace=True)\\n```\\n```SQL []\\nDELETE p1\\n  FROM Person p1,\\n       Person p2\\n WHERE p1.Email = p2.Email\\n   AND p1.Id > p2.Id;\\n```\\n\\n# Important!\\n###### If you like the solution or find it useful, feel free to **upvote** for it, it will support me in creating high quality solutions)\\n\\n# 30 Days of Pandas solutions\\n\\n### Data Filtering \\u2705\\n- [Big Countries](https://leetcode.com/problems/big-countries/solutions/3848474/pandas-elegant-short-1-line/)\\n- [Recyclable and Low Fat Products](https://leetcode.com/problems/recyclable-and-low-fat-products/solutions/3848500/pandas-elegant-short-1-line/)\\n- [Customers Who Never Order](https://leetcode.com/problems/customers-who-never-order/solutions/3848527/pandas-elegant-short-1-line/)\\n- [Article Views I](https://leetcode.com/problems/article-views-i/solutions/3867192/pandas-elegant-short-1-line/)\\n\\n\\n### String Methods \\u2705\\n- [Invalid Tweets](https://leetcode.com/problems/invalid-tweets/solutions/3849121/pandas-elegant-short-1-line/)\\n- [Calculate Special Bonus](https://leetcode.com/problems/calculate-special-bonus/solutions/3867209/pandas-elegant-short-1-line/)\\n- [Fix Names in a Table](https://leetcode.com/problems/fix-names-in-a-table/solutions/3849167/pandas-elegant-short-1-line/)\\n- [Find Users With Valid E-Mails](https://leetcode.com/problems/find-users-with-valid-e-mails/solutions/3849177/pandas-elegant-short-1-line/)\\n- [Patients With a Condition](https://leetcode.com/problems/patients-with-a-condition/solutions/3849196/pandas-elegant-short-1-line-regex/)\\n\\n\\n### Data Manipulation \\u2705\\n- [Nth Highest Salary](https://leetcode.com/problems/nth-highest-salary/solutions/3867257/pandas-elegant-short-1-line/)\\n- [Second Highest Salary](https://leetcode.com/problems/second-highest-salary/solutions/3867278/pandas-elegant-short/)\\n- [Department Highest Salary](https://leetcode.com/problems/department-highest-salary/solutions/3867312/pandas-elegant-short-1-line/)\\n- [Rank Scores](https://leetcode.com/problems/rank-scores/solutions/3872817/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Delete Duplicate Emails](https://leetcode.com/problems/delete-duplicate-emails/solutions/3849211/pandas-elegant-short/)\\n- [Rearrange Products Table](https://leetcode.com/problems/rearrange-products-table/solutions/3849226/pandas-elegant-short-1-line/)\\n\\n\\n### Statistics \\u2705\\n- [The Number of Rich Customers](https://leetcode.com/problems/the-number-of-rich-customers/solutions/3849251/pandas-elegant-short-1-line/)\\n- [Immediate Food Delivery I](https://leetcode.com/problems/immediate-food-delivery-i/solutions/3872719/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Count Salary Categories](https://leetcode.com/problems/count-salary-categories/solutions/3872801/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n\\n\\n### Data Aggregation \\u2705\\n- [Find Total Time Spent by Each Employee](https://leetcode.com/problems/find-total-time-spent-by-each-employee/solutions/3872715/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Game Play Analysis I](https://leetcode.com/problems/game-play-analysis-i/solutions/3863223/pandas-elegant-short-1-line/)\\n- [Number of Unique Subjects Taught by Each Teacher](https://leetcode.com/problems/number-of-unique-subjects-taught-by-each-teacher/solutions/3863239/pandas-elegant-short-1-line/)\\n- [Classes More Than 5 Students](https://leetcode.com/problems/classes-more-than-5-students/solutions/3863249/pandas-elegant-short/)\\n- [Customer Placing the Largest Number of Orders](https://leetcode.com/problems/customer-placing-the-largest-number-of-orders/solutions/3863257/pandas-elegant-short-1-line/)\\n- [Group Sold Products By The Date](https://leetcode.com/problems/group-sold-products-by-the-date/solutions/3863267/pandas-elegant-short-1-line/)\\n- [Daily Leads and Partners](https://leetcode.com/problems/daily-leads-and-partners/solutions/3863279/pandas-elegant-short-1-line/)\\n\\n\\n### Data Aggregation \\u2705\\n- [Actors and Directors Who Cooperated At Least Three Times](https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times/solutions/3863309/pandas-elegant-short/)\\n- [Replace Employee ID With The Unique Identifier](https://leetcode.com/problems/replace-employee-id-with-the-unique-identifier/solutions/3872822/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Students and Examinations](https://leetcode.com/problems/students-and-examinations/solutions/3872699/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Managers with at Least 5 Direct Reports](https://leetcode.com/problems/managers-with-at-least-5-direct-reports/solutions/3872861/pandas-elegant-short/)\\n- [Sales Person](https://leetcode.com/problems/sales-person/solutions/3872712/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "MySQL",
                    "Pandas"
                ],
                "code": "```Python []\\ndef delete_duplicate_emails(person: pd.DataFrame):\\n    person.sort_values(by=\\'id\\', inplace=True)\\n    person.drop_duplicates(subset=[\\'email\\'], inplace=True)\\n```\n```SQL []\\nDELETE p1\\n  FROM Person p1,\\n       Person p2\\n WHERE p1.Email = p2.Email\\n   AND p1.Id > p2.Id;\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2421463,
                "title": "mysql-2-different-approach-beginner-level-faster-than-94-04-simple-short-solution",
                "content": "***Please upvote to motivate me in my quest of documenting all leetcode solutions. HAPPY CODING:)\\nAny suggestions and improvements are always welcome**.*\\n______________________\\n\\u2705 **MySQL Code :**\\n***Approach 1:***\\n**Runtime:** 539 ms, faster than 94.04% of MySQL online submissions for Delete Duplicate Emails.\\n```\\nSELECT Department,Employee,Salary\\nFROM\\n(SELECT\\nd.name AS Department,\\ne.name AS Employee,\\ne.Salary AS Salary,\\ndense_rank() over(PARTITION BY e.departmentId ORDER BY e.Salary DESC) AS rk\\nFROM Employee e\\nLEFT JOIN Department d ON e.departmentId = d.id) a\\nWHERE rk <= 3\\n```\\n**Runtime:** 539 ms\\n**Memory Usage:**  0B\\n__________________________________\\n***Approach 2***:\\n```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email AND\\np1.Id > p2.Id\\n```\\t  \\n**Runtime:** 794 ms\\n**Memory Usage:**  0B\\n___________________\\nIf you like the solution, please upvote \\uD83D\\uDD3C\\nFor any questions, or discussions, comment below. \\uD83D\\uDC47\\uFE0F",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT Department,Employee,Salary\\nFROM\\n(SELECT\\nd.name AS Department,\\ne.name AS Employee,\\ne.Salary AS Salary,\\ndense_rank() over(PARTITION BY e.departmentId ORDER BY e.Salary DESC) AS rk\\nFROM Employee e\\nLEFT JOIN Department d ON e.departmentId = d.id) a\\nWHERE rk <= 3\\n```\n```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email AND\\np1.Id > p2.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2595438,
                "title": "two-easy-solution-mysql-delete-duplicate-emails",
                "content": "**Please Upvote**\\n\\n**Solution 1 ~1168ms**\\n\\n```\\nDelete a\\nFROM person a, person b\\nWHERE a.email = b.email and a.id > b.id;\\n```\\n\\n**Solution 2  ~986ms**\\n\\n```\\nDELETE t1 FROM person t1\\nINNER JOIN person t2 \\nWHERE  \\n\\t\\tt1.id > t2.id AND\\n\\t    t1.email = t2.email;\\n```",
                "solutionTags": [],
                "code": "```\\nDelete a\\nFROM person a, person b\\nWHERE a.email = b.email and a.id > b.id;\\n```\n```\\nDELETE t1 FROM person t1\\nINNER JOIN person t2 \\nWHERE  \\n\\t\\tt1.id > t2.id AND\\n\\t    t1.email = t2.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2460935,
                "title": "easy-solution-using-alias-and-delete",
                "content": "DELETE a FROM Person a, Person b\\nWHERE a.id > b.id AND a.email = b.email;\\n\\n#upvote is appreciated.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "DELETE a FROM Person a, Person b\\nWHERE a.id > b.id AND a.email = b.email;\\n\\n#upvote is appreciated.",
                "codeTag": "Unknown"
            },
            {
                "id": 3425793,
                "title": "one-line-of-code-superb-logic",
                "content": "\\n\\n# Superb logic Problem\\n```\\n\\ndelete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n\\n\\n```\\n# Understand the Logic by Below Explanation\\n```\\nInput: \\nPerson table:\\n+----+------------------+\\n| id | email            |\\n+----+------------------+\\n| 1  | john@example.com |\\n| 2  | bob@example.com  |\\n| 3  | john@example.com |\\n+----+------------------+\\n\\n=> From Person p1, Person p2 : it would look like:\\n1|john@example.com|1|john@example.com\\n1|john@example.com|2|bob@example.com \\n1|john@example.com|3|john@example.com\\n\\n2|bob@example.com|1|john@example.com\\n2|bob@example.com|2|bob@example.com\\n2|bob@example.com|3|john@example.com\\n\\n3|john@example.com|1|john@example.com\\n3|john@example.com|2|bob@example.com\\n3|john@example.com|3|john@example.com\\n\\n=> From Person p1, Person p2 where p1.email=p2.email and p1.id>p2.id:\\nIt would look like:\\n3|john@example.com|1|john@example.com\\n\\nNow delete this row\\'s matching row in p1 using p1:  delete p1\\n```\\n# please upvote me it would encourage me alot\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n\\ndelete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n\\n\\n```\n```\\nInput: \\nPerson table:\\n+----+------------------+\\n| id | email            |\\n+----+------------------+\\n| 1  | john@example.com |\\n| 2  | bob@example.com  |\\n| 3  | john@example.com |\\n+----+------------------+\\n\\n=> From Person p1, Person p2 : it would look like:\\n1|john@example.com|1|john@example.com\\n1|john@example.com|2|bob@example.com \\n1|john@example.com|3|john@example.com\\n\\n2|bob@example.com|1|john@example.com\\n2|bob@example.com|2|bob@example.com\\n2|bob@example.com|3|john@example.com\\n\\n3|john@example.com|1|john@example.com\\n3|john@example.com|2|bob@example.com\\n3|john@example.com|3|john@example.com\\n\\n=> From Person p1, Person p2 where p1.email=p2.email and p1.id>p2.id:\\nIt would look like:\\n3|john@example.com|1|john@example.com\\n\\nNow delete this row\\'s matching row in p1 using p1:  delete p1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2558687,
                "title": "easiest-sql-solution",
                "content": "**Do upvote if you like it!**\\n\\n```\\ndelete p2 from person p1,person p2 where p1.email=p2.email and p1.id<p2.id;\\n```\\n\\n![image](https://assets.leetcode.com/users/images/64481293-9642-4f52-ab46-98781a1d7609_1662828911.4759347.jpeg)\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndelete p2 from person p1,person p2 where p1.email=p2.email and p1.id<p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2040376,
                "title": "oracle-solution-faster-than-99-55",
                "content": "```\\ndelete from person p where p.id not in (select min(id) from person group by email);\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\ndelete from person p where p.id not in (select min(id) from person group by email);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1933960,
                "title": "oracle-min-group-by",
                "content": "Please upvote, if it helps\\n\\n```\\n delete from Person where id not in (select min(id) from person group by email);\\n ```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n delete from Person where id not in (select min(id) from person group by email);\\n ```",
                "codeTag": "Unknown"
            },
            {
                "id": 2576642,
                "title": "mysql-solution-easiest-solution-memory-optimized",
                "content": "```\\nDELETE p1 FROM Person p1,Person p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id\\n```",
                "solutionTags": [
                    "MySQL",
                    "Oracle"
                ],
                "code": "```\\nDELETE p1 FROM Person p1,Person p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2498586,
                "title": "easy-mysql-solution-simple-to-understand",
                "content": "\\tdelete a from Person a\\n\\tjoin Person b\\n\\twhere a.id > b.id and a.email = b.email;\\nI hope that you\\'ve found the solution useful.\\nIn that case, please do upvote. Happy Coding :)",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "\\tdelete a from Person a\\n\\tjoin Person b\\n\\twhere a.id > b.id and a.email = b.email;\\nI hope that you\\'ve found the solution useful.\\nIn that case, please do upvote. Happy Coding :)",
                "codeTag": "Unknown"
            },
            {
                "id": 2490423,
                "title": "mysql-simple-and-clean-solution",
                "content": "**Please Upvote if it helped you !!!**\\n```\\ndelete p from Person p \\ninner join Person q \\nwhere p.id > q.id and p.email=q.email;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndelete p from Person p \\ninner join Person q \\nwhere p.id > q.id and p.email=q.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1893744,
                "title": "solution-with-not-in",
                "content": "```\\ndelete from Person Where id not in(\\n                select min(id) from Person \\n                Group by email\\n                )\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\ndelete from Person Where id not in(\\n                select min(id) from Person \\n                Group by email\\n                )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2314062,
                "title": "mssql-super-easy-to-understand",
                "content": "```\\ndelete from person \\n    where id not in (\\n        select Min(id) \\n            from person\\n            group by email\\n    )\\n\\t```",
                "solutionTags": [],
                "code": "```\\ndelete from person \\n    where id not in (\\n        select Min(id) \\n            from person\\n            group by email\\n    )\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 2261145,
                "title": "mysql-without-using-select-statement",
                "content": "```\\nDelete p1 From Person p1, Person p2 \\nWhere p1.email = p2.email AND p1.id > p2.id\\n```",
                "solutionTags": [],
                "code": "```\\nDelete p1 From Person p1, Person p2 \\nWhere p1.email = p2.email AND p1.id > p2.id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 284916,
                "title": "my-solution-to-remove-duplicates",
                "content": "```\\nDelete t1 FROM Person t1 INNER JOIN Person t2\\nWhere t1.Email=t2.Email and t1.Id > t2.Id\\n```",
                "solutionTags": [],
                "code": "```\\nDelete t1 FROM Person t1 INNER JOIN Person t2\\nWhere t1.Email=t2.Email and t1.Id > t2.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3529192,
                "title": "mysql-solution-for-delete-duplicate-emails-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe intuition behind the given query is to delete duplicate records from the \"Person\" table based on the email column, while keeping the record with the minimum ID for each email.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. The inner subquery (labeled as \"q\") selects the duplicate email addresses from the \"Person\" table and determines the minimum ID for each email using the min aggregate function and group by clause.\\n2. The outer query deletes the records from the \"Person\" table by joining it with the subquery on two conditions:\\na. Matching email addresses: p.Email = q.Email\\nb. IDs greater than the minimum ID for each email: Id > q.minId\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of this query depends on the number of rows in the \"Person\" table and the efficiency of the indexing on the \"Email\" and \"Id\" columns. The subquery with the group by and min aggregate function may have a complexity of O(N log N), where N is the number of rows in the table. The deletion itself can have a complexity of O(N) or O(log N) depending on the indexing and the number of deleted rows.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity of this query is primarily determined by the memory required to process the subquery and perform the deletion. The subquery may require additional memory to store intermediate results, such as the grouped email addresses and their minimum IDs. The deletion operation itself may require additional memory depending on the database engine\\'s implementation and the transactional context.\\n\\n# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete p.*\\nfrom Person as P,\\n(\\n    select Email, min(Id) as minId from Person\\n    group by Email having count(*) > 1\\n)\\nas q\\nwhere p.Email = q.Email and Id > q.minId\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete p.*\\nfrom Person as P,\\n(\\n    select Email, min(Id) as minId from Person\\n    group by Email having count(*) > 1\\n)\\nas q\\nwhere p.Email = q.Email and Id > q.minId\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2996394,
                "title": "mysql-solution",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\ndelete p1 from Person p1, Person p2\\nwhere p1.Email = p2.Email and p1.id > p2.id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\ndelete p1 from Person p1, Person p2\\nwhere p1.Email = p2.Email and p1.id > p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2618461,
                "title": "2-very-simple-solutions",
                "content": "/*\\nDELETE P1\\nFROM Person P1, Person P2\\nWHERE P1.Email = P2.Email AND P1.Id > P2.Id\\n*/\\n\\nDELETE P1\\nFROM Person P1 INNER JOIN Person P2\\nON P1.Email = P2.Email\\nWHERE P1.id > P2.id",
                "solutionTags": [],
                "code": "/*\\nDELETE P1\\nFROM Person P1, Person P2\\nWHERE P1.Email = P2.Email AND P1.Id > P2.Id\\n*/\\n\\nDELETE P1\\nFROM Person P1 INNER JOIN Person P2\\nON P1.Email = P2.Email\\nWHERE P1.id > P2.id",
                "codeTag": "Unknown"
            },
            {
                "id": 1967417,
                "title": "mysql-using-delete-simple-way",
                "content": "```\\n\\ndelete p2.*\\n  from Person p1 join Person p2\\n  on\\n    p1.email=p2.email and p1.id<p2.id;\\n```\\n\\tIf Helpful Please Like And Upvoke",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n\\ndelete p2.*\\n  from Person p1 join Person p2\\n  on\\n    p1.email=p2.email and p1.id<p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 823547,
                "title": "3-different-mysql-solution",
                "content": "```\\n# Write your MySQL query statement below\\n\\n\\n#1ST Solution\\n\\nDELETE p1 FROM Person p1, Person p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;\\n\\n\\n#2ND Solution\\n\\nDELETE FROM Person where id not in ( SELECT * FROM (SELECT Min(ID) from person group by email) t);\\n\\n#3 Solution\\n\\nDELETE FROM PERSON WHERE ID IN (\\n SELECT ID FROM (SELECT ID, ROW_NUMBER() OVER (PARTITION BY EMAIL ORDER BY ID) NUM_ROW FROM PERSON) T WHERE NUM_ROW!=1)\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n\\n\\n#1ST Solution\\n\\nDELETE p1 FROM Person p1, Person p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;\\n\\n\\n#2ND Solution\\n\\nDELETE FROM Person where id not in ( SELECT * FROM (SELECT Min(ID) from person group by email) t);\\n\\n#3 Solution\\n\\nDELETE FROM PERSON WHERE ID IN (\\n SELECT ID FROM (SELECT ID, ROW_NUMBER() OVER (PARTITION BY EMAIL ORDER BY ID) NUM_ROW FROM PERSON) T WHERE NUM_ROW!=1)\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3275849,
                "title": "sql-server-clean-easy",
                "content": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\n\\nDELETE p1 FROM Person p1\\nINNER JOIN Person p2 \\n  ON p1.email = p2.email AND p1.id > p2.id;\\n```",
                "solutionTags": [],
                "code": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\n\\nDELETE p1 FROM Person p1\\nINNER JOIN Person p2 \\n  ON p1.email = p2.email AND p1.id > p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2686103,
                "title": "mysql-solution",
                "content": "# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n#Here\\'s my query\\n\\n\\nDelete a\\nFROM person a, person b\\nWHERE a.email = b.email and a.id > b.id;\\n\\n\\n#This code is contributed by Parul Sharma",
                "solutionTags": [],
                "code": "# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n#Here\\'s my query\\n\\n\\nDelete a\\nFROM person a, person b\\nWHERE a.email = b.email and a.id > b.id;\\n\\n\\n#This code is contributed by Parul Sharma",
                "codeTag": "Unknown"
            },
            {
                "id": 2473832,
                "title": "simple-mysql-solution-delete",
                "content": "In this problem we are required to **delete all the duplicate emails, keeping only one unique email with the smallest id.** \\nAnd we also are supposed to write a **DELETE** statement and not a SELECT one.\\n\\nThus to solve this problem, I have used **DELETE** and **WHERE** clause.\\n\\nI have used the Person table two times by aliasing both of them.\\n\\n```SQL\\nDELETE org\\nFROM Person AS org, Person AS dup\\n```\\n\\nNow I have used the condition **keeping only one unique email with the smallest id** using the **WHERE** clause.\\n```MySQL\\nWHERE org.email=dup.email AND org.id>dup.id;\\n```\\n.\\n.\\n.\\n**COMPLETE CODE:**\\n```SQL\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\nDELETE org\\nFROM Person AS org, Person AS dup\\nWHERE org.email=dup.email AND org.id>dup.id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```SQL\\nDELETE org\\nFROM Person AS org, Person AS dup\\n```\n```MySQL\\nWHERE org.email=dup.email AND org.id>dup.id;\\n```\n```SQL\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\nDELETE org\\nFROM Person AS org, Person AS dup\\nWHERE org.email=dup.email AND org.id>dup.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2340296,
                "title": "oracel-solution-delete-duplicate-emails",
                "content": "```\\ndelete from Person where id not in(select min(p.id) from Person p group by p.email);\\n```",
                "solutionTags": [
                    "MySQL",
                    "Oracle"
                ],
                "code": "```\\ndelete from Person where id not in(select min(p.id) from Person p group by p.email);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2216525,
                "title": "196-delete-duplicate-emails",
                "content": "```\\n\\ndelete from Person where Id not in(select MIN(Id) from Person group by email)\\n\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n\\ndelete from Person where Id not in(select MIN(Id) from Person group by email)\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2162543,
                "title": "mysql-easy-solution",
                "content": "```\\nDELETE A\\n    FROM \\n    Person A \\n            INNER JOIN\\n                      Person B \\n    WHERE A.id > B.id\\n            AND \\n               A.email = B.email;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE A\\n    FROM \\n    Person A \\n            INNER JOIN\\n                      Person B \\n    WHERE A.id > B.id\\n            AND \\n               A.email = B.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2130104,
                "title": "3-different-ms-sql-solutions-from-slow-to-fast-beats-95",
                "content": "slow:\\n```\\ndelete p\\nfrom Person p\\nwhere p.id not in (select min(id) from Person group by email)\\n```\\n\\nmedium:\\n```\\ndelete p \\nfrom Person p\\nwhere p.id<>(select min(id) from Person where email=p.email)\\n```\\n\\nfast:\\n```\\ndelete p1 \\nfrom person p1, person p2\\nwhere p1.id>p2.id and p1.email=p2.email\\n```\\n",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\ndelete p\\nfrom Person p\\nwhere p.id not in (select min(id) from Person group by email)\\n```\n```\\ndelete p \\nfrom Person p\\nwhere p.id<>(select min(id) from Person where email=p.email)\\n```\n```\\ndelete p1 \\nfrom person p1, person p2\\nwhere p1.id>p2.id and p1.email=p2.email\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2047861,
                "title": "simple-sql-solution",
                "content": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\nDELETE Person \\nWHERE \\n  id NOT IN (\\n    SELECT \\n      MIN(P.id) \\n    FROM \\n      Person P \\n    GROUP BY \\n      P.email\\n  );\\n```\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\nDELETE Person \\nWHERE \\n  id NOT IN (\\n    SELECT \\n      MIN(P.id) \\n    FROM \\n      Person P \\n    GROUP BY \\n      P.email\\n  );\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1964193,
                "title": "ms-sql-solution-with-not-in",
                "content": "```\\nDELETE Person where id not in (select min(id) from Person group by email )\\n```\\n![image](https://assets.leetcode.com/users/images/3e100af6-ae00-4448-a3ef-7afd751b6e6a_1650383206.0534089.png)\\n",
                "solutionTags": [],
                "code": "```\\nDELETE Person where id not in (select min(id) from Person group by email )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1815994,
                "title": "short-easy-way-to-understand",
                "content": "```\\nDelete p2 from person p1 join person p2 on p1.email=p2.email and p1.id<p2.id;",
                "solutionTags": [],
                "code": "```\\nDelete p2 from person p1 join person p2 on p1.email=p2.email and p1.id<p2.id;",
                "codeTag": "Unknown"
            },
            {
                "id": 1610833,
                "title": "simple-and-efficient-solution-no-join-required",
                "content": "Since joining two tables takes a more time, we can use the **with** cluase to make the temporary table which holds the mimimum id for perticular email.\\n\\nHere is my solution:\\n\\n```\\nwith final_ids(id) as (select min(id) from Person group by email)\\ndelete \\nfrom Person\\nwhere id not in (select * from final_ids)\\n```\\n\\nFirst create temporary table **final_ids** using with cluase, where all the records grouped by email and aggregation function is **min**, so it will hold only those ids which are the minimum ids for perticular email.\\n\\nNow, delete all those enteries from person for which the id is not in the table final_ids.\\n\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nwith final_ids(id) as (select min(id) from Person group by email)\\ndelete \\nfrom Person\\nwhere id not in (select * from final_ids)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1503654,
                "title": "simple-mysql-faster-than-99",
                "content": "```\\nDELETE FROM Person\\nWHERE Id NOT IN (SELECT Id FROM (SELECT MIN(Id) AS \\'Id\\', Email FROM Person GROUP BY 2) t)",
                "solutionTags": [],
                "code": "```\\nDELETE FROM Person\\nWHERE Id NOT IN (SELECT Id FROM (SELECT MIN(Id) AS \\'Id\\', Email FROM Person GROUP BY 2) t)",
                "codeTag": "Unknown"
            },
            {
                "id": 1375326,
                "title": "simple-solution-using-row-number",
                "content": "```\\nWITH cte AS (\\nSELECT \\n\\tId,\\n\\tEMail,\\n\\tROW_NUMBER() OVER(PARTITION BY Email ORDER BY Id) as row_rnk\\nFROM Person \\n)\\n\\nDELETE FROM Person\\nWHERE Id IN (SELECT id FROM cte WHERE row_rnk > 1 )\\n```",
                "solutionTags": [],
                "code": "```\\nWITH cte AS (\\nSELECT \\n\\tId,\\n\\tEMail,\\n\\tROW_NUMBER() OVER(PARTITION BY Email ORDER BY Id) as row_rnk\\nFROM Person \\n)\\n\\nDELETE FROM Person\\nWHERE Id IN (SELECT id FROM cte WHERE row_rnk > 1 )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1322708,
                "title": "oracle-with-as",
                "content": "```\\n delete\\n  from person p\\n where p.id NOT IN (with pp as (select min(id) from person group by email)\\n                     select * from pp\\n                    )\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n delete\\n  from person p\\n where p.id NOT IN (with pp as (select min(id) from person group by email)\\n                     select * from pp\\n                    )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1197637,
                "title": "simple-and-short-join-solution",
                "content": "```\\ndelete p1 \\nfrom Person p1\\njoin Person p2 \\nwhere p1.Id > p2.Id AND p1.Email = p2.Email;\\n```",
                "solutionTags": [],
                "code": "```\\ndelete p1 \\nfrom Person p1\\njoin Person p2 \\nwhere p1.Id > p2.Id AND p1.Email = p2.Email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1183026,
                "title": "simple-mysql-faster-than-93",
                "content": "```\\nDELETE FROM Person\\nWHERE Id NOT IN (SELECT t.Id FROM (SELECT MIN(Id) AS Id FROM Person GROUP BY Email) t)",
                "solutionTags": [],
                "code": "```\\nDELETE FROM Person\\nWHERE Id NOT IN (SELECT t.Id FROM (SELECT MIN(Id) AS Id FROM Person GROUP BY Email) t)",
                "codeTag": "Unknown"
            },
            {
                "id": 956323,
                "title": "why-is-mysql-the-only-option-for-answers-for-this-problem",
                "content": "Why is MySQL the only option for answers for this problem?\\nEvery other problem so far allows MS SQL Server (T-SQL) to submit responses.",
                "solutionTags": [],
                "code": "Why is MySQL the only option for answers for this problem?\\nEvery other problem so far allows MS SQL Server (T-SQL) to submit responses.",
                "codeTag": "Unknown"
            },
            {
                "id": 3931552,
                "title": "pandas-2-line-solution",
                "content": "**\\uD83D\\uDD3C IF YOU FIND THIS POST HELPFUL PLEASE UPVOTE \\uD83D\\uDC4D**\\n```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person.sort_values(by=\\'id\\', inplace=True)\\n    \\n    person.drop_duplicates(subset=\\'email\\', keep=\\'first\\', inplace=True)\\n```\\n**Thank you for reading! \\uD83D\\uDE04 Comment if you have any questions or feedback.**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person.sort_values(by=\\'id\\', inplace=True)\\n    \\n    person.drop_duplicates(subset=\\'email\\', keep=\\'first\\', inplace=True)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3850854,
                "title": "simple-solution",
                "content": "\\n# Code\\n```\\ndelete p1\\nfrom Person p1,Person p2\\nwhere p1.Email = p2.Email \\nAnd p1.Id > p2.Id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndelete p1\\nfrom Person p1,Person p2\\nwhere p1.Email = p2.Email \\nAnd p1.Id > p2.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2890209,
                "title": "mysql-1-subquery-group-by-2-join-self",
                "content": "https://leetcode.com/submissions/detail/856537692/\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete from Person \\nwhere id not in (\\n    select * from (\\n        select min(id) \\n        from Person\\n        group by email\\n    ) as alias\\n)\\n```\\n\\nhttps://leetcode.com/submissions/detail/856539184/\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete p1 from Person as p1,\\n    Person as p2\\n    where p1.id > p2.id\\n    and p1.email = p2.email\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete from Person \\nwhere id not in (\\n    select * from (\\n        select min(id) \\n        from Person\\n        group by email\\n    ) as alias\\n)\\n```\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete p1 from Person as p1,\\n    Person as p2\\n    where p1.id > p2.id\\n    and p1.email = p2.email\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2867178,
                "title": "delete-join-where",
                "content": "# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\nDELETE p1\\nFROM person p1 JOIN person p2\\non p1.email = p2.email\\nWHERE p1.id > p2.id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\nDELETE p1\\nFROM person p1 JOIN person p2\\non p1.email = p2.email\\nWHERE p1.id > p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2790758,
                "title": "easy-mysql-beginner-solution",
                "content": "\\n\\n# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n#DELETE FROM table_name WHERE condition;\\n\\ndelete p1 from person p1, person p2\\nwhere p1.email = p2.email \\nand p1.id > p2.id;\\n\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n#DELETE FROM table_name WHERE condition;\\n\\ndelete p1 from person p1, person p2\\nwhere p1.email = p2.email \\nand p1.id > p2.id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2736605,
                "title": "most-simple-t-sql-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\ncompare using ids. create a sub qurey table of minium ids only using group by and compare it with all the ids from orignal table and delete ids which are not in the sub qurey.\\n\\n# Code\\n```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\n delete from person where id not in (select Min(id) from person group by email);\\n \\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\n delete from person where id not in (select Min(id) from person group by email);\\n \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2694148,
                "title": "mysql-solution",
                "content": "delete p1 from Person p1,Person p2 where p1.email=p2.email and p1.id>p2.id;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "delete p1 from Person p1,Person p2 where p1.email=p2.email and p1.id>p2.id;",
                "codeTag": "Unknown"
            },
            {
                "id": 2641117,
                "title": "sql-server-solution-using-join",
                "content": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\ndelete p1 from person p1 join person p2 on p1.email=p2.email and p1.id>p2.id;\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\ndelete p1 from person p1 join person p2 on p1.email=p2.email and p1.id>p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2580521,
                "title": "one-liner-solution-using-row-number-window-function-in-sql-server",
                "content": "**Upvote if you feel it easy :)**\\n```\\nDELETE x FROM \\n\\t(SELECT row_number() over(partition by email order by id asc) as rownum, * FROM Person) x\\nWHERE x.rownum > 1;\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\nDELETE x FROM \\n\\t(SELECT row_number() over(partition by email order by id asc) as rownum, * FROM Person) x\\nWHERE x.rownum > 1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2429388,
                "title": "sql-solution-delete-statement-if-clause",
                "content": "```\\ndelete p1\\nfrom Person p1, Person p2\\nwhere p1.email  = p2.email\\nand p1.id > p2.id;\\n```",
                "solutionTags": [],
                "code": "```\\ndelete p1\\nfrom Person p1, Person p2\\nwhere p1.email  = p2.email\\nand p1.id > p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2405376,
                "title": "simple-solution-without-join",
                "content": "DELETE FROM person \\nWHERE id NOT IN (\\n\\tSELECT id FROM (SELECT id,email,ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn FROM person) WHERE rn=1);\\n\\t\\n**Please upvote if you like my solution.**\\n",
                "solutionTags": [],
                "code": "DELETE FROM person \\nWHERE id NOT IN (\\n\\tSELECT id FROM (SELECT id,email,ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn FROM person) WHERE rn=1);\\n\\t\\n**Please upvote if you like my solution.**\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 2280703,
                "title": "ms-sql",
                "content": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\n\\nDELETE p1 \\nFROM Person p1\\nJOIN Person p2 ON p1.email = p2.email\\nWHERE p1.email = p2.email\\n    AND p1.id > p2.id;\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\n/* \\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your T-SQL query statement below\\n */\\n\\nDELETE p1 \\nFROM Person p1\\nJOIN Person p2 ON p1.email = p2.email\\nWHERE p1.email = p2.email\\n    AND p1.id > p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2223334,
                "title": "smart-solution-production-grade",
                "content": "```\\ndelete p.* from Person p left join Person s\\non p.email = s.email\\nwhere s.email is not null and s.id < p.id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndelete p.* from Person p left join Person s\\non p.email = s.email\\nwhere s.email is not null and s.id < p.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2133289,
                "title": "short-and-simple-solution",
                "content": "```\\nDELETE p1 \\nFROM Person p1 INNER JOIN Person p2\\nWHERE p1.id > p2.id and p1.email = p2.email;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE p1 \\nFROM Person p1 INNER JOIN Person p2\\nWHERE p1.id > p2.id and p1.email = p2.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2113269,
                "title": "196-delete-duplicate-emails-sql",
                "content": "```\\nDELETE a FROM Person a, Person b WHERE a.Email = b.Email AND a.Id > b.Id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE a FROM Person a, Person b WHERE a.Email = b.Email AND a.Id > b.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2085226,
                "title": "using-inner-join-and-two-tables-81-17-time",
                "content": "```\\ndelete p1 from person p1\\ninner join person p2\\nwhere\\np1.id > p2.id and\\np1.email = p2.email;\\n```",
                "solutionTags": [],
                "code": "```\\ndelete p1 from person p1\\ninner join person p2\\nwhere\\np1.id > p2.id and\\np1.email = p2.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1942190,
                "title": "mysql-easy-implementation",
                "content": "```\\nDelete p2 \\n    FROM Person p1 JOIN Person p2\\n    On p1.email = p2.email\\n    AND p1.Id < p2.Id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDelete p2 \\n    FROM Person p1 JOIN Person p2\\n    On p1.email = p2.email\\n    AND p1.Id < p2.Id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1719836,
                "title": "two-solutions-using-a-simple-groupby-or-using-window-fns",
                "content": "\\nDELETE FROM Person\\nWHERE id IN(\\n            SELECT id \\n            FROM(\\n                SELECT id, row_number() over(PARTITION BY email ORDER BY id) AS position\\n                FROM person \\n                ) t\\n            WHERE position != 1 \\n            )\\n\\n\\nOR:\\n\\ndelete from Person \\nwhere id NOT in(\\n                select minimum_ids\\n                from(  \\n                     select min(id) as minimum_ids   \\n                     from person\\n                     group by email) as t\\n                )\\n",
                "solutionTags": [],
                "code": "\\nDELETE FROM Person\\nWHERE id IN(\\n            SELECT id \\n            FROM(\\n                SELECT id, row_number() over(PARTITION BY email ORDER BY id) AS position\\n                FROM person \\n                ) t\\n            WHERE position != 1 \\n            )\\n\\n\\nOR:\\n\\ndelete from Person \\nwhere id NOT in(\\n                select minimum_ids\\n                from(  \\n                     select min(id) as minimum_ids   \\n                     from person\\n                     group by email) as t\\n                )\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1679109,
                "title": "delete-window-function",
                "content": "```\\n\\nwith t_rk as (\\n    select id,email,row_number()over(partition by email order by id) as rk\\n    from Person\\n)\\n\\nDELETE\\nfrom Person\\nwhere id in (select id from t_rk where rk != 1)\\n```",
                "solutionTags": [],
                "code": "```\\n\\nwith t_rk as (\\n    select id,email,row_number()over(partition by email order by id) as rk\\n    from Person\\n)\\n\\nDELETE\\nfrom Person\\nwhere id in (select id from t_rk where rk != 1)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1441249,
                "title": "simple-mysql",
                "content": "```\\nDELETE\\nFROM Person\\nWHERE Id NOT IN (SELECT a.Id\\n                FROM (SELECT min(id) Id\\n                        FROM Person\\n                        GROUP BY Email\\n                        ) a\\n                 );\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE\\nFROM Person\\nWHERE Id NOT IN (SELECT a.Id\\n                FROM (SELECT min(id) Id\\n                        FROM Person\\n                        GROUP BY Email\\n                        ) a\\n                 );\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1362819,
                "title": "using-min",
                "content": "```\\nDELETE FROM PERSON\\nWHERE \\n    ID NOT IN (\\n        SELECT MIN_ID FROM (\\n            SELECT EMAIL, MIN(ID) AS MIN_ID FROM PERSON\\n            GROUP BY EMAIL\\n            ) b\\n )\\n",
                "solutionTags": [],
                "code": "```\\nDELETE FROM PERSON\\nWHERE \\n    ID NOT IN (\\n        SELECT MIN_ID FROM (\\n            SELECT EMAIL, MIN(ID) AS MIN_ID FROM PERSON\\n            GROUP BY EMAIL\\n            ) b\\n )\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1325145,
                "title": "100-memory-using-delete-join",
                "content": "From https://www.mysqltutorial.org/mysql-delete-duplicate-rows/\\n```\\nDELETE p1 FROM person p1\\nINNER JOIN person p2 \\nWHERE\\n    p1.id > p2.id AND \\n    p1.email = p2.email;\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE p1 FROM person p1\\nINNER JOIN person p2 \\nWHERE\\n    p1.id > p2.id AND \\n    p1.email = p2.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1041070,
                "title": "mysql-self-join",
                "content": "```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Id > p2.Id\\n    and p1.Email = p2.Email;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Id > p2.Id\\n    and p1.Email = p2.Email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 843588,
                "title": "four-solutions",
                "content": "#Method 1: Self-join\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email AND p1.Id > p2.Id\\n\\n#Method 2: Subquery\\nDELETE FROM Person\\nWHERE Id not in (SELECT Id\\n                 FROM \\n                 (SELECT MIN(Id) as Id, Email\\n                 FROM Person\\n                 GROUP BY Email) as t)\\n\\n#Method 3: Window function - FIRST_VALUE()\\nWith t AS (\\nSELECT Id, Email, first_value(id) OVER (partition by Email ORDER BY Id) as idfirst\\nFROM Person)\\n\\nDELETE FROM Person WHERE Id NOT IN (\\nSELECT idfirst FROM t\\n)\\n\\n#Method 4: Window Function - row_number()\\nWith t AS (\\nSELECT Id, Email, row_number() OVER (partition by Email ORDER BY Id) as idrank\\nFROM Person)\\n\\nDELETE FROM Person WHERE Id IN (\\nSELECT Id FROM t\\nWHERE idrank!=1\\n)\\n",
                "solutionTags": [],
                "code": "#Method 1: Self-join\\nDELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email AND p1.Id > p2.Id\\n\\n#Method 2: Subquery\\nDELETE FROM Person\\nWHERE Id not in (SELECT Id\\n                 FROM \\n                 (SELECT MIN(Id) as Id, Email\\n                 FROM Person\\n                 GROUP BY Email) as t)\\n\\n#Method 3: Window function - FIRST_VALUE()\\nWith t AS (\\nSELECT Id, Email, first_value(id) OVER (partition by Email ORDER BY Id) as idfirst\\nFROM Person)\\n\\nDELETE FROM Person WHERE Id NOT IN (\\nSELECT idfirst FROM t\\n)\\n\\n#Method 4: Window Function - row_number()\\nWith t AS (\\nSELECT Id, Email, row_number() OVER (partition by Email ORDER BY Id) as idrank\\nFROM Person)\\n\\nDELETE FROM Person WHERE Id IN (\\nSELECT Id FROM t\\nWHERE idrank!=1\\n)\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 536876,
                "title": "mysql-delete-is-hard",
                "content": "```\\nDELETE p2\\nFROM person AS p1\\nINNER JOIN person AS p2\\nON p1.email = p2.email\\nAND p1.id < p2.id;\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE p2\\nFROM person AS p1\\nINNER JOIN person AS p2\\nON p1.email = p2.email\\nAND p1.id < p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 398678,
                "title": "mysql-solution-using-group-by-operation-on-email-column",
                "content": "```\\nDELETE p\\nFROM Person p\\nLEFT JOIN (SELECT MIN(p2.Id) AS \\'Id\\', p2.Email\\n           FROM Person p2\\n           GROUP BY p2.Email) group_email\\nON p.Id = group_email.Id\\nWHERE group_email.Email IS NULL\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE p\\nFROM Person p\\nLEFT JOIN (SELECT MIN(p2.Id) AS \\'Id\\', p2.Email\\n           FROM Person p2\\n           GROUP BY p2.Email) group_email\\nON p.Id = group_email.Id\\nWHERE group_email.Email IS NULL\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 388504,
                "title": "not-an-easy-problem-the-trick-is-to-group-by-email-and-take-min-id-in-subquery",
                "content": "Hey All!\\n\\nThere\\'s no way would I call this problem an \\'Easy\\' one. Plus the console seemed to have window functions disabled. \\n\\nThe key \\uD83D\\uDD11 is that you can group by **Email**, and do a min aggregation for the **Id.** Then you delete out all Id\\'s  <font color = \\'red\\'> **NOT** </font> in that aggregation table because those IDs will be the duplicates.\\n\\n```\\ndelete from Person \\nwhere Id not in \\n        (select \\n            Id from \\n                (\\n                    select\\n                     Email,\\n                     min(Id) as Id\\n                     from Person \\n                        group by 1\\n                ) tmp \\n        );\\n```\\n\\nHope this helps!\\n\\nCheers,<br>\\nGeorge John Jordan Thomas Aquinas Hayward, Optimist <br>\\nhttps://ghayward.github.io\\n\\n[![GJJTAHO](https://i.ibb.co/wBjBb4G/gjjtah.jpg)](https://ghayward.github.io)\\n\\n## The Lord Always Delivers",
                "solutionTags": [],
                "code": "```\\ndelete from Person \\nwhere Id not in \\n        (select \\n            Id from \\n                (\\n                    select\\n                     Email,\\n                     min(Id) as Id\\n                     from Person \\n                        group by 1\\n                ) tmp \\n        );\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 170586,
                "title": "mysql-double-select-without-join",
                "content": "1. The inner-most `SELECT` sorts by Id and Email.\\n2. `GROUP BY` removes duplicate, `SELECT MIN(Id)` picks up the unique one with lowest Id. \\n3. `DELETE NOT IN` removes the rest \\n```\\nDELETE\\nFROM Person\\nWHERE Id NOT IN\\n(\\n    SELECT MIN(Id) FROM\\n    (\\n    SELECT *\\n    FROM Person\\n    ORDER BY Id, Email\\n    ) as c1\\n    GROUP BY Email\\n)\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE\\nFROM Person\\nWHERE Id NOT IN\\n(\\n    SELECT MIN(Id) FROM\\n    (\\n    SELECT *\\n    FROM Person\\n    ORDER BY Id, Email\\n    ) as c1\\n    GROUP BY Email\\n)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4055572,
                "title": "pandas-sql-easy-delete-duplicate-emails-easy",
                "content": "[See the Accepted and Successful Submission Detail](https://leetcode.com/submissions/detail/1051740590/)\\n```\\ndef delete_duplicate_emails(person: pd.DataFrame) -> pd.DataFrame:\\n    # Sort the DataFrame by \\'Id\\' in ascending order\\n    person.sort_values(by=\\'id\\', ascending=True, inplace=True)\\n    \\n    # Find and keep the first occurrence of each unique email\\n    person.drop_duplicates(subset=\\'email\\', keep=\\'first\\', inplace=True)\\n    \\n    # Reset the index to maintain a continuous index\\n    person.reset_index(drop=True, inplace=True)\\n\\n# Note: This function expects us to modify the DataFrame without returning it. It means, it modifies the original DataFrame in place, and it throws error if we return the modified DataFrame. \\n```\\n\\n**SQL**\\n[See the Accepted and Successful Submission Detail](https://leetcode.com/submissions/detail/1061401869/)\\n```\\nDELETE person1 FROM Person person1\\nINNER JOIN Person person2 \\n  ON person1.email = person2.email \\n  AND person1.id > person2.id;\\n```\\n\\n```\\n-- Delete records from the \"Person\" table using the alias \"person1\"\\nDELETE person1\\n\\n-- Specify that we are performing an INNER JOIN between two instances of the \"Person\" table: \"person1\" and \"person2\"\\nFROM Person person1\\nINNER JOIN Person person2 \\n\\n-- Define the JOIN condition: we are matching records where the \"email\" in \"person1\" matches the \"email\" in \"person2\"\\n-- Additionally, we are ensuring that we keep the record with the higher \"id\" value in \"person1\" by using \"person1.id > person2.id\"\\nON person1.email = person2.email \\n  AND person1.id > person2.id;\\n```\\n![image](https://assets.leetcode.com/users/images/ee2d9c16-18f1-49c6-b15f-e32459aa7eb2_1695222029.3399673.jpeg)\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndef delete_duplicate_emails(person: pd.DataFrame) -> pd.DataFrame:\\n    # Sort the DataFrame by \\'Id\\' in ascending order\\n    person.sort_values(by=\\'id\\', ascending=True, inplace=True)\\n    \\n    # Find and keep the first occurrence of each unique email\\n    person.drop_duplicates(subset=\\'email\\', keep=\\'first\\', inplace=True)\\n    \\n    # Reset the index to maintain a continuous index\\n    person.reset_index(drop=True, inplace=True)\\n\\n# Note: This function expects us to modify the DataFrame without returning it. It means, it modifies the original DataFrame in place, and it throws error if we return the modified DataFrame. \\n```\n```\\nDELETE person1 FROM Person person1\\nINNER JOIN Person person2 \\n  ON person1.email = person2.email \\n  AND person1.id > person2.id;\\n```\n```\\n-- Delete records from the \"Person\" table using the alias \"person1\"\\nDELETE person1\\n\\n-- Specify that we are performing an INNER JOIN between two instances of the \"Person\" table: \"person1\" and \"person2\"\\nFROM Person person1\\nINNER JOIN Person person2 \\n\\n-- Define the JOIN condition: we are matching records where the \"email\" in \"person1\" matches the \"email\" in \"person2\"\\n-- Additionally, we are ensuring that we keep the record with the higher \"id\" value in \"person1\" by using \"person1.id > person2.id\"\\nON person1.email = person2.email \\n  AND person1.id > person2.id;\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3948101,
                "title": "easy-solution-must-try",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.ID >P2.ID AND P1.EMAIL=P2.EMAIL;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.ID >P2.ID AND P1.EMAIL=P2.EMAIL;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3910187,
                "title": "mysql",
                "content": "```sql\\nDELETE A FROM Person AS A, Person AS B\\nWHERE A.email = B.email AND A.id > B.id\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```sql\\nDELETE A FROM Person AS A, Person AS B\\nWHERE A.email = B.email AND A.id > B.id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3877420,
                "title": "simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\ndelete p1 from Person p1,Person p2 where p1.Email = p2.Email And p1.Id > p2.Id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\ndelete p1 from Person p1,Person p2 where p1.Email = p2.Email And p1.Id > p2.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3864818,
                "title": "pandas-solution-using-sort-values-and-drop-duplicates",
                "content": "# Intuition\\nThe problem requires us to remove duplicate email addresses from a DataFrame of persons. If there are multiple rows with the same email address, we want to keep the row with the lowest \\'id\\' value and remove the others.\\n\\n# Approach\\n1. **Sort by \\'id\\'**: We sort the DataFrame by the \\'id\\' column in ascending order using the `sort_values()` method. This ensures that the row with the lowest \\'id\\' for each email address will appear first.\\n2. **Delete Duplicate Emails**: We then use the `drop_duplicates()` method with the `subset=\\'email\\'` argument to delete rows with duplicate email addresses. Since the DataFrame is sorted by \\'id\\', the first occurrence of each email (i.e., the one with the lowest \\'id\\') will be kept.\\n3. **In-place Modification**: Both sorting and deletion are performed in place on the original DataFrame, ensuring that the changes are reflected in the calling code.\\n\\n# Complexity\\n- **Time complexity**: \\\\(O(n \\\\log n)\\\\), where \\\\(n\\\\) is the number of rows in the DataFrame. Sorting the DataFrame takes \\\\(O(n \\\\log n)\\\\) time, and deleting duplicates takes \\\\(O(n)\\\\) time.\\n- **Space complexity**: \\\\(O(1)\\\\), as both operations are performed in place, and no additional space is required.\\n\\n# Code\\n```python\\nimport pandas as pd\\n\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    person.sort_values(by=\\'id\\', ascending=True, inplace=True)\\n    person.drop_duplicates(subset=\\'email\\', inplace=True)\\n```\\n    \\n\\n\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```python\\nimport pandas as pd\\n\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    person.sort_values(by=\\'id\\', ascending=True, inplace=True)\\n    person.drop_duplicates(subset=\\'email\\', inplace=True)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3647152,
                "title": "2-mysql-solution-pandas-join-sub-query-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n#### Solution 1\\nIn solution 1, we use **JOIN operator on aliases p1 and p2** of table Person using email and then **delete the rows with higher id**.\\n\\n#### Solution 2 (Beats 90%)\\nSolution 2 uses **sub-query to retrieve the minimum id of the person grouped by email and then delete others except them**.\\nHere, the first solution will be to uses sub-query as - \\n```\\ndelete from Person where id not in(select min(id) as id from Person group by email)\\n```\\nHowever, it throws an error **\" You can\\'t specify target table \\'Person\\' for update in FROM clause \"**, so we use a middle table with select clause as given in solution 2.\\n\\n# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Solution 1 (JOIN)\\nDELETE p1\\nFROM Person p1 JOIN Person p2 using(email) \\nWHERE p1.id>p2.id\\n\\n# Solution 2 (Sub-query)\\nDELETE \\nFROM Person\\nWHERE id NOT IN(\\n  select t.id from (\\n    select min(id) as id from Person GROUP BY email\\n  ) as t\\n)\\n```\\n```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    person.sort_values(by=\\'id\\', inplace=True)\\n    person.drop_duplicates(subset=\\'email\\', keep=\\'first\\', inplace=True)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndelete from Person where id not in(select min(id) as id from Person group by email)\\n```\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Solution 1 (JOIN)\\nDELETE p1\\nFROM Person p1 JOIN Person p2 using(email) \\nWHERE p1.id>p2.id\\n\\n# Solution 2 (Sub-query)\\nDELETE \\nFROM Person\\nWHERE id NOT IN(\\n  select t.id from (\\n    select min(id) as id from Person GROUP BY email\\n  ) as t\\n)\\n```\n```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    person.sort_values(by=\\'id\\', inplace=True)\\n    person.drop_duplicates(subset=\\'email\\', keep=\\'first\\', inplace=True)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3455220,
                "title": "fastest-solution-best-time-complexity",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\nIntiutio is quite simple, we assign row num to each email ID(cause there are duplicates) which are ordered by Id. This way, any email with the smallest id will be assigned 1 as the row number. For non duplicates, it\\'d be obviously 1 anyway. \\n\\nOnce we have this, we just use a sub query method to delete rows where row number is greater than 1. \\n\\nFeel free to drop doubts in comments!! And don\\'t forget to upvote. (:\\n\\n\\n\\n# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete from Person \\nwhere id in (select id from (select id,row_number() over(partition by email order by id) as rnum from Person)a where rnum>1);\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete from Person \\nwhere id in (select id from (select id,row_number() over(partition by email order by id) as rnum from Person)a where rnum>1);\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3294917,
                "title": "very-easy-sql-query",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n\\nDELETE X FROM PERSON X,PERSON Y WHERE X.ID>Y.ID AND X.EMAIL=Y.EMAIL;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n\\nDELETE X FROM PERSON X,PERSON Y WHERE X.ID>Y.ID AND X.EMAIL=Y.EMAIL;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3242487,
                "title": "easy-sql-query",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete p from person as p, person as s where p.id>s.id and p.email=s.email;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\ndelete p from person as p, person as s where p.id>s.id and p.email=s.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3154474,
                "title": "here-is-solution-using-row-number-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/*\\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your PL/SQL query statement below\\n */\\n DELETE Person where\\n  id in (\\n   select id from (\\n   select id,email,row_number()\\n  over( partition by email order by id asc)top from person \\n  ) where top>1\\n  )\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n/*\\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your PL/SQL query statement below\\n */\\n DELETE Person where\\n  id in (\\n   select id from (\\n   select id,email,row_number()\\n  over( partition by email order by id asc)top from person \\n  ) where top>1\\n  )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2944161,
                "title": "2-table-method",
                "content": "### ***Using two table to compare in the condition email and delete larger Id table***\\n# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\nDELETE p1 \\nFROM Person p1, Person p2 \\nWHERE p1.email=p2.email AND p1.id>p2.id;\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server",
                    "Database"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\nDELETE p1 \\nFROM Person p1, Person p2 \\nWHERE p1.email=p2.email AND p1.id>p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2813601,
                "title": "80-faster",
                "content": "![image](https://assets.leetcode.com/users/images/5c91eed0-2d6e-47de-90b3-8f1f16784d36_1668422890.3427231.png)\\n\\n\\n```\\nDELETE p1 \\nFROM Person p1, Person p2 \\nWHERE p1.email = p2.email \\nAND p1.id > p2.id;\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE p1 \\nFROM Person p1, Person p2 \\nWHERE p1.email = p2.email \\nAND p1.id > p2.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2702497,
                "title": "ms-sql-easy-to-understand-solution",
                "content": "```\\n\\n delete from Person \\n where id in (select p1.id\\n              from Person as p1, Person as p2 \\n              where p1.id > p2.id and p1.email = p2.email) \\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n\\n delete from Person \\n where id in (select p1.id\\n              from Person as p1, Person as p2 \\n              where p1.id > p2.id and p1.email = p2.email) \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2669448,
                "title": "mysql-easy-to-understand",
                "content": "\\t\\t# MY SQL\\n\\t\\tDELETE X FROM Person X, Person Y \\n\\t\\tWHERE \\n\\t\\tX.Email = Y.Email \\n\\t\\tAND \\n\\t\\tX.Id > Y.Id;",
                "solutionTags": [],
                "code": "\\t\\t# MY SQL\\n\\t\\tDELETE X FROM Person X, Person Y \\n\\t\\tWHERE \\n\\t\\tX.Email = Y.Email \\n\\t\\tAND \\n\\t\\tX.Id > Y.Id;",
                "codeTag": "Unknown"
            },
            {
                "id": 2642061,
                "title": "very-simple-self-explanatory-solution",
                "content": "```\\ndelete from person \\nwhere id in (\\n    select p1.id from Person p1 \\n    join person p2 on p1.email = p2.email \\n    where p1.id != p2.id and p1.id > p2.id \\n)\\n```",
                "solutionTags": [],
                "code": "```\\ndelete from person \\nwhere id in (\\n    select p1.id from Person p1 \\n    join person p2 on p1.email = p2.email \\n    where p1.id != p2.id and p1.id > p2.id \\n)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2587504,
                "title": "using-cte",
                "content": "with t1 as (\\n    select id, \\n           email, \\n           row_number() over(partition by email order by id) as rn \\n    from Person\\n)\\ndelete from \\n         Person \\n         where id in (select id from t1 where rn>1)",
                "solutionTags": [],
                "code": "with t1 as (\\n    select id, \\n           email, \\n           row_number() over(partition by email order by id) as rn \\n    from Person\\n)\\ndelete from \\n         Person \\n         where id in (select id from t1 where rn>1)",
                "codeTag": "Unknown"
            },
            {
                "id": 2558856,
                "title": "mysql",
                "content": "\\tDELETE p2\\n\\tFROM Person p1 JOIN Person p2\\n\\tON p1.Email = p2.Email AND\\n\\tp1.Id < p2.ID;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "\\tDELETE p2\\n\\tFROM Person p1 JOIN Person p2\\n\\tON p1.Email = p2.Email AND\\n\\tp1.Id < p2.ID;",
                "codeTag": "Unknown"
            },
            {
                "id": 2551476,
                "title": "2-solutions-1-not-in-2-inner-join",
                "content": "![image](https://assets.leetcode.com/users/images/594fefc3-c139-4aee-97e6-8befca419593_1662674020.3671904.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/0b5049f9-1945-4001-ad5c-3856f10d6ecd_1662676481.9050295.png)\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "![image](https://assets.leetcode.com/users/images/594fefc3-c139-4aee-97e6-8befca419593_1662674020.3671904.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/0b5049f9-1945-4001-ad5c-3856f10d6ecd_1662676481.9050295.png)\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 2537199,
                "title": "simple-3-solutions-with-subquery-table-alias-with-statement",
                "content": "Using subquery.\\n```\\nDELETE FROM\\n    Person\\nWHERE\\n    id not in (\\n        SELECT\\n            t.id\\n        FROM\\n        (SELECT min(id) as id FROM Person GROUP BY email) as t\\n    )\\n```\\n\\nSuper simple.\\n```\\nDELETE\\n    p1\\nFROM\\n    Person p1, Person p2\\nWHERE\\n    p1.email = p2.email AND\\n    p1.id > p2.id\\n```\\n\\nUsing `WITH` statement. \\n```\\nWITH t AS (\\n  SELECT min(id) as id, email FROM Person GROUP BY email\\n)\\n\\nDELETE Person FROM\\n    Person, t\\nWHERE\\n    Person.email = t.email AND\\n    Person.id > t.id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE FROM\\n    Person\\nWHERE\\n    id not in (\\n        SELECT\\n            t.id\\n        FROM\\n        (SELECT min(id) as id FROM Person GROUP BY email) as t\\n    )\\n```\n```\\nDELETE\\n    p1\\nFROM\\n    Person p1, Person p2\\nWHERE\\n    p1.email = p2.email AND\\n    p1.id > p2.id\\n```\n```\\nWITH t AS (\\n  SELECT min(id) as id, email FROM Person GROUP BY email\\n)\\n\\nDELETE Person FROM\\n    Person, t\\nWHERE\\n    Person.email = t.email AND\\n    Person.id > t.id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2508907,
                "title": "delete-duplicate-emails-mysql-simple-solution",
                "content": "delete a from Person a\\njoin Person b\\nwhere a.id > b.id and a.email = b.email;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "delete a from Person a\\njoin Person b\\nwhere a.id > b.id and a.email = b.email;",
                "codeTag": "Unknown"
            },
            {
                "id": 2466302,
                "title": "self-join",
                "content": "```\\ndelete p1\\nfrom  Person p1, Person p2 \\nwhere p1.id > p2.id \\nand p1.email = p2.email;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\ndelete p1\\nfrom  Person p1, Person p2 \\nwhere p1.id > p2.id \\nand p1.email = p2.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2445107,
                "title": "196-delete-duplicate-emails-mysql",
                "content": "```\\nDELETE p\\nFROM Person p, Person q\\nWHERE p.id > q.id AND p.email = q.email;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE p\\nFROM Person p, Person q\\nWHERE p.id > q.id AND p.email = q.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2421320,
                "title": "simple-solution-self-join",
                "content": "**Approach**\\nLet a be the id and duplicate mail we want to delete\\nwhen we use inner join on person a and person b , we will get the intersection on the given conditions. \\n\\n```\\ndelete a\\nfrom Person a inner join Person b on\\na.email=b.email and a.id>b.id;\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "**Approach**\\nLet a be the id and duplicate mail we want to delete\\nwhen we use inner join on person a and person b , we will get the intersection on the given conditions. \\n\\n```\\ndelete a\\nfrom Person a inner join Person b on\\na.email=b.email and a.id>b.id;\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 2411969,
                "title": "easy-single-line-query-ms-sql-server",
                "content": "```delete from Person where id not in (select min(id) from Person group by Person.email);```",
                "solutionTags": [],
                "code": "```delete from Person where id not in (select min(id) from Person group by Person.email);```",
                "codeTag": "Unknown"
            },
            {
                "id": 2405179,
                "title": "simple-solution-using-delete-join",
                "content": "```\\nDELETE E1 FROM person AS E1  \\nINNER JOIN person AS E2   \\nWHERE E1.id>E2.id \\nAND E1.email=E2.email;  \\n```\\n**Upvote if you like the solution.**",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE E1 FROM person AS E1  \\nINNER JOIN person AS E2   \\nWHERE E1.id>E2.id \\nAND E1.email=E2.email;  \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2399452,
                "title": "using-nested-query-less-time-complexity-easy-explanation",
                "content": "delete from Person \\nwhere id not in \\n\\t(select * \\n\\t\\tfrom (select min(id) \\n\\t\\t\\t\\tfrom Person group by email) p);\\n\\t\\t\\t\\t\\n\\nhere in \"***select min(id) from Person group by email***\" we are creating a table that contains only minimum id of every distinct email as group by command groups all the distinct values. then storing it in \"*p*\" as an alias.\\nAfter that we are using this nested query to form a list from which the outer query is deleting the rows whose id is not matching with the id present in the list.\\n\\n**please upvaote it if you like the explanation :-) **",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "delete from Person \\nwhere id not in \\n\\t(select * \\n\\t\\tfrom (select min(id) \\n\\t\\t\\t\\tfrom Person group by email) p);\\n\\t\\t\\t\\t\\n\\nhere in \"***select min(id) from Person group by email***\" we are creating a table that contains only minimum id of every distinct email as group by command groups all the distinct values. then storing it in \"*p*\" as an alias.\\nAfter that we are using this nested query to form a list from which the outer query is deleting the rows whose id is not matching with the id present in the list.\\n\\n**please upvaote it if you like the explanation :-) **",
                "codeTag": "Unknown"
            },
            {
                "id": 2331056,
                "title": "mysql-delete-using-two-person-instances",
                "content": "```\\nDELETE p2 FROM Person as p1 , Person as p2\\nWHERE p1.id<p2.id AND p1.email=p2.email",
                "solutionTags": [],
                "code": "```\\nDELETE p2 FROM Person as p1 , Person as p2\\nWHERE p1.id<p2.id AND p1.email=p2.email",
                "codeTag": "Unknown"
            },
            {
                "id": 2296068,
                "title": "oracle-simple-and-best-solution",
                "content": "# Please upvote if you find it helpful, thank you.\\n```\\n/*\\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your PL/SQL query statement below\\n */\\n\\nDELETE FROM person\\nWHERE id NOT IN\\n(\\n    SELECT MIN(id)\\n    FROM person \\n    GROUP BY email;\\n);\\n```",
                "solutionTags": [
                    "MySQL",
                    "Oracle"
                ],
                "code": "```\\n/*\\n Please write a DELETE statement and DO NOT write a SELECT statement.\\n Write your PL/SQL query statement below\\n */\\n\\nDELETE FROM person\\nWHERE id NOT IN\\n(\\n    SELECT MIN(id)\\n    FROM person \\n    GROUP BY email;\\n);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2264863,
                "title": "mysql-select-statement-and-delete-statement",
                "content": "**Please Upvote if you like it**\\nWe can select Min id rows from table then check id exist condition in selected rows tables.\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\nDELETE FROM Person WHERE id NOT IN \\n    (SELECT * FROM (SELECT MIN(n.id) FROM Person n GROUP BY n.email) as x)\\n\\n\\n```",
                "solutionTags": [],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\nDELETE FROM Person WHERE id NOT IN \\n    (SELECT * FROM (SELECT MIN(n.id) FROM Person n GROUP BY n.email) as x)\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2249046,
                "title": "oracle",
                "content": "```\\nDELETE FROM person p WHERE p.id <> (SELECT MIN(id) FROM person WHERE email = p.email);",
                "solutionTags": [],
                "code": "```\\nDELETE FROM person p WHERE p.id <> (SELECT MIN(id) FROM person WHERE email = p.email);",
                "codeTag": "Unknown"
            },
            {
                "id": 2212279,
                "title": "2-approach-mysql-simple-and-easy",
                "content": "// 1 - Approach\\n\\n\\tDELETE P    \\n\\t\\t\\tFROM person p , person q \\n\\t\\t\\t\\tWHERE p.id > q.id AND  p.email = q.email\\n\\n// 2 -Approach\\n\\t\\t\\t\\t\\n\\t\\tDELETE p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\t\\t\\t\\tFROM person as p1\\n\\t\\t\\t\\tINNER JOIN person as p2\\n\\t\\tWHERE p1.id < p2.id and p1.email = p2.email\\n\\t\\t\\t\\t\\n\\t",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "// 1 - Approach\\n\\n\\tDELETE P    \\n\\t\\t\\tFROM person p , person q \\n\\t\\t\\t\\tWHERE p.id > q.id AND  p.email = q.email\\n\\n// 2 -Approach\\n\\t\\t\\t\\t\\n\\t\\tDELETE p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\t\\t\\t\\tFROM person as p1\\n\\t\\t\\t\\tINNER JOIN person as p2\\n\\t\\tWHERE p1.id < p2.id and p1.email = p2.email\\n\\t\\t\\t\\t\\n\\t",
                "codeTag": "Unknown"
            },
            {
                "id": 2182578,
                "title": "simple-mysql-solution",
                "content": "```\\nDELETE P1\\nFROM\\n    Person P1,\\n    Person P2\\nWHERE\\n    P1.Email = P2.Email\\n    AND P1.Id > P2.Id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE P1\\nFROM\\n    Person P1,\\n    Person P2\\nWHERE\\n    P1.Email = P2.Email\\n    AND P1.Id > P2.Id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2176339,
                "title": "mysql-solution-using-join",
                "content": "``` DELETE P1\\nFROM person P1\\nJOIN person P2\\nWHERE P1.id > P2.id AND P1.email = P2.email```\\n\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "``` DELETE P1\\nFROM person P1\\nJOIN person P2\\nWHERE P1.id > P2.id AND P1.email = P2.email```",
                "codeTag": "Unknown"
            },
            {
                "id": 2118524,
                "title": "simple-solution-with-using-delete-and-inner-join",
                "content": "```\\nDELETE p2.*\\nFROM Person p1 INNER JOIN Person P2 ON p1.email = p2.email AND p1.id < p2.id\\n```\\n\\n##### EXPLANATION:\\n**For simply using INNER JOIN as below**\\n\\n* `FROM Person p1 INNER JOIN Person P2 ON p1.email = p2.email`\\n\\nWe\\'ll get the following table - \\n\\np1.id | p1.email | p2.id | p2.email\\n\\n1 | john@example.com | 1 | john@example.com\\n\\n3 | john@example.com | 1 | john@example.com\\n\\n2 | bob@example.com | 2 | bob@example.com\\n\\n1 | john@example.com | 3 | john@example.com\\n\\n3 | john@example.com | 3 | john@example.com\\n\\n**For adding another condition by AND to the INNER JOIN from as below**\\n\\n* `FROM Person p1 INNER JOIN Person P2 ON p1.email = p2.email AND p1.id < p2.id`\\n\\nWe\\'ll get the following table - \\n\\np1.id | p1.email | p2.id | p2.email\\n\\n1 | john@example.com | 3 | john@example.com\\n\\n**So for DELETE part as below**\\n\\n* `DELETE p2.*`\\n\\nIt means we want to delete the p2.id and p2.email columns that match rows from the p2 table\\n\\nWhich is - \\n\\np2.id | p2.email\\n\\n3 | john@example.com\\n\\n**Original p2 table is as below**\\n\\nid | email\\n\\n1 | john@example.com\\n\\n2 | bob@example.com\\n\\n3 | john@example.com\\n\\n**The p2 table after the DELETE is as below**\\n\\nid | email\\n\\n1 | john@example.com\\n\\n2 | bob@example.com",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE p2.*\\nFROM Person p1 INNER JOIN Person P2 ON p1.email = p2.email AND p1.id < p2.id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2082630,
                "title": "group-by-min-usage",
                "content": "```\\nDELETE FROM Person\\nWHERE id NOT IN (\\n    SELECT id \\n    FROM (\\n        SELECT MIN(id) AS id, email \\n        FROM Person\\n        GROUP BY email) as sub\\n    )\\n```\\n",
                "solutionTags": [],
                "code": "```\\nDELETE FROM Person\\nWHERE id NOT IN (\\n    SELECT id \\n    FROM (\\n        SELECT MIN(id) AS id, email \\n        FROM Person\\n        GROUP BY email) as sub\\n    )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2054792,
                "title": "simple-solution-in-oracle-using-delete-and-sub-query",
                "content": "```\\nDELETE FROM Person\\n    WHERE Id IN\\n    (SELECT P1.Id FROM Person P1, Person P2 \\n\\t     WHERE P1.Id > P2.Id AND P1.Email = P2.Email);\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE FROM Person\\n    WHERE Id IN\\n    (SELECT P1.Id FROM Person P1, Person P2 \\n\\t     WHERE P1.Id > P2.Id AND P1.Email = P2.Email);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2009512,
                "title": "best-without-join",
                "content": "DELETE FROM Person \\nWHERE id not in (SELECT p2.minid FROM(\\n    SELECT MIN( id ) AS minid \\n    FROM Person \\n    GROUP BY email) p2\\n    )",
                "solutionTags": [],
                "code": "DELETE FROM Person \\nWHERE id not in (SELECT p2.minid FROM(\\n    SELECT MIN( id ) AS minid \\n    FROM Person \\n    GROUP BY email) p2\\n    )",
                "codeTag": "Unknown"
            },
            {
                "id": 2004453,
                "title": "my-solution-using-inner-query-and-min-without-join",
                "content": "```\\nDELETE FROM PERSON \\n\\tWHERE ID NOT IN (SELECT MIN(ID) \\n\\t\\t\\t\\t\\t\\t\\tFROM PERSON \\n\\t\\t\\t\\t\\t\\t\\t GROUP BY EMAIL)  \\n```\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n1. In the inner sub query we are finding the mails which we need as a output.\\n2. After finding the relevant records we are removing rest of th records using NOT IN operator.",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\nDELETE FROM PERSON \\n\\tWHERE ID NOT IN (SELECT MIN(ID) \\n\\t\\t\\t\\t\\t\\t\\tFROM PERSON \\n\\t\\t\\t\\t\\t\\t\\t GROUP BY EMAIL)  \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1981592,
                "title": "delete-duplicate-emails",
                "content": "**# Please write a DELETE statement and DO NOT write a SELECT statement.**\\n**# Write your MySQL query statement below**\\ndelete p1 from person p1,person p2 where p1.email = p2.email and p1.id > p2.id;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "**# Please write a DELETE statement and DO NOT write a SELECT statement.**\\n**# Write your MySQL query statement below**\\ndelete p1 from person p1,person p2 where p1.email = p2.email and p1.id > p2.id;",
                "codeTag": "Unknown"
            },
            {
                "id": 1977845,
                "title": "simple-solution",
                "content": "```\\nDELETE p FROM Person p, Person q\\nWHERE p.email= q.email AND p.id>q.id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE p FROM Person p, Person q\\nWHERE p.email= q.email AND p.id>q.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1961722,
                "title": "mysql-solution",
                "content": "# Solution\\n**Faster** then **97**%\\n```\\nwith cte as (   \\n  select id, email, \\n  rank() over(PARTITION by email ORDER BY id) as rn \\n  from person \\n)\\ndelete from person where id in (select id from cte where rn>1)\\n```\\nWhen you need to **delete** duplicates you must not only find them by using **group by**. You also need to **rank** duplicates to find first emails that has duplicates.\\nIf you find this **solution** and **explanation** helpful, please **upvote** it for others people.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nwith cte as (   \\n  select id, email, \\n  rank() over(PARTITION by email ORDER BY id) as rn \\n  from person \\n)\\ndelete from person where id in (select id from cte where rn>1)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1941177,
                "title": "easy-trick",
                "content": "Just take out all the minimum id grouped by Email in the subquerry. \\n\\n```\\ndelete from Person where id not in (select min(id) from Person group by email)\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\ndelete from Person where id not in (select min(id) from Person group by email)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1888764,
                "title": "mysql-solution",
                "content": "```\\n# Write your MySQL query statement below\\n\\nDELETE t1 FROM Person t1\\nINNER JOIN Person t2\\nWHERE\\n    t1.id > t2.id AND\\n    t1.email = t2.email;\\n```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\n\\nDELETE t1 FROM Person t1\\nINNER JOIN Person t2\\nWHERE\\n    t1.id > t2.id AND\\n    t1.email = t2.email;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1865259,
                "title": "95-57-100",
                "content": "\\'\\'\\'\\nWITH p1 as(\\n    SELECT MIN(id)\\n    FROM person\\n    GROUP BY email\\n    )\\n\\nDELETE FROM person\\nWHERE id NOT IN (\\n    SELECT *\\n    FROM p1\\n    );\\n\\'\\'\\'",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "\\'\\'\\'\\nWITH p1 as(\\n    SELECT MIN(id)\\n    FROM person\\n    GROUP BY email\\n    )\\n\\nDELETE FROM person\\nWHERE id NOT IN (\\n    SELECT *\\n    FROM p1\\n    );\\n\\'\\'\\'",
                "codeTag": "Unknown"
            },
            {
                "id": 1670252,
                "title": "mysql-group-by-and-delete",
                "content": "#### My solution:\\n\\n```SQL\\n# Write your MySQL query statement below\\n\\nDELETE FROM Person\\nWHERE id NOT IN (\\n    SELECT id FROM\\n    (\\n        SELECT MIN(id) id FROM Person\\n        GROUP BY email\\n    ) AS tmp\\n)\\n```\\n\\n##### Notes:\\n\\n- Use `GROUP BY` to deduplicate\\n- You can\\'t query and delete from the same table at the same time in MYSQL, so there\\'s another layer of subquery.\\n- The most inner subquery needs to have an alias. \\n\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```SQL\\n# Write your MySQL query statement below\\n\\nDELETE FROM Person\\nWHERE id NOT IN (\\n    SELECT id FROM\\n    (\\n        SELECT MIN(id) id FROM Person\\n        GROUP BY email\\n    ) AS tmp\\n)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1634521,
                "title": "solution-2021-dec",
                "content": "```\\nDELETE \\n    p1 \\nFROM \\n    Person p1, Person p2\\nWHERE \\n    p1.id > p2.id\\nAND \\n    p1.email = p2.email \\n```",
                "solutionTags": [],
                "code": "```\\nDELETE \\n    p1 \\nFROM \\n    Person p1, Person p2\\nWHERE \\n    p1.id > p2.id\\nAND \\n    p1.email = p2.email \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1448155,
                "title": "simple-and-easy",
                "content": "```sql\\nDELETE P1\\nFROM Person P1, Person P2\\nWHERE P1.Email=P2.Email AND P1.id>P2.id;```",
                "solutionTags": [],
                "code": "```sql\\nDELETE P1\\nFROM Person P1, Person P2\\nWHERE P1.Email=P2.Email AND P1.id>P2.id;```",
                "codeTag": "Unknown"
            },
            {
                "id": 1377749,
                "title": "reason-for-mysql-error-1093-can-t-specify-target-table-for-update-in-from-clause",
                "content": "With below query:\\n\\n```\\ndelete from Person where Id not in (\\n\\tselect min(Id) as Id from Person group by Email\\n)\\n```\\n\\nyou will get error: **You can\\'t specify target table \\'Person\\' for update in FROM clause**,\\n\\nTo solve this problem, you have to **wrap** the **inner select** inside another select:\\n\\n```\\ndelete from Person where Id not in ( \\n    select Id from (\\n        select min(Id) from Person group by Email\\n    )  as c\\n)\\n```\\n\\nThe reason for that is:\\n>MySQL doesn\\u2019t allow updates to a table when you are also using that same table in an inner select, you can\\'t modify the same table which you use in the SELECT part\\n\\nBut **Why?**\\n\\nWrapping the inner select inside another select will **separate** inner select **from** the *update* or *delete* statement. Which **creates** the **temporary table** copied of the *original* table. The temporary table may then be used as the source criteria for the update statement.\\n\\nWithout that, inner select clause may use data which *has been deleted* by outer query as the query is in progress.\\n\\n--------------------\\n\\n\\n**Reference:**\\n1. [MySQL can\\u2019t specify target table for update in FROM clause](https://www.codeproject.com/Tips/831164/MySQL-can-t-specify-target-table-for-update-in-FRO)\\n2. [A skillful mysql solution  avoid select and update conflict](https://leetcode.com/problems/delete-duplicate-emails/discuss/55614/A-skillful-mysql-solution-avoid-%22-select-and-update-conflict%22)\\n",
                "solutionTags": [],
                "code": "```\\ndelete from Person where Id not in (\\n\\tselect min(Id) as Id from Person group by Email\\n)\\n```\n```\\ndelete from Person where Id not in ( \\n    select Id from (\\n        select min(Id) from Person group by Email\\n    )  as c\\n)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1324582,
                "title": "mysql-94-99",
                "content": "```\\nwith cte1 as(\\nselect id,row_number() over (partition by Email order by Id) as roww\\n    from Person\\n)\\n\\ndelete from Person where id in ( select id from cte1 where roww>1)\\n```\\n",
                "solutionTags": [],
                "code": "```\\nwith cte1 as(\\nselect id,row_number() over (partition by Email order by Id) as roww\\n    from Person\\n)\\n\\ndelete from Person where id in ( select id from cte1 where roww>1)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1271594,
                "title": "sql-join-1553-ms-0-mb-faster-than-78",
                "content": "```\\ndelete p1 \\nfrom Person p1\\njoin Person p2 on p1.Email = p2.Email\\nwhere p1.Id > p2.Id;\\n```",
                "solutionTags": [],
                "code": "```\\ndelete p1 \\nfrom Person p1\\njoin Person p2 on p1.Email = p2.Email\\nwhere p1.Id > p2.Id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1214899,
                "title": "simple-solution-with-window-function",
                "content": "```\\n# Write your MySQL query statement below\\n\\nWITH CTE AS (SELECT \\nID,EMAIL,\\nROW_NUMBER() OVER (PARTITION BY EMAIL ORDER BY ID) AS R\\nFROM PERSON \\n             )\\n             DELETE FROM PERSON WHERE ID IN (SELECT ID FROM CTE WHERE R>1)\\n\\t\\t\\t ```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\n\\nWITH CTE AS (SELECT \\nID,EMAIL,\\nROW_NUMBER() OVER (PARTITION BY EMAIL ORDER BY ID) AS R\\nFROM PERSON \\n             )\\n             DELETE FROM PERSON WHERE ID IN (SELECT ID FROM CTE WHERE R>1)\\n\\t\\t\\t ```",
                "codeTag": "Unknown"
            },
            {
                "id": 1153477,
                "title": "oracle-solution",
                "content": "```\\nwith temp as (\\nselect min(Id) as Id from person group by email)\\ndelete from person where id not in(select id from temp)\\n```",
                "solutionTags": [],
                "code": "```\\nwith temp as (\\nselect min(Id) as Id from person group by email)\\ndelete from person where id not in(select id from temp)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1066050,
                "title": "solution-using-group-by",
                "content": "```\\ndelete from person\\nwhere id not in\\n    (select * from\\n        (select min(p.id)\\n        from person p\\n        group by p.email) \\n\\ttmp);\\n```",
                "solutionTags": [],
                "code": "```\\ndelete from person\\nwhere id not in\\n    (select * from\\n        (select min(p.id)\\n        from person p\\n        group by p.email) \\n\\ttmp);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 862056,
                "title": "use-min-and-group-by",
                "content": "```\\n# Write your MySQL query statement below\\nDELETE \\nFROM Person \\nWHERE Id NOT IN (SELECT Id FROM \\n                              (SELECT MIN(Id) AS Id \\n\\t\\t\\t\\t\\t\\t\\t   FROM Person \\n\\t\\t\\t\\t\\t\\t\\t   GROUP BY Email) AS m )\\n```\\n\\u56E0\\u4E3A\\u662Fmysql\\u6240\\u4EE5\\u8FD9\\u91CC\\u8981\\u591A\\u5D4C\\u5957\\u4E00\\u5C42select\\uFF0C\\u5426\\u5219\\u4F1A\\u4FDD\\u9519You can\\'t specify target table \\'Person\\' for update in FROM clause\\n\\u5982\\u679C\\u662Foracle\\u5E94\\u8BE5\\u53EF\\u4EE5\\u7701\\u53BB\\u5D4C\\u5957\\u5C42\\uFF0C\\u5177\\u4F53\\u8BE6\\u89E3\\u53C2\\u8003[](http://)",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nDELETE \\nFROM Person \\nWHERE Id NOT IN (SELECT Id FROM \\n                              (SELECT MIN(Id) AS Id \\n\\t\\t\\t\\t\\t\\t\\t   FROM Person \\n\\t\\t\\t\\t\\t\\t\\t   GROUP BY Email) AS m )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 699279,
                "title": "errr-why-no-sql-server",
                "content": "Had to do some googling because they don\\'t allow MSSQL answers and I don\\'t know MySQL, but it wasn\\'t so bad:\\n\\n```\\nDELETE p1 \\nFROM Person p1 \\nINNER JOIN Person p2\\nWHERE\\n    p1.id > p2.id\\nAND p1.Email = p2.Email\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE p1 \\nFROM Person p1 \\nINNER JOIN Person p2\\nWHERE\\n    p1.id > p2.id\\nAND p1.Email = p2.Email\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 679671,
                "title": "mysql-solution-with-comments",
                "content": "```\\nDELETE FROM Person WHERE Id NOT IN (\\n    -- Use temperary table as a reference of what we want at the end\\n    SELECT tempId FROM (\\n        -- Rename the MIN(Id) column as \\'tempID\\' so we can select in above query\\n        SELECT MIN(Id) AS tempId FROM Person GROUP BY Email\\n    )AS minID\\n);  \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nDELETE FROM Person WHERE Id NOT IN (\\n    -- Use temperary table as a reference of what we want at the end\\n    SELECT tempId FROM (\\n        -- Rename the MIN(Id) column as \\'tempID\\' so we can select in above query\\n        SELECT MIN(Id) AS tempId FROM Person GROUP BY Email\\n    )AS minID\\n);  \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 465941,
                "title": "mysql",
                "content": "```\\nDELETE P2\\nFROM Person P1, Person P2 \\nWHERE P1.Email=P2.Email AND P2.Id>P1.Id;",
                "solutionTags": [],
                "code": "```\\nDELETE P2\\nFROM Person P1, Person P2 \\nWHERE P1.Email=P2.Email AND P2.Id>P1.Id;",
                "codeTag": "Unknown"
            },
            {
                "id": 386231,
                "title": "mysql-solution",
                "content": "```\\n# Write your MySQL query statement below\\nDELETE FROM Person\\nWHERE Id NOT IN (\\n\\t\\tSELECT a.Id\\n\\t\\tFROM (\\n\\t\\t\\tSELECT MIN(Id) AS Id, Email\\n\\t\\t\\tFROM Person\\n\\t\\t\\tGROUP BY Email\\n\\t\\t) a\\n\\t)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nDELETE FROM Person\\nWHERE Id NOT IN (\\n\\t\\tSELECT a.Id\\n\\t\\tFROM (\\n\\t\\t\\tSELECT MIN(Id) AS Id, Email\\n\\t\\t\\tFROM Person\\n\\t\\t\\tGROUP BY Email\\n\\t\\t) a\\n\\t)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 383336,
                "title": "no-join-mysql-faster-than-75",
                "content": "This one got pretty gnarly pretty quickly. \\n\\nI had to nest subqueries to get around the sql rules that disallow deleting from tables in the `FROM` clause. \\n\\nThis basically just creates a list of all unique emails and the min IDs of duplicate emails and deletes everything else.\\n\\n```\\n# Write your MySQL query statement below\\n\\nDELETE \\nFROM person\\nWHERE person.ID NOT IN (\\n    SELECT a.id\\n    FROM (SELECT min(id) as ID\\n          FROM person\\n          GROUP BY email\\n          HAVING count(email) > 1\\n         ) a\\n    ) \\nAND person.ID NOT IN (\\n    SELECT id \\n    FROM ( SELECT id\\n          FROM person \\n          GROUP BY email\\n          HAVING count(email) = 1\\n          ) b\\n) \\n```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\n\\nDELETE \\nFROM person\\nWHERE person.ID NOT IN (\\n    SELECT a.id\\n    FROM (SELECT min(id) as ID\\n          FROM person\\n          GROUP BY email\\n          HAVING count(email) > 1\\n         ) a\\n    ) \\nAND person.ID NOT IN (\\n    SELECT id \\n    FROM ( SELECT id\\n          FROM person \\n          GROUP BY email\\n          HAVING count(email) = 1\\n          ) b\\n) \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 192873,
                "title": "mysql-hard-solution-google-netflix-amazon-blockbuster-tier-1-2-3",
                "content": "```\\ndelete p2 from Person p1, Person p2 where p1.Email = p2.Email and p2.Id > p1.Id\\n```",
                "solutionTags": [],
                "code": "```\\ndelete p2 from Person p1, Person p2 where p1.Email = p2.Email and p2.Id > p1.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 150984,
                "title": "mysql-without-using-join-beats-88-96",
                "content": "```\\nDELETE\\nFrom Person\\nWHERE Id NOT IN (SELECT * FROM\\n                (SELECT MIN(p1.Id)\\n                FROM Person p1\\n                GROUP BY p1.Email) AS tmp);\\n```\\n\\nOne thing I need to mention is that the SELECT * FROM ... AS tmp is requred in Mysql, otherwise you would get a werid error \"You can\\'t specify target table \\'Person\\' for update in FROM clause\".\\nMy guess is that Mysql won\\'t make copy for the original table even with alias p1 so just as other language you cannot update the table when you are using data inside this table as conditions.",
                "solutionTags": [],
                "code": "```\\nDELETE\\nFrom Person\\nWHERE Id NOT IN (SELECT * FROM\\n                (SELECT MIN(p1.Id)\\n                FROM Person p1\\n                GROUP BY p1.Email) AS tmp);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 55560,
                "title": "solution-with-join-that-beats-91",
                "content": "```\\nDELETE P1.*\\nFROM Person AS P1 LEFT JOIN\\n(SELECT Min(P.Id) AS Id FROM Person AS P GROUP BY P.Email) AS P2\\nON P1.Id = P2.Id\\nWHERE P2.Id Is Null;\\n```",
                "solutionTags": [],
                "code": "```\\nDELETE P1.*\\nFROM Person AS P1 LEFT JOIN\\n(SELECT Min(P.Id) AS Id FROM Person AS P GROUP BY P.Email) AS P2\\nON P1.Id = P2.Id\\nWHERE P2.Id Is Null;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3948690,
                "title": "delete-duplicate-emails-pandas",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person):\\n    person.sort_values(by=\\'id\\',ascending=True,inplace=True)\\n    person.drop_duplicates(subset=\\'email\\',keep=\\'first\\',inplace=True)\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person):\\n    person.sort_values(by=\\'id\\',ascending=True,inplace=True)\\n    person.drop_duplicates(subset=\\'email\\',keep=\\'first\\',inplace=True)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3909345,
                "title": "easiest",
                "content": "Easiest method \\n\\n#INCASE DONT KNOW\\nWhen inplace=True is passed, the data is renamed in place\\n\\nWhen inplace=False is passed (this is the default value, so isn\\'t necessary), performs the operation and returns a copy of the object, so you\\'d use\\n\\n _\\n\\n# Code\\n```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    # sorting\\n\\n    person.sort_values(by=\\'id\\',ascending=True,inplace=True)\\n\\n    #deleting duplicte\\n\\n    person.drop_duplicates(subset=\\'email\\',keep=\\'first\\',inplace=True)\\n\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    # sorting\\n\\n    person.sort_values(by=\\'id\\',ascending=True,inplace=True)\\n\\n    #deleting duplicte\\n\\n    person.drop_duplicates(subset=\\'email\\',keep=\\'first\\',inplace=True)\\n\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3907158,
                "title": "pandas-code",
                "content": "\\n# Code\\n```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    person.sort_values(by = \\'id\\', ascending = True, inplace = True)\\n    person.drop_duplicates(subset=\\'email\\', keep = \\'first\\', inplace = True)\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\n# Modify Person in place\\ndef delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    person.sort_values(by = \\'id\\', ascending = True, inplace = True)\\n    person.drop_duplicates(subset=\\'email\\', keep = \\'first\\', inplace = True)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3567414,
                "title": "simplified-step-by-step-solution-and-explanation-beats-82-6",
                "content": "# ***Please Upvote my solution, if you find it helpful ;)***\\n\\n# Intuition\\nThe intuition behind the query is to identify duplicate email records in a table and delete all but one instance of each unique email address. By comparing the email addresses and using the ID as a tiebreaker, we can determine which records are duplicates and which one to keep.\\n\\n# Approach\\nThe approach involves a self-join operation on the table, matching records with the same email address. By comparing the IDs, we can determine which duplicates to delete. The query selects the records to be deleted and uses the DELETE statement to remove them from the table.\\n\\nThe condition **P1.id > P2.id** ensures that we keep the record with the lowest ID value and delete the duplicates. By comparing the ID values, we retain the earliest or original record while deleting the duplicates that have higher ID values.\\n\\n# Complexity\\n**Time complexity:**\\nThe complexity of this approach depends on the size of the table and the number of duplicate email records. Let\\'s denote n as the number of records in the table. The time complexity of this approach is $$O(n^2)$$ because it involves a self-join operation. However, the actual execution time may vary based on the database engine and indexing.\\n\\n\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n\\nDELETE P1 FROM Person P1\\nJOIN Person P2 USING(email)\\nWHERE P1.id>P2.id\\n```\\n\\n***Please Upvote my solution, if you find it helpful ;)***\\n\\n![6a87bc25-d70b-424f-9e60-7da6f345b82a_1673875931.8933976.jpeg](https://assets.leetcode.com/users/images/c693f5cf-ff82-4efb-93c0-c23dfe251020_1685478197.3920174.jpeg)\\n",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\n# Please write a DELETE statement and DO NOT write a SELECT statement.\\n# Write your MySQL query statement below\\n\\nDELETE P1 FROM Person P1\\nJOIN Person P2 USING(email)\\nWHERE P1.id>P2.id\\n```",
                "codeTag": "Unknown"
            }
        ],
        "discussions": [
            {
                "id": 1566296,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567779,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1564890,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567391,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567338,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1566407,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1566901,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567027,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1566080,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567361,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1566296,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567779,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1564890,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567391,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567338,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1566407,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1566901,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567027,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1566080,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1567361,
                "content": [
                    {
                        "username": "yxy_4718",
                        "content": "I am copying one of solutions and still did not pass.. looks like the out put for this question won\\'t change no matter what code you put...\\n\\nLeetcode Bug?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Easy solution:delete p from person p, person q where p.id > q.id and p.email = q.email\\n"
                    },
                    {
                        "username": "slleer",
                        "content": "I\\'m having the same problem. Tried my solution, error. Tried a few of the recommended solutions, same error. Tried MYSQL, no error. But I think there is a bug for the MS SQL submissions. And before anyone suggests, I\\'m not using select anywhere in my solution. I tried using a join, tried using sub query with min/group by, still getting error. Error: No results. Previous SQL was not a query."
                    },
                    {
                        "username": "Vex-Devs",
                        "content": "Thats coz of hidden test cases that you are not passing which mandate us to not to use Select keyword"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "suryavardhanyanduru",
                        "content": "no use of select statement in this problem "
                    },
                    {
                        "username": "ASHOK_KUMAR_MEGHVANSHI",
                        "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 790 ms, faster than 70.51% of MySQL online submissions for Delete Duplicate Emails.\\n# Memory Usage: 0B, less than 100.00% of MySQL online submissions for Delete Duplicate Emails.\\n\\tDELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id;"
                    },
                    {
                        "username": "ajak6",
                        "content": "    DELETE p from Person p, Person q where p.Id>q.Id AND q.Email=p.Email \\n\\nwill keep the minimum id field"
                    },
                    {
                        "username": "hero4future",
                        "content": "good one, what i attempted was pretty much delete id if id is not min group by email"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "matay",
                        "content": "Did anyone receive the error message saying \"You can\\'t specify target table \\'Person\\' for update in FROM clause\"? It doesn\\'t make sense to me as we are deleting rows from Person and it should be there. Any ideas or opinion? Is it an erroneous sitution in leetcode system?"
                    },
                    {
                        "username": "jeffreycashion",
                        "content": "SQL doesn\\'t like you selecting from the same table in a subquery that you are trying to delete from in the outer query. Logically it seems like you should be able to (Run subquery, then process delete command). An easy workaround is a temp-table to store the select results first, then reference this temp table in your DELETE command. There are other ways, this is just one."
                    },
                    {
                        "username": "ganesh_vasi",
                        "content": "https://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause"
                    },
                    {
                        "username": "stella01",
                        "content": "delete from Person \nwhere Id not in (select min_id from\n                 (select min(Id) as min_id from Person group by Email) as a)"
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nplease help me out on this one, why it doesn\\'t work?"
                    },
                    {
                        "username": "passionstar",
                        "content": "you are not suppose to use select statement in delete statement.thats what the question is all about."
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@siddhant_samal](/siddhant_samal) as min_id is giving name/alias to min(id) which we are using with select min_id from(...)"
                    },
                    {
                        "username": "siddhant_samal",
                        "content": "hey, can someone please explain me why we gave \\'as min_id \\' .\\nI was trying to do this like\\n\\n(select id from (select min(id) from Person group by email) p );\\n\\nand it did\\'nt work but when i put as min_id id worked\\n\\nplzzz help \\n"
                    },
                    {
                        "username": "Daniel2112",
                        "content": "\"\\nDELETE a.*\\nFROM Person a\\nJOIN Person b\\n    ON a.email = b.email\\nwhere a.id > b.id\\n\""
                    },
                    {
                        "username": "Sohail17",
                        "content": "[@WEIQI_ZHANG](/WEIQI_ZHANG)  since here we are comparing table to itself to check the duplicate emails with greater id  hence we delete records from alias a because a.id > b.id a table will hold the greater id with the same emails\\n"
                    },
                    {
                        "username": "WEIQI_ZHANG",
                        "content": "Why can\\'t use DELETE a.id, a.email  FROM ? AND why can\\'t use DELETE FROM?  \\nIF use JOIN, must use a.*?\\nThank you!"
                    },
                    {
                        "username": "udarajag",
                        "content": "There seems to be an issue with the query execution engine\\n\\nno matter what query i execute it will give me the input as my output..."
                    },
                    {
                        "username": "tejkiran_v",
                        "content": "That\\'s because they are expecting us to modify the DataFrame in place (instead of modyfing the copy of DataFrame which was passed to the function).\\nTry having `inplace=True` as the last arguments to each of the pandas function without catching it in another variable. This should work.\\nExample:\\n```\\nperson.sort_values(\"id\", inplace=True)\\nperson.drop_duplicates(\"email\", keep=\"first\", inplace=True)\\n```"
                    },
                    {
                        "username": "user1703dJ",
                        "content": "true"
                    },
                    {
                        "username": "user3761k",
                        "content": "[@Zolraaph](/Zolraaph) yes true"
                    },
                    {
                        "username": "Zolraaph",
                        "content": "Can confirm."
                    },
                    {
                        "username": "davina1612",
                        "content": "DELETE P1 FROM PERSON  P1, PERSON  P2\\nWHERE P1.Email = p2.Email AND P1.Id>P2.Id ;"
                    },
                    {
                        "username": "harsh651106",
                        "content": "why its not working: select DISTINCT id, email from Person;"
                    },
                    {
                        "username": "user5560Wr",
                        "content": "wow this is so succinct by using self-join in delete statement!! Thanks!"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "[@Shatakshi raman](/davina1612) this is quit intresting to use table P1 name for delete, can u explain the logic behind it.what if we remove P1 how will query know from which table to delete rows. Thanks"
                    },
                    {
                        "username": "bk7159",
                        "content": "does this returns only p1 table as result?"
                    },
                    {
                        "username": "taejin",
                        "content": "Select min(Id) as Id, Email\\nfrom Person\\ngroup by Email"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) oh, i finded. we must delete, don\\'t select"
                    },
                    {
                        "username": "longnh09",
                        "content": "[@miaotech](/miaotech) i same"
                    },
                    {
                        "username": "miaotech",
                        "content": "group by doesn\\'t work, does anyone knows why? thx!"
                    },
                    {
                        "username": "uttara223",
                        "content": "DELETE\\nFROM \\nperson\\nWHERE Id NOT IN\\n(\\nSELECT minid\\nFROM\\n(SELECT email, min(id) as minid\\nFROM Person\\nGROUP BY email ) test)"
                    },
                    {
                        "username": "yl1243",
                        "content": "[@hpareek1995](/hpareek1995) here is my solution, the min_id should be identify with created table name\\n\\ndelete from Person\\nwhere id not in (\\n    select a.min_id from (\\n        select email, min(id) as min_id from Person\\n        group by email\\n    ) as a\\n)"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "Hi Uttara thanks for your solution but why can\\'t we just use this ... it is showing wrong but can you help why\\n\\nDELETE\\nFROM\\nperson\\nWHERE Id NOT IN\\n(\\nSELECT min(id) \\nFROM Person\\nGROUP BY email ) "
                    }
                ]
            },
            {
                "id": 1566883,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1566765,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1966014,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1567778,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1567467,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1565836,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1569925,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1568322,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1568718,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1570763,
                "content": [
                    {
                        "username": "samuelmao415",
                        "content": "why can\\'t we have MS SQL for this question?"
                    },
                    {
                        "username": "user0307ut",
                        "content": "WITH CTE AS (\\n    SELECT MIN(id) as min_id, email\\n    FROM person\\n    GROUP BY email\\n    HAVING COUNT(*) > 1\\n)\\nDELETE FROM person\\nWHERE email IN (SELECT email FROM CTE) AND id NOT IN (SELECT min_id FROM CTE)"
                    },
                    {
                        "username": "woozylong",
                        "content": "delete from Person where id not in (select id from (select min(id) as id from Person group by email) as a);"
                    },
                    {
                        "username": "Swati0807",
                        "content": "there is a bug with this problem, the output is not changing no matter what you query."
                    },
                    {
                        "username": "lx0413",
                        "content": "*See https://www.mysqltutorial.org/mysql-delete-join/*\\nDELETE tb1\\nFROM Person tb1\\nJOIN Person tb2 ON tb1.email = tb2.email\\nWHERE tb1.id > tb2.id"
                    },
                    {
                        "username": "rauanbt",
                        "content": "DELETE P1\\nFROM person P1, person P2\\nwhere P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "CoderNYC",
                        "content": "    # Write your MySQL query statement below\\nDELETE p2 FROM Person p1, Person p2\\nWHERE p1.Email = p2. Email AND p1.Id < p2.Id"
                    },
                    {
                        "username": "Andylin97",
                        "content": "delete from person p\\nwhere id not in (select min(id)\\n                 from person\\n                 group by email);\\n\\t\\t\\t\\t \\nMy SQL query cannot run, I wonder know what problem in my SQL query. Thank you for ur time."
                    },
                    {
                        "username": "crystal_huangjin",
                        "content": "DELETE from person\\nwhere id not in (select id from (SELECT MIN(p.id) as id\\nfrom person as p\\nGROUP by p.email) as temp)"
                    },
                    {
                        "username": "saumyaprad",
                        "content": "WITH CTE AS \\n(select min(id) as mn, email from Person group by email)\\n\\ndelete from Person\\nwhere id not in (select mn from CTE)\\n"
                    },
                    {
                        "username": "leetcode_21",
                        "content": "This is not right, and could someone tell me why?\\nselect min(id), email from Person\\ngroup by email;"
                    },
                    {
                        "username": "yasmine_zaier",
                        "content": "It is noticed that we must not write a SELECT statement."
                    }
                ]
            },
            {
                "id": 1568650,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1568171,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1567000,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1827945,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1570901,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1570773,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1570632,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1570414,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1570002,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1569288,
                "content": [
                    {
                        "username": "jessiezhou0424",
                        "content": "delete p2\\nfrom person p1,person p2\\nwhere p1.email=p2.email and p2.id>p1.id;"
                    },
                    {
                        "username": "lalita90",
                        "content": "I understand that the problem has asked to delete the duplicate id with higher id in the table. But why don\\'t it shows up distinct email ids using \\nselect distinct email from person\\n\\nIt shows up all three email ids if i run above command."
                    },
                    {
                        "username": "Butcher001",
                        "content": "Can\\'t use distinct in delete function. "
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "me have the same issue"
                    },
                    {
                        "username": "MelodieHe",
                        "content": "\\nWITH tmp AS (SELECT MIN(Id) FROM Person GROUP BY Email)\\n\\nDELETE FROM Person WHERE Id NOT IN (SELECT * FROM tmp)"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "The question has a bug. No matter what query you write, the always returns the original table as output. I tried selecting a single row using where clause and it still returned the same thing."
                    },
                    {
                        "username": "AbrorErgashev",
                        "content": "1)\\nwith cte as\\n(select id,\\n        email,\\n        row_number()over(partition by email order by id) as rn\\n from person)\\n \\n delete from cte where rn != 1\\n\\n2)\\ndelete a from person a inner join person b on a.email = b.email where a.id > b.id\\n\\n\\n3)\\ndelete from person where id not in (select min(id) from person group by email)"
                    },
                    {
                        "username": "Zaraahmed06",
                        "content": ",,,\\nDELETE FROM PERSON\\nWHERE id not in\\n(\\nselect id\\nfrom(\\nSELECT id,email,\\nRANK() OVER( PARTITION BY email ORDER BY id) as \"rank\"\\nfrom person\\n) a \\nwhere a.rank=1)\\n,,,"
                    },
                    {
                        "username": "corve_flopper",
                        "content": "I want to use distinct statement, but it doesn\\'t work.\\nEven I just SELECT DISTINCT email FROM Person\\nThe output is stil 3 records\\nCan anyone help me figure out this?"
                    },
                    {
                        "username": "_aryan_kumar_2411",
                        "content": "i am facing the same problem.\\ni wrote \\nselect id,distinct email as \"email\" from person; \\nand its not working idk why...."
                    },
                    {
                        "username": "oak_omkar",
                        "content": "Delete p1 from Person p1\\nwhere p1.Id NOT IN\\n\\t(Select M.Id\\n    From(Select Id, Email, Rank() OVER(Partition by Email ORDER BY Id) as Rnk\\n        From Person) as M\\n    Where M.Rnk = 1)"
                    },
                    {
                        "username": "cmcho86",
                        "content": "Delete p1 FROM Person p1\\nINNER JOIN Person p2 \\nWHERE \\n    p1.id > p2.id AND\\n    p1.Email = p2. Email;"
                    },
                    {
                        "username": "XueyingDing",
                        "content": "why this code still output 3 email?\\n\"SELECT DISTINCT Email FROM Person;\"?"
                    }
                ]
            },
            {
                "id": 1569166,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 1569016,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 1567609,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 1567222,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 1566810,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 2034669,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 2006121,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 1958345,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 1954773,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 1805227,
                "content": [
                    {
                        "username": "xcw0754",
                        "content": "I usually click the \"run code\" button to check my solution before submit it. But this time, I cannot quite understand the result after I run my code. \\nI know what the question is. However, I am interested in how does leetcode return the result? \\nI've try to think that it may execute another code to load the table after my execution so that the result is always unchanged. Anyone can tell me something about that?\\n\\nMy code like that: \\n* SELECT MIN(id), Email FROM Person GROUP BY Email;"
                    },
                    {
                        "username": "xhSong",
                        "content": "\\n    delete from Person where Id not in (select min(Id) from Person group by Email)"
                    },
                    {
                        "username": "zakaria12314",
                        "content": "with x as (SELECT id, ROW_NUMBER() OVER(PARTITION BY EMAIL ORDER BY ID ASC) as RN FROM PERSON)\\n\\n\\nDELETE FROM Person WHERE id in (select id from x where RN >1)"
                    },
                    {
                        "username": "chenchenalcc",
                        "content": "\\tSELECT MIN(id), Email\\n\\tFROM Person\\n\\tGROUP BY Email;"
                    },
                    {
                        "username": "siddheshchalke45",
                        "content": "Following solution works in MSSQL.\\n\\nselect min(Id) as Id, Email\\nfrom Person\\ngroup by Email\\norder by Id\\n\\nAfter running this query it simply returns select * on table which is weird."
                    },
                    {
                        "username": "quanghm",
                        "content": "`For Pandas users, please note that you are supposed to modify Person in place.` -> bad practice"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Challenges like these are what make coding exciting! Remember, whether it\\'s in fashion or in code, it\\'s all about the details. Let\\'s tackle this with confidence and style! \\uD83D\\uDCA1\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\\uD83D\\uDC60\"\\n\\n-Barbie"
                    },
                    {
                        "username": "MichaelChoco",
                        "content": "LeetCode please fix the testcases bug. I want to complete the SQL 50 badge :("
                    },
                    {
                        "username": "elijeldres",
                        "content": "[@charantheja](/charantheja)  how does it work with Select, when we are supposed to DELETE?"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me. \nSelect  * FROM Person\nWHERE Id  IN (\n    SELECT Id\n    FROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n    );\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "Ultrai",
                        "content": "WTF I can pass the first testcase but would always fail it after submission. I even tried the official solution, still the same. Anyone know what's happening?\n```\nDELETE p1\nFROM Person p1, Person p2\nWHERE p1.Email = p2.Email AND\np1.Id > p2.Id;\n```"
                    },
                    {
                        "username": "bleuxr",
                        "content": "same, the testcase is buged\\ntry this instead\\n\\nselect min(id) as id, email\\nfrom Person\\ngroup by email"
                    },
                    {
                        "username": "minheapolis",
                        "content": "Same, might be LC bug"
                    },
                    {
                        "username": "mosesngan",
                        "content": "Same for me"
                    },
                    {
                        "username": "sidhudog2019",
                        "content": "this question should be medium"
                    }
                ]
            },
            {
                "id": 1792606,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576962,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576936,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576904,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576884,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576823,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576774,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576711,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576688,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576611,
                "content": [
                    {
                        "username": "tacbob",
                        "content": "`delete from Person\\ngroup by email\\nhaving count(email) > 1`\\ncan someone tell me why this can not work?"
                    },
                    {
                        "username": "Rinaa",
                        "content": "I have the same question"
                    },
                    {
                        "username": "vinita645",
                        "content": "\\tdelete p2  -- we are deleting p2, cause p1 table match with 1,john and p2 match with 3,john\\n\\t\\t\\t   -- hence, we need to delete higher id, according to question\\n\\tfrom person as p1\\n\\tinner join person as p2\\n\\twhere p1.id < p2.id and p1.email = p2.email"
                    },
                    {
                        "username": "Sarveshy448",
                        "content": "delete from Person\\nwhere id not in (SELECT *from(select min(id)\\nfrom Person\\ngroup by email) as s);"
                    },
                    {
                        "username": "Atul_Anand_Jha",
                        "content": "`delete from person where id not in (select min(id) from (select * from person) as b group by email)`"
                    },
                    {
                        "username": "saikiahimalaya",
                        "content": "delete p1 from Person as p1\\ninner join Person as p2\\non p1.email = p2.email and p1.id>p2.id"
                    },
                    {
                        "username": "KhushbuSalunkhe",
                        "content": "delete from Person \\nwhere id not in\\n(\\nselect id from\\n(select min(id) as id, email from person group by email) a\\n)"
                    },
                    {
                        "username": "ShiladityaRoy",
                        "content": "// Here I considered 2 objects of the same table, in which a comparison is held between the two tables and the respective result comes in the either of the tables (preferably the second one)\\n\\nDelete p2\\nfrom person p1\\njoin person p2\\nwhere p1.email = p2.email\\nand p1.id < p2.id;"
                    },
                    {
                        "username": "mahajansd",
                        "content": "DELETE p1 FROM Person p1 , person p2 \\nwhere  p1.email=p2.email\\nand p1.id>p2.id;"
                    },
                    {
                        "username": "vishnuthogulu",
                        "content": "delete x from Person x, Person y\\nwhere x.email = y.email\\nand x.id > y.id"
                    },
                    {
                        "username": "sndshmali",
                        "content": "delete p1\\nfrom person p1, person p2\\nwhere p1.email=p2.email and p1.id>p2.id\\n"
                    }
                ]
            },
            {
                "id": 1576566,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1576197,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575987,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575842,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575687,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575674,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575658,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575604,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575586,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575394,
                "content": [
                    {
                        "username": "pttrungit",
                        "content": "DELETE from Person a\\nwhere id != (select min(id) from Person where email = a.email);\\n\\nJust find min id of duplicate email and remove records which not equals with min id."
                    },
                    {
                        "username": "zjian3",
                        "content": "Delete from Person\\nWhere id not in (SELECT min(id)\\nFROM (select * from Person) P\\nGroup by email)"
                    },
                    {
                        "username": "aimalrehman92",
                        "content": "Can someone please tell why the following code is not picking up the unique emails and the minimum ids corresponding to those emails in the table ?\\n\\nselect min(id) id, email\\nfrom Person\\ngroup by 2;\\n\\n"
                    },
                    {
                        "username": "suvikjoensuu",
                        "content": "DELETE FROM Person\\nWHERE Id IN\\n\\n(SELECT Id FROM (\\nSELECT a.Id FROM Person a\\nJOIN Person b\\nON a.Email = b.Email\\nAND a.Id > b.Id) x)"
                    },
                    {
                        "username": "Gautam_p1",
                        "content": "DELETE p1 FROM Person p1,Person p2\\nWHERE p1.Email=p2.Email AND p1.Id>p2.Id;"
                    },
                    {
                        "username": "devangsharma7861",
                        "content": "delete p2\\nfrom person p1 join person p2 \\non p1.email = p2.email\\nAnd p1.id < p2.id;"
                    },
                    {
                        "username": "toelaineliu",
                        "content": "Why my code below didn\\'t work? It didn\\'t remove the dup record.\\nselect id, email from\\n(\\nselect id, email, row_number () over (partition by email order by id asc) as row_rank \\nfrom person) r\\nwhere row_rank=1\\n"
                    },
                    {
                        "username": "sahilnarula91",
                        "content": "WITH dupes AS (\\nSELECT Id, Email, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id ASC) AS rownum\\nFROM Person\\n)\\nDELETE \\nFROM Person\\nWHERE id IN (SELECT id FROM dupes WHERE rownum>1)"
                    },
                    {
                        "username": "Gautam_24",
                        "content": "Delete p1 from Person p1,Person p2 where p1.Email=p2.Email and p1.Id>p2.Id"
                    },
                    {
                        "username": "saisus",
                        "content": "with cte as\\n(select id, \\nrank() over (partition by email order by id) as id_rank\\nfrom Person)\\ndelete from Person where id in (select id from cte where id_rank>1)"
                    }
                ]
            },
            {
                "id": 1575256,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1574775,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1574664,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1574658,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1574571,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1574570,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1574029,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1573726,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1573679,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1573580,
                "content": [
                    {
                        "username": "gokhanuren",
                        "content": "delete from Person \\nwhere Id IN(select Id from \\n(select *, DENSE_RANK() over(partition by Email order by Id asc) dRank from Person) as data\\nwhere dRank>1)"
                    },
                    {
                        "username": "mahala",
                        "content": "I have written the following query and it\\'s not being executed and giving the following error? Why? \\n\\n\\nDELETE p1.Id FROM Person AS p1 INNER JOIN Person AS p2 ON p1.Email = p2.Email AND p1.Id > p2.Id; \\n\\nI don\\'t understand why we could delete p1. Why putting p1.Id is not working? If I change it to p1 then it is working? What\\'s the logic? \\n\\nError: Unknown table \\'id\\' in MULTI DELETE"
                    },
                    {
                        "username": "sunbo199587",
                        "content": "\\ndelete from person where id in\\n(\\nselect id\\nfrom (select id, row_number() over (partition by email order by id) as sqlrank from person) as t1\\nwhere sqlrank>1)"
                    },
                    {
                        "username": "EricOstring",
                        "content": "Could someone please explain why this doesn\\'t work? I\\'m not just looking for the righ solution, but to understand why the below solution doesn\\'t work:\\n\\nDELETE FROM Person\\nWHERE Id NOT IN\\n(SELECT MIN(Id) FROM Person GROUP BY Email) AS P\\n"
                    },
                    {
                        "username": "rattananchal27",
                        "content": "MYSQL code\\n\"\"\"\\ndelete\\nfrom person\\nwhere id in (select id from \\n             (select p2.id as id\\n                from person as p1, person as p2\\n                where p1.email=p2.email and p1.id < p2.id)temp)\\n\"\"\""
                    },
                    {
                        "username": "leihua",
                        "content": "DELETE p1 FROM Person p1, Person p2\\nWHERE p1.Id > p2.Id AND p1.Email = p2.Email\\n\\n"
                    },
                    {
                        "username": "pathrise-fellows",
                        "content": "With\\nnr AS\\n(\\nSELECT \\n    Id,\\n    Email,\\n    ROW_NUMBER() OVER (partition by Email ORDER BY Id) n_row\\nFROM Person\\n)\\nDELETE FROM Person \\nWHERE Id in \\n(SELECT Id From nr WHERE n_row <>1)"
                    },
                    {
                        "username": "RajeshAnumula",
                        "content": "# Write your MySQL query statement below\\ndelete P1 from Person P1, Person P2 where P1.Email=P2.Email and P1.Id>P2.Id\\n"
                    },
                    {
                        "username": "hwang787",
                        "content": "\\'\\'\\'\\nSELECT MIN(Id), Email FROM Person GROUP BY Email\\n\\'\\'\\'"
                    },
                    {
                        "username": "mirandanathan",
                        "content": "DELETE FROM Person\\nWHERE Id NOT IN (\\nSELECT MIN(Id)\\nFROM Person\\nGROUP BY Email)\\nSELECT * FROM Person\\n\\nThe above code should work for MS SQL Server"
                    }
                ]
            },
            {
                "id": 1573539,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1572522,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1572238,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1571977,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1571414,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1571416,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1570328,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1570409,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1576288,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1576027,
                "content": [
                    {
                        "username": "itsmeSarLas",
                        "content": "DELETE P1\\nFROM person P1 INNER JOIN person P2\\nON P1.email = P2.email AND P1.id > P2.id;"
                    },
                    {
                        "username": "sanjana2018",
                        "content": "Is it just me? I can\\'t see the SQL Schema for this question."
                    },
                    {
                        "username": "lpy199454",
                        "content": "is it really easy?  \nIT is hard for me/ to be honest."
                    },
                    {
                        "username": "shop2dee",
                        "content": "Can someone tell me why SELECT DISTINCT not working here?\\nFor example\\n\\'\\'\\'\\nSELECT DISTINCT Email FROM Person\\n\\'\\'\\'\\nThank you!!!!"
                    },
                    {
                        "username": "sunwangdong",
                        "content": "My SQL query code is as follows:\\nselect Id,Email from person group by Email order by Id asc;\\nBut there is a runtime error problem happens to me:\\nRuntime Error Message: Table 'test.person' doesn't exist\\nLast executed input: {\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}\\nAnd I don't know how to solve it? Thank you all the guys to answer my question advanced."
                    },
                    {
                        "username": "shekhar05",
                        "content": "    delete from person where id not in (select min(id), email from person group by email);"
                    },
                    {
                        "username": "m-d-f",
                        "content": "\\tDELETE p1\\n\\tfrom Person p1, Person p2\\n\\tWHERE p1.Email = p2.Email\\n\\tAND p1.id > p2.id"
                    },
                    {
                        "username": "JYOTIHARODE",
                        "content": "https://github.com/jYOTIHARODE/leetcode-/blob/master/(196)Delete%20Duplicates%20Emails"
                    },
                    {
                        "username": "Xascoria2",
                        "content": "I seems to only be able select MySQL, and my code seems to have no effects on the actual output, since no matter what query I typed, including an empty query it will just return `SELECT * FROM Person` no matter what...?"
                    },
                    {
                        "username": "Life-orb",
                        "content": "\\ndelete from person where id in(\\n\\n\\nselect id from(\\nselect id, rank() over (partition by email order by id) as  \\'b\\' from person\\n\\n) y  where b > 1\\n\\n\\n)"
                    }
                ]
            },
            {
                "id": 1575535,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 1575378,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 1575232,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 1571413,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 1571415,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 2074615,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 2074057,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 2071990,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 2069379,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 2067763,
                "content": [
                    {
                        "username": "_shikha",
                        "content": "delete t1 from Person \\nt1 inner join Person t2\\nwhere \\nt1.id > t2.id and t1.email=t2.email\\n"
                    },
                    {
                        "username": "kproperty",
                        "content": "Delete P1 from Person P1 left join\\nPerson P2\\non P1.email = P2.email where P1.id > P2.id"
                    },
                    {
                        "username": "Cunningham1821",
                        "content": "I understant the problem is asking to \"keep only unique emails based on its smallest Id\". However, I do not understand what is the logic behind** AND p1.Id > p2.Id**"
                    },
                    {
                        "username": "alfredzj",
                        "content": "I am new to SQL. I am wondering why using Distinct is not working here?"
                    },
                    {
                        "username": "lihui7777",
                        "content": "The query is wrong:\\n\\n    delete from Person p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.Email)\\n\\n\\n Runtime Error Message:\\nLine 2: SyntaxError: near 'p1 where exists (select 1 from Person p2 where p1.Id > p2.Id and p1.Email = p2.E'\\nLast executed input:\\n{\"headers\": {\"Person\": [\"Id\"\\n\"Email\"]}\\n\"rows\": {\"Person\": []}}"
                    },
                    {
                        "username": "krishnasabbisetti",
                        "content": "DELETE\\nFROM\\nperson\\nWHERE Id not IN\\n\\n(SELECT  \\nmin(id) as minid\\nFROM Person\\nGROUP BY email )         this worked as expected"
                    },
                    {
                        "username": "Bhavya_20498",
                        "content": "delete from(\\n          select * , row_number() over (partition by email order by id) as rn\\n          from person ) t\\nwhere rn>1 ;\\n\\nwhy this code is not working ....can anyone help me with this ? "
                    },
                    {
                        "username": "Abdur1997",
                        "content": "DELETE FROM person\nWHERE (email, id) IN (\n    SELECT email, id\n    FROM (\n        SELECT email, id, ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn\n        FROM person\n    ) t\n    WHERE rn > 1\n);\nYou can run this query I think you will get the solve and to get help for your Quotation"
                    },
                    {
                        "username": "shandilyabhavya98",
                        "content": "[@idtusharkanta](/idtusharkanta) ....but why the above code is not working ....if u have any idea "
                    },
                    {
                        "username": "idtusharkanta",
                        "content": "delete a.* from person as a\njoin person as b\non a.email=b.email\nwhere a.id>b.id\n\n\ntry this"
                    },
                    {
                        "username": "Abdur1997",
                        "content": "Beats 97.36%of users with MySQL\\n\\nWITH CTE AS (\\n    SELECT MIN(id) AS min_id\\n    FROM Person\\n    GROUP BY email\\n)\\nDELETE FROM Person\\nWHERE id NOT IN (SELECT min_id FROM CTE);\\n"
                    },
                    {
                        "username": "Pulkit121",
                        "content": "with cte1 as\\n(\\n    select id,email,row_number() over(partition by id order by id) rn\\n    from person\\n)\\ndelete from cte1 where rn >1\\n I got error The target table cte1 of the DELETE is not updatable. Please tell me my mistake\\n"
                    },
                    {
                        "username": "jtbe",
                        "content": "I\\'m not understanding where the p1 and p2 are coming from and how the script is recognizing it.  I don\\'t remember Codecademy touching on that sort of syntax.  Could someone explain?"
                    }
                ]
            },
            {
                "id": 2060844,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 2031319,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 2031097,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 2017336,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 2016456,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 2015194,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 2010123,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 2006715,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 2000320,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 1988194,
                "content": [
                    {
                        "username": "idtusharkanta",
                        "content": " `delete a.* from person as a\\njoin person as b\\non a.email=b.email\\nwhere a.id>b.id`"
                    },
                    {
                        "username": "psanjay900",
                        "content": "delete from Person p1  where email IN (select email from Person p2 group by email having count(*)>1 and p1.id>p2.id ); \\n\\nWhy this query giving a runtime error?"
                    },
                    {
                        "username": "Ml-Gn",
                        "content": "Man, I hope you come across some steel furniture with your little finger. There is absolutely no way you should design problems like this. It is counterintuitive and makes literally no sense. The idea of the problems is ok, it\\'s easy, it\\'s understandable, it\\'s clever. However, the design is absolutely horrible, you should work on the explanation and test cases, which do not really work, because output field is not there to not be used. \\nBest wishes"
                    },
                    {
                        "username": "AShugaevCoder",
                        "content": "Hi there!\\nWhat is wrong with that?\\n\\nSELECT DISTINCT email\\nFROM Person\\nORDER BY id\\n\\nDistinct should to delete all repeated lines, but nothing happens... "
                    },
                    {
                        "username": "kuehbiko",
                        "content": "can someone help to explain why \\n `person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\nreturns the error:\\n`AttributeError: \\'NoneType\\' object has no attribute \\'drop_duplicates\\'\\n    person.sort_values(by=\\'id\\', inplace=True).drop_duplicates(subset=[\\'email\\'], inplace=True)`\\n\\ni dont understand how the above expression results in a NoneType object."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "Because person.sort_values() returns None if you already indicate \"inplace=True\". This is the case for most pandas methods that allows inplace change. You can check the return type in the documentation as well."
                    },
                    {
                        "username": "jawad-shaikh",
                        "content": "CREATE TEMPORARY TABLE new_tbl\nSELECT DISTINCT p2.id FROM Person p1\nINNER JOIN Person p2 ON p1.email = p2.email AND p1.id < p2.id;\n\nDELETE FROM Person WHERE id IN (\n    SELECT id FROM new_tbl\n);\n\nThis works on phpmyadmin, but doesn't work on here (leetcode compiler)\ngetting this error \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DELETE FROM Person WHERE id IN (\nSELECT id FROM new_tbl\n)' at line 5\""
                    },
                    {
                        "username": "edithi",
                        "content": "To delete duplicate emails from a DataFrame while retaining rows with the smallest IDs, follow these steps:\\n\\nSort the DataFrame based on the \\'id\\' column in ascending order.\\nUse the drop_duplicates function with the \\'email\\' column as the subset and set the keep parameter to \\'first\\'.\\nThis process ensures that duplicates are removed while preserving the rows with the smallest IDs among duplicates."
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "May I know why this doesn\\'t work? When I print out the table it looks just like what I want, but the output of the code shows that the table is not changed.\\n `def delete_duplicate_emails(person: pd.DataFrame) -> None:\\n    \\n    person = person.groupby(by = \"email\", as_index = False).apply(lambda x: x[x[\\'id\\']==x[\\'id\\'].min()])\\n    person = person.reset_index(drop=True)[[\\'id\\',\\'email\\']]`"
                    },
                    {
                        "username": "yxiaoaz",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding) That makes sense, thanks!"
                    },
                    {
                        "username": "praggyaverma",
                        "content": "[@MitchMountainCoding](/MitchMountainCoding)  thank you that makes sense."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "The reason the table seems unchanged is that you are not modifying the original person DataFrame inside the function but are instead reassigning the person variable within the function\\'s local scope. Changes to a DataFrame object inside a function will not be reflected outside the function unless the DataFrame itself is modified in-place or you return the modified DataFrame.\\n\\n"
                    },
                    {
                        "username": "gorman",
                        "content": "Borked for MySQL:  no matter what query I put in, the output table == the Person table.  Example:\nMy query: \n    SELECT 0, 'xyz' FROM Person\nyields:\n'''\n    | id | email            |\n    | -- | ---------------- |\n    | 1  | john@example.com |\n    | 2  | bob@example.com  |\n    | 3  | john@example.com |\n'''"
                    },
                    {
                        "username": "shouvik32",
                        "content": "BEATS 100%\\nDELETE a.* FROM Person a,Person b\\nWHERE a.email=b.email AND a.id>b.id"
                    }
                ]
            },
            {
                "id": 1985822,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1979890,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1973706,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1960130,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1959725,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1959163,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1958830,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1958657,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1958046,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1957448,
                "content": [
                    {
                        "username": "harsh651106",
                        "content": "why its not working: SELECT DISTINCT id, email from Person;"
                    },
                    {
                        "username": "0x49D1",
                        "content": "Please read carefully the statement in the description: Delete all the duplicate emails, keeping only one unique email with the smallest id.\\nFor SQL users, please note that you are supposed to write a DELETE statement and not a SELECT one."
                    },
                    {
                        "username": "harsh651106",
                        "content": "pls reply as it should work"
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) AS rn, id, email\\nFROM Person)\\n\\nDELETE FROM CTE\\nWHERE rn != 1 "
                    },
                    {
                        "username": "philoma",
                        "content": "delete from person \\nwhere email in(\\n  select email from(\\n                  select email, count(email) as c from person group by  \\n                  email order by id asc \\n              ) where c>1 as t\\n);\\n\\nAnyone help as to why it doesn\\'t work? I want to do it using subqueries explicitly:]"
                    },
                    {
                        "username": "chrlsjsphh460",
                        "content": "I think there is a bug. Code passes test case on \"Run\" but fails all test cases on \"Submit\"."
                    },
                    {
                        "username": "elijeldres",
                        "content": "why this\\n DELETE FROM Person \\nWHERE email IN \\n(SELECT * FROM Person\\nHAVING COUNT(email) > 1\\nORDER BY id DESC); \\ndoes not work ??? "
                    },
                    {
                        "username": "user6701hq",
                        "content": "this runner is broken. no solution will pass, not even the official one"
                    },
                    {
                        "username": "slleer",
                        "content": "Is anyone else getting \\'No results. Previous SQL was not a query.\\' for MS SQL Server solutions? I tried my own solution using join, got this error. Looked up the proper syntax and tried using a subquery with min/group by, still getting error. I\\'ve since tried copying the solutions posted by people, both here and in the solutions section, and still get this error. The only time I don\\'t get this error is if I intentionally leave a syntax error in my attempt or simply \\'select * from Person\\'. Anyone have this issue and find a way around it? "
                    },
                    {
                        "username": "slleer",
                        "content": "[@charantheja](/charantheja) This worked! Thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\\nSelect * FROM Person\\nWHERE Id IN (\\nSELECT Id\\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\\n);\\n\\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "0x49D1",
                        "content": "There is some issue with driver here: solution works for first case when you hit \"Run\", but fails on \"Submit\". I\\'ve tried editorial and other solutions - no luck. Moderators, please recheck this answer issue, thanks!"
                    },
                    {
                        "username": "charantheja",
                        "content": "I just completed SQL 50 badge. According to their test cases below Query worked for me.\nSelect * FROM Person\nWHERE Id IN (\nSELECT Id\nFROM (SELECT MIN(Id) Id FROM Person GROUP BY Email) p\n);\n\nNote: Run will fail but submit will work"
                    },
                    {
                        "username": "charantheja",
                        "content": "I am getting Runtime error. Please help. \nError: No results.  Previous SQL was not a query.\n\nMS SQL server: \nDELETE p1 FROM Person p1,\n    Person p2\nWHERE\n    p1.Email = p2.Email AND p1.Id > p2.Id\n"
                    },
                    {
                        "username": "vivekkumarverma332",
                        "content": "this question has some fault in it. It\\'s test cases are not working."
                    }
                ]
            },
            {
                "id": 1957419,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1957381,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1924194,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1890153,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1880893,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1872887,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1860085,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1857694,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1856286,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1856118,
                "content": [
                    {
                        "username": "piyushb9",
                        "content": "The solution provided in the editorial fails when trying to submit. 0 test cases passed. While testing for a single test case it is working fine."
                    },
                    {
                        "username": "ramananram23",
                        "content": "Getting errors for this problem when i try to run query..tried different queries..But it throws an for all..Please fix the bug for this problem.."
                    },
                    {
                        "username": "shubhamjangir",
                        "content": "With CTE\\n\\nwith cte as (\\nselect email,min(id) as min_id\\nfrom person\\ngroup by email \\n)\\ndelete from person\\nwhere id not in (select min_id from cte)"
                    },
                    {
                        "username": "raghuaanu26",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.Email = p2.Email\\nAND p1.Id > p2.Id"
                    },
                    {
                        "username": "Arshad_Nehal",
                        "content": "DELETE FROM person\\nWHERE id NOT IN \\n(SELECT * FROM \\n(SELECT MIN(id) FROM person GROUP BY email) as temp)\\n\\nwe use the temp when trying to modify a table using a subquery that refers to the same table. In other words, the query is trying to update or delete rows in the \"person\" table, but the subquery is also selecting from the same table.\\n\\nTo solve this issue, we can use a temporary table or a derived table to store the subquery results, instead of using a subquery that directly references the \"person\" table."
                    },
                    {
                        "username": "pradyumangaur",
                        "content": "What is the issue in my query \\n\\nDELETE FROM Person WHERE (id,email) IN ( SELECT id,email FROM(  SELECT MAX(id), email FROM PERSON GROUP BY email \\nHAVING COUNT(email) > 1) AS C ) ;"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\ndelete p from Person as p INNER JOIN Person as q where p.id>q.id and p.email=q.email;"
                    },
                    {
                        "username": "skhan100",
                        "content": "I am trying \\ndelete from person where rowid not in(select min(rowid) from person group by email);\\nand it also Accepted but when I am submitting its showing me something that the not the part of this question.\\n\\nHence tried below query in my oracle application and it is working fine.\\n delete from remove_duplicity where rowid not in(select min(rowid) from remove_duplicity group by email);"
                    },
                    {
                        "username": "Babul955719",
                        "content": "delete from Person\\ngroup by email\\nwhere id in (select email from Person where (count(email)) > 1)\\nerror - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \\'group by email\\nwhere id in (select email from Person where (count(email)) > 1)\\' at line 4"
                    },
                    {
                        "username": "acordish",
                        "content": "Can somebody help? I learned Postgre so I can do this very easily by doing a DELETE join using the USING function, but MySQL doesn't seem to have the USING function. How can I execute a join (specifically a self join) during a DELETE in SQL? Google has not been helpful. When I try to do a join I also get some issue about specifying target."
                    }
                ]
            },
            {
                "id": 1855476,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1852124,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1819778,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1818142,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1809750,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1809676,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1801819,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1801070,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1792120,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1782504,
                "content": [
                    {
                        "username": "priyarb96",
                        "content": "delete from person\\nwhere id in \\n(\\nSELECT ID FROM\\n\\n(\\nSELECT ID,\\nDENSE_RANK() OVER(ORDER BY SALARY DESC) RANK1\\nFROM PERSON\\nWHERE COUNT(EMAIL)>1 AND RANK1>1\\n) A\\n)\\n\\nWHY DOESN\\'T THIS WORK?"
                    },
                    {
                        "username": "Rakeshreddy12",
                        "content": "delete  from  person where  id = \\'3\\';\\nwhen i run the code output matches and accepted also after submission showing worng answer why???"
                    },
                    {
                        "username": "amrittshukla",
                        "content": "but its also accepting the solution with select statement."
                    },
                    {
                        "username": "Sudarshan115",
                        "content": "SELECT id FROM person table \\nDELETE Id WHERE id= 1"
                    },
                    {
                        "username": "amitpatelci19",
                        "content": "delete from person  where id in (select id from  (select p1.id from Person p1, Person p2  where p1.id>p2.id and p1.email=p2.email ) as a);"
                    },
                    {
                        "username": "csalomon_ya",
                        "content": "DELETE FROM person WHERE id in (select id\\nfrom(select id, email, dense_rank() over (partition by email order by id) as [rank]\\n from person)t1\\n where rank > 1);"
                    },
                    {
                        "username": "andra17",
                        "content": "`DELETE p1\nFROM Person p1, Person p2\nWHERE p1.email = p2.email\n  AND p1.id > p2.id; `\n\nconsept of the WHERE clause here is\nthe \"WHERE p1.email =p2.email\" clause will find same email, \nthen \"AND p1.id > p2.id\" select the all remain bigger id value to p1 and left the smallest to p2 \nso when u delete p1, p2 will contain smallest id who isn deleted\n"
                    },
                    {
                        "username": "sabarissh",
                        "content": "DELETE p1\\nFROM Person p1, Person p2\\nWHERE p1.id > p2.id\\nAND p1.email = p2.email;\\n"
                    },
                    {
                        "username": "the_civic",
                        "content": "#simplestway to delete\\n\\ndelete a from Person a\\ninner join Person b \\nwhere a.id>b.id and  a.email = b.email\\n\\n"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email in (Select email from Person group by email having Count(ID)>1) and ID not in (Select Min(ID) from person Group by email );"
                    }
                ]
            },
            {
                "id": 1782453,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1779718,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1779096,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1776346,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1774763,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1772986,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1764761,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1761487,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1756175,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1754084,
                "content": [
                    {
                        "username": "Nishantvohra",
                        "content": "Delete from Person where email like(Select email from Person group by email having Count(ID)>1) and ID =(Select Max(ID) from person where Email like (Select email from Person group by email having Count(ID)>1) );"
                    },
                    {
                        "username": "amnagrawal1994",
                        "content": "Need help: Can someone please point out why this is wrong? \\n `\\nWITH cte AS (\\n    SELECT \\n        id, email, \\n        ROW_NUMBER() OVER (\\n            PARTITION BY email \\n            ORDER BY id\\n        ) AS rownum\\n    FROM Person\\n)\\nDELETE FROM Person WHERE cte.rownum > 1 AND cte.id = Person.id\\n`\\nThis is returning me a Runtime Error: \\nUnknown column \\'cte.rownum\\' in \\'where clause\\'"
                    },
                    {
                        "username": "akshayashish28",
                        "content": "Hi can anybody help me with query \\nDELETE from Person\\nwhere \\nemail in (select email from (select email, ROW_NUMBER() OVER (PARTITION BY email) as rnk from Person)as inn where rnk > 1);\\n\\nwhy this query not giving expected result?"
                    },
                    {
                        "username": "Bhavya_jha98",
                        "content": "with cte_first as \\n(\\n    select id, email, row_number() over(partition by email order by id) as duplicates from person\\n)\\ndelete from person\\nwhere id in (select id from cte_first where duplicates > 1)"
                    },
                    {
                        "username": "Hopkins666",
                        "content": "I created a table but not able to use it.\\n\\nCreate Table YYY AS \\nselect customer_number, count(order_number) as \"quantity\" from Orders \\nGroup by customer_number\\n\\nSelect * from YYY\\n\\nGot error message."
                    },
                    {
                        "username": "myclover12",
                        "content": "I understand the end result must a delete statement, but the environment on the right side ignores any select statement, which is my work in progress. \\n\\nThis effectively asks you, a beginner to sql, to make a leap instead of working your way to a solution. It\\'s defeating its own purpose."
                    },
                    {
                        "username": "anikijojo",
                        "content": "DELETE A.* FROM Person A\\nINNER JOIN PERSON B\\nON A.email=B.email\\nWHERE A.id>B.id;"
                    },
                    {
                        "username": "derrick6688",
                        "content": " For this solution, is that still work for the situation when there are 3 or more duplicate emails? \\n`DELETE p1 FROM Person as p1, Person as p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id`\\n"
                    },
                    {
                        "username": "SubratPatra",
                        "content": "DELETE FROM Person WHERE id NOT IN (SELECT MIN(id) FROM Person GROUP BY email);"
                    },
                    {
                        "username": "NavaneetP",
                        "content": "Can anyone plz explain me this query... I got bit confused"
                    }
                ]
            },
            {
                "id": 1753696,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1752917,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1752354,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1748080,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1745299,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1743604,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1739915,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1736976,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1730355,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1729549,
                "content": [
                    {
                        "username": "nikipande00",
                        "content": "Delete p1 from person p1, person p2 where p1.email=p2.email and p1.id>p2.id;\\n"
                    },
                    {
                        "username": "Hanisha_DUa",
                        "content": "I am trying to achieve this one using window function, since I was able to get the other part of query (Duplicate emails) by using row_num only. Here is the query I am trying for \"Delete duplicate emails\" and trying to know what is wrong here. \n`with xy as\n(select email,\nrow_number() over(partition by email) as rownumber from person)\ndelete from person where email in\n(select email as deleted_ones\nfrom xy h\nwhere h.rownumber>1)`"
                    },
                    {
                        "username": "sourabhgarai_98",
                        "content": "delete from Person where id not in (select min(id) from Person group by email);"
                    },
                    {
                        "username": "rishika_kaushik",
                        "content": "delete p2 from person p1 join person p2 \\nwhere p1.email = p2.email and \\np1.id< p2.id"
                    },
                    {
                        "username": "harshitsrivastava",
                        "content": "If you like the solution, please upvote\\nDELETE P1 FROM PERSON P1,PERSON P2 WHERE P1.Email=P2.Email AND P1.ID>P2.ID;"
                    },
                    {
                        "username": "kaushik22",
                        "content": "can anyone know solution in oracle without using select "
                    },
                    {
                        "username": "C_Venkata_Sankar",
                        "content": " SQL solution (oracle)\\ndelete from Person\\nwhere Id not in\\n(select m from (select min(Id) as m from Person\\ngroup by Email)T )"
                    },
                    {
                        "username": "Jhanvi_chaudhary",
                        "content": "DELETE p2 FROM Person p1, Person p2 WHERE p2.id>p1.id AND p1.email=p2.email;"
                    },
                    {
                        "username": "yunjinchoidev",
                        "content": "delete\\nfrom Person\\nwhere id not in (\\n     (SELECT *\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\ndelete\\nfrom Person\\nwhere id not in (\\n     (SELECT id\\n     FROM\\n    (select min(p2.id) as id from Person as p2 group by p2.email) as tmp));\\n\\n\\nWhy is the execution speed of these two queries so different?\\n\\nThese two queries are very similar, but the speed is very different.\\n\\ni am so curious"
                    },
                    {
                        "username": "chiptrixx",
                        "content": "Guys, explain please. Why does it happen?\\nDifference is only at (select *... / (select id...\\n\\nWORKING at all cases:\\n`delete from person \\n   where id not in\\n   (select * from (select min(id) from person group by email) as t1);`\\n\\nNOT WORKING on some cases:\\n`delete from person\\nwhere id not in\\n    (select id from (select min(id) from person group by email) as t1);`"
                    }
                ]
            },
            {
                "id": 1725988,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1724125,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1719077,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1717559,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1714668,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1712683,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1711419,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1708995,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1692733,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            },
            {
                "id": 1690682,
                "content": [
                    {
                        "username": "AdityaBhate",
                        "content": "# \\uD83D\\uDCA52 TABLE METHOD\\nhttps://leetcode.com/problems/delete-duplicate-emails/solutions/2944161/2-table-method/?orderBy=newest_to_oldest"
                    },
                    {
                        "username": "Eryri",
                        "content": "what\"s wrong with my code?\\ndelete p from person p,person q \\nwhere p.email=p.email\\nand p.id>q.id "
                    },
                    {
                        "username": "vineetrao",
                        "content": "Please correct the bug, Result output does not change regardless of the query we put"
                    },
                    {
                        "username": "kesphae",
                        "content": "with tb1 as (\\n    select \\n    id, \\n    email,\\n    row_number() over (partition by id order by id) as rn\\n    from Person\\n    )\\nDelete from tb1\\nwhere rn > 1\\n\\n\\nwhat is wrong with my solution??"
                    },
                    {
                        "username": "originzhao",
                        "content": "The \\'Testcase/Result\\' tab is not interactive, making it impossible to work your way to an solution"
                    },
                    {
                        "username": "dnr2144",
                        "content": "```sql\\ndelete from Person where id not in (select id from Person group by email);\\n```\\n\\nwhy is there runtime error?\\n`You can\\'t specify target table \\'p1\\' for update in FROM clause`\\n\\n"
                    },
                    {
                        "username": "ahjimomo",
                        "content": "I can think of two (2) approaches for this question.\\n\\n### Intuition\\n1. We want to `SELECT` the records that are duplicated and where `ids` are larger than the other based on this\\n2. We can then perform an update to the original table with `DELETE`\\n\\n### Approaches\\n<b>Approach 1:</b>\\nThe more intuitive approach is the use of `WHERE` clause\\n<b> Approach 2:</b>\\nWe can use `JOIN` to first get the records that we want to delete\\n\\nHave fun ;)\\n\\n"
                    },
                    {
                        "username": "rawalm",
                        "content": "with sol as (\\n\\nselect * ,\\nDense_rank() over (partition by email order by id ) as rn \\nfrom Person \\n\\n)\\n\\ndelete from sol where rn>1"
                    },
                    {
                        "username": "Atulfs",
                        "content": "delete\\nfrom Person\\nwhere id not in(select min(id) from person group by email)"
                    },
                    {
                        "username": "Visparmar119",
                        "content": "delete  p1 from Person as p1 INNER JOIN Person as p2 ON p1.email=p2.email AND p1.id>p2.id"
                    }
                ]
            }
        ]
    },
    {
        "title": "Best Meeting Point",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1564668,
                "content": [
                    {
                        "username": "TonyLic",
                        "content": "When I first saw this question, intuitively I know shortest meeting point should be found in two separate dimension, however, even if on 1-D, how could I find the shortest meeting point? Then I clicked discuss and found out everybody's solution was using median to get shortest meeting point? WHY?\\n\\nActually, there is a famous conclusion in statistics that [the median minimizes the sum of absolute deviations][1].\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations"
                    },
                    {
                        "username": "jeromesbu",
                        "content": "I found a lot of questions about why the median could minimize the total manhattan distance. Here comes the explanation. The explanation in [the median minimizes the sum of absolute deviations][1] is not solid either.\\n\\n **1. Let's start from the 1-dimension case** \\n\\nSuppose we have n people living on a straight street and they want to find somewhere to meet. The total distance is \\n\\n![enter image description here][2]\\n\\nwhere ![enter image description here][3] is the location of each house and ![enter image description here][4]\\nis the meeting point. To minimize this problem, take the derivative of this equation. Each term will give you \\n\\n - 1, if ![enter image description here][5]\\n - -1, if ![enter image description here][6]\\n\\nTo reach the minimum, the derivative must be 0. To make the derivative 0, the number of 1s and -1s must equal. \\n\\n - If n is even, then m must be located between the middle two locations (Any locations between them will give you the minimum, **not necessarily** the median). \\n - If n is odd, then m must be located on the middle one house. That's the median.\\n\\n**2. Then we can discuss the 2-dimension case**\\n\\nLet's write down the equation directly.\\n\\n![enter image description here][7]\\n\\nSo this time, we have two variables - m and n. Recall what you've learned in multiple variables calculus. To find the minimum, we need to take the partial derivatives for the equation. And each partial derivative (or we can say, each dimension) will give you the same result as the 1-D case.\\n\\n**3. So we can even solve the problem in any dimension**\\n\\nBecause every dimension is independent to each other. Do every dimension as 1-D case.\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations\\n  [2]: https://latex.codecogs.com/gif.latex?%5Csum_i%7B%7Cx_i-m%7C%7D\\n  [3]: https://latex.codecogs.com/gif.latex?x_i\\n  [4]: https://latex.codecogs.com/gif.latex?m\\n  [5]: https://latex.codecogs.com/gif.latex?m%20%3E%20x_i\\n  [6]: https://latex.codecogs.com/gif.latex?m%20%3C%20x_i\\n  [7]: https://latex.codecogs.com/gif.latex?%5Csum_i%20%7Cx_i-m%7C+%7Cy_i-n%7C"
                    },
                    {
                        "username": "zzg_zzm",
                        "content": "The  Best Meeting Point problem can be reduced to a 1-dimension pure math problem:\\n* **Given an increasing sequence {x<sub>i=1:N</sub>}, find real number x to minimize function f(x) := &Sigma;<sub>i=1:N</sub> |x-x<sub>i</sub>|.**\\n\\nSimply grouping the sum into pairs:\\n* f(x) = &Sigma;<sub>i=1:N/2</sub> (| x-x<sub>i</sub> | + | x-x<sub>N+1-i</sub> |) + (N%2)*| x-x<sub>N/2+1</sub> |.\\n\\nNote that we don't have the last term if N is even since they are all grouped into pairs. I will explain why we need to (have to) group the sum in such a form later.\\n\\nUsing triangle inequality, |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| = x<sub>N+1-i</sub> - x<sub>i</sub>, and the fact N%2 >= 0, so we can find a lower bound for f\\n* f(x) >= &Sigma;<sub>i=1:N/2</sub> (x<sub>N+1-i</sub> - x<sub>i</sub>),\\n\\nwhich means if we could actually pick an x to achieve this value, we find the optimal x!\\n\\nActually, inequality |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| achieves equality if and only if x is in [x<sub>i</sub>, x<sub>N+1-i</sub>]. Since {x<sub>i=1:N</sub>} is increasing, closed interval sequence { [x<sub>i</sub>, x<sub>N+1-i</sub>] }<sub>i=1:N/2</sub> is nested, and so they have non-empty common intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>]. This is critical, and this is why we need to design the grouping like this. Now it is trivial to see that picking any value in the intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>] will reach the minimum if N is even, and only x = x<sub>N/2+1</sub> can reach the minimum if N is odd (since we also have to make |x-x<sub>N/2+1</sub>| zero)."
                    },
                    {
                        "username": "wennot",
                        "content": "Since it is Manhattan distance, we know we can break up the problem into picking an optimal x-coordinate and optimal y-coordinate. \\n\\nLet us consider the 1D case then and consider the following cases. \\n**Case 1: One-point:**\\nThe optimal answer is the point itself. \\n\\n**Case 2: Two-points:**\\nThe optimal answer is anywhere between or on the two points.\\n\\n**Case 3: Three-points:**\\nBased on case 2, we know the outer two points (left-most and right-most) do not affect the final answer as long as we pick a point between the two. So we can ignore them and focus on the inner point. So we can pick the middle point itself.\\n\\n**Case 4: Four-points:**\\nBased on case 2, we know the outer two points do not affect the final answer as long as we pick a point between the two. So we ignore them and focus on the inner pair. Based on case 2, we know any point between the two would suffice. For convenience, we can select the first point. \\n\\nHence we can do the following approach:\\n**Case 5: Odd number of points:**\\nRepeatedly apply case 2 and evict the first and last point, until you are left with one point, that is the answer.\\n\\n**Case 6: Even number of points:** \\nRepeatedly apply case 2 until we have two points left, pick any point between the two, for convenience we can select the first point, that is the answer.  \\n\\nYou can implement this approach directly with two pointers on a sorted array. With a bit more thought, you would realize the answer is effectively the median as we are shifting the left and right pointer until their index differ by less than 1. This is the same as finding the middle of the array!"
                    },
                    {
                        "username": "mokuteno",
                        "content": "First, what I would like to point out is, *when the number of points is even, while median could give the shortest distance sum, it is not the only point that could give the shortest distance sum*.\\nIt\\'s actually intuitive, if we have 4 points, any value (not discrete) between the 2nd and 3rd point will give the same shortest distance sum.\\n\\nProof, using Triangle Inequality (https://en.wikipedia.org/wiki/Triangle_inequality)\\nSuppose we have n points, a1...an, sorted.\\n1) Assume there\\'s a point x.\\n2) According to Triangle Inequality, the distance sum of x to a1, and x to an : |x-a1|+|x-an|, has the minimum value when a1<=x<=an \\n3) Similarly, |x-a2|+|x-a(n-1)|, has minimum value when a2<=x<=a(n-1)\\n4) If n is odd, sum up the distance from x to all pair of points, we will get a unique value, x=a([n/2]+1)\\n5) However, if n is even, the last pair will be |x-a([n/2])|+|x-a([n/2]+1)|, which has the min value when a([n/2])<=x<=a([n/2]+1)\\n\\nNote that when n is even, we got a range of x: a([n/2])<=x<=a([n/2]+1), and median is just a possible value in this range.\\n"
                    },
                    {
                        "username": "dongfang_a",
                        "content": "As title. Return value is double."
                    },
                    {
                        "username": "WorldHello",
                        "content": "This question is all about figuring out that median is the key."
                    }
                ]
            },
            {
                "id": 1564676,
                "content": [
                    {
                        "username": "TonyLic",
                        "content": "When I first saw this question, intuitively I know shortest meeting point should be found in two separate dimension, however, even if on 1-D, how could I find the shortest meeting point? Then I clicked discuss and found out everybody's solution was using median to get shortest meeting point? WHY?\\n\\nActually, there is a famous conclusion in statistics that [the median minimizes the sum of absolute deviations][1].\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations"
                    },
                    {
                        "username": "jeromesbu",
                        "content": "I found a lot of questions about why the median could minimize the total manhattan distance. Here comes the explanation. The explanation in [the median minimizes the sum of absolute deviations][1] is not solid either.\\n\\n **1. Let's start from the 1-dimension case** \\n\\nSuppose we have n people living on a straight street and they want to find somewhere to meet. The total distance is \\n\\n![enter image description here][2]\\n\\nwhere ![enter image description here][3] is the location of each house and ![enter image description here][4]\\nis the meeting point. To minimize this problem, take the derivative of this equation. Each term will give you \\n\\n - 1, if ![enter image description here][5]\\n - -1, if ![enter image description here][6]\\n\\nTo reach the minimum, the derivative must be 0. To make the derivative 0, the number of 1s and -1s must equal. \\n\\n - If n is even, then m must be located between the middle two locations (Any locations between them will give you the minimum, **not necessarily** the median). \\n - If n is odd, then m must be located on the middle one house. That's the median.\\n\\n**2. Then we can discuss the 2-dimension case**\\n\\nLet's write down the equation directly.\\n\\n![enter image description here][7]\\n\\nSo this time, we have two variables - m and n. Recall what you've learned in multiple variables calculus. To find the minimum, we need to take the partial derivatives for the equation. And each partial derivative (or we can say, each dimension) will give you the same result as the 1-D case.\\n\\n**3. So we can even solve the problem in any dimension**\\n\\nBecause every dimension is independent to each other. Do every dimension as 1-D case.\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations\\n  [2]: https://latex.codecogs.com/gif.latex?%5Csum_i%7B%7Cx_i-m%7C%7D\\n  [3]: https://latex.codecogs.com/gif.latex?x_i\\n  [4]: https://latex.codecogs.com/gif.latex?m\\n  [5]: https://latex.codecogs.com/gif.latex?m%20%3E%20x_i\\n  [6]: https://latex.codecogs.com/gif.latex?m%20%3C%20x_i\\n  [7]: https://latex.codecogs.com/gif.latex?%5Csum_i%20%7Cx_i-m%7C+%7Cy_i-n%7C"
                    },
                    {
                        "username": "zzg_zzm",
                        "content": "The  Best Meeting Point problem can be reduced to a 1-dimension pure math problem:\\n* **Given an increasing sequence {x<sub>i=1:N</sub>}, find real number x to minimize function f(x) := &Sigma;<sub>i=1:N</sub> |x-x<sub>i</sub>|.**\\n\\nSimply grouping the sum into pairs:\\n* f(x) = &Sigma;<sub>i=1:N/2</sub> (| x-x<sub>i</sub> | + | x-x<sub>N+1-i</sub> |) + (N%2)*| x-x<sub>N/2+1</sub> |.\\n\\nNote that we don't have the last term if N is even since they are all grouped into pairs. I will explain why we need to (have to) group the sum in such a form later.\\n\\nUsing triangle inequality, |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| = x<sub>N+1-i</sub> - x<sub>i</sub>, and the fact N%2 >= 0, so we can find a lower bound for f\\n* f(x) >= &Sigma;<sub>i=1:N/2</sub> (x<sub>N+1-i</sub> - x<sub>i</sub>),\\n\\nwhich means if we could actually pick an x to achieve this value, we find the optimal x!\\n\\nActually, inequality |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| achieves equality if and only if x is in [x<sub>i</sub>, x<sub>N+1-i</sub>]. Since {x<sub>i=1:N</sub>} is increasing, closed interval sequence { [x<sub>i</sub>, x<sub>N+1-i</sub>] }<sub>i=1:N/2</sub> is nested, and so they have non-empty common intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>]. This is critical, and this is why we need to design the grouping like this. Now it is trivial to see that picking any value in the intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>] will reach the minimum if N is even, and only x = x<sub>N/2+1</sub> can reach the minimum if N is odd (since we also have to make |x-x<sub>N/2+1</sub>| zero)."
                    },
                    {
                        "username": "wennot",
                        "content": "Since it is Manhattan distance, we know we can break up the problem into picking an optimal x-coordinate and optimal y-coordinate. \\n\\nLet us consider the 1D case then and consider the following cases. \\n**Case 1: One-point:**\\nThe optimal answer is the point itself. \\n\\n**Case 2: Two-points:**\\nThe optimal answer is anywhere between or on the two points.\\n\\n**Case 3: Three-points:**\\nBased on case 2, we know the outer two points (left-most and right-most) do not affect the final answer as long as we pick a point between the two. So we can ignore them and focus on the inner point. So we can pick the middle point itself.\\n\\n**Case 4: Four-points:**\\nBased on case 2, we know the outer two points do not affect the final answer as long as we pick a point between the two. So we ignore them and focus on the inner pair. Based on case 2, we know any point between the two would suffice. For convenience, we can select the first point. \\n\\nHence we can do the following approach:\\n**Case 5: Odd number of points:**\\nRepeatedly apply case 2 and evict the first and last point, until you are left with one point, that is the answer.\\n\\n**Case 6: Even number of points:** \\nRepeatedly apply case 2 until we have two points left, pick any point between the two, for convenience we can select the first point, that is the answer.  \\n\\nYou can implement this approach directly with two pointers on a sorted array. With a bit more thought, you would realize the answer is effectively the median as we are shifting the left and right pointer until their index differ by less than 1. This is the same as finding the middle of the array!"
                    },
                    {
                        "username": "mokuteno",
                        "content": "First, what I would like to point out is, *when the number of points is even, while median could give the shortest distance sum, it is not the only point that could give the shortest distance sum*.\\nIt\\'s actually intuitive, if we have 4 points, any value (not discrete) between the 2nd and 3rd point will give the same shortest distance sum.\\n\\nProof, using Triangle Inequality (https://en.wikipedia.org/wiki/Triangle_inequality)\\nSuppose we have n points, a1...an, sorted.\\n1) Assume there\\'s a point x.\\n2) According to Triangle Inequality, the distance sum of x to a1, and x to an : |x-a1|+|x-an|, has the minimum value when a1<=x<=an \\n3) Similarly, |x-a2|+|x-a(n-1)|, has minimum value when a2<=x<=a(n-1)\\n4) If n is odd, sum up the distance from x to all pair of points, we will get a unique value, x=a([n/2]+1)\\n5) However, if n is even, the last pair will be |x-a([n/2])|+|x-a([n/2]+1)|, which has the min value when a([n/2])<=x<=a([n/2]+1)\\n\\nNote that when n is even, we got a range of x: a([n/2])<=x<=a([n/2]+1), and median is just a possible value in this range.\\n"
                    },
                    {
                        "username": "dongfang_a",
                        "content": "As title. Return value is double."
                    },
                    {
                        "username": "WorldHello",
                        "content": "This question is all about figuring out that median is the key."
                    }
                ]
            },
            {
                "id": 1566496,
                "content": [
                    {
                        "username": "TonyLic",
                        "content": "When I first saw this question, intuitively I know shortest meeting point should be found in two separate dimension, however, even if on 1-D, how could I find the shortest meeting point? Then I clicked discuss and found out everybody's solution was using median to get shortest meeting point? WHY?\\n\\nActually, there is a famous conclusion in statistics that [the median minimizes the sum of absolute deviations][1].\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations"
                    },
                    {
                        "username": "jeromesbu",
                        "content": "I found a lot of questions about why the median could minimize the total manhattan distance. Here comes the explanation. The explanation in [the median minimizes the sum of absolute deviations][1] is not solid either.\\n\\n **1. Let's start from the 1-dimension case** \\n\\nSuppose we have n people living on a straight street and they want to find somewhere to meet. The total distance is \\n\\n![enter image description here][2]\\n\\nwhere ![enter image description here][3] is the location of each house and ![enter image description here][4]\\nis the meeting point. To minimize this problem, take the derivative of this equation. Each term will give you \\n\\n - 1, if ![enter image description here][5]\\n - -1, if ![enter image description here][6]\\n\\nTo reach the minimum, the derivative must be 0. To make the derivative 0, the number of 1s and -1s must equal. \\n\\n - If n is even, then m must be located between the middle two locations (Any locations between them will give you the minimum, **not necessarily** the median). \\n - If n is odd, then m must be located on the middle one house. That's the median.\\n\\n**2. Then we can discuss the 2-dimension case**\\n\\nLet's write down the equation directly.\\n\\n![enter image description here][7]\\n\\nSo this time, we have two variables - m and n. Recall what you've learned in multiple variables calculus. To find the minimum, we need to take the partial derivatives for the equation. And each partial derivative (or we can say, each dimension) will give you the same result as the 1-D case.\\n\\n**3. So we can even solve the problem in any dimension**\\n\\nBecause every dimension is independent to each other. Do every dimension as 1-D case.\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations\\n  [2]: https://latex.codecogs.com/gif.latex?%5Csum_i%7B%7Cx_i-m%7C%7D\\n  [3]: https://latex.codecogs.com/gif.latex?x_i\\n  [4]: https://latex.codecogs.com/gif.latex?m\\n  [5]: https://latex.codecogs.com/gif.latex?m%20%3E%20x_i\\n  [6]: https://latex.codecogs.com/gif.latex?m%20%3C%20x_i\\n  [7]: https://latex.codecogs.com/gif.latex?%5Csum_i%20%7Cx_i-m%7C+%7Cy_i-n%7C"
                    },
                    {
                        "username": "zzg_zzm",
                        "content": "The  Best Meeting Point problem can be reduced to a 1-dimension pure math problem:\\n* **Given an increasing sequence {x<sub>i=1:N</sub>}, find real number x to minimize function f(x) := &Sigma;<sub>i=1:N</sub> |x-x<sub>i</sub>|.**\\n\\nSimply grouping the sum into pairs:\\n* f(x) = &Sigma;<sub>i=1:N/2</sub> (| x-x<sub>i</sub> | + | x-x<sub>N+1-i</sub> |) + (N%2)*| x-x<sub>N/2+1</sub> |.\\n\\nNote that we don't have the last term if N is even since they are all grouped into pairs. I will explain why we need to (have to) group the sum in such a form later.\\n\\nUsing triangle inequality, |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| = x<sub>N+1-i</sub> - x<sub>i</sub>, and the fact N%2 >= 0, so we can find a lower bound for f\\n* f(x) >= &Sigma;<sub>i=1:N/2</sub> (x<sub>N+1-i</sub> - x<sub>i</sub>),\\n\\nwhich means if we could actually pick an x to achieve this value, we find the optimal x!\\n\\nActually, inequality |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| achieves equality if and only if x is in [x<sub>i</sub>, x<sub>N+1-i</sub>]. Since {x<sub>i=1:N</sub>} is increasing, closed interval sequence { [x<sub>i</sub>, x<sub>N+1-i</sub>] }<sub>i=1:N/2</sub> is nested, and so they have non-empty common intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>]. This is critical, and this is why we need to design the grouping like this. Now it is trivial to see that picking any value in the intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>] will reach the minimum if N is even, and only x = x<sub>N/2+1</sub> can reach the minimum if N is odd (since we also have to make |x-x<sub>N/2+1</sub>| zero)."
                    },
                    {
                        "username": "wennot",
                        "content": "Since it is Manhattan distance, we know we can break up the problem into picking an optimal x-coordinate and optimal y-coordinate. \\n\\nLet us consider the 1D case then and consider the following cases. \\n**Case 1: One-point:**\\nThe optimal answer is the point itself. \\n\\n**Case 2: Two-points:**\\nThe optimal answer is anywhere between or on the two points.\\n\\n**Case 3: Three-points:**\\nBased on case 2, we know the outer two points (left-most and right-most) do not affect the final answer as long as we pick a point between the two. So we can ignore them and focus on the inner point. So we can pick the middle point itself.\\n\\n**Case 4: Four-points:**\\nBased on case 2, we know the outer two points do not affect the final answer as long as we pick a point between the two. So we ignore them and focus on the inner pair. Based on case 2, we know any point between the two would suffice. For convenience, we can select the first point. \\n\\nHence we can do the following approach:\\n**Case 5: Odd number of points:**\\nRepeatedly apply case 2 and evict the first and last point, until you are left with one point, that is the answer.\\n\\n**Case 6: Even number of points:** \\nRepeatedly apply case 2 until we have two points left, pick any point between the two, for convenience we can select the first point, that is the answer.  \\n\\nYou can implement this approach directly with two pointers on a sorted array. With a bit more thought, you would realize the answer is effectively the median as we are shifting the left and right pointer until their index differ by less than 1. This is the same as finding the middle of the array!"
                    },
                    {
                        "username": "mokuteno",
                        "content": "First, what I would like to point out is, *when the number of points is even, while median could give the shortest distance sum, it is not the only point that could give the shortest distance sum*.\\nIt\\'s actually intuitive, if we have 4 points, any value (not discrete) between the 2nd and 3rd point will give the same shortest distance sum.\\n\\nProof, using Triangle Inequality (https://en.wikipedia.org/wiki/Triangle_inequality)\\nSuppose we have n points, a1...an, sorted.\\n1) Assume there\\'s a point x.\\n2) According to Triangle Inequality, the distance sum of x to a1, and x to an : |x-a1|+|x-an|, has the minimum value when a1<=x<=an \\n3) Similarly, |x-a2|+|x-a(n-1)|, has minimum value when a2<=x<=a(n-1)\\n4) If n is odd, sum up the distance from x to all pair of points, we will get a unique value, x=a([n/2]+1)\\n5) However, if n is even, the last pair will be |x-a([n/2])|+|x-a([n/2]+1)|, which has the min value when a([n/2])<=x<=a([n/2]+1)\\n\\nNote that when n is even, we got a range of x: a([n/2])<=x<=a([n/2]+1), and median is just a possible value in this range.\\n"
                    },
                    {
                        "username": "dongfang_a",
                        "content": "As title. Return value is double."
                    },
                    {
                        "username": "WorldHello",
                        "content": "This question is all about figuring out that median is the key."
                    }
                ]
            },
            {
                "id": 1568501,
                "content": [
                    {
                        "username": "TonyLic",
                        "content": "When I first saw this question, intuitively I know shortest meeting point should be found in two separate dimension, however, even if on 1-D, how could I find the shortest meeting point? Then I clicked discuss and found out everybody's solution was using median to get shortest meeting point? WHY?\\n\\nActually, there is a famous conclusion in statistics that [the median minimizes the sum of absolute deviations][1].\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations"
                    },
                    {
                        "username": "jeromesbu",
                        "content": "I found a lot of questions about why the median could minimize the total manhattan distance. Here comes the explanation. The explanation in [the median minimizes the sum of absolute deviations][1] is not solid either.\\n\\n **1. Let's start from the 1-dimension case** \\n\\nSuppose we have n people living on a straight street and they want to find somewhere to meet. The total distance is \\n\\n![enter image description here][2]\\n\\nwhere ![enter image description here][3] is the location of each house and ![enter image description here][4]\\nis the meeting point. To minimize this problem, take the derivative of this equation. Each term will give you \\n\\n - 1, if ![enter image description here][5]\\n - -1, if ![enter image description here][6]\\n\\nTo reach the minimum, the derivative must be 0. To make the derivative 0, the number of 1s and -1s must equal. \\n\\n - If n is even, then m must be located between the middle two locations (Any locations between them will give you the minimum, **not necessarily** the median). \\n - If n is odd, then m must be located on the middle one house. That's the median.\\n\\n**2. Then we can discuss the 2-dimension case**\\n\\nLet's write down the equation directly.\\n\\n![enter image description here][7]\\n\\nSo this time, we have two variables - m and n. Recall what you've learned in multiple variables calculus. To find the minimum, we need to take the partial derivatives for the equation. And each partial derivative (or we can say, each dimension) will give you the same result as the 1-D case.\\n\\n**3. So we can even solve the problem in any dimension**\\n\\nBecause every dimension is independent to each other. Do every dimension as 1-D case.\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations\\n  [2]: https://latex.codecogs.com/gif.latex?%5Csum_i%7B%7Cx_i-m%7C%7D\\n  [3]: https://latex.codecogs.com/gif.latex?x_i\\n  [4]: https://latex.codecogs.com/gif.latex?m\\n  [5]: https://latex.codecogs.com/gif.latex?m%20%3E%20x_i\\n  [6]: https://latex.codecogs.com/gif.latex?m%20%3C%20x_i\\n  [7]: https://latex.codecogs.com/gif.latex?%5Csum_i%20%7Cx_i-m%7C+%7Cy_i-n%7C"
                    },
                    {
                        "username": "zzg_zzm",
                        "content": "The  Best Meeting Point problem can be reduced to a 1-dimension pure math problem:\\n* **Given an increasing sequence {x<sub>i=1:N</sub>}, find real number x to minimize function f(x) := &Sigma;<sub>i=1:N</sub> |x-x<sub>i</sub>|.**\\n\\nSimply grouping the sum into pairs:\\n* f(x) = &Sigma;<sub>i=1:N/2</sub> (| x-x<sub>i</sub> | + | x-x<sub>N+1-i</sub> |) + (N%2)*| x-x<sub>N/2+1</sub> |.\\n\\nNote that we don't have the last term if N is even since they are all grouped into pairs. I will explain why we need to (have to) group the sum in such a form later.\\n\\nUsing triangle inequality, |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| = x<sub>N+1-i</sub> - x<sub>i</sub>, and the fact N%2 >= 0, so we can find a lower bound for f\\n* f(x) >= &Sigma;<sub>i=1:N/2</sub> (x<sub>N+1-i</sub> - x<sub>i</sub>),\\n\\nwhich means if we could actually pick an x to achieve this value, we find the optimal x!\\n\\nActually, inequality |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| achieves equality if and only if x is in [x<sub>i</sub>, x<sub>N+1-i</sub>]. Since {x<sub>i=1:N</sub>} is increasing, closed interval sequence { [x<sub>i</sub>, x<sub>N+1-i</sub>] }<sub>i=1:N/2</sub> is nested, and so they have non-empty common intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>]. This is critical, and this is why we need to design the grouping like this. Now it is trivial to see that picking any value in the intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>] will reach the minimum if N is even, and only x = x<sub>N/2+1</sub> can reach the minimum if N is odd (since we also have to make |x-x<sub>N/2+1</sub>| zero)."
                    },
                    {
                        "username": "wennot",
                        "content": "Since it is Manhattan distance, we know we can break up the problem into picking an optimal x-coordinate and optimal y-coordinate. \\n\\nLet us consider the 1D case then and consider the following cases. \\n**Case 1: One-point:**\\nThe optimal answer is the point itself. \\n\\n**Case 2: Two-points:**\\nThe optimal answer is anywhere between or on the two points.\\n\\n**Case 3: Three-points:**\\nBased on case 2, we know the outer two points (left-most and right-most) do not affect the final answer as long as we pick a point between the two. So we can ignore them and focus on the inner point. So we can pick the middle point itself.\\n\\n**Case 4: Four-points:**\\nBased on case 2, we know the outer two points do not affect the final answer as long as we pick a point between the two. So we ignore them and focus on the inner pair. Based on case 2, we know any point between the two would suffice. For convenience, we can select the first point. \\n\\nHence we can do the following approach:\\n**Case 5: Odd number of points:**\\nRepeatedly apply case 2 and evict the first and last point, until you are left with one point, that is the answer.\\n\\n**Case 6: Even number of points:** \\nRepeatedly apply case 2 until we have two points left, pick any point between the two, for convenience we can select the first point, that is the answer.  \\n\\nYou can implement this approach directly with two pointers on a sorted array. With a bit more thought, you would realize the answer is effectively the median as we are shifting the left and right pointer until their index differ by less than 1. This is the same as finding the middle of the array!"
                    },
                    {
                        "username": "mokuteno",
                        "content": "First, what I would like to point out is, *when the number of points is even, while median could give the shortest distance sum, it is not the only point that could give the shortest distance sum*.\\nIt\\'s actually intuitive, if we have 4 points, any value (not discrete) between the 2nd and 3rd point will give the same shortest distance sum.\\n\\nProof, using Triangle Inequality (https://en.wikipedia.org/wiki/Triangle_inequality)\\nSuppose we have n points, a1...an, sorted.\\n1) Assume there\\'s a point x.\\n2) According to Triangle Inequality, the distance sum of x to a1, and x to an : |x-a1|+|x-an|, has the minimum value when a1<=x<=an \\n3) Similarly, |x-a2|+|x-a(n-1)|, has minimum value when a2<=x<=a(n-1)\\n4) If n is odd, sum up the distance from x to all pair of points, we will get a unique value, x=a([n/2]+1)\\n5) However, if n is even, the last pair will be |x-a([n/2])|+|x-a([n/2]+1)|, which has the min value when a([n/2])<=x<=a([n/2]+1)\\n\\nNote that when n is even, we got a range of x: a([n/2])<=x<=a([n/2]+1), and median is just a possible value in this range.\\n"
                    },
                    {
                        "username": "dongfang_a",
                        "content": "As title. Return value is double."
                    },
                    {
                        "username": "WorldHello",
                        "content": "This question is all about figuring out that median is the key."
                    }
                ]
            },
            {
                "id": 1573391,
                "content": [
                    {
                        "username": "TonyLic",
                        "content": "When I first saw this question, intuitively I know shortest meeting point should be found in two separate dimension, however, even if on 1-D, how could I find the shortest meeting point? Then I clicked discuss and found out everybody's solution was using median to get shortest meeting point? WHY?\\n\\nActually, there is a famous conclusion in statistics that [the median minimizes the sum of absolute deviations][1].\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations"
                    },
                    {
                        "username": "jeromesbu",
                        "content": "I found a lot of questions about why the median could minimize the total manhattan distance. Here comes the explanation. The explanation in [the median minimizes the sum of absolute deviations][1] is not solid either.\\n\\n **1. Let's start from the 1-dimension case** \\n\\nSuppose we have n people living on a straight street and they want to find somewhere to meet. The total distance is \\n\\n![enter image description here][2]\\n\\nwhere ![enter image description here][3] is the location of each house and ![enter image description here][4]\\nis the meeting point. To minimize this problem, take the derivative of this equation. Each term will give you \\n\\n - 1, if ![enter image description here][5]\\n - -1, if ![enter image description here][6]\\n\\nTo reach the minimum, the derivative must be 0. To make the derivative 0, the number of 1s and -1s must equal. \\n\\n - If n is even, then m must be located between the middle two locations (Any locations between them will give you the minimum, **not necessarily** the median). \\n - If n is odd, then m must be located on the middle one house. That's the median.\\n\\n**2. Then we can discuss the 2-dimension case**\\n\\nLet's write down the equation directly.\\n\\n![enter image description here][7]\\n\\nSo this time, we have two variables - m and n. Recall what you've learned in multiple variables calculus. To find the minimum, we need to take the partial derivatives for the equation. And each partial derivative (or we can say, each dimension) will give you the same result as the 1-D case.\\n\\n**3. So we can even solve the problem in any dimension**\\n\\nBecause every dimension is independent to each other. Do every dimension as 1-D case.\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations\\n  [2]: https://latex.codecogs.com/gif.latex?%5Csum_i%7B%7Cx_i-m%7C%7D\\n  [3]: https://latex.codecogs.com/gif.latex?x_i\\n  [4]: https://latex.codecogs.com/gif.latex?m\\n  [5]: https://latex.codecogs.com/gif.latex?m%20%3E%20x_i\\n  [6]: https://latex.codecogs.com/gif.latex?m%20%3C%20x_i\\n  [7]: https://latex.codecogs.com/gif.latex?%5Csum_i%20%7Cx_i-m%7C+%7Cy_i-n%7C"
                    },
                    {
                        "username": "zzg_zzm",
                        "content": "The  Best Meeting Point problem can be reduced to a 1-dimension pure math problem:\\n* **Given an increasing sequence {x<sub>i=1:N</sub>}, find real number x to minimize function f(x) := &Sigma;<sub>i=1:N</sub> |x-x<sub>i</sub>|.**\\n\\nSimply grouping the sum into pairs:\\n* f(x) = &Sigma;<sub>i=1:N/2</sub> (| x-x<sub>i</sub> | + | x-x<sub>N+1-i</sub> |) + (N%2)*| x-x<sub>N/2+1</sub> |.\\n\\nNote that we don't have the last term if N is even since they are all grouped into pairs. I will explain why we need to (have to) group the sum in such a form later.\\n\\nUsing triangle inequality, |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| = x<sub>N+1-i</sub> - x<sub>i</sub>, and the fact N%2 >= 0, so we can find a lower bound for f\\n* f(x) >= &Sigma;<sub>i=1:N/2</sub> (x<sub>N+1-i</sub> - x<sub>i</sub>),\\n\\nwhich means if we could actually pick an x to achieve this value, we find the optimal x!\\n\\nActually, inequality |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| achieves equality if and only if x is in [x<sub>i</sub>, x<sub>N+1-i</sub>]. Since {x<sub>i=1:N</sub>} is increasing, closed interval sequence { [x<sub>i</sub>, x<sub>N+1-i</sub>] }<sub>i=1:N/2</sub> is nested, and so they have non-empty common intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>]. This is critical, and this is why we need to design the grouping like this. Now it is trivial to see that picking any value in the intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>] will reach the minimum if N is even, and only x = x<sub>N/2+1</sub> can reach the minimum if N is odd (since we also have to make |x-x<sub>N/2+1</sub>| zero)."
                    },
                    {
                        "username": "wennot",
                        "content": "Since it is Manhattan distance, we know we can break up the problem into picking an optimal x-coordinate and optimal y-coordinate. \\n\\nLet us consider the 1D case then and consider the following cases. \\n**Case 1: One-point:**\\nThe optimal answer is the point itself. \\n\\n**Case 2: Two-points:**\\nThe optimal answer is anywhere between or on the two points.\\n\\n**Case 3: Three-points:**\\nBased on case 2, we know the outer two points (left-most and right-most) do not affect the final answer as long as we pick a point between the two. So we can ignore them and focus on the inner point. So we can pick the middle point itself.\\n\\n**Case 4: Four-points:**\\nBased on case 2, we know the outer two points do not affect the final answer as long as we pick a point between the two. So we ignore them and focus on the inner pair. Based on case 2, we know any point between the two would suffice. For convenience, we can select the first point. \\n\\nHence we can do the following approach:\\n**Case 5: Odd number of points:**\\nRepeatedly apply case 2 and evict the first and last point, until you are left with one point, that is the answer.\\n\\n**Case 6: Even number of points:** \\nRepeatedly apply case 2 until we have two points left, pick any point between the two, for convenience we can select the first point, that is the answer.  \\n\\nYou can implement this approach directly with two pointers on a sorted array. With a bit more thought, you would realize the answer is effectively the median as we are shifting the left and right pointer until their index differ by less than 1. This is the same as finding the middle of the array!"
                    },
                    {
                        "username": "mokuteno",
                        "content": "First, what I would like to point out is, *when the number of points is even, while median could give the shortest distance sum, it is not the only point that could give the shortest distance sum*.\\nIt\\'s actually intuitive, if we have 4 points, any value (not discrete) between the 2nd and 3rd point will give the same shortest distance sum.\\n\\nProof, using Triangle Inequality (https://en.wikipedia.org/wiki/Triangle_inequality)\\nSuppose we have n points, a1...an, sorted.\\n1) Assume there\\'s a point x.\\n2) According to Triangle Inequality, the distance sum of x to a1, and x to an : |x-a1|+|x-an|, has the minimum value when a1<=x<=an \\n3) Similarly, |x-a2|+|x-a(n-1)|, has minimum value when a2<=x<=a(n-1)\\n4) If n is odd, sum up the distance from x to all pair of points, we will get a unique value, x=a([n/2]+1)\\n5) However, if n is even, the last pair will be |x-a([n/2])|+|x-a([n/2]+1)|, which has the min value when a([n/2])<=x<=a([n/2]+1)\\n\\nNote that when n is even, we got a range of x: a([n/2])<=x<=a([n/2]+1), and median is just a possible value in this range.\\n"
                    },
                    {
                        "username": "dongfang_a",
                        "content": "As title. Return value is double."
                    },
                    {
                        "username": "WorldHello",
                        "content": "This question is all about figuring out that median is the key."
                    }
                ]
            },
            {
                "id": 1574437,
                "content": [
                    {
                        "username": "TonyLic",
                        "content": "When I first saw this question, intuitively I know shortest meeting point should be found in two separate dimension, however, even if on 1-D, how could I find the shortest meeting point? Then I clicked discuss and found out everybody's solution was using median to get shortest meeting point? WHY?\\n\\nActually, there is a famous conclusion in statistics that [the median minimizes the sum of absolute deviations][1].\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations"
                    },
                    {
                        "username": "jeromesbu",
                        "content": "I found a lot of questions about why the median could minimize the total manhattan distance. Here comes the explanation. The explanation in [the median minimizes the sum of absolute deviations][1] is not solid either.\\n\\n **1. Let's start from the 1-dimension case** \\n\\nSuppose we have n people living on a straight street and they want to find somewhere to meet. The total distance is \\n\\n![enter image description here][2]\\n\\nwhere ![enter image description here][3] is the location of each house and ![enter image description here][4]\\nis the meeting point. To minimize this problem, take the derivative of this equation. Each term will give you \\n\\n - 1, if ![enter image description here][5]\\n - -1, if ![enter image description here][6]\\n\\nTo reach the minimum, the derivative must be 0. To make the derivative 0, the number of 1s and -1s must equal. \\n\\n - If n is even, then m must be located between the middle two locations (Any locations between them will give you the minimum, **not necessarily** the median). \\n - If n is odd, then m must be located on the middle one house. That's the median.\\n\\n**2. Then we can discuss the 2-dimension case**\\n\\nLet's write down the equation directly.\\n\\n![enter image description here][7]\\n\\nSo this time, we have two variables - m and n. Recall what you've learned in multiple variables calculus. To find the minimum, we need to take the partial derivatives for the equation. And each partial derivative (or we can say, each dimension) will give you the same result as the 1-D case.\\n\\n**3. So we can even solve the problem in any dimension**\\n\\nBecause every dimension is independent to each other. Do every dimension as 1-D case.\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations\\n  [2]: https://latex.codecogs.com/gif.latex?%5Csum_i%7B%7Cx_i-m%7C%7D\\n  [3]: https://latex.codecogs.com/gif.latex?x_i\\n  [4]: https://latex.codecogs.com/gif.latex?m\\n  [5]: https://latex.codecogs.com/gif.latex?m%20%3E%20x_i\\n  [6]: https://latex.codecogs.com/gif.latex?m%20%3C%20x_i\\n  [7]: https://latex.codecogs.com/gif.latex?%5Csum_i%20%7Cx_i-m%7C+%7Cy_i-n%7C"
                    },
                    {
                        "username": "zzg_zzm",
                        "content": "The  Best Meeting Point problem can be reduced to a 1-dimension pure math problem:\\n* **Given an increasing sequence {x<sub>i=1:N</sub>}, find real number x to minimize function f(x) := &Sigma;<sub>i=1:N</sub> |x-x<sub>i</sub>|.**\\n\\nSimply grouping the sum into pairs:\\n* f(x) = &Sigma;<sub>i=1:N/2</sub> (| x-x<sub>i</sub> | + | x-x<sub>N+1-i</sub> |) + (N%2)*| x-x<sub>N/2+1</sub> |.\\n\\nNote that we don't have the last term if N is even since they are all grouped into pairs. I will explain why we need to (have to) group the sum in such a form later.\\n\\nUsing triangle inequality, |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| = x<sub>N+1-i</sub> - x<sub>i</sub>, and the fact N%2 >= 0, so we can find a lower bound for f\\n* f(x) >= &Sigma;<sub>i=1:N/2</sub> (x<sub>N+1-i</sub> - x<sub>i</sub>),\\n\\nwhich means if we could actually pick an x to achieve this value, we find the optimal x!\\n\\nActually, inequality |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| achieves equality if and only if x is in [x<sub>i</sub>, x<sub>N+1-i</sub>]. Since {x<sub>i=1:N</sub>} is increasing, closed interval sequence { [x<sub>i</sub>, x<sub>N+1-i</sub>] }<sub>i=1:N/2</sub> is nested, and so they have non-empty common intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>]. This is critical, and this is why we need to design the grouping like this. Now it is trivial to see that picking any value in the intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>] will reach the minimum if N is even, and only x = x<sub>N/2+1</sub> can reach the minimum if N is odd (since we also have to make |x-x<sub>N/2+1</sub>| zero)."
                    },
                    {
                        "username": "wennot",
                        "content": "Since it is Manhattan distance, we know we can break up the problem into picking an optimal x-coordinate and optimal y-coordinate. \\n\\nLet us consider the 1D case then and consider the following cases. \\n**Case 1: One-point:**\\nThe optimal answer is the point itself. \\n\\n**Case 2: Two-points:**\\nThe optimal answer is anywhere between or on the two points.\\n\\n**Case 3: Three-points:**\\nBased on case 2, we know the outer two points (left-most and right-most) do not affect the final answer as long as we pick a point between the two. So we can ignore them and focus on the inner point. So we can pick the middle point itself.\\n\\n**Case 4: Four-points:**\\nBased on case 2, we know the outer two points do not affect the final answer as long as we pick a point between the two. So we ignore them and focus on the inner pair. Based on case 2, we know any point between the two would suffice. For convenience, we can select the first point. \\n\\nHence we can do the following approach:\\n**Case 5: Odd number of points:**\\nRepeatedly apply case 2 and evict the first and last point, until you are left with one point, that is the answer.\\n\\n**Case 6: Even number of points:** \\nRepeatedly apply case 2 until we have two points left, pick any point between the two, for convenience we can select the first point, that is the answer.  \\n\\nYou can implement this approach directly with two pointers on a sorted array. With a bit more thought, you would realize the answer is effectively the median as we are shifting the left and right pointer until their index differ by less than 1. This is the same as finding the middle of the array!"
                    },
                    {
                        "username": "mokuteno",
                        "content": "First, what I would like to point out is, *when the number of points is even, while median could give the shortest distance sum, it is not the only point that could give the shortest distance sum*.\\nIt\\'s actually intuitive, if we have 4 points, any value (not discrete) between the 2nd and 3rd point will give the same shortest distance sum.\\n\\nProof, using Triangle Inequality (https://en.wikipedia.org/wiki/Triangle_inequality)\\nSuppose we have n points, a1...an, sorted.\\n1) Assume there\\'s a point x.\\n2) According to Triangle Inequality, the distance sum of x to a1, and x to an : |x-a1|+|x-an|, has the minimum value when a1<=x<=an \\n3) Similarly, |x-a2|+|x-a(n-1)|, has minimum value when a2<=x<=a(n-1)\\n4) If n is odd, sum up the distance from x to all pair of points, we will get a unique value, x=a([n/2]+1)\\n5) However, if n is even, the last pair will be |x-a([n/2])|+|x-a([n/2]+1)|, which has the min value when a([n/2])<=x<=a([n/2]+1)\\n\\nNote that when n is even, we got a range of x: a([n/2])<=x<=a([n/2]+1), and median is just a possible value in this range.\\n"
                    },
                    {
                        "username": "dongfang_a",
                        "content": "As title. Return value is double."
                    },
                    {
                        "username": "WorldHello",
                        "content": "This question is all about figuring out that median is the key."
                    }
                ]
            },
            {
                "id": 1774656,
                "content": [
                    {
                        "username": "TonyLic",
                        "content": "When I first saw this question, intuitively I know shortest meeting point should be found in two separate dimension, however, even if on 1-D, how could I find the shortest meeting point? Then I clicked discuss and found out everybody's solution was using median to get shortest meeting point? WHY?\\n\\nActually, there is a famous conclusion in statistics that [the median minimizes the sum of absolute deviations][1].\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations"
                    },
                    {
                        "username": "jeromesbu",
                        "content": "I found a lot of questions about why the median could minimize the total manhattan distance. Here comes the explanation. The explanation in [the median minimizes the sum of absolute deviations][1] is not solid either.\\n\\n **1. Let's start from the 1-dimension case** \\n\\nSuppose we have n people living on a straight street and they want to find somewhere to meet. The total distance is \\n\\n![enter image description here][2]\\n\\nwhere ![enter image description here][3] is the location of each house and ![enter image description here][4]\\nis the meeting point. To minimize this problem, take the derivative of this equation. Each term will give you \\n\\n - 1, if ![enter image description here][5]\\n - -1, if ![enter image description here][6]\\n\\nTo reach the minimum, the derivative must be 0. To make the derivative 0, the number of 1s and -1s must equal. \\n\\n - If n is even, then m must be located between the middle two locations (Any locations between them will give you the minimum, **not necessarily** the median). \\n - If n is odd, then m must be located on the middle one house. That's the median.\\n\\n**2. Then we can discuss the 2-dimension case**\\n\\nLet's write down the equation directly.\\n\\n![enter image description here][7]\\n\\nSo this time, we have two variables - m and n. Recall what you've learned in multiple variables calculus. To find the minimum, we need to take the partial derivatives for the equation. And each partial derivative (or we can say, each dimension) will give you the same result as the 1-D case.\\n\\n**3. So we can even solve the problem in any dimension**\\n\\nBecause every dimension is independent to each other. Do every dimension as 1-D case.\\n\\n\\n  [1]: http://math.stackexchange.com/questions/113270/the-median-minimizes-the-sum-of-absolute-deviations\\n  [2]: https://latex.codecogs.com/gif.latex?%5Csum_i%7B%7Cx_i-m%7C%7D\\n  [3]: https://latex.codecogs.com/gif.latex?x_i\\n  [4]: https://latex.codecogs.com/gif.latex?m\\n  [5]: https://latex.codecogs.com/gif.latex?m%20%3E%20x_i\\n  [6]: https://latex.codecogs.com/gif.latex?m%20%3C%20x_i\\n  [7]: https://latex.codecogs.com/gif.latex?%5Csum_i%20%7Cx_i-m%7C+%7Cy_i-n%7C"
                    },
                    {
                        "username": "zzg_zzm",
                        "content": "The  Best Meeting Point problem can be reduced to a 1-dimension pure math problem:\\n* **Given an increasing sequence {x<sub>i=1:N</sub>}, find real number x to minimize function f(x) := &Sigma;<sub>i=1:N</sub> |x-x<sub>i</sub>|.**\\n\\nSimply grouping the sum into pairs:\\n* f(x) = &Sigma;<sub>i=1:N/2</sub> (| x-x<sub>i</sub> | + | x-x<sub>N+1-i</sub> |) + (N%2)*| x-x<sub>N/2+1</sub> |.\\n\\nNote that we don't have the last term if N is even since they are all grouped into pairs. I will explain why we need to (have to) group the sum in such a form later.\\n\\nUsing triangle inequality, |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| = x<sub>N+1-i</sub> - x<sub>i</sub>, and the fact N%2 >= 0, so we can find a lower bound for f\\n* f(x) >= &Sigma;<sub>i=1:N/2</sub> (x<sub>N+1-i</sub> - x<sub>i</sub>),\\n\\nwhich means if we could actually pick an x to achieve this value, we find the optimal x!\\n\\nActually, inequality |x-x<sub>i</sub>| + |x-x<sub>N+1-i</sub>| >= |x<sub>N+1-i</sub> - x<sub>i</sub>| achieves equality if and only if x is in [x<sub>i</sub>, x<sub>N+1-i</sub>]. Since {x<sub>i=1:N</sub>} is increasing, closed interval sequence { [x<sub>i</sub>, x<sub>N+1-i</sub>] }<sub>i=1:N/2</sub> is nested, and so they have non-empty common intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>]. This is critical, and this is why we need to design the grouping like this. Now it is trivial to see that picking any value in the intersection [x<sub>N/2</sub>, x<sub>N-N/2+1</sub>] will reach the minimum if N is even, and only x = x<sub>N/2+1</sub> can reach the minimum if N is odd (since we also have to make |x-x<sub>N/2+1</sub>| zero)."
                    },
                    {
                        "username": "wennot",
                        "content": "Since it is Manhattan distance, we know we can break up the problem into picking an optimal x-coordinate and optimal y-coordinate. \\n\\nLet us consider the 1D case then and consider the following cases. \\n**Case 1: One-point:**\\nThe optimal answer is the point itself. \\n\\n**Case 2: Two-points:**\\nThe optimal answer is anywhere between or on the two points.\\n\\n**Case 3: Three-points:**\\nBased on case 2, we know the outer two points (left-most and right-most) do not affect the final answer as long as we pick a point between the two. So we can ignore them and focus on the inner point. So we can pick the middle point itself.\\n\\n**Case 4: Four-points:**\\nBased on case 2, we know the outer two points do not affect the final answer as long as we pick a point between the two. So we ignore them and focus on the inner pair. Based on case 2, we know any point between the two would suffice. For convenience, we can select the first point. \\n\\nHence we can do the following approach:\\n**Case 5: Odd number of points:**\\nRepeatedly apply case 2 and evict the first and last point, until you are left with one point, that is the answer.\\n\\n**Case 6: Even number of points:** \\nRepeatedly apply case 2 until we have two points left, pick any point between the two, for convenience we can select the first point, that is the answer.  \\n\\nYou can implement this approach directly with two pointers on a sorted array. With a bit more thought, you would realize the answer is effectively the median as we are shifting the left and right pointer until their index differ by less than 1. This is the same as finding the middle of the array!"
                    },
                    {
                        "username": "mokuteno",
                        "content": "First, what I would like to point out is, *when the number of points is even, while median could give the shortest distance sum, it is not the only point that could give the shortest distance sum*.\\nIt\\'s actually intuitive, if we have 4 points, any value (not discrete) between the 2nd and 3rd point will give the same shortest distance sum.\\n\\nProof, using Triangle Inequality (https://en.wikipedia.org/wiki/Triangle_inequality)\\nSuppose we have n points, a1...an, sorted.\\n1) Assume there\\'s a point x.\\n2) According to Triangle Inequality, the distance sum of x to a1, and x to an : |x-a1|+|x-an|, has the minimum value when a1<=x<=an \\n3) Similarly, |x-a2|+|x-a(n-1)|, has minimum value when a2<=x<=a(n-1)\\n4) If n is odd, sum up the distance from x to all pair of points, we will get a unique value, x=a([n/2]+1)\\n5) However, if n is even, the last pair will be |x-a([n/2])|+|x-a([n/2]+1)|, which has the min value when a([n/2])<=x<=a([n/2]+1)\\n\\nNote that when n is even, we got a range of x: a([n/2])<=x<=a([n/2]+1), and median is just a possible value in this range.\\n"
                    },
                    {
                        "username": "dongfang_a",
                        "content": "As title. Return value is double."
                    },
                    {
                        "username": "WorldHello",
                        "content": "This question is all about figuring out that median is the key."
                    }
                ]
            }
        ]
    },
    {
        "title": "Rotate Function",
        "question_content": "<p>You are given an integer array <code>nums</code> of length <code>n</code>.</p>\n\n<p>Assume <code>arr<sub>k</sub></code> to be an array obtained by rotating <code>nums</code> by <code>k</code> positions clock-wise. We define the <strong>rotation function</strong> <code>F</code> on <code>nums</code> as follow:</p>\n\n<ul>\n\t<li><code>F(k) = 0 * arr<sub>k</sub>[0] + 1 * arr<sub>k</sub>[1] + ... + (n - 1) * arr<sub>k</sub>[n - 1].</code></li>\n</ul>\n\n<p>Return <em>the maximum value of</em> <code>F(0), F(1), ..., F(n-1)</code>.</p>\n\n<p>The test cases are generated so that the answer fits in a <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,3,2,6]\n<strong>Output:</strong> 26\n<strong>Explanation:</strong>\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [100]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-100 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
        "solutions": [
            {
                "id": 87853,
                "title": "java-o-n-solution-with-explanation",
                "content": "```\\nF(k) = 0 * Bk[0] + 1 * Bk[1] + ... + (n-1) * Bk[n-1]\\nF(k-1) = 0 * Bk-1[0] + 1 * Bk-1[1] + ... + (n-1) * Bk-1[n-1]\\n       = 0 * Bk[1] + 1 * Bk[2] + ... + (n-2) * Bk[n-1] + (n-1) * Bk[0]\\n```\\nThen,\\n```\\nF(k) - F(k-1) = Bk[1] + Bk[2] + ... + Bk[n-1] + (1-n)Bk[0]\\n              = (Bk[0] + ... + Bk[n-1]) - nBk[0]\\n              = sum - nBk[0]\\n```\\nThus,\\n```\\nF(k) = F(k-1) + sum - nBk[0]\\n```\\n\\nWhat is Bk[0]?\\n```\\nk = 0; B[0] = A[0];\\nk = 1; B[0] = A[len-1];\\nk = 2; B[0] = A[len-2];\\n...\\n```\\n```java\\nint allSum = 0;\\nint len = A.length;\\nint F = 0;\\nfor (int i = 0; i < len; i++) {\\n    F += i * A[i];\\n    allSum += A[i];\\n}\\nint max = F;\\nfor (int i = len - 1; i >= 1; i--) {\\n    F = F + allSum - len * A[i];\\n    max = Math.max(F, max);\\n}\\nreturn max;   \\n```",
                "solutionTags": [],
                "code": "```\\nF(k) = 0 * Bk[0] + 1 * Bk[1] + ... + (n-1) * Bk[n-1]\\nF(k-1) = 0 * Bk-1[0] + 1 * Bk-1[1] + ... + (n-1) * Bk-1[n-1]\\n       = 0 * Bk[1] + 1 * Bk[2] + ... + (n-2) * Bk[n-1] + (n-1) * Bk[0]\\n```\n```\\nF(k) - F(k-1) = Bk[1] + Bk[2] + ... + Bk[n-1] + (1-n)Bk[0]\\n              = (Bk[0] + ... + Bk[n-1]) - nBk[0]\\n              = sum - nBk[0]\\n```\n```\\nF(k) = F(k-1) + sum - nBk[0]\\n```\n```\\nk = 0; B[0] = A[0];\\nk = 1; B[0] = A[len-1];\\nk = 2; B[0] = A[len-2];\\n...\\n```\n```java\\nint allSum = 0;\\nint len = A.length;\\nint F = 0;\\nfor (int i = 0; i < len; i++) {\\n    F += i * A[i];\\n    allSum += A[i];\\n}\\nint max = F;\\nfor (int i = len - 1; i >= 1; i--) {\\n    F = F + allSum - len * A[i];\\n    max = Math.max(F, max);\\n}\\nreturn max;   \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1243652,
                "title": "dp-code-explained-in-detail-o-n-time-o-n-space",
                "content": "**EXPLANATION**\\n\\nLet us do some pre-processing using basic Maths.\\n\\nLet the array elements be: [*a b c d e*].\\n\\n**Length of array *represented by N*** = 5  \\n**Sum of elements of array *represented by SUM*** = a + b + c + d + e\\n\\nNow, as per the question :\\n\\nF(0) = (0 * a) + (1 * b) + (2 * c) + (3 * d) + (4 * e) = 0 + b + 2c + 3d + 4e\\nF(1) = (1 * a) + (2 * b) + (3 * c) + (4 * d) + (0 * e) = a + 2b + 3c + 4d + 0\\nF(2) = (2 * a) + (3 * b) + (4 * c) + (0 * d) + (1 * e) = 2a + 3b + 4c + 0 + e\\n\\nNow subtracting 2 equations, \\n\\n**F(1) - F(0)** = a + b + c + d - 4e = a + b + c + d + e - 5e\\nTherefore, **F(1)** = **F(0)** + a + b + c + d + e - 5e = **F(0) + SUM - N***e\\n\\n**F(2) - F(1)** = a + b + c + e - 4d = a + b + c + d + e - 5d\\nTherefore, **F(2)** = **F(1)** + a + b + c + d + e - 5d = **F(1) + SUM - N***d\\n\\nGeneralizing it, we get the following relation:\\n\\n**F(K) = F(K-1) + SUM - N * (( K-1)th element from end of array)**\\ni.e. **F(K) = F(K-1) + SUM - N * (array [N - 1 - (K-1)])** = **F(K-1) + SUM - N * (array [N - K])**\\n\\nNow, I think it is pretty much clear that we can use a 1D DP array to solve this question as depicted in the code below.\\n\\n*------Please upvote if you liked the solution.  Please put your thoughts/doubts/queries in the comment section below.  I will try my best to answer them.------*\\n```\\nclass Solution {\\n    public int maxRotateFunction (int[] A) {\\n        if (A == null || A.length == 0)\\n            return 0;\\n        int sum = 0, F0 = 0, max = Integer.MIN_VALUE;\\n        for (int i = 0; i < A.length; i++) {\\n            sum += A [i];\\n            F0 += i * A [i];\\n        }\\n        int dp [] = new int [A.length];\\n        dp [0] = F0;\\n        max = dp [0];\\n        for (int i = 1; i < A.length; i++) {\\n            dp [i] = dp [i-1] + sum - A.length * A [A.length - i];\\n            max = Math.max (max, dp [i]);\\n        }\\n        return max;\\n    }\\n}\\n```\\n\\nPlease **upvote!** if you like the solution.",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction (int[] A) {\\n        if (A == null || A.length == 0)\\n            return 0;\\n        int sum = 0, F0 = 0, max = Integer.MIN_VALUE;\\n        for (int i = 0; i < A.length; i++) {\\n            sum += A [i];\\n            F0 += i * A [i];\\n        }\\n        int dp [] = new int [A.length];\\n        dp [0] = F0;\\n        max = dp [0];\\n        for (int i = 1; i < A.length; i++) {\\n            dp [i] = dp [i-1] + sum - A.length * A [A.length - i];\\n            max = Math.max (max, dp [i]);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87842,
                "title": "java-solution-o-n-with-non-mathametical-explaination",
                "content": "Consider we have 5 coins A,B,C,D,E\\n\\nAccording to the problem statement \\nF(0) = (0*A)  +  (1*B) +  (2*C) + (3*D) + (4*E)\\nF(1) = (4*A)  +  (0*B) +  (1*C) + (2*D) + (3*E)\\nF(2) = (3*A)  +  (4*B) +  (0*C) + (1*D) + (2*E)\\n\\nThis problem at a glance seem like a difficult problem. I am not very strong in mathematics, so this is how I visualize this problem \\n\\nWe can construct F(1) from F(0) by two step:\\nStep 1. taking away one count of each coin from F(0), this is done by subtracting \"sum\" from \"iteration\" in the code below\\nafter step 1 F(0) = (-1*A)  +  (0*B) +  (1*C) + (2*D) + (3*E)\\n\\nStep 2. Add n times the element which didn't contributed in F(0), which is A. This is done by adding \"A[j-1]*len\" in the code below.\\nafter step 2 F(0) = (4*A)  +  (0*B) +  (1*C) + (2*D) + (3*E)  \\n\\nAt this point F(0) can be considered as F(1) and F(2) to F(4) can be constructed by repeating the above steps. \\n\\nHope this explanation helps, cheers!\\n\\n  \\n```\\n    public int maxRotateFunction(int[] A) {\\n        if(A.length == 0){\\n            return 0;\\n        }\\n        \\n        int sum =0, iteration = 0, len = A.length;\\n        \\n        for(int i=0; i<len; i++){\\n            sum += A[i];\\n            iteration += (A[i] * i);\\n        }\\n        \\n        int max = iteration;\\n        for(int j=1; j<len; j++){\\n            // for next iteration lets remove one entry value of each entry and the prev 0 * k\\n            iteration = iteration - sum + A[j-1]*len;\\n            max = Math.max(max, iteration);\\n        }\\n        \\n        return max;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public int maxRotateFunction(int[] A) {\\n        if(A.length == 0){\\n            return 0;\\n        }\\n        \\n        int sum =0, iteration = 0, len = A.length;\\n        \\n        for(int i=0; i<len; i++){\\n            sum += A[i];\\n            iteration += (A[i] * i);\\n        }\\n        \\n        int max = iteration;\\n        for(int j=1; j<len; j++){\\n            // for next iteration lets remove one entry value of each entry and the prev 0 * k\\n            iteration = iteration - sum + A[j-1]*len;\\n            max = Math.max(max, iteration);\\n        }\\n        \\n        return max;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 195613,
                "title": "6-lines-python-o-n-time-o-1-space-with-explanation",
                "content": "suppose at a point i the array is A[0], A[1], A[2], A[3],..., A[k-1], A[k] then we have : \\n```\\n  f(i)          = 0 * A[0] + 1 * A[1] + 2 * A[2] + .... +  (k-1) * A[k-1] + k * A[k]\\n  f(i+1)        = 1 * A[0] + 2 * A[1] + 3 * A[2] + ...  +     k  * A[k-1] + 0 * A[k] \\n=>f(i+1) - f(i) =     A[0]   +   A[1]   +   A[2] + ...  +       A[k-1]    - k * A[k] \\n   = (A[0]   +   A[1]   +   A[2] + ...  +       A[k-1] +  A[k]) - (k+1) * A[k]\\n   = sum(Array) - A[k] * array.length\\n=> f(i+1) = f(i) + sum(Array) -  last element * array.length\\n``` \\nso at a point i if we know f(i) then we could easily caculate f(i+1) by the above formula so just go through the array and update the maximum value.\\nhere is  my code:\\n```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        r = curr = sum(i * j for i,j in enumerate(A))\\n        s = sum(A)\\n        k = len(A)\\n        while A:\\n            curr += s - A.pop() * k\\n            r = max(curr, r)\\n        return r\\n```\\n\\n",
                "solutionTags": [],
                "code": "```\\n  f(i)          = 0 * A[0] + 1 * A[1] + 2 * A[2] + .... +  (k-1) * A[k-1] + k * A[k]\\n  f(i+1)        = 1 * A[0] + 2 * A[1] + 3 * A[2] + ...  +     k  * A[k-1] + 0 * A[k] \\n=>f(i+1) - f(i) =     A[0]   +   A[1]   +   A[2] + ...  +       A[k-1]    - k * A[k] \\n   = (A[0]   +   A[1]   +   A[2] + ...  +       A[k-1] +  A[k]) - (k+1) * A[k]\\n   = sum(Array) - A[k] * array.length\\n=> f(i+1) = f(i) + sum(Array) -  last element * array.length\\n```\n```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        r = curr = sum(i * j for i,j in enumerate(A))\\n        s = sum(A)\\n        k = len(A)\\n        while A:\\n            curr += s - A.pop() * k\\n            r = max(curr, r)\\n        return r\\n```",
                "codeTag": "Java"
            },
            {
                "id": 531675,
                "title": "sliding-window-approach-in-c",
                "content": "Explanation :\\n\\nA = [4, 3, 2, 6] \\n\\nAll the positions when rotated can be represented using the array : [4, 3, 2, 6, 4, 3, 2, 6] that is array A repeated twice.\\n\\n```\\n\\nidx : 0 1 2 3 4 5 6 7\\narr : 4 3 2 6 4 3 2 6\\n\\nAll rotations :\\n\\n4 3 2 6 -> 0 to 3\\n\\n3 2 6 4 -> 1 to 4\\n\\n2 6 4 3 -> 2 to 5\\n\\n6 4 3 2 -> 3 to 6\\n\\n```\\n\\n`fn` first calculates the answer for the first permutation which is `[4, 3, 2, 6]` = `25`\\n\\nMoving to next permutation which is `[3, 2, 6, 4]` we see we\\'re removing `(0*4)` and adding `(4*4)` when sliding on the extended array.\\n\\nBut since our answer would now be having `(1*3 + 2*2 + 3*6 + 4*4)` which is just `array_sum + (0*3 + 1*2 + 2*6 + 3*4) ` we would have to subtract the `array_sum` once at each iteration from our answer;\\n\\n```\\n long removed = (l-1) * A[l-1];\\n long added = r * A[r%len];\\n            \\n newfn = newfn - removed + added - sum;\\n\\t\\t\\t\\n```\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        long sum = 0, fn = 0;\\n        int len = A.size();\\n        for(int i=0;i<len;i++) {\\n            sum += A[i];\\n            fn += (i * A[i]);\\n        }\\n\\n        long l = 1, r;\\n        long newfn = fn;\\n        \\n        while(l < len) {\\n            r = l + len - 1;\\n            \\n            long removed = (l-1) * A[l-1];\\n            long added = r * A[r%len];\\n            \\n            newfn = newfn - removed + added - sum;\\n            \\n            fn = max(fn, newfn);\\n            \\n            l++;\\n        }\\n        \\n        return (int)fn;\\n    }\\n};\\n```\\n\\nHope it\\'s clear enough. Cheers! :D",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n\\nidx : 0 1 2 3 4 5 6 7\\narr : 4 3 2 6 4 3 2 6\\n\\nAll rotations :\\n\\n4 3 2 6 -> 0 to 3\\n\\n3 2 6 4 -> 1 to 4\\n\\n2 6 4 3 -> 2 to 5\\n\\n6 4 3 2 -> 3 to 6\\n\\n```\n```\\n long removed = (l-1) * A[l-1];\\n long added = r * A[r%len];\\n            \\n newfn = newfn - removed + added - sum;\\n\\t\\t\\t\\n```\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        long sum = 0, fn = 0;\\n        int len = A.size();\\n        for(int i=0;i<len;i++) {\\n            sum += A[i];\\n            fn += (i * A[i]);\\n        }\\n\\n        long l = 1, r;\\n        long newfn = fn;\\n        \\n        while(l < len) {\\n            r = l + len - 1;\\n            \\n            long removed = (l-1) * A[l-1];\\n            long added = r * A[r%len];\\n            \\n            newfn = newfn - removed + added - sum;\\n            \\n            fn = max(fn, newfn);\\n            \\n            l++;\\n        }\\n        \\n        return (int)fn;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 302789,
                "title": "python-o-n-solution-with-detailed-explanation",
                "content": "Lets take a small example to understand the situation:\\n```\\n[4,5,3,2,9]\\n\\n```\\nNow, \\n```\\nF(0) = 4 * 0 + 5 * 1 + 3 * 2 + 2 * 3 + 9 * 4 = 53\\nF(1) = 9 * 0 + 4 * 1 + 5 * 2 + 3 * 3 + 2 * 4 = 31\\nF(2) = 2 * 0 + 9 * 1 + 4 * 2 + 5 * 3 + 3 * 4 = 44\\nF(3) = 3 * 0 + 2 * 1 + 9 * 2 + 4 * 3 + 5 * 4 = 52\\nF(4) = 5 * 0 + 3 * 1 + 2 * 2 + 9 * 3 + 4 * 4 = 50\\n```\\nThe crux of this problem is figuring out that the only change between say F(0) and F(1) is that fact that **all values except the last (9 in the above example) is multiplied by a number one higher than its previous multiplicant**.  I have re - wirtten the two lines of above example into a intuitive format. **The last number is to be multiplied with zero.**\\n```\\nF(0) = 4 * 0 + 5 * 1 + 3 * 2 + 2 * 3 + 9 * 4 = 53\\nF(1) = 4 * 1 + 5 * 2 + 3 * 3 + 2 * 4 + 9 * 0 = 31\\n\\n```\\n\\nSo now to achieve this without looping through the entire array, we can follow the steps given below:\\n(Defining the O(n) algorithm)\\n\\n1. Calculate the sum of the entire array. Lets call if arr_sum\\n2. Calculate the F(0) by finding the sum of product of array_val * index. Lets call is it sum_of_products.\\n3. Now the interesting part, to calculate F(1) from sum_of_products (which is F(0) ), \\n\\ti) Perform sum_of_products + arr_sum. (This setp is equivallent to incrementing the multiplier of all the values in the array).\\n\\tii) Now from the **partial sum** subtract the **last_val * n** (where n is the length of the array). The last element in F(0) is supposed to be multiplied by 0. However in the step i) we essentially increased the multipliers of all array value. So the partial sum reflects the **last element * n**\\n\\n4. Repeat step 3 starting with the last element in the array to the second element in the array.\\n\\n\\n**GIVEN BELOW IS THE PYTHON CODE FOR THE SAME**\\n\\n```\\ndef maxRotateFunction(self, A: List[int]) -> int:\\n        arr_sum = sum(A)\\n        sum_of_products = 0\\n        for i,val in enumerate(A):\\n            sum_of_products+= i*val\\n            \\n        n = len(A)\\n        max_val = sum_of_products\\n        for i in range(1,n):\\n\\t\\t\\t# A[-i] is the last val after each shift.\\n            sum_of_products+=(arr_sum-(A[-i]*n))\\n            max_val = max(max_val ,sum_of_products)\\n        return max_val\\n```\\n",
                "solutionTags": [],
                "code": "```\\n[4,5,3,2,9]\\n\\n```\n```\\nF(0) = 4 * 0 + 5 * 1 + 3 * 2 + 2 * 3 + 9 * 4 = 53\\nF(1) = 9 * 0 + 4 * 1 + 5 * 2 + 3 * 3 + 2 * 4 = 31\\nF(2) = 2 * 0 + 9 * 1 + 4 * 2 + 5 * 3 + 3 * 4 = 44\\nF(3) = 3 * 0 + 2 * 1 + 9 * 2 + 4 * 3 + 5 * 4 = 52\\nF(4) = 5 * 0 + 3 * 1 + 2 * 2 + 9 * 3 + 4 * 4 = 50\\n```\n```\\nF(0) = 4 * 0 + 5 * 1 + 3 * 2 + 2 * 3 + 9 * 4 = 53\\nF(1) = 4 * 1 + 5 * 2 + 3 * 3 + 2 * 4 + 9 * 0 = 31\\n\\n```\n```\\ndef maxRotateFunction(self, A: List[int]) -> int:\\n        arr_sum = sum(A)\\n        sum_of_products = 0\\n        for i,val in enumerate(A):\\n            sum_of_products+= i*val\\n            \\n        n = len(A)\\n        max_val = sum_of_products\\n        for i in range(1,n):\\n\\t\\t\\t# A[-i] is the last val after each shift.\\n            sum_of_products+=(arr_sum-(A[-i]*n))\\n            max_val = max(max_val ,sum_of_products)\\n        return max_val\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 87917,
                "title": "c-solution",
                "content": "```\\n\\tint maxRotateFunction(vector<int>& A) {\\n\\t\\tif (A.size() == 0) return 0;\\n\\n\\t\\tlong long allsum = 0;\\n\\t\\tlong long sum2 = 0;\\n\\t\\tfor (int i = 0; i < A.size(); i++) {\\n\\t\\t\\tallsum += A[i] * i;\\n\\t\\t\\tsum2 += A[i];\\n\\t\\t}\\n\\n\\t\\tlong long result = allsum;\\n\\t\\tfor (int i = 0; i < A.size(); i++) {\\n\\t\\t\\tallsum -= sum2;\\n\\t\\t\\tallsum += A[i];\\n\\t\\t\\tallsum += A[i] * int(A.size() - 1);\\n\\t\\t\\tresult = max(allsum, result);\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n```",
                "solutionTags": [],
                "code": "```\\n\\tint maxRotateFunction(vector<int>& A) {\\n\\t\\tif (A.size() == 0) return 0;\\n\\n\\t\\tlong long allsum = 0;\\n\\t\\tlong long sum2 = 0;\\n\\t\\tfor (int i = 0; i < A.size(); i++) {\\n\\t\\t\\tallsum += A[i] * i;\\n\\t\\t\\tsum2 += A[i];\\n\\t\\t}\\n\\n\\t\\tlong long result = allsum;\\n\\t\\tfor (int i = 0; i < A.size(); i++) {\\n\\t\\t\\tallsum -= sum2;\\n\\t\\t\\tallsum += A[i];\\n\\t\\t\\tallsum += A[i] * int(A.size() - 1);\\n\\t\\t\\tresult = max(allsum, result);\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1239328,
                "title": "pictorial-explanation-of-logic-with-code",
                "content": "**Approach:**\\n\\n![image](https://assets.leetcode.com/users/images/ae6aa5a4-c804-4fff-b467-1a8084134ef5_1622316787.0244665.jpeg)\\n![image](https://assets.leetcode.com/users/images/62a73dca-c59b-4ebb-a2c9-b1907c3dcb1d_1622316799.6876636.jpeg)\\n\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& a)\\n    {\\n        long long sum = 0, orig = 0;\\n        for(int i=0;i<a.size();i++)\\n        {\\n            sum += a[i];\\n            orig += i*a[i];\\n        }\\n        \\n        long long maxi = orig;\\n        int n = a.size();\\n        \\n        for(int i=a.size()-1;i>=0;i--)\\n        {\\n            orig += (sum - (long long)a[i]*(n));\\n            maxi = max(maxi, orig);\\n        }\\n        \\n        return maxi;\\n    }\\n};\\n```\\n\\nPlease upvote if it\\'s helpful.\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& a)\\n    {\\n        long long sum = 0, orig = 0;\\n        for(int i=0;i<a.size();i++)\\n        {\\n            sum += a[i];\\n            orig += i*a[i];\\n        }\\n        \\n        long long maxi = orig;\\n        int n = a.size();\\n        \\n        for(int i=a.size()-1;i>=0;i--)\\n        {\\n            orig += (sum - (long long)a[i]*(n));\\n            maxi = max(maxi, orig);\\n        }\\n        \\n        return maxi;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87916,
                "title": "java-solution",
                "content": "```\\npublic class Solution {\\n\\n\\tpublic int maxRotateFunction(int[] A) {\\n\\t\\tint n = A.length;\\n\\t\\tint sum = 0;\\n\\t\\tint candidate = 0;\\n\\n\\t\\tfor (int i = 0; i < n; i++) {\\n\\t\\t\\tsum += A[i];\\n\\t\\t\\tcandidate += A[i] * i;\\n\\t\\t}\\n\\t\\tint best = candidate;\\n\\n\\t\\tfor (int i = n - 1; i > 0; i--) {\\n\\t\\t\\tcandidate = candidate + sum - A[i] * n;\\n\\t\\t\\tbest = Math.max(best, candidate);\\n\\t\\t}\\n\\t\\treturn best;\\n\\t}\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n\\n\\tpublic int maxRotateFunction(int[] A) {\\n\\t\\tint n = A.length;\\n\\t\\tint sum = 0;\\n\\t\\tint candidate = 0;\\n\\n\\t\\tfor (int i = 0; i < n; i++) {\\n\\t\\t\\tsum += A[i];\\n\\t\\t\\tcandidate += A[i] * i;\\n\\t\\t}\\n\\t\\tint best = candidate;\\n\\n\\t\\tfor (int i = n - 1; i > 0; i--) {\\n\\t\\t\\tcandidate = candidate + sum - A[i] * n;\\n\\t\\t\\tbest = Math.max(best, candidate);\\n\\t\\t}\\n\\t\\treturn best;\\n\\t}\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2493898,
                "title": "c-o-n-with-mathematical-explanation-100-fast",
                "content": "eg- A = [4, 3, 2, 6]\\n\\nF(0) = 0A + 1B + 2C +3D\\nF(1) = 0D + 1A + 2B +3C\\nF(2) = 0C + 1D + 2A +3B\\nF(3) = 0B + 1C + 2D +3A\\n\\n**sum = 1A + 1B + 1C + 1D**\\n\\nF(1)-F(0) = a+b+c-3d\\n\\t\\t\\t\\t= a+b+c+d - 4d\\n\\t\\t\\t\\t= sum - n * Bk[0];\\n**F(1) = F(0) + sum - n*Bk[0]**\\n*(where B[0] is the first element when array is rotated k-times).*\\n\\nSimilarly, \\nF(1) = F(0) + sum - 4D\\nF(2) = F(1) + sum - 4C\\nF(3) = F(2) + sum - 4B\\n\\n**So,**\\n```\\nF(k) = F(k-1) + sum - nBk[0]\\n```\\n\\n**What is Bk[0]?**\\n```\\nk = 0; B[0] = A[0];\\nk = 1; B[0] = A[len-1];\\nk = 2; B[0] = A[len-2];\\n```\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum =0;\\n        int f=0;\\n        for(int i=0;i<nums.size();i++){\\n\\t\\t\\tsum+=nums[i];\\n\\t\\t\\tf+=i*nums[i]\\n\\t\\t}\\n        \\n        int globalSum = f;\\n        \\n        for(int i=nums.size()-1;i>0;i--){\\n            f = f + sum -nums.size()*nums[i];\\n            globalSum = max(f,globalSum);\\n        }\\n        return globalSum;\\n    }\\n};\\n```\\n\\n\\n`Give a Like if you understood the mathematical explanation`",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nF(k) = F(k-1) + sum - nBk[0]\\n```\n```\\nk = 0; B[0] = A[0];\\nk = 1; B[0] = A[len-1];\\nk = 2; B[0] = A[len-2];\\n```\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum =0;\\n        int f=0;\\n        for(int i=0;i<nums.size();i++){\\n\\t\\t\\tsum+=nums[i];\\n\\t\\t\\tf+=i*nums[i]\\n\\t\\t}\\n        \\n        int globalSum = f;\\n        \\n        for(int i=nums.size()-1;i>0;i--){\\n            f = f + sum -nums.size()*nums[i];\\n            globalSum = max(f,globalSum);\\n        }\\n        return globalSum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87878,
                "title": "c-same-solution-but-different-take-on-explaination",
                "content": "To me it is easier to see the solution if you leave the array as is and rotate the factors left (same result as rotating array right).\\n\\nFor simplicity take an array with 4 elements\\n[a,b,c,d]\\n\\nf(0) = 0a + 1b + 2c +3d\\nf(1) = 3a + 0b + 1c +2d\\nf(2) = 2a + 3b + 0c +1d\\nf(3) = 1a + 2b + 3c +0d\\n\\nNow look what happens when you take difference between f(k) - f(k-1)\\nf(1) - f(0) = 3a - b - c - d = 4a - (a + b + c + d) = length * a - sum\\nf(2) - f(1) = -a + 3b - c - d = 4b - (a + b + c + d) = length * b - sum\\nf(3) - f(2) = -a - b +3c - d = 4c - (a + b + c + d) = length * c - sum\\n\\nYou can see if you calculate (manually) f(0) you can get f(1) by adding length * a and subtracting the sum.\\n\\nSo initially you need to compute the sum and f(0) then just iterate through and get the value of f(i) for each i and record the max.\\n\\nHope that helps!\\n\\n\\n    public int MaxRotateFunction(int[] A) {\\n        \\n        int sum = 0;\\n        for (int i = 0; i < A.Length; i++) sum += A[i];\\n        \\n        int prev = 0;\\n        for (int i = 0; i < A.Length; i++) prev += i * A[i];\\n        \\n        int max = prev;\\n        for (int i = 1; i < A.Length; i++)\\n        {\\n            int curr = prev - sum + A[i-1]*A.Length;\\n            max = curr > max ? curr : max;\\n            prev = curr;\\n        }\\n        \\n        return max;\\n    }",
                "solutionTags": [],
                "code": "To me it is easier to see the solution if you leave the array as is and rotate the factors left (same result as rotating array right).\\n\\nFor simplicity take an array with 4 elements\\n[a,b,c,d]\\n\\nf(0) = 0a + 1b + 2c +3d\\nf(1) = 3a + 0b + 1c +2d\\nf(2) = 2a + 3b + 0c +1d\\nf(3) = 1a + 2b + 3c +0d\\n\\nNow look what happens when you take difference between f(k) - f(k-1)\\nf(1) - f(0) = 3a - b - c - d = 4a - (a + b + c + d) = length * a - sum\\nf(2) - f(1) = -a + 3b - c - d = 4b - (a + b + c + d) = length * b - sum\\nf(3) - f(2) = -a - b +3c - d = 4c - (a + b + c + d) = length * c - sum\\n\\nYou can see if you calculate (manually) f(0) you can get f(1) by adding length * a and subtracting the sum.\\n\\nSo initially you need to compute the sum and f(0) then just iterate through and get the value of f(i) for each i and record the max.\\n\\nHope that helps!\\n\\n\\n    public int MaxRotateFunction(int[] A) {\\n        \\n        int sum = 0;\\n        for (int i = 0; i < A.Length; i++) sum += A[i];\\n        \\n        int prev = 0;\\n        for (int i = 0; i < A.Length; i++) prev += i * A[i];\\n        \\n        int max = prev;\\n        for (int i = 1; i < A.Length; i++)\\n        {\\n            int curr = prev - sum + A[i-1]*A.Length;\\n            max = curr > max ? curr : max;\\n            prev = curr;\\n        }\\n        \\n        return max;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 837477,
                "title": "python-simple-example",
                "content": "```html5\\n<b>Time Complexity: O(N)\\nSpace Complexity: O(1)</b>\\n```\\n**Simple Example:**\\n\\nSuppose we have array: ```A = [a, b, c, d, e]```\\n\\nFirst try with no rotation:\\n```html5\\n[0&middot;a, 1&middot;b, 2&middot;c, 3&middot;d, 4&middot;e] <b># No rotation = 1&middot;b + 2&middot;c + 3&middot;d + 4&middot;e</b>\\n```\\nNext, try with 1 rotation:\\n```html5\\n[4&middot;a, 0&middot;b, 1&middot;c, 2&middot;d, 3&middot;e] <b># 1 Rotation = 4&middot;a + 1&middot;c + 2&middot;d + 3&middot;e</b>\\n```\\nNow observe how the array total changed:\\n```html5\\n(1 rotation) - (no rotation) = 4&middot;a - 1&middot;b - 1&middot;c - 1&middot;d - 1&middot;e\\n                             = 5&middot;a - 1&middot;a - 1&middot;b - 1&middot;c - 1&middot;d - 1&middot;e\\n\\t\\t\\t\\t\\t\\t\\t = 5&middot;a - (1&middot;a + 1&middot;b + 1&middot;c + 1&middot;d + 1&middot;e)\\n\\t\\t\\t\\t\\t\\t\\t = N&middot;a - sum(A)\\n\\t\\t\\t\\t\\t\\t\\t <b>= N&middot;A[i] - sum(A)</b>\\n\\t\\t  <b>&there4; (i + 1 rotation) = N&middot;A[i] - sum(A) + (i rotation)</b>\\n```\\nWhere N is the length of array A.  Now, we can calculate the total once **(#1)**.  And find the total for the next rotation in **O(1) time** using the equation above **(#2)**.  \\n\\n```python\\ndef maxRotateFunction(self, A: List[int]) -> int:\\n\\n\\tsum_A = sum(A)\\n\\tN = len(A)\\n\\tres = sum(i*a for i,a in enumerate(A)) # 1\\n\\ttotal = res                            # 1\\n\\n\\tfor i in range(len(A)):\\n\\t\\ttotal += N*A[i] - sum_A # 2\\n\\t\\tres = max(res, total)\\n\\n\\treturn res\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```html5\\n<b>Time Complexity: O(N)\\nSpace Complexity: O(1)</b>\\n```\n```A = [a, b, c, d, e]```\n```html5\\n[0&middot;a, 1&middot;b, 2&middot;c, 3&middot;d, 4&middot;e] <b># No rotation = 1&middot;b + 2&middot;c + 3&middot;d + 4&middot;e</b>\\n```\n```html5\\n[4&middot;a, 0&middot;b, 1&middot;c, 2&middot;d, 3&middot;e] <b># 1 Rotation = 4&middot;a + 1&middot;c + 2&middot;d + 3&middot;e</b>\\n```\n```html5\\n(1 rotation) - (no rotation) = 4&middot;a - 1&middot;b - 1&middot;c - 1&middot;d - 1&middot;e\\n                             = 5&middot;a - 1&middot;a - 1&middot;b - 1&middot;c - 1&middot;d - 1&middot;e\\n\\t\\t\\t\\t\\t\\t\\t = 5&middot;a - (1&middot;a + 1&middot;b + 1&middot;c + 1&middot;d + 1&middot;e)\\n\\t\\t\\t\\t\\t\\t\\t = N&middot;a - sum(A)\\n\\t\\t\\t\\t\\t\\t\\t <b>= N&middot;A[i] - sum(A)</b>\\n\\t\\t  <b>&there4; (i + 1 rotation) = N&middot;A[i] - sum(A) + (i rotation)</b>\\n```\n```python\\ndef maxRotateFunction(self, A: List[int]) -> int:\\n\\n\\tsum_A = sum(A)\\n\\tN = len(A)\\n\\tres = sum(i*a for i,a in enumerate(A)) # 1\\n\\ttotal = res                            # 1\\n\\n\\tfor i in range(len(A)):\\n\\t\\ttotal += N*A[i] - sum_A # 2\\n\\t\\tres = max(res, total)\\n\\n\\treturn res\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2980688,
                "title": "c-solution-with-easy-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nBy Sliding window approach\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n original array[] = {4,3,2,6}\\n F1(original array) = 4*0 + 3*1 + 2*2 + 6*3\\n\\nupon 1 rotation = {6,4,3,2}\\nF2 = 6*0 + 4*1 + 3*2 + 2*3\\n\\nWhat do we observe between F1 AND F2\\ni) We observe that we multiply each element of original array (except the last one) with one more than the previous time.\\n\\nEarlier   4*0 + 3*1 + 2*2 + 6*3\\nNow       6*0 + 4*1 + 3*2 + 2*3\\n\\nHow we get from earlier to now \\n        ( 4*0 + 3*1 + 2*2 + 3*6 ) + (4+3+2+6) - 6*4 = now\\n     now = earlier + sum - (last element * n)\\n     where\\n   n = size of array here n = 4\\n           sum = sum of original array elements. \\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n    \\n        long sum = 0,original = 0;\\n        \\n        for(int i=0;i<nums.size();i++){\\n            sum += nums[i];\\n            original += i*nums[i];\\n        }\\n        \\n        long maximum = original;\\n        int n = nums.size();\\n        \\n        for(int i= n-1;i>=0;i--)\\n        {\\n            original += sum -(nums[i]*n);\\n            maximum = max(original,maximum);\\n        }\\n        return maximum;\\n    }   \\n};\\n     \\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math",
                    "Sliding Window"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n    \\n        long sum = 0,original = 0;\\n        \\n        for(int i=0;i<nums.size();i++){\\n            sum += nums[i];\\n            original += i*nums[i];\\n        }\\n        \\n        long maximum = original;\\n        int n = nums.size();\\n        \\n        for(int i= n-1;i>=0;i--)\\n        {\\n            original += sum -(nums[i]*n);\\n            maximum = max(original,maximum);\\n        }\\n        return maximum;\\n    }   \\n};\\n     \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2945111,
                "title": "simple-mathematics-solution",
                "content": "# Intuition\\n![WhatsApp Image 2022-12-24 at 2.30.36 PM.jpeg](https://assets.leetcode.com/users/images/35fcec6d-3ad0-4705-923d-bd00f588b0b5_1671872642.9265637.jpeg)\\n\\n![WhatsApp Image 2022-12-24 at 2.30.35 PM.jpeg](https://assets.leetcode.com/users/images/7a429c20-3ad7-43e6-b81e-0a85d79fcae4_1671872685.2668688.jpeg)\\n\\n\\n\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n\\n      int sum=0;\\n      int f=0;\\n      int n=nums.length;\\n\\n      for(int i=0;i<n;i++)\\n      {\\n          sum+=nums[i];\\n          f+=i*nums[i];\\n\\n      }  \\n\\n      int max=f;\\n      for(int i=n-1;i>0;i--)\\n      {\\n          max=Math.max(max,f+sum-(n*nums[i]));\\n          f=f+sum-(n*nums[i]);\\n\\n      }\\n\\n      return max;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n\\n      int sum=0;\\n      int f=0;\\n      int n=nums.length;\\n\\n      for(int i=0;i<n;i++)\\n      {\\n          sum+=nums[i];\\n          f+=i*nums[i];\\n\\n      }  \\n\\n      int max=f;\\n      for(int i=n-1;i>0;i--)\\n      {\\n          max=Math.max(max,f+sum-(n*nums[i]));\\n          f=f+sum-(n*nums[i]);\\n\\n      }\\n\\n      return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87861,
                "title": "my-o-n-simple-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        int F = 0, sum = 0, n = A.size();\\n        for (int i = 0; i < n; ++i){\\n            F += i * A[i];\\n            sum += A[i];\\n        }\\n        int m = F;\\n        for (int i = n - 1; i >= 0; --i){\\n            F = F + sum - n * A[i];\\n            m = max(m, F);\\n        }\\n        return m;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        int F = 0, sum = 0, n = A.size();\\n        for (int i = 0; i < n; ++i){\\n            F += i * A[i];\\n            sum += A[i];\\n        }\\n        int m = F;\\n        for (int i = n - 1; i >= 0; --i){\\n            F = F + sum - n * A[i];\\n            m = max(m, F);\\n        }\\n        return m;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2991221,
                "title": "clean-code-with-drawn-explanation-time-o-n-space-o-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n![Screenshot_20230103_014547.png](https://assets.leetcode.com/users/images/43f23648-7dca-47af-a823-ea51d1c9e1f3_1672734024.3253932.png)\\n\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\n\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) \\n    {\\n        int size=nums.size();\\n        int original_sum=0,array_sum=0;\\n        for(int i=0;i<size;i++)\\n        {\\n            array_sum+=nums[i];\\n            original_sum+=i*nums[i];\\n        }\\n        int ans=original_sum;\\n        for(int i=0;i<size;i++)\\n        {\\n            original_sum+=array_sum-(size*nums[size-i-1]);\\n            ans=max(ans,original_sum);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\n\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) \\n    {\\n        int size=nums.size();\\n        int original_sum=0,array_sum=0;\\n        for(int i=0;i<size;i++)\\n        {\\n            array_sum+=nums[i];\\n            original_sum+=i*nums[i];\\n        }\\n        int ans=original_sum;\\n        for(int i=0;i<size;i++)\\n        {\\n            original_sum+=array_sum-(size*nums[size-i-1]);\\n            ans=max(ans,original_sum);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1399408,
                "title": "rotate-function-c-o-n",
                "content": "Initially, I tried to solve this question using 2 loops i.e. in O(N^2) approach but instead of expecting TLE got WA and I still not able to get why i got that. Nevertheless, that approach would not have worked though. So, I then tried it solving in O(n) and then using an example, started recognising a pattern in each rotation(did not actually rotate the array though). Lets discuss through an example:\\n\\nLet a=[4,3,2,6]. \\nAt k=0(no rotation) ->  I precomputed its answer and it comes out to be 25. Also i precomputed the sum of the array. 0*4 + 1*3 + 2*2 + 3*6 = 25\\nAt k=1(rotated by 1 unit clockwise). Now our array becomes(just imagine) a=[6,4,3,2]. Now if we closely look, we can see the last element i.e. would now contribute 0 to our answer unlike earlier it contributed (n-1) times. So for this rotation we have to subtract that and we have to add contribution of all the other elements as we can see, now all the other elements contribute 1 time extra prior to the prev ans. i.e. 0*6 + 1*4 + 2*3 + 3*2 = 16\\nNow we can make  a formula out of it F(1) = F(0) - ((n-1)*(a[index])) + (sum - a[index])  where index=n-1.\\nWe now decrement index by 1. It is very crucial because we are not actually rotating our array and so when we now rotate the original array by 2 or prev array by 1 clockwise we will get [2,6,4,3] and now 2 needs to be subtracted (n-1) times from prev answer and other elements need to be added as in the original array [4 3 2 6] 2 comes at 2 position which we will get only if we do index--...\\n# Below is the code\\n```\\nclass Solution {\\npublic:\\n    long long int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0;\\n        int ans=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            ans += i*nums[i];\\n        }\\n        int index=n-1;\\n        int res=ans;\\n        for(int k=1;k<n;k++){\\n            ans = ans - ((n-1)*nums[index]) + (sum-nums[index]);\\n            res=max(res,ans);\\n            index--;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    long long int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0;\\n        int ans=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            ans += i*nums[i];\\n        }\\n        int index=n-1;\\n        int res=ans;\\n        for(int k=1;k<n;k++){\\n            ans = ans - ((n-1)*nums[index]) + (sum-nums[index]);\\n            res=max(res,ans);\\n            index--;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2981682,
                "title": "java-python-c-soln-rotate-function",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\nFirst Calculate F(0) than update F(1) and F(2) with below equations and find max of all\\n\\n F(1) - F(0) = S - n * A[n - 1]  --->   F(1) = F(0) + S - n * A[n - 1]\\n F(2) - F(1) = S - n * A[n - 2]  --->  F(2) = F(1) + S - n * A[n - 2]\\n F(3) - F(2) = S - n * A[n - 3]\\n# Code\\n# Java\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int F = 0;\\n        int S = 0;\\n        for(int i = 0; i < nums.length; i++){\\n            F = F + (nums[i] * i);\\n            S = S + nums[i];\\n        }\\n\\n        int max = F; // this is F0\\n        int n = nums.length;\\n\\t\\t\\n        for(int i = n - 1; i >= 1 ; i--){\\n            F = F + S - n * nums[i];\\n            max = Math.max(max , F);\\n        }\\n      return max;\\n    }\\n}\\n```\\n# Python\\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        F = 0\\n        S = 0\\n        for i in range(len(nums)):\\n            F = F + (nums[i] * i)\\n            S = S + nums[i]\\n\\n        max_val = F  # this is F0\\n        n = len(nums)\\n\\t\\t\\n        for i in range(n - 1, 0, -1):\\n            F = F + S - n * nums[i]\\n            max_val = max(max_val, F)\\n\\n        return max_val\\n```\\n\\n# C++\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int F = 0;\\n        int S = 0;\\n        for(int i = 0; i < nums.size(); i++){\\n            F = F + (nums[i] * i);\\n            S = S + nums[i];\\n        }\\n\\n        int max_val = F; // this is F0\\n        int n = nums.size();\\n\\t\\t\\n        for(int i = n - 1; i >= 1 ; i--){\\n            F = F + S - n * nums[i];\\n            max_val = max(max_val , F);\\n        }\\n        return max_val;\\n    }\\n};\\n\\n```\\n### UpVote if you like it..\\n\\n\\n",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int F = 0;\\n        int S = 0;\\n        for(int i = 0; i < nums.length; i++){\\n            F = F + (nums[i] * i);\\n            S = S + nums[i];\\n        }\\n\\n        int max = F; // this is F0\\n        int n = nums.length;\\n\\t\\t\\n        for(int i = n - 1; i >= 1 ; i--){\\n            F = F + S - n * nums[i];\\n            max = Math.max(max , F);\\n        }\\n      return max;\\n    }\\n}\\n```\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        F = 0\\n        S = 0\\n        for i in range(len(nums)):\\n            F = F + (nums[i] * i)\\n            S = S + nums[i]\\n\\n        max_val = F  # this is F0\\n        n = len(nums)\\n\\t\\t\\n        for i in range(n - 1, 0, -1):\\n            F = F + S - n * nums[i]\\n            max_val = max(max_val, F)\\n\\n        return max_val\\n```\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int F = 0;\\n        int S = 0;\\n        for(int i = 0; i < nums.size(); i++){\\n            F = F + (nums[i] * i);\\n            S = S + nums[i];\\n        }\\n\\n        int max_val = F; // this is F0\\n        int n = nums.size();\\n\\t\\t\\n        for(int i = n - 1; i >= 1 ; i--){\\n            F = F + S - n * nums[i];\\n            max_val = max(max_val , F);\\n        }\\n        return max_val;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 150821,
                "title": "clear-java-code-with-explanation",
                "content": "**Clear Java Code**\\n```\\n    public int maxRotateFunction(int[] A) {\\n        \\n        if (A == null || A.length == 0) {\\n            return 0;\\n        }\\n        \\n        int n = A.length;\\n        int sum = 0;\\n        for (int a : A) {\\n            sum += a;\\n        }\\n        int[] f = new int[n];\\n        f[0] = evaluate(A);\\n        \\n        long maxF = f[0];\\n        for (int i = 1; i < A.length; i++) {\\n            f[i] = f[i - 1] - sum + A[i - 1] * n;\\n            if (f[i] > maxF) {\\n                maxF = f[i];\\n            }\\n        }\\n        \\n        return (int) maxF;\\n    }\\n\\n    private int evaluate(int[] A) {\\n        int result = 0;\\n        for (int i = 0; i < A.length; i++) {\\n            result += i * A[i];\\n        }\\n        return result;\\n    }\\n```\\n\\n**Explanation**\\nWe will get TLE or MLE if we list all possible rotated A and compare corresponding F. How do we avoid to list all possible rotations?\\nLet\\'s oberve that,\\n```\\nA[] = {a, b, c}\\nF(0) = 0a + 1b + 2c,\\nF(1) = 2a + 0b + 1c,\\nF(2) = 1a + 2b + 0c,\\nThus, F(i) = F(i - 1) - (a + b + c) + 3 * A[i - 1]\\nlike f[i] = f[i - 1] - sum + A[i - 1] * n; in the code.\\n```\\n\\n**I would appreciate your VOTE UP ;)**",
                "solutionTags": [],
                "code": "```\\n    public int maxRotateFunction(int[] A) {\\n        \\n        if (A == null || A.length == 0) {\\n            return 0;\\n        }\\n        \\n        int n = A.length;\\n        int sum = 0;\\n        for (int a : A) {\\n            sum += a;\\n        }\\n        int[] f = new int[n];\\n        f[0] = evaluate(A);\\n        \\n        long maxF = f[0];\\n        for (int i = 1; i < A.length; i++) {\\n            f[i] = f[i - 1] - sum + A[i - 1] * n;\\n            if (f[i] > maxF) {\\n                maxF = f[i];\\n            }\\n        }\\n        \\n        return (int) maxF;\\n    }\\n\\n    private int evaluate(int[] A) {\\n        int result = 0;\\n        for (int i = 0; i < A.length; i++) {\\n            result += i * A[i];\\n        }\\n        return result;\\n    }\\n```\n```\\nA[] = {a, b, c}\\nF(0) = 0a + 1b + 2c,\\nF(1) = 2a + 0b + 1c,\\nF(2) = 1a + 2b + 0c,\\nThus, F(i) = F(i - 1) - (a + b + c) + 3 * A[i - 1]\\nlike f[i] = f[i - 1] - sum + A[i - 1] * n; in the code.\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 87914,
                "title": "python-59ms-simple-solution",
                "content": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        if len(A) == 0:\\n            return 0\\n        totalSum = sum(A)\\n        lMax = 0 \\n        for i in range(len(A)):\\n            lMax += i * A[i]\\n        gMax = lMax\\n        for i in range(len(A)-1, 0, -1):\\n            lMax += (totalSum - A[i] * len(A))\\n            gMax = max(gMax, lMax)\\n        return gMax\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        if len(A) == 0:\\n            return 0\\n        totalSum = sum(A)\\n        lMax = 0 \\n        for i in range(len(A)):\\n            lMax += i * A[i]\\n        gMax = lMax\\n        for i in range(len(A)-1, 0, -1):\\n            lMax += (totalSum - A[i] * len(A))\\n            gMax = max(gMax, lMax)\\n        return gMax\\n```",
                "codeTag": "Java"
            },
            {
                "id": 857056,
                "title": "python-3-py3-8-math-o-n-explanation",
                "content": "### Explanation\\n- start with an initial value without any rotation, store it in `cur_sum`\\n- In each iteration\\n\\t- Every number except the last one will be added again (`+s-A[n-1-i]`)\\n\\t- `The current last number * (n-1)` will be reduced from `cur_sum`\\n\\t\\t- `A[n-1-i] * (n-1)`\\n\\t- thus, `cur_sum = cur_sum + s - A[n-1-i] - A[n-1-i] * (n-1) = cur_sum + s - A[n-1-i] * n`\\n- Iterate `n` times and return the maximum\\n- Time complexity:\\n\\t- `O(n)` to initialize\\n\\t- `O(n)` to try all rotations\\n\\t- Total: `O(2n) -> O(n)`\\n- Note that Walrus Operator (`:=`) is used during iteration, need Python 3.8 if you try it in your local machine\\n### Implementation\\n```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        s, n = sum(A), len(A)\\n        cur_sum = sum([i*j for i, j in enumerate(A)])\\n        ans = cur_sum\\n        for i in range(n): ans = max(ans, cur_sum := cur_sum + s-A[n-1-i]*n)\\n        return ans\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        s, n = sum(A), len(A)\\n        cur_sum = sum([i*j for i, j in enumerate(A)])\\n        ans = cur_sum\\n        for i in range(n): ans = max(ans, cur_sum := cur_sum + s-A[n-1-i]*n)\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3734854,
                "title": "c-easy-to-understand-detailed-explanation-linear-time-complexity",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nIf you carefully observe the steps involved in calculating sum of rotated array,\\nfor ith rotation, you will notice that \\nfor sum calculated at rotation-(i-1) (it is called as pre), we are adding sum of array elements to it(sum) & subtracting (n*element of nums) \\n\\n(element of nums) is element from its reversed array (rev)\\nFor rotation-1, element to be subtracted is rev[0],\\nfor rotation-2, element to be subtracted is rev[1]\\nans so on\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nLet\\'s take nums=[4,3,2,6]. So, rev=[6,2,3,4]\\n1. Initialize sum=15, res=25(for rotation-0), pre=25 (pre is sum of previous rotated array)\\n2. For 1st rotaion: temp = pre+sum-(4*6) = 25+15-24 = 16. \\n   pre becomes 16\\n3. For 2nd rotation: temp = pre+sum-(4*2) = 16+15-8 = 23.             \\n   Update res=23\\n   pre=23\\n4. For 3rd rotation: temp=pre+sum-(4*3) = 23+15-12 = 26.          \\n   Update res=26\\n5. Keep doing this, till rotation<=(n-1)\\n6. At the end, return res\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(n) for storing reverse of array nums\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        vector<int> rev=nums;\\n        reverse(rev.begin(),rev.end());\\n\\n        int res=0, pre=0, sum=0;\\n        for(int i=0; i<n; i++){\\n            res+= (i*nums[i]);\\n            sum+= nums[i];\\n        }\\n        pre=res;\\n        \\n        int rotate=1,j=0;\\n        while(rotate<n){\\n            int temp=pre;\\n            temp = pre+sum-(n*rev[j]);\\n            j++;\\n\\n            res=max(res,temp);\\n            pre=temp;\\n            rotate++;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        vector<int> rev=nums;\\n        reverse(rev.begin(),rev.end());\\n\\n        int res=0, pre=0, sum=0;\\n        for(int i=0; i<n; i++){\\n            res+= (i*nums[i]);\\n            sum+= nums[i];\\n        }\\n        pre=res;\\n        \\n        int rotate=1,j=0;\\n        while(rotate<n){\\n            int temp=pre;\\n            temp = pre+sum-(n*rev[j]);\\n            j++;\\n\\n            res=max(res,temp);\\n            pre=temp;\\n            rotate++;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1666170,
                "title": "c-d-p-o-n-simple-code",
                "content": "class Solution {\\npublic:\\n\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=0;\\n        int pro=0;\\n        \\n        for(int i=0;i<nums.size();i++){\\n            pro+=nums[i]*i;\\n            sum+=nums[i];\\n        }\\n        \\n        int mx=pro;\\n        for(int i=nums.size()-1;i>=0;i--){\\n            \\n            pro=pro+sum-(nums[i]*nums.size());\\n            mx=max(mx, pro);\\n        }\\n        \\n        return mx;\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=0;\\n        int pro=0;\\n        \\n        for(int i=0;i<nums.size();i++){\\n            pro+=nums[i]*i;\\n            sum+=nums[i];\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 862726,
                "title": "simple-java-code-with-explanation-dp-o-n-runtime",
                "content": "**EXPLANATION**\\n\\nLet us do some pre-processing using basic Maths.\\n\\nLet the array elements be: [*a b c d e*].\\n\\n**Length of array *represented by N*** = 5  \\n**Sum of elements of array *represented by SUM*** = a + b + c + d + e\\n\\nNow, as per the question :\\n\\nF(0) = (0 * a) + (1 * b) + (2 * c) + (3 * d) + (4 * e) = 0 + b + 2c + 3d + 4e\\nF(1) = (1 * a) + (2 * b) + (3 * c) + (4 * d) + (0 * e) = a + 2b + 3c + 4d + 0\\nF(2) = (2 * a) + (3 * b) + (4 * c) + (0 * d) + (1 * e) = 2a + 3b + 4c + 0 + e\\n\\nNow subtracting 2 equations, \\n\\n**F(1) - F(0)** = a + b + c + d - 4e = a + b + c + d + e - 5e\\nTherefore, **F(1)** = **F(0)** + a + b + c + d + e - 5e = **F(0) + SUM - N***e\\n\\n**F(2) - F(1)** = a + b + c + e - 4d = a + b + c + d + e - 5d\\nTherefore, **F(2)** = **F(1)** + a + b + c + d + e - 5d = **F(1) + SUM - N***d\\n\\nGeneralizing it, we get the following relation:\\n\\n**F(K) = F(K-1) + SUM - N * (( K-1)th element from end of array)**\\ni.e. **F(K) = F(K-1) + SUM - N * (array [N - 1 - (K-1)])** = **F(K-1) + SUM - N * (array [N - K])**\\n\\nNow, I think it is pretty much clear that we can use a 1D DP array to solve this question as depicted in the code below.\\n\\n*------Please upvote if you liked the solution.  Please put your thoughts/doubts/queries in the comment section below.  I will try my best to answer them.------*\\n```\\nclass Solution {\\n    public int maxRotateFunction (int[] A) {\\n        if (A == null || A.length == 0)\\n            return 0;\\n        int sum = 0, F0 = 0, max = Integer.MIN_VALUE;\\n        for (int i = 0; i < A.length; i++) {\\n            sum += A [i];\\n            F0 += i * A [i];\\n        }\\n        int dp [] = new int [A.length];\\n        dp [0] = F0;\\n        max = dp [0];\\n        for (int i = 1; i < A.length; i++) {\\n            dp [i] = dp [i-1] + sum - A.length * A [A.length - i];\\n            max = Math.max (max, dp [i]);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction (int[] A) {\\n        if (A == null || A.length == 0)\\n            return 0;\\n        int sum = 0, F0 = 0, max = Integer.MIN_VALUE;\\n        for (int i = 0; i < A.length; i++) {\\n            sum += A [i];\\n            F0 += i * A [i];\\n        }\\n        int dp [] = new int [A.length];\\n        dp [0] = F0;\\n        max = dp [0];\\n        for (int i = 1; i < A.length; i++) {\\n            dp [i] = dp [i-1] + sum - A.length * A [A.length - i];\\n            max = Math.max (max, dp [i]);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 835165,
                "title": "java-o-n-solution-with-explanation-beats-100",
                "content": "The idea is simple - we calculate F(0) as described in the problem, and after it derive F(1) from F(0), F(2) from F(1)...\\nFor example, our array is: [a,b,c,d,e]. Then:\\nF(0) =  0 * a + 1 * b + 2 * c  + 3 * d + 4 * e\\nF(1) =  0 * e + 1 * a + 2 * b + 3 * c + 4 * d   =  F(0) + (a+b+c+d+e) - 4 * e\\nF(2)= F(1) + (a+b+c+d+e) - 4 * d\\nF(3)= F(2) + (a+b+c+d+e) - 4 * c\\n.....\\nso, \\nF(k)=F(k1) + (a+b+c+d+e) - A.length * A[k]\\n\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        int f0 = 0;\\n        int sum = 0;\\n        for (int i=0;i<A.length;i++){\\n            f0+=A[i]*i;\\n            sum+=A[i];\\n        }\\n        int max = f0;\\n        for (int i=A.length-1;i>=0;i--){\\n            f0+=sum-A[i]*A.length;\\n            max = Math.max(max, f0);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        int f0 = 0;\\n        int sum = 0;\\n        for (int i=0;i<A.length;i++){\\n            f0+=A[i]*i;\\n            sum+=A[i];\\n        }\\n        int max = f0;\\n        for (int i=A.length-1;i>=0;i--){\\n            f0+=sum-A[i]*A.length;\\n            max = Math.max(max, f0);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87843,
                "title": "c-9ms-solution-with-concise-explanation",
                "content": "The idea is very simple. We only calculate the difference between two iterations. Try to write in math expression as below:\\n```F(k) =  F(k - 1) + ( sum(A) - A.size() * A(the last element in A after rotate k - 1 positions.))```\\n\\nLet's take an example . ```A = [4, 3, 2, 6]```\\n\\nFirst, calculate ```sum(A) = 4 + 3 + 2 + 6  =15``` \\n\\nAnd ```F[0] = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25```\\n\\nThen we begin to rotate. ```F[1] = F[0] + (sum(A) - A.size() * 6) = 25 + (15 - 4 * 6) =  16```\\n\\nAnd ```F[2] = F[1] + (sum(A) - A.size() * 2) = 16 + (15 - 8) = 23```  (```2```is the last element of A after rotate A for k - 1 = 1 position)\\n\\nSince we can calculate ```sum, F[0]``` in O(n) time. And then we get ```F[k]```from ```F[k - 1```using O(1) time, the total time complexity is O(n).\\n\\n\\n\\nHere is my AC code. Hope it helps.\\n```cpp\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        if (A.size() == 0) return 0;\\n        int sum = 0, current = 0;\\n        for(int i = 0; i < A.size(); ++i) {\\n            sum+= A[i];\\n            current+= i * A[i];\\n        }\\n        int maximum = INT_MIN;\\n        for (int i = A.size() - 1; i >=0; --i) {\\n            current+= sum - A.size() * A[i];\\n            maximum = max(maximum, current);\\n        }\\n        return maximum;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```F(k) =  F(k - 1) + ( sum(A) - A.size() * A(the last element in A after rotate k - 1 positions.))```\n```A = [4, 3, 2, 6]```\n```sum(A) = 4 + 3 + 2 + 6  =15```\n```F[0] = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25```\n```F[1] = F[0] + (sum(A) - A.size() * 6) = 25 + (15 - 4 * 6) =  16```\n```F[2] = F[1] + (sum(A) - A.size() * 2) = 16 + (15 - 8) = 23```\n```2```\n```sum, F[0]```\n```F[k]```\n```F[k - 1```\n```cpp\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        if (A.size() == 0) return 0;\\n        int sum = 0, current = 0;\\n        for(int i = 0; i < A.size(); ++i) {\\n            sum+= A[i];\\n            current+= i * A[i];\\n        }\\n        int maximum = INT_MIN;\\n        for (int i = A.size() - 1; i >=0; --i) {\\n            current+= sum - A.size() * A[i];\\n            maximum = max(maximum, current);\\n        }\\n        return maximum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3258525,
                "title": "396-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n1. Calculate the sum of all elements in the array, and store it in a variable \"total_sum\".\\n2. Calculate the initial value of F(0) using a loop that iterates through the array and multiplies each element by its index, then add all the products. Store the result in a variable \"current_sum\".\\n3. Initialize a variable \"max_sum\" to \"current_sum\".\\n4. Iterate through the array starting from index 1 to n-1:\\na. Calculate the new value of F(i) by subtracting the sum of all elements from the last element, then add (n-1) times the last element. The formula is: F(i) = F(i-1) + total_sum - n * nums[n-i]\\nb. Update the \"current_sum\" variable to the new value of F(i).\\nc. Update the \"max_sum\" variable if \"current_sum\" is greater than \"max_sum\".\\n5. Return the value of \"max_sum\".\\n\\n# Complexity\\n- Time complexity:\\nThe time complexity of this solution is O(n), where n is the length of the input array. This is because the solution involves a single iteration through the input array to calculate the initial value of F(0), and then another iteration through the array to calculate the remaining values of F(i). The time complexity of each iteration is O(n), since we need to perform n multiplication and addition operations for each element in the array.\\n\\n- Space complexity:\\nThe space complexity of this solution is O(1), since we only need to store a constant number of variables regardless of the size of the input array. Specifically, we need to store the length of the input array (n), the total sum of all elements in the array (total_sum), the current value of F(i) (current_sum), and the maximum value of F(i) seen so far (max_sum).\\n\\n# Code\\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        n = len(nums)\\n        total_sum = sum(nums)  # Calculate the sum of all elements in the array\\n        \\n        current_sum = sum(i * nums[i] for i in range(n))  # Calculate the initial value of F(0)\\n        max_sum = current_sum\\n        \\n        # Iterate through the array starting from index 1 to n-1\\n        for i in range(1, n):\\n            current_sum += total_sum - n * nums[n-i]  # Calculate the new value of F(i)\\n            max_sum = max(max_sum, current_sum)  # Update the max_sum variable if necessary\\n            \\n        return max_sum\\n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        n = len(nums)\\n        total_sum = sum(nums)  # Calculate the sum of all elements in the array\\n        \\n        current_sum = sum(i * nums[i] for i in range(n))  # Calculate the initial value of F(0)\\n        max_sum = current_sum\\n        \\n        # Iterate through the array starting from index 1 to n-1\\n        for i in range(1, n):\\n            current_sum += total_sum - n * nums[n-i]  # Calculate the new value of F(i)\\n            max_sum = max(max_sum, current_sum)  # Update the max_sum variable if necessary\\n            \\n        return max_sum\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3132416,
                "title": "c-easy-math-and-dp-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nFind Relation between F0 F1 and so on.\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int ans = INT_MIN, n = nums.size();\\n        vector<int> f(n, 0);\\n        int sum=0;\\n        for(int j=0;j<n;j++)\\n        {\\n            f[0] += j * nums[j];\\n            sum += nums[j];\\n        }\\n        \\n        for(int i=1;i<n;i++)\\n        {\\n            f[i] = f[i-1] + sum - (n)*nums[n-i];\\n        }\\n\\n        for(int i:f)\\n        ans = max(ans, i);\\n        return ans;\\n    }\\n};\\n```\\nUPVOTE please!",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int ans = INT_MIN, n = nums.size();\\n        vector<int> f(n, 0);\\n        int sum=0;\\n        for(int j=0;j<n;j++)\\n        {\\n            f[0] += j * nums[j];\\n            sum += nums[j];\\n        }\\n        \\n        for(int i=1;i<n;i++)\\n        {\\n            f[i] = f[i-1] + sum - (n)*nums[n-i];\\n        }\\n\\n        for(int i:f)\\n        ans = max(ans, i);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3040579,
                "title": "c-o-n-time-solution-detailed-explaination",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nMy intuition on this problem is that we would need to first subtract n - 1 (n = nums.size) times the last number, and add the first number from f(k - 1) (which is the one timed by zero in the equations) and then add the rotation sum between the first number and the last \\nnumber non-inclusive to get f(k). \\nfirst solution:\\n    - uses a sliding window to calculate the sum between the ranges before hand and save it in a vector\\n    -  calculates the actual sum\\n    -  loop through nums again starting from index 1 \\n    -  do the above calculation while updating first number \\n    -  and store the max in a integer and returns it\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThen I started coding it, and the complexity has a large constant but my accepted time is still below 200ms. However I know this isn\\'t the best solution, we should be able to lower the constant.\\nThen I realised that, if we are adding the sum of all elements in nums instead of just the range, then you would only need to subtract n * current last number from f(k) to get the rotation sum\\ntherefore, the new approach would be\\n    - loop through nums to calculate the sum and the rotation sum f(0)\\n    - loop through nums again from index 1\\n    - increment the current rotation sum by the sum of all numbers, and minus the current rotation sum by the last number of f(k) times n\\n    - saves the max value and in the end, return it\\n\\n\\n# Complexity\\nOverall time complexity T(N) = 4N since we are looping through the array twice and both loops has 2 constant operations.\\n\\nand since we are not using any data structure to store any elements, space should be constant.\\n\\ntherefore: \\nTime complexty: \\n\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n# Code\\n```e\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        if(nums.size() == 1) return 0;\\n        int n = nums.size();\\n        int sum = 0;\\n        int rotSum = 0;\\n        for(int i = 0; i < n; i++){\\n            sum += nums[i];\\n            rotSum += i * nums[i];\\n        }\\n        int result = rotSum;\\n        for(int i = 1; i < n; i++){\\n            rotSum += sum - n * nums[n-i];\\n            result = max(result, rotSum);\\n        }\\n\\n        return result;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```e\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        if(nums.size() == 1) return 0;\\n        int n = nums.size();\\n        int sum = 0;\\n        int rotSum = 0;\\n        for(int i = 0; i < n; i++){\\n            sum += nums[i];\\n            rotSum += i * nums[i];\\n        }\\n        int result = rotSum;\\n        for(int i = 1; i < n; i++){\\n            rotSum += sum - n * nums[n-i];\\n            result = max(result, rotSum);\\n        }\\n\\n        return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2281241,
                "title": "c-simple-o-n-solution-with-comments",
                "content": "```\\ntypedef long long int ll;\\nclass Solution {\\npublic:\\n    // approach: [4,3,2,6]\\n    // F(0) = 0*4 + 1*3 + 2*2 + 3*6 = curr\\n    // F(1) = 1*4 + 2*3 + 3*2 + 0*6 \\n    //      = curr + 4 + 3 + 2 - 3*6\\n    //      = curr + 4 + 3 + 2 + 6 - 4*6\\n    //      = curr + (arr_sum) - n*nums[i]\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=accumulate(nums.begin(),nums.end(),0),curr=0,n=nums.size(),ans=0;\\n        for(int i=0;i<n;i++){\\n            curr+=(i*nums[i]); \\n        }\\n        ans=curr; \\n        for(int i=n-1;i>=0;i--){\\n            curr+=sum-(n*nums[i]);\\n            ans=max(curr,ans);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "```\\ntypedef long long int ll;\\nclass Solution {\\npublic:\\n    // approach: [4,3,2,6]\\n    // F(0) = 0*4 + 1*3 + 2*2 + 3*6 = curr\\n    // F(1) = 1*4 + 2*3 + 3*2 + 0*6 \\n    //      = curr + 4 + 3 + 2 - 3*6\\n    //      = curr + 4 + 3 + 2 + 6 - 4*6\\n    //      = curr + (arr_sum) - n*nums[i]\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=accumulate(nums.begin(),nums.end(),0),curr=0,n=nums.size(),ans=0;\\n        for(int i=0;i<n;i++){\\n            curr+=(i*nums[i]); \\n        }\\n        ans=curr; \\n        for(int i=n-1;i>=0;i--){\\n            curr+=sum-(n*nums[i]);\\n            ans=max(curr,ans);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1947346,
                "title": "c-easy-to-understand-code-tc-o-n-sc-o-1",
                "content": "\\n![image](https://assets.leetcode.com/users/images/a7af5fcb-c46a-4951-ade5-217817bd54ef_1649959687.7015676.png)\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n  = nums.size();\\n        int product = 0;\\n        int sum  = 0;\\n        for(int i=0;i<n;i++){\\n            sum +=nums[i];\\n            product += i*nums[i];\\n        }\\n        int result = product;\\n        for(int i=n-1;i>=0;i--){\\n            product = product+sum-(n*nums[i]);\\n            result =max(result,product);\\n        }\\n         return result; \\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n  = nums.size();\\n        int product = 0;\\n        int sum  = 0;\\n        for(int i=0;i<n;i++){\\n            sum +=nums[i];\\n            product += i*nums[i];\\n        }\\n        int result = product;\\n        for(int i=n-1;i>=0;i--){\\n            product = product+sum-(n*nums[i]);\\n            result =max(result,product);\\n        }\\n         return result; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2992461,
                "title": "easy-dp-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nEasy DP Solution\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        vector<int>dp(nums.size(),0);\\n        int n=nums.size();\\n        int sum=0;\\n        for(int i=0;i<nums.size();i++){\\n            sum+=nums[i];\\n            dp[0]+=(i*nums[i]);\\n         \\n        } \\n        int ans=dp[0];\\n       \\n        int ind=n-1;\\n        for(int i=1;i<nums.size();i++){\\n            dp[i]=sum+dp[i-1]-(n*nums[ind]);\\n            ind--;\\n            ans=max(dp[i],ans);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        vector<int>dp(nums.size(),0);\\n        int n=nums.size();\\n        int sum=0;\\n        for(int i=0;i<nums.size();i++){\\n            sum+=nums[i];\\n            dp[0]+=(i*nums[i]);\\n         \\n        } \\n        int ans=dp[0];\\n       \\n        int ind=n-1;\\n        for(int i=1;i<nums.size();i++){\\n            dp[i]=sum+dp[i-1]-(n*nums[ind]);\\n            ind--;\\n            ans=max(dp[i],ans);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2992013,
                "title": "c-sliding-window-easy-approach",
                "content": "Here is my c++ code for this problem.\\n\\n# Complexity\\n- Time complexity:O(n)\\n\\n- Space complexity:O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=0, sum1=0, ans=0;\\n        for(int i=0; i<nums.size(); i++){\\n            sum+=nums[i];\\n            sum1+=(i*nums[i]);\\n        }\\n        ans=sum1;\\n        for(int i=nums.size()-1; i>=0; i--){\\n            sum1+=sum-(nums[i]*nums.size());\\n            ans=max(ans, sum1);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Sliding Window"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=0, sum1=0, ans=0;\\n        for(int i=0; i<nums.size(); i++){\\n            sum+=nums[i];\\n            sum1+=(i*nums[i]);\\n        }\\n        ans=sum1;\\n        for(int i=nums.size()-1; i>=0; i--){\\n            sum1+=sum-(nums[i]*nums.size());\\n            ans=max(ans, sum1);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2667421,
                "title": "c-o-n-with-o-n-space-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) \\n    {\\n        int sum=0;\\n        int lastidx=nums.size()-1;\\n        int ans=INT_MIN;\\n\\n        vector<int>f(nums.size(),0);\\n        int curr=0;\\n\\n        for(int i=0;i<nums.size();i++)\\n        {\\n           sum=sum+nums[i];\\n           curr=curr+(i*nums[i]);\\n        }        \\n        f[0]=curr;\\n        ans=max(ans,f[0]);\\n\\n        for(int i=1;i<f.size();i++)\\n        {\\n            f[i] = f[i-1] + sum - (nums.size()*nums[lastidx]);\\n            lastidx--;\\n            ans=max(ans,f[i]);\\n        }\\n        return ans;    \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math",
                    "Dynamic Programming",
                    "Memoization"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) \\n    {\\n        int sum=0;\\n        int lastidx=nums.size()-1;\\n        int ans=INT_MIN;\\n\\n        vector<int>f(nums.size(),0);\\n        int curr=0;\\n\\n        for(int i=0;i<nums.size();i++)\\n        {\\n           sum=sum+nums[i];\\n           curr=curr+(i*nums[i]);\\n        }        \\n        f[0]=curr;\\n        ans=max(ans,f[0]);\\n\\n        for(int i=1;i<f.size();i++)\\n        {\\n            f[i] = f[i-1] + sum - (nums.size()*nums[lastidx]);\\n            lastidx--;\\n            ans=max(ans,f[i]);\\n        }\\n        return ans;    \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2536348,
                "title": "short-and-easy-c-o-n-solution-with-explanation-and-comment",
                "content": "- find how much each rotation difers from the previous one\\n `F(0) = 0 * arr[0] + 1 * arr[1] + ... + (n - 1) * arr[n - 1]`\\n `F(1) = 0 * arr[n-1] + 1 * arr[0] + ... + (n - 1) * arr[n - 2]`\\n `=>F(k+1) = F(k) - (n-1)*arr[n-1] + arr[0] + arr[1] + .. + arr[n-2]`\\n`=>F(k+1) = F(k) - n*arr[n-1] + arr[0] + arr[1] + .. + arr[n-1]` \\n`if SUM = arr[0]+arr[1] + .. + arr[n-1] then`\\n`F(k+1) = F(k) - n*arr[n-1] + SUM`\\nSo if we know the previous F(k) we can calculate the next F(K+1) from the equation\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int ans = INT_MIN;\\n        int f = 0;\\n        int n = nums.size();\\n        int sum = 0;\\n\\t\\t//calculate f(0)\\n        for(int i=0;i<n;i++){\\n            f = f + i*nums[i]; \\n            sum+=nums[i];\\n        }\\n        ans = max(ans , f);\\n        for(int i=1;i<n;i++){\\n            f = f + sum - n*nums[n-i]; //calculating the next f\\n            ans = max(ans , f); //update\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int ans = INT_MIN;\\n        int f = 0;\\n        int n = nums.size();\\n        int sum = 0;\\n\\t\\t//calculate f(0)\\n        for(int i=0;i<n;i++){\\n            f = f + i*nums[i]; \\n            sum+=nums[i];\\n        }\\n        ans = max(ans , f);\\n        for(int i=1;i<n;i++){\\n            f = f + sum - n*nums[n-i]; //calculating the next f\\n            ans = max(ans , f); //update\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1544896,
                "title": "simple-easy-short-code-c-o-n-time-o-1-space",
                "content": "Simple Easy solution. It can be observed from examples that the each element is getting added one time in next iteration and a single element (last) is removed completely array size times from the sum formed. did iterations accordingly and got the answer.\\n\\nSimple Easy code\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=0;\\n        int pro=0;\\n        \\n        for(int i=0;i<nums.size();i++){\\n            pro+=nums[i]*i;\\n            sum+=nums[i];\\n        }\\n        \\n        int mx=pro;\\n        for(int i=nums.size()-1;i>=0;i--){\\n            \\n            pro=pro+sum-(nums[i]*nums.size());\\n            mx=max(mx, pro);\\n        }\\n        return mx;\\n    }\\n};\\n```\\nUpvote,  if you liked. Feel free to ask doubts.",
                "solutionTags": [
                    "C",
                    "Math",
                    "Iterator"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=0;\\n        int pro=0;\\n        \\n        for(int i=0;i<nums.size();i++){\\n            pro+=nums[i]*i;\\n            sum+=nums[i];\\n        }\\n        \\n        int mx=pro;\\n        for(int i=nums.size()-1;i>=0;i--){\\n            \\n            pro=pro+sum-(nums[i]*nums.size());\\n            mx=max(mx, pro);\\n        }\\n        return mx;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1135158,
                "title": "python-solution-iterative-approach-with-explanation",
                "content": "This is my first post so be nice. We\\'re dealing with a simple function that operates on our array. At first glance, the easiest way to solve this would be to brute force it, computing every single `F(i) for i in len(nums)` and taking the maximum. This would take `O(n^2)` time (where `n` is the length of the given array `nums`) as each computation of `F` takes linear time and we are computing the output once for possible number of rotations we can perform. Can we do better than this? \\n\\nThe key to finding a better solution is to re-use work that we have already done. It would be possible to improve the runtime if we could somehow compute the answer using answers that we have previously computed. We, in fact, can do this. Let\\'s look at the given example and see if we can see a pattern: \\n```\\nnums = [4,3,2,6]\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\\n```\\nIf we look at the entires of the calculations diagonally, we see that in each step going down, each element of the array gets added to the sum one more time and the last element is completely subtracted `n-1` times (where `n=len(nums)`). Then, for any valid `i>0 `, we have the relation: `F(i) = F(i-1) + sum(nums) - n * nums[-i])` where `nums[-i]` is the ith entry of the array from the back, 1-indexed. Note that we add the sum each time and subtract `n` times to simplify the calculation. Piecing this all together, we have the following code in Python: \\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        cur = sum(i*n for i,n in enumerate(nums))\\n        max_ans = cur\\n        nums_sum = sum(nums)\\n        l = len(nums)\\n        for i in range(len(nums)-1,0,-1):\\n            cur -= (l * nums[i])\\n            cur += nums_sum\\n            max_ans = max(max_ans, cur)\\n        return max_ans\\n```\\nThe runtime of this function is `O(n)` since calculating the initial sum takes linear time and each step through a rotation takes `O(1)` time with exactly `(n-1)` steps. The space used is `O(1)` since the maximum sum, length of the array and current sum are all constant space with respect to the length `num`.",
                "solutionTags": [
                    "Python",
                    "Iterator"
                ],
                "code": "```\\nnums = [4,3,2,6]\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\\n```\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        cur = sum(i*n for i,n in enumerate(nums))\\n        max_ans = cur\\n        nums_sum = sum(nums)\\n        l = len(nums)\\n        for i in range(len(nums)-1,0,-1):\\n            cur -= (l * nums[i])\\n            cur += nums_sum\\n            max_ans = max(max_ans, cur)\\n        return max_ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1070373,
                "title": "java-o-n",
                "content": "```\\nA = [4, 3, 2, 6]\\n\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\n\\nF(1) = F(0) - 3*A[3] + (A[0]+A[1]+A[2]) = 25 - 3*6 + 4 + 3 + 2 = 16\\n\\nTo find F(1) from F(0),\\nfirst you have to subtract last value during F(0) n-1 times, then you have to add all others values 1 time.\\n\\nYou can write it as :\\nF(1) = F(0) - (n-1)*A[n-1] + (sum-A[n-1])\\nWhich can be generalized as :\\nF(k) = F(k-1) - (n-1)*A[n-k] + (sum - A[n-k])\\n\\n\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        int Fk = 0;\\n        int sum = 0;\\n        int l = A.length;\\n        for(int i=0;i<l;i++){\\n            Fk+=i*A[i];\\n            sum+=A[i];\\n        }\\n        int max=Fk;\\n        for(int k=1;k<l;k++){\\n            Fk=Fk-(l-1)*A[l-k] + (sum-A[l-k]);\\n            max=Math.max(max,Fk);\\n        }\\n        return max;\\n    }\\n}\\n\\n\\n```",
                "solutionTags": [],
                "code": "```\\nA = [4, 3, 2, 6]\\n\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\n\\nF(1) = F(0) - 3*A[3] + (A[0]+A[1]+A[2]) = 25 - 3*6 + 4 + 3 + 2 = 16\\n\\nTo find F(1) from F(0),\\nfirst you have to subtract last value during F(0) n-1 times, then you have to add all others values 1 time.\\n\\nYou can write it as :\\nF(1) = F(0) - (n-1)*A[n-1] + (sum-A[n-1])\\nWhich can be generalized as :\\nF(k) = F(k-1) - (n-1)*A[n-k] + (sum - A[n-k])\\n\\n\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        int Fk = 0;\\n        int sum = 0;\\n        int l = A.length;\\n        for(int i=0;i<l;i++){\\n            Fk+=i*A[i];\\n            sum+=A[i];\\n        }\\n        int max=Fk;\\n        for(int k=1;k<l;k++){\\n            Fk=Fk-(l-1)*A[l-k] + (sum-A[l-k]);\\n            max=Math.max(max,Fk);\\n        }\\n        return max;\\n    }\\n}\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 898140,
                "title": "java-1ms-solution-faster-than-100-o-1-space",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) \\n    {\\n        int n = A.length;\\n        int sum = 0, init = 0;\\n        \\n        for(int i = 0; i < n; i++)\\n        {\\n            sum += A[i];\\n            init += (A[i] * i);\\n        }\\n        \\n        int ans = init;\\n        \\n        for(int k = 1; k < n; k++)\\n        {\\n            int newValue = init + (A[k - 1] * (n - 1)) - (sum - A[k - 1]);\\n            init = newValue;\\n            ans = Math.max(newValue, ans);\\n        }\\n        \\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) \\n    {\\n        int n = A.length;\\n        int sum = 0, init = 0;\\n        \\n        for(int i = 0; i < n; i++)\\n        {\\n            sum += A[i];\\n            init += (A[i] * i);\\n        }\\n        \\n        int ans = init;\\n        \\n        for(int k = 1; k < n; k++)\\n        {\\n            int newValue = init + (A[k - 1] * (n - 1)) - (sum - A[k - 1]);\\n            init = newValue;\\n            ans = Math.max(newValue, ans);\\n        }\\n        \\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 600307,
                "title": "python-sol-with-graphical-explanation",
                "content": "(https://assets.leetcode.com/users/smartchuza/image_1588006903.png)\\n```\\nclass Solution:\\n    def maxRotateFunction(self, a: List[int]) -> int:  \\n        tot,res,n=0,0,len(a)\\n        for i in range(n):\\n            tot+=a[i];\\n            res+=(i*a[i])\\n        x=res\\n        for i in range(n-1,-1,-1):\\n            res=max(res,x-(n-1)*a[i]+tot-a[i])\\n            x=x-(n-1)*a[i]+tot-a[i]\\n        return res![image]\\n\\n```\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, a: List[int]) -> int:  \\n        tot,res,n=0,0,len(a)\\n        for i in range(n):\\n            tot+=a[i];\\n            res+=(i*a[i])\\n        x=res\\n        for i in range(n-1,-1,-1):\\n            res=max(res,x-(n-1)*a[i]+tot-a[i])\\n            x=x-(n-1)*a[i]+tot-a[i]\\n        return res![image]\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 324763,
                "title": "c-4ms-o-n-solution-with-memoization",
                "content": "The idea is that the function F can be defined recursively, for an array A with n elements:\\n```\\nF(0) = 0A_0 + 1A_1 + 2A_2 .... + (n-1)A_(n-1).\\n\\nF(1) = 1A_0 + 2A_1 + 3A_2 .... + 0A_(n-1) \\n= F(0) + (A_0 + A_1 + A_2 + A_3 ... + A_(n-2)) - (n-1)A_(n-1) \\n= F(0) + sum(A) - n(A_(n-1))\\n```\\nThis means ```F(t) = F(t-1) + sum(A) - n(A_(n-t)) for n > t >= 1.```\\nOnce we figure this out, we can simply calculate F(0) ... F(n-1) one by one, like for the fibonacci numbers, and find the max value.\\nThe run-time is O(n), since we iterate over the array twice (preprocessing to get sum and F(0), then again to get all the F numbers), and space complexity is O(1), since we are using constant storage.\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        int64_t size = A.size(), det = 0;\\n        if(size < 1) return 0;\\n        int64_t prev = 0, cur = 0;\\n        for(int i = 0; i < size; ++i) {\\n            det += A[i];\\n            prev += i * A[i];\\n        }\\n        \\n        int64_t m = prev, tmp = prev;\\n\\n        for(int i = 1; i < size; ++i) {\\n            tmp = prev;\\n            cur = tmp + det - size * A[size-i];\\n            prev = cur;\\n            m = max(cur, m);\\n        }\\n        \\n        return m;\\n    }\\n};\\n\\nauto gucciGang = []() {std::ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\\n```",
                "solutionTags": [],
                "code": "```\\nF(0) = 0A_0 + 1A_1 + 2A_2 .... + (n-1)A_(n-1).\\n\\nF(1) = 1A_0 + 2A_1 + 3A_2 .... + 0A_(n-1) \\n= F(0) + (A_0 + A_1 + A_2 + A_3 ... + A_(n-2)) - (n-1)A_(n-1) \\n= F(0) + sum(A) - n(A_(n-1))\\n```\n```F(t) = F(t-1) + sum(A) - n(A_(n-t)) for n > t >= 1.```\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        int64_t size = A.size(), det = 0;\\n        if(size < 1) return 0;\\n        int64_t prev = 0, cur = 0;\\n        for(int i = 0; i < size; ++i) {\\n            det += A[i];\\n            prev += i * A[i];\\n        }\\n        \\n        int64_t m = prev, tmp = prev;\\n\\n        for(int i = 1; i < size; ++i) {\\n            tmp = prev;\\n            cur = tmp + det - size * A[size-i];\\n            prev = cur;\\n            m = max(cur, m);\\n        }\\n        \\n        return m;\\n    }\\n};\\n\\nauto gucciGang = []() {std::ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();\\n```",
                "codeTag": "C++"
            },
            {
                "id": 111916,
                "title": "python3-solution-with-o-n-time-and-o-1-space",
                "content": "In order to do better than O(n^2), we need to find a way to obtain the F(i+1)\\nvalue from the F(i) one, in O(1) time. It took me a couple of attempts,\\nbut finally realized that when moving from F(0) to F(1), all the elements\\nof the array contribute one more time than before; except for the guy which got\\nthe multiplication by zero. This happens in general, not just for F(0) and F(1),\\nbut below explanation refers to that sample for clarity.\\n\\nA compact way to add that new contribution of everyone is just to add sum(A),\\nand the contribution of the special guy (multiplied by zero) was\\n(n-1) * A[n-1], since it was at the end of the (theoretically rotated) array.\\nBut the sum(A) also contains A[n-1] once so we need to substract n * A[n-1],\\nin order to totally eliminate the contributions of A[n-1].\\n\\nTherefore, we can obtain the initial value of the rotation and the sum(A), in\\na single pass (aka O(n)). After that, we iterate from n-1 to 1, and for each\\nof those positions we know the rule to obtain the next rotation: add sum(A)\\nbut substract n * A[i]. Finally, we just compute the maximum rotation along the\\nway. The two iterations imply a total of O(n), and since we did not use\\nadditional storage other than a few variables, space is O(1).\\n\\n```   \\nclass Solution:\\n    def maxRotateFunction(self, A):\\n        n = len(A)\\n        rot = 0\\n        suma = 0\\n        for i in range(n):\\n            rot += i * A[i]\\n            suma += A[i]\\n        max_rot = rot\\n        for i in range(n - 1, 0, -1):\\n            rot = rot + suma - n * A[i]\\n            max_rot = max(max_rot, rot)\\n        return max_rot\\n```",
                "solutionTags": [],
                "code": "```   \\nclass Solution:\\n    def maxRotateFunction(self, A):\\n        n = len(A)\\n        rot = 0\\n        suma = 0\\n        for i in range(n):\\n            rot += i * A[i]\\n            suma += A[i]\\n        max_rot = rot\\n        for i in range(n - 1, 0, -1):\\n            rot = rot + suma - n * A[i]\\n            max_rot = max(max_rot, rot)\\n        return max_rot\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87910,
                "title": "simple-c-solution-o-n-time-and-o-1-space",
                "content": "The naive approach is rotate the array each time 1 place left/right, get the indexed sum and determine max. But it will take O(n^2).\\nU\\nBut with some simulation you will find that the result of one rotation can be foumd from its previous rotation. The formula is \\n```\\nnewsum = prevsum + allsum - ASize*A[i]\\n```\\n\\nI used to rotate the array to right by one place. Rotate the array to one place right means rotating the indexes to one place left.\\n\\n```\\nint maxRotateFunction(int* A, int ASize) {\\n    int i, last, sum,m;\\n    \\n    if(ASize<=1) return 0;\\n    \\n    last=0;\\n    sum=0;\\n    for(i=0;i<ASize;i++){\\n        last += A[i]*i;\\n        sum+=A[i];\\n    }\\n    m=last ;\\n    for(i=ASize-1;i>=1;i--){\\n        last += sum - (ASize*A[i]);\\n        if (last > m) m= last;\\n    }\\n    \\n    return m;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nnewsum = prevsum + allsum - ASize*A[i]\\n```\n```\\nint maxRotateFunction(int* A, int ASize) {\\n    int i, last, sum,m;\\n    \\n    if(ASize<=1) return 0;\\n    \\n    last=0;\\n    sum=0;\\n    for(i=0;i<ASize;i++){\\n        last += A[i]*i;\\n        sum+=A[i];\\n    }\\n    m=last ;\\n    for(i=ASize-1;i>=1;i--){\\n        last += sum - (ASize*A[i]);\\n        if (last > m) m= last;\\n    }\\n    \\n    return m;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 87868,
                "title": "java-solution",
                "content": "This is essentially a Math problem.\\nConsider the array [ A, B, C, D ] with very simple coefficients as following:\\n\\nf(0) = 0A + 1B + 2C + 3D\\nf(1) = 3A + 0B + 1C + 2D\\nf(2) = 2A + 3B + 0C + 1D\\nf(3) = 1A + 2B + 3C + 0D\\n\\nWe can see from above that:\\nf(0) -> f(1) -> f(2) -> f(3)\\nf(i) = f(i - 1) - SUM(A -> D) + N * A[i - 1]\\n\\n```\\npublic class Solution {\\n    public int maxRotateFunction(int[] A) {\\n        int n = A.length;\\n\\tint sum = 0;\\n\\tint candidate = 0;\\n\\n\\tfor (int i = 0; i < n; i++) {\\n\\t\\tsum += A[i];\\n\\t\\tcandidate += A[i] * i;\\n\\t}\\n\\tint best = candidate;\\n\\n\\tfor (int i = 1; i < n; i++) {\\n\\t\\tcandidate = candidate - sum + A[i - 1] * n;\\n\\t\\tbest = Math.max(best, candidate);\\n\\t}\\n\\treturn best;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int maxRotateFunction(int[] A) {\\n        int n = A.length;\\n\\tint sum = 0;\\n\\tint candidate = 0;\\n\\n\\tfor (int i = 0; i < n; i++) {\\n\\t\\tsum += A[i];\\n\\t\\tcandidate += A[i] * i;\\n\\t}\\n\\tint best = candidate;\\n\\n\\tfor (int i = 1; i < n; i++) {\\n\\t\\tcandidate = candidate - sum + A[i - 1] * n;\\n\\t\\tbest = Math.max(best, candidate);\\n\\t}\\n\\treturn best;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3791285,
                "title": "c-o-n-solution-using-math-s-calculation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n = nums.size();\\n\\n        int sum = 0, f0 = 0;\\n        for(int i=0; i<n; i++){\\n            sum += nums[i];\\n            f0 += (i * nums[i]);\\n        }\\n\\n        int ans = f0;\\n\\n        for(int i=n-1; i>0; i--){\\n            f0 = f0 + sum - n * nums[i];\\n            ans = max(ans,f0);\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\n/*\\nn - size of array\\nf0 = 0*nums[0] + 1 * nums[1] + ... + (n-1)*nums[n-1];\\nf1 = 1*nums[0] + 2 * nums[1] +     + 0 * nums[n-1];\\nf1 - f0 = (nums[0] + nums[1] + ... + nums[n-1]) - n * (nums[n-1]);\\n\\nf(x) = f(x-1) + (sum of array) - (last element of previous state);\\n*/\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n = nums.size();\\n\\n        int sum = 0, f0 = 0;\\n        for(int i=0; i<n; i++){\\n            sum += nums[i];\\n            f0 += (i * nums[i]);\\n        }\\n\\n        int ans = f0;\\n\\n        for(int i=n-1; i>0; i--){\\n            f0 = f0 + sum - n * nums[i];\\n            ans = max(ans,f0);\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\n/*\\nn - size of array\\nf0 = 0*nums[0] + 1 * nums[1] + ... + (n-1)*nums[n-1];\\nf1 = 1*nums[0] + 2 * nums[1] +     + 0 * nums[n-1];\\nf1 - f0 = (nums[0] + nums[1] + ... + nums[n-1]) - n * (nums[n-1]);\\n\\nf(x) = f(x-1) + (sum of array) - (last element of previous state);\\n*/\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3506925,
                "title": "solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums)\\n    {\\n        int ans=INT_MIN;\\n        int n=nums.size();\\n        int sum=0;\\n        int s=0;\\n        for (int i=0;i<n;i++)\\n        {\\n            sum+=nums[i];\\n            s+=nums[i]*i;\\n        }\\n        for (int i=n-1;i>=0;i--)\\n        {\\n           s=s-(nums[i]*(n-1))+(sum-nums[i]);\\n           ans=max(ans,s);\\n        }\\n        return ans;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums)\\n    {\\n        int ans=INT_MIN;\\n        int n=nums.size();\\n        int sum=0;\\n        int s=0;\\n        for (int i=0;i<n;i++)\\n        {\\n            sum+=nums[i];\\n            s+=nums[i]*i;\\n        }\\n        for (int i=n-1;i>=0;i--)\\n        {\\n           s=s-(nums[i]*(n-1))+(sum-nums[i]);\\n           ans=max(ans,s);\\n        }\\n        return ans;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3457437,
                "title": "java-100-faster-math-simple-easyapproach",
                "content": "***Please upvote if you like the solution.***\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n\\n        long total=0,sum=0;\\n        long maxSum=Integer.MIN_VALUE;\\n        int n=nums.length;\\n       \\n        for(int i=0;i<n;i++){\\n            total+=nums[i];\\n            sum+=(nums[i]*i);\\n        }\\n        maxSum=Math.max(maxSum,sum);\\n\\n        \\n        for(int i=n-1;i>0;i--){\\n            sum=sum+total-(nums[i]*(n));\\n            //System.out.println(sum+\" \"+nums[i]*(n+1));\\n            maxSum=Math.max(maxSum,sum);\\n        }\\n\\n        return (int)maxSum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n\\n        long total=0,sum=0;\\n        long maxSum=Integer.MIN_VALUE;\\n        int n=nums.length;\\n       \\n        for(int i=0;i<n;i++){\\n            total+=nums[i];\\n            sum+=(nums[i]*i);\\n        }\\n        maxSum=Math.max(maxSum,sum);\\n\\n        \\n        for(int i=n-1;i>0;i--){\\n            sum=sum+total-(nums[i]*(n));\\n            //System.out.println(sum+\" \"+nums[i]*(n+1));\\n            maxSum=Math.max(maxSum,sum);\\n        }\\n\\n        return (int)maxSum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3442548,
                "title": "javascript-simple-summation-time-o-n-space-o-1",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\nvar maxRotateFunction = function(nums) {\\n    const sum = nums.reduce((acc, cur) => acc + cur);\\n    let fx = nums.reduce((acc, cur, idx) => acc + cur * idx, 0), maxF = fx;\\n\\n    for (let i = nums.length - 1; i > 0; i--) {\\n        fx += sum - nums.length * nums[i];\\n        maxF = Math.max(maxF, fx);\\n    }\\n\\n    return maxF;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Array"
                ],
                "code": "```\\nvar maxRotateFunction = function(nums) {\\n    const sum = nums.reduce((acc, cur) => acc + cur);\\n    let fx = nums.reduce((acc, cur, idx) => acc + cur * idx, 0), maxF = fx;\\n\\n    for (let i = nums.length - 1; i > 0; i--) {\\n        fx += sum - nums.length * nums[i];\\n        maxF = Math.max(maxF, fx);\\n    }\\n\\n    return maxF;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3315369,
                "title": "java",
                "content": "\\n\\n## Brute force\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        List<Integer> li = new ArrayList<>();\\n        for(int i:nums)\\n        li.add(i);\\n        int max = Integer.MIN_VALUE, sum = 0;\\n        for(int i =0;i<nums.length;i++)\\n        {\\n            int temp = li.get(0);\\n            li.remove(0);\\n            li.add(temp);\\n            //System.out.println(sum);\\n            for(int j=0;j<li.size();j++)\\n            {\\n                sum = sum + (j * li.get(j));\\n                //System.out.println(li.get(j));\\n            }\\n            //System.out.println();\\n            max = Math.max(max, sum);\\n            sum = 0;\\n        }\\n        return max;\\n    }\\n}\\n```\\n\\n## Optmised Solution\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int sum = 0, curr = 0, max = Integer.MIN_VALUE;\\n        for(int i =0;i<nums.length;i++)\\n        {\\n            sum += (i*nums[i]);\\n            curr += nums[i];\\n        }\\n        for(int i=nums.length-1;i>=0;i--)\\n        {\\n            sum += (curr - (nums.length * nums[i]));\\n            max = Math.max(max, sum);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        List<Integer> li = new ArrayList<>();\\n        for(int i:nums)\\n        li.add(i);\\n        int max = Integer.MIN_VALUE, sum = 0;\\n        for(int i =0;i<nums.length;i++)\\n        {\\n            int temp = li.get(0);\\n            li.remove(0);\\n            li.add(temp);\\n            //System.out.println(sum);\\n            for(int j=0;j<li.size();j++)\\n            {\\n                sum = sum + (j * li.get(j));\\n                //System.out.println(li.get(j));\\n            }\\n            //System.out.println();\\n            max = Math.max(max, sum);\\n            sum = 0;\\n        }\\n        return max;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int sum = 0, curr = 0, max = Integer.MIN_VALUE;\\n        for(int i =0;i<nums.length;i++)\\n        {\\n            sum += (i*nums[i]);\\n            curr += nums[i];\\n        }\\n        for(int i=nums.length-1;i>=0;i--)\\n        {\\n            sum += (curr - (nums.length * nums[i]));\\n            max = Math.max(max, sum);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3135691,
                "title": "c-solution-o-n",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0,tsum=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            tsum+=nums[i]*i;\\n        }\\n        int ans=INT_MIN;\\n        for(int i=n-1;i>=0;i--){\\n            tsum=tsum-(nums[i]*(n-1))+(sum-nums[i]);\\n            //int r=(tsum-(nums[i]*(n-1)))+(sum-nums[i]);\\n            ans=max(ans,tsum);\\n        }\\n        return ans;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0,tsum=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            tsum+=nums[i]*i;\\n        }\\n        int ans=INT_MIN;\\n        for(int i=n-1;i>=0;i--){\\n            tsum=tsum-(nums[i]*(n-1))+(sum-nums[i]);\\n            //int r=(tsum-(nums[i]*(n-1)))+(sum-nums[i]);\\n            ans=max(ans,tsum);\\n        }\\n        return ans;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2998660,
                "title": "easy-solution-well-explained-dp-python3-clean-code",
                "content": "***Please give an upvote if you like the solution**\\n\\n#6Companies30days #ReviseWithArsh Challenge 2023\\nDay1\\nQ4. You are given an integer array nums of length n. Return maximum length of Rotation Function.*\\n\\n# Approach\\nDynamic Programming\\n\\n# Complexity\\n- Time complexity: O(n)\\n\\n# Code\\n**Python3:**\\n```\\nclass Solution(object):\\n    def maxRotateFunction(self, nums: List[int])-> int: \\n        s=sum(nums)\\n\\n        d=sum(elem * idx for idx, elem in enumerate(nums)) #first find our number 1: dynamic programming solution\\n        sol = d\\n        for pivot in range(len(nums)-1,-1,-1): # pivot: we move backwards\\n            d+=s-len(nums)*nums[pivot] # get next d value\\n            sol=max(d,sol)\\n        return sol\\n        \\n```",
                "solutionTags": [
                    "Python3",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, nums: List[int])-> int: \\n        s=sum(nums)\\n\\n        d=sum(elem * idx for idx, elem in enumerate(nums)) #first find our number 1: dynamic programming solution\\n        sol = d\\n        for pivot in range(len(nums)-1,-1,-1): # pivot: we move backwards\\n            d+=s-len(nums)*nums[pivot] # get next d value\\n            sol=max(d,sol)\\n        return sol\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2982616,
                "title": "maths-approach-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n# Maths Approach\\nF(0)=0*a0 + 1*a1 + 2*a2 + 3*a3 +.....+n-1*a[n-1].\\nF(1) = 0*a[n-1]+ 1*a0 + 2*a1 + 3*a2 + 4*a3 +.....+n-1*a[n-2].\\n\\nNow, Subtract F(1)-F(0)\\nF(1)-F(0)=a0 + a1 + a2 + ...+a[n-2] -(n-1)*a[n-1];\\nF(1)-F(0)=a0 + a1 + a2 + ... +a[n-2] + a[n-1] - n*a[n-1];\\nNow, F(1)-F(0)= Summation of all elements of array - n*a[n-1];\\nF(1)=F(0)+Summation of all elements of array - n*a[n-1];\\n\\nSimilarly, F(2) = F(1)+Summation of all elements of array - n*a[n-2];\\n           F(3)= F(2)+Summation of all elements of array - n*a[n-3];\\n\\nand so on..\\n\\nStore the max values for every function u will get the answer in the end.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nCode the above maths algo in code.\\n**Steps to Code.**\\n1. First calculate the F(0) and sum of all elements of the array and initialise the answer with F(0).\\n2. Take prev variable and store the F(0) in it.\\n3. Now loop from i=1 to i=n-1 \\n4. Keep finding F(i) = prev + sum -n*(arr[n-i]);\\n5. Keep updating the answer and prev  value.\\n6. In the end u will get the answer\\n\\n\\n\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n       int n = nums.size(),sum=0,prev;\\n       int ans = 0;\\n       for(int i=0; i<n; i++){\\n       ans+=i*nums[i];\\n       sum+=nums[i];\\n       }\\n\\n        prev = ans;\\n\\n       for(int i = 1; i<n; i++)\\n       {\\n           int curr = prev+sum-n*(nums[n-i]);\\n           ans = max(curr, ans);\\n           prev = curr;\\n       }\\n       return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Brainteaser"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n       int n = nums.size(),sum=0,prev;\\n       int ans = 0;\\n       for(int i=0; i<n; i++){\\n       ans+=i*nums[i];\\n       sum+=nums[i];\\n       }\\n\\n        prev = ans;\\n\\n       for(int i = 1; i<n; i++)\\n       {\\n           int curr = prev+sum-n*(nums[n-i]);\\n           ans = max(curr, ans);\\n           prev = curr;\\n       }\\n       return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2449527,
                "title": "c-maths",
                "content": "**Explanation:**\\n![image](https://assets.leetcode.com/users/images/f36cff7c-bd96-4296-9de0-e94aea4f3b8f_1660922016.8000498.jpeg)\\n\\n**Try to dry run some more test case.**\\n\\n**Time:** *O(n)*\\n**Space:** *O(1)*\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n = nums.size();\\n        int sum = accumulate(nums.begin(), nums.end(), 0);\\n        \\n        int initialState = 0;\\n        for(int i=0; i<n; ++i) initialState += i*nums[i];\\n        \\n        int ans = initialState;\\n        for(int i=n-1; i>0; --i){\\n            initialState += (sum - (n*nums[i]));\\n            ans = max(ans, initialState);\\n        }\\n        return ans;\\n    }\\n};\\n```\\nplease **UPVOTE**",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n = nums.size();\\n        int sum = accumulate(nums.begin(), nums.end(), 0);\\n        \\n        int initialState = 0;\\n        for(int i=0; i<n; ++i) initialState += i*nums[i];\\n        \\n        int ans = initialState;\\n        for(int i=n-1; i>0; --i){\\n            initialState += (sum - (n*nums[i]));\\n            ans = max(ans, initialState);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2345062,
                "title": "c-easy-code",
                "content": "Please Upvote :)\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0;\\n        int curr=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            curr+=i*nums[i];\\n            sum+=nums[i];\\n        }\\n        int res=curr;\\n        for(int i=0;i<n;i++)\\n        {\\n            // remove the last item n times (as 1 times it is also added in sum && n-1 for index)\\n            curr-=n*nums[n-i-1];\\n            curr+=sum;\\n            res=max(res,curr);\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0;\\n        int curr=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            curr+=i*nums[i];\\n            sum+=nums[i];\\n        }\\n        int res=curr;\\n        for(int i=0;i<n;i++)\\n        {\\n            // remove the last item n times (as 1 times it is also added in sum && n-1 for index)\\n            curr-=n*nums[n-i-1];\\n            curr+=sum;\\n            res=max(res,curr);\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2128405,
                "title": "simple-maths-solution-in-java-o-n-time",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int sum1 =0,sum2 = 0;\\n        for(int i=0;i<nums.length;i++){\\n            sum1 += nums[i];\\n            sum2 += i*nums[i];\\n        }\\n        int result = sum2;\\n        for(int i=0;i<nums.length;i++){\\n            sum2 = sum2-sum1+(nums.length)*nums[i];\\n            result = Math.max(result,sum2);\\n        }\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int sum1 =0,sum2 = 0;\\n        for(int i=0;i<nums.length;i++){\\n            sum1 += nums[i];\\n            sum2 += i*nums[i];\\n        }\\n        int result = sum2;\\n        for(int i=0;i<nums.length;i++){\\n            sum2 = sum2-sum1+(nums.length)*nums[i];\\n            result = Math.max(result,sum2);\\n        }\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2016505,
                "title": "straight-solution-with-math-o-n-time-and-o-1-space",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int sum=0; \\n        for(int i=0;i<nums.length;i++) {\\n            sum+=nums[i];\\n        } \\n        int ans =0;\\n        for(int i=0;i < nums.length;i++) {\\n            ans += i*nums[i];\\n        }\\n        int last  = ans;\\n        for(int j=nums.length-1;j>0;j--) {\\n            last  = last - nums[j]*nums.length + sum;\\n            ans = Math.max(ans,last);\\n        }\\n        return ans;\\n    }\\n}\\n```\\nFor each rotation ,if we calculate the last rotation at element j, then the next rotation (j+1)\\nsum =  last + sum of (array)  -  nums[j]*nums.length",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int sum=0; \\n        for(int i=0;i<nums.length;i++) {\\n            sum+=nums[i];\\n        } \\n        int ans =0;\\n        for(int i=0;i < nums.length;i++) {\\n            ans += i*nums[i];\\n        }\\n        int last  = ans;\\n        for(int j=nums.length-1;j>0;j--) {\\n            last  = last - nums[j]*nums.length + sum;\\n            ans = Math.max(ans,last);\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1968157,
                "title": "simple-python-solution-with-explanation",
                "content": "If we look at the example, we can find out that F[i+1]-F[i] is always the sum of the array missing the shifted number minus the `n-1` times of the shifted number\\n```\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\\n```\\nSo we can conclude with a formula:\\n`F[i+1] - F[i] = (sum(nums) - nums[-1-i]) - (n-1) * nums[-1-i]`\\nso rearrange, it will be\\n`F[i+1]  =  F[i] + sum(nums)  - n * nums[-1-i]`\\n\\nThen we can write the solution:\\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        F = [0]*len(nums)\\n        n = len(nums)\\n        F[0] =sum([i*nums[i] for i in range(n)]) #can be initialized using the function\\n        sum_nums = sum(nums)\\n        for i in range(n-1):\\n            F[i+1] = F[i] - n * nums[-1-i] +sum_nums\\n        return max(F)\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\\n```\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        F = [0]*len(nums)\\n        n = len(nums)\\n        F[0] =sum([i*nums[i] for i in range(n)]) #can be initialized using the function\\n        sum_nums = sum(nums)\\n        for i in range(n-1):\\n            F[i+1] = F[i] - n * nums[-1-i] +sum_nums\\n        return max(F)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1812811,
                "title": "o-n-simple-fast",
                "content": "```\\nint maxRotateFunction(vector<int>& nums) {\\n        int sum=0,ans=0;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            ans+=(nums[i]*i);\\n        }\\n        int k=n-1,cur=ans;\\n\\n        for(int i=1;i<=n-1;i++){\\n            cur-=((nums[k]*(n-1))-(sum-nums[k]));\\n            k--;\\n            ans=max(ans,cur);\\n        }\\n        return ans;\\n    }\\n```",
                "solutionTags": [
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "```\\nint maxRotateFunction(vector<int>& nums) {\\n        int sum=0,ans=0;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            ans+=(nums[i]*i);\\n        }\\n        int k=n-1,cur=ans;\\n\\n        for(int i=1;i<=n-1;i++){\\n            cur-=((nums[k]*(n-1))-(sum-nums[k]));\\n            k--;\\n            ans=max(ans,cur);\\n        }\\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1576707,
                "title": "python",
                "content": "calculate F0, sum(nums)\\nrecursive relathionship is\\nF[i] = F[i-1] + n * nums[i-1] - sumAll for i >= 1\\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        n = len(nums)\\n        if n == 1:\\n            return 0\\n        if n == 2:\\n            return max(nums)\\n        \\n        \\n        F0 = sum([nums[i]*i for i in range(n)])\\n        sumNum = sum(nums)\\n        Fmax = F0\\n        for i in range(1, n):\\n            F0 += n * nums[i-1] - sumNum\\n            Fmax = max(F0, Fmax)\\n        return Fmax\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        n = len(nums)\\n        if n == 1:\\n            return 0\\n        if n == 2:\\n            return max(nums)\\n        \\n        \\n        F0 = sum([nums[i]*i for i in range(n)])\\n        sumNum = sum(nums)\\n        Fmax = F0\\n        for i in range(1, n):\\n            F0 += n * nums[i-1] - sumNum\\n            Fmax = max(F0, Fmax)\\n        return Fmax\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1561444,
                "title": "c",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=0;\\n        int fsum=0;\\n        int n=nums.size();\\n        \\n        for(int i=0; i<nums.size(); i++)\\n        {\\n            sum+=nums[i];\\n            \\n            fsum+=i*nums[i];\\n        }\\n        \\n        int ans=fsum;\\n        for(int i=0; i<nums.size(); i++)\\n        {\\n            \\n            int k=fsum-sum;\\n            k+=(n)*nums[i];\\n            \\n            fsum=k;\\n            \\n            //cout<<k<<endl;\\n            \\n            ans=max(ans,k);\\n        }\\n        \\n        return ans;\\n        \\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum=0;\\n        int fsum=0;\\n        int n=nums.size();\\n        \\n        for(int i=0; i<nums.size(); i++)\\n        {\\n            sum+=nums[i];\\n            \\n            fsum+=i*nums[i];\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1490381,
                "title": "java-easy-with-comments-98-faster",
                "content": "```\\n/*\\nIf you want to do this brute force way of course it will give TLE.\\nyou must find other way \\n\\nwhat i am doing is....\\n\\n1. calculating value for the first time.\\n2. use previously calculated value,modify it for current value\\n\\nhere the function that i have evaluate is:\\nF(i) = F(i-1) + SUM(array) + ( len(array) * array[len(array)-i] );\\n\\n*/\\n\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        \\n        long max=Long.MIN_VALUE;\\n        long current=0,sum=0;\\n        \\n        for(int i=0;i<nums.length;i++){\\n            current+=(nums[i]*i);\\n            sum+=nums[i];\\n        }\\n        \\n        max=Math.max(max,current);\\n        //System.out.println(current+\" \"+sum);\\n        for(int i=1;i<nums.length;i++){\\n            current=current+sum-(nums[nums.length-i]*(nums.length));\\n            max=Math.max(max,current);\\n            //System.out.println(current+\" \"+(nums[nums.length-i]*(nums.length)));\\n        }\\n        return (int)max;\\n        \\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\n/*\\nIf you want to do this brute force way of course it will give TLE.\\nyou must find other way \\n\\nwhat i am doing is....\\n\\n1. calculating value for the first time.\\n2. use previously calculated value,modify it for current value\\n\\nhere the function that i have evaluate is:\\nF(i) = F(i-1) + SUM(array) + ( len(array) * array[len(array)-i] );\\n\\n*/\\n\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        \\n        long max=Long.MIN_VALUE;\\n        long current=0,sum=0;\\n        \\n        for(int i=0;i<nums.length;i++){\\n            current+=(nums[i]*i);\\n            sum+=nums[i];\\n        }\\n        \\n        max=Math.max(max,current);\\n        //System.out.println(current+\" \"+sum);\\n        for(int i=1;i<nums.length;i++){\\n            current=current+sum-(nums[nums.length-i]*(nums.length));\\n            max=Math.max(max,current);\\n            //System.out.println(current+\" \"+(nums[nums.length-i]*(nums.length)));\\n        }\\n        return (int)max;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1283016,
                "title": "396-based-on-observation-currf-n-ele-sum-prevf",
                "content": "---\\n\\nNot easy to observe at begin, taking 3 elements `[ a, b, c ]` will solve the problem\\n\\nThere is a bug in the problem, raised a bug - https://github.com/LeetCode-Feedback/LeetCode-Feedback/issues/3893\\n\\n---\\n\\n**Algo:**\\n- Fully based on below observation\\n- Assume 3 elements `[ a, b, c ]`\\n- Calculate `F(0) = 0xa + 1xb + 2xc`\\n  - Now come from reverse\\n    - Caculate `F(2)`, it is based on `F(0)`\\n    - Similarly `F(1)` will be based on `F(2)`\\n\\n**Observation**\\n\\n```\\n// -----------------------\\n// a    b    c\\n// -----------------------\\n//                                  so sum = a+b+c\\n// -----------------------\\n//      b   2c      F(0)\\n// a   2b           F(1)    this is same as .. 3*b  -a-b-c(-sum)  + (2a+c)(F(2)) = 2a+c\\n// 2a        c      F(2)    this is same as .. 3*a  -a-b-c(-sum)  + (b+2c)(F(0)) = 2a+c\\n// -----------------------\\n```\\n\\nHope it is simple to understand.\\n\\n---\\n\\n```\\nvar maxRotateFunction = function(A) {\\n    let n = A.length;\\n\\n    let sum = 0\\n    let currFSum = 0\\n    A.forEach((e, i) => {\\n        sum += e;\\n        currFSum += e * i\\n    })\\n\\n    let maxFSum = currFSum\\n    for (let i = 0; i < n - 1; i++) { // 1 iteration will be repeated if <n, but ans will be same\\n        currFSum = n * A[i] - sum + currFSum\\n        maxFSum = Math.max(maxFSum, currFSum)\\n    }\\n    return maxFSum;\\n};\\n```\\n\\n![image](https://assets.leetcode.com/users/images/f72c4402-1f00-49d1-9bda-630a8926f559_1624104136.4769456.png)\\n\\n---\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n// -----------------------\\n// a    b    c\\n// -----------------------\\n//                                  so sum = a+b+c\\n// -----------------------\\n//      b   2c      F(0)\\n// a   2b           F(1)    this is same as .. 3*b  -a-b-c(-sum)  + (2a+c)(F(2)) = 2a+c\\n// 2a        c      F(2)    this is same as .. 3*a  -a-b-c(-sum)  + (b+2c)(F(0)) = 2a+c\\n// -----------------------\\n```\n```\\nvar maxRotateFunction = function(A) {\\n    let n = A.length;\\n\\n    let sum = 0\\n    let currFSum = 0\\n    A.forEach((e, i) => {\\n        sum += e;\\n        currFSum += e * i\\n    })\\n\\n    let maxFSum = currFSum\\n    for (let i = 0; i < n - 1; i++) { // 1 iteration will be repeated if <n, but ans will be same\\n        currFSum = n * A[i] - sum + currFSum\\n        maxFSum = Math.max(maxFSum, currFSum)\\n    }\\n    return maxFSum;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1039345,
                "title": "python-six-lines-solution-with-explanation",
                "content": "We can, at each step, reuse the previous solution:\\n\\nf(k) = f(k-1)  # from the previous value \\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- (len(arr)-1) * nums[len(nums) - 1 - idx] # remove the rightmost element multiplied for the max count\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ sum(nums) - nums[len(nums) - 1 - idx] # add one of each (no leftmost)\\n\\n```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        n = len(A)\\n        cur = best = sum([i*A[i] for i in range(n)])\\n        sm = sum(A)\\n        \\n        for idx in range(n):\\n            cur = cur - (n - 1) * A[n - 1 - idx] + sm - A[n - 1 - idx]\\n            best = max(best, cur)\\n        return best\\n```\\n\\nMore concise and clean version\\n```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        n, sm = len(A), sum(A)\\n        cur = best = sum([i*A[i] for i in range(n)])\\n        \\n        for idx in range(n):\\n            cur += sm - n * A[n - 1 - idx]\\n            best = max(best, cur)\\n        return best\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        n = len(A)\\n        cur = best = sum([i*A[i] for i in range(n)])\\n        sm = sum(A)\\n        \\n        for idx in range(n):\\n            cur = cur - (n - 1) * A[n - 1 - idx] + sm - A[n - 1 - idx]\\n            best = max(best, cur)\\n        return best\\n```\n```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        n, sm = len(A), sum(A)\\n        cur = best = sum([i*A[i] for i in range(n)])\\n        \\n        for idx in range(n):\\n            cur += sm - n * A[n - 1 - idx]\\n            best = max(best, cur)\\n        return best\\n```",
                "codeTag": "Java"
            },
            {
                "id": 964425,
                "title": "c-linear-time",
                "content": "int maxRotateFunction(vector<int>& a) {\\n        int n=a.size();\\n        long long int ans=0;\\n        long long int res=INT_MIN;\\n        long long int sum=0;\\n        for(int i=0;i<n;i++){\\n            ans+=i*a[i];\\n            sum+=a[i];\\n        }\\n        res=ans;\\n        for(int i=1;i<n;i++){\\n            ans=sum+ans-long(n)*a[n-i];\\n            res=max(res,ans);\\n        }\\n        return res;\\n    }",
                "solutionTags": [],
                "code": "int maxRotateFunction(vector<int>& a) {\\n        int n=a.size();\\n        long long int ans=0;\\n        long long int res=INT_MIN;\\n        long long int sum=0;\\n        for(int i=0;i<n;i++){\\n            ans+=i*a[i];\\n            sum+=a[i];\\n        }\\n        res=ans;\\n        for(int i=1;i<n;i++){\\n            ans=sum+ans-long(n)*a[n-i];\\n            res=max(res,ans);\\n        }\\n        return res;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 797409,
                "title": "c-linear-in-time-efficient-and-simple",
                "content": "```\\nclass Solution {\\npublic:\\n    #define ll long long\\n    int maxRotateFunction(vector<int>& a) {\\n        ll sum=0;\\n        ll tmp=0;\\n        for(int i=0;i<a.size();i++){\\n            sum+=a[i];\\n            tmp+=(i*a[i]);\\n        }\\n        ll ans=tmp;\\n        for(int i=a.size()-1;i>=0;i--){\\n            tmp-=((a.size()-1)*a[i]);\\n            tmp+=(sum-a[i]);\\n            ans=max(ans,tmp);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    #define ll long long\\n    int maxRotateFunction(vector<int>& a) {\\n        ll sum=0;\\n        ll tmp=0;\\n        for(int i=0;i<a.size();i++){\\n            sum+=a[i];\\n            tmp+=(i*a[i]);\\n        }\\n        ll ans=tmp;\\n        for(int i=a.size()-1;i>=0;i--){\\n            tmp-=((a.size()-1)*a[i]);\\n            tmp+=(sum-a[i]);\\n            ans=max(ans,tmp);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 765899,
                "title": "simple-c-o-n-time-o-1-space-f1-f0-sum-a-n-1-n",
                "content": "```\\nint maxRotateFunction(vector<int>& A) {\\n\\tlong long f = 0, N = A.size();\\n\\tconst auto sum = accumulate(A.begin(), A.end(), f);\\n\\n\\t// calculate F0\\n\\tfor (int i=1; i<A.size(); ++i) {\\n\\t\\tf += A[i]*i;\\n\\t}\\n\\n\\tauto best = f;\\n\\tfor (int i=N-1; i>0; --i) {\\n\\t\\t// find each consecutive F\\n\\t\\tf += sum - A[i]*N;\\n\\t\\tbest = max(best, f);\\n\\t}\\n\\treturn best;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nint maxRotateFunction(vector<int>& A) {\\n\\tlong long f = 0, N = A.size();\\n\\tconst auto sum = accumulate(A.begin(), A.end(), f);\\n\\n\\t// calculate F0\\n\\tfor (int i=1; i<A.size(); ++i) {\\n\\t\\tf += A[i]*i;\\n\\t}\\n\\n\\tauto best = f;\\n\\tfor (int i=N-1; i>0; --i) {\\n\\t\\t// find each consecutive F\\n\\t\\tf += sum - A[i]*N;\\n\\t\\tbest = max(best, f);\\n\\t}\\n\\treturn best;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 523845,
                "title": "java-o-n-beat-100",
                "content": "```\\npublic int maxRotateFunction(int[] A) {\\n        if (A == null || A.length == 0) return 0;\\n        int sum = 0, ret = 0, k = 0, l = A.length;\\n        if (l == 1) return 0;\\n        for (int n : A) {\\n            sum += n;\\n            ret += n * k++;\\n        }\\n        int res = ret;\\n        for (int i = l - 1; i >= 1; i--){\\n            int curr = ret + sum - l * A[i];\\n            ret = curr;\\n            res = Math.max(res, curr);\\n        }\\n        return res;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic int maxRotateFunction(int[] A) {\\n        if (A == null || A.length == 0) return 0;\\n        int sum = 0, ret = 0, k = 0, l = A.length;\\n        if (l == 1) return 0;\\n        for (int n : A) {\\n            sum += n;\\n            ret += n * k++;\\n        }\\n        int res = ret;\\n        for (int i = l - 1; i >= 1; i--){\\n            int curr = ret + sum - l * A[i];\\n            ret = curr;\\n            res = Math.max(res, curr);\\n        }\\n        return res;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 347646,
                "title": "c-easy-solution",
                "content": "\\tclass Solution {\\n\\tpublic:\\n\\t\\tint maxRotateFunction(vector<int>& A) {\\n\\t\\t\\tif(A.empty()) return 0;\\n\\t\\t\\tlong long cur=0;\\n\\t\\t\\tlong long res=0;\\n\\t\\t\\tlong long tol=0;\\n\\t\\t\\tfor(int i=0;i<A.size();i++){\\n\\t\\t\\t\\ttol+=A[i];\\n\\t\\t\\t\\tcur+=i*A[i];\\n\\t\\t\\t}\\n\\t\\t\\tres=cur;\\n\\t\\t\\treverse(A.begin(),A.end());\\n\\t\\t\\tfor(int i=0;i<A.size();i++){\\n\\t\\t\\t\\tcur=cur+tol-A.size()*A[i];            \\n\\t\\t\\t\\tres=max(res,cur);\\n\\t\\t\\t}\\n\\t\\t\\treturn res;\\n\\n\\t\\t}\\n\\t};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tint maxRotateFunction(vector<int>& A) {\\n\\t\\t\\tif(A.empty()) return 0;\\n\\t\\t\\tlong long cur=0;\\n\\t\\t\\tlong long res=0;\\n\\t\\t\\tlong long tol=0;\\n\\t\\t\\tfor(int i=0;i<A.size();i++){\\n\\t\\t\\t\\ttol+=A[i];\\n\\t\\t\\t\\tcur+=i*A[i];\\n\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 319248,
                "title": "java-1-ms-and-39-4mb-space",
                "content": "The **brute-force** solution will give **O(N^2)**\\n\\nBut if we notice the following fact:\\n\\nF(i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 x B(1) + 1 x B(2) + 2 x B(3) + 3 x B(4) + ... + (n - 2)B(n - 1) + (n - 1)B(n)\\nF(i+1) = 0 x B(n)   +  1 x B(1) + 2 x B(2) + 3 x B(3) + .................... + (n - 1)B(n - 1) \\n\\nF(i + 1) - F(i) = B(1) + B[2] + B[3] + ... + B[n - 1] - (n - 1)B[n]\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= sum(B) - n x B[n]\\n\\nUsing this derived equation we can quickly calculate the next F based on the previous value, which is O(1). Finally we get the maximum by O(N).\\n\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        if (A == null || A.length == 0) return 0;\\n        \\n        int current = 0, max = 0, sum = 0;\\n        for (int i = 0; i < A.length; i++) {\\n            current += i * A[i];\\n            sum += A[i];\\n        }\\n        \\n        max = current;\\n        \\n        for (int i = A.length - 1; i >= 0; i--) {\\n            current = current + sum - A.length * A[i];\\n            max = Math.max(max, current);\\n        }\\n        \\n        return max;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        if (A == null || A.length == 0) return 0;\\n        \\n        int current = 0, max = 0, sum = 0;\\n        for (int i = 0; i < A.length; i++) {\\n            current += i * A[i];\\n            sum += A[i];\\n        }\\n        \\n        max = current;\\n        \\n        for (int i = A.length - 1; i >= 0; i--) {\\n            current = current + sum - A.length * A[i];\\n            max = Math.max(max, current);\\n        }\\n        \\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 292993,
                "title": "48ms-python-o-n",
                "content": "```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        N = len(A)\\n        x = sum(A)\\n        res = start = sum(A[i]*i for i in range(N))\\n        for i in range(1, N):\\n            start += x- N*A[N - i % N]\\n            res = max(res, start)\\n        return res\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        N = len(A)\\n        x = sum(A)\\n        res = start = sum(A[i]*i for i in range(N))\\n        for i in range(1, N):\\n            start += x- N*A[N - i % N]\\n            res = max(res, start)\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87844,
                "title": "python-simple-6-liner",
                "content": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        # Time: O(n)\\n        # Space: O(n). Can be reduced to O(1) without list comprehension.\\n        diff, curr = sum(A), sum([num * i for (i, num) in enumerate(A)])\\n        res = curr\\n        for i in range(len(A) - 1, 0, -1):\\n            curr += diff - A[i] * len(A)\\n            res = max(res, curr)\\n        return res\\n```\\n\\n*- Yangshun*",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        # Time: O(n)\\n        # Space: O(n). Can be reduced to O(1) without list comprehension.\\n        diff, curr = sum(A), sum([num * i for (i, num) in enumerate(A)])\\n        res = curr\\n        for i in range(len(A) - 1, 0, -1):\\n            curr += diff - A[i] * len(A)\\n            res = max(res, curr)\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87859,
                "title": "golang-concise-o-n-solution",
                "content": "I think an example in a description intentionally makes thing unclear.\\nThis is easier to understand what is happening on each index.\\n\\n```\\nA = [4, 3, 2, 6]\\n\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (1 * 4) + (2 * 3) + (3 * 2) + (0 * 6) = 4 + 6 + 6 + 0 = 16\\nF(2) = (2 * 4) + (3 * 3) + (0 * 2) + (1 * 6) = 8 + 9 + 0 + 6 = 23\\nF(3) = (3 * 4) + (0 * 3) + (1 * 2) + (2 * 6) = 12 + 0 + 2 + 12 = 26\\n\\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\\n```\\n\\nWhen the array shifting from `[4,3,2,6]` to `[6,4,3,2]` for instance, the previous result is  \\n`0 * 4 + 3 * 1 + 2 * 2 + 6 * 3 = 25`.\\nTo calculate the sum of `[6,4,2,3]`, first `6` is moved to `0` th index so we need to subtract `6 * 3`.\\n\\nFor other element, each of them move to right by one index, this means we need to add ` 4 + 3 + 2`.\\nThat is to say, `25 - 18 + 4 + 2 + 3 = 16`.\\n\\nBy appling this method repeatedly, we don't need to iterate twice and can use math to calculate the next rotation, thus `O(n)`.\\n\\n```\\nfunc maxRotateFunction(A []int) int {\\n\\tif len(A) == 0 {\\n\\t\\treturn 0\\n\\t}\\n\\n\\tmax := 0\\n\\tdigitSum := 0\\n\\tfor i, num := range A {\\n\\t\\tmax += i * num\\n\\t\\tdigitSum += num\\n\\t}\\n\\n\\tcurMax := max\\n\\tif len(A) > 1 {\\n\\t\\tfor i := len(A) - 1; i >= 1; i-- {\\n\\t\\t\\tnewMax := curMax - (len(A)-1)*A[i] + (digitSum - A[i])\\n\\t\\t\\tif newMax > max {\\n\\t\\t\\t\\tmax = newMax\\n\\t\\t\\t}\\n\\t\\t\\tcurMax = newMax\\n\\t\\t}\\n\\t}\\n\\treturn max\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nA = [4, 3, 2, 6]\\n\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (1 * 4) + (2 * 3) + (3 * 2) + (0 * 6) = 4 + 6 + 6 + 0 = 16\\nF(2) = (2 * 4) + (3 * 3) + (0 * 2) + (1 * 6) = 8 + 9 + 0 + 6 = 23\\nF(3) = (3 * 4) + (0 * 3) + (1 * 2) + (2 * 6) = 12 + 0 + 2 + 12 = 26\\n\\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\\n```\n```\\nfunc maxRotateFunction(A []int) int {\\n\\tif len(A) == 0 {\\n\\t\\treturn 0\\n\\t}\\n\\n\\tmax := 0\\n\\tdigitSum := 0\\n\\tfor i, num := range A {\\n\\t\\tmax += i * num\\n\\t\\tdigitSum += num\\n\\t}\\n\\n\\tcurMax := max\\n\\tif len(A) > 1 {\\n\\t\\tfor i := len(A) - 1; i >= 1; i-- {\\n\\t\\t\\tnewMax := curMax - (len(A)-1)*A[i] + (digitSum - A[i])\\n\\t\\t\\tif newMax > max {\\n\\t\\t\\t\\tmax = newMax\\n\\t\\t\\t}\\n\\t\\t\\tcurMax = newMax\\n\\t\\t}\\n\\t}\\n\\treturn max\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 87871,
                "title": "python-o-n-math-with-explaination",
                "content": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        sumA=sum(A)\\n        temp=0\\n        for i,c in enumerate(A):\\n            temp+=i*c\\n        maxx=temp\\n        for j in xrange(len(A)):\\n            temp+=(len(A)*A[j]-sumA)\\n            maxx=max(temp,maxx)\\n        return maxx\\n```\\nFirst you get the temp by multiplyng each index and value. Then for each time you rotate index by clockwise, it's interesting to see the sum increases by len(A)*A[j]-sum. And you just need to find the max one.\\nFor instance, you have INDEX of [0,1,2,3,4,5], next it changes to [5,0,1,2,3,4], the temp increases by 5*first index's value i by 5*A[j] - the rest numbers' sum, which means the temp increses by 6(the length of A) * A[j] - the total number's sum. Because other numbers' index just \"decreased\" by one, expect the one whose \"last\" index was 0.",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        sumA=sum(A)\\n        temp=0\\n        for i,c in enumerate(A):\\n            temp+=i*c\\n        maxx=temp\\n        for j in xrange(len(A)):\\n            temp+=(len(A)*A[j]-sumA)\\n            maxx=max(temp,maxx)\\n        return maxx\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87890,
                "title": "4-lines-in-python",
                "content": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, nums):\\n        now, sums, res, n = sum(i * nums[i] for i in range(len(nums))), sum(nums), float('-inf'), len(nums)\\n        for i in range(n):\\n            res, now = max(now, res), now + sums - n * nums[n - i - 1]\\n        return res if res != float('-inf') else 0\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, nums):\\n        now, sums, res, n = sum(i * nums[i] for i in range(len(nums))), sum(nums), float('-inf'), len(nums)\\n        for i in range(n):\\n            res, now = max(now, res), now + sums - n * nums[n - i - 1]\\n        return res if res != float('-inf') else 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87892,
                "title": "share-my-c-solution-with-explanation-easy-to-understand",
                "content": "`F(0) = 0*A[0] + 1*A[1] + ...... + (n-1)*A[n-1]`\\n`F(1) = 0 *A[n-1] + 1*A[0] + 2*A[1] + 3*A[2] + ...... + (n-1)*A[n-2]`\\n`.`\\n`.`\\n`F(n-1) = 0*A[1] + 1*A[2] + 2*A[3] + ...... + (n-1)*A[0]`\\n`F(1) - F(0) = A[0] + A[1] + A[2] + ...... + A[n-2] - (n-1)*A[n-1]`\\n`==>F(1)  = (A[0] + A[1] + A[2] + ...... + A[n-1]) - n*A[n-1] + F(0)`\\n`set sum = A[0] + A[1] + A[2] + ...... + A[n-1]`\\n`F(2) = sum - n*A[n-2] + F(1)`\\n`.`\\n`.`\\n`F(i) = sum - n*A[n-i] + F(i-1)`\\n\\n---\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        int n = A.size();\\n        int ret = 0;\\n        int sum = 0;\\n        int f = 0;\\n        \\n        for (int i = 0; i < n; i++)\\n        {\\n            sum += A[i];\\n            f += i * A[i];\\n        }\\n        \\n        ret = f;\\n        for (int i = 1; i < n; i++)\\n        {\\n            f = f + sum - n * A[n - i];\\n            ret = max(ret, f);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        int n = A.size();\\n        int ret = 0;\\n        int sum = 0;\\n        int f = 0;\\n        \\n        for (int i = 0; i < n; i++)\\n        {\\n            sum += A[i];\\n            f += i * A[i];\\n        }\\n        \\n        ret = f;\\n        for (int i = 1; i < n; i++)\\n        {\\n            f = f + sum - n * A[n - i];\\n            ret = max(ret, f);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87901,
                "title": "short-python-solution",
                "content": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        s = 0; n = len(A)\\n        for i in range(n):\\n            s += i*A[i]\\n        sumA = sum(A); m = s\\n        for num in A:\\n            s += n*num - sumA\\n            m = max(m, s)\\n        return m\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        s = 0; n = len(A)\\n        for i in range(n):\\n            s += i*A[i]\\n        sumA = sum(A); m = s\\n        for num in A:\\n            s += n*num - sumA\\n            m = max(m, s)\\n        return m\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87902,
                "title": "clean-o-n-c-solution",
                "content": "\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        if (A.empty())\\n            return 0;\\n        \\n        int s = 0, candidate = 0, n = A.size();\\n        for (int i = 0; i < n; ++i) {\\n            s += A[i];\\n            candidate += i * A[i];\\n        }\\n        \\n        int ans = candidate;\\n        for (int i = n - 1; i > 0; --i) {\\n            candidate += s - n * A[i];\\n            ans = max(ans, candidate);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        if (A.empty())\\n            return 0;\\n        \\n        int s = 0, candidate = 0, n = A.size();\\n        for (int i = 0; i < n; ++i) {\\n            s += A[i];\\n            candidate += i * A[i];\\n        }\\n        \\n        int ans = candidate;\\n        for (int i = n - 1; i > 0; --i) {\\n            candidate += s - n * A[i];\\n            ans = max(ans, candidate);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3880339,
                "title": "python-solution-beats-96",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        # res=[]\\n        # for _ in range(len(nums)):\\n        #     lst=[]\\n        #     for i in range(len(nums)):\\n        #         lst.append(i*nums[i])\\n        #     res.append(sum(lst))\\n        #     nums.insert(0,nums.pop())\\n        # return max(res)\\n        n=len(nums)\\n        s=sum(nums)\\n        temp=sum(i*nums[i] for i in range(n))\\n        maxi=temp\\n        for i in range(1,n):\\n            temp+=s-n*nums[n-i]\\n            maxi=max(maxi,temp)\\n        return maxi\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        # res=[]\\n        # for _ in range(len(nums)):\\n        #     lst=[]\\n        #     for i in range(len(nums)):\\n        #         lst.append(i*nums[i])\\n        #     res.append(sum(lst))\\n        #     nums.insert(0,nums.pop())\\n        # return max(res)\\n        n=len(nums)\\n        s=sum(nums)\\n        temp=sum(i*nums[i] for i in range(n))\\n        maxi=temp\\n        for i in range(1,n):\\n            temp+=s-n*nums[n-i]\\n            maxi=max(maxi,temp)\\n        return maxi\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3695864,
                "title": "simple-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        /**\\n        \\n        2 5 7 6 8 3\\n\\n        0: 2 5 7 6 8 3\\n        1: 3 2 5 7 6 8\\n        2: 8 3 2 5 7 6\\n        3: 6 8 3 2 5 7\\n        ...\\n\\n        \\n        f(1) = f(0) - (len-1) * a[len-1] + a[0]+a[1]+...+a[len-1] except a[len-1]\\n        f(2) = f(1) - (len-1) * a[len-2] + a[0]+a[1]+...a[len-1] except a[len-2]\\n        \\n        f(n) = f(n-1) - (len-1) * a[len-n] + a[0]+a[1]+a[len-1] except a[len-n]\\n\\n         */\\n\\n        int[] sumArr = new int[nums.length];\\n\\n        int arrSum = Arrays.stream(nums).sum();\\n\\n        for(int i=0; i<nums.length; i++){\\n            sumArr[i] = arrSum-nums[i];\\n        }\\n         \\n\\n        int[] f = new int[nums.length];\\n\\n        int first = 0;\\n        for(int i=0; i<nums.length; i++){\\n            first+= i * nums[i];\\n        }\\n        \\n        f[0] = first;\\n\\n        int len = f.length; \\n\\n        int res = first;\\n\\n        for(int i=1; i<f.length; i++){\\n            f[i] = f[i-1] - (len-1)*nums[len-i]+ sumArr[len-i];\\n            res = Math.max(f[i], res);\\n        }\\n\\n\\n\\n    return res;\\n\\n\\n    }\\n\\n\\n\\n\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        /**\\n        \\n        2 5 7 6 8 3\\n\\n        0: 2 5 7 6 8 3\\n        1: 3 2 5 7 6 8\\n        2: 8 3 2 5 7 6\\n        3: 6 8 3 2 5 7\\n        ...\\n\\n        \\n        f(1) = f(0) - (len-1) * a[len-1] + a[0]+a[1]+...+a[len-1] except a[len-1]\\n        f(2) = f(1) - (len-1) * a[len-2] + a[0]+a[1]+...a[len-1] except a[len-2]\\n        \\n        f(n) = f(n-1) - (len-1) * a[len-n] + a[0]+a[1]+a[len-1] except a[len-n]\\n\\n         */\\n\\n        int[] sumArr = new int[nums.length];\\n\\n        int arrSum = Arrays.stream(nums).sum();\\n\\n        for(int i=0; i<nums.length; i++){\\n            sumArr[i] = arrSum-nums[i];\\n        }\\n         \\n\\n        int[] f = new int[nums.length];\\n\\n        int first = 0;\\n        for(int i=0; i<nums.length; i++){\\n            first+= i * nums[i];\\n        }\\n        \\n        f[0] = first;\\n\\n        int len = f.length; \\n\\n        int res = first;\\n\\n        for(int i=1; i<f.length; i++){\\n            f[i] = f[i-1] - (len-1)*nums[len-i]+ sumArr[len-i];\\n            res = Math.max(f[i], res);\\n        }\\n\\n\\n\\n    return res;\\n\\n\\n    }\\n\\n\\n\\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3552345,
                "title": "c-solution-with-o-n-tc-and-o-1-sc-with-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe need to find the relation between two adjacent rotations **`F[i] and F[i+1]. `**\\n\\n```\\nF[i] = (0* a1) + (1* a2) + (2* a3) + ... + ((n-1)* an)\\nF[i+1] = (0* an) + (1* a1) + (2* a2) + (3* a3) + ....\\n\\nsum = a1 + a2 + a3 + a4 + .... + an\\n\\nif we add sum to F[i] it becomes\\n\\nF[i] + sum = (1* a1) + (2* a2) + (3* a3) + ... +(n* an)\\n```\\n\\n======>\\n\\n```\\nF[i] + sum - n* an = F[i+1]\\n```\\n\\ntherefore that is our relation between our **`F[i] and F[i+1]`**\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\nNow the equation is : **`F[i+1] = F[i] + sum - n*x`**\\nHere x is first element of current rotation. And n is length of nums\\n\\nNow, What will be our first F[i] and how to Implement the code.\\n\\nAs we can see we only need the first element of the current rotation. And the rotations are clock wise. We can start from last element and traverse back to first element as our starting rotation element.\\n\\n====>\\n\\nan, a1, a2, a3, a4 , ...., an-1 ==> first rotation\\nan-1, an, a1, a2, a3,....., an-2 ==> second rotation\\n.\\n.\\n.\\na1, a2, a3, a4, a5, ....., an ==> last rotation\\n\\nObserve the starting elements:\\n\\n```\\nan, an-1, an-2,..... , a1\\n```\\n\\n# Complexity\\n- Time complexity: **O(N)**\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: **O(1)**\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n\\n        //Actual Code Starts here\\n        int sum = 0, n = nums.size();\\n        int prev=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            if(i<n-1)prev+=(i+1)*nums[i];\\n        }\\n        int ans = prev;\\n        for(int i = n-2; i>=0; i--){\\n            int cur = prev + sum - n*nums[i];\\n            prev = cur;\\n            ans = max(ans,prev);\\n        }\\n        return ans;\\n\\n        //Space complexity O(1) and Time Compelexity O(N)\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nF[i] = (0* a1) + (1* a2) + (2* a3) + ... + ((n-1)* an)\\nF[i+1] = (0* an) + (1* a1) + (2* a2) + (3* a3) + ....\\n\\nsum = a1 + a2 + a3 + a4 + .... + an\\n\\nif we add sum to F[i] it becomes\\n\\nF[i] + sum = (1* a1) + (2* a2) + (3* a3) + ... +(n* an)\\n```\n```\\nF[i] + sum - n* an = F[i+1]\\n```\n```\\nan, an-1, an-2,..... , a1\\n```\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n\\n        //Actual Code Starts here\\n        int sum = 0, n = nums.size();\\n        int prev=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            if(i<n-1)prev+=(i+1)*nums[i];\\n        }\\n        int ans = prev;\\n        for(int i = n-2; i>=0; i--){\\n            int cur = prev + sum - n*nums[i];\\n            prev = cur;\\n            ans = max(ans,prev);\\n        }\\n        return ans;\\n\\n        //Space complexity O(1) and Time Compelexity O(N)\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3399834,
                "title": "derive-formula-o-n-dp-python",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n        * If we rotate by 1 elements, then it increases F[i-1] by sum of all values in the array. For example\\n        * F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6)\\n        * when we rotate by 1, what changes?\\n        * at F[0], 4 was multiplied by 0 but now by 1\\n        * at F[0], 3 was multiplied by 1 but now 2 and so on \\n        * so total increment is 4+3+2+6\\n        * other factor is, every rotation, we are loosing the last multiplication from previous result\\n        * i.e, at F[0], last one was 3*6, but F[1], it becomes 0*6\\n        * That means, F[1] = F[0] + total_sum - n * nums[n-i]\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        n = len(nums)\\n        total = sum(nums)\\n        F = [0] * n\\n        for i, v in enumerate(nums):\\n            F[0] += v*i\\n        \\n        for i in range(1, n):\\n            F[i] = F[i-1] + total - n*nums[n-i]\\n        return max(F)\\n\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        n = len(nums)\\n        total = sum(nums)\\n        F = [0] * n\\n        for i, v in enumerate(nums):\\n            F[0] += v*i\\n        \\n        for i in range(1, n):\\n            F[i] = F[i-1] + total - n*nums[n-i]\\n        return max(F)\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3321757,
                "title": "easy-solution-with-hand-written-explanation-and-proof",
                "content": "# Solution 1 O(n*n) \\nJust observations......\\nIt will give tle so do understand the second solution too ...\\n\\n![wp1.jpeg](https://assets.leetcode.com/users/images/e4fc9d74-9fed-4a4d-aab3-113554479405_1679351045.1328304.jpeg)\\n\\n\\n\\n\\n```\\nlong ans=INT_MIN;\\n       int n=nums.size();\\n       for(int i=0;i<n;i++)\\n       {\\n           long temp=0;\\n           for(int j=0;j<n;j++)\\n           {\\n               temp=temp + nums[j]*((i+j)%n);\\n           }\\n           ans=max(ans,temp);\\n       } \\n       return ans;\\n```\\n\\n# Solution 2 O(n)\\n![wp2.jpeg](https://assets.leetcode.com/users/images/3b34853f-a1a8-4758-ac4c-d33ca4bac525_1679351342.450996.jpeg)\\n![wp3.jpeg](https://assets.leetcode.com/users/images/e68417a8-104d-4b7b-a81e-bce99f3f9aed_1679351360.7582374.jpeg)\\n![wp4.jpeg](https://assets.leetcode.com/users/images/bd6381b1-99f9-4307-824f-8b792c265d75_1679351367.5756779.jpeg)\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n       int sum = 0,n=nums.size(), fn=0;\\n       for(int i=0;i<n;i++)\\n       {\\n          fn = fn + i*nums[i];\\n          sum+=nums[i];\\n       }\\n       int temp=fn;\\n       for(int i=1;i<n;i++)\\n       {\\n            fn = fn - sum + n*nums[i-1];\\n            temp = max(temp,fn);\\n       }\\n       return temp;\\n    }\\n};\\n\\n```\\n\\n\\n\\n\\n\\n",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "```\\nlong ans=INT_MIN;\\n       int n=nums.size();\\n       for(int i=0;i<n;i++)\\n       {\\n           long temp=0;\\n           for(int j=0;j<n;j++)\\n           {\\n               temp=temp + nums[j]*((i+j)%n);\\n           }\\n           ans=max(ans,temp);\\n       } \\n       return ans;\\n```\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n       int sum = 0,n=nums.size(), fn=0;\\n       for(int i=0;i<n;i++)\\n       {\\n          fn = fn + i*nums[i];\\n          sum+=nums[i];\\n       }\\n       int temp=fn;\\n       for(int i=1;i<n;i++)\\n       {\\n            fn = fn - sum + n*nums[i-1];\\n            temp = max(temp,fn);\\n       }\\n       return temp;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3135679,
                "title": "easy-c-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums)\\n    {\\n        int ans=INT_MIN;\\n        int n=nums.size();\\n        int sum=0;\\n        int sum2=0;\\n        for (int i=0;i<n;i++)\\n        {\\n            sum+=nums[i];\\n            sum2+=nums[i]*i;\\n        }\\n        for (int i=n-1;i>=0;i--)\\n        {\\n           sum2=sum2-(nums[i]*(n-1))+(sum-nums[i]);\\n           ans=max(ans,sum2);\\n        }\\n        return ans;\\n\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums)\\n    {\\n        int ans=INT_MIN;\\n        int n=nums.size();\\n        int sum=0;\\n        int sum2=0;\\n        for (int i=0;i<n;i++)\\n        {\\n            sum+=nums[i];\\n            sum2+=nums[i]*i;\\n        }\\n        for (int i=n-1;i>=0;i--)\\n        {\\n           sum2=sum2-(nums[i]*(n-1))+(sum-nums[i]);\\n           ans=max(ans,sum2);\\n        }\\n        return ans;\\n\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3064644,
                "title": "java-brute-force-optimized-solution-explained",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n//Brute force\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int n=nums.length;\\n        if(n==1)return 0;\\n        int[]ans=new int[n*2-1];\\n        for(int i=0;i<ans.length;i++){\\n            ans[i]=nums[i%n];\\n        }\\n        int h=Integer.MIN_VALUE;\\n        for(int i=0;i<=ans.length-n;i++){\\n            int res=calculate(ans,i,n);\\n            h=Math.max(h,res);\\n        }\\n        return h;\\n    }\\n    public int calculate(int[]ans,int st,int n){\\n        int k=st;\\n        int res=0;\\n        int l=0;\\n        while(l<n&&k<ans.length){\\n        res+=ans[k]*l;\\n        k++;\\n        l++;\\n        }\\n        return res;\\n    }\\n}\\n\\n//Optimized Solution\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int n=nums.length;\\n        int sum=0;\\n        int max=Integer.MIN_VALUE;\\n        int sum1=0;\\n        for(int i=0;i<nums.length;i++){\\n            sum+=nums[i]*i;\\n            sum1+=nums[i];\\n        }\\n        for(int i=n-1;i>=0;i--){\\n            sum+=sum1-(n*nums[i]);\\n            max=Math.max(sum,max);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n//Brute force\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int n=nums.length;\\n        if(n==1)return 0;\\n        int[]ans=new int[n*2-1];\\n        for(int i=0;i<ans.length;i++){\\n            ans[i]=nums[i%n];\\n        }\\n        int h=Integer.MIN_VALUE;\\n        for(int i=0;i<=ans.length-n;i++){\\n            int res=calculate(ans,i,n);\\n            h=Math.max(h,res);\\n        }\\n        return h;\\n    }\\n    public int calculate(int[]ans,int st,int n){\\n        int k=st;\\n        int res=0;\\n        int l=0;\\n        while(l<n&&k<ans.length){\\n        res+=ans[k]*l;\\n        k++;\\n        l++;\\n        }\\n        return res;\\n    }\\n}\\n\\n//Optimized Solution\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int n=nums.length;\\n        int sum=0;\\n        int max=Integer.MIN_VALUE;\\n        int sum1=0;\\n        for(int i=0;i<nums.length;i++){\\n            sum+=nums[i]*i;\\n            sum1+=nums[i];\\n        }\\n        for(int i=n-1;i>=0;i--){\\n            sum+=sum1-(n*nums[i]);\\n            max=Math.max(sum,max);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3043363,
                "title": "efficient-o-n-solution-o-1-space",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        //idea is to find out the F(0) & for each next rotation F(k)=F(0)+sum-(vale uf fisrt elemnt in kth roation)*n\\n        int sum=0,func=0,res=INT_MIN;\\n        for(int i=0;i<nums.size();i++){\\n            sum+=nums[i];\\n            func+=(nums[i]*i);\\n\\n        }\\n        res=max(res,func);\\n        for(int i=nums.size()-1;i>0;i--){\\n            func+=(sum-nums[i]*nums.size());\\n            res=max(res,func);\\n        }\\n        return res;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        //idea is to find out the F(0) & for each next rotation F(k)=F(0)+sum-(vale uf fisrt elemnt in kth roation)*n\\n        int sum=0,func=0,res=INT_MIN;\\n        for(int i=0;i<nums.size();i++){\\n            sum+=nums[i];\\n            func+=(nums[i]*i);\\n\\n        }\\n        res=max(res,func);\\n        for(int i=nums.size()-1;i>0;i--){\\n            func+=(sum-nums[i]*nums.size());\\n            res=max(res,func);\\n        }\\n        return res;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2983351,
                "title": "c-0-1-space-complexity-0-n-time-complexity",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n$$prev$$ is used to the store answer of previos rotation (initially k=0)\\nstore prefix sum in $$psum=0$$\\nNow\\n- for every rotation the last index element comes at index$$ 0 (0*nums[0]=0)$$\\n->means we have to substract this from $$prev$$ \\n     i.e$$ prev-(n-1)*nums[i]$$\\n- for every rotation every elements shifts to right means we have to add the prefixsum except the element which comes to index 0\\n    i.e $$prev+(n-1)*nums[i]+psum-nums[i]$$\\n\\n\\n\\n# Complexity\\n- Time complexity:\\n0(N)\\n\\n- Space complexity:\\n0(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int prev=0,psum=0;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++){\\n            prev+=(i*nums[i]);\\n            psum+=nums[i];\\n        }\\n        int res=prev;\\n        for(int i=n-1;i>0;i--){\\n            prev=prev-(n-1)*nums[i]+psum-nums[i];\\n            res=max(res,prev);\\n        }\\n        return res;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int prev=0,psum=0;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++){\\n            prev+=(i*nums[i]);\\n            psum+=nums[i];\\n        }\\n        int res=prev;\\n        for(int i=n-1;i>0;i--){\\n            prev=prev-(n-1)*nums[i]+psum-nums[i];\\n            res=max(res,prev);\\n        }\\n        return res;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2976114,
                "title": "c-easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n     The basic Idea Behind this problem would be we have to take the sum.\\n     suppose  --->nums[4,3,2,6]\\n              -->sum = 15 ,  n=4\\n              so now we calculate the dp[0] by brute force.\\n              but when we proceed for the dp[1] we use dp[1] = dp[0]+(sum-(n*(lastelement)))\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n\\n\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        long long n = nums.size();\\n        long long  sum  = 0;\\n        for(int i = 0;i<n;i++){\\n            sum+=nums[i];\\n        }\\n        vector<long long>dp(n,0);\\n        for(int i =0;i<n;i++){\\n             dp[0]+=i*nums[i];\\n        }\\n        int j = n-1;\\n        for(int i =1;i<n;i++){\\n            dp[i]=dp[i-1]+(sum-(n*nums[j]));\\n            j--;\\n        }\\n        return *max_element(dp.begin(),dp.end());\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\n\\n\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        long long n = nums.size();\\n        long long  sum  = 0;\\n        for(int i = 0;i<n;i++){\\n            sum+=nums[i];\\n        }\\n        vector<long long>dp(n,0);\\n        for(int i =0;i<n;i++){\\n             dp[0]+=i*nums[i];\\n        }\\n        int j = n-1;\\n        for(int i =1;i<n;i++){\\n            dp[i]=dp[i-1]+(sum-(n*nums[j]));\\n            j--;\\n        }\\n        return *max_element(dp.begin(),dp.end());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2713654,
                "title": "c-o-n-basic-math-explained-in-comments",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        if(n == 1)\\n            return 0;\\n        \\n        int sum = accumulate(nums.begin(), nums.end(), 0);\\n        int val = 0;\\n        for(int i=0; i < n; i++)\\n            val += (i * nums[i]);\\n            \\n        int ans=val;\\n\\t\\t/* For example nums = [4,3,2,6]\\n\\t\\tn=4\\n\\t\\tInitial value : val = 0 * 4 + 1 * 3 + 2 * 2 + 3 * 6 = 25 \\n\\t\\tNext iteration : val = 0 * 6 + 1 * 4 + 2 *  3 + 3 * 2 = 16\\n\\t\\t16 = (0 + 1) * 4 + (1 + 1) * 3 + (2 + 1) * 2 + (3 + 1) mod n  * 6 \\n\\t\\t16 = 0 * 4 + 1 * 3 + 2 * 2 + 3 * 6 - 3 * 6 + 4 + 3 + 2\\n\\t\\t16 = (0 * 4 + 1 * 3 + 2 * 2 + 3 * 6) + 4 + 3 + 2 - 3 * 6\\n\\t\\t16 = (0 * 4 + 1 * 3 + 2 * 2 + 3 * 6) + 4 + 3 + 2 + 6 - 6 - 3 * 6\\n\\t\\t16 = (0 * 4 + 1 * 3 + 2 * 2 + 3 * 6) + 4 + 3 + 2 + 6  - 4 *  6\\n\\t\\t16 = previous value + sum - n * nums[n - i]\\n\\t\\t...\\n\\t\\tetc\\n\\t\\t*/\\n\\t\\t\\n        for(int i=1; i < n; i++) {\\n            val = (val + sum - nums[n - i] * n);\\n            ans = max(ans, val);\\n        }\\n        \\n        return ans;\\n        \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        if(n == 1)\\n            return 0;\\n        \\n        int sum = accumulate(nums.begin(), nums.end(), 0);\\n        int val = 0;\\n        for(int i=0; i < n; i++)\\n            val += (i * nums[i]);\\n            \\n        int ans=val;\\n\\t\\t/* For example nums = [4,3,2,6]\\n\\t\\tn=4\\n\\t\\tInitial value : val = 0 * 4 + 1 * 3 + 2 * 2 + 3 * 6 = 25 \\n\\t\\tNext iteration : val = 0 * 6 + 1 * 4 + 2 *  3 + 3 * 2 = 16\\n\\t\\t16 = (0 + 1) * 4 + (1 + 1) * 3 + (2 + 1) * 2 + (3 + 1) mod n  * 6 \\n\\t\\t16 = 0 * 4 + 1 * 3 + 2 * 2 + 3 * 6 - 3 * 6 + 4 + 3 + 2\\n\\t\\t16 = (0 * 4 + 1 * 3 + 2 * 2 + 3 * 6) + 4 + 3 + 2 - 3 * 6\\n\\t\\t16 = (0 * 4 + 1 * 3 + 2 * 2 + 3 * 6) + 4 + 3 + 2 + 6 - 6 - 3 * 6\\n\\t\\t16 = (0 * 4 + 1 * 3 + 2 * 2 + 3 * 6) + 4 + 3 + 2 + 6  - 4 *  6\\n\\t\\t16 = previous value + sum - n * nums[n - i]\\n\\t\\t...\\n\\t\\tetc\\n\\t\\t*/\\n\\t\\t\\n        for(int i=1; i < n; i++) {\\n            val = (val + sum - nums[n - i] * n);\\n            ans = max(ans, val);\\n        }\\n        \\n        return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2445461,
                "title": "go-dp-without-magic",
                "content": "The main challenge in this task is to find recurrense relations between sums.\\nLet\\'s look at the example:\\n\\n```\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\\n```\\n\\nF(0) will be our initial sum. The task is to calculate F(1) based on F(0).\\nEach iteration does the following:\\n* remove a product of last number of the sequence and max multiplier which is n-1.\\n* add 1 of all reamaining elements to the sum\\n* also add sum of all elements that have been already removed in previous iterations.\\n           \\n\\t\\t           \\nF(1) = 25 - 6 * (4-1)  + (4+3+2) + 0 = 16\\nwhere:\\n**25** - value of F(0)\\n**6** - element to remove\\n**4-1** - (n - 1)\\n**4+3+2** - all previous elements (because their multipliers should be increased by 1)\\n**0** - sum of all elements that have been already reoved in previous iterations\\n\\nF(2) = 16 - 2* (4-1) + (4+3) + 6 = 23\\n\\nFormula is clear: **F() = F(prev) - nums[i] * (n -1 ) + prefixSum[i-1] + carry**\\n\\n```\\nfunc maxRotateFunction(nums []int) int {\\n    if len(nums) <= 1 {\\n        return 0\\n    }\\n    \\n    prevState := 0\\n    prefixSum := make([]int, len(nums))\\n    prefixSum[0]=nums[0]\\n    for i:=1;i<len(nums);i++{\\n        prefixSum[i] = prefixSum[i-1] + nums[i]\\n        prevState += nums[i] * i\\n    }\\n    \\n    maxV := prevState\\n    carry := 0\\n    n := len(nums)\\n    for i:=n-1;i>0;i--{\\n        newState := prevState - nums[i] * (n-1) + prefixSum[i-1] + carry\\n        carry += nums[i]\\n        maxV = max(maxV, newState)\\n        prevState = newState\\n    }\\n    \\n    return maxV\\n}\\n\\nfunc max(a,b int) int {\\n    if a > b {\\n        return a\\n    }\\n    \\n    return b\\n}\\n```",
                "solutionTags": [
                    "Go",
                    "Dynamic Programming"
                ],
                "code": "```\\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\\n```\n```\\nfunc maxRotateFunction(nums []int) int {\\n    if len(nums) <= 1 {\\n        return 0\\n    }\\n    \\n    prevState := 0\\n    prefixSum := make([]int, len(nums))\\n    prefixSum[0]=nums[0]\\n    for i:=1;i<len(nums);i++{\\n        prefixSum[i] = prefixSum[i-1] + nums[i]\\n        prevState += nums[i] * i\\n    }\\n    \\n    maxV := prevState\\n    carry := 0\\n    n := len(nums)\\n    for i:=n-1;i>0;i--{\\n        newState := prevState - nums[i] * (n-1) + prefixSum[i-1] + carry\\n        carry += nums[i]\\n        maxV = max(maxV, newState)\\n        prevState = newState\\n    }\\n    \\n    return maxV\\n}\\n\\nfunc max(a,b int) int {\\n    if a > b {\\n        return a\\n    }\\n    \\n    return b\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2406826,
                "title": "java-100-fast-solution-o-n",
                "content": "int f=0,sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            f+=(i*nums[i]);\\n            sum+=nums[i];\\n        }\\n        int ans=f;\\n        for(int i=nums.length-1;i>=0;i--){\\n            f+=sum-nums.length*nums[i];\\n            ans=Math.max(f,ans);\\n        }\\n        return ans;",
                "solutionTags": [],
                "code": "int f=0,sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            f+=(i*nums[i]);\\n            sum+=nums[i];\\n        }\\n        int ans=f;\\n        for(int i=nums.length-1;i>=0;i--){\\n            f+=sum-nums.length*nums[i];\\n            ans=Math.max(f,ans);\\n        }\\n        return ans;",
                "codeTag": "Unknown"
            },
            {
                "id": 2401871,
                "title": "o-n-o-1-commented",
                "content": "```\\nclass Solution \\n{\\npublic:\\n    \\n    int fn(vector<int> &nums, int &coeff, int &total, int &prevsum)\\n    {\\n        // Dry run this. Will get through.\\n        /*\\n            prev = 0a + 1b + 2c + 3d\\n            now = prev + total = 1a + 2b + 3c + 4d - (nums.size() * nums[nums.size() - (coeff i.e., 1)]). This is the entire idea.\\n        */\\n        int subtract = (nums.size()) * nums[nums.size() - coeff];\\n        int sum = total - subtract + prevsum;\\n        prevsum = sum;\\n        coeff++;\\n        coeff%=(nums.size());\\n        return sum;\\n    }\\n    \\n    int maxRotateFunction(vector<int>& nums) \\n    {\\n        int n = nums.size(), total = 0, prevsum = 0;\\n        int k = 0;\\n        for(auto &e: nums)\\n        {\\n            prevsum+=(k*e);\\n            k++;\\n            total+=e;\\n        }\\n        int ans = prevsum;\\n        int coeff = 1;          // storing the coefficient of a. Using only this, we can catch others.\\n        for(int i=1;i<n;i++)\\n        {\\n            ans = max(ans,fn(nums,coeff,total,prevsum));\\n        }\\n        return ans;\\n    }\\n};\\n\\n/*\\n    Approach of thinking: - \\n    \\n    4 3 2 6\\n    n = 4.\\n    \\n    F(0) =                                                  0 3 4 18 = 25 \\n    F(1) = 6 4 3 2                                          0 4 6 6 = 16\\n    F(2) = 2 6 4 3                                          0 6 8 9 = 23\\n    F(3) = 3 2 6 4                                          0 2 12 12 = 26\\n    \\n    max(above 4) -->  ? 26\\n    \\n    a b c d     d a b c     c d a b     b c d a\\n    0a1b2c3d    1a2b3c0d    2a3b0c1d    3a0b1c2d\\n    \\n    0a + 1b + 2c + 3d = prevsum\\n    1a + 2b + 3c + 0d = ?\\n    \\n    0a + 1b + 2c + 3d + a+b+c+d = 1a + 2b + 3c + 4d. Then subtract the last n*last.\\n    \\n*/\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    \\n    int fn(vector<int> &nums, int &coeff, int &total, int &prevsum)\\n    {\\n        // Dry run this. Will get through.\\n        /*\\n            prev = 0a + 1b + 2c + 3d\\n            now = prev + total = 1a + 2b + 3c + 4d - (nums.size() * nums[nums.size() - (coeff i.e., 1)]). This is the entire idea.\\n        */\\n        int subtract = (nums.size()) * nums[nums.size() - coeff];\\n        int sum = total - subtract + prevsum;\\n        prevsum = sum;\\n        coeff++;\\n        coeff%=(nums.size());\\n        return sum;\\n    }\\n    \\n    int maxRotateFunction(vector<int>& nums) \\n    {\\n        int n = nums.size(), total = 0, prevsum = 0;\\n        int k = 0;\\n        for(auto &e: nums)\\n        {\\n            prevsum+=(k*e);\\n            k++;\\n            total+=e;\\n        }\\n        int ans = prevsum;\\n        int coeff = 1;          // storing the coefficient of a. Using only this, we can catch others.\\n        for(int i=1;i<n;i++)\\n        {\\n            ans = max(ans,fn(nums,coeff,total,prevsum));\\n        }\\n        return ans;\\n    }\\n};\\n\\n/*\\n    Approach of thinking: - \\n    \\n    4 3 2 6\\n    n = 4.\\n    \\n    F(0) =                                                  0 3 4 18 = 25 \\n    F(1) = 6 4 3 2                                          0 4 6 6 = 16\\n    F(2) = 2 6 4 3                                          0 6 8 9 = 23\\n    F(3) = 3 2 6 4                                          0 2 12 12 = 26\\n    \\n    max(above 4) -->  ? 26\\n    \\n    a b c d     d a b c     c d a b     b c d a\\n    0a1b2c3d    1a2b3c0d    2a3b0c1d    3a0b1c2d\\n    \\n    0a + 1b + 2c + 3d = prevsum\\n    1a + 2b + 3c + 0d = ?\\n    \\n    0a + 1b + 2c + 3d + a+b+c+d = 1a + 2b + 3c + 4d. Then subtract the last n*last.\\n    \\n*/\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2365532,
                "title": "c-simple-maths",
                "content": "```\\n\\n/*Let\\'s say k=0(no rotation) ->  precomputed its answer and it comes out to be 25. Also precomputed the sum of the array-------------->>>>>>>>>>>>>>>>>>>>>>> 04 + 13 + 22 + 36 = 25\\n\\n\\n\\n\\n--------->>>-At k=1(rotated by 1 unit clockwise)\\n\\n----->>>Now our array becomes(just imagine) a=[6,4,3,2]. \\n--->>Now if we closely look, we can see the last element i.e. would now contribute 0 to our answer unlike earlier it contributed (n-1) times\\n--->>So for this rotation we have to subtract that and we have to add contribution of all the other elements as we can see, now all the other elements contribute 1 time extra prior to the prev ans. i.e. 06 + 14 + 23 + 32 = 16\\n\\n--->>>Now we can make a formula out of it F(1) = F(0) - ((n-1)*(a[index])) + (sum - a[index]) where index=n-1\\n\\n--->>now decrement index by 1\\n--->>It is very crucial because we are not actually rotating our array and so when we now rotate the original array by 2 or prev array by 1 clockwise we will get [2,6,4,3]\\nand now 2 needs to be subtracted (n-1) times from prev answer\\n\\n\\n*/\\nclass Solution {\\npublic:\\n    long long int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0;\\n        int ans=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            ans += i*nums[i];\\n        }\\n        int index=n-1;\\n        int res=ans;\\n        for(int k=1;k<n;k++){\\n            ans = ans - ((n-1)*nums[index]) + (sum-nums[index]);\\n            res=max(res,ans);\\n            index--;\\n        }\\n        return res;\\n    }\\n};\\n\\n\\n\\n\\'\\'\\'",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    long long int maxRotateFunction(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0;\\n        int ans=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            ans += i*nums[i];\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2222283,
                "title": "c-bruteforce-optimised-dp-o-n-easy-explanation",
                "content": "1) **Bruteforce TC** - **O(n^2)**\\n   \\n ```\\n/*\\n    int solve(..)\\n    {\\n        for( int rot = 0 to < n)\\n        {\\n           arr= rotatearrayby_rot();\\n        \\n           int val = caluclateValue(arr);\\n           \\n           ans = max(ans,val);\\n        }\\n        return ans;\\n     }  \\n       calculateValue(arr)   - O(n)\\n       {\\n           for(i =0;i<n;i++)\\n           val += arr[i]*i;\\n       }\\n    */\\n```\\n    \\n \\n\\n**2) Optimised  - O(n)**\\n    \\n**The idea is based on complete mathematics. The recurrence relation can be formed as**\\n\\nF(k) = 0 * Bk[0] + 1 * Bk[1] + ... + (n-1) * Bk[n-1]\\n\\nF(k+1) = 0 * Bk+1[0] + 1 * Bk+1[1] + ... + (n-1) * Bk+1[n-1]\\n\\t\\t   = 0 * Bk[n - 1] + 1 * Bk[0] + ... + (n -1) * Bk[n-2]\\n\\n F(k+1) - F(k) = Bk[0] + Bk[1] + .. Bk[n -2] - (n-1) * Bk[n-1]\\n\\t\\t\\t\\t\\t = Bk[0] + Bk[1] + .. Bk[n -2] + Bk[n-1] - Bk[n-1] -(n-1) * Bk[n-1]  \\n\\t\\t\\t\\t\\t = Bk[0] + Bk[1] + .. Bk[n -2] + Bk[n-1] - n*Bk[n-1]\\n\\t\\t\\t\\t\\t = sum(0 to n - 1) - n * Bk[n - 1]\\n\\t\\t\\t\\t\\t \\n**Recurrence Relation so formed is**\\n **F[k+1] = F[k] + sum(0 to n - 1) - n * Bk[n - 1];**\\n\\n    \\n   ```\\n int maxRotateFunction(vector<int>& nums) {\\n        \\n        int n = nums.size();\\n        \\n        long long int sum =0;\\n        long long int f =0;\\n        \\n        for(int i=0;i<n;i++)\\n        {\\n            sum += nums[i];\\n             f += nums[i]*i;\\n        }\\n        \\n        long long int ans = f;\\n        for(int i=n-1;i>=1;i--)\\n        {\\n            f = f + sum - (n*nums[i]);\\n            ans = max(ans,f);\\n        }\\n        return ans;\\n    }\\n```\\n\\n**T.C** - **O(n)**\\n**S.C** - **O(1)**",
                "solutionTags": [
                    "Math",
                    "Dynamic Programming"
                ],
                "code": "```\\n/*\\n    int solve(..)\\n    {\\n        for( int rot = 0 to < n)\\n        {\\n           arr= rotatearrayby_rot();\\n        \\n           int val = caluclateValue(arr);\\n           \\n           ans = max(ans,val);\\n        }\\n        return ans;\\n     }  \\n       calculateValue(arr)   - O(n)\\n       {\\n           for(i =0;i<n;i++)\\n           val += arr[i]*i;\\n       }\\n    */\\n```\n```\\n int maxRotateFunction(vector<int>& nums) {\\n        \\n        int n = nums.size();\\n        \\n        long long int sum =0;\\n        long long int f =0;\\n        \\n        for(int i=0;i<n;i++)\\n        {\\n            sum += nums[i];\\n             f += nums[i]*i;\\n        }\\n        \\n        long long int ans = f;\\n        for(int i=n-1;i>=1;i--)\\n        {\\n            f = f + sum - (n*nums[i]);\\n            ans = max(ans,f);\\n        }\\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2111003,
                "title": "java-solution-with-explanation",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int max = -2147483648;\\n        int pre_sum = 0;\\n        int sum = 0;\\n        for(int i = 0;i<nums.length-1;i++)\\n        {\\n            pre_sum+=nums[i];\\n            sum+=(i*nums[i]);\\n        }\\n        sum+=nums[nums.length-1]*(nums.length-1);\\n        max = sum;\\n        int loc = 0;\\n        int end_loc = nums.length-1;\\n        for(int i = 0;i<nums.length;i++)\\n        {\\n            sum+=pre_sum;;\\n            sum-=(nums.length-1)*nums[end_loc];\\n            if(end_loc-1>=0)\\n                pre_sum-=(nums[end_loc-1]);\\n            if(loc<nums.length)\\n                pre_sum+=(nums[end_loc]);\\n            end_loc--;\\n            loc++;\\n            if(sum>max)\\n                max = sum;\\n            //System.out.println(\"for \"+i+\"th round we got sum = \"+sum);\\n            \\n        }\\n        return max;\\n    }\\n}\\n/*\\nExplanation:\\n     suppose we have:\\n     array[] = [1,2,3,4,5];\\n     pre_sum = 0;\\n     sum = 0;\\n     in sum we will store  Sum of all value with product of index i.e.\\n     sum =  0*1  +  1*2  +  2*3  + 3*4 +  4*5;\\n     sum =  1*2  +  2*3  + 3*4 +  4*5; // beacause, 0*1 = 0;\\n     in pre_sum we will store sum of all numbers except last index;\\n     pre_sum = 1 + 2 + 3 + 4;  // 10\\n     end_loc = length-1;   //last_index;\\n     now all element will shift 1 index right side \\n     now array should be: [5,1,2,3,4]; //only suppose(we are not changing the array);\\n     You see all index has been increased by 1;\\n     excep last one (that\\'s why we do not include the last element in pre sum);\\n     now we know:\\n     if we Know the value of 2*3,\\n     then we can get the value of 2*4 by adding 2 in 2*3;\\n     \\n     so if index of all element increased by 1;\\n     we can get it by adding the pre sum; \\n     now sum should be,\\n     0*5  + 1*1  +   2*2   +   3*3   + 4*4;\\n     => 1*1  +   2*2   +   3*2   + 4*4;  // 0*5 = 0;\\n     we already Know the value of => 0*1 +  1*2  +  2*3  + 3*4 +  4*5; //\\n     so, we need to add (1 + 2 + 3 + 4) to sum to get the required value;(for now ignore 4*5)\\n     that\\'s why we have pre sum;\\n     but here sum had 4*5 more value;(Since 5 goes to index 0);\\n     so we reduce it; //see line 18;\\n     \\n     now we need to modify the pre_sum for next round,\\n     we will reduce array[end_loc-1] from it:\\n     and then add array[end_loc] to it:\\n     because array[end_loc](i.e 5) is at index 0;(which is not inlcluded in pre_sum);\\n     (please note that we are not changing the original array only changing the varriable to reduce complexity);\\n     and now array[end_loc-1] (i.e 4) must be exlude from pre sum since;\\n     \\n     we will repeat above step for all indexes and get the maximum;\\n*/\\n```",
                "solutionTags": [
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int max = -2147483648;\\n        int pre_sum = 0;\\n        int sum = 0;\\n        for(int i = 0;i<nums.length-1;i++)\\n        {\\n            pre_sum+=nums[i];\\n            sum+=(i*nums[i]);\\n        }\\n        sum+=nums[nums.length-1]*(nums.length-1);\\n        max = sum;\\n        int loc = 0;\\n        int end_loc = nums.length-1;\\n        for(int i = 0;i<nums.length;i++)\\n        {\\n            sum+=pre_sum;;\\n            sum-=(nums.length-1)*nums[end_loc];\\n            if(end_loc-1>=0)\\n                pre_sum-=(nums[end_loc-1]);\\n            if(loc<nums.length)\\n                pre_sum+=(nums[end_loc]);\\n            end_loc--;\\n            loc++;\\n            if(sum>max)\\n                max = sum;\\n            //System.out.println(\"for \"+i+\"th round we got sum = \"+sum);\\n            \\n        }\\n        return max;\\n    }\\n}\\n/*\\nExplanation:\\n     suppose we have:\\n     array[] = [1,2,3,4,5];\\n     pre_sum = 0;\\n     sum = 0;\\n     in sum we will store  Sum of all value with product of index i.e.\\n     sum =  0*1  +  1*2  +  2*3  + 3*4 +  4*5;\\n     sum =  1*2  +  2*3  + 3*4 +  4*5; // beacause, 0*1 = 0;\\n     in pre_sum we will store sum of all numbers except last index;\\n     pre_sum = 1 + 2 + 3 + 4;  // 10\\n     end_loc = length-1;   //last_index;\\n     now all element will shift 1 index right side \\n     now array should be: [5,1,2,3,4]; //only suppose(we are not changing the array);\\n     You see all index has been increased by 1;\\n     excep last one (that\\'s why we do not include the last element in pre sum);\\n     now we know:\\n     if we Know the value of 2*3,\\n     then we can get the value of 2*4 by adding 2 in 2*3;\\n     \\n     so if index of all element increased by 1;\\n     we can get it by adding the pre sum; \\n     now sum should be,\\n     0*5  + 1*1  +   2*2   +   3*3   + 4*4;\\n     => 1*1  +   2*2   +   3*2   + 4*4;  // 0*5 = 0;\\n     we already Know the value of => 0*1 +  1*2  +  2*3  + 3*4 +  4*5; //\\n     so, we need to add (1 + 2 + 3 + 4) to sum to get the required value;(for now ignore 4*5)\\n     that\\'s why we have pre sum;\\n     but here sum had 4*5 more value;(Since 5 goes to index 0);\\n     so we reduce it; //see line 18;\\n     \\n     now we need to modify the pre_sum for next round,\\n     we will reduce array[end_loc-1] from it:\\n     and then add array[end_loc] to it:\\n     because array[end_loc](i.e 5) is at index 0;(which is not inlcluded in pre_sum);\\n     (please note that we are not changing the original array only changing the varriable to reduce complexity);\\n     and now array[end_loc-1] (i.e 4) must be exlude from pre sum since;\\n     \\n     we will repeat above step for all indexes and get the maximum;\\n*/\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2089756,
                "title": "easy-to-understand-0-n-cpp",
                "content": "class Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n       \\n        int n = nums.size();\\n        int ans =INT_MIN,sum=0;\\n        int prod =0;\\n        for(int i=0;i<n;i++)\\n        {\\n            sum = sum+nums[i];\\n            prod = prod + i*nums[i];\\n        }\\n        ans = max(ans,prod);\\n        int idx = n-1;\\n        for(int i=1;i<n;i++)\\n        {\\n            prod = (prod-(nums[idx]*(n-1))+(sum-nums[idx]));\\n            idx--;\\n            ans = max(ans,prod);\\n        }\\n        return ans;\\n    }\\n};",
                "solutionTags": [
                    "Math"
                ],
                "code": "class Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n       \\n        int n = nums.size();\\n        int ans =INT_MIN,sum=0;\\n        int prod =0;\\n        for(int i=0;i<n;i++)\\n        {\\n            sum = sum+nums[i];\\n            prod = prod + i*nums[i];\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1986651,
                "title": "c-using-dynamic-programing",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        if(nums.size() == 1) return 0;\\n        int sum = accumulate(nums.begin(), nums.end(), 0);\\n        vector<int> dp(nums.size(), 0);\\n        int n = nums.size();\\n        for(int i = 0; i < nums.size(); i++)\\n        {\\n            dp[0] += i * nums[i];\\n        }\\n        for(int i = 1; i < nums.size(); i++)\\n        {\\n            dp[i] = dp[i - 1] - (n - 1) * nums[n - i] + (sum - nums[n - i]);\\n        }\\n        return *max_element(dp.begin(), dp.end());\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        if(nums.size() == 1) return 0;\\n        int sum = accumulate(nums.begin(), nums.end(), 0);\\n        vector<int> dp(nums.size(), 0);\\n        int n = nums.size();\\n        for(int i = 0; i < nums.size(); i++)\\n        {\\n            dp[0] += i * nums[i];\\n        }\\n        for(int i = 1; i < nums.size(); i++)\\n        {\\n            dp[i] = dp[i - 1] - (n - 1) * nums[n - i] + (sum - nums[n - i]);\\n        }\\n        return *max_element(dp.begin(), dp.end());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1981502,
                "title": "python-with-comments",
                "content": "```\\nimport itertools\\n\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        nsum = sum(nums)\\n        \\n        # F(0)\\n        nmul = sum([i*ele for i,ele in enumerate(nums)])\\n        max_nmul = nmul\\n        \\n        sz = len(nums)\\n        \\n        # Calculate each F by adding nsum to prev F and subtracting prev F\\'s highest number\\n        for i in range(sz-1,0,-1):\\n            nmul += nsum - nums[i] * sz\\n            max_nmul = max(max_nmul, nmul)\\n            \\n        return max_nmul\\n    \\n# [4,3,2,6,9,78,67,4,9,-89,54,66]\\n# [4,3,2,6,9,78,67,4,9,-89,54,66,-43,-34,-99,-43,-99,-99,-99,-99,99,99,99,99,99,99,99,1,1,1,1,1,1,1,3]\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nimport itertools\\n\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        nsum = sum(nums)\\n        \\n        # F(0)\\n        nmul = sum([i*ele for i,ele in enumerate(nums)])\\n        max_nmul = nmul\\n        \\n        sz = len(nums)\\n        \\n        # Calculate each F by adding nsum to prev F and subtracting prev F\\'s highest number\\n        for i in range(sz-1,0,-1):\\n            nmul += nsum - nums[i] * sz\\n            max_nmul = max(max_nmul, nmul)\\n            \\n        return max_nmul\\n    \\n# [4,3,2,6,9,78,67,4,9,-89,54,66]\\n# [4,3,2,6,9,78,67,4,9,-89,54,66,-43,-34,-99,-43,-99,-99,-99,-99,99,99,99,99,99,99,99,1,1,1,1,1,1,1,3]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1971003,
                "title": "math-problem-with-c-c-python",
                "content": "\\n\\nF(0)=0\\xD7nums[0]+1\\xD7nums[1]+\\u2026+(n\\u22121)\\xD7nums[n\\u22121]\\n\\nF(1)=1\\xD7nums[0]+2\\xD7nums[1]+\\u2026+0\\xD7nums[n\\u22121]=F(0)+numSum\\u2212n\\xD7nums[n\\u22121]\\n\\nIn general when 1<=k<=n-1:\\nF(k)=F(k\\u22121)+numSum\\u2212n\\xD7nums[n\\u2212k]\\n\\n---\\nC Code:\\n\\n```C\\nint maxRotateFunction(int* nums, int numsSize){\\n    int n = numsSize;\\n    int numSum = 0, fRes = 0;\\n    for (int i = 0; i < n; i ++) {\\n        numSum += nums[i];\\n        fRes += i * nums[i];\\n    }\\n    int res = fRes;\\n    for (int i = 1; i < n; i ++) {\\n        fRes += numSum - n * nums[n - i];\\n        res = fmax(res, fRes);\\n    }\\n    return res;\\n}\\n```\\n\\nC++ Code:\\n\\n```C++\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int numSum = accumulate(nums.begin(), nums.end(), 0);\\n        int n = nums.size();\\n        int fRes = 0;\\n        for (int i = 0; i < n; i ++) {\\n            fRes += i * nums[i];\\n        }\\n        int res = fRes;\\n        for (int i = 1; i < n; i ++) {\\n            fRes += numSum - n * nums[n - i];\\n            res = max(res, fRes);\\n        }\\n        return res;\\n    }\\n};\\n```\\n\\nPython Code:\\n\\n```Python\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        numSum, n, fRes = sum(nums), len(nums), 0\\n        for i, num in enumerate(nums):\\n            fRes += i * num\\n        res = fRes\\n        for i in range(1, n):\\n            fRes += numSum - n * nums[n - i]\\n            res = max(res, fRes)\\n        return res\\n```",
                "solutionTags": [
                    "Python",
                    "C",
                    "Math"
                ],
                "code": "```C\\nint maxRotateFunction(int* nums, int numsSize){\\n    int n = numsSize;\\n    int numSum = 0, fRes = 0;\\n    for (int i = 0; i < n; i ++) {\\n        numSum += nums[i];\\n        fRes += i * nums[i];\\n    }\\n    int res = fRes;\\n    for (int i = 1; i < n; i ++) {\\n        fRes += numSum - n * nums[n - i];\\n        res = fmax(res, fRes);\\n    }\\n    return res;\\n}\\n```\n```C++\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int numSum = accumulate(nums.begin(), nums.end(), 0);\\n        int n = nums.size();\\n        int fRes = 0;\\n        for (int i = 0; i < n; i ++) {\\n            fRes += i * nums[i];\\n        }\\n        int res = fRes;\\n        for (int i = 1; i < n; i ++) {\\n            fRes += numSum - n * nums[n - i];\\n            res = max(res, fRes);\\n        }\\n        return res;\\n    }\\n};\\n```\n```Python\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        numSum, n, fRes = sum(nums), len(nums), 0\\n        for i, num in enumerate(nums):\\n            fRes += i * num\\n        res = fRes\\n        for i in range(1, n):\\n            fRes += numSum - n * nums[n - i]\\n            res = max(res, fRes)\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1913574,
                "title": "python-easy-understanding-solution-with-comment",
                "content": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        s, n = sum(nums), len(nums)\\n        rotate_sum = 0\\n        \\n        for i in range(n):\\n            rotate_sum += nums[i] * i       # ex. [0, 1, 2, 3]  --> 0*0 + 1*1 + 2*2 + 3*3\\n            \\n        res = rotate_sum\\n        \\n        for i in range(n-1, 0 , -1):\\n            rotate_sum += s - n * nums[i]   # 0*0 + 1*1 + 2*2 + 3*3 --> 0*1 + 1*2 + 2*3 + 3*4 --> 0*1 + 1*2 + 2*3 + 3*0\\n            res = max(res, rotate_sum)      # update res\\n            \\n        return res",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        s, n = sum(nums), len(nums)\\n        rotate_sum = 0\\n        \\n        for i in range(n):\\n            rotate_sum += nums[i] * i       # ex. [0, 1, 2, 3]  --> 0*0 + 1*1 + 2*2 + 3*3\\n            \\n        res = rotate_sum\\n        \\n        for i in range(n-1, 0 , -1):\\n            rotate_sum += s - n * nums[i]   # 0*0 + 1*1 + 2*2 + 3*3 --> 0*1 + 1*2 + 2*3 + 3*4 --> 0*1 + 1*2 + 2*3 + 3*0\\n            res = max(res, rotate_sum)      # update res\\n            \\n        return res",
                "codeTag": "Java"
            },
            {
                "id": 1908026,
                "title": "c-o-n-math-sim-comments",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        \\n        if(nums.size() == 1) return 0; //for a single value input, the value will be multiplied by zero, so ans is zero\\n        vector<int> sums(nums.size(), 0); //use a vector to hold running sums of elements from index 0 to index i\\n        int r_sum = 0; //holds results of \\'rotation function\\'\\n\\t\\t\\n        sums[0] = nums[0];\\n        for(int i = 1; i < nums.size(); i++){\\n            sums[i] = sums[i-1] + nums[i];\\n            r_sum += nums[i] * i; // starting with F(0)\\n            }\\n        \\n        int max_sum = r_sum; //start by assuming F(0) gives max sum, and test this as follows\\n        for(int i = nums.size()-1 ; i >= 0; i--){\\n\\t\\t\\t//each rotation, the sum is reduced by last element * num elements, as this element rotates to 0 position\\n\\t\\t\\t//the sum is also increased, by one copy of each of the other elements (equiv to sum of these other elements)\\n\\t\\t\\t//so, can run through the possibilities and see what max sum is\\n            r_sum -= nums[i] * (nums.size()-1);\\n            if(i < nums.size()-1) r_sum += (sums[nums.size()-1] - sums[i]);\\n            if(i > 0) r_sum += sums[i-1];\\n            if(r_sum > max_sum) max_sum = r_sum;\\n        }\\n        return max_sum; //\"The Answer\"\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        \\n        if(nums.size() == 1) return 0; //for a single value input, the value will be multiplied by zero, so ans is zero\\n        vector<int> sums(nums.size(), 0); //use a vector to hold running sums of elements from index 0 to index i\\n        int r_sum = 0; //holds results of \\'rotation function\\'\\n\\t\\t\\n        sums[0] = nums[0];\\n        for(int i = 1; i < nums.size(); i++){\\n            sums[i] = sums[i-1] + nums[i];\\n            r_sum += nums[i] * i; // starting with F(0)\\n            }\\n        \\n        int max_sum = r_sum; //start by assuming F(0) gives max sum, and test this as follows\\n        for(int i = nums.size()-1 ; i >= 0; i--){\\n\\t\\t\\t//each rotation, the sum is reduced by last element * num elements, as this element rotates to 0 position\\n\\t\\t\\t//the sum is also increased, by one copy of each of the other elements (equiv to sum of these other elements)\\n\\t\\t\\t//so, can run through the possibilities and see what max sum is\\n            r_sum -= nums[i] * (nums.size()-1);\\n            if(i < nums.size()-1) r_sum += (sums[nums.size()-1] - sums[i]);\\n            if(i > 0) r_sum += sums[i-1];\\n            if(r_sum > max_sum) max_sum = r_sum;\\n        }\\n        return max_sum; //\"The Answer\"\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1894504,
                "title": "c-solution-o-n-time-complexity-constant-space-complexity",
                "content": "class Solution {\\npublic:\\n\\n    int maxRotateFunction(vector<int>& nums) {\\n\\t\\n        int temp=0;\\n        int n=nums.size();\\n        int last_sum=accumulate(nums.begin(),nums.end(),0)-nums[0];\\n        int start_sum=0;\\n        \\n        for(int i=0;i<n;i++) temp+=(i*nums[i]);\\n        \\n        int ans=temp;\\n        \\n        for(int i=1;i<n;i++)\\n        {\\n            temp=temp+(nums[i-1]*(n-1))-last_sum-start_sum;\\n            start_sum+=nums[i-1];\\n            last_sum-=nums[i];\\n            ans=max(ans,temp);\\n        }\\n        \\n        return ans;\\n    }\\n};",
                "solutionTags": [
                    "C",
                    "Dynamic Programming"
                ],
                "code": "class Solution {\\npublic:\\n\\n    int maxRotateFunction(vector<int>& nums) {\\n\\t\\n        int temp=0;\\n        int n=nums.size();\\n        int last_sum=accumulate(nums.begin(),nums.end(),0)-nums[0];\\n        int start_sum=0;\\n        \\n        for(int i=0;i<n;i++) temp+=(i*nums[i]);\\n        \\n        int ans=temp;\\n        \\n        for(int i=1;i<n;i++)\\n        {\\n            temp=temp+(nums[i-1]*(n-1))-last_sum-start_sum;\\n            start_sum+=nums[i-1];\\n            last_sum-=nums[i];\\n            ans=max(ans,temp);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1842580,
                "title": "simple-o-n-solution",
                "content": "So the intution is that everytime you do a rotate you are effectively increasing the sum of all the elements to the left 1 time each and reducing the sum of elements to the right by 1 time each. and making the index value (n-1) times\\n\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        \\n        int n = nums.size();\\n        \\n        vector<int> d1(n, 0);\\n        d1[n-1] = nums[n-1];\\n        \\n        vector<int> d2(n, 0);\\n        d2[0] = nums[0];\\n        \\n        for(int i=n-2;i>=0;i--) {\\n            d1[i] = nums[i] + d1[i+1];\\n        }\\n        \\n        for(int i=1;i<n;i++) {\\n            d2[i] = d2[i-1]+nums[i];\\n        }\\n        \\n        int ans = 0;\\n        for(int i=0;i<n;i++) {\\n            ans+= i*nums[i];\\n        }\\n        \\n        \\n        int currAns = ans;\\n        \\n        for(int i=1;i<n;i++) {\\n            currAns =  currAns - d2[i-1] + nums[i-1]*n  - d1[i];\\n            ans = max(ans, currAns);\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        \\n        int n = nums.size();\\n        \\n        vector<int> d1(n, 0);\\n        d1[n-1] = nums[n-1];\\n        \\n        vector<int> d2(n, 0);\\n        d2[0] = nums[0];\\n        \\n        for(int i=n-2;i>=0;i--) {\\n            d1[i] = nums[i] + d1[i+1];\\n        }\\n        \\n        for(int i=1;i<n;i++) {\\n            d2[i] = d2[i-1]+nums[i];\\n        }\\n        \\n        int ans = 0;\\n        for(int i=0;i<n;i++) {\\n            ans+= i*nums[i];\\n        }\\n        \\n        \\n        int currAns = ans;\\n        \\n        for(int i=1;i<n;i++) {\\n            currAns =  currAns - d2[i-1] + nums[i-1]*n  - d1[i];\\n            ans = max(ans, currAns);\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1829453,
                "title": "c-solution-rotate-function",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum = 0;\\n        int current = 0;\\n        for (int i=0; i<nums.size(); ++i) {\\n            sum += nums[i];\\n            current += i * nums[i];\\n        }\\n        int max = current;\\n        int index = nums.size() -1;\\n        \\n        while (index > 0) {\\n            current = current - nums.size() * nums[index--] + sum;\\n            if (max < current)\\n                max = current;\\n        }\\n        return max;\\n    }\\n};\\n/*\\nsum = 4+3+2+6 = 15\\ncurrent = f(0) = 25\\n\\nf(1) = 25 + 15 - (4 * 6) = 16 -> new current value;\\nf(2) = 16 + 15 - (4 * 2) = 23 -> new current value;\\nf(3) = 23 + 15 - (4 * 3) = 26 -> new current and max value;\\n*/\\n```",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum = 0;\\n        int current = 0;\\n        for (int i=0; i<nums.size(); ++i) {\\n            sum += nums[i];\\n            current += i * nums[i];\\n        }\\n        int max = current;\\n        int index = nums.size() -1;\\n        \\n        while (index > 0) {\\n            current = current - nums.size() * nums[index--] + sum;\\n            if (max < current)\\n                max = current;\\n        }\\n        return max;\\n    }\\n};\\n/*\\nsum = 4+3+2+6 = 15\\ncurrent = f(0) = 25\\n\\nf(1) = 25 + 15 - (4 * 6) = 16 -> new current value;\\nf(2) = 16 + 15 - (4 * 2) = 23 -> new current value;\\nf(3) = 23 + 15 - (4 * 3) = 26 -> new current and max value;\\n*/\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1818218,
                "title": "easy-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    using ll = long long int;\\n    int maxRotateFunction(vector<int>& nums) {\\n        int len = nums.size() - 1;\\n        int sum = 0, val = 0;\\n        for (int i = 0; i <= len; i++) {\\n            sum += nums[i];\\n            val += (i * nums[i]);\\n        }\\n        int ans = val;\\n        for (int i = len; i >= 0; i--) {\\n            val -= (len * nums[i]);\\n            val += (sum - nums[i]);\\n            ans = max(ans, val);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    using ll = long long int;\\n    int maxRotateFunction(vector<int>& nums) {\\n        int len = nums.size() - 1;\\n        int sum = 0, val = 0;\\n        for (int i = 0; i <= len; i++) {\\n            sum += nums[i];\\n            val += (i * nums[i]);\\n        }\\n        int ans = val;\\n        for (int i = len; i >= 0; i--) {\\n            val -= (len * nums[i]);\\n            val += (sum - nums[i]);\\n            ans = max(ans, val);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1773241,
                "title": "c-o-n-tc-and-o-1-sc-solution",
                "content": "```\\nclass Solution { // basically the change of product between rotations can be calculated by the observation that `change = sum-last_element*array.size` where the last_element is the last element of array before rotation.\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum = accumulate(nums.begin(),nums.end(),0);\\n        int maxprod = 0, lastprod = 0, n = nums.size();\\n        for(int i = 0; i < n; i++) // k = 0\\n            maxprod += i*nums[i];\\n        \\n        lastprod = maxprod;\\n        \\n        for(int k = 1; k < n; k++) {\\n            int change = sum-n*nums[n-k];\\n            int newprod = change+lastprod;\\n            lastprod = newprod;\\n            maxprod = max(newprod,maxprod);\\n        }\\n        \\n        return maxprod;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution { // basically the change of product between rotations can be calculated by the observation that `change = sum-last_element*array.size` where the last_element is the last element of array before rotation.\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum = accumulate(nums.begin(),nums.end(),0);\\n        int maxprod = 0, lastprod = 0, n = nums.size();\\n        for(int i = 0; i < n; i++) // k = 0\\n            maxprod += i*nums[i];\\n        \\n        lastprod = maxprod;\\n        \\n        for(int k = 1; k < n; k++) {\\n            int change = sum-n*nums[n-k];\\n            int newprod = change+lastprod;\\n            lastprod = newprod;\\n            maxprod = max(newprod,maxprod);\\n        }\\n        \\n        return maxprod;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1760210,
                "title": "java-o-n-time-complexity",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) \\n    {\\n        int i,sum=0,ans=0,max,n=nums.length-1;\\n        for(i=0;i<=n;i++)\\n        {\\n            sum+=nums[i];\\n            ans+=nums[i]*i;\\n        }\\n        max=ans;\\n        for(i=0;i<=n;i++)\\n        {\\n            ans=ans-sum+nums[i]+(nums[i]*n);\\n            max=Math.max(ans,max);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) \\n    {\\n        int i,sum=0,ans=0,max,n=nums.length-1;\\n        for(i=0;i<=n;i++)\\n        {\\n            sum+=nums[i];\\n            ans+=nums[i]*i;\\n        }\\n        max=ans;\\n        for(i=0;i<=n;i++)\\n        {\\n            ans=ans-sum+nums[i]+(nums[i]*n);\\n            max=Math.max(ans,max);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1750130,
                "title": "c-o-n",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum = 0;\\n        int current = 0;\\n        for (int i=0; i<nums.size(); ++i) {\\n            sum += nums[i];\\n            current += i * nums[i];\\n        }\\n        int max = current;\\n        int index = nums.size() -1;\\n        \\n        while (index > 0) {\\n            current = current - nums.size() * nums[index--] + sum;\\n            if (max < current)\\n                max = current;\\n        }\\n        return max;\\n    }\\n};\\n```\\n\\n```\\nF(0) =           (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) + (4 * 6) - (4 * 6) = F(0) + (4+3+2+6) - 4 * 6 = 16\\n```\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int sum = 0;\\n        int current = 0;\\n        for (int i=0; i<nums.size(); ++i) {\\n            sum += nums[i];\\n            current += i * nums[i];\\n        }\\n        int max = current;\\n        int index = nums.size() -1;\\n        \\n        while (index > 0) {\\n            current = current - nums.size() * nums[index--] + sum;\\n            if (max < current)\\n                max = current;\\n        }\\n        return max;\\n    }\\n};\\n```\n```\\nF(0) =           (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) + (4 * 6) - (4 * 6) = F(0) + (4+3+2+6) - 4 * 6 = 16\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1748965,
                "title": "python-dp-o-n-solution-with-explanation",
                "content": "Please upvote if you find this helpful, thanks!\\n\\nHere is my thinking process:\\n 1. We don\\'t really care about the direction of rotation. Since we are finding the max sum, we eventually need to doing a loop compute the sum of all combination (This )\\n 2.  According to the example: ```nums = [4, 3, 2, 6]```\\n   - ```F(0) => ([4, 3, 2, 6]) = (0) * 4 + (1) * 3 + (2) * 2  + (3) * 6 ```\\n   - ```F(1) => ([6, 4, 3, 2]) = (1) * 4 + (2) * 3 + (3) * 2  + (0) * 6 ```\\n   - ```F(2) => ([2, 6, 4, 3]) = (2) * 4 + (3) * 3 + (0) * 2  + (1) * 6 ```\\n   - ```F(3) => ([3, 2, 6, 4]) = (3) * 4 + (0) * 3 + (1) * 2  + (2) * 6 ```\\n   - I reorder the terms from the example. It turned out that, each time we rotate the list, the new sum is subtracted by (n-1)*(last element), and added by sum of the rest. i.e. ```F(1)=F(0)-(3)*6+(1)*4+(1)*3+(1)*2```\\n  3. At this point, this question became pretty straightforward: we don\\'t really need to rotate the list, but keep track of the \\'right most element\\' and do the the calculation.\\n```\\ndef maxRotateFunction(self, nums: List[int]) -> int:\\n\\t\\t# calculating F(0):\\n        curr_sum = sum([x*i for i, x in enumerate(nums)])\\n        curr_max = curr_sum\\n        n = len(nums)\\n\\t\\t# Index of right-most element\\n        r = n-1\\n\\t\\t\\n\\t\\t# This stores the sum of left subset (entire list excluding right-most element)\\n        left_subset = sum(nums)-nums[r]\\n        \\n        \\n        for i in range(n):\\n\\t\\t\\t# F(i) = F(i) + 1*left_sum - (n-1)*right_element\\n            curr_sum += left_subset\\n            curr_sum -= nums[r]*(n-1)\\n            \\n\\t\\t\\t# After that, we \\'rotate\\' the list, right-most element go to front\\n\\t\\t\\t# and update the sum of left subset\\n            left_subset = left_subset + nums[r] - nums[r-1]\\n            r -= 1\\n            \\n            curr_max = max(curr_max, curr_sum)\\n            \\n        return curr_max\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```nums = [4, 3, 2, 6]```\n```F(0) => ([4, 3, 2, 6]) = (0) * 4 + (1) * 3 + (2) * 2  + (3) * 6 ```\n```F(1) => ([6, 4, 3, 2]) = (1) * 4 + (2) * 3 + (3) * 2  + (0) * 6 ```\n```F(2) => ([2, 6, 4, 3]) = (2) * 4 + (3) * 3 + (0) * 2  + (1) * 6 ```\n```F(3) => ([3, 2, 6, 4]) = (3) * 4 + (0) * 3 + (1) * 2  + (2) * 6 ```\n```F(1)=F(0)-(3)*6+(1)*4+(1)*3+(1)*2```\n```\\ndef maxRotateFunction(self, nums: List[int]) -> int:\\n\\t\\t# calculating F(0):\\n        curr_sum = sum([x*i for i, x in enumerate(nums)])\\n        curr_max = curr_sum\\n        n = len(nums)\\n\\t\\t# Index of right-most element\\n        r = n-1\\n\\t\\t\\n\\t\\t# This stores the sum of left subset (entire list excluding right-most element)\\n        left_subset = sum(nums)-nums[r]\\n        \\n        \\n        for i in range(n):\\n\\t\\t\\t# F(i) = F(i) + 1*left_sum - (n-1)*right_element\\n            curr_sum += left_subset\\n            curr_sum -= nums[r]*(n-1)\\n            \\n\\t\\t\\t# After that, we \\'rotate\\' the list, right-most element go to front\\n\\t\\t\\t# and update the sum of left subset\\n            left_subset = left_subset + nums[r] - nums[r-1]\\n            r -= 1\\n            \\n            curr_max = max(curr_max, curr_sum)\\n            \\n        return curr_max\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1619687,
                "title": "solution-with-explanation",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        // consider example 1: nums=[4,3,2,6]\\n        //Let n be length of nums\\n        // writing f(0) and rearranging f(1) the subtracting f(0) from f(1) we observe \\n        // f(0)=(0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 25\\n        // f(1)=(1 * 4) + (2 * 3) + (3 * 2) + (0 * 6) = 16\\n        // f(1) - f(0)=(4(1-0) + 3(2-1) + 2(3-2)) - 6*3\\n        //            =((4+3+2+6)-f(n-1)) -nums[n-1]*(n-1);\\n        // f(1) = f(0) + sum(nums[]) - nums[n - 1]*n\\n        // similarly f(i) = f(i-1) + sum(nums[]) - nums[n-i]*n (Try by finding f(2) - f(1))\\n        \\n        int n=nums.length;\\n        int f0=0;\\n        int sum=0;\\n        for(int i=0;i<n;i++){\\n            f0+=i*nums[i];\\n            sum+=nums[i];\\n        }\\n        int ans=f0;\\n        int fimin1=f0; //(f(i-1))\\n        for(int i=1;i<n;i++){\\n            int fi = fimin1 + sum - nums[n-i]*n;\\n            ans=Math.max(ans,fi);\\n            fimin1=fi;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        // consider example 1: nums=[4,3,2,6]\\n        //Let n be length of nums\\n        // writing f(0) and rearranging f(1) the subtracting f(0) from f(1) we observe \\n        // f(0)=(0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 25\\n        // f(1)=(1 * 4) + (2 * 3) + (3 * 2) + (0 * 6) = 16\\n        // f(1) - f(0)=(4(1-0) + 3(2-1) + 2(3-2)) - 6*3\\n        //            =((4+3+2+6)-f(n-1)) -nums[n-1]*(n-1);\\n        // f(1) = f(0) + sum(nums[]) - nums[n - 1]*n\\n        // similarly f(i) = f(i-1) + sum(nums[]) - nums[n-i]*n (Try by finding f(2) - f(1))\\n        \\n        int n=nums.length;\\n        int f0=0;\\n        int sum=0;\\n        for(int i=0;i<n;i++){\\n            f0+=i*nums[i];\\n            sum+=nums[i];\\n        }\\n        int ans=f0;\\n        int fimin1=f0; //(f(i-1))\\n        for(int i=1;i<n;i++){\\n            int fi = fimin1 + sum - nums[n-i]*n;\\n            ans=Math.max(ans,fi);\\n            fimin1=fi;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1491852,
                "title": "c-simple-mathematical-intuition",
                "content": "```\\nRuntime: 120 ms, faster than 92.23% of C++ online submissions for Rotate Function.\\nMemory Usage: 95.9 MB, less than 58.90% of C++ online submissions for Rotate Function.\\n\\nint maxRotateFunction(vector<int>& nums) {\\n        int sum1=0;\\n        int sum2=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            sum1+=nums[i];\\n            sum2+=i*nums[i];\\n        }\\n        int max1=sum2;\\n        for(int i=1;i<nums.size();i++)\\n        {\\n            sum2+=sum1-(nums[nums.size()-i]*nums.size());\\n            max1=max(max1,sum2);\\n        }\\n        if(nums.size()<=1)\\n        {\\n            return 0;\\n        }\\n        return max1;\\n    }",
                "solutionTags": [],
                "code": "```\\nRuntime: 120 ms, faster than 92.23% of C++ online submissions for Rotate Function.\\nMemory Usage: 95.9 MB, less than 58.90% of C++ online submissions for Rotate Function.\\n\\nint maxRotateFunction(vector<int>& nums) {\\n        int sum1=0;\\n        int sum2=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            sum1+=nums[i];\\n            sum2+=i*nums[i];\\n        }\\n        int max1=sum2;\\n        for(int i=1;i<nums.size();i++)\\n        {\\n            sum2+=sum1-(nums[nums.size()-i]*nums.size());\\n            max1=max(max1,sum2);\\n        }\\n        if(nums.size()<=1)\\n        {\\n            return 0;\\n        }\\n        return max1;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1483131,
                "title": "scala-concise-functional-solution-using-scanleft-foldleft",
                "content": "```\\n  def maxRotateFunction(nums: Array[Int]): Int = {\\n    val (total, n) = (nums.sum, nums.length)\\n    val initialSum = nums.indices.foldLeft(0) {\\n      case (sum, i) => sum + i * nums(i)\\n    }\\n    (1 until nums.length).scanLeft(initialSum) {\\n      case (prevSum, i) => prevSum + total - n * nums(n - i)\\n    }.max\\n  }\\n```",
                "solutionTags": [
                    "Scala"
                ],
                "code": "```\\n  def maxRotateFunction(nums: Array[Int]): Int = {\\n    val (total, n) = (nums.sum, nums.length)\\n    val initialSum = nums.indices.foldLeft(0) {\\n      case (sum, i) => sum + i * nums(i)\\n    }\\n    (1 until nums.length).scanLeft(initialSum) {\\n      case (prevSum, i) => prevSum + total - n * nums(n - i)\\n    }.max\\n  }\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1481652,
                "title": "c-o-n-time-and-o-1-space-complexity-97-solution-with-comments",
                "content": "```\\nWhat we are doing\\n\\nlet nums = [4, 3, 2, 6] as we are going on a full turn it does not \\nmatter in which direction it rotate.\\n\\nso,\\nidx        0 1 2 3\\nnums\\t|| 4 3 2 6 ||  4 3 2 6\\n\\t\\tpreCalulate this part \\n\\t\\t\\n\\t\\tsum = 0*4 + 1*3 + 2*2 + 3*6\\n\\t\\tx   = 3 + 2 + 6\\n\\t\\nnow in next step we will calculate \\n\\t\\nidx          0 1 2 3\\nnums\\t4 || 3 2 6 4 || 3 2 6\\n\\nto calculate this in O(1)\\n\\ni = [0, n)\\n\\nsum = sum - (n-1)*nums[ i ] + x \\nx = x  + nums[i] - nums[ (i+1) % n]\\n\\n\\n int maxRotateFunction(vector<int>& nums) {\\n      int sum = 0, n = nums.size(),  x = 0;\\n      \\n\\t  \\n      for(int i = 1; i < n ; ++i){\\n        sum += i*nums[i];\\n\\t\\tx += nums[i];\\n\\t}\\n\\t\\n      int ans = sum;\\n      \\n      for(int i = 0 ; i < n ; ++i){\\n        sum = sum + (n-1)*nums[i] - x;\\n        x = x + nums[i] - nums[ (i+1)%n ];\\n        ans = max(ans, sum);\\n      }\\n      \\n      \\n      return ans;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\nWhat we are doing\\n\\nlet nums = [4, 3, 2, 6] as we are going on a full turn it does not \\nmatter in which direction it rotate.\\n\\nso,\\nidx        0 1 2 3\\nnums\\t|| 4 3 2 6 ||  4 3 2 6\\n\\t\\tpreCalulate this part \\n\\t\\t\\n\\t\\tsum = 0*4 + 1*3 + 2*2 + 3*6\\n\\t\\tx   = 3 + 2 + 6\\n\\t\\nnow in next step we will calculate \\n\\t\\nidx          0 1 2 3\\nnums\\t4 || 3 2 6 4 || 3 2 6\\n\\nto calculate this in O(1)\\n\\ni = [0, n)\\n\\nsum = sum - (n-1)*nums[ i ] + x \\nx = x  + nums[i] - nums[ (i+1) % n]\\n\\n\\n int maxRotateFunction(vector<int>& nums) {\\n      int sum = 0, n = nums.size(),  x = 0;\\n      \\n\\t  \\n      for(int i = 1; i < n ; ++i){\\n        sum += i*nums[i];\\n\\t\\tx += nums[i];\\n\\t}\\n\\t\\n      int ans = sum;\\n      \\n      for(int i = 0 ; i < n ; ++i){\\n        sum = sum + (n-1)*nums[i] - x;\\n        x = x + nums[i] - nums[ (i+1)%n ];\\n        ans = max(ans, sum);\\n      }\\n      \\n      \\n      return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1420517,
                "title": "java-o-n-time-and-o-1-space-solution-with-approach",
                "content": "```\\npublic int maxRotatefuntion(int[] nums) {\\n        /*\\n        F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6)\\n             =    a0   +    a1   +    a2   +    a3\\n        F(1) = (0 * 6) + (1 * 4)         + (2 * 3)         + (3 * 2)\\n             = (0 * 6) + (0 * 4 + 1 * 4) + (1 * 3 + 1 * 3) + (2 * 2 + 1 * 2)\\n             = (0 * 6) + (a0 + 1 * 4) + (a1 + 1 * 3) + (a2 + 1 * 2)\\n             =           (a0 + 1 * 4) + (a1 + 1 * 3) + (a2 + 1 * 2) + (a3 + 1 * 6) - (a3 + 1 * 6)\\n             = (a0 + a1 + a2 + a3) + (1 * 4 + 1 * 3 + 1 * 2 + 1 * 6) - (a3 + 1 * 6)\\n             = F(0) + sum(nums) - (3 * 6 + 1 * 6)\\n             = F(0) + sum(nums) - (4 * 6)\\n             = F(0) + sum(nums) - n * nums[n - 1]\\n             = 25 + 15 - 24\\n             = 16\\n        F(2) = F(1) + sum(nums) - n * nums[n-2]\\n             = 16 + 15 - 8\\n             = 23\\n        \\n        */\\n        int n = nums.length;\\n        int sum = 0;\\n        int fun = 0;\\n        \\n        for(int i = 0; i < n; i++)\\n        {\\n            sum += nums[i];\\n            fun += i*nums[i];\\n        }\\n        \\n        int maxR = fun;\\n        for(int i = 1; i < n; i++)\\n        {\\n            int currentfun = fun + sum - n * nums[n - i];\\n            if(currentfun > maxR)\\n                maxR = currentfun;\\n            fun = currentfun;\\n        }\\n        \\n        \\n        return maxR;\\n    }\\n\\t```",
                "solutionTags": [],
                "code": "```\\npublic int maxRotatefuntion(int[] nums) {\\n        /*\\n        F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6)\\n             =    a0   +    a1   +    a2   +    a3\\n        F(1) = (0 * 6) + (1 * 4)         + (2 * 3)         + (3 * 2)\\n             = (0 * 6) + (0 * 4 + 1 * 4) + (1 * 3 + 1 * 3) + (2 * 2 + 1 * 2)\\n             = (0 * 6) + (a0 + 1 * 4) + (a1 + 1 * 3) + (a2 + 1 * 2)\\n             =           (a0 + 1 * 4) + (a1 + 1 * 3) + (a2 + 1 * 2) + (a3 + 1 * 6) - (a3 + 1 * 6)\\n             = (a0 + a1 + a2 + a3) + (1 * 4 + 1 * 3 + 1 * 2 + 1 * 6) - (a3 + 1 * 6)\\n             = F(0) + sum(nums) - (3 * 6 + 1 * 6)\\n             = F(0) + sum(nums) - (4 * 6)\\n             = F(0) + sum(nums) - n * nums[n - 1]\\n             = 25 + 15 - 24\\n             = 16\\n        F(2) = F(1) + sum(nums) - n * nums[n-2]\\n             = 16 + 15 - 8\\n             = 23\\n        \\n        */\\n        int n = nums.length;\\n        int sum = 0;\\n        int fun = 0;\\n        \\n        for(int i = 0; i < n; i++)\\n        {\\n            sum += nums[i];\\n            fun += i*nums[i];\\n        }\\n        \\n        int maxR = fun;\\n        for(int i = 1; i < n; i++)\\n        {\\n            int currentfun = fun + sum - n * nums[n - i];\\n            if(currentfun > maxR)\\n                maxR = currentfun;\\n            fun = currentfun;\\n        }\\n        \\n        \\n        return maxR;\\n    }\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1411389,
                "title": "python-7-lines-simple-sum-shifting-o-n",
                "content": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        Sum=sum(nums)\\n        n=len(nums)\\n        ans=val=sum(i*val for i,val in enumerate(nums))\\n        for i in range(n-1,-1,-1):\\n            val=val+Sum-n*nums[i]\\n            ans=max(ans,val)\\n        return ans\\n        \\n```",
                "solutionTags": [
                    "Python",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        Sum=sum(nums)\\n        n=len(nums)\\n        ans=val=sum(i*val for i,val in enumerate(nums))\\n        for i in range(n-1,-1,-1):\\n            val=val+Sum-n*nums[i]\\n            ans=max(ans,val)\\n        return ans\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1397566,
                "title": "simple-o-n-solution-with-easy-to-understand-explanation",
                "content": "For the given example : [4,3,2,6]\\nThe first value would be :       (0x4) + (1x3) + (2x2) + (3x6) = 25\\nThe second value would be : (1x4) + (2x3) + (3x2) + (0x6) = 16\\nThe third value would be :     (2x4) + (3x3) + (0x2) + (1x6) = 23\\n\\nWe can observe that in each iteration, all the numbers except one are getting multiplied by a higher integer subsequently. This is equivalent to adding the sum to previous  obtained value and subtracting that one number n times from the result.\\nIdeally that one number should be subtracted (n-1) times from the result, but since we are adding that number also while adding sum, therefore that one number has to subtracted n times.\\n\\nSo, for this example:\\nSum => 4 + 3 + 2 +6 = 15\\nfirst value = 25\\nsecond value = 25 + 15 - (4x6) = 16\\nthird value = 16 + 15 - (4x2) = 23\\n```\\n\\n    int maxRotateFunction(vector<int>& nums) {\\n        \\n        int n = nums.size();\\n        int sum = 0;\\n        int tempResult = 0;\\n        \\n        for(int i=0;i<n;i++)\\n        {\\n            sum = sum + nums[i];\\n            tempResult += (i * nums[i]);\\n        }\\n        \\n        int result = tempResult;\\n        \\n        for(int i=0;i<n-1;i++)\\n        {\\n            tempResult = tempResult + sum - n*nums[n-i-1];\\n            result = tempResult>result?tempResult:result;\\n            //cout<<tempResult<<\"\\\\n\";\\n        }\\n        \\n        return result;\\n        \\n    }",
                "solutionTags": [],
                "code": "For the given example : [4,3,2,6]\\nThe first value would be :       (0x4) + (1x3) + (2x2) + (3x6) = 25\\nThe second value would be : (1x4) + (2x3) + (3x2) + (0x6) = 16\\nThe third value would be :     (2x4) + (3x3) + (0x2) + (1x6) = 23\\n\\nWe can observe that in each iteration, all the numbers except one are getting multiplied by a higher integer subsequently. This is equivalent to adding the sum to previous  obtained value and subtracting that one number n times from the result.\\nIdeally that one number should be subtracted (n-1) times from the result, but since we are adding that number also while adding sum, therefore that one number has to subtracted n times.\\n\\nSo, for this example:\\nSum => 4 + 3 + 2 +6 = 15\\nfirst value = 25\\nsecond value = 25 + 15 - (4x6) = 16\\nthird value = 16 + 15 - (4x2) = 23\\n```\\n\\n    int maxRotateFunction(vector<int>& nums) {\\n        \\n        int n = nums.size();\\n        int sum = 0;\\n        int tempResult = 0;\\n        \\n        for(int i=0;i<n;i++)\\n        {\\n            sum = sum + nums[i];\\n            tempResult += (i * nums[i]);\\n        }\\n        \\n        int result = tempResult;\\n        \\n        for(int i=0;i<n-1;i++)\\n        {\\n            tempResult = tempResult + sum - n*nums[n-i-1];\\n            result = tempResult>result?tempResult:result;\\n            //cout<<tempResult<<\"\\\\n\";\\n        }\\n        \\n        return result;\\n        \\n    }",
                "codeTag": "C++"
            },
            {
                "id": 1373846,
                "title": "code-with-explaination-java-o-n",
                "content": "```\\nclass Solution {\\n public int maxRotateFunction(int[] nums) {\\n        int ans=0;\\n        int sum=0;\\n     int finalAns=0;\\n     //initialize with the result of 1st iteration\\n        for(int i=0;i<nums.length;i++){\\n          ans+=i*nums[i];\\n          sum+=nums[i];\\n        }\\n        finalAns=ans;\\n        //result of nth iteration is calculated with the help of result found from n-1th iteration in the ans variable\\n        for(int i=1;i<nums.length;i++){\\n        \\t//ans is the result from previous iteration \\n        \\tint currentAns=ans+sum-(nums.length*nums[nums.length-i]);\\n        \\tfinalAns=Math.max(currentAns, finalAns);\\n            ans=currentAns;//store this result and use in n+1th iteration\\n        }\\n        \\n        \\n        return finalAns;\\n    }\\n}\\n/*\\nexample 3,4,5,6\\niteration 1-> 3*0 + 4 *1 + 5*2 + 6*3 = 32\\niteration 2-> 6*0 + 3*1 + 4*2 + 5*3 = 26\\ndifference between iteration1 and iteration2 => 32-26=6==> iteration 1 + sum -array.length()*array[array.length-1]\\n\\n\\nso the problem boils down to how can we get value of iteration n from iteration n-1\\n\\nmoving the array to the right by 1 unit is essentially we are adding the sum of the array to the currently generated product - the last element*length of array\\n\\n\\n\\n*/\\n```\\n\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n public int maxRotateFunction(int[] nums) {\\n        int ans=0;\\n        int sum=0;\\n     int finalAns=0;\\n     //initialize with the result of 1st iteration\\n        for(int i=0;i<nums.length;i++){\\n          ans+=i*nums[i];\\n          sum+=nums[i];\\n        }\\n        finalAns=ans;\\n        //result of nth iteration is calculated with the help of result found from n-1th iteration in the ans variable\\n        for(int i=1;i<nums.length;i++){\\n        \\t//ans is the result from previous iteration \\n        \\tint currentAns=ans+sum-(nums.length*nums[nums.length-i]);\\n        \\tfinalAns=Math.max(currentAns, finalAns);\\n            ans=currentAns;//store this result and use in n+1th iteration\\n        }\\n        \\n        \\n        return finalAns;\\n    }\\n}\\n/*\\nexample 3,4,5,6\\niteration 1-> 3*0 + 4 *1 + 5*2 + 6*3 = 32\\niteration 2-> 6*0 + 3*1 + 4*2 + 5*3 = 26\\ndifference between iteration1 and iteration2 => 32-26=6==> iteration 1 + sum -array.length()*array[array.length-1]\\n\\n\\nso the problem boils down to how can we get value of iteration n from iteration n-1\\n\\nmoving the array to the right by 1 unit is essentially we are adding the sum of the array to the currently generated product - the last element*length of array\\n\\n\\n\\n*/\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1359515,
                "title": "java-o-n",
                "content": "```\\npublic int maxRotateFunction(int[] nums) {\\n        int n = nums.length;\\n        int dp[] = new int[n];\\n        int sum = 0;\\n        for (int i=0;i< n;i++){\\n            dp[0] += nums[i] * i;\\n            sum += nums[i];\\n        }\\n\\n        int max = dp[0];\\n        for (int i=1;i<n;i++){\\n            dp[i] = dp[i-1] + (sum - nums[n-i] - (nums[n-i] * (n-1)));\\n            max = Math.max(max,dp[i]);\\n        }\\n\\n        return max;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic int maxRotateFunction(int[] nums) {\\n        int n = nums.length;\\n        int dp[] = new int[n];\\n        int sum = 0;\\n        for (int i=0;i< n;i++){\\n            dp[0] += nums[i] * i;\\n            sum += nums[i];\\n        }\\n\\n        int max = dp[0];\\n        for (int i=1;i<n;i++){\\n            dp[i] = dp[i-1] + (sum - nums[n-i] - (nums[n-i] * (n-1)));\\n            max = Math.max(max,dp[i]);\\n        }\\n\\n        return max;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1343749,
                "title": "python-o-n",
                "content": "def maxRotateFunction(self, nums: List[int]) -> int:\\n        ans=0\\n        for i in range(len(nums)):\\n            ans+=(nums[i]*i)\\n        s=ans\\n        c=sum(nums)\\n        for i in range(1,len(nums)):\\n            s=s-c+nums[i-1]*len(nums)\\n            ans=max(ans,s)\\n        return ans",
                "solutionTags": [],
                "code": "def maxRotateFunction(self, nums: List[int]) -> int:\\n        ans=0\\n        for i in range(len(nums)):\\n            ans+=(nums[i]*i)\\n        s=ans\\n        c=sum(nums)\\n        for i in range(1,len(nums)):\\n            s=s-c+nums[i-1]*len(nums)\\n            ans=max(ans,s)\\n        return ans",
                "codeTag": "Python3"
            },
            {
                "id": 1343597,
                "title": "java-easy-tc-o-n",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] arr) {\\n         int n = arr.length;\\n         int csum = 0; //current sum\\n         int asum = 0; //array sum\\n      for(int i = 0;i < arr.length;i++){\\n          csum += (i * arr[i]); \\n          asum += arr[i];\\n      }\\n      //initialize max as first configuration max (i.e zero rotation)\\n      int max = csum;\\n      for(int i = 0;i<n - 1;i++){\\n           //new current sum (having i + 1 rotations)\\n           int ncsum = csum + asum -  n * arr[n - i - 1];\\n           max = Math.max(ncsum,max);\\n           csum = ncsum;\\n      }\\n      \\n      return max;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] arr) {\\n         int n = arr.length;\\n         int csum = 0; //current sum\\n         int asum = 0; //array sum\\n      for(int i = 0;i < arr.length;i++){\\n          csum += (i * arr[i]); \\n          asum += arr[i];\\n      }\\n      //initialize max as first configuration max (i.e zero rotation)\\n      int max = csum;\\n      for(int i = 0;i<n - 1;i++){\\n           //new current sum (having i + 1 rotations)\\n           int ncsum = csum + asum -  n * arr[n - i - 1];\\n           max = Math.max(ncsum,max);\\n           csum = ncsum;\\n      }\\n      \\n      return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1341939,
                "title": "easy-java-solution",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int val=0;\\n        int sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            val+=nums[i]*i;\\n            sum+=nums[i];\\n        }\\n        int ans=val;\\n        \\n        for(int i=0;i<nums.length;i++){\\n            val=val+sum-(nums.length*nums[nums.length-i-1]);\\n            ans=Math.max(val,ans);\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int val=0;\\n        int sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            val+=nums[i]*i;\\n            sum+=nums[i];\\n        }\\n        int ans=val;\\n        \\n        for(int i=0;i<nums.length;i++){\\n            val=val+sum-(nums.length*nums[nums.length-i-1]);\\n            ans=Math.max(val,ans);\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1335477,
                "title": "python3-solution-with-intuition-and-explanation",
                "content": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        #the basic intuition is, we can simulate either clockwise or anticlockwise rotation. \\n\\t\\t#Since we check out all possibilities, we will get the same answer !\\n        #find the initial value, i.e F(0) \\n        currentSum=sum( i*nums[i] for i in range(len(nums)) )\\n        maxVal=currentSum\\n        #To avoid repeatedly calculating the sum, calculate it beforehand\\n        arrSum=sum(nums)\\n        L=len(nums)\\n        for i in range(len(nums)):\\n            #Let\\'s say we do anti-clockwise rotation. We lose arrSum from currentSum since every index is reduced by one. \\n\\t\\t\\t#But the element that is present in index 0 will move to the last and contribute element*len(nums) to currentSum.\\n\\t\\t\\t#For simulating clockwise rotation, the opposite is True.\\n            currentSum += nums[i]*L - arrSum\\n            maxVal=max(maxVal,currentSum)\\n        return maxVal\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, nums: List[int]) -> int:\\n        #the basic intuition is, we can simulate either clockwise or anticlockwise rotation. \\n\\t\\t#Since we check out all possibilities, we will get the same answer !\\n        #find the initial value, i.e F(0) \\n        currentSum=sum( i*nums[i] for i in range(len(nums)) )\\n        maxVal=currentSum\\n        #To avoid repeatedly calculating the sum, calculate it beforehand\\n        arrSum=sum(nums)\\n        L=len(nums)\\n        for i in range(len(nums)):\\n            #Let\\'s say we do anti-clockwise rotation. We lose arrSum from currentSum since every index is reduced by one. \\n\\t\\t\\t#But the element that is present in index 0 will move to the last and contribute element*len(nums) to currentSum.\\n\\t\\t\\t#For simulating clockwise rotation, the opposite is True.\\n            currentSum += nums[i]*L - arrSum\\n            maxVal=max(maxVal,currentSum)\\n        return maxVal\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1217188,
                "title": "o-n-100-fast-easy-cpp",
                "content": "```\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums)\\n    {\\n        long long int currval=0,maxval=0,arrsum=0;\\n        \\n        for(int i=0; i<nums.size(); i++)\\n        {\\n            arrsum += nums[i];\\n            currval += i*nums[i];\\n        }\\n        \\n        maxval = currval;\\n        \\n        for(int j=1; j<nums.size(); j++)\\n        {\\n            currval += arrsum - nums.size()*nums[nums.size() - j];\\n            maxval = max(maxval, currval);\\n        }\\n        return maxval;\\n    }\\n};\\n```\\n```",
                "solutionTags": [],
                "code": "```\\n```\n```\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1201190,
                "title": "c-faster-and-simple",
                "content": "0 1 2 3    ->   1 2 3 0    ->     2 3 0 1   ->      3 0 1 2    \\n4 3 2 6    ->   4 3 2 6    ->     4 3 2 6    ->     4 3 2 6    \\n\\n\\n    25       --     16        --       23        --        26                \\n\\nInstead of computing the sum again and again !! we can observe some relation between the prvious states.\\n\\n25 -> 16\\n\\nTo all the starting terms we are adding the same array elements to increase its multiplying factor!!\\n(0 * 4) + (1 * 3) + (2 * 2)  =>  (1 * 4) + (2 * 3) + (3 * 2) \\n\\none term is reduced by 3 times!!\\n              (3 * 6)                =>             (0 * 6)         \\n\\n\\nSo, we are adding the total sum of array to the previous state and removing n*( 1 term) \\n\\n\\n\\n```\\nusing ll = long long;\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        ll n=nums.size();\\n        \\n        ll sum=0,total=0;\\n        \\n        for(int i=0;i<n;i++) sum+= i*nums[i],total+=nums[i];\\n        \\n        ll ans=sum;\\n        \\n        for(int i=n-1;i>=0;--i)\\n        {\\n            sum+= total-n*nums[i];\\n            ans=max(ans,sum);\\n        }\\n        return ans;\\n    }\\n};",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        ll n=nums.size();\\n        \\n        ll sum=0,total=0;\\n        \\n        for(int i=0;i<n;i++) sum+= i*nums[i],total+=nums[i];\\n        \\n        ll ans=sum;\\n        \\n        for(int i=n-1;i>=0;--i)\\n        {\\n            sum+= total-n*nums[i];\\n            ans=max(ans,sum);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1179793,
                "title": "python-rolling-sum",
                "content": "Calculating the sum naively for each rotation is `O(N^2)` where `N` is the length of the array, which is too slow.\\n\\nSuppose that we calculate the sum for the initial array:\\n`sum_0 = 0 * A[0] + 1 * A[1] + ... + (n-1) * A[n-1]`\\n\\nRotate by 1 and calculate again (clockwise or counterclockwise doesn\\'t matter, also clockwise and counterclockwise doesn\\'t make any sense for a 1D array!)\\n`sum_1 = 0 * A[1] + 1 * A[2] + ... + (n-2) * A[n-1] + (n-1) * A[0]`\\n\\nA simple algebra shows that: `sum_1 = sum_0 + n*A[0] - sum(A)`.\\n\\nIn general, `sum_i = sum_{i-1} - n * A[i] - sum(A)` and everything on RHS can be calculated in `O(1)` time, which is a rolling sum.\\n\\nTime: `O(N)`\\nSpace: `O(1)`\\n\\n```python\\nclass Solution:\\n    def maxRotateFunction(self, A):\\n        ans = -math.inf\\n        sumA, lenA = sum(A), len(A)\\n        roll = sum(i*x for i,x in enumerate(A))\\n        for x in A:\\n            ans = max(ans, roll)\\n            roll += lenA*x - sumA\\n        return ans\\n```",
                "solutionTags": [],
                "code": "```python\\nclass Solution:\\n    def maxRotateFunction(self, A):\\n        ans = -math.inf\\n        sumA, lenA = sum(A), len(A)\\n        roll = sum(i*x for i,x in enumerate(A))\\n        for x in A:\\n            ans = max(ans, roll)\\n            roll += lenA*x - sumA\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1129947,
                "title": "python-solution-with-a-simple-example",
                "content": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        \\n        \\'\\'\\'\\n        Example:\\n        n = 5 \\n        A = [a, b, c, d, e]\\n        \\n        k = 0:\\n        B = [a, b, c, d, e]\\n        F_0 =  0*a + 1*b + 2*c + 3*d + 4*e\\n        \\n        k = 1: \\n        B = [e, a, b, c, d]\\n        F_1 =  1*a + 2*b + 3*c + 4*d + 0*e\\n     ______________________________________________________  \\n        F_1 - F_0 =  1*a + 1*b + 1*c + 1*d - 4*e = sum - 4*e\\n        F_1 = F_0 + sum - n*A[-1]\\n     ______________________________________________________  \\n\\n        k = 2: \\n        B = [d, e, a, b, c]\\n        F_2 =  2*a + 3*b + 4*c + 0*d + 1*e\\n     ______________________________________________________  \\n        F_2 - F_1 =  1*a + 1*b + 1*c + 1*e - 4*d = sum - 4*d\\n        F_2 = F_1 + sum - n*A[-2]\\n     ______________________________________________________  \\n        \\n        k = 3: \\n        B = [c, d, e, a, b]\\n        F_3 =  3*a + 4*b + 0*c + 1*d + 2*e\\n     ______________________________________________________  \\n        F_3 - F_2 =  1*a + 1*b + 1*d + 1*e - 4*c = sum - 4*c\\n        F_3 = F_2 + sum - n*A[-3]\\n     ______________________________________________________  \\n        \\n        General Rule:\\n                F(i+1) = F(i) + sum - n * A[-1 * (i+1)]\\n        \\'\\'\\'\\n        \\n        sum_A = sum(A)\\n        n = len(A)\\n        \\n        # cur_sum is F_0\\n        cur_sum = sum(i*n for i,n in enumerate(A))\\n        max_sum = cur_sum\\n        \\n        for i in range(1, n):\\n            cur_sum = cur_sum + sum_A - n*A[-i]\\n            if (cur_sum > max_sum):\\n                max_sum = cur_sum\\n                \\n        return max_sum\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        \\n        \\'\\'\\'\\n        Example:\\n        n = 5 \\n        A = [a, b, c, d, e]\\n        \\n        k = 0:\\n        B = [a, b, c, d, e]\\n        F_0 =  0*a + 1*b + 2*c + 3*d + 4*e\\n        \\n        k = 1: \\n        B = [e, a, b, c, d]\\n        F_1 =  1*a + 2*b + 3*c + 4*d + 0*e\\n     ______________________________________________________  \\n        F_1 - F_0 =  1*a + 1*b + 1*c + 1*d - 4*e = sum - 4*e\\n        F_1 = F_0 + sum - n*A[-1]\\n     ______________________________________________________  \\n\\n        k = 2: \\n        B = [d, e, a, b, c]\\n        F_2 =  2*a + 3*b + 4*c + 0*d + 1*e\\n     ______________________________________________________  \\n        F_2 - F_1 =  1*a + 1*b + 1*c + 1*e - 4*d = sum - 4*d\\n        F_2 = F_1 + sum - n*A[-2]\\n     ______________________________________________________  \\n        \\n        k = 3: \\n        B = [c, d, e, a, b]\\n        F_3 =  3*a + 4*b + 0*c + 1*d + 2*e\\n     ______________________________________________________  \\n        F_3 - F_2 =  1*a + 1*b + 1*d + 1*e - 4*c = sum - 4*c\\n        F_3 = F_2 + sum - n*A[-3]\\n     ______________________________________________________  \\n        \\n        General Rule:\\n                F(i+1) = F(i) + sum - n * A[-1 * (i+1)]\\n        \\'\\'\\'\\n        \\n        sum_A = sum(A)\\n        n = len(A)\\n        \\n        # cur_sum is F_0\\n        cur_sum = sum(i*n for i,n in enumerate(A))\\n        max_sum = cur_sum\\n        \\n        for i in range(1, n):\\n            cur_sum = cur_sum + sum_A - n*A[-i]\\n            if (cur_sum > max_sum):\\n                max_sum = cur_sum\\n                \\n        return max_sum\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1030064,
                "title": "python-solution",
                "content": "```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        # len of list\\n        n = len(A)\\n        \\n        # summation of A\\n        summation = sum(A)\\n        \\n        # cal F(0)\\n        current = max_ = sum(i * A[i] for i in range(n))\\n        \\n        # loop\\n        for i in range(n - 1, 0, -1):\\n            current = current + summation - n * A[i]\\n            max_ = max(max_, current)\\n            \\n        return max_\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        # len of list\\n        n = len(A)\\n        \\n        # summation of A\\n        summation = sum(A)\\n        \\n        # cal F(0)\\n        current = max_ = sum(i * A[i] for i in range(n))\\n        \\n        # loop\\n        for i in range(n - 1, 0, -1):\\n            current = current + summation - n * A[i]\\n            max_ = max(max_, current)\\n            \\n        return max_\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1025510,
                "title": "java-two-pass-o-n-beats-100",
                "content": "We can derive that: `F(k) = F(k-1) + sum(A) - n * A[n-k]`. \\n\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        int prev = 0, sum = 0, n = A.length;\\n        for (int i = 0; i < n; i++) {\\n            prev += i * A[i];\\n            sum += A[i];\\n        }\\n        \\n        int max = prev, curr = 0;\\n        \\n        for (int i = 1; i < n; i++) {\\n            curr = prev + sum - n * A[n-i];\\n            max = Math.max(max, curr);\\n            prev = curr;\\n        }\\n        \\n        return max;\\n    }\\n}   \\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        int prev = 0, sum = 0, n = A.length;\\n        for (int i = 0; i < n; i++) {\\n            prev += i * A[i];\\n            sum += A[i];\\n        }\\n        \\n        int max = prev, curr = 0;\\n        \\n        for (int i = 1; i < n; i++) {\\n            curr = prev + sum - n * A[n-i];\\n            max = Math.max(max, curr);\\n            prev = curr;\\n        }\\n        \\n        return max;\\n    }\\n}   \\n```",
                "codeTag": "Java"
            },
            {
                "id": 954636,
                "title": "python-solution-with-explanation",
                "content": "class Solution:\\n\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        # the core idea is to find the difference between consecutive rotation\\n        # for example [4, 3, 2, 6] ----> [3, 2, 6, 4], the difference is -sum(3,2,6) + 4*(4-1)\\n        # all the elements after 4 will move forward one step, so we deduct sum(3,2,6), and 4 will move to the last place, so we add 4*(4-1)\\n        s = sum(A)\\n        t = 0\\n        for i, n in enumerate(A):#calculate \"sum\" of the original list \\n            t += i*n\\n        m =t\\n        for i in range(len(A)-1):#then we calculate the sum when we A[i] is the last element, the difference between the rotation is (s-A[i]) + A[i]*(len(A)-1)\\n            t = t - (s-A[i]) + A[i]*(len(A)-1)\\n            m = max(m,t)\\n        return m",
                "solutionTags": [],
                "code": "class Solution:\\n\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        # the core idea is to find the difference between consecutive rotation\\n        # for example [4, 3, 2, 6] ----> [3, 2, 6, 4], the difference is -sum(3,2,6) + 4*(4-1)\\n        # all the elements after 4 will move forward one step, so we deduct sum(3,2,6), and 4 will move to the last place, so we add 4*(4-1)\\n        s = sum(A)\\n        t = 0\\n        for i, n in enumerate(A):#calculate \"sum\" of the original list \\n            t += i*n\\n        m =t\\n        for i in range(len(A)-1):#then we calculate the sum when we A[i] is the last element, the difference between the rotation is (s-A[i]) + A[i]*(len(A)-1)\\n            t = t - (s-A[i]) + A[i]*(len(A)-1)\\n            m = max(m,t)\\n        return m",
                "codeTag": "Java"
            },
            {
                "id": 825648,
                "title": "python3-o-n-time",
                "content": "The key is to recognize below relationship \\n`F(i) = F(i-1) + sum(A) - A[-i]` \\n\\n```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        ans = val = sum(i*x for i, x in enumerate(A))\\n        ss = sum(A)\\n        for x in reversed(A):\\n            val += ss - len(A)*x\\n            ans = max(ans, val)\\n        return ans \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def maxRotateFunction(self, A: List[int]) -> int:\\n        ans = val = sum(i*x for i, x in enumerate(A))\\n        ss = sum(A)\\n        for x in reversed(A):\\n            val += ss - len(A)*x\\n            ans = max(ans, val)\\n        return ans \\n```",
                "codeTag": "Java"
            },
            {
                "id": 759877,
                "title": "c-o-n-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        if(A.empty()){\\n            return 0;\\n        }\\n        int n = A.size();\\n        vector<long long> sum(A.size());\\n        sum[0] = A[0];\\n        for(int i = 1;i<A.size();i++){\\n            sum[i] = A[i] + sum[i-1];\\n        }\\n        int k = -1;\\n        long long max = 0;\\n        for(int i = 0;i<A.size();i++) {\\n            long long tmp = (n-i-1) * sum[i] - (sum.back() - sum[i])*(i+1);\\n            if(tmp > max) {\\n                max = tmp; \\n                k = i;\\n            }\\n        }\\n        int ans = 0;\\n        int c = 0;\\n        for(int i = k+1;i<A.size();i++) {\\n            ans += A[i] * c++;\\n        }\\n        for(int i = 0;i<=k;i++) {\\n            ans += A[i] * c++;\\n        }\\n        return ans; \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        if(A.empty()){\\n            return 0;\\n        }\\n        int n = A.size();\\n        vector<long long> sum(A.size());\\n        sum[0] = A[0];\\n        for(int i = 1;i<A.size();i++){\\n            sum[i] = A[i] + sum[i-1];\\n        }\\n        int k = -1;\\n        long long max = 0;\\n        for(int i = 0;i<A.size();i++) {\\n            long long tmp = (n-i-1) * sum[i] - (sum.back() - sum[i])*(i+1);\\n            if(tmp > max) {\\n                max = tmp; \\n                k = i;\\n            }\\n        }\\n        int ans = 0;\\n        int c = 0;\\n        for(int i = k+1;i<A.size();i++) {\\n            ans += A[i] * c++;\\n        }\\n        for(int i = 0;i<=k;i++) {\\n            ans += A[i] * c++;\\n        }\\n        return ans; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 753599,
                "title": "java-simple-o-n",
                "content": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        if(A == null || A.length <= 1) return 0;\\n        int len = A.length;\\n        int sum = 0;\\n        for(int i = 0; i < len; i++) sum += A[i];\\n        int cur = 0;\\n        for(int i = 0; i < len; i++) {\\n            cur += i * A[i];\\n        }\\n        int ans = cur;\\n        for(int i = 1; i < len; i++) {\\n            cur = cur + (sum - len * A[len - i]);\\n            ans = Math.max(ans, cur);\\n        }\\n        return ans;\\n    }\\n}\\n\\n//  F(k + 1) - F(k)\\n//= (0 * b_k[n - 1] + 1 * b_k[0] + ... + (n - 1) * b_k[n - 2])\\n// -(0 * b_k[0] + 1 * b_k[1] + 2 * b_k[2] + ...+(n - 2) * b_k[n - 2] + (n - 1) * b_k[n - 1] + 0 * b_k[0])\\n// = sum - n * b_k[n - 1]\\n// F(k + 1) - F(k) is O(1)",
                "solutionTags": [],
                "code": "class Solution {\\n    public int maxRotateFunction(int[] A) {\\n        if(A == null || A.length <= 1) return 0;\\n        int len = A.length;\\n        int sum = 0;\\n        for(int i = 0; i < len; i++) sum += A[i];\\n        int cur = 0;\\n        for(int i = 0; i < len; i++) {\\n            cur += i * A[i];\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 738992,
                "title": "c-math-solution",
                "content": "There is a tight limit on constraints that\\'s why I have used `long long int`. The solution is made using two arrays prefix and suffix. If you do a bit of math then you can easily find the relation between one form of clockwise to another. This problem is just a implementation.\\n```c++\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& a) {\\n        long long int n=a.size();\\n        if(!n)return n;\\n        long long INF=1e18;\\n        long long int pref[n];\\n        memset(pref,0,sizeof(pref));\\n        long long int sum=0;\\n        long long int mf=n-1;\\n        \\n        pref[0]=mf*a[0];\\n        sum+=a[0];\\n        for(long long int i=1;i<n;i++)\\n        {\\n            pref[i]=pref[i-1]+mf*a[i]-sum;\\n            sum+=a[i];\\n        }\\n        sum=0;\\n        long long int suf[n];\\n        memset(suf,0,sizeof(suf));\\n        suf[n-1]=a[n-1];\\n        for(long long int i=n-2;i>=0;i--)\\n            suf[i]=suf[i+1]+a[i];\\n        for(int i=0;i<n;i++)\\n            sum+=a[i]*i;\\n        suf[0]=sum;\\n        for(long long int i=1;i<n;i++)\\n            suf[i]=suf[i-1]-suf[i];\\n        long long int ans=-INF;\\n        for(long long int i=0;i<n;i++){\\n            if(i==0)\\n                ans=max(ans,suf[i]);\\n            else\\n                ans=max(ans,pref[i-1]+suf[i]);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "```c++\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& a) {\\n        long long int n=a.size();\\n        if(!n)return n;\\n        long long INF=1e18;\\n        long long int pref[n];\\n        memset(pref,0,sizeof(pref));\\n        long long int sum=0;\\n        long long int mf=n-1;\\n        \\n        pref[0]=mf*a[0];\\n        sum+=a[0];\\n        for(long long int i=1;i<n;i++)\\n        {\\n            pref[i]=pref[i-1]+mf*a[i]-sum;\\n            sum+=a[i];\\n        }\\n        sum=0;\\n        long long int suf[n];\\n        memset(suf,0,sizeof(suf));\\n        suf[n-1]=a[n-1];\\n        for(long long int i=n-2;i>=0;i--)\\n            suf[i]=suf[i+1]+a[i];\\n        for(int i=0;i<n;i++)\\n            sum+=a[i]*i;\\n        suf[0]=sum;\\n        for(long long int i=1;i<n;i++)\\n            suf[i]=suf[i-1]-suf[i];\\n        long long int ans=-INF;\\n        for(long long int i=0;i<n;i++){\\n            if(i==0)\\n                ans=max(ans,suf[i]);\\n            else\\n                ans=max(ans,pref[i-1]+suf[i]);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 371009,
                "title": "java-1ms-with-explanation",
                "content": "Observe that if an array has 5 elements [A, B, C, D, E]. \\nF(0) = 0A + 1B + 2C + 3D + 4E\\nF(1) = 0E + 1A + 2B + 3C + 4D\\nF(2) = 0D + 1E + 2A + 3B + 4C\\n\\nF(1) - F(0) = A + B + C + D -4E\\nF(2) - F(1) = A + B + C - 4D + E\\n\\nThus, the difference between iterations are\\nA + B + C + D + E - size * rotating element\\n\\n```\\nint size = A.length;\\nif(size == 0) return 0;\\n\\nint max = Integer.MIN_VALUE;\\nint f0 = 0; //to store F value after each iteration.\\nint arraySum =0; /*to store sum of all variables; A+B+C+D+E in example above*/\\n\\n//initializing variables\\nfor(int i = 0; i < size; i++){\\n\\tf0+= i* A[i];\\n\\tarraySum +=A[i];\\n}\\n\\n//calculate sum after each rotation and compare to max\\nfor(int j = 1; j <= size; j++){\\n\\tf0+=arraySum-size*A[size-j];\\n\\tif(f0>max) max = f0;\\n}\\n\\nreturn max;\\n\\n",
                "solutionTags": [],
                "code": "Observe that if an array has 5 elements [A, B, C, D, E]. \\nF(0) = 0A + 1B + 2C + 3D + 4E\\nF(1) = 0E + 1A + 2B + 3C + 4D\\nF(2) = 0D + 1E + 2A + 3B + 4C\\n\\nF(1) - F(0) = A + B + C + D -4E\\nF(2) - F(1) = A + B + C - 4D + E\\n\\nThus, the difference between iterations are\\nA + B + C + D + E - size * rotating element\\n\\n```\\nint size = A.length;\\nif(size == 0) return 0;\\n\\nint max = Integer.MIN_VALUE;\\nint f0 = 0; //to store F value after each iteration.\\nint arraySum =0; /*to store sum of all variables; A+B+C+D+E in example above*/\\n\\n//initializing variables\\nfor(int i = 0; i < size; i++){\\n\\tf0+= i* A[i];\\n\\tarraySum +=A[i];\\n}\\n\\n//calculate sum after each rotation and compare to max\\nfor(int j = 1; j <= size; j++){\\n\\tf0+=arraySum-size*A[size-j];\\n\\tif(f0>max) max = f0;\\n}\\n\\nreturn max;\\n\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 236926,
                "title": "c-o-n-code",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        long long sumAll = 0;\\n        int sumAccum = 0;\\n        for (int i = 0; i < A.size(); i++) {\\n            sumAll += A[i];\\n            sumAccum += A[i] * i;\\n        }\\n        int answer = sumAccum;\\n        for (int i = A.size() - 1; i >= 0; i--) {\\n            sumAccum += sumAll - A.size() * A[i];\\n            if (sumAccum > answer) {\\n                answer = sumAccum;\\n            }\\n        }\\n        return answer;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        long long sumAll = 0;\\n        int sumAccum = 0;\\n        for (int i = 0; i < A.size(); i++) {\\n            sumAll += A[i];\\n            sumAccum += A[i] * i;\\n        }\\n        int answer = sumAccum;\\n        for (int i = A.size() - 1; i >= 0; i--) {\\n            sumAccum += sumAll - A.size() * A[i];\\n            if (sumAccum > answer) {\\n                answer = sumAccum;\\n            }\\n        }\\n        return answer;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 236635,
                "title": "swift-version",
                "content": "```\\nfunc maxRotateFunction(_ A: [Int]) -> Int { \\n        guard A.count > 1 else { return 0 }\\n        \\n        let n = A.count\\n        \\n        var sum = 0\\n        var function = 0\\n        for i in 0..<n {\\n            function += i * A[i]\\n            sum += A[i]\\n        }\\n        \\n        var maxVal = function\\n        for i in (1..<n).reversed() {\\n            function += sum - n * A[i]\\n            maxVal = max(function, maxVal)\\n        }\\n        \\n        return maxVal\\n    }\\n",
                "solutionTags": [],
                "code": "```\\nfunc maxRotateFunction(_ A: [Int]) -> Int { \\n        guard A.count > 1 else { return 0 }\\n        \\n        let n = A.count\\n        \\n        var sum = 0\\n        var function = 0\\n        for i in 0..<n {\\n            function += i * A[i]\\n            sum += A[i]\\n        }\\n        \\n        var maxVal = function\\n        for i in (1..<n).reversed() {\\n            function += sum - n * A[i]\\n            maxVal = max(function, maxVal)\\n        }\\n        \\n        return maxVal\\n    }\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 128869,
                "title": "java-time-o-n-space-o-1-solution",
                "content": "Just take a look at an example:\\n```A = [a1, a2, a3, a4], let sum = sum of all elements in A```\\n```val1 = 0 * a1 + 1 * a2 + 2 * a3 + 3 * a4```\\n```val2 = 3 * a1 + 0 * a2 + 1 * a3 + 2 * a4``` \\n       ```= 4 * a1 - a1 + 1 * a2 - 1 * a2 + 2 * a3 - a3 + 3 * a4 - a4``` \\n\\t\\t\\t```\\t= 4 * a1 + 1 * a2 + 2 * a3 + 3 * a4 - (a1 + a2 + a3 + a4) = val1 - sum + 4 * a1 ```\\nsimilarly, ```val3 = val2 - sum + 4 * a2, val4 = val3 - sum + 4 * a3```, so all possible values of rotation function ```F(k)``` can be calculated based on the previous result in ```O(1)``` time. The code is down below for reference:\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        if (A == null || A.length == 0) return 0;\\n        int sum = 0, val = 0;\\n        for (int i = 0; i <A.length; i++) {\\n            sum += A[i];\\n            val += i * A[i];\\n        }\\n        \\n        int max = val;\\n        for (int i = 1; i < A.length; i++) {\\n            val = val - sum + A[i - 1] * A.length;\\n            max = Math.max(val, max);\\n        }\\n        \\n        return max;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```A = [a1, a2, a3, a4], let sum = sum of all elements in A```\n```val1 = 0 * a1 + 1 * a2 + 2 * a3 + 3 * a4```\n```val2 = 3 * a1 + 0 * a2 + 1 * a3 + 2 * a4```\n```= 4 * a1 - a1 + 1 * a2 - 1 * a2 + 2 * a3 - a3 + 3 * a4 - a4```\n```\\t= 4 * a1 + 1 * a2 + 2 * a3 + 3 * a4 - (a1 + a2 + a3 + a4) = val1 - sum + 4 * a1 ```\n```val3 = val2 - sum + 4 * a2, val4 = val3 - sum + 4 * a3```\n```F(k)```\n```O(1)```\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] A) {\\n        if (A == null || A.length == 0) return 0;\\n        int sum = 0, val = 0;\\n        for (int i = 0; i <A.length; i++) {\\n            sum += A[i];\\n            val += i * A[i];\\n        }\\n        \\n        int max = val;\\n        for (int i = 1; i < A.length; i++) {\\n            val = val - sum + A[i - 1] * A.length;\\n            max = Math.max(val, max);\\n        }\\n        \\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87841,
                "title": "simple-python-o-n",
                "content": "~~~\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        su=0\\n        for i,n in enumerate(A):\\n            su+=i*n\\n        ret=max(su,-2**31)\\n        total=sum(A)\\n        for i in xrange(len(A)-1,-1,-1):\\n            su+=total-(len(A))*A[i]\\n            ret=max(su,ret)\\n        return ret",
                "solutionTags": [],
                "code": "~~~\\nclass Solution(object):\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        su=0\\n        for i,n in enumerate(A):\\n            su+=i*n\\n        ret=max(su,-2**31)\\n        total=sum(A)\\n        for i in xrange(len(A)-1,-1,-1):\\n            su+=total-(len(A))*A[i]\\n            ret=max(su,ret)\\n        return ret",
                "codeTag": "Java"
            },
            {
                "id": 87846,
                "title": "c-solution-in-9ms",
                "content": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        /*\\n        A = [4, 3, 2, 6]       \\n        F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\n        F(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\n        F(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\\n        F(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\\n        --> F(1) = F(0) + Sum - 6 * (3+1) = F(0) + Sum - A[n-j] * n\\n        */\\n        int n = A.size();\\n        int ValCurr = 0, ValSum = 0;\\n        for(int i=0; i<n; i++){\\n            ValCurr += i * A[i];\\n            ValSum += A[i];\\n        }\\n        int j = 1, ValMax = ValCurr;\\n        while( j < n ){\\n            // update to the next\\n            ValCurr += ValSum - n * A[n-j];\\n            if(ValCurr > ValMax) ValMax = ValCurr;\\n            j++;\\n        }\\n        return ValMax;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        /*\\n        A = [4, 3, 2, 6]       \\n        F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\\n        F(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\\n        F(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\\n        F(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\\n        --> F(1) = F(0) + Sum - 6 * (3+1) = F(0) + Sum - A[n-j] * n\\n        */\\n        int n = A.size();\\n        int ValCurr = 0, ValSum = 0;\\n        for(int i=0; i<n; i++){\\n            ValCurr += i * A[i];\\n            ValSum += A[i];\\n        }\\n        int j = 1, ValMax = ValCurr;\\n        while( j < n ){\\n            // update to the next\\n            ValCurr += ValSum - n * A[n-j];\\n            if(ValCurr > ValMax) ValMax = ValCurr;\\n            j++;\\n        }\\n        return ValMax;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87855,
                "title": "c-solution",
                "content": "```\\n//\\u905e\\u63a8\\u516c\\u5f0f\\u4e43 F(k) = F(k - 1) + S - n * B_{k - 1}(n - 1) \\n//               = F(k - 1) + S - n * B_{0}(n - k)\\n//\\u9019\\u88e1B_{k}(i) = B_{0}((i - k) % n), S\\u662f\\u6240\\u6709A[i], i = 0, 1, ..., n - 1\\u4e4b\\u548c\\u3002\\n\\nclass Solution {\\npublic:\\n\\tint maxRotateFunction(vector<int>& A) {\\n\\t\\tint n = A.size();\\n\\t\\tif (n == 0) return 0;\\n\\t\\tif (n == 1) return 0;\\n\\t\\tint max_sum = INT_MIN;\\n\\t\\tint sum = 0;\\n\\t\\tfor (int i = 0; i < n; ++i) {\\n\\t\\t\\tsum += A[i];\\n\\t\\t}\\n\\t\\tint F = 0;\\n\\t\\tfor (int j = 0; j < n; ++j) {\\n\\t\\t\\tF += j * A[j];\\n\\t\\t}\\n\\t\\tmax_sum = max(max_sum, F);\\n\\t\\tfor (int k = 1; k < n; ++k) {\\n\\t\\t\\tF += sum - n * A[n - k];\\n\\t\\t\\tmax_sum = max(max_sum, F);\\n\\t\\t}\\n\\t\\treturn max_sum;\\n\\t}\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Dynamic Programming"
                ],
                "code": "```\\n//\\u905e\\u63a8\\u516c\\u5f0f\\u4e43 F(k) = F(k - 1) + S - n * B_{k - 1}(n - 1) \\n//               = F(k - 1) + S - n * B_{0}(n - k)\\n//\\u9019\\u88e1B_{k}(i) = B_{0}((i - k) % n), S\\u662f\\u6240\\u6709A[i], i = 0, 1, ..., n - 1\\u4e4b\\u548c\\u3002\\n\\nclass Solution {\\npublic:\\n\\tint maxRotateFunction(vector<int>& A) {\\n\\t\\tint n = A.size();\\n\\t\\tif (n == 0) return 0;\\n\\t\\tif (n == 1) return 0;\\n\\t\\tint max_sum = INT_MIN;\\n\\t\\tint sum = 0;\\n\\t\\tfor (int i = 0; i < n; ++i) {\\n\\t\\t\\tsum += A[i];\\n\\t\\t}\\n\\t\\tint F = 0;\\n\\t\\tfor (int j = 0; j < n; ++j) {\\n\\t\\t\\tF += j * A[j];\\n\\t\\t}\\n\\t\\tmax_sum = max(max_sum, F);\\n\\t\\tfor (int k = 1; k < n; ++k) {\\n\\t\\t\\tF += sum - n * A[n - k];\\n\\t\\t\\tmax_sum = max(max_sum, F);\\n\\t\\t}\\n\\t\\treturn max_sum;\\n\\t}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87884,
                "title": "custom-test-passes-but-submission-fails",
                "content": "I have solved the problem with O(n^2) which is not best. But my program fails on the following test case :\\n[2147483647,2147483647]\\nI have used this as a custom test case and run the code. It gives the result as expected:\\n\\nYour input\\n\\n[2147483647,2147483647]\\nYour answer\\n2147483647\\nExpected answer\\n2147483647\\n\\nHere is my code:\\n```\\nclass Solution {\\n    int calculateF(vector<int>& B)\\n    {\\n        static int j = 0;\\n        int maxval = 0;\\n        int totalCount = B.size();\\n        for(int i = 0; i < totalCount; i++)\\n            maxval += ((totalCount - j + i) % totalCount)*B[i];\\n        j++;\\n        return maxval;\\n    }\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        int max = INT_MIN;\\n         int totalCount = A.size();\\n        if (totalCount == 0) return 0;\\n        for (int i = 0; i <totalCount;i++)\\n        {\\n            int calc = calculateF(A); \\n            max = max < calc ? calc:max;\\n        }\\n        return max;\\n    }\\n};\\n\\n```\\n\\nDo you anyone have any idea why it fails?",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    int calculateF(vector<int>& B)\\n    {\\n        static int j = 0;\\n        int maxval = 0;\\n        int totalCount = B.size();\\n        for(int i = 0; i < totalCount; i++)\\n            maxval += ((totalCount - j + i) % totalCount)*B[i];\\n        j++;\\n        return maxval;\\n    }\\npublic:\\n    int maxRotateFunction(vector<int>& A) {\\n        int max = INT_MIN;\\n         int totalCount = A.size();\\n        if (totalCount == 0) return 0;\\n        for (int i = 0; i <totalCount;i++)\\n        {\\n            int calc = calculateF(A); \\n            max = max < calc ? calc:max;\\n        }\\n        return max;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87898,
                "title": "my-javascript-solution",
                "content": "The solution has already been introduced by others, such as: https://discuss.leetcode.com/topic/58459/java-o-n-solution-with-explanation .\\nI just used JavaScript to implement it.\\n```\\n/**\\n * @param {number[]} A\\n * @return {number}\\n */\\nvar maxRotateFunction = function(A) {\\n    if(A.length===0) return 0;\\n\\n    var res = [],\\n       n = A.length,\\n       sum=0,\\n       f=0;\\n      \\n    for(var i=0;i<n;i++){\\n          sum += A[i];\\n          f += i*A[i];\\n    }\\n    \\n    res[0] = f;\\n    for (var j = 1; j < n; j++) {\\n        res[j] = res[j-1] + sum - n*A[n-j];\\n    }\\n    return Math.max(...res);\\n}\\n```",
                "solutionTags": [],
                "code": "```\\n/**\\n * @param {number[]} A\\n * @return {number}\\n */\\nvar maxRotateFunction = function(A) {\\n    if(A.length===0) return 0;\\n\\n    var res = [],\\n       n = A.length,\\n       sum=0,\\n       f=0;\\n      \\n    for(var i=0;i<n;i++){\\n          sum += A[i];\\n          f += i*A[i];\\n    }\\n    \\n    res[0] = f;\\n    for (var j = 1; j < n; j++) {\\n        res[j] = res[j-1] + sum - n*A[n-j];\\n    }\\n    return Math.max(...res);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 87900,
                "title": "easy-to-understand-python-o-n-solution-in-55ms",
                "content": "```class Solution(object):\\n\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n = len(A)\\n        value = 0\\n        for i in range(n):\\n            value += i * A[i]\\n\\n        max_value = value\\n\\n        sumA = sum(A)\\n\\n        for i in range(n):\\n            value = value + sumA - n*A[n-i-1]\\n            max_value = max(max_value, value)\\n\\n        return max_value\\n```",
                "solutionTags": [],
                "code": "```class Solution(object):\\n\\n    def maxRotateFunction(self, A):\\n        \"\"\"\\n        :type A: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n = len(A)\\n        value = 0\\n        for i in range(n):\\n            value += i * A[i]\\n\\n        max_value = value\\n\\n        sumA = sum(A)\\n\\n        for i in range(n):\\n            value = value + sumA - n*A[n-i-1]\\n            max_value = max(max_value, value)\\n\\n        return max_value\\n```",
                "codeTag": "Java"
            },
            {
                "id": 87907,
                "title": "concise-c-solution",
                "content": "```\\n#define max(a, b) (a) > (b) ? (a) : (b)\\n\\nint maxRotateFunction(int* A, int ASize) {\\n    long sum, maxS, f;\\n    int i;\\n    for (f = i = sum = 0; i < ASize; i++) {\\n        sum += A[i];\\n        f += i * A[i];\\n    }\\n    for (i = 1, maxS = f; i < ASize; i++, maxS = max(maxS, f))\\n        f = f + sum - ASize * A[ASize - i];\\n    return maxS;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\n#define max(a, b) (a) > (b) ? (a) : (b)\\n\\nint maxRotateFunction(int* A, int ASize) {\\n    long sum, maxS, f;\\n    int i;\\n    for (f = i = sum = 0; i < ASize; i++) {\\n        sum += A[i];\\n        f += i * A[i];\\n    }\\n    for (i = 1, maxS = f; i < ASize; i++, maxS = max(maxS, f))\\n        f = f + sum - ASize * A[ASize - i];\\n    return maxS;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4104127,
                "title": "c-o-n",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n = nums.size();\\n        int total = 0;\\n        int cur = 0;\\n        for(int i=0; i<n; i++){\\n            total += nums[i];\\n            cur +=nums[i]*i;\\n        }\\n        int mx = cur;\\n        for(int i=n-1; i>=1; i--){\\n            cur = cur -nums[i]*(n-1)+total-nums[i];\\n            mx = max(cur, mx);\\n        }\\n        return mx;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n = nums.size();\\n        int total = 0;\\n        int cur = 0;\\n        for(int i=0; i<n; i++){\\n            total += nums[i];\\n            cur +=nums[i]*i;\\n        }\\n        int mx = cur;\\n        for(int i=n-1; i>=1; i--){\\n            cur = cur -nums[i]*(n-1)+total-nums[i];\\n            mx = max(cur, mx);\\n        }\\n        return mx;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4090684,
                "title": "o-n-algorithm-with-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nEvery time you rotate the array, every number (except the last one) increments its index by 1, meaning that its contribution to the sum increases by its own value. However, the last number\\'s index becomes 0 after rotation, meaning that its contribution to the sum decreases by n*last_number_value.\\n\\nThis leads to the observed pattern where F(k) = F(k-1) + sum of array - n*last_number.\\n\\n# Approach\\n1.Calculate the initial sum for F(0):\\ncurrent_sum = sum(i * nums[i] for i in range(n))\\n\\n2. Calculate the total sum of the array:\\ntotal_sum = sum(nums)\\n\\n3. Initialize max_sum with the value of current_sum.\\n\\n4. Iterate over the numbers from 1 to n-1 (each step simulating a rotation) and use the above observation to calculate the next value of F(k):\\ncurrent_sum += total_sum - n * nums[n-i]\\n\\n5. Update max_sum with the greater value between max_sum and current_sum during each iteration.\\n\\n6. Return max_sum.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nwe can calculate F(k) for each rotation in O(1) time, making the overall algorithm $$O(n)$$, instead of the naive $$O(n^2)$$.\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def maxRotateFunction(self, nums):\\n        n = len(nums)\\n        total_sum = sum(nums)\\n        current_sum = sum(i * nums[i] for i in range(n)) \\n        max_sum = current_sum   \\n        for i in range(1, n):\\n            current_sum += total_sum - n * nums[n-i]  \\n            max_sum = max(max_sum, current_sum)\\n            \\n        return max_sum\\n        return max(res)\\n\\n        \\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def maxRotateFunction(self, nums):\\n        n = len(nums)\\n        total_sum = sum(nums)\\n        current_sum = sum(i * nums[i] for i in range(n)) \\n        max_sum = current_sum   \\n        for i in range(1, n):\\n            current_sum += total_sum - n * nums[n-i]  \\n            max_sum = max(max_sum, current_sum)\\n            \\n        return max_sum\\n        return max(res)\\n\\n        \\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4041723,
                "title": "golang-o-n-solution",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunc maxRotateFunction(nums []int) int {\\n    allSum := 0\\n    tmpSum := 0\\n\\n    for i := 0; i < len(nums); i++ {\\n        allSum += nums[i]\\n        tmpSum += nums[i] * i\\n    }\\n\\n    ans := tmpSum\\n\\n    for i := len(nums) - 1; i > 0; i-- {\\n        tmpSum -= len(nums) * nums[i]\\n        tmpSum += allSum\\n        ans = max(ans, tmpSum)\\n    }\\n\\n    return ans\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a \\n    }\\n    return b\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc maxRotateFunction(nums []int) int {\\n    allSum := 0\\n    tmpSum := 0\\n\\n    for i := 0; i < len(nums); i++ {\\n        allSum += nums[i]\\n        tmpSum += nums[i] * i\\n    }\\n\\n    ans := tmpSum\\n\\n    for i := len(nums) - 1; i > 0; i-- {\\n        tmpSum -= len(nums) * nums[i]\\n        tmpSum += allSum\\n        ans = max(ans, tmpSum)\\n    }\\n\\n    return ans\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a \\n    }\\n    return b\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4011111,
                "title": "easy-c-o-n-t-c-o-1-s-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n= nums.size();\\n        int ans=0,sum=0;\\n        for(int i=0;i<n;i++){\\n            sum+= nums[i];\\n            ans+= i*nums[i];\\n        }\\n        int j=n-1;\\n        int res=ans;\\n        while(j>0){\\n            ans= ans+sum-n*nums[j];\\n            res= max(res,ans);\\n            j--;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int maxRotateFunction(vector<int>& nums) {\\n        int n= nums.size();\\n        int ans=0,sum=0;\\n        for(int i=0;i<n;i++){\\n            sum+= nums[i];\\n            ans+= i*nums[i];\\n        }\\n        int j=n-1;\\n        int res=ans;\\n        while(j>0){\\n            ans= ans+sum-n*nums[j];\\n            res= max(res,ans);\\n            j--;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4010874,
                "title": "java-100-faster-using-sum-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int n=nums.length;\\n        if(n==0) return 0;\\n        int sum=0, start=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            start+=(i*nums[i]);\\n        }\\n        int max=start;\\n        for(int i=n-1;i>=0;i--){\\n            start+=sum- n*nums[i];\\n            max=Math.max(max, start);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int maxRotateFunction(int[] nums) {\\n        int n=nums.length;\\n        if(n==0) return 0;\\n        int sum=0, start=0;\\n        for(int i=0;i<n;i++){\\n            sum+=nums[i];\\n            start+=(i*nums[i]);\\n        }\\n        int max=start;\\n        for(int i=n-1;i>=0;i--){\\n            start+=sum- n*nums[i];\\n            max=Math.max(max, start);\\n        }\\n        return max;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4008025,
                "title": "simple-javascript-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar maxRotateFunction = function(nums) {\\n    let n = nums.length;\\n    let dp = 0;\\n    \\n    let sum = 0; \\n    for (let i=0; i<n;i++) {\\n        sum += nums[i];\\n        dp += i*nums[i];\\n    }\\n    let max = dp;\\n    for (let i=1; i<n;i++) {\\n        dp += sum - nums[n-i]*n;\\n        max = Math.max(max, dp);\\n    } \\n    return max;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar maxRotateFunction = function(nums) {\\n    let n = nums.length;\\n    let dp = 0;\\n    \\n    let sum = 0; \\n    for (let i=0; i<n;i++) {\\n        sum += nums[i];\\n        dp += i*nums[i];\\n    }\\n    let max = dp;\\n    for (let i=1; i<n;i++) {\\n        dp += sum - nums[n-i]*n;\\n        max = Math.max(max, dp);\\n    } \\n    return max;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4005748,
                "title": "just-another-javascript-solution-beats-100-00",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n![\\u0421\\u043D\\u0438\\u043C\\u043E\\u043A \\u044D\\u043A\\u0440\\u0430\\u043D\\u0430 2023-09-05 \\u0432 21.07.16.png](https://assets.leetcode.com/users/images/adb0144a-ce35-459a-af07-fa0bf4c63787_1693922861.692572.png)\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar maxRotateFunction = function(nums) {\\n    let res = 0, sum = 0\\n\\n    for(let i = 0; i < nums.length; i++) {\\n        res += nums[i] * i\\n        sum += nums[i]\\n    }\\n\\n    let buff = res;\\n\\n    for(let i = 0; i < nums.length; i++) {\\n        buff = buff - sum + nums[i] * nums.length\\n        if (buff > res) res = buff\\n    }\\n\\n    return res\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar maxRotateFunction = function(nums) {\\n    let res = 0, sum = 0\\n\\n    for(let i = 0; i < nums.length; i++) {\\n        res += nums[i] * i\\n        sum += nums[i]\\n    }\\n\\n    let buff = res;\\n\\n    for(let i = 0; i < nums.length; i++) {\\n        buff = buff - sum + nums[i] * nums.length\\n        if (buff > res) res = buff\\n    }\\n\\n    return res\\n};\\n```",
                "codeTag": "Unknown"
            }
        ],
        "discussions": [
            {
                "id": 1566260,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1775531,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1575453,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1573033,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1572645,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1757218,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1571669,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 2063124,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 2045590,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 2032317,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1566260,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1775531,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1575453,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1573033,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1572645,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1757218,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 1571669,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 2063124,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 2045590,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            },
            {
                "id": 2032317,
                "content": [
                    {
                        "username": "daffyang",
                        "content": "The function is a product of matrices ,like:\\n  F(k) =   [k,  k+1...n-2,n-1,0,....k-1] * A[n]\\n  F(k+1) = [k+1,k+2...n-1,0,  1,.....k] * A[n]\\n so \\n  F(k+1) - F(k) = [1,1,1...-n+1,1,1,1] * A[n] = sum(A[n]) - n * A[n - 1 - k];"
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": "# Useful Tip\\n\\n<h3>Whenever you get struck on these kinds of questions, say for example, it will take O(N) time in solving for one permutation or anything similar to this, and it looks like you have to do this for all N permutations which will make it an overall O(N^2), then 9 out of 10 times there will be a way to calculate the ans for the next permutation if you have previous in constant O(1) time (this is the same case here), or maybe it might take O(logN) time. \\nAlways remeber that when you can\\'t come up with better solution then O(N^2). </h3>"
                    },
                    {
                        "username": "Navaneeth_Bysani",
                        "content": "Whatever solution I see, even in discuss, all are resulting in 5.57% better time and space approach. Solution takes 120ms. Is there a better solution?"
                    },
                    {
                        "username": "sepac",
                        "content": "I\\'m getting 8ms... Did you remove console log statements?"
                    },
                    {
                        "username": "obiwon84",
                        "content": "Im not a fan of test cases like that. While I do understand interger overflows can happen the result of this test case is it vastly scews the ratio of accepted solutions for no real gain. This is especially true since you can choose the language and many languages only have big ints. It only penalizes those using C++ or C with fixed interger sizes. It is almost random on leetcode which problems utilize this trick and which dont\\n\\nIn reality the point where this data is coming into your application would likely limit the INT_MAX to some reasonable number or the input to this function would be much larger then INT_MAX and the signature would be changed.\\n\\nAnyways just one random programmers thoughts was fun to solve again :)\\n\\nCheers"
                    },
                    {
                        "username": "smm12",
                        "content": "Hello,\\n\\nWhat can be the general thought process to the derivation of the above formula. I can understand what the formula says for this perticular problem but what should be the thought process in the interview so that similar problems can be resolved optimally.\\n\\nCopied the formula from https://leetcode.com/problems/rotate-function/discuss/87862/6-lines-Python"
                    },
                    {
                        "username": "chinmaysk_19",
                        "content": "Really A good Question!\\nDevelop a equation between F(0) and F(1)---->F(1)-F(0)---->Develop a pattern."
                    },
                    {
                        "username": "TH0OO",
                        "content": "Re: [Java Solution O(n) with non mathametical explaination](/topic/58616/java-solution-o-n-with-non-mathametical-explaination)"
                    },
                    {
                        "username": "Applethal",
                        "content": "TLE with naive method, no maths involved. Reached case 40/58\n\n `class Solution:\n    def maxRotateFunction(self, nums: List[int]) -> int:\n        if len(nums) == 1:\n            return 0\n        \n        l = []\n\n        while len(l) != len(nums):\n            val = nums[-1]\n            l.append(sum(nums[i] * i for i in range(len(nums))))\n            nums.pop(-1)\n            nums.insert(0, val)\n\n        return max(l)`"
                    },
                    {
                        "username": "shivasaineelam",
                        "content": "o(n^2) is trivial o(n) is hard to come up with\\n"
                    },
                    {
                        "username": "Shubham_Raj22",
                        "content": "`Tips:- `\\n\\n\\n   Follow this relation to generate F(k) by F(k-1)\\n   Here, n is the size of nums, sum is the sum of all elements of nums\\n\\n` dp[i] = dp[i-1]+sum -n*nums[n-i];`"
                    }
                ]
            }
        ]
    },
    {
        "title": "Next Greater Element I",
        "question_content": "<p>The <strong>next greater element</strong> of some element <code>x</code> in an array is the <strong>first greater</strong> element that is <strong>to the right</strong> of <code>x</code> in the same array.</p>\n\n<p>You are given two <strong>distinct 0-indexed</strong> integer arrays <code>nums1</code> and <code>nums2</code>, where <code>nums1</code> is a subset of <code>nums2</code>.</p>\n\n<p>For each <code>0 &lt;= i &lt; nums1.length</code>, find the index <code>j</code> such that <code>nums1[i] == nums2[j]</code> and determine the <strong>next greater element</strong> of <code>nums2[j]</code> in <code>nums2</code>. If there is no next greater element, then the answer for this query is <code>-1</code>.</p>\n\n<p>Return <em>an array </em><code>ans</code><em> of length </em><code>nums1.length</code><em> such that </em><code>ans[i]</code><em> is the <strong>next greater element</strong> as described above.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [4,1,2], nums2 = [1,3,4,2]\n<strong>Output:</strong> [-1,3,-1]\n<strong>Explanation:</strong> The next greater element for each value of nums1 is as follows:\n- 4 is underlined in nums2 = [1,3,<u>4</u>,2]. There is no next greater element, so the answer is -1.\n- 1 is underlined in nums2 = [<u>1</u>,3,4,2]. The next greater element is 3.\n- 2 is underlined in nums2 = [1,3,4,<u>2</u>]. There is no next greater element, so the answer is -1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [2,4], nums2 = [1,2,3,4]\n<strong>Output:</strong> [3,-1]\n<strong>Explanation:</strong> The next greater element for each value of nums1 is as follows:\n- 2 is underlined in nums2 = [1,<u>2</u>,3,4]. The next greater element is 3.\n- 4 is underlined in nums2 = [1,2,3,<u>4</u>]. There is no next greater element, so the answer is -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length &lt;= nums2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums1[i], nums2[i] &lt;= 10<sup>4</sup></code></li>\n\t<li>All integers in <code>nums1</code> and <code>nums2</code> are <strong>unique</strong>.</li>\n\t<li>All the integers of <code>nums1</code> also appear in <code>nums2</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you find an <code>O(nums1.length + nums2.length)</code> solution?",
        "solutions": [
            {
                "id": 97595,
                "title": "java-10-lines-linear-time-complexity-o-n-with-explanation",
                "content": "Key observation:\\nSuppose we have a decreasing sequence followed by a greater number\\nFor example ```[5, 4, 3, 2, 1, 6]``` then the greater number ```6``` is the next greater element for all previous numbers in the sequence\\n\\nWe use a stack to keep a **decreasing** sub-sequence, whenever we see a number ```x``` greater than ```stack.peek()``` we pop all elements less than ```x``` and for all the popped ones, their next greater element is ```x```\\nFor example ```[9, 8, 7, 3, 2, 1, 6]```\\nThe stack will first contain ```[9, 8, 7, 3, 2, 1]``` and then we see ```6``` which is greater than ```1``` so we pop ```1 2 3``` whose next greater element should be ```6```\\n```\\n    public int[] nextGreaterElement(int[] findNums, int[] nums) {\\n        Map<Integer, Integer> map = new HashMap<>(); // map from x to next greater element of x\\n        Stack<Integer> stack = new Stack<>();\\n        for (int num : nums) {\\n            while (!stack.isEmpty() && stack.peek() < num)\\n                map.put(stack.pop(), num);\\n            stack.push(num);\\n        }   \\n        for (int i = 0; i < findNums.length; i++)\\n            findNums[i] = map.getOrDefault(findNums[i], -1);\\n        return findNums;\\n    }\\n```",
                "solutionTags": [],
                "code": "```[5, 4, 3, 2, 1, 6]```\n```6```\n```x```\n```stack.peek()```\n```x```\n```x```\n```[9, 8, 7, 3, 2, 1, 6]```\n```[9, 8, 7, 3, 2, 1]```\n```6```\n```1```\n```1 2 3```\n```6```\n```\\n    public int[] nextGreaterElement(int[] findNums, int[] nums) {\\n        Map<Integer, Integer> map = new HashMap<>(); // map from x to next greater element of x\\n        Stack<Integer> stack = new Stack<>();\\n        for (int num : nums) {\\n            while (!stack.isEmpty() && stack.peek() < num)\\n                map.put(stack.pop(), num);\\n            stack.push(num);\\n        }   \\n        for (int i = 0; i < findNums.length; i++)\\n            findNums[i] = map.getOrDefault(findNums[i], -1);\\n        return findNums;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 97613,
                "title": "c-stack-unordered-map",
                "content": "See more in my github repo [LeetCode](https://github.com/lzl124631x/LeetCode)\\n\\n```cpp\\n// OJ: https://leetcode.com/problems/next-greater-element-i/\\n// Author: github.com/lzl124631x\\n// Time: O(N)\\n// Space: O(N)\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        stack<int> s;\\n        unordered_map<int, int> m;\\n        for (int n : nums) {\\n            while (s.size() && s.top() < n) {\\n                m[s.top()] = n;\\n                s.pop();\\n            }\\n            s.push(n);\\n        }\\n        vector<int> ans;\\n        for (int n : findNums) ans.push_back(m.count(n) ? m[n] : -1);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```cpp\\n// OJ: https://leetcode.com/problems/next-greater-element-i/\\n// Author: github.com/lzl124631x\\n// Time: O(N)\\n// Space: O(N)\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        stack<int> s;\\n        unordered_map<int, int> m;\\n        for (int n : nums) {\\n            while (s.size() && s.top() < n) {\\n                m[s.top()] = n;\\n                s.pop();\\n            }\\n            s.push(n);\\n        }\\n        vector<int> ans;\\n        for (int n : findNums) ans.push_back(m.count(n) ? m[n] : -1);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 824654,
                "title": "python-3-94-64-faster-used-stack-and-dictionary-explanation-added",
                "content": "**Suggestions to make it better are always welcomed.**\\n\\nBasically the problem says, if in nums1 we are working on 4, then in nums2 first find where is 4 and from that index find the next number greater than 4 in nums2. We can see that the solution is always coming from the reverse side of the list nums2. This should tell us to use stack.\\n\\nSteps:\\n1. We traverse nums2 and start storing elements on the top of stack.\\n2. If current number is greater than the top of the stack, then we found a pair. Keep popping from stack till the top of stack is smaller than current number.\\n3. After matching pairs are found, push current number on top of stack.\\n4. Eventually when there are no more elements in nums2 to traverse, but there are elements in stack, we can justify that next bigger element wasn\\'t found for them. Hence we\\'ll put -1 for the remaining elements in stack.\\n\\n```\\ndef nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\tif not nums2:\\n\\t\\treturn None\\n\\n\\tmapping = {}\\n\\tresult = []\\n\\tstack = []\\n\\tstack.append(nums2[0])\\n\\n\\tfor i in range(1, len(nums2)):\\n\\t\\twhile stack and nums2[i] > stack[-1]:       # if stack is not empty, then compare it\\'s last element with nums2[i]\\n\\t\\t\\tmapping[stack[-1]] = nums2[i]           # if the new element is greater than stack\\'s top element, then add this to dictionary \\n\\t\\t\\tstack.pop()                             # since we found a pair for the top element, remove it.\\n\\t\\tstack.append(nums2[i])                      # add the element nums2[i] to the stack because we need to find a number greater than this\\n\\n\\tfor element in stack:                           # if there are elements in the stack for which we didn\\'t find a greater number, map them to -1\\n\\t\\tmapping[element] = -1\\n\\n\\tfor i in range(len(nums1)):\\n\\t\\tresult.append(mapping[nums1[i]])\\n\\treturn result\\n```\\n\\n**I hope that you\\'ve found this useful.\\nIn that case, please upvote. It only motivates me to write more such posts\\uD83D\\uDE03**",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack"
                ],
                "code": "```\\ndef nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\tif not nums2:\\n\\t\\treturn None\\n\\n\\tmapping = {}\\n\\tresult = []\\n\\tstack = []\\n\\tstack.append(nums2[0])\\n\\n\\tfor i in range(1, len(nums2)):\\n\\t\\twhile stack and nums2[i] > stack[-1]:       # if stack is not empty, then compare it\\'s last element with nums2[i]\\n\\t\\t\\tmapping[stack[-1]] = nums2[i]           # if the new element is greater than stack\\'s top element, then add this to dictionary \\n\\t\\t\\tstack.pop()                             # since we found a pair for the top element, remove it.\\n\\t\\tstack.append(nums2[i])                      # add the element nums2[i] to the stack because we need to find a number greater than this\\n\\n\\tfor element in stack:                           # if there are elements in the stack for which we didn\\'t find a greater number, map them to -1\\n\\t\\tmapping[element] = -1\\n\\n\\tfor i in range(len(nums1)):\\n\\t\\tresult.append(mapping[nums1[i]])\\n\\treturn result\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 671261,
                "title": "c-map-stack-commented",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) \\n    {\\n        //since there are no duplicates, we can store them in a map;\\n        \\n        vector<int> res(nums1.size(), -1); //to be returned, initialize it with -1.\\n        stack<int> st;\\n        unordered_map<int, int> umap;\\n        \\n        for(int i=0; i<nums2.size(); i++)\\n        {\\n            int element = nums2[i];\\n            \\n            while(!st.empty() && element > st.top())\\n            {\\n                //NGE of st.top() is element\\n\\t\\t\\t\\t\\n                umap[st.top()] = element;\\n                st.pop();\\n            }\\n            \\n            st.push(element);\\n        }\\n        \\n        for(int i=0; i<nums1.size(); i++)\\n        {\\n            int ele = nums1[i];\\n            \\n            if(umap.find(ele) != umap.end())\\n            {\\n                int nge = umap[ele];\\n                res[i] = nge; //push NGE of desired element\\n            }\\n                \\n        }\\n        \\n        return res;\\n        \\n        \\n    }\\n};\\n```\\n\\n**Upvote if this helped!**",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) \\n    {\\n        //since there are no duplicates, we can store them in a map;\\n        \\n        vector<int> res(nums1.size(), -1); //to be returned, initialize it with -1.\\n        stack<int> st;\\n        unordered_map<int, int> umap;\\n        \\n        for(int i=0; i<nums2.size(); i++)\\n        {\\n            int element = nums2[i];\\n            \\n            while(!st.empty() && element > st.top())\\n            {\\n                //NGE of st.top() is element\\n\\t\\t\\t\\t\\n                umap[st.top()] = element;\\n                st.pop();\\n            }\\n            \\n            st.push(element);\\n        }\\n        \\n        for(int i=0; i<nums1.size(); i++)\\n        {\\n            int ele = nums1[i];\\n            \\n            if(umap.find(ele) != umap.end())\\n            {\\n                int nge = umap[ele];\\n                res[i] = nge; //push NGE of desired element\\n            }\\n                \\n        }\\n        \\n        return res;\\n        \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 97604,
                "title": "python-solution-with-o-n",
                "content": "```\\n        d = {}\\n        st = []\\n        ans = []\\n        \\n        for x in nums:\\n            while len(st) and st[-1] < x:\\n                d[st.pop()] = x\\n            st.append(x)\\n\\n        for x in findNums:\\n            ans.append(d.get(x, -1))\\n            \\n        return ans\\n```",
                "solutionTags": [],
                "code": "```\\n        d = {}\\n        st = []\\n        ans = []\\n        \\n        for x in nums:\\n            while len(st) and st[-1] < x:\\n                d[st.pop()] = x\\n            st.append(x)\\n\\n        for x in findNums:\\n            ans.append(d.get(x, -1))\\n            \\n        return ans\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1579935,
                "title": "java-easy-solution-brute-and-optimal-stack-diagrammatic-explanation",
                "content": "# Brute\\nTime - **O(n^2)**\\n\\n**Code**\\n\\n```java\\npublic int[] nextGreaterElementBrute(int[] nums1, int[] nums2) {\\n\\tint[] ans = new int[nums1.length];\\n\\n\\tfor(int i = 0; i < nums1.length; i++) {\\n\\t\\tint greaterIdx = -1, j = nums2.length - 1;\\n\\t\\twhile(j >= 0 && nums2[j] != nums1[i]) {\\n\\t\\t\\tif(nums2[j] > nums1[i]){\\n\\t\\t\\t\\tgreaterIdx = nums2[j];\\n\\t\\t\\t}\\n\\t\\t\\tj--;\\n\\t\\t}\\n\\t\\tans[i] = greaterIdx;\\n\\t}\\n\\n\\treturn ans;\\n}\\n```\\n\\n**Explanation**\\nThis is actually a bit modified brute force, in this the logic is to start searching backwards until `nums2[j] != nums1[i]` check fails, and update `greaterIdx` to `nums2[j]` if `nums2[j] > nums1[i]`. \\nThen update ans[i] to greaterIdx, it will be -1 in case no greater element and value if exists.\\nThen return ans\\n\\n\\n# Optimal\\nTime - **O(n)** where n is length of nums2 as it is equal to or greater than nums1, \\n\\n**Code**\\n```java\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n\\tint[] ans = new int[nums1.length];\\n\\n\\tStack<Integer> stack = new Stack<>();\\n\\tHashMap<Integer, Integer> map = new HashMap<>();\\n\\n\\t// find out all the next greater elements in nums2 array\\n\\tfor(int num: nums2) {\\n\\t\\t// if num is greater than top elements in stack then it is the next greater element in nums2\\n\\t\\twhile(!stack.isEmpty() && num > stack.peek()) {\\n\\t\\t\\tmap.put(stack.pop(), num);\\n\\t\\t}\\n\\t\\t// then add num to stack\\n\\t\\tstack.add(num);\\n\\t}\\n\\n\\tint i = 0;\\n\\tfor(int num : nums1) {\\n\\t\\tans[i++] = map.getOrDefault(num, -1);\\n\\t}\\n\\n\\treturn ans;\\n}\\n```\\n\\n**Explanation**\\nThis approach uses stack, the main point is to store next greater element for all the elements in `nums2` array. It does that by following steps:-\\n- In this we traverse `nums2` array and add the element to stack if either stack is empty or the element is smaller than the top element.\\n- If case occurs when the element is greater then top in the stack then that means current element is the next greater element for that top element in stack, remove that and add it\\'s entry in map.\\n- Repeat this until either stack becomes empty or that element is no longer larger than top in stack.\\n- Now iterate through nums1 and put entries in ans array by fetching it from map.\\n- return ans\\n\\nHere are some examples for better understanding\\n\\n![image](https://assets.leetcode.com/users/images/e4fd7005-519b-40bc-9b07-ef10fc5e9921_1636997239.2652416.png)\\n\\n![image](https://assets.leetcode.com/users/images/ab02713e-5a91-40c0-a004-d48fcdbc97d2_1636997254.9248097.png)\\n\\n\\nHope it helps\\nDo upvote\\nThanks",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```java\\npublic int[] nextGreaterElementBrute(int[] nums1, int[] nums2) {\\n\\tint[] ans = new int[nums1.length];\\n\\n\\tfor(int i = 0; i < nums1.length; i++) {\\n\\t\\tint greaterIdx = -1, j = nums2.length - 1;\\n\\t\\twhile(j >= 0 && nums2[j] != nums1[i]) {\\n\\t\\t\\tif(nums2[j] > nums1[i]){\\n\\t\\t\\t\\tgreaterIdx = nums2[j];\\n\\t\\t\\t}\\n\\t\\t\\tj--;\\n\\t\\t}\\n\\t\\tans[i] = greaterIdx;\\n\\t}\\n\\n\\treturn ans;\\n}\\n```\n```java\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n\\tint[] ans = new int[nums1.length];\\n\\n\\tStack<Integer> stack = new Stack<>();\\n\\tHashMap<Integer, Integer> map = new HashMap<>();\\n\\n\\t// find out all the next greater elements in nums2 array\\n\\tfor(int num: nums2) {\\n\\t\\t// if num is greater than top elements in stack then it is the next greater element in nums2\\n\\t\\twhile(!stack.isEmpty() && num > stack.peek()) {\\n\\t\\t\\tmap.put(stack.pop(), num);\\n\\t\\t}\\n\\t\\t// then add num to stack\\n\\t\\tstack.add(num);\\n\\t}\\n\\n\\tint i = 0;\\n\\tfor(int num : nums1) {\\n\\t\\tans[i++] = map.getOrDefault(num, -1);\\n\\t}\\n\\n\\treturn ans;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1043638,
                "title": "stack-c-code",
                "content": "class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n       \\n        map<int,int>m1; \\n        stack<int>st;\\n         int n=nums2.size();\\n        \\n      for(int i=n-1;i>=0;i--){\\n          \\n          while(!st.empty() && st.top()<nums2[i]){\\n              st.pop();\\n          }\\n   \\n          if(st.empty()){\\n              m1[nums2[i]]=-1;\\n          }\\n          \\n          else{\\n              m1[nums2[i]]=st.top();\\n          }\\n          \\n          st.push(nums2[i]);\\n \\n          \\n      }\\n        vector<int>ans;\\n        \\n        for(auto i:nums1){\\n            ans.push_back(m1[i]);\\n        }\\n        \\n        \\n        return ans;\\n    }\\n};",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n       \\n        map<int,int>m1; \\n        stack<int>st;\\n         int n=nums2.size();\\n        \\n      for(int i=n-1;i>=0;i--){\\n          \\n          while(!st.empty() && st.top()<nums2[i]){\\n              st.pop();\\n          }",
                "codeTag": "Java"
            },
            {
                "id": 1529299,
                "title": "python-monotonic-stack-explained",
                "content": "Sizes of both arrays are small enough, so we just can do brute-force solution in `O(m * n)`, where `n` is size of `nums2` and `m` is size of `nums1`.\\n\\nIf we want to solve this problem in `O(n)` time, it is not so simple. The idea is to traverse `nums2` and keep stack with decreasing order of elements. When we try to add element, if it is less than last element of stack, we just add it. If it is more than the last element, we extract it from stack and also put it inside `dic`: correspondence between numbers and its next greater element: we need it, because we have also `nums1`, which we need to traverse after. Next, when we traverse `nums1` we can use function `.get(num, -1)`, which will return answer for `num` if it is inside dictionary and `-1` if it was not found.\\n\\n#### Complexity\\nTime and space complexity is `O(n + m)`.\\n\\n#### Code\\n```python\\nclass Solution:\\n    def nextGreaterElement(self, nums1, nums2):\\n        dic, stack = {}, []\\n        \\n        for num in nums2[::-1]:\\n            while stack and num > stack[-1]:\\n                stack.pop()\\n            if stack:\\n                dic[num] = stack[-1]\\n            stack.append(num)\\n            \\n        return [dic.get(num, -1) for num in nums1]\\n```\\n\\nIf you have any questoins, feel free to ask. If you like the solution and explanation, please **upvote!**",
                "solutionTags": [
                    "Monotonic Stack"
                ],
                "code": "```python\\nclass Solution:\\n    def nextGreaterElement(self, nums1, nums2):\\n        dic, stack = {}, []\\n        \\n        for num in nums2[::-1]:\\n            while stack and num > stack[-1]:\\n                stack.pop()\\n            if stack:\\n                dic[num] = stack[-1]\\n            stack.append(num)\\n            \\n        return [dic.get(num, -1) for num in nums1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 97616,
                "title": "meh-1000-is-small",
                "content": "    def nextGreaterElement(self, findNums, nums):\\n        return [next((y for y in nums[nums.index(x):] if y > x), -1) for x in findNums]",
                "solutionTags": [],
                "code": "    def nextGreaterElement(self, findNums, nums):\\n        return [next((y for y in nums[nums.index(x):] if y > x), -1) for x in findNums]",
                "codeTag": "Python3"
            },
            {
                "id": 97620,
                "title": "python-solution-with-detailed-explanation",
                "content": "**Solution**\\n\\n**Next Greater Element I** https://leetcode.com/problems/next-greater-element-i/\\n\\n**Algorithm**\\n* https://discuss.leetcode.com/topic/77916/java-10-lines-linear-time-complexity-o-n-with-explanation\\n* Suppose we have a decreasing sequence followed by a greater number. For example [5, 4, 3, 2, 1, 6] then the greater number 6 is the next greater element for all previous numbers in the sequence.\\n* We use a stack to keep a decreasing sub-sequence, whenever we see a number x greater than stack.peek() we pop all elements less than x and for all the popped ones, their next greater element is x.\\n* For example [9, 8, 7, 3, 2, 1, 6]. The stack will first contain [9, 8, 7, 3, 2, 1] and then we see 6 which is greater than 1 so we pop 1 2 3 whose next greater element should be 6.\\n\\n```\\nclass Solution(object):\\n    def nextGreaterElement(self, findNums, nums):\\n        \"\"\"\\n        :type findNums: List[int]\\n        :type nums: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        cache, st = {}, []\\n        for x in nums:\\n            if len(st) == 0:\\n                st.append(x)\\n            elif x <= st[-1]:\\n                st.append(x)\\n            else:\\n                while st and st[-1] < x:\\n                    cache[st.pop()] = x\\n                st.append(x)\\n        result = []\\n        for x in findNums:\\n            if x in cache:\\n                result.append(cache[x])\\n            else:\\n                result.append(-1)\\n        return result\\n```\\n\\n\\n**Condensed Code**\\n```\\nclass Solution(object):\\n    def nextGreaterElement(self, findNums, nums):\\n        \"\"\"\\n        :type findNums: List[int]\\n        :type nums: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        cache, st = {}, []\\n        for x in nums:\\n            while st and st[-1] < x:\\n                cache[st.pop()] = x\\n            st.append(x)\\n        result = [-1]*len(findNums)\\n        for idx,x in enumerate(findNums):\\n            if x in cache:\\n                result[idx] = cache[x]\\n        return result\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def nextGreaterElement(self, findNums, nums):\\n        \"\"\"\\n        :type findNums: List[int]\\n        :type nums: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        cache, st = {}, []\\n        for x in nums:\\n            if len(st) == 0:\\n                st.append(x)\\n            elif x <= st[-1]:\\n                st.append(x)\\n            else:\\n                while st and st[-1] < x:\\n                    cache[st.pop()] = x\\n                st.append(x)\\n        result = []\\n        for x in findNums:\\n            if x in cache:\\n                result.append(cache[x])\\n            else:\\n                result.append(-1)\\n        return result\\n```\n```\\nclass Solution(object):\\n    def nextGreaterElement(self, findNums, nums):\\n        \"\"\"\\n        :type findNums: List[int]\\n        :type nums: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        cache, st = {}, []\\n        for x in nums:\\n            while st and st[-1] < x:\\n                cache[st.pop()] = x\\n            st.append(x)\\n        result = [-1]*len(findNums)\\n        for idx,x in enumerate(findNums):\\n            if x in cache:\\n                result[idx] = cache[x]\\n        return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 991295,
                "title": "java-o-n-time-o-n-space-using-monotonic-stack-with-explanation",
                "content": "#### Approach:\\nThe idea here is to create a map which will have the mapping of each element from the bigger array (`nums2[]`) and its corresponding greater element. In order to do that we are using a monotone stack in increasing order (top element is smaller than the element below in the stack).\\n\\n#### Algorithm: \\n- We iterate through `nums2[]` and push each element into a stack.\\n- If the current element in the iteration is greater than the top most element in the stack, then we pop it out and add the popped out element as key and the current element as the value (next greater number). \\n- We repeat this process as long as the current element is greater than the top most element in the stack or the stack is empty.\\n- The current element is also added to the stack.\\n- The last element in the `nums2[]` will not have a next element. Hence we are not adding that to the map.\\n- Similarly if there are elements in the stack which does not have a next greater element, remains in the stack and is not moved to the map as the requirement for these elements is to default it to  -1, which is being taken care while fetching values from the map.\\n\\n#### Code:\\n\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] result = new int[nums1.length];\\n        Stack<Integer> stack=new Stack<>();\\n        Map<Integer, Integer> map = new HashMap<>();\\n\\n        for(int num: nums2){            \\n            while(!stack.isEmpty() && num > stack.peek())\\n                map.put(stack.pop(), num);\\n            stack.push(num);            \\n        }\\n        \\n        int i=0;        \\n        for(int num : nums1)\\n            result[i++] = map.getOrDefault(num, -1);\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] result = new int[nums1.length];\\n        Stack<Integer> stack=new Stack<>();\\n        Map<Integer, Integer> map = new HashMap<>();\\n\\n        for(int num: nums2){            \\n            while(!stack.isEmpty() && num > stack.peek())\\n                map.put(stack.pop(), num);\\n            stack.push(num);            \\n        }\\n        \\n        int i=0;        \\n        for(int num : nums1)\\n            result[i++] = map.getOrDefault(num, -1);\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1512784,
                "title": "c-brute-force-optimal-three-soln-stacks-unorderd-map",
                "content": "**Brute Force**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>out;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            for(int j=0;j<nums2.size();j++)\\n            {\\n                if(nums1[i]==nums2[j])\\n                {\\n                    int max_val=-1;\\n                    for(int k=j;k<nums2.size();k++)\\n                    {\\n                        if(nums2[k]>nums2[j])\\n                        {\\n                            max_val=nums2[k];\\n                            break;\\n                        }   \\n                    }\\n                    out.push_back(max_val);\\n                }\\n            }\\n        }\\n        return out;\\n        \\n    }\\n};\\n```\\n\\n**optimized a bit**\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int n=nums2.size();\\n        vector<int>nxtgrt(n,0);\\n        nxtgrt[n-1]=-1;\\n        \\n        //calculating postfix next greator\\n        for(int i=n-2;i>=0;i--)\\n        {\\n            if(nums2[i+1]>nums2[i])\\n            {\\n                nxtgrt[i]=nums2[i+1];\\n            }\\n            else\\n            {\\n                for(int j=i+1;j<=nums2.size()-1;j++)\\n                {\\n                    nxtgrt[i]=-1;\\n                    if(nxtgrt[j]>nums2[i])\\n                    {\\n                        nxtgrt[i]=nxtgrt[j];\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        \\n        //matching and putting value in output vector\\n        vector<int>out;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            for(int j=0;j<nums2.size();j++)\\n            {\\n                if(nums1[i]==nums2[j])\\n                {\\n                    out.push_back(nxtgrt[j]);\\n                    break;\\n                }\\n            }\\n        }\\n        return out;\\n        \\n    }\\n};\\n```\\n\\n**The Optimal Soln**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        stack<int>st;\\n        unordered_map<int,int>mp; //we will be using map as nextgrt array\\n        for(int i=nums2.size()-1;i>=0;i--)\\n        {\\n            while(!st.empty() && st.top()<=nums2[i])\\n            {\\n                st.pop();\\n            }\\n            if(st.empty())\\n                mp[nums2[i]]=-1;\\n            else\\n                mp[nums2[i]]=st.top();\\n        \\n            st.push(nums2[i]);\\n        }\\n        //matching and putting value in output vector\\n        vector<int>out;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            out.push_back(mp[nums1[i]]);\\n        }\\n        return out;\\n        \\n    }\\n};\\n```\\n\\nIf you find any issue in understanding the solutions then comment below, will try to help you.\\nIf you found my solution useful.\\nSo please do upvote and encourage me to document all leetcode problems\\uD83D\\uDE03\\nHappy Coding :)",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>out;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            for(int j=0;j<nums2.size();j++)\\n            {\\n                if(nums1[i]==nums2[j])\\n                {\\n                    int max_val=-1;\\n                    for(int k=j;k<nums2.size();k++)\\n                    {\\n                        if(nums2[k]>nums2[j])\\n                        {\\n                            max_val=nums2[k];\\n                            break;\\n                        }   \\n                    }\\n                    out.push_back(max_val);\\n                }\\n            }\\n        }\\n        return out;\\n        \\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int n=nums2.size();\\n        vector<int>nxtgrt(n,0);\\n        nxtgrt[n-1]=-1;\\n        \\n        //calculating postfix next greator\\n        for(int i=n-2;i>=0;i--)\\n        {\\n            if(nums2[i+1]>nums2[i])\\n            {\\n                nxtgrt[i]=nums2[i+1];\\n            }\\n            else\\n            {\\n                for(int j=i+1;j<=nums2.size()-1;j++)\\n                {\\n                    nxtgrt[i]=-1;\\n                    if(nxtgrt[j]>nums2[i])\\n                    {\\n                        nxtgrt[i]=nxtgrt[j];\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        \\n        //matching and putting value in output vector\\n        vector<int>out;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            for(int j=0;j<nums2.size();j++)\\n            {\\n                if(nums1[i]==nums2[j])\\n                {\\n                    out.push_back(nxtgrt[j]);\\n                    break;\\n                }\\n            }\\n        }\\n        return out;\\n        \\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        stack<int>st;\\n        unordered_map<int,int>mp; //we will be using map as nextgrt array\\n        for(int i=nums2.size()-1;i>=0;i--)\\n        {\\n            while(!st.empty() && st.top()<=nums2[i])\\n            {\\n                st.pop();\\n            }\\n            if(st.empty())\\n                mp[nums2[i]]=-1;\\n            else\\n                mp[nums2[i]]=st.top();\\n        \\n            st.push(nums2[i]);\\n        }\\n        //matching and putting value in output vector\\n        vector<int>out;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            out.push_back(mp[nums1[i]]);\\n        }\\n        return out;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3384541,
                "title": "c-java-python-javascript-optimized-with-stack-10-lines-of-code-brute-force",
                "content": "# Intuition:\\nThe problem asks us to find the next greater element for each element in nums1 in the corresponding position of nums2. If there is no next greater element in nums2, the output should be -1 for that element.\\n\\n# Approach:\\n\\nThere are two common approaches to solve this problem:\\n\\n## Brute Force Approach\\nThe brute force approach is straightforward. For each element in nums1, iterate through nums2 to find the matching element. Once we find the matching element, iterate through the remaining elements in nums2 to find the next greater element. If we find a greater element, update the max variable. Finally, add max to the answer vector.\\n\\n## Using stack with map\\nThe second approach uses a stack and a map. We traverse nums2 and push each element onto the stack. If the current element is greater than the top element of the stack, we pop elements from the stack and add them to the map with the current element as the value. Once we finish traversing nums2, we iterate through nums1 and check if each element has a next greater element in the map. If it has, we update the element in nums1 with the corresponding value in the map. Otherwise, we update the element in nums1 with -1.\\n\\n# Complexity:\\n\\n## Time Complexity:\\n\\n- Approach 1: Brute Force Approach\\nFor each element in nums1, we iterate through nums2. So, the time complexity is O(n*m), where n and m are the lengths of nums1 and nums2, respectively.\\n- Approach 2: Using stack with map\\nWe traverse nums2 once and push each element onto the stack. So, the time complexity of this step is O(m).\\nFor each element in nums1, we check if it has a next greater element in the map. The time complexity of this step is O(n).\\nSo, the overall time complexity is O(n+m).\\n## Space Complexity:\\n\\n- Approach 1: Brute Force Approach\\nWe use an answer vector to store the next greater elements. So, the space complexity is O(n), where n is the length of nums1.\\n- Approach 2: Using stack with map\\nWe use a stack to store the elements and a map to store the next greater elements. So, the space complexity is O(m+n), where m and n are the lengths of nums1 and nums2, respectively.\\n# C++\\n## Approach: Brute Force \\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        for(int i=0;i<nums1.size();i++){\\n            int max=-1;\\n            for(int j=0;j<nums2.size();j++){\\n                int index=j;\\n                if(nums1[i]==nums2[j]){ // Found element in nums2 that matches current element in nums1\\n                     while(index!=nums2.size()){ // Iterate through remaining elements in nums2 to find next greater element\\n                        if(nums2[index]>nums1[i]){\\n                            max=nums2[index]; // Update max if we find a greater element\\n                            break;\\n                        }\\n                        index++;\\n                    }\\n               }\\n            }\\n            ans.push_back(max);\\n        }\\n        return ans;\\n    }\\n};\\n```\\n## Approach: Stack\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> map; // map for next greater element\\n        stack<int> st;\\n        for (int num : nums2) {\\n            while (!st.empty() && st.top() < num){ // Pop elements from stack and update map with next greater element\\n                map[st.top()] = num;\\n                st.pop();\\n            }\\n            st.push(num); // Push current element onto stack\\n        }   \\n        for (int i = 0; i < nums1.size(); i++){ // Check if each element in nums1 has a next greater element in map\\n            nums1[i] = map.count(nums1[i]) ? map[nums1[i]] : -1; // Update element in nums1 with next greater element or -1\\n        }\\n        return nums1;\\n    }\\n};\\n```\\n---\\n# JAVA\\n## Approach: Brute Force \\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] ans = new int[nums1.length];\\n        for(int i = 0; i < nums1.length; i++){\\n            int max = -1;\\n            for(int j = 0; j < nums2.length; j++){\\n                int index = j;\\n                if(nums1[i] == nums2[j]){ // Found element in nums2 that matches current element in nums1\\n                    while(index != nums2.length){ // Iterate through remaining elements in nums2 to find next greater element\\n                        if(nums2[index] > nums1[i]){\\n                            max = nums2[index]; // Update max if we find a greater element\\n                            break;\\n                        }\\n                        index++;\\n                    }\\n                }\\n            }\\n            ans[i] = max;\\n        }\\n        return ans;\\n    }\\n}\\n\\n```\\n## Approach: Stack\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Map<Integer, Integer> map = new HashMap<>(); // map for next greater element\\n        Stack<Integer> stack = new Stack<>();\\n        for (int num : nums2) {\\n            while (!stack.empty() && stack.peek() < num) { // Pop elements from stack and update map with next greater element\\n                map.put(stack.pop(), num);\\n            }\\n            stack.push(num); // Push current element onto stack\\n        }\\n        for (int i = 0; i < nums1.length; i++) { // Check if each element in nums1 has a next greater element in map\\n            nums1[i] = map.containsKey(nums1[i]) ? map.get(nums1[i]) : -1; // Update element in nums1 with next greater element or -1\\n        }\\n        return nums1;\\n    }\\n}\\n\\n```\\n---\\n# Python\\n## Approach: Brute Force \\n```\\nclass Solution(object):\\n    def nextGreaterElement(self, nums1, nums2):\\n        ans = []\\n        for i in range(len(nums1)):\\n            max_num = -1\\n            for j in range(len(nums2)):\\n                index = j\\n                if nums1[i] == nums2[j]: # Found element in nums2 that matches current element in nums1\\n                    while index != len(nums2): # Iterate through remaining elements in nums2 to find next greater element\\n                        if nums2[index] > nums1[i]:\\n                            max_num = nums2[index] # Update max if we find a greater element\\n                            break\\n                        index += 1\\n            ans.append(max_num)\\n        return ans\\n\\n```\\n## Approach: Stack\\n```\\nclass Solution(object):\\n    def nextGreaterElement(self, nums1, nums2):\\n        map = {} # map for next greater element\\n        stack = []\\n        for num in nums2:\\n            while stack and stack[-1] < num: # Pop elements from stack and update map with next greater element\\n                map[stack.pop()] = num\\n            stack.append(num) # Push current element onto stack\\n        for i in xrange(len(nums1)): # Check if each element in nums1 has a next greater element in map\\n            nums1[i] = map.get(nums1[i], -1) # Update element in nums1 with next greater element or -1\\n        return nums1\\n\\n```\\n---\\n# JavaScript\\n## Approach: Brute Force \\n```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n    const ans = [];\\n    for(let i = 0; i < nums1.length; i++){\\n        let max = -1;\\n        for(let j = 0; j < nums2.length; j++){\\n            let index = j;\\n            if(nums1[i] === nums2[j]){ // Found element in nums2 that matches current element in nums1\\n                while(index !== nums2.length){ // Iterate through remaining elements in nums2 to find next greater element\\n                    if(nums2[index] > nums1[i]){\\n                        max = nums2[index]; // Update max if we find a greater element\\n                        break;\\n                    }\\n                    index++;\\n                }\\n            }\\n        }\\n        ans.push(max);\\n    }\\n    return ans;\\n}\\n\\n```\\n## Approach: Stack\\n```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n    const map = new Map(); // map for next greater element\\n    const stack = [];\\n    for (let num of nums2) {\\n        while (stack.length && stack[stack.length - 1] < num) { // Pop elements from stack and update map with next greater element\\n            map.set(stack.pop(), num);\\n        }\\n        stack.push(num); // Push current element onto stack\\n    }\\n    for (let i = 0; i < nums1.length; i++) { // Check if each element in nums1 has a next greater element in map\\n        nums1[i] = map.has(nums1[i]) ? map.get(nums1[i]) : -1; // Update element in nums1 with next greater element or -1\\n    }\\n    return nums1;\\n}\\n\\n\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "JavaScript",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        for(int i=0;i<nums1.size();i++){\\n            int max=-1;\\n            for(int j=0;j<nums2.size();j++){\\n                int index=j;\\n                if(nums1[i]==nums2[j]){ // Found element in nums2 that matches current element in nums1\\n                     while(index!=nums2.size()){ // Iterate through remaining elements in nums2 to find next greater element\\n                        if(nums2[index]>nums1[i]){\\n                            max=nums2[index]; // Update max if we find a greater element\\n                            break;\\n                        }\\n                        index++;\\n                    }\\n               }\\n            }\\n            ans.push_back(max);\\n        }\\n        return ans;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> map; // map for next greater element\\n        stack<int> st;\\n        for (int num : nums2) {\\n            while (!st.empty() && st.top() < num){ // Pop elements from stack and update map with next greater element\\n                map[st.top()] = num;\\n                st.pop();\\n            }\\n            st.push(num); // Push current element onto stack\\n        }   \\n        for (int i = 0; i < nums1.size(); i++){ // Check if each element in nums1 has a next greater element in map\\n            nums1[i] = map.count(nums1[i]) ? map[nums1[i]] : -1; // Update element in nums1 with next greater element or -1\\n        }\\n        return nums1;\\n    }\\n};\\n```\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] ans = new int[nums1.length];\\n        for(int i = 0; i < nums1.length; i++){\\n            int max = -1;\\n            for(int j = 0; j < nums2.length; j++){\\n                int index = j;\\n                if(nums1[i] == nums2[j]){ // Found element in nums2 that matches current element in nums1\\n                    while(index != nums2.length){ // Iterate through remaining elements in nums2 to find next greater element\\n                        if(nums2[index] > nums1[i]){\\n                            max = nums2[index]; // Update max if we find a greater element\\n                            break;\\n                        }\\n                        index++;\\n                    }\\n                }\\n            }\\n            ans[i] = max;\\n        }\\n        return ans;\\n    }\\n}\\n\\n```\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Map<Integer, Integer> map = new HashMap<>(); // map for next greater element\\n        Stack<Integer> stack = new Stack<>();\\n        for (int num : nums2) {\\n            while (!stack.empty() && stack.peek() < num) { // Pop elements from stack and update map with next greater element\\n                map.put(stack.pop(), num);\\n            }\\n            stack.push(num); // Push current element onto stack\\n        }\\n        for (int i = 0; i < nums1.length; i++) { // Check if each element in nums1 has a next greater element in map\\n            nums1[i] = map.containsKey(nums1[i]) ? map.get(nums1[i]) : -1; // Update element in nums1 with next greater element or -1\\n        }\\n        return nums1;\\n    }\\n}\\n\\n```\n```\\nclass Solution(object):\\n    def nextGreaterElement(self, nums1, nums2):\\n        ans = []\\n        for i in range(len(nums1)):\\n            max_num = -1\\n            for j in range(len(nums2)):\\n                index = j\\n                if nums1[i] == nums2[j]: # Found element in nums2 that matches current element in nums1\\n                    while index != len(nums2): # Iterate through remaining elements in nums2 to find next greater element\\n                        if nums2[index] > nums1[i]:\\n                            max_num = nums2[index] # Update max if we find a greater element\\n                            break\\n                        index += 1\\n            ans.append(max_num)\\n        return ans\\n\\n```\n```\\nclass Solution(object):\\n    def nextGreaterElement(self, nums1, nums2):\\n        map = {} # map for next greater element\\n        stack = []\\n        for num in nums2:\\n            while stack and stack[-1] < num: # Pop elements from stack and update map with next greater element\\n                map[stack.pop()] = num\\n            stack.append(num) # Push current element onto stack\\n        for i in xrange(len(nums1)): # Check if each element in nums1 has a next greater element in map\\n            nums1[i] = map.get(nums1[i], -1) # Update element in nums1 with next greater element or -1\\n        return nums1\\n\\n```\n```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n    const ans = [];\\n    for(let i = 0; i < nums1.length; i++){\\n        let max = -1;\\n        for(let j = 0; j < nums2.length; j++){\\n            let index = j;\\n            if(nums1[i] === nums2[j]){ // Found element in nums2 that matches current element in nums1\\n                while(index !== nums2.length){ // Iterate through remaining elements in nums2 to find next greater element\\n                    if(nums2[index] > nums1[i]){\\n                        max = nums2[index]; // Update max if we find a greater element\\n                        break;\\n                    }\\n                    index++;\\n                }\\n            }\\n        }\\n        ans.push(max);\\n    }\\n    return ans;\\n}\\n\\n```\n```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n    const map = new Map(); // map for next greater element\\n    const stack = [];\\n    for (let num of nums2) {\\n        while (stack.length && stack[stack.length - 1] < num) { // Pop elements from stack and update map with next greater element\\n            map.set(stack.pop(), num);\\n        }\\n        stack.push(num); // Push current element onto stack\\n    }\\n    for (let i = 0; i < nums1.length; i++) { // Check if each element in nums1 has a next greater element in map\\n        nums1[i] = map.has(nums1[i]) ? map.get(nums1[i]) : -1; // Update element in nums1 with next greater element or -1\\n    }\\n    return nums1;\\n}\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1533016,
                "title": "c-python-monotonic-stack-solution-clean-concise",
                "content": "<iframe src=\"https://leetcode.com/playground/TVqgidR5/shared\" frameBorder=\"0\" width=\"100%\" height=\"480\"></iframe>\\n\\nComplexity:\\n- Time: `O(N + Q)`, where `N <= 1000` is length of `nums2` array, `Q <= 1000` is length of `nums1` array.\\n- Space: `O(N + Q)`",
                "solutionTags": [],
                "code": "<iframe src=\"https://leetcode.com/playground/TVqgidR5/shared\" frameBorder=\"0\" width=\"100%\" height=\"480\"></iframe>\\n\\nComplexity:\\n- Time: `O(N + Q)`, where `N <= 1000` is length of `nums2` array, `Q <= 1000` is length of `nums1` array.\\n- Space: `O(N + Q)`",
                "codeTag": "Unknown"
            },
            {
                "id": 523044,
                "title": "python-straightforward-approach-easy-to-understand",
                "content": "1. This is essentially a brute-force approach\\n2. Find where the value is ocurring in nums2 array; ie index\\n3. Start search from that index to end of array num2, if you find a value a greater than the current value.\\n4. If you find, add that into the result array; else add \\'-1\\'\\n5. In the end, return the result\\n\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        # nums1 is a subset of nums2\\n        result = []\\n        \\n        for i, n in list(enumerate(nums1)):\\n            ind = nums2.index(n)\\n            flag = False\\n            for i in range(ind, len(nums2)):\\n                if nums2[i] > n:\\n                    result.append(nums2[i])\\n                    flag = True\\n                    break\\n            if not flag:\\n                result.append(\\'-1\\')\\n                \\n        return result\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        # nums1 is a subset of nums2\\n        result = []\\n        \\n        for i, n in list(enumerate(nums1)):\\n            ind = nums2.index(n)\\n            flag = False\\n            for i in range(ind, len(nums2)):\\n                if nums2[i] > n:\\n                    result.append(nums2[i])\\n                    flag = True\\n                    break\\n            if not flag:\\n                result.append(\\'-1\\')\\n                \\n        return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 515153,
                "title": "python-monotonic-stack",
                "content": "```python\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        stack = []\\n        d = {}\\n        \\n        for e in nums2:\\n            \\n            while(stack and e > stack[-1]):\\n                c = stack.pop()\\n                d[c] = e\\n            \\n            stack.append(e)\\n        \\n        return [d.get(e, -1) for e in nums1]\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```python\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        stack = []\\n        d = {}\\n        \\n        for e in nums2:\\n            \\n            while(stack and e > stack[-1]):\\n                c = stack.pop()\\n                d[c] = e\\n            \\n            stack.append(e)\\n        \\n        return [d.get(e, -1) for e in nums1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 640416,
                "title": "python-sol-by-monotonic-stack-and-dict-w-comment",
                "content": "Python sol by monotonic stack and dict\\n\\n---\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        \\n        # a stack with monotonic decreasing\\n        monotonic_stack = []\\n        \\n        # dictionary:\\n        # key: number\\n        # value: next greater number of key\\n        dict_of_greater_number = {}\\n\\n        # ----------------------------------------------\\n        \\n        # launch linear scan to build dict_of_greater_number\\n        for cur_number in nums2:\\n            \\n            # maintain a monotonic decreasing stack\\n            while monotonic_stack and cur_number > monotonic_stack[-1]:\\n                \\n                pop_out_number = monotonic_stack.pop()\\n                \\n                # next greater number of pop_out_number is cur_number\\n                dict_of_greater_number[pop_out_number] = cur_number\\n            \\n            monotonic_stack.append(cur_number)\\n        # ----------------------------------------------\\n        \\n        # solution output\\n        next_greater_element = []\\n        \\n        # get next greater element by dictionary\\n        for x in nums1:\\n            \\n            if x in dict_of_greater_number:\\n                next_greater_element.append( dict_of_greater_number[x] )\\n                \\n            else:\\n                next_greater_element.append(-1)\\n                \\n        return next_greater_element\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        \\n        # a stack with monotonic decreasing\\n        monotonic_stack = []\\n        \\n        # dictionary:\\n        # key: number\\n        # value: next greater number of key\\n        dict_of_greater_number = {}\\n\\n        # ----------------------------------------------\\n        \\n        # launch linear scan to build dict_of_greater_number\\n        for cur_number in nums2:\\n            \\n            # maintain a monotonic decreasing stack\\n            while monotonic_stack and cur_number > monotonic_stack[-1]:\\n                \\n                pop_out_number = monotonic_stack.pop()\\n                \\n                # next greater number of pop_out_number is cur_number\\n                dict_of_greater_number[pop_out_number] = cur_number\\n            \\n            monotonic_stack.append(cur_number)\\n        # ----------------------------------------------\\n        \\n        # solution output\\n        next_greater_element = []\\n        \\n        # get next greater element by dictionary\\n        for x in nums1:\\n            \\n            if x in dict_of_greater_number:\\n                next_greater_element.append( dict_of_greater_number[x] )\\n                \\n            else:\\n                next_greater_element.append(-1)\\n                \\n        return next_greater_element\\n```",
                "codeTag": "Java"
            },
            {
                "id": 497556,
                "title": "javascript-using-stack-and-map",
                "content": "```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n  const map = {};\\n  const stack = [];\\n  nums2.forEach(n => {\\n    while (stack.length > 0 && stack[stack.length - 1] < n) {\\n      map[stack.pop()] = n;\\n    }\\n    stack.push(n);\\n  });\\n  return nums1.map(n => map[n] || -1);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n  const map = {};\\n  const stack = [];\\n  nums2.forEach(n => {\\n    while (stack.length > 0 && stack[stack.length - 1] < n) {\\n      map[stack.pop()] = n;\\n    }\\n    stack.push(n);\\n  });\\n  return nums1.map(n => map[n] || -1);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 97691,
                "title": "straightforward-python-solution",
                "content": "```\\n    def nextGreaterElement(self, findNums, nums):\\n        def helper(num):\\n            for tmp in nums[nums.index(num):]:\\n                if tmp > num:\\n                    return tmp\\n            return -1\\n\\n        return map(helper, findNums)\\n```",
                "solutionTags": [],
                "code": "```\\n    def nextGreaterElement(self, findNums, nums):\\n        def helper(num):\\n            for tmp in nums[nums.index(num):]:\\n                if tmp > num:\\n                    return tmp\\n            return -1\\n\\n        return map(helper, findNums)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3285190,
                "title": "496-space-92-75-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n1. Create an empty dictionary called next_greater to store the next greater element of each number in nums2.\\n2. Create an empty stack called stack to keep track of the elements whose next greater element is not found yet.\\nLoop through each element num in nums2.\\n3. While the stack is not empty and the current number num is greater than the top element in the stack:\\n4. Pop the top element from the stack and set its next greater element to the current number num by storing it in the next_greater dictionary.\\n5. Add the current number num to the stack.\\n6. Create an empty list called result to store the next greater element of each number in nums1.\\n7. Loop through each element num in nums1.\\n8. If the next greater element of the current number num is found in the next_greater dictionary:\\n9. Append it to the result list.\\nOtherwise, append -1 to the result list.\\n10. Return the result list as the final output.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        # Create a dictionary to store the next greater element of each number in nums2\\n        next_greater = {}\\n        # Create a stack to keep track of the elements whose next greater element is not found yet\\n        stack = []\\n        \\n        # Loop through each element in nums2\\n        for num in nums2:\\n            # While the stack is not empty and the current number is greater than the top element in the stack\\n            while stack and num > stack[-1]:\\n                # Pop the top element from the stack and set its next greater element to the current number\\n                next_greater[stack.pop()] = num\\n            # Add the current number to the stack\\n            stack.append(num)\\n        \\n        # Create a list to store the next greater element of each number in nums1\\n        result = []\\n        # Loop through each element in nums1\\n        for num in nums1:\\n            # If the next greater element of the current number is found\\n            if num in next_greater:\\n                # Append it to the result list\\n                result.append(next_greater[num])\\n            else:\\n                # Otherwise, append -1 to the result list\\n                result.append(-1)\\n        \\n        return result\\n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Hash Table",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        # Create a dictionary to store the next greater element of each number in nums2\\n        next_greater = {}\\n        # Create a stack to keep track of the elements whose next greater element is not found yet\\n        stack = []\\n        \\n        # Loop through each element in nums2\\n        for num in nums2:\\n            # While the stack is not empty and the current number is greater than the top element in the stack\\n            while stack and num > stack[-1]:\\n                # Pop the top element from the stack and set its next greater element to the current number\\n                next_greater[stack.pop()] = num\\n            # Add the current number to the stack\\n            stack.append(num)\\n        \\n        # Create a list to store the next greater element of each number in nums1\\n        result = []\\n        # Loop through each element in nums1\\n        for num in nums1:\\n            # If the next greater element of the current number is found\\n            if num in next_greater:\\n                # Append it to the result list\\n                result.append(next_greater[num])\\n            else:\\n                # Otherwise, append -1 to the result list\\n                result.append(-1)\\n        \\n        return result\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3795932,
                "title": "java-solution-stack-and-hashmap-beats-90",
                "content": "# Intuition\\nThis type of problem is called monotonic stack problems\\nApproach explained in code with comments\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n//starting with the end of array, when stack is empty, there is no greatter element the the last so put -1 in map\\n//push it in stack. Now next element compare it with top element in stack. if nums2 < topof stack\\n//put stack.peek in map else we will keep popping until we find element in stack which is greater than nums2 element\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        // int [] arr = new int[nums2.length];\\n        Stack<Integer> stack = new Stack<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for(int i = nums2.length-1; i>=0; i--){\\n            \\n            if(stack.isEmpty()) {\\n                // arr[i] = -1;\\n                map.put(nums2[i], -1);\\n            }\\n            else if(!stack.isEmpty() && nums2[i]< stack.peek()){\\n                // arr[i]= stack.peek();\\n                map.put(nums2[i], stack.peek());\\n            }\\n            else{ // (!stack.isEmpty() && nums2[i]>= stack.peek())\\n\\n                while(!stack.isEmpty() && nums2[i]>= stack.peek()){\\n                    stack.pop();\\n                }\\n                    if(stack.isEmpty()){\\n                        // arr[i]= -1;\\n                        map.put(nums2[i], -1);\\n                    }\\n                    else{\\n                        // arr[i] = stack.peek();\\n                        map.put(nums2[i], stack.peek());\\n                    }    \\n            }\\n            stack.push(nums2[i]);\\n        }\\n\\n        int ans[] = new int[nums1.length];\\n        for(int i=0; i<nums1.length; i++){\\n            ans[i] = map.get(nums1[i]);\\n        }\\n        return ans;\\n    }\\n}\\n\\n```\\n![upVoteCatt.jpg](https://assets.leetcode.com/users/images/9b769025-fd88-4347-a90a-4e5c36078d82_1689926295.8722274.jpeg)\\n",
                "solutionTags": [
                    "Java",
                    "Hash Table",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\n//starting with the end of array, when stack is empty, there is no greatter element the the last so put -1 in map\\n//push it in stack. Now next element compare it with top element in stack. if nums2 < topof stack\\n//put stack.peek in map else we will keep popping until we find element in stack which is greater than nums2 element\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        // int [] arr = new int[nums2.length];\\n        Stack<Integer> stack = new Stack<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for(int i = nums2.length-1; i>=0; i--){\\n            \\n            if(stack.isEmpty()) {\\n                // arr[i] = -1;\\n                map.put(nums2[i], -1);\\n            }\\n            else if(!stack.isEmpty() && nums2[i]< stack.peek()){\\n                // arr[i]= stack.peek();\\n                map.put(nums2[i], stack.peek());\\n            }\\n            else{ // (!stack.isEmpty() && nums2[i]>= stack.peek())\\n\\n                while(!stack.isEmpty() && nums2[i]>= stack.peek()){\\n                    stack.pop();\\n                }\\n                    if(stack.isEmpty()){\\n                        // arr[i]= -1;\\n                        map.put(nums2[i], -1);\\n                    }\\n                    else{\\n                        // arr[i] = stack.peek();\\n                        map.put(nums2[i], stack.peek());\\n                    }    \\n            }\\n            stack.push(nums2[i]);\\n        }\\n\\n        int ans[] = new int[nums1.length];\\n        for(int i=0; i<nums1.length; i++){\\n            ans[i] = map.get(nums1[i]);\\n        }\\n        return ans;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1243857,
                "title": "c-monotonic-stack-solution",
                "content": "**Intuition**\\nIn order to find the next greater element, we should compare the current element with the elements in the stack. \\n* If current element > top element of the stack, current element is the next greater element of top element. We should also pop the top element because the current element could also be the next greater element of top element\\u2019s previous element.\\n*  If current element <= top element of the stack, current element is not the next greater element. In this case, we push it into the stack and keep looking for the next greater elements.\\n![image](https://assets.leetcode.com/users/images/b9e0877d-458c-476c-858b-d77d67d32420_1622492642.2123594.png)\\n\\n\\n**Implementation**\\n```\\npublic class Solution {\\n    public int[] NextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n        Dictionary<int,int> dic = new Dictionary<int,int>();\\n        Stack<int> stack = new Stack<int>();\\n        foreach(var num in nums2)\\n        {\\n            while(stack.Count > 0 && num > stack.Peek())\\n                dic.Add(stack.Pop(),num);\\n            \\n            stack.Push(num);\\n        }\\n        \\n        int[] res = new int[nums1.Length];\\n        for(int i = 0; i < nums1.Length; i++)\\n            res[i] = dic.ContainsKey(nums1[i])? dic[nums1[i]] : -1;\\n        \\n        return res;\\n    }\\n}\\n```\\n\\n**Complexity**\\n- time O(N + M) where N and M are the lengths of nums1 and nums2\\n- space: O(M)",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int[] NextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n        Dictionary<int,int> dic = new Dictionary<int,int>();\\n        Stack<int> stack = new Stack<int>();\\n        foreach(var num in nums2)\\n        {\\n            while(stack.Count > 0 && num > stack.Peek())\\n                dic.Add(stack.Pop(),num);\\n            \\n            stack.Push(num);\\n        }\\n        \\n        int[] res = new int[nums1.Length];\\n        for(int i = 0; i < nums1.Length; i++)\\n            res[i] = dic.ContainsKey(nums1[i])? dic[nums1[i]] : -1;\\n        \\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 97654,
                "title": "intuitive-javascript-solution",
                "content": "```\\nvar nextGreaterElement = function(findNums, nums) {\\n    return findNums.map(n => {\\n        let found = nums.indexOf(n);\\n        \\n        if (found !== -1) {\\n            // find the next greater element's index\\n            while (nums[++found] < n);\\n            // -1 if not found\\n            if (found >= nums.length) found = -1;\\n            else found = nums[found];\\n        }\\n        \\n        return found;\\n    });\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar nextGreaterElement = function(findNums, nums) {\\n    return findNums.map(n => {\\n        let found = nums.indexOf(n);\\n        \\n        if (found !== -1) {\\n            // find the next greater element's index\\n            while (nums[++found] < n);\\n            // -1 if not found\\n            if (found >= nums.length) found = -1;\\n            else found = nums[found];\\n        }\\n        \\n        return found;\\n    });\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 97675,
                "title": "python-beats-98",
                "content": "```\\nclass Solution(object):\\n    def nextGreaterElement(self, findNums, nums):\\n        greater,stack = {},[]\\n        for n in nums:\\n            while stack and n > stack[-1]:\\n                greater[stack.pop()] = n\\n            stack.append(n)\\n        return [greater[n] if n in greater else -1 for n in findNums]",
                "solutionTags": [],
                "code": "class Solution(object):\\n    def nextGreaterElement(self, findNums, nums):\\n        greater,stack = {}",
                "codeTag": "Java"
            },
            {
                "id": 97648,
                "title": "simple-o-m-n-java-solution-using-stack",
                "content": "```\\npublic class Solution {\\n    public int[] nextGreaterElement(int[] findNums, int[] nums) {\\n        int[] ret = new int[findNums.length];\\n        ArrayDeque<Integer> stack = new ArrayDeque<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for(int i = nums.length - 1; i >= 0; i--) {\\n            while(!stack.isEmpty() && stack.peek() <= nums[i]) {\\n                stack.pop();\\n            }\\n            if(stack.isEmpty()) map.put(nums[i], -1);\\n            else map.put(nums[i], stack.peek());\\n            stack.push(nums[i]);\\n        }\\n        for(int i = 0; i < findNums.length; i++) {\\n            ret[i] = map.get(findNums[i]);\\n        }\\n        return ret;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int[] nextGreaterElement(int[] findNums, int[] nums) {\\n        int[] ret = new int[findNums.length];\\n        ArrayDeque<Integer> stack = new ArrayDeque<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for(int i = nums.length - 1; i >= 0; i--) {\\n            while(!stack.isEmpty() && stack.peek() <= nums[i]) {\\n                stack.pop();\\n            }\\n            if(stack.isEmpty()) map.put(nums[i], -1);\\n            else map.put(nums[i], stack.peek());\\n            stack.push(nums[i]);\\n        }\\n        for(int i = 0; i < findNums.length; i++) {\\n            ret[i] = map.get(findNums[i]);\\n        }\\n        return ret;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2432504,
                "title": "java-optimised-o-n-solution",
                "content": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n      int[] ans = new int[nums1.length];\\n      Stack<Integer> st = new Stack<>();\\n      HashMap<Integer, Integer> map = new HashMap<>();\\n      \\n      for(int num : nums2) {\\n        while(!st.isEmpty() && num > st.peek()) {\\n          map.put(st.pop(), num);\\n        }\\n        st.add(num);\\n      }\\n      int i = 0;\\n      for(int num : nums1) {\\n        ans[i ++] = map.getOrDefault(num, - 1);\\n      }\\n      return ans;\\n    }\\n}\\n```\\n# PLEASE UPVOTE IF IT WAS HELPFULL",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n      int[] ans = new int[nums1.length];\\n      Stack<Integer> st = new Stack<>();\\n      HashMap<Integer, Integer> map = new HashMap<>();\\n      \\n      for(int num : nums2) {\\n        while(!st.isEmpty() && num > st.peek()) {\\n          map.put(st.pop(), num);\\n        }\\n        st.add(num);\\n      }\\n      int i = 0;\\n      for(int num : nums1) {\\n        ans[i ++] = map.getOrDefault(num, - 1);\\n      }\\n      return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1528887,
                "title": "easy-java-solution-1ms-monotonic-stack-map",
                "content": "```\\n// Time Complexity: O(N)\\n// Space Complexity: 10001 is the max size\\n\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Stack<Integer> stack = new Stack<>();\\n        int M = nums1.length, N = nums2.length;\\n        \\n        int[] greater = new int[10001];\\n        for(int i = N - 1; i >= 0; i--) {\\n            while(stack.size() > 0 && stack.peek() < nums2[i])\\n                stack.pop();\\n            greater[nums2[i]] = stack.size() == 0 ? -1 : stack.peek();\\n            stack.push(nums2[i]);\\n        }\\n        \\n        int[] result = new int[M];\\n        for(int i = 0; i < M; i++)\\n            result[i] = greater[nums1[i]];\\n        \\n        return result;\\n    }\\n}\\n```\\n\\n**Using Map**\\n\\n```\\n// Space Complexity: O(N)\\n// Time Complexity: O(N)\\n\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Stack<Integer> stack = new Stack<>();\\n        int M = nums1.length, N = nums2.length;\\n        \\n        Map<Integer, Integer> map = new HashMap<>();\\n        for(int i = N - 1; i >= 0; i--) {\\n            while(stack.size() > 0 && stack.peek() < nums2[i])\\n                stack.pop();\\n            map.put(nums2[i], stack.size() == 0 ? -1 : stack.peek());\\n            stack.push(nums2[i]);\\n        }\\n        \\n        int[] result = new int[M];\\n        for(int i = 0; i < M; i++)\\n            result[i] = map.get(nums1[i]);\\n        \\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Monotonic Stack"
                ],
                "code": "```\\n// Time Complexity: O(N)\\n// Space Complexity: 10001 is the max size\\n\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Stack<Integer> stack = new Stack<>();\\n        int M = nums1.length, N = nums2.length;\\n        \\n        int[] greater = new int[10001];\\n        for(int i = N - 1; i >= 0; i--) {\\n            while(stack.size() > 0 && stack.peek() < nums2[i])\\n                stack.pop();\\n            greater[nums2[i]] = stack.size() == 0 ? -1 : stack.peek();\\n            stack.push(nums2[i]);\\n        }\\n        \\n        int[] result = new int[M];\\n        for(int i = 0; i < M; i++)\\n            result[i] = greater[nums1[i]];\\n        \\n        return result;\\n    }\\n}\\n```\n```\\n// Space Complexity: O(N)\\n// Time Complexity: O(N)\\n\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Stack<Integer> stack = new Stack<>();\\n        int M = nums1.length, N = nums2.length;\\n        \\n        Map<Integer, Integer> map = new HashMap<>();\\n        for(int i = N - 1; i >= 0; i--) {\\n            while(stack.size() > 0 && stack.peek() < nums2[i])\\n                stack.pop();\\n            map.put(nums2[i], stack.size() == 0 ? -1 : stack.peek());\\n            stack.push(nums2[i]);\\n        }\\n        \\n        int[] result = new int[M];\\n        for(int i = 0; i < M; i++)\\n            result[i] = map.get(nums1[i]);\\n        \\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 817811,
                "title": "c-using-stack-beats-97",
                "content": "\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> final;  //Final array that needs to be returned .\\n        unordered_map<int,int> m1;   //Map to hold the next greater elements for        each element.\\n        if(nums2.size()==0)\\n        return final;\\n\\t\\t\\t\\n        //A normal next greater element to the right approach using stack and populating map with the NGE for each element in nums2.\\n        stack<int> s;\\n        int n=nums2.size();\\n        s.push(nums2[n-1]); //For last element we dont have Next greater element\\n        m1[nums2[n-1]]=-1;\\n        for(int i=n-2;i>=0;i--){\\n            while(!s.empty() && s.top()<nums2[i])\\n                s.pop();\\n            if(!s.empty())\\n                m1[nums2[i]]=s.top();\\n            else\\n                m1[nums2[i]]=-1;\\n            s.push(nums2[i]);\\n        }\\n        \\n        //Fill the final array that needs to be returned with the next greater elements that we found for each element in the second array.\\n        for(int i=0;i<nums1.size();i++)\\n        final.push_back(m1[nums1[i]]);\\n        \\n        return final;\\n    }\\n",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> final;  //Final array that needs to be returned .\\n        unordered_map<int,int> m1;   //Map to hold the next greater elements for        each element.\\n        if(nums2.size()==0)\\n        return final;\\n\\t\\t\\t\\n        //A normal next greater element to the right approach using stack and populating map with the NGE for each element in nums2.\\n        stack<int> s;\\n        int n=nums2.size();\\n        s.push(nums2[n-1]); //For last element we dont have Next greater element\\n        m1[nums2[n-1]]=-1;\\n        for(int i=n-2;i>=0;i--){\\n            while(!s.empty() && s.top()<nums2[i])\\n                s.pop();\\n            if(!s.empty())\\n                m1[nums2[i]]=s.top();\\n            else\\n                m1[nums2[i]]=-1;\\n            s.push(nums2[i]);\\n        }\\n        \\n        //Fill the final array that needs to be returned with the next greater elements that we found for each element in the second array.\\n        for(int i=0;i<nums1.size();i++)\\n        final.push_back(m1[nums1[i]]);\\n        \\n        return final;\\n    }\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 3603798,
                "title": "c-o-m-n-map-stack-with-explanation",
                "content": "\\n# Approach\\n- Use an unordered map nextGreater to store the next greater element for each element in nums2.Use a stack to keep track of elements in nums2 that we haven\\'t found the next greater element for.\\n- Iterate through nums2 in reverse order and for each element, compare it with the elements at the top of the stack. While nums2[i] is greater than the top element, pop elements from the stack. We repeat this process until num is no longer greater than the top element or the stack becomes empty. Set the next greater element for nums2[i] in the map. Push nums2[i] onto the stack.\\n- Iterate through nums1 and for each element, retrieve the next greater element from nextGreater map and push it into the result vector.\\n- Return the result vector.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(m+n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> nextGreater;\\n        stack<int> stack;\\n\\n        // Store the next greater element for each element in nums2\\n        for (int i = nums2.size() - 1; i >= 0; i--) {\\n            while (!stack.empty() && stack.top() < nums2[i]) {\\n                stack.pop();\\n            }\\n            if (stack.empty()) {\\n                nextGreater[nums2[i]] = -1;\\n            } else {\\n                nextGreater[nums2[i]] = stack.top();\\n            }\\n            stack.push(nums2[i]);\\n        }\\n\\n        vector<int> result;\\n        for (auto num : nums1) {\\n            result.push_back(nextGreater[num]);\\n        }\\n\\n        return result;\\n    }\\n};\\n```\\n**Please upvote if it helped. Happy Coding!**",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> nextGreater;\\n        stack<int> stack;\\n\\n        // Store the next greater element for each element in nums2\\n        for (int i = nums2.size() - 1; i >= 0; i--) {\\n            while (!stack.empty() && stack.top() < nums2[i]) {\\n                stack.pop();\\n            }\\n            if (stack.empty()) {\\n                nextGreater[nums2[i]] = -1;\\n            } else {\\n                nextGreater[nums2[i]] = stack.top();\\n            }\\n            stack.push(nums2[i]);\\n        }\\n\\n        vector<int> result;\\n        for (auto num : nums1) {\\n            result.push_back(nextGreater[num]);\\n        }\\n\\n        return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 846661,
                "title": "c-stack-based-solution-explained-96-time-60-space",
                "content": "Okay, quite frankly I am not sure how this problem can rank as \"easy\", provided you want to do it efficiently, since it requires the skills I found in [another problem](https://leetcode.com/problems/daily-temperatures/discuss/844524/) ranked as medium, plus some more.\\n\\nAnyway, enough ranting and down to business; first of all I will store the length of both input vectors in `len1` and `len2` respectivelty, then create a vector `res` of length `== n1.size()` and prefill it with `-1`.\\n\\nIf the second input vector is empty, I can stop here, just returning `res`.\\n\\nIf not, I will create more support variables:\\n* an array `dp` of length `len2`;\\n* a stack `s`;\\n* an unordered_map `matches` that I will initialised mapping all the values in `n1` as keys (with a temporary value of `-1`).\\n\\nThen comes the great loop through `len2`, from right to left, with the index `i`:\\n* first of all, I am assigning `n` the value of `n2[i]` update the value of `matches` if i know a key was previosly there (I will not brute-force it all storing unnecessary data);\\n* I will then keep popping from the stack as long as the stacked values are lesser than `n`;\\n* if the stack ends up empty, I will write `-1` in the matching `dp` cell (`dp[i]`);\\n* otherwise, I will write in it the current value of `s.top()`;\\n* finally, I will push the current value of `n` into `s`.\\n\\nIf you wonder why I do the last 4 steps, in its [sibling problem](https://leetcode.com/problems/daily-temperatures/discuss/844524/) I wrote more extensively about it, with a step-by-step approach.\\n\\nNow, time to wrap up: with one last loop, I assign to each cell of `res` a value taken from `dp`, in the position pointed out by `matches` for the key `n1[i]`. Not the most immediate line of code I ever wrote, but it works just fine.\\n\\nFinally, I just return `res` :)\\n\\nThe code:\\n\\n```cpp\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        // support variables\\n        int len1 = n1.size(), len2 = n2.size();\\n        vector<int> res(len1, -1);\\n        if (!len2) return res;\\n        int dp[len2];\\n        stack<int> s;\\n        unordered_map<int, int> matches;\\n        // marking all the necessary keys in matches\\n        for (auto n: n1) matches[n] = -1;\\n        // going to populate both the dp table and\\n        for (int i = len2 - 1, n; i >= 0; i--) {\\n            n = n2[i];\\n            // updating matches if it is a necessary key for later\\n            if (matches.find(n) != end(matches)) {\\n                matches[n] = i;\\n            }\\n            // working with the stack to populate dp\\n            while (s.size() && s.top() <= n) s.pop();\\n            if (!s.size()) dp[i] = -1;\\n            else dp[i] = s.top();\\n            s.push(n);\\n        }\\n        for (int i = 0; i < len1; i++) {\\n            res[i] = dp[matches[n1[i]]];\\n        }\\n        return res;\\n    }\\n};\\n```\\n\\nLike the other problem, I tried to have `s` as an array, moving `pos` to populate it (with `pos == -1` to denote an empty stack), to see if I gained performance, but that seems hardly the case.\\n\\nThe code:\\n\\n```cpp\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        // support variables\\n        int len1 = n1.size(), len2 = n2.size();\\n        vector<int> res(len1, -1);\\n        if (!len2) return res;\\n        // dp array and stack replacement array; pos == -1 means empty stack\\n        int dp[len2], s[len2], pos = -1;\\n        unordered_map<int, int> matches;\\n        // marking all the necessary keys in matches\\n        for (auto n: n1) matches[n] = -1;\\n        // going to populate both the dp table and\\n        for (int i = len2 - 1, n; i >= 0; i--) {\\n            n = n2[i];\\n            // updating matches if it is a necessary key for later\\n            if (matches.find(n) != end(matches)) {\\n                matches[n] = i;\\n            }\\n            // working with the array to populate dp\\n            while (pos > -1 && s[pos] <= n) pos--;\\n            if (pos == -1) dp[i] = -1;\\n            else dp[i] = s[pos];\\n            s[++pos] = n;\\n        }\\n        for (int i = 0; i < len1; i++) {\\n            res[i] = dp[matches[n1[i]]];\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Array",
                    "Dynamic Programming",
                    "Stack"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        // support variables\\n        int len1 = n1.size(), len2 = n2.size();\\n        vector<int> res(len1, -1);\\n        if (!len2) return res;\\n        int dp[len2];\\n        stack<int> s;\\n        unordered_map<int, int> matches;\\n        // marking all the necessary keys in matches\\n        for (auto n: n1) matches[n] = -1;\\n        // going to populate both the dp table and\\n        for (int i = len2 - 1, n; i >= 0; i--) {\\n            n = n2[i];\\n            // updating matches if it is a necessary key for later\\n            if (matches.find(n) != end(matches)) {\\n                matches[n] = i;\\n            }\\n            // working with the stack to populate dp\\n            while (s.size() && s.top() <= n) s.pop();\\n            if (!s.size()) dp[i] = -1;\\n            else dp[i] = s.top();\\n            s.push(n);\\n        }\\n        for (int i = 0; i < len1; i++) {\\n            res[i] = dp[matches[n1[i]]];\\n        }\\n        return res;\\n    }\\n};\\n```\n```cpp\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        // support variables\\n        int len1 = n1.size(), len2 = n2.size();\\n        vector<int> res(len1, -1);\\n        if (!len2) return res;\\n        // dp array and stack replacement array; pos == -1 means empty stack\\n        int dp[len2], s[len2], pos = -1;\\n        unordered_map<int, int> matches;\\n        // marking all the necessary keys in matches\\n        for (auto n: n1) matches[n] = -1;\\n        // going to populate both the dp table and\\n        for (int i = len2 - 1, n; i >= 0; i--) {\\n            n = n2[i];\\n            // updating matches if it is a necessary key for later\\n            if (matches.find(n) != end(matches)) {\\n                matches[n] = i;\\n            }\\n            // working with the array to populate dp\\n            while (pos > -1 && s[pos] <= n) pos--;\\n            if (pos == -1) dp[i] = -1;\\n            else dp[i] = s[pos];\\n            s[++pos] = n;\\n        }\\n        for (int i = 0; i < len1; i++) {\\n            res[i] = dp[matches[n1[i]]];\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3279314,
                "title": "c-brute-force-easy-clean-code",
                "content": "<!-- # Intuition -->\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach [Brute-Force]\\n- Iteratively pick elements from the `nums1` array \\n- Find the position where this element exists in the `nums2` array \\n> *the number will definitely exist in the second array because we are told nums1 is a subset of nums2*\\n\\n- Now, **from this position index** iterate in the `nums2` array and *find and store the first element that is greater* than the current element.\\n- If found, store it and **break** the loop (because we have to find the NEXT GREATER element). \\n- Push it back into the array and move to next iteration \\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:$$O(n^3)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```C++ []\\nclass Solution {\\npublic:\\n    int findPosition (vector<int> nums2, int key)\\n    {\\n        int n = nums2.size() ; \\n        for (int i = 0 ; i < n ; i ++)\\n        {\\n            if (nums2[i] == key)\\n            {\\n                return i ; \\n            }\\n        }\\n        return -1 ; \\n    }\\n\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans ; \\n        for (int i = 0 ; i < nums1.size() ; i ++)\\n        {\\n            int element = nums1[i] ; \\n            int val = -1 ; \\n            int position = findPosition(nums2, element) ; \\n            for (int j = position + 1 ; j < nums2.size() ; j ++)\\n            {\\n                if (nums2[j] > element)\\n                {\\n                    val = nums2[j] ; \\n                    break ; \\n                }\\n                else continue ; \\n            }\\n            ans.push_back(val) ; \\n        }\\n        return ans ; \\n    }\\n};\\n```\\n![815a317f-9cdf-46e2-a397-af8869dafa2e_1673498197.3721023.png](https://assets.leetcode.com/users/images/7cfadaec-4ab3-45e4-9ad8-313c2db992f9_1678433858.6366765.png)\\n",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Hash Table",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    int findPosition (vector<int> nums2, int key)\\n    {\\n        int n = nums2.size() ; \\n        for (int i = 0 ; i < n ; i ++)\\n        {\\n            if (nums2[i] == key)\\n            {\\n                return i ; \\n            }\\n        }\\n        return -1 ; \\n    }\\n\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans ; \\n        for (int i = 0 ; i < nums1.size() ; i ++)\\n        {\\n            int element = nums1[i] ; \\n            int val = -1 ; \\n            int position = findPosition(nums2, element) ; \\n            for (int j = position + 1 ; j < nums2.size() ; j ++)\\n            {\\n                if (nums2[j] > element)\\n                {\\n                    val = nums2[j] ; \\n                    break ; \\n                }\\n                else continue ; \\n            }\\n            ans.push_back(val) ; \\n        }\\n        return ans ; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2728473,
                "title": "java-brute-optimal",
                "content": "### **Please Upvote** :D\\n##### 1. Brute force approach:\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int n1 = nums1.length, n2 = nums2.length;\\n\\n        int[] foundIdx = new int[n1];\\n\\n        for (int i = 0; i < n1; i++) {\\n            for (int j = 0; j < n2; j++) {\\n                if (nums1[i] == nums2[j]) foundIdx[i] = j;\\n            }\\n        }\\n\\n        int[] ans = new int[n1];\\n        int idx = 0;\\n\\n        for (int i = 0; i < n1; i++) {\\n            for (int j = foundIdx[i] + 1; j < n2; j++) {\\n                if (nums2[j] > nums2[foundIdx[i]]) {\\n                    ans[i] = nums2[j];\\n                    break;\\n                }\\n            }\\n\\n            if (ans[i] == 0) ans[i] = -1;\\n        }\\n\\n        return ans;\\n    }\\n}\\n\\n// TC: O(n * m), SC: O(n)\\n```\\n\\n##### 2. Optimal approach:\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Map<Integer, Integer> map = new HashMap<>();\\n        Stack<Integer> stack = new Stack<>();\\n\\n        for (int n : nums2) {\\n            while (!stack.isEmpty() && stack.peek() < n) {\\n                map.put(stack.pop(), n);\\n            }\\n\\n            stack.push(n);\\n        }\\n\\n        for (int i = 0; i < nums1.length; i++) {\\n            nums1[i] = map.getOrDefault(nums1[i], -1);\\n        }\\n\\n        return nums1;\\n    }\\n}\\n\\n// TC: O(n + m), SC: O(n + m)\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int n1 = nums1.length, n2 = nums2.length;\\n\\n        int[] foundIdx = new int[n1];\\n\\n        for (int i = 0; i < n1; i++) {\\n            for (int j = 0; j < n2; j++) {\\n                if (nums1[i] == nums2[j]) foundIdx[i] = j;\\n            }\\n        }\\n\\n        int[] ans = new int[n1];\\n        int idx = 0;\\n\\n        for (int i = 0; i < n1; i++) {\\n            for (int j = foundIdx[i] + 1; j < n2; j++) {\\n                if (nums2[j] > nums2[foundIdx[i]]) {\\n                    ans[i] = nums2[j];\\n                    break;\\n                }\\n            }\\n\\n            if (ans[i] == 0) ans[i] = -1;\\n        }\\n\\n        return ans;\\n    }\\n}\\n\\n// TC: O(n * m), SC: O(n)\\n```\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Map<Integer, Integer> map = new HashMap<>();\\n        Stack<Integer> stack = new Stack<>();\\n\\n        for (int n : nums2) {\\n            while (!stack.isEmpty() && stack.peek() < n) {\\n                map.put(stack.pop(), n);\\n            }\\n\\n            stack.push(n);\\n        }\\n\\n        for (int i = 0; i < nums1.length; i++) {\\n            nums1[i] = map.getOrDefault(nums1[i], -1);\\n        }\\n\\n        return nums1;\\n    }\\n}\\n\\n// TC: O(n + m), SC: O(n + m)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 97701,
                "title": "java-solution-using-stack-o-n",
                "content": "Use a monotonic increasing/decreasing stack can solve multiple problems in O(n), for example, find the longest increasing/decreasing sequence, find the first smaller/bigger element to the left/right. This question is one of the application of using monotonic stack.\\n```\\npublic class Solution {\\n    public int[] nextGreaterElement(int[] findNums, int[] nums) {\\n        Map<Integer, Integer> map = new HashMap<>();\\n        Stack<Integer> stack = new Stack<>();\\n        \\n        for (int num : nums) {\\n            while (!stack.isEmpty() && stack.peek() < num) {\\n                map.put(stack.pop(), num);\\n            }\\n            stack.push(num);\\n        }\\n        \\n        int[] res = new int[findNums.length];\\n        for (int i = 0; i < findNums.length; i++) {\\n            res[i] = map.getOrDefault(findNums[i], -1);\\n        }\\n        return res;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int[] nextGreaterElement(int[] findNums, int[] nums) {\\n        Map<Integer, Integer> map = new HashMap<>();\\n        Stack<Integer> stack = new Stack<>();\\n        \\n        for (int num : nums) {\\n            while (!stack.isEmpty() && stack.peek() < num) {\\n                map.put(stack.pop(), num);\\n            }\\n            stack.push(num);\\n        }\\n        \\n        int[] res = new int[findNums.length];\\n        for (int i = 0; i < findNums.length; i++) {\\n            res[i] = map.getOrDefault(findNums[i], -1);\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2757177,
                "title": "python-c-java-rust-one-pass-using-decreasing-stack-proof-with-detailed-comments",
                "content": "**\\u2705 IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n****\\nThis solution employs a one-pass approach using a decreasing stack. Time complexity is linear: **O(N)**. Space complexity is linear: **O(N)**. \\n\\n**Comment.** In essence, there are just two approaches to this problem:\\n1. Take a number **n** and ask for its next-greater (e.g., a brute-force **O(N\\\\*N)** solution).\\n2. Take a number **n** and ask for which numbers it is the next-greater one?\\n\\nIn the second case, for each consecutive **n** from the list, we have to perform comparisons with *previous numbers*? But do we have to compare with all of them? The answer is no. Here is why:\\n1. Let\\'s say a linear scan is employed where on each iteration we compare the number **n** to *previous numbers*. \\n2. Once (among the *previous numbers*) we encounter a number **k** that is less than **n**, we remove it from the list of *previous numbers* because **k** has finally found its next-greater, and keeping it in the list is redundant. (By the way, there might be many such **k**\\'s for each **n**.)\\n3. In total, on each iteration we ensure that in *previous numbers* there are no numbers that are greater or equal than **n**, thus making *previous numbers* a decreasing list.\\n4. This allows us to reformulate the strategy. Namely, we keep a decreasing list of *previous numbers*, and, on each iteration, remove the elements which are less than **n** from its tail. But this means that the list is basically a stack.\\n\\n<iframe src=\"https://leetcode.com/playground/KH7PsHfK/shared\" frameBorder=\"0\" width=\"800\" height=\"650\"></iframe>\\n\\nOther languages are coming...",
                "solutionTags": [],
                "code": "**\\u2705 IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n****\\nThis solution employs a one-pass approach using a decreasing stack. Time complexity is linear: **O(N)**. Space complexity is linear: **O(N)**. \\n\\n**Comment.** In essence, there are just two approaches to this problem:\\n1. Take a number **n** and ask for its next-greater (e.g., a brute-force **O(N\\\\*N)** solution).\\n2. Take a number **n** and ask for which numbers it is the next-greater one?\\n\\nIn the second case, for each consecutive **n** from the list, we have to perform comparisons with *previous numbers*? But do we have to compare with all of them? The answer is no. Here is why:\\n1. Let\\'s say a linear scan is employed where on each iteration we compare the number **n** to *previous numbers*. \\n2. Once (among the *previous numbers*) we encounter a number **k** that is less than **n**, we remove it from the list of *previous numbers* because **k** has finally found its next-greater, and keeping it in the list is redundant. (By the way, there might be many such **k**\\'s for each **n**.)\\n3. In total, on each iteration we ensure that in *previous numbers* there are no numbers that are greater or equal than **n**, thus making *previous numbers* a decreasing list.\\n4. This allows us to reformulate the strategy. Namely, we keep a decreasing list of *previous numbers*, and, on each iteration, remove the elements which are less than **n** from its tail. But this means that the list is basically a stack.\\n\\n<iframe src=\"https://leetcode.com/playground/KH7PsHfK/shared\" frameBorder=\"0\" width=\"800\" height=\"650\"></iframe>\\n\\nOther languages are coming...",
                "codeTag": "Unknown"
            },
            {
                "id": 2131042,
                "title": "c-stack-easy-to-understand",
                "content": "Creating a vector to store next greater element(nge) of nums2 , then accordingly get the value of nge corresponding to the nums1.\\n\\n```\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        \\n\\t\\t// vector to be returned\\n        vector<int> rs(n1);\\n        \\n\\t\\t// vector for storing next greater element of nums2\\n        vector<int> nge(n2);\\n        stack<int> st;\\n\\n        st.push(nums2[n2-1]);\\n        nge[n2-1] = -1;\\n\\n\\t\\t// getting the next greater element\\n        for(int i=n2-2 ; i>=0 ; i--){\\n\\n            while(st.size() > 0 && nums2[i] >= st.top()){\\n                 st.pop();\\n            }\\n\\n            if(st.size() == 0){\\n                 nge[i] = -1;\\n            }else{\\n                 nge[i] = st.top();\\n            }\\n\\n            st.push(nums2[i]);\\n        }   \\n        \\n\\t\\t// putting nge in rs(vector to be returned)\\n        for(int i=0 ; i<n1 ; i++){\\n            auto itr = find(nums2.begin() , nums2.end() , nums1[i]);\\n            int idx = itr - nums2.begin();\\n            rs[i] = nge[idx];\\n        }\\n        return rs;\\n        \\n    }\\n```\\n\\nIf  you like the solution , do **UPVOTE** .",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        \\n\\t\\t// vector to be returned\\n        vector<int> rs(n1);\\n        \\n\\t\\t// vector for storing next greater element of nums2\\n        vector<int> nge(n2);\\n        stack<int> st;\\n\\n        st.push(nums2[n2-1]);\\n        nge[n2-1] = -1;\\n\\n\\t\\t// getting the next greater element\\n        for(int i=n2-2 ; i>=0 ; i--){\\n\\n            while(st.size() > 0 && nums2[i] >= st.top()){\\n                 st.pop();\\n            }\\n\\n            if(st.size() == 0){\\n                 nge[i] = -1;\\n            }else{\\n                 nge[i] = st.top();\\n            }\\n\\n            st.push(nums2[i]);\\n        }   \\n        \\n\\t\\t// putting nge in rs(vector to be returned)\\n        for(int i=0 ; i<n1 ; i++){\\n            auto itr = find(nums2.begin() , nums2.end() , nums1[i]);\\n            int idx = itr - nums2.begin();\\n            rs[i] = nge[idx];\\n        }\\n        return rs;\\n        \\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1539817,
                "title": "javascript-easy-to-understand-2-solutions-with-detailed-explanation",
                "content": "## SOLUTION 1\\n\\nFirst, we follow the straightforward strategy:\\n- Create a map and traverse `nums2`\\n- For each number, traverse the rest numbers to find the the nearest larger number and save it into map\\n- Traverse `nums1`, find the result from that map\\n\\n```js\\nconst nextGreaterElement = (nums1, nums2) => {\\n  const map = {};\\n  for (let i = 0; i < nums2.length; ++i) {\\n    let greater = -1;\\n    for (let j = i + 1; j < nums2.length; ++j) {\\n      if (nums2[j] > nums2[i]) {\\n        greater = nums2[j];\\n        break;\\n      }\\n    }\\n    map[nums2[i]] = greater;\\n  }\\n  return nums1.map(num => map[num]);\\n};\\n```\\n\\n## SOLUTION 2\\n\\nIn solution 1, we need to traverse all the rest values to find the nearest larger number, which will cost much time. Let\\'s try to optimize this to get better performance.\\n\\nSince the larger number should be appear at right, so let\\'s imagine if we traverse from the tail to head, what will happen. It will be easy to know if there is a larger number at right, since we could save the largest number we met. But what we want is the nearest larger number.\\n\\nWhen you don\\'t know what to do, you can often simulate a process and try to find clues to the problem.\\n\\nLet\\'s see an example. For array `[3,1,4,2]`:\\n- First, we meet `2`, but there\\'s no other number, so we get `-1` as result, and the visited list is `[2]`.\\n- Then, we meet `4`, according to the visited list, we get `-1` as result, and the visited list is `[4, 2]`.\\n- Then, we meet `1`, according to the visited list, we get `4` as result, and the visited list is `[1, 4, 2]`.\\n- Then, we meet `3`, according to the visited list, we get `4` as result, and the visited list is `[3, 1, 4, 2]`.\\n\\nPlease take 1 minute to try to find some clues..... OK, here we go:\\n- The last `2` is completely useless when we have `4` ahead, since if `2` is larger number, then `4` must be a larger number and closer.\\n- The middle `1` is also useless when we have `3` ahead. The same reason as above.\\n\\nAccording to these clues, if there\\'s one more number ahead, the useful visited part for us is only `[3, 4]`. And, if the next is `0`, it should become `[0, 3, 4]`; if the next is `5`, it should become `[5]`.\\n\\nRight now, we could get the result from the visited array easily, and we could maintain the visited array via a stack structure easily also. So, the final question is, will this be faster?\\n\\nFor solution 1, let\\'s say `n` represent `nums2.length`, in worse case, the last number could be traversed `n` times, the second to last number could be traversed `n-1` times, etc. But, for solution 2, every number appear in the visited list just once. So, in theory, the solution 2 is faster.\\n\\nHere\\'s the code:\\n\\n```js\\nconst nextGreaterElement = (nums1, nums2) => {\\n  const stack = [];\\n  const map = {};\\n  for (let i = nums2.length - 1; i >= 0; --i) {\\n    while (stack.length && stack[stack.length - 1] <= nums2[i]) {\\n      stack.pop();\\n    }\\n    map[nums2[i]] = stack.length ? stack[stack.length - 1] : -1;\\n    stack.push(nums2[i]);\\n  }\\n  return nums1.map(num => map[num]);\\n};\\n```\\n\\nIf you\\'d like it in the classic way - fixed length array and use `top` pointer to control the stack. Here\\'s the code also:\\n\\n```js\\nconst nextGreaterElement = (nums1, nums2) => {\\n  const stack = new Uint16Array(nums2.length);\\n  const map = {};\\n  for (let top = -1, i = nums2.length - 1; i >= 0; --i) {\\n    while (top >= 0 && stack[top] <= nums2[i]) --top;\\n    map[nums2[i]] = top >= 0 ? stack[top] : -1;\\n    stack[++top] = nums2[i];\\n  }\\n  return nums1.map(num => map[num]);\\n};\\n```\\n\\nPS: the solution 2 is a standard monotonic stack solution. If you want more information, you could google the key word `monotonic stack`.",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```js\\nconst nextGreaterElement = (nums1, nums2) => {\\n  const map = {};\\n  for (let i = 0; i < nums2.length; ++i) {\\n    let greater = -1;\\n    for (let j = i + 1; j < nums2.length; ++j) {\\n      if (nums2[j] > nums2[i]) {\\n        greater = nums2[j];\\n        break;\\n      }\\n    }\\n    map[nums2[i]] = greater;\\n  }\\n  return nums1.map(num => map[num]);\\n};\\n```\n```js\\nconst nextGreaterElement = (nums1, nums2) => {\\n  const stack = [];\\n  const map = {};\\n  for (let i = nums2.length - 1; i >= 0; --i) {\\n    while (stack.length && stack[stack.length - 1] <= nums2[i]) {\\n      stack.pop();\\n    }\\n    map[nums2[i]] = stack.length ? stack[stack.length - 1] : -1;\\n    stack.push(nums2[i]);\\n  }\\n  return nums1.map(num => map[num]);\\n};\\n```\n```js\\nconst nextGreaterElement = (nums1, nums2) => {\\n  const stack = new Uint16Array(nums2.length);\\n  const map = {};\\n  for (let top = -1, i = nums2.length - 1; i >= 0; --i) {\\n    while (top >= 0 && stack[top] <= nums2[i]) --top;\\n    map[nums2[i]] = top >= 0 ? stack[top] : -1;\\n    stack[++top] = nums2[i];\\n  }\\n  return nums1.map(num => map[num]);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 97596,
                "title": "java-o-n-hashmap-method-beats-95-currently",
                "content": "    public int[] nextGreaterElement(int[] findNums, int[] nums) {\\n        Map<Integer, Integer> m = new HashMap<>();\\n        // go through each element in nums and set its location in HashMap\\n        for(int i =0;i<nums.length;++i)\\n            m.put(nums[i],i); //since every element is unique, there is no need (getOrDefault)\\n        \\n        //scan each element in the first array    \\n        for(int i=0;i<findNums.length;++i)\\n        {\\n            int minIndex =-1;  //initially, set the finding index to be -1\\n            int index = m.get(findNums[i]); //findout the corresponding index in the second (nums) array.\\n            while(++index < nums.length) \\n            {\\n                if(nums[index]>findNums[i])\\n                {\\n                    minIndex =index;\\n                    break;\\n                }\\n            }\\n            if(minIndex ==-1) findNums[i] = -1;\\n            else findNums[i] = nums[minIndex];\\n        }\\n        return findNums;\\n    }",
                "solutionTags": [],
                "code": "    public int[] nextGreaterElement(int[] findNums, int[] nums) {\\n        Map<Integer, Integer> m = new HashMap<>();\\n        // go through each element in nums and set its location in HashMap\\n        for(int i =0;i<nums.length;++i)\\n            m.put(nums[i],i); //since every element is unique, there is no need (getOrDefault)\\n        \\n        //scan each element in the first array    \\n        for(int i=0;i<findNums.length;++i)\\n        {\\n            int minIndex =-1;  //initially, set the finding index to be -1\\n            int index = m.get(findNums[i]); //findout the corresponding index in the second (nums) array.\\n            while(++index < nums.length) \\n            {\\n                if(nums[index]>findNums[i])\\n                {\\n                    minIndex =index;\\n                    break;\\n                }\\n            }\\n            if(minIndex ==-1) findNums[i] = -1;\\n            else findNums[i] = nums[minIndex];\\n        }\\n        return findNums;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3122047,
                "title": "easy-to-understand-c-solution-using-map-and-stack",
                "content": "# Intuition\\nEasy to understand solution using Map and Stack\\n\\n# Approach\\n1. First, create a hashmap with *key(nums1 element)* and *values(their indices)*\\n2. find the next greater element by the help of stack and put the values of that next greater element in nums1 with the help of map.\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        //created a map where key(nums) and values(their indices)\\n        map<int,int> mp;\\n\\n        for(int i = 0; i < nums1.size(); ++i){\\n            mp[nums1[i]] = i;\\n        }\\n\\n        stack<int> st;\\n        st.push(-1);\\n\\n        for(int i = nums2.size()-1; i >= 0; i--){\\n\\n            if(mp.find(nums2[i]) == mp.end()){\\n                st.push(nums2[i]);\\n                continue;\\n            }\\n\\n            if(st.top() >= nums2[i]){\\n                int index = mp[nums2[i]];\\n                nums1[index] = st.top();\\n                st.push(nums2[i]);\\n            }else{\\n                while(st.top() != -1 and st.top() <= nums2[i]){\\n                    st.pop();\\n                }\\n                int index = mp[nums2[i]];\\n                nums1[index] = st.top();\\n                st.push(nums2[i]);\\n            }\\n        } \\n\\n        return nums1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Hash Table",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        //created a map where key(nums) and values(their indices)\\n        map<int,int> mp;\\n\\n        for(int i = 0; i < nums1.size(); ++i){\\n            mp[nums1[i]] = i;\\n        }\\n\\n        stack<int> st;\\n        st.push(-1);\\n\\n        for(int i = nums2.size()-1; i >= 0; i--){\\n\\n            if(mp.find(nums2[i]) == mp.end()){\\n                st.push(nums2[i]);\\n                continue;\\n            }\\n\\n            if(st.top() >= nums2[i]){\\n                int index = mp[nums2[i]];\\n                nums1[index] = st.top();\\n                st.push(nums2[i]);\\n            }else{\\n                while(st.top() != -1 and st.top() <= nums2[i]){\\n                    st.pop();\\n                }\\n                int index = mp[nums2[i]];\\n                nums1[index] = st.top();\\n                st.push(nums2[i]);\\n            }\\n        } \\n\\n        return nums1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3105443,
                "title": "c-map-1ms-beats-100-fast-efficient-solution-easy",
                "content": "# Intuition\\nUsing map you can do this in O(n) T.C.\\n\\n# Approach\\nMap, Array\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(size of n2 vector)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> mpx(nums2.size());\\n        stack<int> st;\\n\\n        for(int i = nums2.size() - 1; i >= 0; i--) {\\n            while(!st.empty() && st.top() <= nums2[i]) \\n                st.pop();\\n            if(!st.empty()) \\n                mpx[nums2[i]] = st.top();\\n            \\n            else mpx[nums2[i]] = -1;\\n            st.push(nums2[i]);\\n        }\\n        vector<int> ans;\\n        for(int i = 0; i < nums1.size(); i++) \\n            ans.push_back(mpx[nums1[i]]);\\n        \\n        return\\xA0ans;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Hash Table",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> mpx(nums2.size());\\n        stack<int> st;\\n\\n        for(int i = nums2.size() - 1; i >= 0; i--) {\\n            while(!st.empty() && st.top() <= nums2[i]) \\n                st.pop();\\n            if(!st.empty()) \\n                mpx[nums2[i]] = st.top();\\n            \\n            else mpx[nums2[i]] = -1;\\n            st.push(nums2[i]);\\n        }\\n        vector<int> ans;\\n        for(int i = 0; i < nums1.size(); i++) \\n            ans.push_back(mpx[nums1[i]]);\\n        \\n        return\\xA0ans;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2614962,
                "title": "easy-java-solution",
                "content": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] ans = new int[nums1.length];\\n        for(int a = 0; a<nums1.length;a++)\\n        {\\n            ans[a] = findGreater(nums1[a], nums2);\\n        }\\n        \\n        return ans;\\n    }\\n    \\n    private int findGreater(int target, int[] nums)\\n    {\\n        int index=0;\\n        for(int i = 0;i<nums.length;i++)\\n            if(nums[i] == target)\\n                index = i;\\n        for(int i = index+1;i<nums.length;i++)\\n            if(nums[i]>target)\\n                return nums[i];\\n        return -1;\\n    }\\n}\\n```\\n\\n\\nSolution For Next Greater Element 2 : https://leetcode.com/problems/next-greater-element-ii/discuss/2685554/Java-Simple-Solution",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] ans = new int[nums1.length];\\n        for(int a = 0; a<nums1.length;a++)\\n        {\\n            ans[a] = findGreater(nums1[a], nums2);\\n        }\\n        \\n        return ans;\\n    }\\n    \\n    private int findGreater(int target, int[] nums)\\n    {\\n        int index=0;\\n        for(int i = 0;i<nums.length;i++)\\n            if(nums[i] == target)\\n                index = i;\\n        for(int i = index+1;i<nums.length;i++)\\n            if(nums[i]>target)\\n                return nums[i];\\n        return -1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2185601,
                "title": "python-easy-understanding-solution-with-comment",
                "content": "NGE: next greater element\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = {}                                # ans record the NGE of every num in nums2 if exists.\\n        res = []\\n        stack = []                              # Using decreasing stack to find NGE.\\n        \\n        for n2 in nums2:\\n            while stack and n2 > stack[-1]:     # At this situation, n2 is the NGE of stack[-1],\\n                ans[stack.pop()] = n2           # so map stack[-1] to n2.\\n            stack.append(n2)\\n        \\n        for n1 in nums1:                        # Iterate through nums1,\\n            res.append(ans.get(n1, -1))         # if n1 not appear in ans, there isn\\'t NGE for n1, res.append(-1).\\n                                                # Otherwise, res.append(ans[n1])\\n        \\n        return res",
                "solutionTags": [
                    "Python",
                    "Stack"
                ],
                "code": "class Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = {}",
                "codeTag": "Java"
            },
            {
                "id": 1529054,
                "title": "c-stack-map-tc-o-n-sc-o-n",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        stack<int> st;\\n        unordered_map<int, int> mp;\\n        for(auto x: nums2){\\n            while(st.size() && st.top() < x){\\n                mp[st.top()] = x;\\n                st.pop();\\n            }\\n            st.push(x);\\n        }\\n        for(auto x: nums1) ans.push_back(mp[x] ? mp[x] : -1);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        stack<int> st;\\n        unordered_map<int, int> mp;\\n        for(auto x: nums2){\\n            while(st.size() && st.top() < x){\\n                mp[st.top()] = x;\\n                st.pop();\\n            }\\n            st.push(x);\\n        }\\n        for(auto x: nums1) ans.push_back(mp[x] ? mp[x] : -1);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1150345,
                "title": "java-2-approaches-brute-force-using-hashmap-and-stack-beats-98-56",
                "content": "Approach 1 - Brute Force\\n```\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) \\n    {    \\n        for(int i = 0 ; i < nums1.length ; i++)\\n        {\\n            boolean found = false;\\n            int val = -1;\\n            for(int j = 0 ; j < nums2.length ; j++)\\n            {\\n                if(nums2[j] == nums1[i])\\n                {\\n                    found = true;\\n                    continue;\\n                }\\n                \\n                \\n                if(found && nums2[j] > nums1[i])\\n                {\\n                    val = nums2[j];\\n                    break;\\n                }\\n            }\\n            \\n            nums1[i] = val;\\n        }\\n        \\n        return nums1;\\n    }\\n```\\n\\n\\nApproach 2 - Using Stack And HashMap\\n```\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) \\n    {    \\n        HashMap<Integer , Integer> map = new HashMap<>();\\n        \\n        Stack<Integer> st = new Stack<>();\\n        for(int i = nums2.length - 1 ; i >= 0 ; i--)\\n        {\\n            while(st.size() != 0 && st.peek() < nums2[i])\\n            {\\n                st.pop();\\n            }\\n            \\n            if(st.size() == 0)\\n            {\\n                map.put(nums2[i] , -1);\\n            }\\n            else\\n            {\\n                map.put(nums2[i] , st.peek());\\n            }\\n            st.push(nums2[i]);\\n        }\\n        \\n        for(int i = 0 ; i < nums1.length ; i++)\\n        {\\n            nums1[i] = map.get(nums1[i]);\\n        }\\n        \\n        return nums1;\\n    }\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) \\n    {    \\n        for(int i = 0 ; i < nums1.length ; i++)\\n        {\\n            boolean found = false;\\n            int val = -1;\\n            for(int j = 0 ; j < nums2.length ; j++)\\n            {\\n                if(nums2[j] == nums1[i])\\n                {\\n                    found = true;\\n                    continue;\\n                }\\n                \\n                \\n                if(found && nums2[j] > nums1[i])\\n                {\\n                    val = nums2[j];\\n                    break;\\n                }\\n            }\\n            \\n            nums1[i] = val;\\n        }\\n        \\n        return nums1;\\n    }\\n```\n```\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) \\n    {    \\n        HashMap<Integer , Integer> map = new HashMap<>();\\n        \\n        Stack<Integer> st = new Stack<>();\\n        for(int i = nums2.length - 1 ; i >= 0 ; i--)\\n        {\\n            while(st.size() != 0 && st.peek() < nums2[i])\\n            {\\n                st.pop();\\n            }\\n            \\n            if(st.size() == 0)\\n            {\\n                map.put(nums2[i] , -1);\\n            }\\n            else\\n            {\\n                map.put(nums2[i] , st.peek());\\n            }\\n            st.push(nums2[i]);\\n        }\\n        \\n        for(int i = 0 ; i < nums1.length ; i++)\\n        {\\n            nums1[i] = map.get(nums1[i]);\\n        }\\n        \\n        return nums1;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3978210,
                "title": "two-simple-java-solutions-runtime-2ms-beats100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code1\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] nums3 = new int[nums1.length];\\n\\n        for (int i = 0; i < nums3.length ; i++)\\n        {\\n            nums3[i] =  findNextMaxNum(nums2 , nums1[i]);\\n        }\\n        return nums3;\\n    }\\n\\n    public static int findNextMaxNum(int[] arr , int n )\\n    {\\n         int temp = -1 ;\\n        for (int i = 0 ; i < arr.length ; i++)\\n        {\\n            if (arr[i] == n) {\\n                while ((i + 1) < arr.length && temp <= n) {\\n                    i++;\\n                    temp = Math.max(n, arr[i]);\\n                }\\n                break;\\n            }\\n        }\\n        return (temp == n) ? -1 : temp ;\\n    }\\n}\\n```\\n\\n\\n# code2\\nBy ArrayList\\nThis code is not considered the best in Runtime 12ms\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] nums3 = new int[nums1.length];\\n        ArrayList<Integer> arr = new ArrayList<>(nums2.length + 1);\\n        for (int n : nums2){\\n            arr.add(n);\\n         }\\n           arr.add(-1);\\n\\n        for (int i = 0; i < nums1.length ; i++)\\n        {\\n            nums3[i] =  findMax(arr , nums1[i]);\\n        }\\n        return nums3;\\n    }\\n        \\n    public static int findMax(ArrayList arr , int n )\\n    {\\n        int temp = -1 ;\\n        for (int i = arr.indexOf(n) + 1 ; i < arr.size() -1 ; i++) \\n        {\\n            temp = Math.max(n , (Integer) arr.get(i));\\n             if (temp > n ) break;\\n        }\\n        \\n        return (temp == n) ? -1 : temp ;\\n    }\\n}\\n```\\n![e78315ef-8a9d-492b-9908-e3917f23eb31_1674946036.087042.jpeg](https://assets.leetcode.com/users/images/fa870c5f-0bd8-4bb0-8a01-fbd1eef5a80f_1693343372.0528889.jpeg)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] nums3 = new int[nums1.length];\\n\\n        for (int i = 0; i < nums3.length ; i++)\\n        {\\n            nums3[i] =  findNextMaxNum(nums2 , nums1[i]);\\n        }\\n        return nums3;\\n    }\\n\\n    public static int findNextMaxNum(int[] arr , int n )\\n    {\\n         int temp = -1 ;\\n        for (int i = 0 ; i < arr.length ; i++)\\n        {\\n            if (arr[i] == n) {\\n                while ((i + 1) < arr.length && temp <= n) {\\n                    i++;\\n                    temp = Math.max(n, arr[i]);\\n                }\\n                break;\\n            }\\n        }\\n        return (temp == n) ? -1 : temp ;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int[] nums3 = new int[nums1.length];\\n        ArrayList<Integer> arr = new ArrayList<>(nums2.length + 1);\\n        for (int n : nums2){\\n            arr.add(n);\\n         }\\n           arr.add(-1);\\n\\n        for (int i = 0; i < nums1.length ; i++)\\n        {\\n            nums3[i] =  findMax(arr , nums1[i]);\\n        }\\n        return nums3;\\n    }\\n        \\n    public static int findMax(ArrayList arr , int n )\\n    {\\n        int temp = -1 ;\\n        for (int i = arr.indexOf(n) + 1 ; i < arr.size() -1 ; i++) \\n        {\\n            temp = Math.max(n , (Integer) arr.get(i));\\n             if (temp > n ) break;\\n        }\\n        \\n        return (temp == n) ? -1 : temp ;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1125833,
                "title": "java-2-for-loops-o-n-2-simple-solution",
                "content": "I\\'m not familiar with hashmap yet and I couldn\\'t find a simple double loop based solution, so I thought I\\'d provide my solution.\\n\\n\"\"\"\\n\\n\\t\\t\\tint[] resultArray = new int[nums1.length];\\n\\t\\t\\tint flag=0, max;        \\n\\t\\t\\tfor(int i=0;i<nums1.length;i++){\\n\\t\\t\\t\\tmax=0;\\n\\t\\t\\t\\tflag=0;\\n\\t\\t\\t\\tfor(int j=0;j<nums2.length;j++){\\n\\t\\t\\t\\t\\tif(nums2[j]==nums1[i])\\n\\t\\t\\t\\t\\t\\tflag=1;\\n\\t\\t\\t\\t\\telse if(flag==1 && nums2[j]>nums1[i]){\\n\\t\\t\\t\\t\\t\\tmax=nums2[j];\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tresultArray[i]= max!=0 ? max : -1 ;\\n\\t\\t\\t}\\n\\t\\t\\treturn resultArray;\\n\\n\"\"\"",
                "solutionTags": [
                    "Java"
                ],
                "code": "I\\'m not familiar with hashmap yet and I couldn\\'t find a simple double loop based solution, so I thought I\\'d provide my solution.\\n\\n\"\"\"\\n\\n\\t\\t\\tint[] resultArray = new int[nums1.length];\\n\\t\\t\\tint flag=0, max;        \\n\\t\\t\\tfor(int i=0;i<nums1.length;i++){\\n\\t\\t\\t\\tmax=0;\\n\\t\\t\\t\\tflag=0;\\n\\t\\t\\t\\tfor(int j=0;j<nums2.length;j++){\\n\\t\\t\\t\\t\\tif(nums2[j]==nums1[i])\\n\\t\\t\\t\\t\\t\\tflag=1;\\n\\t\\t\\t\\t\\telse if(flag==1 && nums2[j]>nums1[i]){\\n\\t\\t\\t\\t\\t\\tmax=nums2[j];\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tresultArray[i]= max!=0 ? max : -1 ;\\n\\t\\t\\t}\\n\\t\\t\\treturn resultArray;\\n\\n\"\"\"",
                "codeTag": "Unknown"
            },
            {
                "id": 978198,
                "title": "python-o-n-beats-98",
                "content": "Such a shit problem description BTW, I reccomend you read this post first to understand problem https://leetcode.com/problems/next-greater-element-i/discuss/159598/anyone-misunderstood-this-question\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, A: List[int], B: List[int]) -> List[int]:  \\n        stack = []\\n        diff = {}\\n        \\n        for pos, val in enumerate(B):\\n            \\n            while stack and stack[-1] < val:\\n                diff[stack.pop()] = val\\n            \\n            stack.append(val)\\n        \\n        for pos in range(len(A)):\\n            \\n            if A[pos] in diff:\\n                A[pos] = diff[A[pos]]\\n            else:\\n                A[pos] = -1\\n        \\n        return A\\n    \\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, A: List[int], B: List[int]) -> List[int]:  \\n        stack = []\\n        diff = {}\\n        \\n        for pos, val in enumerate(B):\\n            \\n            while stack and stack[-1] < val:\\n                diff[stack.pop()] = val\\n            \\n            stack.append(val)\\n        \\n        for pos in range(len(A)):\\n            \\n            if A[pos] in diff:\\n                A[pos] = diff[A[pos]]\\n            else:\\n                A[pos] = -1\\n        \\n        return A\\n    \\n```",
                "codeTag": "Java"
            },
            {
                "id": 114093,
                "title": "python-solution-using-stack-and-hash-table",
                "content": "Python solution using stack and hash table.\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        stack = []\\n        dic = {}\\n        for num in nums2:\\n            while stack != [] and num > stack[-1]:\\n                dic[stack.pop()] = num\\n            stack.append(num)\\n\\n        res = []\\n        for num in nums1:\\n            if num in dic.keys():\\n                res.append(dic[num])\\n            else:\\n                res.append(-1)\\n\\n        return res\\n```",
                "solutionTags": [
                    "Python",
                    "Hash Table",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        stack = []\\n        dic = {}\\n        for num in nums2:\\n            while stack != [] and num > stack[-1]:\\n                dic[stack.pop()] = num\\n            stack.append(num)\\n\\n        res = []\\n        for num in nums1:\\n            if num in dic.keys():\\n                res.append(dic[num])\\n            else:\\n                res.append(-1)\\n\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3827988,
                "title": "c-striver-s-approch-very-eassy-solution-stack-map",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n\\n\\n   stack<int>st;\\n   unordered_map<int,int>mp;\\n\\n   int n=nums2.size();\\n   int m=nums1.size();\\n\\n  \\n   st.push(nums2[n-1]);\\n   \\n   for(int i=n-2;i>=0;i--)\\n   {\\n         \\n         while( !st.empty() && st.top()<=nums2[i])\\n         {\\n\\n        \\n             st.pop();\\n         }\\n\\n         if(!st.empty())\\n         { \\n             if(i<n)\\n             mp[nums2[i]]=st.top();\\n         \\n         }\\n\\n              st.push(nums2[i]);\\n\\n   }\\n\\n  vector<int>ans(m,-1);\\n\\n  for(int i=0;i<m;i++)\\n  {\\n      if(mp[nums1[i]]!=0)\\n      {\\n          ans[i]=mp[nums1[i]];\\n      }\\n  }\\n   \\n\\n\\n  return ans;\\n\\n\\n        \\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n\\n\\n   stack<int>st;\\n   unordered_map<int,int>mp;\\n\\n   int n=nums2.size();\\n   int m=nums1.size();\\n\\n  \\n   st.push(nums2[n-1]);\\n   \\n   for(int i=n-2;i>=0;i--)\\n   {\\n         \\n         while( !st.empty() && st.top()<=nums2[i])\\n         {\\n\\n        \\n             st.pop();\\n         }\\n\\n         if(!st.empty())\\n         { \\n             if(i<n)\\n             mp[nums2[i]]=st.top();\\n         \\n         }\\n\\n              st.push(nums2[i]);\\n\\n   }\\n\\n  vector<int>ans(m,-1);\\n\\n  for(int i=0;i<m;i++)\\n  {\\n      if(mp[nums1[i]]!=0)\\n      {\\n          ans[i]=mp[nums1[i]];\\n      }\\n  }\\n   \\n\\n\\n  return ans;\\n\\n\\n        \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1928957,
                "title": "python-monotonic-stack-hashmap-explained",
                "content": "# Idea\\nWe will first find, for each `num` in `nums2` what is its corresponding next greater element. As we traverse `nums2` we will keep a *decreasing <a href = \"https://leetcode.com/tag/monotonic-stack/\">Monotonic Stack</a>*. If `num` is not larger than the top of the stack, that means **it is not greater than any number currently in the stack**, so we add it at the top. If `num` is larger than the top of the stack, then we take out of the stack all numbers smaller than it and take note in a Python dictionary (hashmap) of `num` being their next greater element. Then we use this dictionary to answer the queries from `nums1`.\\n\\n# The algorithm\\nWe set up an empty stack `monoStack` and an empty dictionary `nextGreaterDict`. Then, for each `num` in `nums2` we will:\\n* pop from `monoStack` all the numbers `x` that are smaller than `num` and for each of those set `nextGreaterDict[x] = num`, then\\n* add `num` to the top of the stack\\n```\\n        for num in nums2:\\n            while monoStack and num > monoStack[-1]:\\n                nextGreaterDict[monoStack.pop()] = num\\n            monoStack.append(num)\\n```\\n**Note:** since at first our stack is empty, we also check if `monoStack` is not empty before checking its top element. This won\\'t be a problem after the first iteration, since we always add the current number to the top of the stack.\\n```\\n```\\nNow for each `num` in `nums1` we can check **in O(1) time** what is its next greater element in `nums2`. If `num` is not a key in `nextGreaterDict`, then there it has no next greater element in `nums2`. Since we won\\'t be using `nums1` again, we can overwrite `nums1[i]` with its next greater element to save memory.\\n```\\n        for i, num in enumerate(nums1):\\n            nums1[i] = nextGreaterDict.get(num, -1)\\n```\\nNow `nums1` has all the next greater elements we were looking for.\\n```\\n        return nums1\\n```\\n&#8718;\\n# The whole solution\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        nextGreaterDict = {}\\n        monoStack = []\\n        \\n        for num in nums2:\\n            while monoStack and num > monoStack[-1]:\\n                nextGreaterDict[monoStack.pop()] = num\\n            monoStack.append(num)\\n                \\n        for i, num in enumerate(nums1):\\n            nums1[i] = nextGreaterDict.get(num, -1)\\n            \\n        return nums1\\n```",
                "solutionTags": [
                    "Python",
                    "Monotonic Stack"
                ],
                "code": "```\\n        for num in nums2:\\n            while monoStack and num > monoStack[-1]:\\n                nextGreaterDict[monoStack.pop()] = num\\n            monoStack.append(num)\\n```\n```\\n```\n```\\n        for i, num in enumerate(nums1):\\n            nums1[i] = nextGreaterDict.get(num, -1)\\n```\n```\\n        return nums1\\n```\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        nextGreaterDict = {}\\n        monoStack = []\\n        \\n        for num in nums2:\\n            while monoStack and num > monoStack[-1]:\\n                nextGreaterDict[monoStack.pop()] = num\\n            monoStack.append(num)\\n                \\n        for i, num in enumerate(nums1):\\n            nums1[i] = nextGreaterDict.get(num, -1)\\n            \\n        return nums1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1529803,
                "title": "python3-o-n-m-solution",
                "content": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        container, stack = {}, collections.deque()\\n        for num in nums2:\\n            while stack and num > stack[-1]:\\n                container[stack.pop()] = num\\n            stack.append(num)\\n        \\n        # print(container)\\n        return [container.get(num, -1) for num in nums1]\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        container, stack = {}, collections.deque()\\n        for num in nums2:\\n            while stack and num > stack[-1]:\\n                container[stack.pop()] = num\\n            stack.append(num)\\n        \\n        # print(container)\\n        return [container.get(num, -1) for num in nums1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1363974,
                "title": "c-easy-to-understand-fast-and-efficient",
                "content": "**Please upvote to motivate me in my quest of documenting all leetcode solutions(to help the community). HAPPY CODING:)\\nAny suggestions and improvements are always welcome**\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n      int num1;\\n        vector<int> ans;\\n      for(int i=0;i<nums1.size();i++)\\n      {\\n          num1=nums1[i];\\n          vector<int>::iterator it=find(nums2.begin(),nums2.end(),nums1[i]);\\n        while(it!=nums2.end())\\n          {\\n              if(*it>num1)\\n              {\\n               ans.push_back(*it);\\n               break;\\n              }\\n              it++;\\n          } \\n            if(it==nums2.end())\\n           ans.push_back(-1);\\n      }   \\n      return ans;  \\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n      int num1;\\n        vector<int> ans;\\n      for(int i=0;i<nums1.size();i++)\\n      {\\n          num1=nums1[i];\\n          vector<int>::iterator it=find(nums2.begin(),nums2.end(),nums1[i]);\\n        while(it!=nums2.end())\\n          {\\n              if(*it>num1)\\n              {\\n               ans.push_back(*it);\\n               break;\\n              }\\n              it++;\\n          } \\n            if(it==nums2.end())\\n           ans.push_back(-1);\\n      }   \\n      return ans;  \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 527614,
                "title": "stack-two-js-solutions",
                "content": "```\\n/*\\n1. Iterate through nums2 and for every number find the next greater number and record it\\nto a Hash Table.\\n2. Iterate through nums1 and for each number get the next greater number from Hash table.\\n\\nFor step 1, we can find the next greater number for each element using Stack.\\n\\nIteration from the start of array:\\n- For each element, we want to check if there is smaller element in stack. \\n- Hence, we keep popping from stack until we find a number greater than or equal to current element.\\nFor all popped numbers, current element is their Next Greater Number. Hence, we record them to a Hash Table\\nwith current element as their NGN.\\n- Then, we push current element into stack so that we can find the NGN for current number (or not if there isn\\'t one).\\n*/\\nvar nextGreaterElement = function(nums1, nums2) {\\n  if (nums1 === null || nums2 === null || nums1.length === 0 || nums2.length === 0) {\\n      return [];\\n  }\\n  let m = new Map();\\n  let stack = [];\\n  for (let i = 0; i < nums2.length; i++) {\\n      while (stack.length > 0 && nums2[i] > stack[stack.length-1]) {\\n          // nums2[i] is the Next Greater Number of popped element\\n          m.set(stack.pop(), nums2[i]);\\n      }\\n      stack.push(nums2[i]);\\n  }\\n  return nums1.map(num => m.get(num) || -1);\\n\\t// T.C: O(M + N), M = length of nums1, N = length of nums2\\n\\t// S.C: O(M + N)\\n};\\n```\\n\\n```\\n/*\\n1. Iterate through nums2 and for every number find the next greater number and record it\\nto a Hash Table.\\n2. Iterate through nums1 and for each number get the next greater number from Hash table.\\n\\nFor step 1, we can find the next greater number for each element using Stack.\\n\\nIteration from the back of array:\\n- For each element, we want to check if there is greater element in stack. \\n- Hence, we keep popping from stack until we find the greater number or stack gets empty.\\n- Then, we push current element into stack so that our next element can find its NGN (Next Greater Number).\\n*/\\nvar nextGreaterElement = function(nums1, nums2) {\\n    if (nums1 === null || nums2 === null || nums1.length === 0 || nums2.length === 0) {\\n        return [];\\n    }\\n    let m = new Map();\\n    let stack = [];\\n    for (let i = nums2.length-1; i >= 0; i--) {\\n        while (stack.length > 0 && nums2[i] >= stack[stack.length-1]) {\\n            stack.pop();\\n        }\\n        if (stack.length > 0) {\\n            m.set(nums2[i], stack[stack.length-1]);\\n        }\\n        stack.push(nums2[i]);\\n    }\\n    for (let i = 0; i < nums1.length; i++) {\\n        nums1[i] = m.get(nums1[i]) || -1;\\n    }\\n    return nums1;\\n    // T.C: O(M + N), M = length of nums1, N = length of nums2\\n    // S.C: O(N)\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/*\\n1. Iterate through nums2 and for every number find the next greater number and record it\\nto a Hash Table.\\n2. Iterate through nums1 and for each number get the next greater number from Hash table.\\n\\nFor step 1, we can find the next greater number for each element using Stack.\\n\\nIteration from the start of array:\\n- For each element, we want to check if there is smaller element in stack. \\n- Hence, we keep popping from stack until we find a number greater than or equal to current element.\\nFor all popped numbers, current element is their Next Greater Number. Hence, we record them to a Hash Table\\nwith current element as their NGN.\\n- Then, we push current element into stack so that we can find the NGN for current number (or not if there isn\\'t one).\\n*/\\nvar nextGreaterElement = function(nums1, nums2) {\\n  if (nums1 === null || nums2 === null || nums1.length === 0 || nums2.length === 0) {\\n      return [];\\n  }\\n  let m = new Map();\\n  let stack = [];\\n  for (let i = 0; i < nums2.length; i++) {\\n      while (stack.length > 0 && nums2[i] > stack[stack.length-1]) {\\n          // nums2[i] is the Next Greater Number of popped element\\n          m.set(stack.pop(), nums2[i]);\\n      }\\n      stack.push(nums2[i]);\\n  }\\n  return nums1.map(num => m.get(num) || -1);\\n\\t// T.C: O(M + N), M = length of nums1, N = length of nums2\\n\\t// S.C: O(M + N)\\n};\\n```\n```\\n/*\\n1. Iterate through nums2 and for every number find the next greater number and record it\\nto a Hash Table.\\n2. Iterate through nums1 and for each number get the next greater number from Hash table.\\n\\nFor step 1, we can find the next greater number for each element using Stack.\\n\\nIteration from the back of array:\\n- For each element, we want to check if there is greater element in stack. \\n- Hence, we keep popping from stack until we find the greater number or stack gets empty.\\n- Then, we push current element into stack so that our next element can find its NGN (Next Greater Number).\\n*/\\nvar nextGreaterElement = function(nums1, nums2) {\\n    if (nums1 === null || nums2 === null || nums1.length === 0 || nums2.length === 0) {\\n        return [];\\n    }\\n    let m = new Map();\\n    let stack = [];\\n    for (let i = nums2.length-1; i >= 0; i--) {\\n        while (stack.length > 0 && nums2[i] >= stack[stack.length-1]) {\\n            stack.pop();\\n        }\\n        if (stack.length > 0) {\\n            m.set(nums2[i], stack[stack.length-1]);\\n        }\\n        stack.push(nums2[i]);\\n    }\\n    for (let i = 0; i < nums1.length; i++) {\\n        nums1[i] = m.get(nums1[i]) || -1;\\n    }\\n    return nums1;\\n    // T.C: O(M + N), M = length of nums1, N = length of nums2\\n    // S.C: O(N)\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2764740,
                "title": "javascript-iterative-simplest-method-99-performant",
                "content": "Walk through `nums1` \\nWalk *backwards* (we only care about elements to the right) through `nums2` until you get to the current value from `nums1` (`i`) \\nStore *any* values greater than `i` in `x` (by replacing) because we want the element *closest* to `i` \\nOnce we\\'ve reached the value in `nums2` that equals `i` we can break and push `x` to our output array.\\n\\nIf this helped you, please upvote! Thanks.\\n\\n```\\nfunction nextGreaterElement(nums1: number[], nums2: number[]): number[] {\\n    let out = []\\n    for (let i of nums1) {\\n        let x = -1\\n        for (let j = nums2.length-1; nums2[j]!=i; j--) {\\n            if (nums2[j] > i) x = nums2[j] \\n        }\\n        out.push(x)\\n    }\\n    return out\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Iterator"
                ],
                "code": "```\\nfunction nextGreaterElement(nums1: number[], nums2: number[]): number[] {\\n    let out = []\\n    for (let i of nums1) {\\n        let x = -1\\n        for (let j = nums2.length-1; nums2[j]!=i; j--) {\\n            if (nums2[j] > i) x = nums2[j] \\n        }\\n        out.push(x)\\n    }\\n    return out\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2356237,
                "title": "c-easy-to-understand-o-n-optimized",
                "content": "**very simple solution easy to understand**\\n\\n\\n**Please upvote if you think it really helps you**\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int>s;\\n        vector<int>v;\\n        unordered_map<int,int>m;\\n        \\n        for(int i=0;i<nums2.size();i++)\\n        {\\n        while(!s.empty() && s.top()<=nums2[i])\\n        {\\n         int k=s.top(); \\n            m[k]=nums2[i];\\n            s.pop();\\n        }\\n        s.push(nums2[i]);  \\n        }\\n        \\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            if(m[nums1[i]])\\n            {\\n                v.push_back(m[nums1[i]]);\\n            }\\n            else\\n                v.push_back(-1);\\n        }\\n            \\n    return v;    \\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int>s;\\n        vector<int>v;\\n        unordered_map<int,int>m;\\n        \\n        for(int i=0;i<nums2.size();i++)\\n        {\\n        while(!s.empty() && s.top()<=nums2[i])\\n        {\\n         int k=s.top(); \\n            m[k]=nums2[i];\\n            s.pop();\\n        }\\n        s.push(nums2[i]);  \\n        }\\n        \\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            if(m[nums1[i]])\\n            {\\n                v.push_back(m[nums1[i]]);\\n            }\\n            else\\n                v.push_back(-1);\\n        }\\n            \\n    return v;    \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1867158,
                "title": "javascript-solution",
                "content": "```\\nlet greaterElements = (nums1, nums2) => \\n  nums1.map((num1) => nums2.slice(nums2.indexOf(num1), nums2.length).find(num2 => num2 > num1) ?? -1);\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nlet greaterElements = (nums1, nums2) => \\n  nums1.map((num1) => nums2.slice(nums2.indexOf(num1), nums2.length).find(num2 => num2 > num1) ?? -1);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1825225,
                "title": "aditya-verma-approch",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& num1, vector<int>& num2) {\\n        int n1 = num1.size();\\n        int n2 = num2.size();\\n        stack<int> st;\\n        unordered_map<int , int > mp;\\n        \\n        \\n        for(int i = n2-1 ;i >= 0 ;i--){\\n            if(st.empty()){\\n                mp[num2[i]] = -1;\\n            }\\n            else if(st.top( ) > num2[i]){\\n                mp[num2[i]] = st.top();\\n            }\\n            else{\\n                while(!st.empty() and st.top() <= num2[i]){\\n                    st.pop();\\n                }\\n                if(st.size() == 0) mp[num2[i]] = -1;\\n                else mp[num2[i]]  = st.top();\\n            }\\n            st.push(num2[i]);\\n        }\\n        vector<int> res;\\n        for(auto &x : num1){\\n            res.push_back(mp[x]);\\n        }\\n        return res;\\n    }\\n};\\n```\\nupvote plzzzzz",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& num1, vector<int>& num2) {\\n        int n1 = num1.size();\\n        int n2 = num2.size();\\n        stack<int> st;\\n        unordered_map<int , int > mp;\\n        \\n        \\n        for(int i = n2-1 ;i >= 0 ;i--){\\n            if(st.empty()){\\n                mp[num2[i]] = -1;\\n            }\\n            else if(st.top( ) > num2[i]){\\n                mp[num2[i]] = st.top();\\n            }\\n            else{\\n                while(!st.empty() and st.top() <= num2[i]){\\n                    st.pop();\\n                }\\n                if(st.size() == 0) mp[num2[i]] = -1;\\n                else mp[num2[i]]  = st.top();\\n            }\\n            st.push(num2[i]);\\n        }\\n        vector<int> res;\\n        for(auto &x : num1){\\n            res.push_back(mp[x]);\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1529498,
                "title": "c-brute-force",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) \\n    {\\n        vector<int> ans;\\n        for(int i=0; i<n1.size(); i++)\\n        {\\n            int check = 0;\\n            for(int j=0; j<n2.size(); j++)\\n            {\\n                if(n2[j] == n1[i])\\n                {\\n                    for(int k=j+1; k<n2.size(); k++)\\n                    {\\n                        if(n2[k] > n1[i]) \\n                        {\\n                            check = 1;\\n                            ans.push_back(n2[k]);\\n                            break;\\n                        }\\n                    }\\n                }\\n                if(check)\\n                    break;\\n            }\\n            if(!check)\\n                ans.push_back(-1);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) \\n    {\\n        vector<int> ans;\\n        for(int i=0; i<n1.size(); i++)\\n        {\\n            int check = 0;\\n            for(int j=0; j<n2.size(); j++)\\n            {\\n                if(n2[j] == n1[i])\\n                {\\n                    for(int k=j+1; k<n2.size(); k++)\\n                    {\\n                        if(n2[k] > n1[i]) \\n                        {\\n                            check = 1;\\n                            ans.push_back(n2[k]);\\n                            break;\\n                        }\\n                    }\\n                }\\n                if(check)\\n                    break;\\n            }\\n            if(!check)\\n                ans.push_back(-1);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 273382,
                "title": "java-1ms-simple-thing",
                "content": "```\\nint[] map = new int[10000];\\n        for(int i=0;i<nums2.length;i++){\\n            map[nums2[i]] = i;\\n        }\\n        for(int i=0;i<nums1.length;i++){\\n            for(int j=map[nums1[i]];j<nums2.length;j++){\\n                if(nums1[i]<nums2[j]){\\n                    nums1[i]=nums2[j];\\n                    break;\\n                }\\n                if(j==nums2.length-1 && nums1[i]>=nums2[j]){\\n                    nums1[i]=-1;\\n                    break;\\n                }\\n            }\\n        }\\n        return nums1;",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nint[] map = new int[10000];\\n        for(int i=0;i<nums2.length;i++){\\n            map[nums2[i]] = i;\\n        }\\n        for(int i=0;i<nums1.length;i++){\\n            for(int j=map[nums1[i]];j<nums2.length;j++){\\n                if(nums1[i]<nums2[j]){\\n                    nums1[i]=nums2[j];\\n                    break;\\n                }\\n                if(j==nums2.length-1 && nums1[i]>=nums2[j]){\\n                    nums1[i]=-1;\\n                    break;\\n                }\\n            }\\n        }\\n        return nums1;",
                "codeTag": "Unknown"
            },
            {
                "id": 183740,
                "title": "python-solution",
                "content": "Basically the same problem as 739. Daily Temperatures. \\nTime complexity: O(n+m), space complexity: O(n+m), where `n = len(nums1)`, and `m = len(nums2)`:\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        if not nums1:\\n            return []\\n        res = [-1] * len(nums1)\\n        stack = []\\n        dic = {}\\n        for i in range(len(nums2)-1, -1, -1):\\n            while stack and stack[-1] < nums2[i]:\\n                stack.pop()\\n            if not stack:\\n                dic[nums2[i]] = -1\\n            else:\\n                dic[nums2[i]] = stack[-1]\\n            stack.append(nums2[i])\\n        for i in range(len(nums1)):\\n            res[i] = dic[nums1[i]]\\n        return res\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        if not nums1:\\n            return []\\n        res = [-1] * len(nums1)\\n        stack = []\\n        dic = {}\\n        for i in range(len(nums2)-1, -1, -1):\\n            while stack and stack[-1] < nums2[i]:\\n                stack.pop()\\n            if not stack:\\n                dic[nums2[i]] = -1\\n            else:\\n                dic[nums2[i]] = stack[-1]\\n            stack.append(nums2[i])\\n        for i in range(len(nums1)):\\n            res[i] = dic[nums1[i]]\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 170356,
                "title": "python-monotonous-stack-o-n",
                "content": "It is ez to understand.\\nMeet smaller(than the last number in stack) number, push;\\nmeet larger(than the last number in stack) number, pop(all the smaller numbers than the current number).\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        dic = {}\\n        stack = []\\n        for i in range(len(nums2)):\\n            while stack and stack[-1] < nums2[i]:\\n                dic[stack.pop()] = nums2[i]\\n            stack.append(nums2[i])\\n        res = []\\n        for x in nums1:\\n            if x in dic:\\n                res.append(dic[x])\\n            else:\\n                res.append(-1)\\n        return res\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        dic = {}\\n        stack = []\\n        for i in range(len(nums2)):\\n            while stack and stack[-1] < nums2[i]:\\n                dic[stack.pop()] = nums2[i]\\n            stack.append(nums2[i])\\n        res = []\\n        for x in nums1:\\n            if x in dic:\\n                res.append(dic[x])\\n            else:\\n                res.append(-1)\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 157601,
                "title": "c-o-n-concise-solution-using-hash-table-and-stack",
                "content": "This at least a medium problem.....\\nWe can use a monotone stack to calculate the next greater element of each element in `nums`. It costs O(n) in total.\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        reverse(nums.begin(), nums.end());\\n        unordered_map<int, int> m;\\n        stack<int> s;\\n        for (int i : nums) {\\n            while (!s.empty() && s.top() < i) s.pop();\\n            m[i] = s.empty() ? -1 : s.top();\\n            s.push(i);\\n        }\\n        vector<int> result;\\n        for (int i : findNums) result.push_back(m[i]);\\n        return result;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        reverse(nums.begin(), nums.end());\\n        unordered_map<int, int> m;\\n        stack<int> s;\\n        for (int i : nums) {\\n            while (!s.empty() && s.top() < i) s.pop();\\n            m[i] = s.empty() ? -1 : s.top();\\n            s.push(i);\\n        }\\n        vector<int> result;\\n        for (int i : findNums) result.push_back(m[i]);\\n        return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 97635,
                "title": "c-o-n-time",
                "content": "C++ version of this [post](https://discuss.leetcode.com/topic/77916/java-10-lines-linear-time-complexity-o-n-with-explanation).\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        unordered_map<int, int>m;\\n        stack<int>s;\\n        for(auto x: nums){\\n            while(!s.empty() && s.top() < x){\\n                m[s.top()] = x;\\n                s.pop();\\n            }\\n            s.push(x);\\n        }\\n        for(auto& x: findNums) x = m.count(x) ? m[x] : -1;\\n        return findNums;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        unordered_map<int, int>m;\\n        stack<int>s;\\n        for(auto x: nums){\\n            while(!s.empty() && s.top() < x){\\n                m[s.top()] = x;\\n                s.pop();\\n            }\\n            s.push(x);\\n        }\\n        for(auto& x: findNums) x = m.count(x) ? m[x] : -1;\\n        return findNums;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 97684,
                "title": "c-solution-3ms-beats-100",
                "content": "```\\n/**\\n * Return an array of size *returnSize.\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\nint* nextGreaterElement(int* findNums, int findNumsSize, int* nums, int numsSize, int* returnSize) {\\n    int* returnArray = NULL;\\n    int* numsHash = NULL;\\n\\n    *returnSize = findNumsSize;\\n\\n    if(findNums != NULL && findNumsSize != 0 &&\\n       nums != NULL && numsSize != 0) {\\n        /* initalize the returnArray */\\n        returnArray = malloc((*returnSize) * sizeof(int));\\n        if(returnArray == NULL) {\\n            err(-1, \"nextGreaterElement: line 17: malloc: out of space!\");\\n        }\\n\\n        /* find the max element in the nums */\\n        int max = 0;\\n        for(int i = 0; i < numsSize; i++) {\\n            if(max < nums[i]) {\\n                max = nums[i];\\n            }\\n        }\\n\\n        /* initialize the numsHash */\\n        numsHash = malloc((max+1) * sizeof(int));\\n        if(numsHash == NULL) {\\n            err(-1, \"nextGreaterElement: line 31: malloc: out of space!\");\\n        }\\n\\n        /* hash the nums' element to numsHash, the key is nums's element, */\\n        /* the velue is the next greater element, or -1 if does not exist */\\n        /* nums[numsSize-1] is the last element of nums, don't have next, */\\n        /* so set it to -1 directly */\\n        for(int i = 0; i < numsSize-1; i++) {\\n            numsHash[nums[i]] = -1;\\n            for(int j = i+1; j < numsSize; j++) {\\n                if(nums[j] > nums[i]) {\\n                    numsHash[nums[i]] = nums[j];\\n                    break;\\n                }\\n            }\\n        }\\n        numsHash[nums[numsSize-1]] = -1;\\n\\n        /* find the next greater element */\\n        for(int i = 0; i < findNumsSize; i++) {\\n            returnArray[i] = numsHash[findNums[i]];\\n        }\\n    }\\n\\n    return returnArray;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\n/**\\n * Return an array of size *returnSize.\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\nint* nextGreaterElement(int* findNums, int findNumsSize, int* nums, int numsSize, int* returnSize) {\\n    int* returnArray = NULL;\\n    int* numsHash = NULL;\\n\\n    *returnSize = findNumsSize;\\n\\n    if(findNums != NULL && findNumsSize != 0 &&\\n       nums != NULL && numsSize != 0) {\\n        /* initalize the returnArray */\\n        returnArray = malloc((*returnSize) * sizeof(int));\\n        if(returnArray == NULL) {\\n            err(-1, \"nextGreaterElement: line 17: malloc: out of space!\");\\n        }\\n\\n        /* find the max element in the nums */\\n        int max = 0;\\n        for(int i = 0; i < numsSize; i++) {\\n            if(max < nums[i]) {\\n                max = nums[i];\\n            }\\n        }\\n\\n        /* initialize the numsHash */\\n        numsHash = malloc((max+1) * sizeof(int));\\n        if(numsHash == NULL) {\\n            err(-1, \"nextGreaterElement: line 31: malloc: out of space!\");\\n        }\\n\\n        /* hash the nums' element to numsHash, the key is nums's element, */\\n        /* the velue is the next greater element, or -1 if does not exist */\\n        /* nums[numsSize-1] is the last element of nums, don't have next, */\\n        /* so set it to -1 directly */\\n        for(int i = 0; i < numsSize-1; i++) {\\n            numsHash[nums[i]] = -1;\\n            for(int j = i+1; j < numsSize; j++) {\\n                if(nums[j] > nums[i]) {\\n                    numsHash[nums[i]] = nums[j];\\n                    break;\\n                }\\n            }\\n        }\\n        numsHash[nums[numsSize-1]] = -1;\\n\\n        /* find the next greater element */\\n        for(int i = 0; i < findNumsSize; i++) {\\n            returnArray[i] = numsHash[findNums[i]];\\n        }\\n    }\\n\\n    return returnArray;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3228230,
                "title": "stack-and-map",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(N)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int,int> mp;\\n        stack<int> st;\\n        int n=nums2.size(),m=nums1.size();\\n        st.push(nums2[n-1]);  // push last element\\n        for(int i=n-2;i>=0;i--){\\n            while(!st.empty() && st.top()<=nums2[i]){\\n                st.pop();\\n            }\\n            if(!st.empty()){\\n                mp[nums2[i]]=st.top();//storing the next greatest element\\n            }\\n            st.push(nums2[i]);\\n        }\\n        vector<int> res(m,-1);\\n        for(int i=0;i<m;i++){\\n            if(mp[nums1[i]]!=0)\\n                res[i]=mp[nums1[i]];\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Hash Table",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int,int> mp;\\n        stack<int> st;\\n        int n=nums2.size(),m=nums1.size();\\n        st.push(nums2[n-1]);  // push last element\\n        for(int i=n-2;i>=0;i--){\\n            while(!st.empty() && st.top()<=nums2[i]){\\n                st.pop();\\n            }\\n            if(!st.empty()){\\n                mp[nums2[i]]=st.top();//storing the next greatest element\\n            }\\n            st.push(nums2[i]);\\n        }\\n        vector<int> res(m,-1);\\n        for(int i=0;i<m;i++){\\n            if(mp[nums1[i]]!=0)\\n                res[i]=mp[nums1[i]];\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3159637,
                "title": "best-o-n1-n2-solution",
                "content": "# Approach 1\\nBrute-Force\\n\\n# Complexity\\n- Time complexity:\\n$$O(n1*n2*n2)$$ \\n\\n- Space complexity:\\n$$O(1)$$ \\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector <int> ans;\\n        for (int i = 0; i < nums1.size(); i++) {\\n            for (int j = 0; j < nums2.size(); j++) {\\n                if (nums1[i] == nums2[j]) {\\n                    int nextGE = -1;\\n                    for (int k = j + 1; k < nums2.size(); k++) {\\n                        if (nums2[k] > nums2[j]) {\\n                            nextGE = nums2[k];\\n                            break;\\n                        }\\n                    }\\n                    ans.push_back(nextGE);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n# Approach 2\\nUsing Stack\\n\\n# Complexity\\n- Time complexity:\\n$$O(n1+n2)$$ \\n\\n- Space complexity:\\n$$O(n2)$$ \\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int n = nums2.size();\\n        vector <int> ans;\\n        stack <int> s;\\n        s.push(nums2[n - 1]);\\n        unordered_map <int, int> mp;\\n        mp[nums2[n - 1]] = -1;\\n        for (int i = n - 2; i >= 0; i--) {\\n            while (s.empty() == false && s.top() <= nums2[i])\\n                s.pop();\\n            int nextGE = s.empty() ? -1 : s.top();\\n            mp[nums2[i]] = nextGE;\\n            s.push(nums2[i]);\\n        }\\n        for (int i = 0; i < nums1.size(); i++) \\n            ans.push_back(mp[nums1[i]]);\\n        return ans; \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector <int> ans;\\n        for (int i = 0; i < nums1.size(); i++) {\\n            for (int j = 0; j < nums2.size(); j++) {\\n                if (nums1[i] == nums2[j]) {\\n                    int nextGE = -1;\\n                    for (int k = j + 1; k < nums2.size(); k++) {\\n                        if (nums2[k] > nums2[j]) {\\n                            nextGE = nums2[k];\\n                            break;\\n                        }\\n                    }\\n                    ans.push_back(nextGE);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int n = nums2.size();\\n        vector <int> ans;\\n        stack <int> s;\\n        s.push(nums2[n - 1]);\\n        unordered_map <int, int> mp;\\n        mp[nums2[n - 1]] = -1;\\n        for (int i = n - 2; i >= 0; i--) {\\n            while (s.empty() == false && s.top() <= nums2[i])\\n                s.pop();\\n            int nextGE = s.empty() ? -1 : s.top();\\n            mp[nums2[i]] = nextGE;\\n            s.push(nums2[i]);\\n        }\\n        for (int i = 0; i < nums1.size(); i++) \\n            ans.push_back(mp[nums1[i]]);\\n        return ans; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2773239,
                "title": "java",
                "content": "If you like it pls upvote\\n```\\n\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Stack<Integer> stack = new Stack<>();\\n        Map<Integer, Integer> map = new HashMap<>();\\n\\n        for (int i = 0; i < nums2.length; i++) {\\n            while (!stack.isEmpty() && nums2[i] > stack.peek()) {\\n                map.put(stack.pop(), nums2[i]);\\n            }\\n            stack.push(nums2[i]);\\n        }\\n\\n        while (!stack.empty()) {\\n            map.put(stack.pop(), -1);\\n        }\\n\\n        int[] arr = new int[nums1.length];\\n\\n        for (int i = 0; i < nums1.length; i++) {\\n            arr[i] = map.get(nums1[i]);\\n        }\\n\\n        return arr;\\n    }\\n\\n```",
                "solutionTags": [
                    "Stack"
                ],
                "code": "```\\n\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Stack<Integer> stack = new Stack<>();\\n        Map<Integer, Integer> map = new HashMap<>();\\n\\n        for (int i = 0; i < nums2.length; i++) {\\n            while (!stack.isEmpty() && nums2[i] > stack.peek()) {\\n                map.put(stack.pop(), nums2[i]);\\n            }\\n            stack.push(nums2[i]);\\n        }\\n\\n        while (!stack.empty()) {\\n            map.put(stack.pop(), -1);\\n        }\\n\\n        int[] arr = new int[nums1.length];\\n\\n        for (int i = 0; i < nums1.length; i++) {\\n            arr[i] = map.get(nums1[i]);\\n        }\\n\\n        return arr;\\n    }\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2716259,
                "title": "c-90-faster-than-all-easy",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n  vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        unordered_map<int, int> m;\\n        stack<int>st;\\n        st.push(-1);\\n        \\n        for (int i = n2.size()-1; i >= 0; i--)\\n        {\\n            while (st.top() != -1 && n2[i] > st.top())  \\n                st.pop();\\n            m[n2[i]] = st.top();\\n            st.push(n2[i]);\\n        }\\n        for (int i = 0; i < n1.size(); i++)\\n            n1[i] = m[n1[i]];\\n        \\n        return n1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n  vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        unordered_map<int, int> m;\\n        stack<int>st;\\n        st.push(-1);\\n        \\n        for (int i = n2.size()-1; i >= 0; i--)\\n        {\\n            while (st.top() != -1 && n2[i] > st.top())  \\n                st.pop();\\n            m[n2[i]] = st.top();\\n            st.push(n2[i]);\\n        }\\n        for (int i = 0; i < n1.size(); i++)\\n            n1[i] = m[n1[i]];\\n        \\n        return n1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2412219,
                "title": "is-this-really-tagged-as-easy",
                "content": "Is this really tagged as EASY? medium should be its tag.. or is it just me.. :)",
                "solutionTags": [],
                "code": "Is this really tagged as EASY? medium should be its tag.. or is it just me.. :)",
                "codeTag": "Unknown"
            },
            {
                "id": 2183011,
                "title": "python-simple-python-solution-by-checking-next-element",
                "content": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 223 ms, faster than 10.99% of Python3 online submissions for Next Greater Element I.\\n# Memory Usage: 14.2 MB, less than 55.47% of Python3 online submissions for Next Greater Element I.\\n\\tclass Solution:\\n\\t\\tdef nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\n\\t\\t\\tresult = []\\n\\n\\t\\t\\tfor i in range(len(nums1)):\\n\\n\\t\\t\\t\\tstart = False\\n\\t\\t\\t\\tfor j in range(len(nums2)):\\n\\n\\t\\t\\t\\t\\tif nums1[i] == nums2[j]:\\n\\t\\t\\t\\t\\t\\tstart = True\\n\\n\\t\\t\\t\\t\\tif start == True and nums2[j] > nums1[i]:\\n\\t\\t\\t\\t\\t\\tresult.append(nums2[j])\\n\\t\\t\\t\\t\\t\\tstart = False\\n\\t\\t\\t\\t\\t\\tbreak\\n\\n\\t\\t\\t\\tif start == True:\\n\\t\\t\\t\\t\\tresult.append(-1)\\n\\n\\t\\t\\treturn result\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "# If you like the solution, please upvote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 223 ms, faster than 10.99% of Python3 online submissions for Next Greater Element I.\\n# Memory Usage: 14.2 MB, less than 55.47% of Python3 online submissions for Next Greater Element I.\\n\\tclass Solution:\\n\\t\\tdef nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\n\\t\\t\\tresult = []\\n\\n\\t\\t\\tfor i in range(len(nums1)):\\n\\n\\t\\t\\t\\tstart = False\\n\\t\\t\\t\\tfor j in range(len(nums2)):\\n\\n\\t\\t\\t\\t\\tif nums1[i] == nums2[j]:\\n\\t\\t\\t\\t\\t\\tstart = True\\n\\n\\t\\t\\t\\t\\tif start == True and nums2[j] > nums1[i]:\\n\\t\\t\\t\\t\\t\\tresult.append(nums2[j])\\n\\t\\t\\t\\t\\t\\tstart = False\\n\\t\\t\\t\\t\\t\\tbreak\\n\\n\\t\\t\\t\\tif start == True:\\n\\t\\t\\t\\t\\tresult.append(-1)\\n\\n\\t\\t\\treturn result\\n",
                "codeTag": "Java"
            },
            {
                "id": 2080228,
                "title": "python-easy-solution-using-stack-hashmap",
                "content": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        stack = []\\n        nextGreaterDic = {ch:-1 for ch in nums2}\\n        \\n        for i in range(len(nums2)):\\n            while stack and nums2[stack[-1]] < nums2[i]:\\n                nextGreaterDic[nums2[stack.pop()]] = nums2[i]\\n            stack.append(i)\\n        \\n        for i, ch in enumerate(nums1):\\n            nums1[i] = nextGreaterDic[ch]\\n        \\n        return nums1\\n        \\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Python3",
                    "JavaScript",
                    "Go",
                    "Array",
                    "Hash Table",
                    "Two Pointers",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        stack = []\\n        nextGreaterDic = {ch:-1 for ch in nums2}\\n        \\n        for i in range(len(nums2)):\\n            while stack and nums2[stack[-1]] < nums2[i]:\\n                nextGreaterDic[nums2[stack.pop()]] = nums2[i]\\n            stack.append(i)\\n        \\n        for i, ch in enumerate(nums1):\\n            nums1[i] = nextGreaterDic[ch]\\n        \\n        return nums1\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2041584,
                "title": "c-easy-simple-solution-o-n",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> s;\\n        unordered_map<int,int> mp;\\n        for(auto m : nums2){\\n            while(s.size() && m>s.top()){\\n                mp[s.top()] = m;\\n                s.pop();\\n            }\\n            s.push(m);\\n        }\\n        int n = nums1.size();\\n        vector<int>res(n , -1);\\n        \\n        for(int i = 0 ; i< n ; i++){\\n            if(mp.find(nums1[i]) != mp.end()){\\n                res[i] = mp[nums1[i]];\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> s;\\n        unordered_map<int,int> mp;\\n        for(auto m : nums2){\\n            while(s.size() && m>s.top()){\\n                mp[s.top()] = m;\\n                s.pop();\\n            }\\n            s.push(m);\\n        }\\n        int n = nums1.size();\\n        vector<int>res(n , -1);\\n        \\n        for(int i = 0 ; i< n ; i++){\\n            if(mp.find(nums1[i]) != mp.end()){\\n                res[i] = mp[nums1[i]];\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1670863,
                "title": "c-simple-and-efficient-stack-solution",
                "content": "Code is itself explainable, Do let me know in comments if some improvements require.\\n```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> st;\\n        vector<int> ans;\\n        unordered_map<int, int> umap;\\n        \\n       for(int i = nums2.size() - 1; i >= 0; i--) {\\n            \\n            while(!st.empty() && st.top() < nums2[i]){\\n                st.pop();\\n            }\\n            \\n            if(st.empty()) {\\n                umap[nums2[i]] = -1;\\n            } else {\\n                umap[nums2[i]] = st.top();\\n            }\\n            st.push(nums2[i]);   \\n        }\\n        \\n        for(int i = 0; i < nums1.size(); i++) {\\n            ans.push_back(umap[nums1[i]]);\\n        }\\n        \\n        return ans;\\n    }\\n```\\n\\n**Do Upvote if you like the solution!!!**",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> st;\\n        vector<int> ans;\\n        unordered_map<int, int> umap;\\n        \\n       for(int i = nums2.size() - 1; i >= 0; i--) {\\n            \\n            while(!st.empty() && st.top() < nums2[i]){\\n                st.pop();\\n            }\\n            \\n            if(st.empty()) {\\n                umap[nums2[i]] = -1;\\n            } else {\\n                umap[nums2[i]] = st.top();\\n            }\\n            st.push(nums2[i]);   \\n        }\\n        \\n        for(int i = 0; i < nums1.size(); i++) {\\n            ans.push_back(umap[nums1[i]]);\\n        }\\n        \\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1528497,
                "title": "python-simple",
                "content": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        res = []\\n        for i in nums1:\\n            length = len(res)\\n            k = nums2.index(i)\\n            for j in nums2[k:]:\\n                if j > i:\\n                    res.append(j)\\n                    break\\n\\n            if len(res) == length:\\n                res.append(-1)\\n\\n        return res\\n                \\n```\\nI hope that you\\'ve found the solution useful.\\nIn that case, please do upvote and encourage me to on my quest to document all leetcode problems\\uD83D\\uDE03",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        res = []\\n        for i in nums1:\\n            length = len(res)\\n            k = nums2.index(i)\\n            for j in nums2[k:]:\\n                if j > i:\\n                    res.append(j)\\n                    break\\n\\n            if len(res) == length:\\n                res.append(-1)\\n\\n        return res\\n                \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1299716,
                "title": "java-o-n-and-simple",
                "content": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n       Map<Integer,Integer> map = new HashMap<Integer, Integer>();\\n       Stack<Integer> stack = new Stack<Integer>();\\n        \\n        int[] ans = new int[nums1.length];\\n        \\n        for(int num: nums2) {\\n            while(!stack.empty() && num > stack.peek()) map.put(stack.pop(), num);\\n            stack.push(num);\\n        }\\n        \\n        int i = 0;\\n        for(int num: nums1) {\\n            ans[i++] = map.getOrDefault(num, -1);\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n       Map<Integer,Integer> map = new HashMap<Integer, Integer>();\\n       Stack<Integer> stack = new Stack<Integer>();\\n        \\n        int[] ans = new int[nums1.length];\\n        \\n        for(int num: nums2) {\\n            while(!stack.empty() && num > stack.peek()) map.put(stack.pop(), num);\\n            stack.push(num);\\n        }\\n        \\n        int i = 0;\\n        for(int num: nums1) {\\n            ans[i++] = map.getOrDefault(num, -1);\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 553210,
                "title": "clean-and-easy-to-understand-javascript-code-with-comments",
                "content": "```\\nvar nextGreaterElement = function(nums1, nums2) {\\n    /*\\n    [4,1,2] - nums1 \\n    [1,3,4,2] - nums2\\n    //iterare over nums2 (as it has all the values)\\n    //put the first item in the stack\\n    //when putting next item in stack compare with last item in stack - ex 3>1 = yes then pop 1 and map it to 3  and keep going\\n    map \\n    {\\'1\\':3,\\n    \\'3\\':4}\\n    stack - remaining items \\n    [4, 2]\\n    //map the remining items to -1 \\n    final map\\n   { \\'1\\': 3, \\'2\\': -1, \\'3\\': 4, \\'4\\': -1 }\\n    //now iterate through nums1 and get the mapping for each element\\n    //push into res arr  \\n   [-1,3,-1]\\n    */ \\n    \\n    \\n    var stack = [];\\n    var map = {};\\n    var res = [];\\n    \\n    for (var i = 0; i < nums2.length; i++) {\\n        while(stack.length > 0 && nums2[i] > stack[stack.length -1]){          \\n            var lastEl = stack.pop();\\n            map[lastEl] = nums2[i];\\n            \\n        }\\n        //first element and elements that are < stack elements \\n        stack.push(nums2[i]);\\n    }\\n    \\n    while(stack.length > 0){  \\n        var remaining = stack.pop();\\n        map[remaining] = -1;\\n    }\\n    \\n    for(var i=0; i<nums1.length; i++){\\n        var nums = map[nums1[i]];\\n        res.push(nums)\\n    }\\n    \\n    return res;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar nextGreaterElement = function(nums1, nums2) {\\n    /*\\n    [4,1,2] - nums1 \\n    [1,3,4,2] - nums2\\n    //iterare over nums2 (as it has all the values)\\n    //put the first item in the stack\\n    //when putting next item in stack compare with last item in stack - ex 3>1 = yes then pop 1 and map it to 3  and keep going\\n    map \\n    {\\'1\\':3,\\n    \\'3\\':4}\\n    stack - remaining items \\n    [4, 2]\\n    //map the remining items to -1 \\n    final map\\n   { \\'1\\': 3, \\'2\\': -1, \\'3\\': 4, \\'4\\': -1 }\\n    //now iterate through nums1 and get the mapping for each element\\n    //push into res arr  \\n   [-1,3,-1]\\n    */ \\n    \\n    \\n    var stack = [];\\n    var map = {};\\n    var res = [];\\n    \\n    for (var i = 0; i < nums2.length; i++) {\\n        while(stack.length > 0 && nums2[i] > stack[stack.length -1]){          \\n            var lastEl = stack.pop();\\n            map[lastEl] = nums2[i];\\n            \\n        }\\n        //first element and elements that are < stack elements \\n        stack.push(nums2[i]);\\n    }\\n    \\n    while(stack.length > 0){  \\n        var remaining = stack.pop();\\n        map[remaining] = -1;\\n    }\\n    \\n    for(var i=0; i<nums1.length; i++){\\n        var nums = map[nums1[i]];\\n        res.push(nums)\\n    }\\n    \\n    return res;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 469653,
                "title": "python3-using-loop-easy-to-understand-runtime-68ms",
                "content": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        res = []\\n        for i in nums1:\\n            n2 = nums2.index(i)\\n            for j in range(n2,len(nums2)):\\n                if nums2[j] > i:\\n                    res.append(nums2[j])\\n                    break\\n            else:\\n                res.append(-1)\\n                \\n        return res\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        res = []\\n        for i in nums1:\\n            n2 = nums2.index(i)\\n            for j in range(n2,len(nums2)):\\n                if nums2[j] > i:\\n                    res.append(nums2[j])\\n                    break\\n            else:\\n                res.append(-1)\\n                \\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 97599,
                "title": "c-solution-easy-to-understand",
                "content": "\\n    int search(vector<int> &nums,int A)\\n    {\\n        int i=0;\\n        for(i=0;i<nums.size();i++)\\n            if(nums[i] == A)\\n                break;\\n        \\n        if(i == nums.size() || i == nums.size()-1)\\n            return -1;\\n        \\n        for(;i<nums.size();i++)\\n            if(nums[i] > A)\\n                return nums[i];\\n        \\n        return -1;\\n    }\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        \\n        vector<int> ans(findNums.size());\\n        for(int i=0;i<findNums.size();i++)\\n        {\\n            ans[i] = search(nums,findNums[i]);\\n        }\\n        return ans;\\n    }",
                "solutionTags": [],
                "code": "\\n    int search(vector<int> &nums,int A)\\n    {\\n        int i=0;\\n        for(i=0;i<nums.size();i++)\\n            if(nums[i] == A)\\n                break;\\n        \\n        if(i == nums.size() || i == nums.size()-1)\\n            return -1;\\n        \\n        for(;i<nums.size();i++)\\n            if(nums[i] > A)\\n                return nums[i];\\n        \\n        return -1;\\n    }\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        \\n        vector<int> ans(findNums.size());\\n        for(int i=0;i<findNums.size();i++)\\n        {\\n            ans[i] = search(nums,findNums[i]);\\n        }\\n        return ans;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3716918,
                "title": "most-efficient-and-concise-solution-in-c-using-stack",
                "content": "<!-- # Intuition -->\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nWay to approach the problem is by iterating over nums2 in reverse order. By maintaining a monotonic stack, it becomes simpler to determine the next greater element for any given element. In this approach the bottom element of the stack will always be the greatest element.\\n\\n# Complexity\\n- nums1.size() = n & nums2.size() = m\\n- Time complexity: O(m)\\n- Space complexity: O(m) + O(m) + O(n) ~ O(m+n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2)\\n    {\\n        // \\n        stack<int> S;\\n        // no need of ordered map i think\\n        unordered_map<int,int> nextGreater;\\n        for(int i=nums2.size()-1;i>=0;i--)\\n        {\\n            //We continuously remove elements from the stack until the top element (S.top()) becomes smaller than the current element.\\n            while(!S.empty() && S.top() <= nums2[i])\\n                S.pop();\\n            if(S.empty())\\n                nextGreater[nums2[i]] = -1;\\n            else\\n                nextGreater[nums2[i]] = S.top();\\n            S.push(nums2[i]);\\n        }\\n\\n        vector<int> ans;\\n        for(int i=0;i<nums1.size();i++)\\n            ans.push_back(nextGreater[nums1[i]]);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Stack",
                    "Ordered Map",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2)\\n    {\\n        // \\n        stack<int> S;\\n        // no need of ordered map i think\\n        unordered_map<int,int> nextGreater;\\n        for(int i=nums2.size()-1;i>=0;i--)\\n        {\\n            //We continuously remove elements from the stack until the top element (S.top()) becomes smaller than the current element.\\n            while(!S.empty() && S.top() <= nums2[i])\\n                S.pop();\\n            if(S.empty())\\n                nextGreater[nums2[i]] = -1;\\n            else\\n                nextGreater[nums2[i]] = S.top();\\n            S.push(nums2[i]);\\n        }\\n\\n        vector<int> ans;\\n        for(int i=0;i<nums1.size();i++)\\n            ans.push_back(nextGreater[nums1[i]]);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3490919,
                "title": "easy-c-solution",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> s;\\n        map<int,int> mp;\\n        s.push(INT_MAX);\\n        for( int i=nums2.size()-1; i >= 0 ; i-- ){\\n            int curr = nums2[i];\\n            if(curr)\\n            while(s.top() <= curr){\\n                s.pop();\\n            }\\n            mp[nums2[i]] = s.top()==INT_MAX?-1:s.top();\\n            s.push(curr);\\n        }\\n        vector<int> ans;\\n        for(auto i: nums1){\\n            ans.push_back(mp[i]); \\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> s;\\n        map<int,int> mp;\\n        s.push(INT_MAX);\\n        for( int i=nums2.size()-1; i >= 0 ; i-- ){\\n            int curr = nums2[i];\\n            if(curr)\\n            while(s.top() <= curr){\\n                s.pop();\\n            }\\n            mp[nums2[i]] = s.top()==INT_MAX?-1:s.top();\\n            s.push(curr);\\n        }\\n        vector<int> ans;\\n        for(auto i: nums1){\\n            ans.push_back(mp[i]); \\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3367611,
                "title": "easily-understandable-java-sol-stack-hashmap",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(N)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n     Map<Integer,Integer> map = new HashMap<>();\\n     Stack<Integer> st = new Stack<>();\\n     map.put(nums2[nums2.length-1],-1);\\n     st.push(nums2[nums2.length-1]);\\n\\n     for(int i=nums2.length-2;i>=0;i--){\\n         while(!st.isEmpty() && st.peek()<nums2[i])\\n         st.pop();\\n         if(st.isEmpty()){\\n             map.put(nums2[i],-1);\\n         }\\n         else{\\n             map.put(nums2[i],st.peek());\\n         }\\n         st.push(nums2[i]);\\n     } \\n     for(int i=0;i<nums1.length;i++){\\n         nums1[i] = map.get(nums1[i]);\\n     }\\n     return nums1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n     Map<Integer,Integer> map = new HashMap<>();\\n     Stack<Integer> st = new Stack<>();\\n     map.put(nums2[nums2.length-1],-1);\\n     st.push(nums2[nums2.length-1]);\\n\\n     for(int i=nums2.length-2;i>=0;i--){\\n         while(!st.isEmpty() && st.peek()<nums2[i])\\n         st.pop();\\n         if(st.isEmpty()){\\n             map.put(nums2[i],-1);\\n         }\\n         else{\\n             map.put(nums2[i],st.peek());\\n         }\\n         st.push(nums2[i]);\\n     } \\n     for(int i=0;i<nums1.length;i++){\\n         nums1[i] = map.get(nums1[i]);\\n     }\\n     return nums1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3293602,
                "title": "easy-to-understand-0ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int ans[]=new int[nums1.length];\\n        for(int i=0;i<nums1.length;i++){\\n            int nextG=-1;\\n            int j=nums2.length-1;\\n            while(j>=0&&nums2[j]!=nums1[i]){\\n                if(nums2[j]>nums1[i]){\\n                    nextG=nums2[j];\\n                }\\n                j--;\\n            }\\n            ans[i]=nextG;\\n        \\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int ans[]=new int[nums1.length];\\n        for(int i=0;i<nums1.length;i++){\\n            int nextG=-1;\\n            int j=nums2.length-1;\\n            while(j>=0&&nums2[j]!=nums1[i]){\\n                if(nums2[j]>nums1[i]){\\n                    nextG=nums2[j];\\n                }\\n                j--;\\n            }\\n            ans[i]=nextG;\\n        \\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3020094,
                "title": "100-faster-c-solution-using-maps",
                "content": "\\n# Approach\\n<!-- hh -->\\nDeclare a map and store the next greater element for each elements in num2 using two loops.If a greater no exists then map the element to it else map -1.\\n\\nSearch the number from num1 in the map and display the output.\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int>m;\\n        for(int i=0;i<nums2.size()-1;i++){\\n            if(nums2[i+1]>nums2[i])m[nums2[i]]=nums2[i+1];\\n            else{\\n                int j=i+1;\\n                while(j<nums2.size()){\\n                    if(nums2[j]>nums2[i]){\\n                        m[nums2[i]]=nums2[j];\\n                        break;\\n                    }else j++;\\n                }\\n                if(j>=nums2.size())m[nums2[i]]=-1;\\n            }\\n        }\\n        int n=nums2.size();\\n        m[nums2[n-1]]=-1;\\n\\n        vector<int>ans;\\n        for(auto i:nums1){\\n            ans.push_back(m[i]);\\n        }\\n\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Ordered Map"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int>m;\\n        for(int i=0;i<nums2.size()-1;i++){\\n            if(nums2[i+1]>nums2[i])m[nums2[i]]=nums2[i+1];\\n            else{\\n                int j=i+1;\\n                while(j<nums2.size()){\\n                    if(nums2[j]>nums2[i]){\\n                        m[nums2[i]]=nums2[j];\\n                        break;\\n                    }else j++;\\n                }\\n                if(j>=nums2.size())m[nums2[i]]=-1;\\n            }\\n        }\\n        int n=nums2.size();\\n        m[nums2[n-1]]=-1;\\n\\n        vector<int>ans;\\n        for(auto i:nums1){\\n            ans.push_back(m[i]);\\n        }\\n\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2707088,
                "title": "javascript-stack-solution",
                "content": "```\\nvar nextGreaterElement = function(nums1, nums2) {\\n    let map = {};\\n    \\n    let stack = [];\\n    \\n    for (let i = 0; i < nums2.length; i++) {\\n        let curr = nums2[i];\\n        \\n        while (curr > stack[stack.length - 1]) {\\n            let popped = stack.pop();\\n            map[popped] = curr;\\n        }\\n        \\n        stack.push(curr);\\n    }\\n    \\n    let res = [];\\n    \\n    for (let num of nums1) {\\n        map[num] ? res.push(map[num]) : res.push(-1);\\n    }\\n    \\n    return res;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar nextGreaterElement = function(nums1, nums2) {\\n    let map = {};\\n    \\n    let stack = [];\\n    \\n    for (let i = 0; i < nums2.length; i++) {\\n        let curr = nums2[i];\\n        \\n        while (curr > stack[stack.length - 1]) {\\n            let popped = stack.pop();\\n            map[popped] = curr;\\n        }\\n        \\n        stack.push(curr);\\n    }\\n    \\n    let res = [];\\n    \\n    for (let num of nums1) {\\n        map[num] ? res.push(map[num]) : res.push(-1);\\n    }\\n    \\n    return res;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2695168,
                "title": "c-easy-to-understand-2-approaches-o-n-and-o-n-2",
                "content": "Approach 1: Time : O(N^2) SC: O(1)\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        //store index of num2 element corresponding to n1[i];\\n        for (int i = 0; i < n1.size(); i++)\\n        {\\n            for (int j = 0; j < n2.size(); j++)\\n            {\\n                if (n1[i] == n2[j]) \\n                {\\n                    n1[i] = j;\\n                    break;\\n                }\\n            }\\n        }\\n        //store next greater element in nums2\\n        stack<int> st;\\n        st.push(-1);\\n        for (int i = n2.size()-1; i >= 0; i--)\\n        {\\n            while ((st.top() != -1) && (st.top() <= n2[i]))\\n                st.pop();\\n            int top = st.top();\\n            st.push(n2[i]);\\n            n2[i] = top;\\n        }\\n        for (int i = 0; i < n1.size(); i++)  n1[i] = n2[n1[i]];\\n        return n1;\\n    }\\n};\\n```\\nApproach 2: using map SC: O(N) TC: O(N)\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        unordered_map<int, int> m;\\n        stack<int>st;\\n        st.push(-1);\\n        \\n        for (int i = n2.size()-1; i >= 0; i--)\\n        {\\n            while (st.top() != -1 && n2[i] > st.top())  \\n                st.pop();\\n            m[n2[i]] = st.top();\\n            st.push(n2[i]);\\n        }\\n        for (int i = 0; i < n1.size(); i++)\\n            n1[i] = m[n1[i]];\\n        \\n        return n1;\\n    }\\n};\\n```\\n//same approach but without pushing -1 before and storing index rather than element in stack.\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        unordered_map<int, int> m;\\n        stack<int>st;\\n        \\n        for (int i = n2.size()-1; i >= 0; i--)\\n        {\\n            while (!st.empty() && n2[i] > n2[st.top()])  \\n                st.pop();\\n            if (st.empty())\\n                m[n2[i]] = -1;\\n            else    \\n                m[n2[i]] = n2[st.top()];\\n            st.push(i);\\n        }\\n        for (int i = 0; i < n1.size(); i++)\\n            n1[i] = m[n1[i]];\\n        \\n        return n1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        //store index of num2 element corresponding to n1[i];\\n        for (int i = 0; i < n1.size(); i++)\\n        {\\n            for (int j = 0; j < n2.size(); j++)\\n            {\\n                if (n1[i] == n2[j]) \\n                {\\n                    n1[i] = j;\\n                    break;\\n                }\\n            }\\n        }\\n        //store next greater element in nums2\\n        stack<int> st;\\n        st.push(-1);\\n        for (int i = n2.size()-1; i >= 0; i--)\\n        {\\n            while ((st.top() != -1) && (st.top() <= n2[i]))\\n                st.pop();\\n            int top = st.top();\\n            st.push(n2[i]);\\n            n2[i] = top;\\n        }\\n        for (int i = 0; i < n1.size(); i++)  n1[i] = n2[n1[i]];\\n        return n1;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        unordered_map<int, int> m;\\n        stack<int>st;\\n        st.push(-1);\\n        \\n        for (int i = n2.size()-1; i >= 0; i--)\\n        {\\n            while (st.top() != -1 && n2[i] > st.top())  \\n                st.pop();\\n            m[n2[i]] = st.top();\\n            st.push(n2[i]);\\n        }\\n        for (int i = 0; i < n1.size(); i++)\\n            n1[i] = m[n1[i]];\\n        \\n        return n1;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        unordered_map<int, int> m;\\n        stack<int>st;\\n        \\n        for (int i = n2.size()-1; i >= 0; i--)\\n        {\\n            while (!st.empty() && n2[i] > n2[st.top()])  \\n                st.pop();\\n            if (st.empty())\\n                m[n2[i]] = -1;\\n            else    \\n                m[n2[i]] = n2[st.top()];\\n            st.push(i);\\n        }\\n        for (int i = 0; i < n1.size(); i++)\\n            n1[i] = m[n1[i]];\\n        \\n        return n1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2363277,
                "title": "using-recursion",
                "content": "Can anyone help he to optimize it\\n```\\nlong long fun(long long i,vector<long long>&v,long long par)\\n    {\\n        if(i==v.size())\\n        return -1;\\n        if(v[i]>v[par])\\n        {\\n            return v[i];\\n        }\\n        return fun(i+1,v,par);\\n    }\\n    \\n    void solve(long long i,vector<long long>&v,vector<long long>&ans)\\n    {\\n        if(i==v.size())return ;\\n        solve(i+1,v,ans);\\n        long long temp=fun(i+1,v,i);\\n        ans[i]=temp;\\n    }\\n    vector<long long> nextLargerElement(vector<long long> v, int n)\\n    {\\n        vector<long long>ans(n,-1);\\n        solve(0,v,ans);\\n        return ans;\\n    }\\n```",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "```\\nlong long fun(long long i,vector<long long>&v,long long par)\\n    {\\n        if(i==v.size())\\n        return -1;\\n        if(v[i]>v[par])\\n        {\\n            return v[i];\\n        }\\n        return fun(i+1,v,par);\\n    }\\n    \\n    void solve(long long i,vector<long long>&v,vector<long long>&ans)\\n    {\\n        if(i==v.size())return ;\\n        solve(i+1,v,ans);\\n        long long temp=fun(i+1,v,i);\\n        ans[i]=temp;\\n    }\\n    vector<long long> nextLargerElement(vector<long long> v, int n)\\n    {\\n        vector<long long>ans(n,-1);\\n        solve(0,v,ans);\\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2263023,
                "title": "c-stack-and-unordered-map-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map <int, int> mapp;\\n        stack <int> st;\\n        vector <int> ans;\\n        for(int i=nums2.size()-1; i>=0; i--) {\\n            int x = nums2[i];\\n            while(!st.empty() && st.top()<=x) {\\n                st.pop();\\n            }\\n            if(st.empty())  mapp[x]=-1;\\n            else mapp[x]=st.top();\\n            st.push(x);\\n        }\\n        for(int i=0; i<nums1.size(); i++) {\\n            ans.push_back(mapp[nums1[i]]);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map <int, int> mapp;\\n        stack <int> st;\\n        vector <int> ans;\\n        for(int i=nums2.size()-1; i>=0; i--) {\\n            int x = nums2[i];\\n            while(!st.empty() && st.top()<=x) {\\n                st.pop();\\n            }\\n            if(st.empty())  mapp[x]=-1;\\n            else mapp[x]=st.top();\\n            st.push(x);\\n        }\\n        for(int i=0; i<nums1.size(); i++) {\\n            ans.push_back(mapp[nums1[i]]);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2113672,
                "title": "c-stack-solution-easy",
                "content": "```\\nclass Solution\\n{\\n    public:\\n        vector<int> nextGreaterElement(vector<int> &findNums, vector<int> &nums)\\n        {\\n            unordered_map<int, int> m;\\n            int n = nums.size();\\n            stack<int> st;\\n\\n           \\t// nge 2 concept\\n\\n            for (int i = n - 1; i >= 0; --i)\\n            {\\n                while (!st.empty() && st.top() <= nums[i]) st.pop();\\n                if (!st.empty()) m[nums[i]] = st.top();\\n                else m[nums[i]] = -1;\\n                st.push(nums[i]);\\n            }\\n\\n            vector<int> ans;\\n            for (int n: findNums) ans.push_back(m[n]);\\n            return ans;\\n        }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution\\n{\\n    public:\\n        vector<int> nextGreaterElement(vector<int> &findNums, vector<int> &nums)\\n        {\\n            unordered_map<int, int> m;\\n            int n = nums.size();\\n            stack<int> st;\\n\\n           \\t// nge 2 concept\\n\\n            for (int i = n - 1; i >= 0; --i)\\n            {\\n                while (!st.empty() && st.top() <= nums[i]) st.pop();\\n                if (!st.empty()) m[nums[i]] = st.top();\\n                else m[nums[i]] = -1;\\n                st.push(nums[i]);\\n            }\\n\\n            vector<int> ans;\\n            for (int n: findNums) ans.push_back(m[n]);\\n            return ans;\\n        }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2074625,
                "title": "cpp-solution-using-map-and-stack",
                "content": "Here we store our elements in nums2 in a monotonic stack which stores the element only in decreasing order...\\nAt each instance of entering the element in the stack, we check if the element being popped from stack is one of our answers using a hash map, which makes searching O(log nums1.length())..\\nFinall, we traverse through nums1 and replace all the element using map\\'s index...\\n**Pls upvote this thread if you found the explanation helpful**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        //Assigning our result elements to -1\\n        unordered_map<int, int> mp;\\n        for(int i=0;i<nums1.size();i++) mp[nums1[i]]=-1;\\n        \\n        stack<int> st;\\n        st.push(nums2[0]);\\n        for(int i=0;i<nums2.size();i++) {\\n            \\n            while(!st.empty() && st.top()<nums2[i]) {\\n    //If the current element is greater than element at top then we remove that and update it in the map\\n                if(mp.find(st.top())!=mp.end()) mp[st.top()]=nums2[i];\\n                //Pop the Top element\\n                st.pop();\\n            }\\n            st.push(nums2[i]);\\n        }\\n        \\n        for(int i=0;i<nums1.size();i++) {\\n            nums1[i]=mp[nums1[i]];\\n        }\\n        \\n        return nums1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        //Assigning our result elements to -1\\n        unordered_map<int, int> mp;\\n        for(int i=0;i<nums1.size();i++) mp[nums1[i]]=-1;\\n        \\n        stack<int> st;\\n        st.push(nums2[0]);\\n        for(int i=0;i<nums2.size();i++) {\\n            \\n            while(!st.empty() && st.top()<nums2[i]) {\\n    //If the current element is greater than element at top then we remove that and update it in the map\\n                if(mp.find(st.top())!=mp.end()) mp[st.top()]=nums2[i];\\n                //Pop the Top element\\n                st.pop();\\n            }\\n            st.push(nums2[i]);\\n        }\\n        \\n        for(int i=0;i<nums1.size();i++) {\\n            nums1[i]=mp[nums1[i]];\\n        }\\n        \\n        return nums1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2050531,
                "title": "2ms-faster-than-97-12-java-solution-with-algorithm-explained",
                "content": "![image](https://assets.leetcode.com/users/images/4dfcc3a5-13fc-4872-88fb-f1025149841c_1652868841.1450493.png)\\n\\n**Algorithm**\\n* Put the nums2 element in a hash map with key as element of nums2 and value as its index in nums2.\\n* Make a private function, which will take nums1 array with j as index of num whose next greater element needs to be found and max as the num itself. For example, nums1 = [4,1,2], nums2 = [1,3,4,2], so nums will be nums2, j will be 2 (index of 4 in nums2) and max will be 4. \\n* In the function, if we found the next greater element we will return the greater element else -1.\\n* All elements will be returned to arr.\\n\\n**Code**\\n```\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        HashMap<Integer, Integer> map = new HashMap();\\n        for(int i=0; i<nums2.length; i++){\\n            map.put(nums2[i], i);\\n        }\\n        int[] arr = new int[nums1.length];\\n        for(int i=0; i<nums1.length; i++){\\n            arr[i] = greaterElement(nums2, map.get(nums1[i]), nums1[i]);\\n        }\\n        return arr;\\n    }\\n    private int greaterElement(int[] nums, int j, int max){\\n        for(int i=j+1; i<nums.length; i++){\\n            if(nums[i] > max){\\n                return nums[i];\\n            }\\n        }\\n        return -1;\\n    }\\n```\\n**Please upvote if you liked the solution**\\n*Feel free to ask any questions in the comment section*",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        HashMap<Integer, Integer> map = new HashMap();\\n        for(int i=0; i<nums2.length; i++){\\n            map.put(nums2[i], i);\\n        }\\n        int[] arr = new int[nums1.length];\\n        for(int i=0; i<nums1.length; i++){\\n            arr[i] = greaterElement(nums2, map.get(nums1[i]), nums1[i]);\\n        }\\n        return arr;\\n    }\\n    private int greaterElement(int[] nums, int j, int max){\\n        for(int i=j+1; i<nums.length; i++){\\n            if(nums[i] > max){\\n                return nums[i];\\n            }\\n        }\\n        return -1;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1813169,
                "title": "c-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>h;\\n        int flag=0;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n\\t\\t\\t//searching element in vector nums2\\n\\t\\t\\t\\n            int x=find(nums2.begin(),nums2.end(),nums1[i])-nums2.begin();\\n\\t\\t\\t\\n\\t\\t\\t// searching for next greater value\\n\\t\\t\\t\\n            for(int j=x;j<nums2.size();j++)\\n            {\\n                if(nums2[j]>nums1[i])\\n                {\\n                    h.push_back(nums2[j]);\\n                    flag=1;\\n                    break;\\n                }\\n                else \\n                    flag=0;\\n            }\\n            if(flag==0)\\n                h.push_back(-1);\\n        }\\n        return h;\\n    }\\n};\\n```\\n\\nIf you like do upvote!!",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>h;\\n        int flag=0;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n\\t\\t\\t//searching element in vector nums2\\n\\t\\t\\t\\n            int x=find(nums2.begin(),nums2.end(),nums1[i])-nums2.begin();\\n\\t\\t\\t\\n\\t\\t\\t// searching for next greater value\\n\\t\\t\\t\\n            for(int j=x;j<nums2.size();j++)\\n            {\\n                if(nums2[j]>nums1[i])\\n                {\\n                    h.push_back(nums2[j]);\\n                    flag=1;\\n                    break;\\n                }\\n                else \\n                    flag=0;\\n            }\\n            if(flag==0)\\n                h.push_back(-1);\\n        }\\n        return h;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1748056,
                "title": "easy-c-solution-using-stack-approach",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int> mp;\\n        vector<int> res;\\n        stack<int> s;\\n        reverse(nums2.begin(),nums2.end());\\n        for(int i : nums2){\\n            while(!s.empty() && s.top() <= i)\\n                s.pop();\\n            if(s.empty())\\n               mp[i] = -1;     \\n            else \\n                mp[i] = s.top();\\n            s.push(i);\\n        }\\n        \\n        for(int i=0; i<nums1.size(); i++)\\n            res.push_back(mp[nums1[i]]);\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int> mp;\\n        vector<int> res;\\n        stack<int> s;\\n        reverse(nums2.begin(),nums2.end());\\n        for(int i : nums2){\\n            while(!s.empty() && s.top() <= i)\\n                s.pop();\\n            if(s.empty())\\n               mp[i] = -1;     \\n            else \\n                mp[i] = s.top();\\n            s.push(i);\\n        }\\n        \\n        for(int i=0; i<nums1.size(); i++)\\n            res.push_back(mp[nums1[i]]);\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1699504,
                "title": "hashmap-and-stack-easy-java-solution",
                "content": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        HashMap<Integer,Integer> hs = new HashMap();\\n        Stack<Integer> stack = new Stack();\\n        \\n        for(Integer num : nums2){\\n            while(!stack.isEmpty() && stack.peek() < num){\\n                hs.put(stack.pop(), num);\\n            }\\n            stack.push(num);\\n        }\\n        \\n        for(int i=0;i<nums1.length;i++){\\n            nums1[i] = hs.getOrDefault(nums1[i],-1);\\n        }\\n        return nums1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        HashMap<Integer,Integer> hs = new HashMap();\\n        Stack<Integer> stack = new Stack();\\n        \\n        for(Integer num : nums2){\\n            while(!stack.isEmpty() && stack.peek() < num){\\n                hs.put(stack.pop(), num);\\n            }\\n            stack.push(num);\\n        }\\n        \\n        for(int i=0;i<nums1.length;i++){\\n            nums1[i] = hs.getOrDefault(nums1[i],-1);\\n        }\\n        return nums1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1588526,
                "title": "java-solution-using-stack-time-o-n",
                "content": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Map<Integer, Integer> map = new HashMap<>(); // map from x to next greater element of x\\n        Stack<Integer> stack = new Stack<>();\\n        for (int num : nums2) {\\n            while (!stack.isEmpty() && stack.peek() < num)\\n                map.put(stack.pop(), num);\\n            stack.push(num);\\n        }   \\n        for (int i = 0; i < nums1.length; i++)\\n            nums1[i] = map.getOrDefault(nums1[i], -1);\\n        return nums1;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Map<Integer, Integer> map = new HashMap<>(); // map from x to next greater element of x\\n        Stack<Integer> stack = new Stack<>();\\n        for (int num : nums2) {\\n            while (!stack.isEmpty() && stack.peek() < num)\\n                map.put(stack.pop(), num);\\n            stack.push(num);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1530891,
                "title": "javascript-solution-without-using-additional-memory",
                "content": "```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\n var nextGreaterElement = function(nums1, nums2) {\\n    return nums1.map(n => {\\n         let next = nums2.indexOf(n) + 1;\\n         while (next < nums2.length && nums2[next] < n) {\\n             next++;\\n         }\\n         return next >= nums2.length ? -1 : nums2[next]\\n     })\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\n var nextGreaterElement = function(nums1, nums2) {\\n    return nums1.map(n => {\\n         let next = nums2.indexOf(n) + 1;\\n         while (next < nums2.length && nums2[next] < n) {\\n             next++;\\n         }\\n         return next >= nums2.length ? -1 : nums2[next]\\n     })\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1530007,
                "title": "javascript-stack-simple-explained",
                "content": "```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n    /*\\n    Approach:  \\n    Iterate through nums2\\n    Keep pushing elements in a stack\\n    Whenever the last element of the stack is lesser than the current element nums2[i], then keep popping out the element from the stack and mark the current element nums2[i] as the next greater element for them. We can use hashmap to store this info, as the elements are unique. \\n    \\n    */\\n    let stack=[],map={},max=-1,element,ans=[];\\n    for(let i=0;i<nums2.length;i++){\\n        while(stack[0]!==undefined && stack[stack.length-1]<nums2[i]){\\n            element = stack.pop();\\n            map[element] = nums2[i];\\n        }\\n        stack.push(  nums2[i]);\\n    }\\n    for(let i=0;i<nums1.length;i++){\\n        if(map[nums1[i]]===undefined){\\n            ans.push(-1);\\n        }else{\\n            ans.push(map[nums1[i]]);\\n        }\\n    }\\n    return ans;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Stack"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n    /*\\n    Approach:  \\n    Iterate through nums2\\n    Keep pushing elements in a stack\\n    Whenever the last element of the stack is lesser than the current element nums2[i], then keep popping out the element from the stack and mark the current element nums2[i] as the next greater element for them. We can use hashmap to store this info, as the elements are unique. \\n    \\n    */\\n    let stack=[],map={},max=-1,element,ans=[];\\n    for(let i=0;i<nums2.length;i++){\\n        while(stack[0]!==undefined && stack[stack.length-1]<nums2[i]){\\n            element = stack.pop();\\n            map[element] = nums2[i];\\n        }\\n        stack.push(  nums2[i]);\\n    }\\n    for(let i=0;i<nums1.length;i++){\\n        if(map[nums1[i]]===undefined){\\n            ans.push(-1);\\n        }else{\\n            ans.push(map[nums1[i]]);\\n        }\\n    }\\n    return ans;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1529797,
                "title": "c-solution-two-approaches-with-optimization-6ms",
                "content": "**Approach 1: Using an unordered map for efficient searching** -\\nO(N^2) time in the worst case and O(N) space\\nExplanation: \\n1. Map every element in nums2 array to its index for efficiently searching the position later.\\n2. Traverse through the nums1 array and for each element in nums1, find its position `pos` in nums2.\\n3. Run a loop from `pos+1` to `nums2.size()-1` and find out the next greater element for each `num` in nums1.\\n\\n```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n\\tint n = nums2.size();\\n\\tint m = nums1.size();\\n\\tvector<int>ans(m, -1);\\n\\tunordered_map<int, int>mp;\\n\\tfor(int i = 0; i< n; i++){\\n\\t\\tmp[nums2[i]] = i;\\n\\t}\\n\\tfor(int i = 0; i< m; i++){\\n\\t\\tint pos = mp[nums1[i]];\\n\\t\\tif(pos==n-1) continue;\\n\\t\\tfor(int j = pos+1; j< n; j++){\\n\\t\\t\\tif(nums2[j] > nums1[i]){\\n\\t\\t\\t\\tans[i] = nums2[j];\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn ans;\\n}\\n```\\n***Optimized approach***\\n**Approach 2: Using unordered map and stack to store the next greater element of each entry in the map** - O(N) time and O(N) space\\nExplanation: \\n1. In the unordered map we store the first greater element which appears next to an element` el` in the `nums2` array. \\n2. For those elements having no next greater element are simply skipped.\\n3. While traversing the nums1 array, we see if the element is present in the map `mp` or not. If not present then push back -1.\\n```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>ans;\\n        unordered_map<int, int>mp;\\n        stack<int>s;\\n        for(auto el: nums2){\\n            while(!s.empty() && s.top() < el){\\n                mp[s.top()] = el;\\n                s.pop();\\n            }\\n            s.push(el);\\n        }\\n        \\n        for(auto num: nums1){\\n            ans.push_back(mp.count(num) ? mp[num] : -1);\\n        }\\n        return ans;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n\\tint n = nums2.size();\\n\\tint m = nums1.size();\\n\\tvector<int>ans(m, -1);\\n\\tunordered_map<int, int>mp;\\n\\tfor(int i = 0; i< n; i++){\\n\\t\\tmp[nums2[i]] = i;\\n\\t}\\n\\tfor(int i = 0; i< m; i++){\\n\\t\\tint pos = mp[nums1[i]];\\n\\t\\tif(pos==n-1) continue;\\n\\t\\tfor(int j = pos+1; j< n; j++){\\n\\t\\t\\tif(nums2[j] > nums1[i]){\\n\\t\\t\\t\\tans[i] = nums2[j];\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn ans;\\n}\\n```\n```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>ans;\\n        unordered_map<int, int>mp;\\n        stack<int>s;\\n        for(auto el: nums2){\\n            while(!s.empty() && s.top() < el){\\n                mp[s.top()] = el;\\n                s.pop();\\n            }\\n            s.push(el);\\n        }\\n        \\n        for(auto num: nums1){\\n            ans.push_back(mp.count(num) ? mp[num] : -1);\\n        }\\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1529096,
                "title": "cpp-stack-unordered-map",
                "content": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> s;  \\n        unordered_map<int, int> map; // TO STORE THE MAX VALUES OF EVERY ELEMENT IN nums2\\n        \\n        s.push(nums2[0]);\\n        for(int i=1;i<nums2.size();i++){\\n            int cur = nums2[i];\\n            while(!s.empty() && cur > s.top()){\\n                int top = s.top();\\n                s.pop();\\n                map[top] = cur;\\n            }\\n            s.push(cur);\\n        }\\n        \\n        while(!s.empty()){\\n            int top = s.top();\\n            s.pop();\\n            map[top] = -1;\\n        }\\n        \\n        vector<int> ans;\\n        for(int i=0;i<nums1.size();i++)\\n            ans.push_back(map[nums1[i]]);\\n        \\n        return ans;\\n    }\\n```\\n\\nUSE OF STACK?\\n\\n- Push the first element of nums2 in the stack.\\n- Pick rest of the elements one by one and follow the following steps in loop:\\n\\t\\t1. Take the current element(cur).\\n\\t\\t2. If stack is not empty, compare top element of stack with cur.\\n\\t\\t3. If cur is greater than the top element, Pop element from stack. cur is the next greater element for the popped element.\\n\\t\\t4. Keep popping from the stack while the popped element is smaller than cur. cur becomes the next greater element for all such popped elements.\\n\\t\\t5. Finally, push the next in the stack.\\n\\t\\t6. After the loop in step 2 is over, pop all the elements from the stack and print -1 as the next element for them.",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> s;  \\n        unordered_map<int, int> map; // TO STORE THE MAX VALUES OF EVERY ELEMENT IN nums2\\n        \\n        s.push(nums2[0]);\\n        for(int i=1;i<nums2.size();i++){\\n            int cur = nums2[i];\\n            while(!s.empty() && cur > s.top()){\\n                int top = s.top();\\n                s.pop();\\n                map[top] = cur;\\n            }\\n            s.push(cur);\\n        }\\n        \\n        while(!s.empty()){\\n            int top = s.top();\\n            s.pop();\\n            map[top] = -1;\\n        }\\n        \\n        vector<int> ans;\\n        for(int i=0;i<nums1.size();i++)\\n            ans.push_back(map[nums1[i]]);\\n        \\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1528864,
                "title": "go-100-ac-non-gmo-sustainable-hashmap-with-loops-explained-o-nm",
                "content": "The given could have been easily stated as given int arrays `nums1` and `nums2`, for each number `x` in nums1, find the next greater number after `x` appearing in `nums2`.\\n\\nThe algorithm below is generally basic and you can also solve it using a monotonically increasing stack.\\nThe first part of the algorithm is to convert `nums2` into a map where it maps each number to an index.\\n\\nThe second portion is to use a quadratic loop.\\nThe outer loop will iterate over all numbers in `nums1` and the inner loop will iterate from where the number in `nums1` is found in `nums2` and find the next greater element.\\nOnce the next greater element is found, we can set `result[i] = number in nums2` and move onto the next number in `nums1`. If not found, we just set `result[i] = -1`.\\n\\n**Time:** O(nm) - assuming length of `nums1` is `n` and length of `nums2` is `m`, we use O(m) time to convert `nums2` into a map. The subsequent loop first iterates over `nums1` and uses the inner loop to find the next greater element in `nums2`. \\n**Space:** O(m) - the map only stores elements from `nums2`.\\n\\n```go\\nfunc nextGreaterElement(nums1 []int, nums2 []int) []int {\\n    nums2Map := map[int]int{}\\n    \\n    for i, num := range nums2 {\\n        nums2Map[num] = i\\n    }\\n    \\n    result := make([]int, len(nums1))\\n    for i, num := range nums1 {\\n        found := false\\n        for nextIndex := nums2Map[num] + 1; nextIndex < len(nums2); nextIndex++ {\\n            if nums2[nextIndex] > num {\\n                result[i] = nums2[nextIndex]\\n                found = true\\n                break\\n            }\\n        }\\n        \\n        if !found {\\n            result[i] = -1\\n        }\\n    }\\n    \\n    return result\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```go\\nfunc nextGreaterElement(nums1 []int, nums2 []int) []int {\\n    nums2Map := map[int]int{}\\n    \\n    for i, num := range nums2 {\\n        nums2Map[num] = i\\n    }\\n    \\n    result := make([]int, len(nums1))\\n    for i, num := range nums1 {\\n        found := false\\n        for nextIndex := nums2Map[num] + 1; nextIndex < len(nums2); nextIndex++ {\\n            if nums2[nextIndex] > num {\\n                result[i] = nums2[nextIndex]\\n                found = true\\n                break\\n            }\\n        }\\n        \\n        if !found {\\n            result[i] = -1\\n        }\\n    }\\n    \\n    return result\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1522654,
                "title": "java-stack-hashmap-with-comments",
                "content": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        //to store results\\n        HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();\\n        \\n        //stack will help us achieve the next greater element\\n        Stack<Integer> stk=new Stack<Integer>();\\n        \\n        for(int i=nums2.length-1;i>=0;i--){\\n            if(stk.isEmpty()){  //no greater element is there after this element\\n                hm.put(nums2[i],-1);\\n                stk.push(nums2[i]);\\n            }else{\\n                //if top of stack is not greater than current element then we should remove it as it is and will not be of any use.\\n                while(!stk.isEmpty() && stk.peek()<=nums2[i])\\n                    stk.pop();\\n                \\n                //doing so if stk becomes empty \\n                if(stk.isEmpty())\\n                    hm.put(nums2[i],-1);\\n                else    //else there is a greater element than this element on right\\n                    hm.put(nums2[i],stk.peek());\\n                stk.push(nums2[i]);\\n            }\\n        }\\n        \\n        int op[]=new int[nums1.length];\\n        for(int i=0;i<nums1.length;i++){\\n            op[i]=hm.get(nums1[i]);\\n        }\\n        return op;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        //to store results\\n        HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();\\n        \\n        //stack will help us achieve the next greater element\\n        Stack<Integer> stk=new Stack<Integer>();\\n        \\n        for(int i=nums2.length-1;i>=0;i--){\\n            if(stk.isEmpty()){  //no greater element is there after this element\\n                hm.put(nums2[i],-1);\\n                stk.push(nums2[i]);\\n            }else{\\n                //if top of stack is not greater than current element then we should remove it as it is and will not be of any use.\\n                while(!stk.isEmpty() && stk.peek()<=nums2[i])\\n                    stk.pop();\\n                \\n                //doing so if stk becomes empty \\n                if(stk.isEmpty())\\n                    hm.put(nums2[i],-1);\\n                else    //else there is a greater element than this element on right\\n                    hm.put(nums2[i],stk.peek());\\n                stk.push(nums2[i]);\\n            }\\n        }\\n        \\n        int op[]=new int[nums1.length];\\n        for(int i=0;i<nums1.length;i++){\\n            op[i]=hm.get(nums1[i]);\\n        }\\n        return op;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1462848,
                "title": "brute-force-intuition-explained",
                "content": "***Thought Process***\\n\\n* Step 1 : First of all, as we know that nums1 is a subset of num2, we will try to store all the indices at which elements of nums1 appear in nums2 in an array *arr*.\\n\\n* Step 2 : After this, we can pick the element appearing at these indices in nums2(lets say ith index) and traverse from (i+1)th index till last of nums2 and as soon we find any element > element at ith index, we add it to our array *answer* and break and continue from the next index.\\n\\n* If we do not find any such element, we will simply append -1 to our answer. \\n\\n**Please Note -->**\\n\\n\\n***Dry Runing this code will help bring clarity. Since this is a Brute Force Approach (but accepted solution), I will hopefully try to come up with better time complexity soon. The Time and Space Complexity for this approach is O(N^2) and O(N) respectively.***\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        #nums1 is a subset of nums2\\n        n2 = len(nums2)\\n        arr = []\\n        answer = []\\n        for i in nums1:\\n            for j in range(0, n2):\\n                if i == nums2[j]:\\n                    arr.append(j)\\n        \\n        #arr contains j values : 2, 0 , 3, which is the index at which elements of nums1 are present in nums2\\n        #now, traverse from (j+1) till n2 and check, as soon as any element is > than this, break\\n        for i in arr:\\n            for j in range(i+1, n2):\\n                if nums2[j] > nums2[i]:\\n                    answer.append(nums2[j])\\n                    break\\n            else:\\n                answer.append(-1)\\n        return answer\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        #nums1 is a subset of nums2\\n        n2 = len(nums2)\\n        arr = []\\n        answer = []\\n        for i in nums1:\\n            for j in range(0, n2):\\n                if i == nums2[j]:\\n                    arr.append(j)\\n        \\n        #arr contains j values : 2, 0 , 3, which is the index at which elements of nums1 are present in nums2\\n        #now, traverse from (j+1) till n2 and check, as soon as any element is > than this, break\\n        for i in arr:\\n            for j in range(i+1, n2):\\n                if nums2[j] > nums2[i]:\\n                    answer.append(nums2[j])\\n                    break\\n            else:\\n                answer.append(-1)\\n        return answer\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1256535,
                "title": "c-solution-using-stack",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> m;\\n        stack<int> s;\\n        \\n        for(int i = 0; i < nums2.size(); ++i)\\n        {\\n            while(!s.empty() && nums2[s.top()] < nums2[i])\\n            {\\n                m[nums2[s.top()]] = nums2[i];\\n                s.pop();\\n            }\\n            \\n            s.push(i);\\n        }\\n        \\n        while(!s.empty())\\n        {\\n            m[nums2[s.top()]] = -1;\\n            s.pop();\\n        }\\n        \\n        vector<int> res(nums1.size());\\n        for(int i = 0; i < nums1.size(); ++i)\\n        {\\n            if(m.find(nums1[i]) != m.end())\\n                res[i] = m[nums1[i]];\\n            else\\n                res[i] = -1;\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> m;\\n        stack<int> s;\\n        \\n        for(int i = 0; i < nums2.size(); ++i)\\n        {\\n            while(!s.empty() && nums2[s.top()] < nums2[i])\\n            {\\n                m[nums2[s.top()]] = nums2[i];\\n                s.pop();\\n            }\\n            \\n            s.push(i);\\n        }\\n        \\n        while(!s.empty())\\n        {\\n            m[nums2[s.top()]] = -1;\\n            s.pop();\\n        }\\n        \\n        vector<int> res(nums1.size());\\n        for(int i = 0; i < nums1.size(); ++i)\\n        {\\n            if(m.find(nums1[i]) != m.end())\\n                res[i] = m[nums1[i]];\\n            else\\n                res[i] = -1;\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 983663,
                "title": "simple-java-solution-using-hashmap",
                "content": "hashmap to store the index of second array\\n\\n``` \\n        int l1=nums1.length,l2=nums2.length,j=0;\\n        int[] op=new int[l1];\\n        Arrays.fill(op, -1);\\n\\n  \\t    HashMap<Integer, Integer> hm = new HashMap<>();\\n        \\n\\t\\tfor (int i=0;i<l2;i++) {\\n\\t\\t\\thm.put(nums2[i], i+1);\\n\\t\\t}\\n        for(int i=0;i<l1;i++){\\n            for(j=hm.get(nums1[i]);j<l2;j++){\\n                if(nums2[j]>nums1[i]){\\n                    op[i]=nums2[j];\\n                    break;\\n                }\\n            }\\n        }\\n        \\n        return op;",
                "solutionTags": [
                    "Java"
                ],
                "code": "hashmap to store the index of second array\\n\\n``` \\n        int l1=nums1.length,l2=nums2.length,j=0;\\n        int[] op=new int[l1];\\n        Arrays.fill(op, -1);\\n\\n  \\t    HashMap<Integer, Integer> hm = new HashMap<>();\\n        \\n\\t\\tfor (int i=0;i<l2;i++) {\\n\\t\\t\\thm.put(nums2[i], i+1);\\n\\t\\t}\\n        for(int i=0;i<l1;i++){\\n            for(j=hm.get(nums1[i]);j<l2;j++){\\n                if(nums2[j]>nums1[i]){\\n                    op[i]=nums2[j];\\n                    break;\\n                }\\n            }\\n        }\\n        \\n        return op;",
                "codeTag": "Unknown"
            },
            {
                "id": 829136,
                "title": "simple-python-solution-using-dict-beats-94-5-time",
                "content": "idea: save the index of each number in nums2 in dict, so when on each element in nums1 i get its index from the dict and start my Search from index+1 if a bigger num is found I break and store it. if not i append -1 instead\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        myDict={}\\n        res=[]\\n        for idx,num in enumerate (nums2):\\n            myDict[num]=idx\\n        flag=0    \\n        for n in nums1:\\n            searchStart=myDict[n]+1 \\n            while searchStart<len(nums2):\\n                if nums2[searchStart]>n:\\n                    flag=1\\n                    break\\n                searchStart+=1\\n            ans=nums2[searchStart] if flag==1 else -1    \\n            res.append(ans)  \\n            flag=0\\n        return res\\n    \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        myDict={}\\n        res=[]\\n        for idx,num in enumerate (nums2):\\n            myDict[num]=idx\\n        flag=0    \\n        for n in nums1:\\n            searchStart=myDict[n]+1 \\n            while searchStart<len(nums2):\\n                if nums2[searchStart]>n:\\n                    flag=1\\n                    break\\n                searchStart+=1\\n            ans=nums2[searchStart] if flag==1 else -1    \\n            res.append(ans)  \\n            flag=0\\n        return res\\n    \\n```",
                "codeTag": "Java"
            },
            {
                "id": 811431,
                "title": "simple-python-solution-using-iteration",
                "content": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = [-1]* len(nums1)\\n        for i in range(len(nums1)):\\n            if nums1[i] in nums2:\\n                for j in range(nums2.index(nums1[i]) , len(nums2)):\\n                    if nums2[j] > nums1[i]:\\n                        ans[i] = nums2[j]\\n                        break\\n        return ans             \\n                \\n```",
                "solutionTags": [
                    "Python3",
                    "Iterator"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = [-1]* len(nums1)\\n        for i in range(len(nums1)):\\n            if nums1[i] in nums2:\\n                for j in range(nums2.index(nums1[i]) , len(nums2)):\\n                    if nums2[j] > nums1[i]:\\n                        ans[i] = nums2[j]\\n                        break\\n        return ans             \\n                \\n```",
                "codeTag": "Java"
            },
            {
                "id": 661109,
                "title": "make-it-a-medium-level-question-so-that-people-don-t-get-demotivated-lc",
                "content": "Similar Question\\n1) [1019 Next Greater Node In Linked List](https://leetcode.com/problems/next-greater-node-in-linked-list/)\\n2) [503 Next Greater Element II](https://leetcode.com/problems/next-greater-element-ii/)\\n3) [739 Daily Temperatures](https://leetcode.com/problems/daily-temperatures/)\\n\\nTime Complexity :: O(n)\\nSpace Complexity :: O(n)\\n\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n        Stack<Integer> stack = new Stack();\\n        Map<Integer,Integer> store = new HashMap<>();\\n        for(int i=0;i<nums2.length;i++){\\n            while(!stack.isEmpty() && nums2[stack.peek()]<nums2[i])\\n                store.put(nums2[stack.pop()], nums2[i]);\\n            stack.push(i);\\n        }\\n        \\n        for(int i=0;i<nums1.length;i++)\\n            nums1[i] = store.getOrDefault(nums1[i],-1);\\n        \\n        return nums1;\\n    }   \\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n        Stack<Integer> stack = new Stack();\\n        Map<Integer,Integer> store = new HashMap<>();\\n        for(int i=0;i<nums2.length;i++){\\n            while(!stack.isEmpty() && nums2[stack.peek()]<nums2[i])\\n                store.put(nums2[stack.pop()], nums2[i]);\\n            stack.push(i);\\n        }\\n        \\n        for(int i=0;i<nums1.length;i++)\\n            nums1[i] = store.getOrDefault(nums1[i],-1);\\n        \\n        return nums1;\\n    }   \\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 594875,
                "title": "c-code-using-map",
                "content": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int j;\\n        vector<int> ans(n,-1);\\n        if(n==0||m==0)\\n            return ans;\\n        unordered_map<int,int> mp;\\n        for(int i=0;i<m;i++)\\n            mp[nums2[i]]=i;\\n        for(int i=0;i<n;i++)\\n        {\\n            j=mp[nums1[i]];\\n            for(j=j+1;j<m;j++)\\n                if(nums2[j]>nums1[i])\\n                {\\n                    ans[i]=nums2[j];\\n                    break;\\n                }\\n        }\\n        return ans;\\n    }",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int j;\\n        vector<int> ans(n,-1);\\n        if(n==0||m==0)\\n            return ans;\\n        unordered_map<int,int> mp;\\n        for(int i=0;i<m;i++)\\n            mp[nums2[i]]=i;\\n        for(int i=0;i<n;i++)\\n        {\\n            j=mp[nums1[i]];\\n            for(j=j+1;j<m;j++)\\n                if(nums2[j]>nums1[i])\\n                {\\n                    ans[i]=nums2[j];\\n                    break;\\n                }\\n        }\\n        return ans;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 594817,
                "title": "simple-java-solution-using-hashmap",
                "content": "Runtime: 2 ms, faster than 99.14% of Java online submissions for Next Greater Element I.\\nMemory Usage: 39.6 MB, less than 7.41% of Java online submissions for Next Greater Element I.\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n        HashMap<Integer,Integer> map=new HashMap<>();\\n        \\n        int[] answer=new int[nums1.length];\\n        \\n        for(int i=0;i<nums2.length-1;i++){\\n            for(int j=i+1;j<nums2.length;j++){\\n                \\n                if(nums2[j]>nums2[i]){\\n                    \\n                    map.put(nums2[i],nums2[j]);\\n                    \\n                    break;\\n                }\\n                \\n                \\n            }\\n            \\n            \\n        }\\n        \\n        for(int i=0;i<nums1.length;i++){\\n            \\n            \\n            answer[i]=map.getOrDefault(nums1[i],-1);\\n            \\n        }\\n        \\n        return answer;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n        HashMap<Integer,Integer> map=new HashMap<>();\\n        \\n        int[] answer=new int[nums1.length];\\n        \\n        for(int i=0;i<nums2.length-1;i++){\\n            for(int j=i+1;j<nums2.length;j++){\\n                \\n                if(nums2[j]>nums2[i]){\\n                    \\n                    map.put(nums2[i],nums2[j]);\\n                    \\n                    break;\\n                }\\n                \\n                \\n            }\\n            \\n            \\n        }\\n        \\n        for(int i=0;i<nums1.length;i++){\\n            \\n            \\n            answer[i]=map.getOrDefault(nums1[i],-1);\\n            \\n        }\\n        \\n        return answer;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 494207,
                "title": "cpp-accepted",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>ans;\\n        bool flag = 1;\\n        for(int i = 0; i < nums1.size(); i++)\\n        {\\n            for(int j= 0; j < nums2.size(); j++)\\n            {\\n                if(nums2[j] == nums1[i])\\n                {\\n                    j++;\\n                    flag = 1;\\n                    while(j < nums2.size())\\n                    {\\n                        if(nums2[j] > nums1[i])\\n                        {\\n                            ans.push_back(nums2[j]);\\n                            flag = 0;\\n                            break;\\n                        }\\n                        j++;\\n                    }\\n                    if(flag == 0)\\n                    {\\n                        break;\\n                    }\\n                    else \\n                    {\\n                        ans.push_back(-1);\\n                        break;\\n                    }\\n                    \\n                }\\n                \\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>ans;\\n        bool flag = 1;\\n        for(int i = 0; i < nums1.size(); i++)\\n        {\\n            for(int j= 0; j < nums2.size(); j++)\\n            {\\n                if(nums2[j] == nums1[i])\\n                {\\n                    j++;\\n                    flag = 1;\\n                    while(j < nums2.size())\\n                    {\\n                        if(nums2[j] > nums1[i])\\n                        {\\n                            ans.push_back(nums2[j]);\\n                            flag = 0;\\n                            break;\\n                        }\\n                        j++;\\n                    }\\n                    if(flag == 0)\\n                    {\\n                        break;\\n                    }\\n                    else \\n                    {\\n                        ans.push_back(-1);\\n                        break;\\n                    }\\n                    \\n                }\\n                \\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 486110,
                "title": "python-100",
                "content": "```Python\\nclass Solution:\\n    def nextGreaterElement(self, arr1, arr2):\\n        result = {}\\n        stack = []\\n        for i in arr2:\\n            if not stack or stack[-1] > i:\\n                stack.append(i)\\n            else:\\n                while stack and stack[-1] < i:\\n                    result[stack[-1]] = i\\n                    stack.pop()\\n                stack.append(i)\\n        ans = []\\n        for i in arr1:\\n            if i not in result:\\n                ans.append(-1)\\n            else:\\n                ans.append(result[i])\\n        return ans\\n```",
                "solutionTags": [],
                "code": "```Python\\nclass Solution:\\n    def nextGreaterElement(self, arr1, arr2):\\n        result = {}\\n        stack = []\\n        for i in arr2:\\n            if not stack or stack[-1] > i:\\n                stack.append(i)\\n            else:\\n                while stack and stack[-1] < i:\\n                    result[stack[-1]] = i\\n                    stack.pop()\\n                stack.append(i)\\n        ans = []\\n        for i in arr1:\\n            if i not in result:\\n                ans.append(-1)\\n            else:\\n                ans.append(result[i])\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 435715,
                "title": "java-solution-with-o-n-time-complexity",
                "content": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int n1 = nums1.length;\\n        int n2 = nums2.length;\\n        // make list of next Great values and create map of num to index\\n        int[] nextGreat = new int[n2];\\n        Stack<Integer> stack = new Stack();\\n        Map<Integer,Integer> map = new HashMap<>();\\n        for(int i=n2-1;i>=0;i--){\\n            map.put(nums2[i],i);\\n            int currNum = nums2[i];\\n            // while the next greater value is not found pop the stack\\n            while(!stack.isEmpty() && stack.peek() < currNum){ // this doesn\\'t add to the time complexity, since it loops only n times in total\\n                stack.pop();\\n            }\\n            if(stack.isEmpty()){ // Didn\\'t find a next greater value\\n                nextGreat[i] = -1;\\n                stack.push(currNum);\\n            }else if(currNum<stack.peek()){ // found next greater value\\n                nextGreat[i]=stack.peek();\\n                stack.push(currNum);\\n            }\\n        }\\n        // gen output\\n        int[] out = new int[n1];\\n        for(int i=0;i<n1;i++){\\n            out[i]=nextGreat[map.get(nums1[i])];\\n        }\\n        return out;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int n1 = nums1.length;\\n        int n2 = nums2.length;\\n        // make list of next Great values and create map of num to index\\n        int[] nextGreat = new int[n2];\\n        Stack<Integer> stack = new Stack();\\n        Map<Integer,Integer> map = new HashMap<>();\\n        for(int i=n2-1;i>=0;i--){\\n            map.put(nums2[i],i);\\n            int currNum = nums2[i];\\n            // while the next greater value is not found pop the stack\\n            while(!stack.isEmpty() && stack.peek() < currNum){ // this doesn\\'t add to the time complexity, since it loops only n times in total\\n                stack.pop();\\n            }\\n            if(stack.isEmpty()){ // Didn\\'t find a next greater value\\n                nextGreat[i] = -1;\\n                stack.push(currNum);\\n            }else if(currNum<stack.peek()){ // found next greater value\\n                nextGreat[i]=stack.peek();\\n                stack.push(currNum);\\n            }\\n        }\\n        // gen output\\n        int[] out = new int[n1];\\n        for(int i=0;i<n1;i++){\\n            out[i]=nextGreat[map.get(nums1[i])];\\n        }\\n        return out;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 240275,
                "title": "swift-solution",
                "content": "```swift\\nclass Solution {\\n    func nextGreaterElement(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        var dict = [Int: Int]() // [(num) : (next greater num)]\\n        var stack = [Int]()\\n        for num in nums2 {\\n            while !stack.isEmpty && stack.last! < num {\\n                dict[stack.removeLast()] = num\\n            }\\n            stack.append(num)\\n        }\\n        return nums1.map { dict[$0] ?? -1 }\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```swift\\nclass Solution {\\n    func nextGreaterElement(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        var dict = [Int: Int]() // [(num) : (next greater num)]\\n        var stack = [Int]()\\n        for num in nums2 {\\n            while !stack.isEmpty && stack.last! < num {\\n                dict[stack.removeLast()] = num\\n            }\\n            stack.append(num)\\n        }\\n        return nums1.map { dict[$0] ?? -1 }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 97680,
                "title": "python-6-line-stack-dict-solution",
                "content": "    class Solution(object):\\n        def nextGreaterElement(self, findNums, nums):\\n            h, stack = {}, []\\n            for x in nums:\\n                while stack and stack[-1] < x:\\n                    h[stack.pop()] = x\\n                stack.append(x)\\n            return [h.get(x, -1) for x in findNums]",
                "solutionTags": [],
                "code": "class Solution(object):\\n        def nextGreaterElement(self, findNums, nums):\\n            h, stack = {}",
                "codeTag": "Java"
            },
            {
                "id": 97687,
                "title": "a-easy-understanding-way-in-python",
                "content": "\\n\\xb7\\xb7\\xb7\\n       \\n        rtn = []\\n        for i in xrange(len(findNums)):\\n             rtn.append(-1)\\n            fidNum = findNums[i]\\n            for n in nums[nums.index(fidNum)+1:]:\\n                if n  > fidNum:\\n                    rtn[i] = n\\n                    break\\n        return rtn\\n\\xb7\\xb7\\xb7\\n\\n\\u4e00\\u4e2a\\u76f4\\u89c2\\u6613\\u4e8e\\u4ed6\\u4eba\\u9605\\u8bfb\\u7684\\u4ee3\\u7801\\uff0c\\u4e5f\\u5e94\\u8be5\\u88ab\\u63a8\\u5d07\\u5427",
                "solutionTags": [
                    "Python"
                ],
                "code": "\\n\\xb7\\xb7\\xb7\\n       \\n        rtn = []\\n        for i in xrange(len(findNums)):\\n             rtn.append(-1)\\n            fidNum = findNums[i]\\n            for n in nums[nums.index(fidNum)+1:]:\\n                if n  > fidNum:\\n                    rtn[i] = n\\n                    break\\n        return rtn\\n\\xb7\\xb7\\xb7\\n\\n\\u4e00\\u4e2a\\u76f4\\u89c2\\u6613\\u4e8e\\u4ed6\\u4eba\\u9605\\u8bfb\\u7684\\u4ee3\\u7801\\uff0c\\u4e5f\\u5e94\\u8be5\\u88ab\\u63a8\\u5d07\\u5427",
                "codeTag": "Unknown"
            },
            {
                "id": 3671270,
                "title": "java-code-using-stack-and-hashmap",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- O(m+n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int ans[]=new int[nums1.length];\\n        Map<Integer, Integer> map = new HashMap<>(); \\n        Stack<Integer> st=new Stack<>();\\n        for(int num: nums2)\\n        {\\n            while(!st.empty() && st.peek()<num){\\n                map.put(st.pop(),num);\\n            }\\n            st.push(num);\\n        }\\n        for (int i = 0; i < nums1.length; i++){\\n            nums1[i]=map.containsKey(nums1[i])?map.get(nums1[i]):-1;\\n        }\\n        return nums1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int ans[]=new int[nums1.length];\\n        Map<Integer, Integer> map = new HashMap<>(); \\n        Stack<Integer> st=new Stack<>();\\n        for(int num: nums2)\\n        {\\n            while(!st.empty() && st.peek()<num){\\n                map.put(st.pop(),num);\\n            }\\n            st.push(num);\\n        }\\n        for (int i = 0; i < nums1.length; i++){\\n            nums1[i]=map.containsKey(nums1[i])?map.get(nums1[i]):-1;\\n        }\\n        return nums1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3662689,
                "title": "next-greater-element-i-c",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> st;\\n        unordered_map<int,int> mp;\\n        for(auto it:nums2){\\n            while(st.size() && st.top() < it){\\n                mp[st.top()] = it;\\n                st.pop();\\n            }\\n            \\n            st.push(it);\\n        }\\n        vector<int> ans;\\n        for(auto it:nums1){\\n            ans.push_back((mp.count(it) ? mp[it] : -1));\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n![image](https://assets.leetcode.com/users/images/e748d137-70df-4590-9d6d-ee9dfa93c743_1687283533.4526136.jpeg)\\n\\nplease upvote! if you like.\\nComment below \\uD83D\\uDC47",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> st;\\n        unordered_map<int,int> mp;\\n        for(auto it:nums2){\\n            while(st.size() && st.top() < it){\\n                mp[st.top()] = it;\\n                st.pop();\\n            }\\n            \\n            st.push(it);\\n        }\\n        vector<int> ans;\\n        for(auto it:nums1){\\n            ans.push_back((mp.count(it) ? mp[it] : -1));\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3393023,
                "title": "easy-c-solution-brute-force-approach",
                "content": "\\n\\n# Complexity\\n- Time complexity:   O(n^3)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n      vector <int> v;\\n      for(int i=0;i<nums1.size();i++ )\\n      {\\n        for(int j=0;j<nums2.size();j++)\\n        {\\n           \\n         if( nums1[i]==nums2[j] ) \\n          {\\n              \\n            bool flag=true;\\n\\n            if(j==nums2.size()-1)\\n            {\\n            v.push_back(-1);\\n            break;\\n            }\\n           \\n            else\\n            {\\n              for(int k=j+1;k<nums2.size();k++)\\n            {\\n             \\n             if(nums2[k]>nums2[j])\\n             {\\n               v.push_back(nums2[k]);\\n               flag=false;\\n               break;\\n             }\\n             \\n            }\\n          if(flag==true)\\n             {\\n              v.push_back(-1);\\n             }\\n            }  \\n          } \\n         \\n        }\\n      } \\n      return v;   \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n      vector <int> v;\\n      for(int i=0;i<nums1.size();i++ )\\n      {\\n        for(int j=0;j<nums2.size();j++)\\n        {\\n           \\n         if( nums1[i]==nums2[j] ) \\n          {\\n              \\n            bool flag=true;\\n\\n            if(j==nums2.size()-1)\\n            {\\n            v.push_back(-1);\\n            break;\\n            }\\n           \\n            else\\n            {\\n              for(int k=j+1;k<nums2.size();k++)\\n            {\\n             \\n             if(nums2[k]>nums2[j])\\n             {\\n               v.push_back(nums2[k]);\\n               flag=false;\\n               break;\\n             }\\n             \\n            }\\n          if(flag==true)\\n             {\\n              v.push_back(-1);\\n             }\\n            }  \\n          } \\n         \\n        }\\n      } \\n      return v;   \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3348143,
                "title": "made-easy-stack-o-n",
                "content": "# Explained below inside the code for better Understanding.\\n\\n# \\uD83D\\uDE09Don\\'t just watch & move away, also give an Upvote.\\uD83D\\uDE09\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(N)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# \\uD83D\\uDE09Please upvote it motivates me\\uD83D\\uDE09\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> mp;\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        stack<int> s;\\n\\n        /* this loop will help in finding next greater element\\n        for every element in nums2. And we\\'ll store it in map.*/\\n\\n        for(int i=0; i<n2; i++)\\n        {\\n        /*If we find a greater element in nums2 than the top of stack then\\n        it means that the next greater element of s.top is nums2[i] */\\n            while(!s.empty() && s.top() < nums2[i])\\n            {\\n                mp[s.top()] = nums2[i];\\n                s.pop();\\n            }\\n            s.push(nums2[i]);\\n        }\\n\\n        vector<int> ans(n1, -1);\\n    \\n    /* We\\'ll iterate over nums1 & for every element we\\'ll see in map\\n whether we\\'ve next greater element for the current value. */\\n        for(int i=0; i<n1; i++)\\n        {\\n            if(mp.find(nums1[i]) != mp.end())\\n            {\\n                ans[i] = mp[nums1[i]];\\n            }\\n        }\\n\\n<!-- \\u2705Well before returning \"ans\" don\\'t forget to UPVOTE.\\u2705 -->\\n        return ans;\\n    }\\n};\\n```\\n![Leetcode Upvote.gif](https://assets.leetcode.com/users/images/ddb58277-f81d-40f9-927f-046720177d8e_1683052648.39132.gif)\\n# I understand that this concept was little confusing, so for assistance pls comment below.",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Ordered Map",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> mp;\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        stack<int> s;\\n\\n        /* this loop will help in finding next greater element\\n        for every element in nums2. And we\\'ll store it in map.*/\\n\\n        for(int i=0; i<n2; i++)\\n        {\\n        /*If we find a greater element in nums2 than the top of stack then\\n        it means that the next greater element of s.top is nums2[i] */\\n            while(!s.empty() && s.top() < nums2[i])\\n            {\\n                mp[s.top()] = nums2[i];\\n                s.pop();\\n            }\\n            s.push(nums2[i]);\\n        }\\n\\n        vector<int> ans(n1, -1);\\n    \\n    /* We\\'ll iterate over nums1 & for every element we\\'ll see in map\\n whether we\\'ve next greater element for the current value. */\\n        for(int i=0; i<n1; i++)\\n        {\\n            if(mp.find(nums1[i]) != mp.end())\\n            {\\n                ans[i] = mp[nums1[i]];\\n            }\\n        }\\n\\n<!-- \\u2705Well before returning \"ans\" don\\'t forget to UPVOTE.\\u2705 -->\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3318714,
                "title": "c-easy-solution-beats-99-in-memory-using-iterator",
                "content": "# Intuition\\nUsing find function of vector stl and iterators.\\n\\n# Approach\\nFor each element in nums1, search that element in nums2 using find(num2.begin(), nums2.end(), nums1[i]);\\nIterator from that index location to the end of nums2 and if next greater element is found in nums2, push it to ans vector and set the flag and break out of the loop.\\nAfter the for loop if flag is not set, push -1 to ans.\\nSet flag=0 for the next iteration. \\n\\n# Complexity\\n- Time complexity: Beats 34%.\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: Beats 99%\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& num1, vector<int>& num2) {\\n        vector<int> ans;\\n        int flag=0;\\n        for(int i=0; i<num1.size(); i++){\\n            flag=0;\\n            auto it = find(num2.begin(), num2.end(), num1[i]);\\n            for(auto itr=it; itr!=num2.end(); itr++){\\n                if(*itr>num1[i]){\\n                    ans.push_back(*itr);\\n                    flag=1;\\n                    break;\\n                }\\n            }\\n            if(flag==0)\\n                ans.push_back(-1);\\n        }\\n        return ans;\\n    }\\n};\\n```\\nPlease Upvote!",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Iterator"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& num1, vector<int>& num2) {\\n        vector<int> ans;\\n        int flag=0;\\n        for(int i=0; i<num1.size(); i++){\\n            flag=0;\\n            auto it = find(num2.begin(), num2.end(), num1[i]);\\n            for(auto itr=it; itr!=num2.end(); itr++){\\n                if(*itr>num1[i]){\\n                    ans.push_back(*itr);\\n                    flag=1;\\n                    break;\\n                }\\n            }\\n            if(flag==0)\\n                ans.push_back(-1);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3236984,
                "title": "simplest-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int arr[] = new int[nums1.length];\\n\\n        for(int i=0; i<nums1.length; i++) {\\n            for(int j=0; j<nums2.length; j++) {\\n\\n                if(nums1[i]==nums2[j]) {\\n\\n                    for(int k=j; k<nums2.length; k++) {\\n                        if(nums1[i]<nums2[k]) {\\n                            arr[i] = nums2[k];\\n                            break;\\n                        }\\n                        j++;\\n                    }\\n\\n                    if(j==nums2.length) {\\n                        arr[i] = -1;\\n                    }\\n                }\\n                \\n            }\\n        }\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        int arr[] = new int[nums1.length];\\n\\n        for(int i=0; i<nums1.length; i++) {\\n            for(int j=0; j<nums2.length; j++) {\\n\\n                if(nums1[i]==nums2[j]) {\\n\\n                    for(int k=j; k<nums2.length; k++) {\\n                        if(nums1[i]<nums2[k]) {\\n                            arr[i] = nums2[k];\\n                            break;\\n                        }\\n                        j++;\\n                    }\\n\\n                    if(j==nums2.length) {\\n                        arr[i] = -1;\\n                    }\\n                }\\n                \\n            }\\n        }\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3189391,
                "title": "simple-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n         vector<int> res;\\n\\n        for(int i=0;i<nums1.size();i++){\\n\\n            auto it = find(nums2.begin(),nums2.end(),nums1[i]);\\n            int index = it - nums2.begin();\\n            int var = -1;\\n\\n            for(int j=index+1;j<nums2.size();j++){\\n\\n                if(nums2[j] > nums2[index]){\\n                    var = nums2[j];\\n                    break;\\n                }\\n            }\\n            res.push_back(var);            \\n        }\\n        return res;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n         vector<int> res;\\n\\n        for(int i=0;i<nums1.size();i++){\\n\\n            auto it = find(nums2.begin(),nums2.end(),nums1[i]);\\n            int index = it - nums2.begin();\\n            int var = -1;\\n\\n            for(int j=index+1;j<nums2.size();j++){\\n\\n                if(nums2[j] > nums2[index]){\\n                    var = nums2[j];\\n                    break;\\n                }\\n            }\\n            res.push_back(var);            \\n        }\\n        return res;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3175699,
                "title": "easiest-java-solution-leetcode-fast",
                "content": "class Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Stack<Integer> st = new Stack<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        int[] ans = new int[nums2.length];\\n        \\n        for (int i = nums2.length - 1; i >= 0; i--) {\\n            while (!st.isEmpty() && st.peek() <= nums2[i]) {\\n                st.pop();\\n            }\\n            int nextGreater;\\n            if (st.isEmpty()) {\\n                nextGreater = -1;\\n            } else {\\n                nextGreater = st.peek();\\n            }\\n            map.put(nums2[i], nextGreater);\\n            st.push(nums2[i]);\\n        }\\n        \\n        int[] fina = new int[nums1.length];\\n        for (int i = 0; i < fina.length; i++) {\\n            fina[i] = map.get(nums1[i]);\\n        }\\n        return fina;\\n    }\\n}\\n![image](https://assets.leetcode.com/users/images/df3e34a7-1df6-423e-b177-c073644f313f_1676198955.638952.png)\\n",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "class Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        Stack<Integer> st = new Stack<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        int[] ans = new int[nums2.length];\\n        \\n        for (int i = nums2.length - 1; i >= 0; i--) {\\n            while (!st.isEmpty() && st.peek() <= nums2[i]) {\\n                st.pop();\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3160918,
                "title": "python3-without-using-stack",
                "content": "# Code\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        final_list = []\\n        l = []\\n        for i in nums1:\\n            for j in range(len(nums2)):\\n                if i == nums2[j]:\\n                    s=0\\n                    for k in nums2[j+1:]:\\n                        if k > i:\\n                            s=k\\n                            break\\n                    if not s:\\n                        l.append(-1)\\n                    else:l.append(k)       \\n        return l[:len(nums1)]              \\n```\\n**Please upvote if you find the solution helpful and comment if you can improve the code.**",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Hash Table"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        final_list = []\\n        l = []\\n        for i in nums1:\\n            for j in range(len(nums2)):\\n                if i == nums2[j]:\\n                    s=0\\n                    for k in nums2[j+1:]:\\n                        if k > i:\\n                            s=k\\n                            break\\n                    if not s:\\n                        l.append(-1)\\n                    else:l.append(k)       \\n        return l[:len(nums1)]              \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3083181,
                "title": "using-stack-and-map-simple-and-easy-to-understand-c",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n    vector <int> nge;\\n    stack<int> st;   \\n    unordered_map<int,int>m;\\n    for (int i = 0; i < nums2.size(); i++)\\n    {\\n        while((! st.empty())  && (nums2[i]>nums2[st.top()])){\\n            m[nums2[st.top()]] = nums2[i];\\n            st.pop();\\n        }\\n        st.push(i);\\n    }\\n    while(! st.empty()){\\n        m[nums2[st.top()]] = -1;\\n        st.pop();\\n    }\\n    for(int i=0;i<nums1.size();i++){\\n        nge.push_back(m[nums1[i]]);\\n    }\\n    return nge;   \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n    vector <int> nge;\\n    stack<int> st;   \\n    unordered_map<int,int>m;\\n    for (int i = 0; i < nums2.size(); i++)\\n    {\\n        while((! st.empty())  && (nums2[i]>nums2[st.top()])){\\n            m[nums2[st.top()]] = nums2[i];\\n            st.pop();\\n        }\\n        st.push(i);\\n    }\\n    while(! st.empty()){\\n        m[nums2[st.top()]] = -1;\\n        st.pop();\\n    }\\n    for(int i=0;i<nums1.size();i++){\\n        nge.push_back(m[nums1[i]]);\\n    }\\n    return nge;   \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3042277,
                "title": "c-easy-solution-stack-unordered-map",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int>st;\\n        unordered_map<int,int>mp;\\n        int n=nums2.size();\\n        for(int i=n-1;i>=0;i--){\\n            int ele=nums2[i];\\n            while(!st.empty() && st.top()<=ele ){\\n                st.pop();\\n            }\\n            int res=(st.empty())? -1:st.top();\\n          \\n            mp.insert({ele,res});\\n            st.push(ele);\\n            \\n        }\\n        vector<int>ans;\\n        for(auto x:nums1){ \\n            ans.push_back(mp[x]);\\n        }\\n        return ans;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int>st;\\n        unordered_map<int,int>mp;\\n        int n=nums2.size();\\n        for(int i=n-1;i>=0;i--){\\n            int ele=nums2[i];\\n            while(!st.empty() && st.top()<=ele ){\\n                st.pop();\\n            }\\n            int res=(st.empty())? -1:st.top();\\n          \\n            mp.insert({ele,res});\\n            st.push(ele);\\n            \\n        }\\n        vector<int>ans;\\n        for(auto x:nums1){ \\n            ans.push_back(mp[x]);\\n        }\\n        return ans;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2988399,
                "title": "easy-and-optimal-solution-tc-o-n-sc-o-n",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nA slight modification of [Next Greater Element-2 Problem](https://leetcode.com/problems/next-greater-element-ii/).\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- The task is to find the next greater element for each element in nums 1 from nums2.\\n- So first find next greater element for each element in nums2 and store it in map.\\n- Then iterate over each element in nums1 and use the value stored in map to fill the result vector.\\n- The problem is prettt straight-forward but the challenge here is to *do these mappings from nums2 to map and then use this to find required answer*.\\n- I tried to code it as simple as possible. Any optimizations for this code will be appreciated.\\n\\n# Complexity\\n- Time complexity:O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(N)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    unordered_map<int,int> m;\\n    void findNGE(vector<int>& v){\\n        stack<int>s;\\n        for(int i=v.size()-1;i>=0;--i){\\n            while(!s.empty() and s.top()<= v[i]) s.pop();\\n            int res= s.empty()? -1: s.top();\\n            m[v[i]]=res;\\n            s.push(v[i]);\\n        }\\n    }\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>res;\\n        findNGE(nums2);\\n        for(auto x: nums1) res.push_back(m[x]);\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Hash Table",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    unordered_map<int,int> m;\\n    void findNGE(vector<int>& v){\\n        stack<int>s;\\n        for(int i=v.size()-1;i>=0;--i){\\n            while(!s.empty() and s.top()<= v[i]) s.pop();\\n            int res= s.empty()? -1: s.top();\\n            m[v[i]]=res;\\n            s.push(v[i]);\\n        }\\n    }\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>res;\\n        findNGE(nums2);\\n        for(auto x: nums1) res.push_back(m[x]);\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2935375,
                "title": "java-easy-stack-array-searching",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n// Basically getting values of next great integer for Nums2 Array\\n         Stack<Integer> stack=new Stack<>();\\n        int[]ans=new int[nums1.length];\\n        int[] temp=new int[nums2.length];\\n        for (int i =nums2.length-1; i >=0; i--) {\\n            while (!stack.isEmpty() && stack.peek()<=nums2[i]){\\n                stack.pop();\\n            }\\n            if (i>=0){\\n                if (!stack.isEmpty()){\\n                    temp[i]=stack.peek();\\n                }else {\\n                    temp[i]=-1;\\n                }\\n                stack.push(nums2[i]);\\n            }\\n        }\\n// Since we are required for Nums1 Just map the Elements & return ans\\n        for (int i = 0; i < nums1.length; i++) {\\n            for (int j = 0; j < nums2.length ; j++) {\\n                if (nums1[i]==nums2[j]){\\n                    ans[i]=temp[j];\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n// Basically getting values of next great integer for Nums2 Array\\n         Stack<Integer> stack=new Stack<>();\\n        int[]ans=new int[nums1.length];\\n        int[] temp=new int[nums2.length];\\n        for (int i =nums2.length-1; i >=0; i--) {\\n            while (!stack.isEmpty() && stack.peek()<=nums2[i]){\\n                stack.pop();\\n            }\\n            if (i>=0){\\n                if (!stack.isEmpty()){\\n                    temp[i]=stack.peek();\\n                }else {\\n                    temp[i]=-1;\\n                }\\n                stack.push(nums2[i]);\\n            }\\n        }\\n// Since we are required for Nums1 Just map the Elements & return ans\\n        for (int i = 0; i < nums1.length; i++) {\\n            for (int j = 0; j < nums2.length ; j++) {\\n                if (nums1[i]==nums2[j]){\\n                    ans[i]=temp[j];\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2911473,
                "title": "dictionary-stack",
                "content": "# Intuition\\nFor every number x, if there is greater number after it. Add the pair into dictionary.\\n\\n# Approach\\n1. For every number x, if there is greater number after it. Add the pair into dictionary.\\n2. Traverse nums1 and if number x is in dictionary, then it has greater number after it.\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(n)\\n\\n# Code\\n```\\nfunc nextGreaterElement(nums1 []int, nums2 []int) []int {\\n    dict := make(map[int]int)\\n    stack := []int{}\\n\\n    for _, num := range nums2 {\\n        for len(stack) > 0 && stack[len(stack)-1] < num {\\n            removed := stack[len(stack)-1]\\n            stack = stack[:len(stack)-1]\\n            dict[removed] = num\\n        }\\n        stack = append(stack, num)\\n    }\\n\\n    res := []int{}\\n    for _, num := range nums1 {\\n        if value, ok := dict[num]; ok {\\n            res = append(res, value)\\n        } else {\\n            res = append(res, -1)\\n        }\\n    }\\n    return res\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc nextGreaterElement(nums1 []int, nums2 []int) []int {\\n    dict := make(map[int]int)\\n    stack := []int{}\\n\\n    for _, num := range nums2 {\\n        for len(stack) > 0 && stack[len(stack)-1] < num {\\n            removed := stack[len(stack)-1]\\n            stack = stack[:len(stack)-1]\\n            dict[removed] = num\\n        }\\n        stack = append(stack, num)\\n    }\\n\\n    res := []int{}\\n    for _, num := range nums1 {\\n        if value, ok := dict[num]; ok {\\n            res = append(res, value)\\n        } else {\\n            res = append(res, -1)\\n        }\\n    }\\n    return res\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2705750,
                "title": "python-easy-solution-easy-to-understand-explained",
                "content": "The idea is simple as follows - \\nHave a stack and a dict which yo will use to keep a record of next greater elements after a number in nums2. Once the iteration over n2 is complete, iterate over n1 and check in dict for the elements of nums1 as keys and append their values to the res.\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = {}                                # ans record the NGE of every num in nums2 if exists.\\n        res = []\\n        stack = []                              # Using decreasing stack to find NGE.\\n        \\n        for n2 in nums2:\\n            while stack and n2 > stack[-1]:     # At this situation, n2 is the NGE of stack[-1],\\n                ans[stack.pop()] = n2           # so map stack[-1] to n2.\\n            stack.append(n2)\\n\\t\\t# [4, 2] {1: 3, 3: 4}\\n        \\n        for n1 in nums1:                        # Iterate through nums1,\\n            res.append(ans.get(n1, -1))         # if n1 not appear in ans, there isn\\'t NGE for n1, res.append(-1).\\n                                                # Otherwise, res.append(ans[n1])\\n        \\n        return res\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = {}                                # ans record the NGE of every num in nums2 if exists.\\n        res = []\\n        stack = []                              # Using decreasing stack to find NGE.\\n        \\n        for n2 in nums2:\\n            while stack and n2 > stack[-1]:     # At this situation, n2 is the NGE of stack[-1],\\n                ans[stack.pop()] = n2           # so map stack[-1] to n2.\\n            stack.append(n2)\\n\\t\\t# [4, 2] {1: 3, 3: 4}\\n        \\n        for n1 in nums1:                        # Iterate through nums1,\\n            res.append(ans.get(n1, -1))         # if n1 not appear in ans, there isn\\'t NGE for n1, res.append(-1).\\n                                                # Otherwise, res.append(ans[n1])\\n        \\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2614759,
                "title": "simple-stack-and-a-dictionary-52ms",
                "content": "![image](https://assets.leetcode.com/users/images/669dd4f4-15ea-4c57-99fa-23ce46e1c202_1663949463.3307807.png)\\n\\n*stack to store data by append() or pop(), Dictionary for counting*\\n\\n```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        stack, map = [], {}\\n        for i in range(len(nums2))[::-1]:\\n            num = nums2[i]\\n            while stack and num > stack[-1]:\\n                stack.pop()\\n            map[num] = stack[-1] if stack else -1\\n            stack.append(num)\\n        return [map[num] for num in nums1]\\n```",
                "solutionTags": [
                    "Python",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        stack, map = [], {}\\n        for i in range(len(nums2))[::-1]:\\n            num = nums2[i]\\n            while stack and num > stack[-1]:\\n                stack.pop()\\n            map[num] = stack[-1] if stack else -1\\n            stack.append(num)\\n        return [map[num] for num in nums1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2574152,
                "title": "c-next-greater-element-without-stack",
                "content": "**INTUTION:** is to create a hashmap mapping elements of nums1 with its indexes so that while traversing the nums2 we can check if or not this number exist in num2 so as to find next greater element or can we skip it.\\nAlso hashmap will help us to put the next greater element in resultant vector at its correct position \\n Ex: nums1 = [1 4 2] nums2 [ 1 3 4 2 ]\\n Hashmap : 1 - 0 , 4-1 , 2 -2\\n So we\\'ll first iterate over nums2 check if 1 is present in hashmap (if its in hashmap means its in nums1) okay , next iterate through nums2 from i+1 and find the next greater element if found that is 3 in case we are finding next greater for 1 so insert it at position where 1 is there in nums 2 \\n resultan t[-1 -1 -1 ] initially\\n after  next greater for 1 = , resultant [-1 , **3**, -1]\\n And this index where 1 is there we\\'ll get it from hashmap.\\n So insert 3 at 1st position of resultant array.\\n We do so because order is maintained in resultant array acc to question if next greater of 1th position elemt is found it will be inserted in resulatant array at 1th position only \\n So thats it\\n Comment down below in case of any doubt!!\\n Voila \\u2728\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n       map<int,int> mp;\\n        vector<int> ans(nums1.size(),-1);\\n        for(int i=0;i<nums1.size();i++){\\n            mp[nums1[i]]=i;\\n        }\\n        for(int i=0;i<nums2.size();i++){\\n            if(mp.find(nums2[i])!=mp.end()){\\n                for(int j=i+1;j<nums2.size();j++){\\n                    if(nums2[j]>nums2[i]){\\n                        ans[mp[nums2[i]]]=nums2[j];\\n                        break;\\n                    }\\n                }              \\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n       map<int,int> mp;\\n        vector<int> ans(nums1.size(),-1);\\n        for(int i=0;i<nums1.size();i++){\\n            mp[nums1[i]]=i;\\n        }\\n        for(int i=0;i<nums2.size();i++){\\n            if(mp.find(nums2[i])!=mp.end()){\\n                for(int j=i+1;j<nums2.size();j++){\\n                    if(nums2[j]>nums2[i]){\\n                        ans[mp[nums2[i]]]=nums2[j];\\n                        break;\\n                    }\\n                }              \\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2558479,
                "title": "two-easy-approach",
                "content": "**Without Unordered map**\\n\\n```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>v;\\n        \\n        for(int i=0;i<nums1.size();i++){\\n            \\n            int j=0;\\n            \\n            for(j=0;j<nums2.size();j++){\\n                \\n                if(nums2[j]==nums1[i]){\\n                    \\n                    break;   \\n                }\\n                \\n            }\\n            \\n            int len=v.size();\\n            \\n            for(int k=j+1;k<nums2.size();k++){\\n                \\n                    if(nums2[j]<nums2[k]){\\n                        \\n                        v.push_back(nums2[k]);\\n                        \\n                        break;\\n                    }\\n                   \\n                }\\n            \\n                if(len==v.size()) v.push_back(-1);\\n        }\\n        \\n        return v;\\n        \\n        }\\n```\\n\\n**With  Unordered map**\\n\\n```\\n vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        \\n        vector<int>ans;\\n        \\n        unordered_map<int,int>m;\\n        \\n       for(int i=0;i<nums2.size();i++){\\n           \\n           m[nums2[i]]=i;\\n           \\n       }\\n        \\n       for(int i=0;i<nums1.size();i++){\\n           \\n           int temp=m[nums1[i]];\\n           \\n           int check=ans.size();\\n           \\n           for(int j=temp+1 ; j<nums2.size();j++){\\n               \\n               if(nums2[j]>nums2[temp]){\\n                   \\n                   ans.push_back(nums2[j]);\\n                   \\n                   break;\\n               }\\n               \\n           }\\n           \\n           if(check==ans.size()) ans.push_back(-1);\\n       }\\n        \\n        return ans;\\n    }\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>v;\\n        \\n        for(int i=0;i<nums1.size();i++){\\n            \\n            int j=0;\\n            \\n            for(j=0;j<nums2.size();j++){\\n                \\n                if(nums2[j]==nums1[i]){\\n                    \\n                    break;   \\n                }\\n                \\n            }\\n            \\n            int len=v.size();\\n            \\n            for(int k=j+1;k<nums2.size();k++){\\n                \\n                    if(nums2[j]<nums2[k]){\\n                        \\n                        v.push_back(nums2[k]);\\n                        \\n                        break;\\n                    }\\n                   \\n                }\\n            \\n                if(len==v.size()) v.push_back(-1);\\n        }\\n        \\n        return v;\\n        \\n        }\\n```\n```\\n vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        \\n        vector<int>ans;\\n        \\n        unordered_map<int,int>m;\\n        \\n       for(int i=0;i<nums2.size();i++){\\n           \\n           m[nums2[i]]=i;\\n           \\n       }\\n        \\n       for(int i=0;i<nums1.size();i++){\\n           \\n           int temp=m[nums1[i]];\\n           \\n           int check=ans.size();\\n           \\n           for(int j=temp+1 ; j<nums2.size();j++){\\n               \\n               if(nums2[j]>nums2[temp]){\\n                   \\n                   ans.push_back(nums2[j]);\\n                   \\n                   break;\\n               }\\n               \\n           }\\n           \\n           if(check==ans.size()) ans.push_back(-1);\\n       }\\n        \\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2539519,
                "title": "python-easy-to-understand",
                "content": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        result = []\\n        for num1 in nums1:\\n            flag = 1\\n            idx = nums2.index(num1)\\n            for i in range(idx+1,len(nums2)):\\n                if nums2[i]>num1:\\n                    result.append(nums2[i])\\n                    flag = 0\\n                    break\\n                else:\\n                    flag = 1\\n                    continue\\n            if flag == 1:\\n                result.append(-1)\\n        return result\\n                \\n",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        result = []\\n        for num1 in nums1:\\n            flag = 1\\n            idx = nums2.index(num1)\\n            for i in range(idx+1,len(nums2)):\\n                if nums2[i]>num1:\\n                    result.append(nums2[i])\\n                    flag = 0\\n                    break\\n                else:\\n                    flag = 1\\n                    continue\\n            if flag == 1:\\n                result.append(-1)\\n        return result\\n                \\n",
                "codeTag": "Java"
            },
            {
                "id": 2270922,
                "title": "c-stack-faster-than-90-without-unordered-map",
                "content": "```\\n\\tvector<int> val(nums2.size());\\n    int hsh[100000];\\n\\n    for(int i=0;i<nums2.size();i++)\\n        hsh[nums2[i]]=i;\\n        \\n    stack<int> st;\\n        \\n    for(int i=0;i<nums2.size();i++){\\n        while(!st.empty() && nums2[i]>nums2[st.top()]){\\n          val[st.top()]=nums2[i];\\n          st.pop();\\n        }\\n        st.push(i);\\n    }\\n        \\n    while(!st.empty()){\\n        val[st.top()]=-1;\\n        st.pop();\\n    }\\n        \\n    for(int i=0;i<nums1.size();i++)\\n       ans.push_back(val[hsh[nums1[i]]]);\\n\\n    return ans;\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Array",
                    "Stack"
                ],
                "code": "```\\n\\tvector<int> val(nums2.size());\\n    int hsh[100000];\\n\\n    for(int i=0;i<nums2.size();i++)\\n        hsh[nums2[i]]=i;\\n        \\n    stack<int> st;\\n        \\n    for(int i=0;i<nums2.size();i++){\\n        while(!st.empty() && nums2[i]>nums2[st.top()]){\\n          val[st.top()]=nums2[i];\\n          st.pop();\\n        }\\n        st.push(i);\\n    }\\n        \\n    while(!st.empty()){\\n        val[st.top()]=-1;\\n        st.pop();\\n    }\\n        \\n    for(int i=0;i<nums1.size();i++)\\n       ans.push_back(val[hsh[nums1[i]]]);\\n\\n    return ans;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2217691,
                "title": "c-hashmap-stack-easy-solution",
                "content": "class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> s;\\n        map<int,int> m;\\n        int n=nums2.size();\\n          for(int i=n-1;i>=0;i--)\\n            {\\n                while(!s.empty() && nums2[i]>s.top())\\n                {\\n                    s.pop();\\n                }\\n               if(s.empty())\\n               {\\n                   m[nums2[i]]=-1;\\n               }\\n              else\\n              {\\n                  m[nums2[i]]=s.top();\\n              }\\n               s.push(nums2[i]);\\n            }\\n        vector<int> res;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            res.push_back(m[nums1[i]]);\\n        }\\n        return res;\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        stack<int> s;\\n        map<int,int> m;\\n        int n=nums2.size();\\n          for(int i=n-1;i>=0;i--)\\n            {\\n                while(!s.empty() && nums2[i]>s.top())\\n                {\\n                    s.pop();\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 2192475,
                "title": "c-stack-map-detailed-explanation",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        //solving using maps and stack\\n        stack<int> st;\\n        unordered_map<int, int> map;\\n        \\n        //take the 2nd array\\n        //push it in stack from the last\\n        //we will be storing mapping of the next greater elemnt while pushing in stack\\n        //if there is a greater no. in stack we will map it to that\\n        //if not then to -1\\n        \\n        //eg: nums1 = [4,1,2], nums2 = [1,3,4,2]\\n        //when we push from 2nd array from back\\n        //when we push 2 we check stack is empty and so we map to -1 and push it in stack\\n        //for 4 we check if stack is not empty and then we compare it to the top, as top is less we pop it and now we map this also to -1\\n        //now for 3 we check if stack is not empty, and then as top elemnt which is 4 is larger so we map it to 4 and we push 3 in satck\\n        \\n        //so fillowing this we will have mapping like this\\n        //1->3\\n        //3->4\\n        //4->-1\\n        //2->-1\\n        \\n        //then we iterate in 1st array and return the mapping according to its value \\n        \\n        for(int i=nums2.size()-1; i>=0; i--){\\n            while(!st.empty() && st.top() <= nums2[i]){\\n                st.pop();  //while pushing in stack, if the top element already in stack is less, then we pop it\\n            }\\n            if(st.empty()){\\n                map[nums2[i]] = -1; //if there is no larger elemnt then we map it to -1\\n            }else{\\n                map[nums2[i]] = st.top(); //if there is a larger elemt then we map it to the top whichis in stack\\n            }\\n            st.push(nums2[i]); //push it in stack\\n        }\\n        \\n        for(int i=0; i<nums1.size(); i++){\\n            nums1[i] = map[nums1[i]]; //now iterate through 1st array and reurn whatever is mapped from the stack\\n        }\\n        \\n        return nums1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        //solving using maps and stack\\n        stack<int> st;\\n        unordered_map<int, int> map;\\n        \\n        //take the 2nd array\\n        //push it in stack from the last\\n        //we will be storing mapping of the next greater elemnt while pushing in stack\\n        //if there is a greater no. in stack we will map it to that\\n        //if not then to -1\\n        \\n        //eg: nums1 = [4,1,2], nums2 = [1,3,4,2]\\n        //when we push from 2nd array from back\\n        //when we push 2 we check stack is empty and so we map to -1 and push it in stack\\n        //for 4 we check if stack is not empty and then we compare it to the top, as top is less we pop it and now we map this also to -1\\n        //now for 3 we check if stack is not empty, and then as top elemnt which is 4 is larger so we map it to 4 and we push 3 in satck\\n        \\n        //so fillowing this we will have mapping like this\\n        //1->3\\n        //3->4\\n        //4->-1\\n        //2->-1\\n        \\n        //then we iterate in 1st array and return the mapping according to its value \\n        \\n        for(int i=nums2.size()-1; i>=0; i--){\\n            while(!st.empty() && st.top() <= nums2[i]){\\n                st.pop();  //while pushing in stack, if the top element already in stack is less, then we pop it\\n            }\\n            if(st.empty()){\\n                map[nums2[i]] = -1; //if there is no larger elemnt then we map it to -1\\n            }else{\\n                map[nums2[i]] = st.top(); //if there is a larger elemt then we map it to the top whichis in stack\\n            }\\n            st.push(nums2[i]); //push it in stack\\n        }\\n        \\n        for(int i=0; i<nums1.size(); i++){\\n            nums1[i] = map[nums1[i]]; //now iterate through 1st array and reurn whatever is mapped from the stack\\n        }\\n        \\n        return nums1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2131494,
                "title": "next-greater-element-i-simple-100-faster",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int> res(nums1.size(),-1);\\n        unordered_map<int,int> index;\\n        stack<int> store;\\n        \\n        int i=0;\\n        for(auto& it: nums1)\\n        {\\n            index[it]= i++;\\n        }\\n        \\n        for(auto& curr: nums2)\\n        {\\n            while( !store.empty() && curr> store.top() )\\n            {\\n                int val= store.top();\\n                int idx= index[val];\\n                store.pop();\\n                res[idx]=curr;\\n            }\\n            \\n            if( index.find(curr) != index.end() )\\n                store.push(curr);\\n        }   \\n        \\n        return res;\\n    }\\n};\\n```\\n![image](https://assets.leetcode.com/users/images/91a68c48-7901-4a1e-abe8-65a5af3f5fc0_1654787797.9048426.jpeg)\\n",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int> res(nums1.size(),-1);\\n        unordered_map<int,int> index;\\n        stack<int> store;\\n        \\n        int i=0;\\n        for(auto& it: nums1)\\n        {\\n            index[it]= i++;\\n        }\\n        \\n        for(auto& curr: nums2)\\n        {\\n            while( !store.empty() && curr> store.top() )\\n            {\\n                int val= store.top();\\n                int idx= index[val];\\n                store.pop();\\n                res[idx]=curr;\\n            }\\n            \\n            if( index.find(curr) != index.end() )\\n                store.push(curr);\\n        }   \\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2120405,
                "title": "brute-force-c-basics-for-beginners",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int n,m;\\n        n=nums1.size();\\n        m=nums2.size();\\n        for(int i=0;i<n;i++){\\n            int j=0;\\n            for(j=0;nums2[j]!=nums1[i] && j<m;j++){   \\n            }\\n            while(j<m){\\n                if(nums2[j]>nums1[i]){\\n                    ans.push_back(nums2[j]);\\n                    break;\\n                }\\n                j++;\\n                if(j==m){\\n                    ans.push_back(-1);\\n                }\\n            }\\n        }\\n        return ans;\\n        \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int n,m;\\n        n=nums1.size();\\n        m=nums2.size();\\n        for(int i=0;i<n;i++){\\n            int j=0;\\n            for(j=0;nums2[j]!=nums1[i] && j<m;j++){   \\n            }\\n            while(j<m){\\n                if(nums2[j]>nums1[i]){\\n                    ans.push_back(nums2[j]);\\n                    break;\\n                }\\n                j++;\\n                if(j==m){\\n                    ans.push_back(-1);\\n                }\\n            }\\n        }\\n        return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2110287,
                "title": "java-easy-explained-brute-force-optimal",
                "content": "**BRUTE FORCE APPROACH**\\n```\\n        // BRUTE FORCE APPROACH\\n        \\n        int[] res = new int[nums1.length];\\n        int temp = 0;\\n        \\n        for(int i=0;i<nums1.length;i++)\\n        {\\n            // imagine us at index = 0 -> value is 4\\n            \\n            int index = -1;\\n            \\n            for(int j=0;j<nums2.length;j++)\\n            {\\n                // now we have to find the index of it in our nums2 array\\n                if(nums1[i] == nums2[j])\\n                {\\n                    index = j;\\n                }\\n            }\\n            \\n            // now from this index value till the length, we will traverse to find the first greater element\\n            \\n            int max = nums2[index];\\n            boolean check = false;\\n            \\n            for(int k=index;k<nums2.length;k++)\\n            {\\n                \\n                if(nums2[k] > max)\\n                {\\n                    max = nums2[k];\\n                    check = true;\\n                    break;\\n                }\\n            }\\n            \\n            // let\\'s store this max value in our new array\\n            if(check == true)\\n                res[temp] = max;\\n            else\\n                res[temp] = -1;\\n            \\n            temp++;\\n        }\\n        \\n        return res;\\n```\\n\\n**OPTIMAL APPROACH**\\n```\\n// OPTIMISED SOLUTION - USING STACK AND HASHMAP\\n        \\n        // What we are trying to achieve is to find out all the next greater elements in the array with the help of stack and its operations, and in this process we will store the nums2 array values along with their next greatest in our hashmap\\n        \\n        // later on we will traverse through our nums1 and then fetch the value from hash and return newly formed array\\n        \\n        // so let\\'s first begin by storing our next greatest element in hashmap - and evaluating it using stack\\n        \\n        Stack<Integer> stk = new Stack<>();\\n        HashMap<Integer,Integer> greatest = new HashMap<>();\\n        \\n        // we will traverse from the back side - as we want to see the elements at right side for greatest\\n        \\n        for(int i=nums2.length-1;i>=0;i--)\\n        {\\n            // if the stack is empty - just push that element in and in hashmap say that it\\'s next greater is -1\\n            \\n            if(stk.isEmpty() == true)\\n            {\\n                stk.push(nums2[i]);\\n                greatest.put(nums2[i], -1);\\n            }\\n            else\\n            {\\n                // if the stack has elements in it, we will be popping out all the elements that are lesser than the one we are about to push\\n                // as ofcourse the element that is about to be entered is greater than the elements that are there - it will be the greatest and other will be of no use\\n             \\n                while(stk.isEmpty() == false && stk.peek() <= nums2[i])\\n                {\\n                    stk.pop();\\n                }\\n            \\n                // if now our stack gets empty - then also the next greatest would be -1\\n                if(stk.isEmpty() == true)\\n                {\\n                    greatest.put(nums2[i], -1);\\n                    stk.push(nums2[i]);\\n                }\\n                else\\n                {\\n                    // if the stack is not empty - than whatever is at it\\'s peek will the greatest element for us\\n                    greatest.put(nums2[i], stk.peek());\\n                    stk.push(nums2[i]);\\n                }\\n            }\\n        }\\n        \\n        // now all the values of nums2 are mapped with their next greatest element\\n        \\n        // we will now traverse our nums1 and just get the values of it from hashmap \\n        \\n        int[] res = new int[nums1.length];\\n        \\n        for(int i=0;i<nums1.length;i++)\\n        {\\n            // we will use the get() method of hashmap - where we will pass the key and it returns the value of it\\n            res[i] = greatest.get(nums1[i]);\\n        }\\n        \\n        return res;\\n```",
                "solutionTags": [
                    "Java",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\n        // BRUTE FORCE APPROACH\\n        \\n        int[] res = new int[nums1.length];\\n        int temp = 0;\\n        \\n        for(int i=0;i<nums1.length;i++)\\n        {\\n            // imagine us at index = 0 -> value is 4\\n            \\n            int index = -1;\\n            \\n            for(int j=0;j<nums2.length;j++)\\n            {\\n                // now we have to find the index of it in our nums2 array\\n                if(nums1[i] == nums2[j])\\n                {\\n                    index = j;\\n                }\\n            }\\n            \\n            // now from this index value till the length, we will traverse to find the first greater element\\n            \\n            int max = nums2[index];\\n            boolean check = false;\\n            \\n            for(int k=index;k<nums2.length;k++)\\n            {\\n                \\n                if(nums2[k] > max)\\n                {\\n                    max = nums2[k];\\n                    check = true;\\n                    break;\\n                }\\n            }\\n            \\n            // let\\'s store this max value in our new array\\n            if(check == true)\\n                res[temp] = max;\\n            else\\n                res[temp] = -1;\\n            \\n            temp++;\\n        }\\n        \\n        return res;\\n```\n```\\n// OPTIMISED SOLUTION - USING STACK AND HASHMAP\\n        \\n        // What we are trying to achieve is to find out all the next greater elements in the array with the help of stack and its operations, and in this process we will store the nums2 array values along with their next greatest in our hashmap\\n        \\n        // later on we will traverse through our nums1 and then fetch the value from hash and return newly formed array\\n        \\n        // so let\\'s first begin by storing our next greatest element in hashmap - and evaluating it using stack\\n        \\n        Stack<Integer> stk = new Stack<>();\\n        HashMap<Integer,Integer> greatest = new HashMap<>();\\n        \\n        // we will traverse from the back side - as we want to see the elements at right side for greatest\\n        \\n        for(int i=nums2.length-1;i>=0;i--)\\n        {\\n            // if the stack is empty - just push that element in and in hashmap say that it\\'s next greater is -1\\n            \\n            if(stk.isEmpty() == true)\\n            {\\n                stk.push(nums2[i]);\\n                greatest.put(nums2[i], -1);\\n            }\\n            else\\n            {\\n                // if the stack has elements in it, we will be popping out all the elements that are lesser than the one we are about to push\\n                // as ofcourse the element that is about to be entered is greater than the elements that are there - it will be the greatest and other will be of no use\\n             \\n                while(stk.isEmpty() == false && stk.peek() <= nums2[i])\\n                {\\n                    stk.pop();\\n                }\\n            \\n                // if now our stack gets empty - then also the next greatest would be -1\\n                if(stk.isEmpty() == true)\\n                {\\n                    greatest.put(nums2[i], -1);\\n                    stk.push(nums2[i]);\\n                }\\n                else\\n                {\\n                    // if the stack is not empty - than whatever is at it\\'s peek will the greatest element for us\\n                    greatest.put(nums2[i], stk.peek());\\n                    stk.push(nums2[i]);\\n                }\\n            }\\n        }\\n        \\n        // now all the values of nums2 are mapped with their next greatest element\\n        \\n        // we will now traverse our nums1 and just get the values of it from hashmap \\n        \\n        int[] res = new int[nums1.length];\\n        \\n        for(int i=0;i<nums1.length;i++)\\n        {\\n            // we will use the get() method of hashmap - where we will pass the key and it returns the value of it\\n            res[i] = greatest.get(nums1[i]);\\n        }\\n        \\n        return res;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2025602,
                "title": "c-solution-stack-implementation",
                "content": "``` In this solution I have used two stacks to maintain the second array.```\\n```\\n vector<int> nextGreaterElement(vector<int>& a, vector<int>& b) {\\n        int x=-1;\\n        vector<int>v;\\n        stack<int>s1,s2;         // Created two stacks\\n        int n=a.size();\\n        int m=b.size();\\n        for(int i=0;i<m;i++)\\n            s1.push(b[i]);             // Pushed the second array into the stack\\n        for(int i=0;i<n;i++)\\n        {\\n            while(s1.top()!=a[i])\\n            {\\n                if(s1.top()>a[i])\\n                    x=s1.top();\\n                if(s1.top()!=a[i])\\n                {\\n                    int p=s1.top();\\n                    s1.pop();\\n                    s2.push(p);\\n                }\\n            }\\n            if(x<=a[i])\\n                v.push_back(-1);\\n            else\\n                v.push_back(x);\\n            x=-1;\\n            while(!s2.empty())\\n            {\\n                int q=s2.top();\\n                s1.push(q);\\n                s2.pop();\\n            }\\n        }\\n        return v;\\n    }\\n```\\n```If you like my approach then please upvote me.```",
                "solutionTags": [],
                "code": "``` In this solution I have used two stacks to maintain the second array.```\n```\\n vector<int> nextGreaterElement(vector<int>& a, vector<int>& b) {\\n        int x=-1;\\n        vector<int>v;\\n        stack<int>s1,s2;         // Created two stacks\\n        int n=a.size();\\n        int m=b.size();\\n        for(int i=0;i<m;i++)\\n            s1.push(b[i]);             // Pushed the second array into the stack\\n        for(int i=0;i<n;i++)\\n        {\\n            while(s1.top()!=a[i])\\n            {\\n                if(s1.top()>a[i])\\n                    x=s1.top();\\n                if(s1.top()!=a[i])\\n                {\\n                    int p=s1.top();\\n                    s1.pop();\\n                    s2.push(p);\\n                }\\n            }\\n            if(x<=a[i])\\n                v.push_back(-1);\\n            else\\n                v.push_back(x);\\n            x=-1;\\n            while(!s2.empty())\\n            {\\n                int q=s2.top();\\n                s1.push(q);\\n                s2.pop();\\n            }\\n        }\\n        return v;\\n    }\\n```\n```If you like my approach then please upvote me.```",
                "codeTag": "Unknown"
            },
            {
                "id": 2016215,
                "title": "c-easy-stacks-with-comments",
                "content": "vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) \\n    {\\n        int n = nums2.size();\\n        stack<int> st;\\n        \\n        unordered_map<int,int> mp;\\n  \\n        for(int i = n-1; i >= 0; i--)\\n        {\\n            while(!st.empty() && st.top() <= nums2[i])  //pop smallers to find greater on right\\n                st.pop();\\n            \\n            if(st.empty())  //no greater found\\n               mp[nums2[i]] = -1;\\n            else\\n               mp[nums2[i]] = st.top();\\n            \\n            st.push(nums2[i]);\\n        }\\n        \\n        vector<int> ans;\\n        for(int i = 0; i < nums1.size(); i++)   //find ans for nums1 array\\n        {\\n            ans.push_back(mp[nums1[i]]);\\n        }\\n        return ans;\\n    }\\n\\t\\n****\\tIf you liked the solution , Please Upvote!!!****",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) \\n    {\\n        int n = nums2.size();\\n        stack<int> st;\\n        \\n        unordered_map<int,int> mp;\\n  \\n        for(int i = n-1; i >= 0; i--)\\n        {\\n            while(!st.empty() && st.top() <= nums2[i])  //pop smallers to find greater on right\\n                st.pop();\\n            \\n            if(st.empty())  //no greater found\\n               mp[nums2[i]] = -1;\\n            else\\n               mp[nums2[i]] = st.top();\\n            \\n            st.push(nums2[i]);\\n        }\\n        \\n        vector<int> ans;\\n        for(int i = 0; i < nums1.size(); i++)   //find ans for nums1 array\\n        {\\n            ans.push_back(mp[nums1[i]]);\\n        }\\n        return ans;\\n    }\\n\\t\\n****\\tIf you liked the solution , Please Upvote!!!****",
                "codeTag": "Unknown"
            },
            {
                "id": 1983589,
                "title": "c-stl-o-n-m-optimal-sol-commented",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int> nge(nums1.size(), -1);  //nge - next greater element\\n        stack<int> st;\\n        unordered_map<int, int> m;      //since we don`t need any order & there r no duplicates\\n        \\n        for(int i=0; i<nums2.size(); i++){\\n            \\n            while(!st.empty() && nums2[i] > nums2[st.top()]){\\n                \\n                m[nums2[st.top()]] = nums2[i];     \\n                st.pop();\\n            }\\n            \\n            st.push(i);         //storing the index i.e. \"i\" is enough\\n        }\\n        \\n        for(int i=0; i<nums1.size(); i++){\\n            \\n            if(m.find(nums1[i]) != m.end()){        //just updating our nge vector here with help of the unordered map\\n                nge[i] = m[nums1[i]];\\n            }\\n        }\\n        \\n        return nge;\\n    }\\n};\\n```\\n\\nUPVOTE PLZ :D",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int> nge(nums1.size(), -1);  //nge - next greater element\\n        stack<int> st;\\n        unordered_map<int, int> m;      //since we don`t need any order & there r no duplicates\\n        \\n        for(int i=0; i<nums2.size(); i++){\\n            \\n            while(!st.empty() && nums2[i] > nums2[st.top()]){\\n                \\n                m[nums2[st.top()]] = nums2[i];     \\n                st.pop();\\n            }\\n            \\n            st.push(i);         //storing the index i.e. \"i\" is enough\\n        }\\n        \\n        for(int i=0; i<nums1.size(); i++){\\n            \\n            if(m.find(nums1[i]) != m.end()){        //just updating our nge vector here with help of the unordered map\\n                nge[i] = m[nums1[i]];\\n            }\\n        }\\n        \\n        return nge;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1916469,
                "title": "javascript-faster-than-95-easy-to-understand-with-comments",
                "content": "![image](https://assets.leetcode.com/users/images/39828de6-139a-4ba4-b79d-62c57fcba76b_1649155289.0173707.png)\\n\\n```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n    let res =[];\\n    for(let i=0;i<nums1.length;i++){\\n        let found=false,gn=-1; //set variables found to check if we have the desired num and the next greatest number\\n        for(let j=0;j<nums2.length;j++){\\n            if(nums1[i]===nums2[j]) found= true; //make found as true once we have discovred its location in the nums2 array\\n            if(found && nums1[i] < nums2[j] ) { //after we have the number check if the next number is greater than the desired number\\n\\t\\t\\tgn=nums2[j];  //asssign it to gn and break the loop\\n\\t\\t\\tbreak\\n\\t\\t\\t;}\\n        }\\n        res.push(gn) //push gn and continue to do the same for rest of the elems\\n    }\\n    return res return result\\n};\\n```\\n\\nIts okay if you did not get the solution in the first try, don\\'t give up!\\nPlease do UPVOTE if you find it helpfull.... I know this is not the best solution to this problem but this is what I came up with.\\nHappy C0d1ng!! Cheers!",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums1\\n * @param {number[]} nums2\\n * @return {number[]}\\n */\\nvar nextGreaterElement = function(nums1, nums2) {\\n    let res =[];\\n    for(let i=0;i<nums1.length;i++){\\n        let found=false,gn=-1; //set variables found to check if we have the desired num and the next greatest number\\n        for(let j=0;j<nums2.length;j++){\\n            if(nums1[i]===nums2[j]) found= true; //make found as true once we have discovred its location in the nums2 array\\n            if(found && nums1[i] < nums2[j] ) { //after we have the number check if the next number is greater than the desired number\\n\\t\\t\\tgn=nums2[j];  //asssign it to gn and break the loop\\n\\t\\t\\tbreak\\n\\t\\t\\t;}\\n        }\\n        res.push(gn) //push gn and continue to do the same for rest of the elems\\n    }\\n    return res return result\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1884968,
                "title": "python-solution-o-nums1-nums2-monotonic-stack-decreasing-95-faster",
                "content": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = defaultdict(lambda: -1)\\n        stack = []\\n        for i in range(len(nums2)):\\n            while stack and stack[-1] < nums2[i]:\\n                ans[stack.pop()] = nums2[i]\\n            stack.append(nums2[i])\\n        for i in range(len(nums1)):\\n            nums1[i] = ans[nums1[i]]\\n        return nums1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack",
                    "Monotonic Stack",
                    "Ordered Set"
                ],
                "code": "```\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = defaultdict(lambda: -1)\\n        stack = []\\n        for i in range(len(nums2)):\\n            while stack and stack[-1] < nums2[i]:\\n                ans[stack.pop()] = nums2[i]\\n            stack.append(nums2[i])\\n        for i in range(len(nums1)):\\n            nums1[i] = ans[nums1[i]]\\n        return nums1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1876041,
                "title": "runtime-0ms-faster-than-100-easy-c",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int m = nums1.size();\\n        int n = nums2.size();\\n        \\n        unordered_map<int, int> um;\\n        for (int i = 0; i < m; i++) {\\n            um[nums1[i]] = i;\\n        }\\n        \\n        int i = 0;\\n        stack<int> stk;\\n        vector<int> res(m, -1);\\n        \\n        while (i < n) {\\n            int val = nums2[i];\\n            if (stk.empty()) {\\n                stk.push(val);\\n                i++; continue;\\n            }\\n            \\n            int x = stk.top();\\n            if (val > x) {\\n                if (um.find(x) != um.end()) {\\n                    res[um[x]] = val;\\n                }\\n                stk.pop();\\n            } else {                \\n                stk.push(val);\\n                i++;\\n            }\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int m = nums1.size();\\n        int n = nums2.size();\\n        \\n        unordered_map<int, int> um;\\n        for (int i = 0; i < m; i++) {\\n            um[nums1[i]] = i;\\n        }\\n        \\n        int i = 0;\\n        stack<int> stk;\\n        vector<int> res(m, -1);\\n        \\n        while (i < n) {\\n            int val = nums2[i];\\n            if (stk.empty()) {\\n                stk.push(val);\\n                i++; continue;\\n            }\\n            \\n            int x = stk.top();\\n            if (val > x) {\\n                if (um.find(x) != um.end()) {\\n                    res[um[x]] = val;\\n                }\\n                stk.pop();\\n            } else {                \\n                stk.push(val);\\n                i++;\\n            }\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1852333,
                "title": "c-solution-brute-force-optimall",
                "content": "class Solution\\n{\\npublic:\\n    vector nextGreaterElement(vector &nums1, vector &nums2)\\n    {\\n        \\n\\t\\tvectorans;\\n        for (int i = 0; i < nums1.size(); i++)\\n        {\\n            for (int j = 0; j < nums2.size(); j++)\\n            {\\n                if (nums1[i] == nums2[j])\\n                {\\n                    int max_val = -1;\\n                    for (int k = j; k < nums2.size(); k++)\\n                    {\\n                        if (nums2[k] > nums2[j])\\n                        {\\n                            max_val = nums2[k];\\n                            break;\\n                        }\\n                    }\\n                    ans.push_back(max_val);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};\\nOptimal solution(using stack) class Solution\\n{\\npublic:\\n    vector nextGreaterElement(vector &nums1, vector &nums2)\\n    {\\n        \\n\\t\\tunordered_map<int, int> mp;\\n        stackst;\\n        for (int i = nums2.size() - 1; i >= 0; i--)\\n        {\\n            while (!st.empty() && st.top() <= nums2[i])\\n                st.pop();\\n            if (st.empty())\\n                mp[nums2[i]] = -1;\\n            else\\n                mp[nums2[i]] = st.top();\\n            st.push(nums2[i]);\\n        }\\n        vectorv;\\n        for (int i = 0; i < nums1.size(); i++)\\n        {\\n            v.push_back(mp[nums1[i]]);\\n        }\\n        return v;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution\\n{\\npublic:\\n    vector nextGreaterElement(vector &nums1, vector &nums2)\\n    {\\n        \\n\\t\\tvectorans;\\n        for (int i = 0; i < nums1.size(); i++)\\n        {\\n            for (int j = 0; j < nums2.size(); j++)\\n            {\\n                if (nums1[i] == nums2[j])\\n                {\\n                    int max_val = -1;\\n                    for (int k = j; k < nums2.size(); k++)\\n                    {\\n                        if (nums2[k] > nums2[j])\\n                        {\\n                            max_val = nums2[k];\\n                            break;\\n                        }",
                "codeTag": "Java"
            },
            {
                "id": 1530117,
                "title": "easy-c-solution-stack-unordered-map",
                "content": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int,int> mp; //map elements with their next greater\\n        stack<int> s;\\n        \\n        for(auto n : nums2){\\n            while(!s.empty() and s.top() < n){\\n                mp[s.top()] = n;\\n                s.pop();\\n            }\\n            s.push(n);\\n        }\\n        \\n        vector<int> ans;\\n        for(auto n : nums1){\\n            ans.push_back(mp.count(n) ? mp[n] : -1);\\n        }\\n        return ans;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int,int> mp; //map elements with their next greater\\n        stack<int> s;\\n        \\n        for(auto n : nums2){\\n            while(!s.empty() and s.top() < n){\\n                mp[s.top()] = n;\\n                s.pop();\\n            }\\n            s.push(n);\\n        }\\n        \\n        vector<int> ans;\\n        for(auto n : nums1){\\n            ans.push_back(mp.count(n) ? mp[n] : -1);\\n        }\\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1529673,
                "title": "need-help-11-15-test-cases-paas",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        std::vector<int>::iterator upper;\\n        for(int i=0;i<nums1.size();i++){\\n            auto it=find(nums2.begin(),nums2.end(),nums1[i]);\\n            // cout<<it-nums2.begin()<<\" \";\\n            upper = std::upper_bound(it, nums2.end(), nums1[i]);\\n            // cout<<upper-nums2.begin()<<\" \";\\n          nums1[i]=upper-nums2.begin()==nums2.size()?-1:nums2[upper-nums2.begin()];  \\n        }\\n        \\n        return nums1;\\n    }\\n};\\n```\\ncan anyone tell me what is the reason why this code fail with rest 4 cases?\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        std::vector<int>::iterator upper;\\n        for(int i=0;i<nums1.size();i++){\\n            auto it=find(nums2.begin(),nums2.end(),nums1[i]);\\n            // cout<<it-nums2.begin()<<\" \";\\n            upper = std::upper_bound(it, nums2.end(), nums1[i]);\\n            // cout<<upper-nums2.begin()<<\" \";\\n          nums1[i]=upper-nums2.begin()==nums2.size()?-1:nums2[upper-nums2.begin()];  \\n        }\\n        \\n        return nums1;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 1529171,
                "title": "python-solution-trading-off-concise-code-for-readability",
                "content": "```\\nfrom collections import deque\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        x = {}\\n        st = deque()\\n\\t\\t\\n# traverse the array nums2 in reverse and keep looking at the current status of the stack st\\n\\n        for i in range(len(nums2)-1, -1, -1):\\n\\t\\t\\n# while there is something in the stack AND the top most element in the stack is either smaller or equal to the current element of nums2, \\n# it is of no use to us because it won\\'t qualify for the next greater element. So we pop that element away.\\n            while len(st) > 0 and st[0] <= nums2[i]:\\n                st.popleft()\\n\\t\\t\\t\\t\\n# When the while loop exits, we are done popping. Let\\'s check the status of the stack.\\n\\n# it will either be empty because we popped everything off.\\n#hence there is no element greater than nums2[i]. Therefore add (nums2[i], -1) as the key, value pair to the dictionary\\n            if len(st) == 0:\\n                x[nums2[i]] = -1\\n\\t\\t\\t\\t\\n# Or it will have an element that was greater than nums2[i]. Add (nums2[i], st[0]) as the key, value pair to the dictionary\\n            else:\\n                x[nums2[i]] = st[0]\\n\\t\\t\\t\\t\\n# Append the current element because it could be the next greater element for something on its left\\n            st.appendleft(nums2[i])\\n\\n# Fetching key value pairs according to the elements in num1\\n        ans = []\\n        for i in nums1:\\n            ans.append(x[i])\\n        return ans\\n",
                "solutionTags": [
                    "Python"
                ],
                "code": "class Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        x = {}",
                "codeTag": "Java"
            },
            {
                "id": 1528856,
                "title": "simple-to-understand-2-methods-stack-map-with-comments",
                "content": "**Thumbs up if you find this helpful** \\uD83D\\uDC4D\\n\\nThe following are 2 solutions. \\n\\n* One solution uses the Monotonic stack approach\\n* The other uses a Dictionary with basic loops \\n\\n**1. Using Monotonic Stack**\\n\\nThis solution finds the next greater element for each array value in the second array (```nums2```), and uses that to find the next greater element for each matching value in the first array (```nums1```).\\n\\nTo determine the next greatest element, a stack is used to keep track of the items we\\'ve already seen. The array index of the item is saved to the stack. \\n\\nFor each loop iteration, the item at the top of the stack is checked to see if it is less than the current array item being checked. If the item at the top of the stack is  less than the current array item, then the current array item is saved to the result index that matches the value from the top of the stack.\\n\\nOnce the next greatest elements have been found from ```nums2```, that information is used to populate the final result from the matching values found in  ```nums1```\\n\\n```\\npublic class Solution {\\n    public int[] NextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n        // For each element in nums2, get the next greatest element\\n        var nums2NextGreatest = GetNextGreatest(nums2); \\n        \\n        // Create a dictionary with the next greatest of each element from nums2\\n        var seen = new Dictionary<int, int>();\\n        for (int index = 0; index < nums2.Length; ++index) {\\n            seen[nums2[index]] = nums2NextGreatest[index];\\n        }\\n        \\n        // From the items in the dictionary, populate the results\\n        var result = new int[nums1.Length];        \\n        for (int index = 0; index < nums1.Length; ++index) {\\n            result[index] = seen[nums1[index]];\\n        }\\n        \\n        return result;\\n    }\\n    \\n    public int[] GetNextGreatest(int[] nums) {\\n        // Create a stack that keeps track of the item and its index\\n        var stack = new Stack<int>();        \\n        var result = new int[nums.Length]; \\n        \\n        // Go through array and find the next greatest value\\n        for (int index = 0; index < nums.Length; ++index) {\\n            // Default the value at index to -1\\n            result[index] = -1;\\n            \\n            // Check to see if the item at the top of the stack is less than current item\\n            while (stack.Count > 0 && nums[stack.Peek()] < nums[index]) {\\n                // Save the current item at the result index\\n                result[stack.Peek()] = nums[index];\\n                stack.Pop();\\n            }            \\n\\t\\t\\t\\n\\t\\t\\t// Save array index to the stack\\n            stack.Push(index);\\n        }\\n        \\n        return result;        \\n    }\\n}\\n```\\n\\n**2. Using Dictionary with basic loops**\\n\\nThis solution uses a map to save the starting index of each value of ```nums2```.\\n\\nNext, ```nums1``` is iterated and uses this as a starting point when looking for the next greatest element in  ```nums2```\\n\\n```\\npublic class Solution {\\n    public int[] NextGreaterElement(int[] nums1, int[] nums2) {\\n\\n        // Create a dictionary that holds the starting index of each value\\n        var seen = new Dictionary<int, int>();\\n        for (int index = 0; index < nums2.Length; ++index) {\\n            seen[nums2[index]] = index;\\n        }\\n        \\n        // Find the next item from nums1 that is greater in nums2\\n        var result = new int[nums1.Length];        \\n        for (int index = 0; index < nums1.Length; ++index) {\\n            var startIndex = seen[nums1[index]];          \\n            var found = false;\\n            \\n            // Search nums2 starting at the start index to find the next greatest element\\n            for (int searchIndex = startIndex; searchIndex < nums2.Length; ++searchIndex) {\\n                if (nums1[index] < nums2[searchIndex]) {\\n                    result[index] = nums2[searchIndex]; \\n                    found = true;\\n                    break;\\n                }\\n            }\\n\\t\\t\\t\\n            // Unable to find the next greatest from nums2            \\n            if (!found) {\\n                result[index] = -1;\\n            }\\n        }\\n        \\n        return result;\\n    }\\n}\\n```\\n",
                "solutionTags": [],
                "code": "```nums2```\n```nums1```\n```nums2```\n```nums1```\n```\\npublic class Solution {\\n    public int[] NextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n        // For each element in nums2, get the next greatest element\\n        var nums2NextGreatest = GetNextGreatest(nums2); \\n        \\n        // Create a dictionary with the next greatest of each element from nums2\\n        var seen = new Dictionary<int, int>();\\n        for (int index = 0; index < nums2.Length; ++index) {\\n            seen[nums2[index]] = nums2NextGreatest[index];\\n        }\\n        \\n        // From the items in the dictionary, populate the results\\n        var result = new int[nums1.Length];        \\n        for (int index = 0; index < nums1.Length; ++index) {\\n            result[index] = seen[nums1[index]];\\n        }\\n        \\n        return result;\\n    }\\n    \\n    public int[] GetNextGreatest(int[] nums) {\\n        // Create a stack that keeps track of the item and its index\\n        var stack = new Stack<int>();        \\n        var result = new int[nums.Length]; \\n        \\n        // Go through array and find the next greatest value\\n        for (int index = 0; index < nums.Length; ++index) {\\n            // Default the value at index to -1\\n            result[index] = -1;\\n            \\n            // Check to see if the item at the top of the stack is less than current item\\n            while (stack.Count > 0 && nums[stack.Peek()] < nums[index]) {\\n                // Save the current item at the result index\\n                result[stack.Peek()] = nums[index];\\n                stack.Pop();\\n            }            \\n\\t\\t\\t\\n\\t\\t\\t// Save array index to the stack\\n            stack.Push(index);\\n        }\\n        \\n        return result;        \\n    }\\n}\\n```\n```nums2```\n```nums1```\n```nums2```\n```\\npublic class Solution {\\n    public int[] NextGreaterElement(int[] nums1, int[] nums2) {\\n\\n        // Create a dictionary that holds the starting index of each value\\n        var seen = new Dictionary<int, int>();\\n        for (int index = 0; index < nums2.Length; ++index) {\\n            seen[nums2[index]] = index;\\n        }\\n        \\n        // Find the next item from nums1 that is greater in nums2\\n        var result = new int[nums1.Length];        \\n        for (int index = 0; index < nums1.Length; ++index) {\\n            var startIndex = seen[nums1[index]];          \\n            var found = false;\\n            \\n            // Search nums2 starting at the start index to find the next greatest element\\n            for (int searchIndex = startIndex; searchIndex < nums2.Length; ++searchIndex) {\\n                if (nums1[index] < nums2[searchIndex]) {\\n                    result[index] = nums2[searchIndex]; \\n                    found = true;\\n                    break;\\n                }\\n            }\\n\\t\\t\\t\\n            // Unable to find the next greatest from nums2            \\n            if (!found) {\\n                result[index] = -1;\\n            }\\n        }\\n        \\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1460005,
                "title": "java-easy-solution",
                "content": "```\\nclass Solution {\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n    \\n// FINDING NEXT GREATER ELEMENT OF NUMS2\\n\\nint i;\\nStack<Integer> s=new Stack<>();   \\ns.push(nums2[nums2.length-1]);\\nint []arr=new int[nums2.length];    \\narr[nums2.length-1]=-1;\\nfor(i=nums2.length-2;i>=0;i--)\\n{\\nwhile(s.size()>0 && nums2[i]>s.peek())\\n{\\ns.pop();\\n}\\nif(s.size()>0)\\n{\\narr[i]=s.peek();   \\n}\\nelse\\n{\\narr[i]=-1;\\n}\\ns.push(nums2[i]);\\n}\\n\\n// IF ELEMENT IS FOUND PRINT THE UPDATED ARRAY FORMED THROUGH STACKS;        \\n\\nint []res=new int[nums1.length];\\nfor(i=0;i<nums1.length;i++)\\n {  \\n for(int j=0;j<nums2.length;j++)\\n {\\n     if(nums1[i]==nums2[j])\\n     {\\n        res[i]=arr[j];\\n         break;\\n     }\\n }\\n }      \\n        \\n        return res;\\n  \\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic int[] nextGreaterElement(int[] nums1, int[] nums2) {\\n        \\n    \\n// FINDING NEXT GREATER ELEMENT OF NUMS2\\n\\nint i;\\nStack<Integer> s=new Stack<>();   \\ns.push(nums2[nums2.length-1]);\\nint []arr=new int[nums2.length];    \\narr[nums2.length-1]=-1;\\nfor(i=nums2.length-2;i>=0;i--)\\n{\\nwhile(s.size()>0 && nums2[i]>s.peek())\\n{\\ns.pop();\\n}\\nif(s.size()>0)\\n{\\narr[i]=s.peek();   \\n}\\nelse\\n{\\narr[i]=-1;\\n}\\ns.push(nums2[i]);\\n}\\n\\n// IF ELEMENT IS FOUND PRINT THE UPDATED ARRAY FORMED THROUGH STACKS;        \\n\\nint []res=new int[nums1.length];\\nfor(i=0;i<nums1.length;i++)\\n {  \\n for(int j=0;j<nums2.length;j++)\\n {\\n     if(nums1[i]==nums2[j])\\n     {\\n        res[i]=arr[j];\\n         break;\\n     }\\n }\\n }      \\n        \\n        return res;\\n  \\n    }\\n}\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1570444,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1568226,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1569815,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1566542,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1714107,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1565041,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1569468,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1571753,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1708960,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1568151,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1570444,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1568226,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1569815,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1566542,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1714107,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1565041,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1569468,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1571753,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1708960,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1568151,
                "content": [
                    {
                        "username": "musicmaker99",
                        "content": "This is a very poorly defined and designed quesiton. From the text description it is not clear what the requirement is, and the examples do not clarify this."
                    },
                    {
                        "username": "Baymax_",
                        "content": "[@AdityaBhate](/AdityaBhate) Bro... they are not understanding the question itself and here you are, sharing your solution \\uD83D\\uDE05"
                    },
                    {
                        "username": "Shadab_Choudhary",
                        "content": "totally agree with u"
                    },
                    {
                        "username": "VAmik",
                        "content": "ya this also reduce the confident of a coder marked as easy but when u read it you wouldnt get it what its trying to say"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "user2462p",
                        "content": "shitty description"
                    },
                    {
                        "username": "abradox",
                        "content": "I think Leetcode should review questions by @just_not_over_12. I checked other questions by this user. Most of the questions of this user are in low quality (bad description, lacks of examles, or copied from the other OJ systems)"
                    },
                    {
                        "username": "meow1212meow",
                        "content": "just complaining"
                    },
                    {
                        "username": "yang_tomato",
                        "content": "This is not an easy question V_V"
                    },
                    {
                        "username": "soham12",
                        "content": "Input: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nin the above test case why is the result for findNums[2] = -1. Considering the third value is 2 and its corresponding nums value is 4 which is larger than it. So shouldn't the answer be [-1,3,4]"
                    },
                    {
                        "username": "shewkaninaresh",
                        "content": "this version of the problem doesn\\'t assume a circular array"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "you only need to compare with numbers that are present on the right side of the given number.\\nlike here in case of two there are no numbers present in right side of 2 in nums2. "
                    },
                    {
                        "username": "KB_FACTS",
                        "content": "This questions fails to fully describe what it is looking for. As far as I can see, Example 1 and Example 2 operate on conflicting information. I would appreciate a fuller expression of this prompt."
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just read the problem carefully"
                    },
                    {
                        "username": "mrBrightside",
                        "content": "Am I not understanding this question properly? Input: nums1 = [4,1,2], nums2 = [1,3,4,2]. So I understand that I look at nums1[0] and then i look for nums1[0] in nums2. If i find nums1[0] then i look at the integer on the right of nums2. But why is it that nums1 = [1,3,5,2,4], nums2 = [6,5,4,3,2,1,7] gives me [7,7,7,7,7]? If i follow the logic, nums1[1] == nums2[3], and the nums2[4] is not greater than nums2[3] so i return -1. Please advise."
                    },
                    {
                        "username": "harishrd",
                        "content": "the next greater element need not be the immediate next element"
                    },
                    {
                        "username": "ananyabajpai",
                        "content": "nums1 is a subset of nums2, that part is clear.\\nnums1[0] = 4, now find at which position does 4 occur in nums2, which is nums2[2]\\nIs there a element greater than 4 on right side of nums[2 to end]? No so -1"
                    },
                    {
                        "username": "OBAAT",
                        "content": "How the fork is this easy???"
                    },
                    {
                        "username": "lucasscodes",
                        "content": "You can just brute it in O(n*m). \\nJust the followup with O(n+m) is harder."
                    },
                    {
                        "username": "bw1226",
                        "content": "Find the first occurence of the number that is being processed in nums2. Then find the first number that is larger in nums2 to its right after the occurence of the initial number from nums1."
                    },
                    {
                        "username": "HapticBovine",
                        "content": "An array value stored at offset i is not \"to the right\" of a value stored at offset j, where j < i."
                    }
                ]
            },
            {
                "id": 1747894,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1567980,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1941431,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1775152,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1568083,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1671862,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1576206,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1974171,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1947884,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 1738323,
                "content": [
                    {
                        "username": "aryamangodara",
                        "content": "If I find that solution has complexity less than O(N) I am leaving leetcode right away \\uD83D\\uDE03\\uD83D\\uDE33"
                    },
                    {
                        "username": "doubledherin",
                        "content": "In Example 1, it says \"For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\" But 4 is in the second array. What am I missing here?"
                    },
                    {
                        "username": "ayushk1708",
                        "content": "read the description properly , start from the index of nums2 of  nums1 value that you are currently at, then see right.2 is the last element no nothing on right there so -1."
                    },
                    {
                        "username": "prakhar_1005",
                        "content": "You can only check to the right of every number in the 2nd array"
                    },
                    {
                        "username": "yuzisserman",
                        "content": "How the hell is this an easy question?"
                    },
                    {
                        "username": "raj_3592",
                        "content": "The problem says, there are two arrays, nums1 and nums2. What we have to do is, we have to traverse in nums1 and for each element of the nums1 we have to:\\na) find the current element of nums1 in nums2\\nb) find the next greater element of that element in nums2\\nc) store that greater element in a vector\\nd) return the vector."
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "since the return array has to be the size of the nums1 array,we can use nums1 array to store the answer "
                    },
                    {
                        "username": "jevhy",
                        "content": "I\\'m a bit puzzled with the description, for the first example, why is not  [-1,3,4] a valid output?\\n\\n- For number 2 (position 2 in `nums1`) , AFAIK the next greater number should be 4.\\n- Should the number be to its right, meaning starting from position `2+1`, why the next greater number of 1 is 3 rather than 4?\\n\\n"
                    },
                    {
                        "username": "Rohit_8412",
                        "content": "bcus 4 is previous greater not next greater\\n"
                    },
                    {
                        "username": "rohitdoyal",
                        "content": "HINT : USE STACK :) "
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "<-- please vote\\n\\n![image](https://assets.leetcode.com/users/images/76381186-67df-4a01-9c03-6c27c0022cef_1641921290.2455232.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/fb21a4f8-fa05-412b-b92e-a3004aa2c4e5_1641921296.5792496.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/ec4bc47f-de25-48e6-86ad-e30eab17c07a_1641921300.9859586.png)\\n"
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "definitely tougher for a easy question. This should be modified to be a medium difficulty problem."
                    },
                    {
                        "username": "siaaam",
                        "content": "nums1 = [1,3,5,2,4]\\nnums2 = [6,5,4,3,2,1,7]\\n\\nOutput\\n[7,-1,-1,-1,-1]\\nExpected\\n[7,7,7,7,7]\\n\\nwhy all the elements are 7. there is no greater element expect the first 7.\\nmy code: https://codebeautify.org/alleditor/y23827827"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because you\\'ve done the mapping in wrong way, It NOT only about the Exact next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2  and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "supermarine",
                        "content": "I couldn\\'t understand what this description wants to say at first glance."
                    }
                ]
            },
            {
                "id": 2009983,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1991836,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1983802,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1943440,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1883623,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1877944,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1840329,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1722878,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1720793,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 1682160,
                "content": [
                    {
                        "username": "Eckhart01",
                        "content": "This is a stack question tbh. Should be Medium."
                    },
                    {
                        "username": "Mandeep_Singh007",
                        "content": "PROBLEM STATEMENT : \n\nHere you have given two arrays ,\n       nums1 and nums2. Every element of nums1 exist in nums2. \nReturn an array  containing the next greater element  of each element of nums1  in nums2. \n       what's  next greater element ? \n       consider an example : [9,3,6,1,2]\n       Let's take 3,\n       most closest greater element of 3 is 6\n       so  6 is next greater element, hence 6\n       lets take 9\n       9 has no greater element \nhence -1\n       To understand the problem more concisely , Let's take an example\n       eg.\n       nums1 = [4,1,2]\n       nums2 = [1,3,4,2]\n       Now we need to find next greater element of each element in nums1 in nums2\n       first element of nums1 is 4\n       look at 4 in nums2 \n       4 has no greater element , \nhence  =  -1\n       second element of nums1 i.e. 1\n       look at 1 in nums2 \n       1 has 3 as next greater element , hence = 3\n       Third element of nums1 i.e. 2\n       look at 2 in nums2\n       2 has no next greater element ,\n hence = -1\n       We need to return the next greater element of nums1\n       hence , our answer is \n       [-1 , 3, -1 ]\n\n\n"
                    },
                    {
                        "username": "yyyc_0902",
                        "content": "mono stack journey starts here"
                    },
                    {
                        "username": "dreamingbod",
                        "content": "this question is asking \"which elements on the right is the first bigger element. if no, return -1\"\\nnot asking \"if the next element bigger. if no, return -1\"\\nso if nums1=[1,2]\\nnums2=[2,1,5]\\nthe answer is [5,5], not [5,-1]\\n"
                    },
                    {
                        "username": "Divyanshu_singh_cs",
                        "content": "noice"
                    },
                    {
                        "username": "mikitedi9",
                        "content": "My solution is O(n**3). Can someone tell me the idea on how the time complexity be reduced?"
                    },
                    {
                        "username": "patrickallard",
                        "content": "Spend some time and really focus on what the question is asking you to do. Remember, the problem statement wants us to find the NEXT greatest element, meaning that element could appear to the RIGHT of a nums1 value at any index through to the end of the array.  How might this information influence how you traverse the array?\\n\\nThink too about how you might keep track of values as you traverse the array. Like any algo problem, think about what, if any, data structures may help you solve this problem. \\n\\nHope that helps. "
                    },
                    {
                        "username": "svishak2000",
                        "content": "input  nums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\nOutput= [7,-1,-1,-1,-1]\\nExpected=[7,7,7,7,7]\\n\\nCan somone explain this please"
                    },
                    {
                        "username": "rajat_171",
                        "content": "Because, It NOT about the EXACT next, actually it\\'s about the next i.e. you\\'ve to go through the entire nums2 and the moment you get a greater element than the current element of nums1, just stop then and there."
                    },
                    {
                        "username": "Billyhrussell",
                        "content": "[@abhishekydavsg1](/abhishekydavsg1) wouldn\\'t that mean that in the first case, [4,1,2], [1,3,4,2] the correct answer would be [-1,4,-1] ?"
                    },
                    {
                        "username": "abhishekydavsg1",
                        "content": "you have to find next greater element if it exists  to the right of nums2 not just next greater element ie if i is the of existing element than you have to check all the elements right to it not just only i+1 th element"
                    },
                    {
                        "username": "pooja_sahajan",
                        "content": "Create a new array ans\\nRun a loop through nums1, inside it, loop through nums2 to find where nums1[i]==nums2[j]. When the condition becomes true, find after how many counts the next greater element is found.\\nIf no such element is found, array won\\'t be updated and the value will be 0.\\nTo update 0 to -1, run a different loop after everything, checking for 0s and updating it to -1."
                    },
                    {
                        "username": "khushiagarwal220",
                        "content": "[Can anyone help me, it is passing only 6 testcases out of 15. It is not updating the value as -1, after updating the value to higher ones.] @\\n\\nvector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0;\\n        int j=0;\\n        int next;\\n        vector<int> ans;\\n        for( i=0;i<nums1.size();i++)\\n        {  for(int j=0;j<nums2.size();j++)\\n                { next=-1;\\n                    if(nums1[i]<nums2[j])\\n                    {\\n                        next=nums2[j];\\n                        break;\\n                    }\\n                }\\n                ans.push_back(next);\\n        }  return ans;\\n    }"
                    },
                    {
                        "username": "rahulgupta1597",
                        "content": "check the python solution\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans = []\\n        for i in nums1:\\n            j = nums2.index(i)\\n            if j == len(nums2) -1:\\n                ans.append(-1)\\n            else:\\n                max1 = nums2[j]\\n                for k in range(j+1,len(nums2)):\\n                    if max1 <nums2[k]:\\n                        max1 = nums2[k]\\n                        break\\n                if max1 <= i:\\n                    ans.append(-1)\\n                else:\\n                    ans.append(max1)\\n        return ans\\n"
                    },
                    {
                        "username": "HapticBovine",
                        "content": "This question sucks. Memory does not store consecutive items along an axis from \"left\" to \"right.\"\\n\\nThe problems are hard enough (for neophytes) on their own; there is no need to drown us in ridiculous language mistakes."
                    }
                ]
            },
            {
                "id": 2065358,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 2062595,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 2059513,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 2058265,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 2056902,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 2047575,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 2017573,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 2014070,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 2013014,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 1992811,
                "content": [
                    {
                        "username": "adarshsingh160798",
                        "content": "Not Easy!\\uD83D\\uDE42"
                    },
                    {
                        "username": "noskillzjusthackz",
                        "content": "Is it me or is the expected output incorrect here?\\nnums1 =[1,3,5,2,4]\\nnums2 =[6,5,4,3,2,1,7]\\n\\noutput: [7,-1,-1,-1,-1]\\nexpected: [7,7,7,7,7]\\n"
                    },
                    {
                        "username": "devrahuls",
                        "content": "Who tf tagged this question as \\'easy\\' !??"
                    },
                    {
                        "username": "lakshh_123",
                        "content": "how can we use stack for this?\\n"
                    },
                    {
                        "username": "Aditya_Kumdale",
                        "content": "Definately not an easy question, atleast for beginners. And Even if you have already learned this classic Problem somewhere, you can see by solving this question how it is one step ahead. "
                    },
                    {
                        "username": "rammuthukumar18",
                        "content": "You don\\'t have to create a new to store the answer,since the answer array must be the size of the nums1 array we can use that array to store the answer\\n\\nAnd i dont know we can the alter the input array"
                    },
                    {
                        "username": "kalpeshkj646",
                        "content": "This is not an easy question thats for sure!"
                    },
                    {
                        "username": "albert_praveen",
                        "content": "can we use bruteforce approach instead of stack "
                    },
                    {
                        "username": "rajat_171",
                        "content": "Yes you can."
                    },
                    {
                        "username": "raaven_4321",
                        "content": "Shit description"
                    },
                    {
                        "username": "iamshivam69",
                        "content": "Thanks leetcode for just wasting my time, from next time I will prefer to solve question without the description\\uD83D\\uDE23\\uD83D\\uDE29"
                    }
                ]
            },
            {
                "id": 1966707,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1962027,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1940233,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1921031,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1912086,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1886335,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1867253,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1847242,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1826026,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1824221,
                "content": [
                    {
                        "username": "sk315425",
                        "content": "why am i getting runtime error here \\n\\nvector<int> res;\\n    long x1 = n1.size()-1;\\n    long x2 = n2.size()-1;\\n    for(int i = 0;i < x1+1 ; i++){\\n        for(int j = 0; j < x2+1 ;j++){\\n            if(n1[i] == n2[j]){\\n                if(n2[j+1] > n2[j]){\\n                    res.push_back(n2[j+1]);\\n                }else{\\n                    res.push_back(-1);\\n                }\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "**** For those who don\\'t understand the description ****\\n\\nYou must create an array the same size as nums1. \\nFor each number in nums1, you might find the same number in nums2, and then find the first number which is larger than that to the right in nums2. \\nThis number will then be placed in the current nums1 position in the return array.\\n\\nUnderstanding the question was harder than the problem."
                    },
                    {
                        "username": "bhautikkapadiya6",
                        "content": "can anyone explained how to solve because of lack of info can\\'t figure out what to solve"
                    },
                    {
                        "username": "gauravpathak_60",
                        "content": "description not properly explained."
                    },
                    {
                        "username": "JV_004",
                        "content": "think for stack or map, either of them can be used to solve"
                    },
                    {
                        "username": "Vikas0693",
                        "content": "Can someone please explain me, why the submissions with  n*m are taking less time than mine with n+m? "
                    },
                    {
                        "username": "Parth_Dhawan",
                        "content": "Qusetion is not clearly explained."
                    },
                    {
                        "username": "vikass_420",
                        "content": " vector<int>v;\\n        stack<int>s;\\n        map<int,int>mp;\\n        for(int i=nums2.size()-1;i>=0;i--){\\n            if(s.empty()){\\n              \\n                mp[nums2[i]]=-1;\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() && s.top()>nums2[i]){\\n               \\n                mp[nums2[i]]=s.top();\\n                s.push(nums2[i]);\\n            }\\n            else if( !s.empty() &&s.top()<=nums2[i]){\\n                while(s.top()<=nums2[i] && !s.empty()){\\n                    s.pop();\\n                }\\n                if(s.empty()){\\n                    \\n                   mp[nums2[i]]=-1;\\n                   s.push(nums2[i]);\\n                }\\n                else{\\n                    mp[nums2[i]]=s.top();\\n                    s.push(nums2[i]);\\n\\n\\n                }  \\n                 \\n                    \\n\\n                    \\n\\n\\n                \\n            }\\n        }\\n       \\n        for(int i=0;i<nums1.size();i++){\\n            v.push_back(mp[nums1[i]]);\\n\\n        }\\n        return v;\\n\\n    }\\n};   \\nwhy it is giving runtime error i could not understand please suggest some correction"
                    },
                    {
                        "username": "Ayush_Agarwal_2003",
                        "content": "I tried making the next greater element vector for the second vector using stacks and then solving the rest of the question  , but I am getting runtime error and I have absolutely no idea why , can sommeone please explain what could have possibly gone wrong in this code \n\n `class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\n        vector<int> nge;\n\n        stack<int> s;\n\n        reverse(n2.begin(),n2.end());\n\n        nge.push_back(-1);\n\n        s.push(n2[0]);\n\n        for(int i=1; i<n2.size(); i++){\n\n            while(s.top()<n2[i] && !s.empty()){\n                s.pop();\n            }\n\n            if(s.empty()){\n                nge.push_back(-1);\n            }\n\n            else{\n                nge.push_back(s.top());\n            }\n\n            s.push(n2[i]);\n        }\n        reverse(nge.begin(),nge.end());\n\n        reverse(n2.begin(),n2.end());\n\n        vector<int> ans ;\n\n        int flag = 0 ;\n\n        for(int i=0; i<n1.size(); i++){\n\n            for(int j=0; j<n2.size(); j++){\n\n                flag = 0 ;\n\n                if(n1[i]==n2[j]){\n                    ans.push_back(nge[j]);\n                    flag = 1 ;\n                    break;\n                }\n\n            }\n\n            if(flag==0){\n                ans.push_back(-1);\n            }\n\n        }\n\n        return ans ;\n    }\n};  `"
                    },
                    {
                        "username": "ankitpunia400",
                        "content": " HashMap<Integer ,Integer> map  = new HashMap<>();\\n        for(int i=0;i<nums2.length-1;i++){\\n            map.put(nums2[i],map.getOrDefault(nums2[i],nums2[i+1])+0);\\n        }\\n        map.put(nums2[nums2.length-1],-1);\\n        System.out.println(map);\\n        int temp =0;\\n        int [] ans = new int [nums1.length];\\n        for(int i =0;i<nums1.length;i++){\\n            if(map.containsKey(nums1[i])){\\n                 temp = map.get(nums1[i]);\\n                if(temp>nums1[i]){\\n                    ans[i]=temp;\\n                }\\n                else{\\n                    ans[i]=-1;\\n                }\\n            }\\n        }\\n        return ans;\\nIam not sure but its 10/16 test case\\ncan someone tell me whys this code is failed to pass this test case \\nnum1 = [1,3,5,2,4]\\nnums2=[6,5,4,3,2,1,7]\\n my O/p = [7,-1,-1,-1,-1]\\nexpected = [7,7,7,7,7]\\nwhy expected o/p be like ? can anyone explain me "
                    }
                ]
            },
            {
                "id": 1785197,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1776623,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1774882,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1771454,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1752047,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1742567,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1727810,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1724084,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1684929,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            },
            {
                "id": 1681526,
                "content": [
                    {
                        "username": "user2118U",
                        "content": "Guys , it is asking greater element to the right of nums2[i] when nums1[j]=nums2[i].\\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\\nOutput: [-1,3,-1]\\n\\nHere nums1[0]==nums2[2] but there is no greater element right to in nums2 array so ans -1.\\nnums[1]==nums2[0] and in right of nums2[0], 3 is first greater element.\\nnums1[2]==nums2[3] and there is no greater element right to the nums2[3] so ans is -1.\\nIt is simpler explanation given in question. Try to understand meaning of NEXT GREATEST ELEMENT"
                    },
                    {
                        "username": "lil_bios",
                        "content": "What is the result for example Input: nums1 = [4,1,2], nums2 = [1,2,3,4]. "
                    },
                    {
                        "username": "raghavgupta_00",
                        "content": " vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n \nstack<int> s;\n        unordered_map<int,int> mp;\n        for(auto m : nums2){\n            while(s.size() && m>s.top()){\n                mp[s.top()] = m;\n                s.pop();\n            }\n            s.push(m);\n        }\n        int n = nums1.size();\n        vector<int>res(n , -1);\n        \n        for(int i = 0 ; i< n ; i++){\n            if(mp.find(nums1[i]) != mp.end()){\n                res[i] = mp[nums1[i]];\n            }\n        }\n        return res;\n    }\nbasically here we are making a map of element and its next greater element\nand then we are iterating over subset to find the required ans.\nwe used stack to keep track of elements in num2 to find the next greater element for each element in nums2. When the loop reaches an element \"m\" that is greater than the element on top of the stack, it means that the element on top of the stack does not have a next greater element in nums2 that comes after it. So the element on the top of the stack is stored in the unordered_map with the current element \"m\" as its value, meaning that m is the next greater element for the element on top of the stack."
                    },
                    {
                        "username": "kd_5304",
                        "content": "Can someone please explain this question? What exactly it wants me to do? :("
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "sasha2k1",
                        "content": "C++. Fast.\\n`class Solution {\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& n1, vector<int>& n2) {\\n        vector<int> r;\\n        for(auto x:n1){\\n            bool f=1;\\n            auto j = find(n2.begin(), n2.end(), x);\\n            for(; j<n2.end(); j++){\\n                if(*j>x){\\n                    r.push_back(*j);\\n                    f=0;\\n                    break;\\n                }\\n            }\\n            if(f)\\n              r.push_back(-1);\\n        }\\n        return r;\\n    }\\n};`"
                    },
                    {
                        "username": "ssalvi28",
                        "content": "I am new to competitive coding, so any help would be appreciated!\\nCan someone please explain it to me  why the first solution below takes more time than the second. I am confused as both have while loop inside for loop, for same number of iterations:\\n\\nSolution 1: 323 ms 14.1mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        r = []\\n        for i in nums1:\\n            k = nums2.index(i)\\n            while k+1 < len(nums2):\\n                k+=1\\n                if nums2[k] > i:\\n                    r.append(nums2[k])\\n                    break\\n            if len(r) <= nums1.index(i):\\n                r.append(-1)\\n        return r\\n\\nSolution 2: 63ms 14.1 mb\\nclass Solution:\\n    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        s,d = [],{}\\n        for n in nums2:\\n            while s and n > s[-1]:\\n                c = s.pop()\\n                d[c] = n\\n            s.append(n)\\n        return [d.get(e,-1) for e in nums1]"
                    },
                    {
                        "username": "hafid-hub",
                        "content": "The while loop in the first solution iterate through (nums2). It is inside an other loop \"for\", that iterate through an other array (nums1). \\nFor example:  nums1 = [1, 2, 3] and  nums2 = [10,11,12,13].\\nFirst iterate through nums1:\\n   *  1 and iterate through nums2: 10\\n                                                            11\\n                                                            12\\n                                                             13\\nWe have here 4 operation (the length of nums2).\\n*  2 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nAn other 4 operations.\\n*  3 and iterate through nums2:    10\\n                                                            11\\n                                                            12\\n                                                            13\\nThe sup is 12 operations  (3 * 4: len(nums1) * len(nums2)).\\nTime complexity in that case O(n*m), withe n the length of nums1 and m the length of nums2.\\n\\nIn the second solution we iterate through the same array: nums2. In the worst case we have O(n + n) time complexity. For example:\\nnums2 = [9,8,7,6,5,4,3,2,1,10]\\nWhile loop is used only for the last number 10 and iterate 10 times; while stack is not empty. Of course for this example, we have constant time O(1). But if the length is huge, the difference between n + n and n*n also will be huge.\\nSorry for my English.\\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Beats 100%\\uD83D\\uDE0E | O(n) Solution \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/next-greater-element-i/solutions/2949503/beats-100-o-n-solution/?orderBy=hot"
                    },
                    {
                        "username": "wodxuming",
                        "content": "```\\nclass Solution {\\n    typedef vector<int>::iterator numIt;\\npublic:\\n    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {\\n        vector<int> ret;\\n        \\n        for(auto& fn: findNums){            \\n            int _num = -1;\\n            \\n            bool bFind = false;\\n            for(auto& n : nums){                \\n                if(n == fn){\\n                    bFind = true;\\n                }\\n                \\n                if(n > fn && bFind){\\n                    _num = n;\\n                    break;\\n                }                \\n            }\\n            \\n            ret.push_back(_num);\\n        }\\n        \\n        return ret;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "ratankumar348",
                        "content": "pathetic description .\\nTook lot of time in figuring the logic with blocked test cases again & again.\\nCan someone explain the standard code for this ?\\n"
                    },
                    {
                        "username": "deleted_user",
                        "content": "This question is pretty easy but terrible. What is the point of such a pointless query and what is the point of an easy question in cubic time?"
                    }
                ]
            }
        ]
    },
    {
        "title": "Classes More Than 5 Students",
        "question_content": "<p>Table: <code>Courses</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| student     | varchar |\n| class       | varchar |\n+-------------+---------+\n(student, class) is the primary key (combination of columns with unique values) for this table.\nEach row of this table indicates the name of a student and the class in which they are enrolled.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write a solution to find all the classes that have <strong>at least five students</strong>.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The&nbsp;result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nCourses table:\n+---------+----------+\n| student | class    |\n+---------+----------+\n| A       | Math     |\n| B       | English  |\n| C       | Math     |\n| D       | Biology  |\n| E       | Math     |\n| F       | Computer |\n| G       | Math     |\n| H       | Math     |\n| I       | Math     |\n+---------+----------+\n<strong>Output:</strong> \n+---------+\n| class   |\n+---------+\n| Math    |\n+---------+\n<strong>Explanation:</strong> \n- Math has 6 students, so we include it.\n- English has 1 student, so we do not include it.\n- Biology has 1 student, so we do not include it.\n- Computer has 1 student, so we do not include it.\n</pre>\n",
        "solutions": [
            {
                "id": 1538933,
                "title": "sql-2-simple-solutions",
                "content": "**Using having**\\n\\n```\\nselect class\\nfrom courses \\nhaving count(distinct student) >= 5\\n```\\n\\n**Using sub query**\\n\\n```\\nselect class\\nfrom \\n    (select class, count(distinct student) as num\\n    from courses\\n    group by class) as temp\\nwhere num >= 5;\\n```\\n\\n**Like it ? please upvote !**",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class\\nfrom courses \\nhaving count(distinct student) >= 5\\n```\n```\\nselect class\\nfrom \\n    (select class, count(distinct student) as num\\n    from courses\\n    group by class) as temp\\nwhere num >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3811588,
                "title": "sql-group-by-having-easy-to-understand",
                "content": "![image.png](https://assets.leetcode.com/users/images/9a9e8d4a-7d77-4bdb-b090-5cea018b7ca6_1690231204.902454.png)\\n\\n# Code\\n```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2580473,
                "title": "one-liner-using-group-by",
                "content": "**Upvote if you feel it easy :)**\\n```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING count(student) > = 5;\\n```",
                "solutionTags": [
                    "MS SQL Server",
                    "Database"
                ],
                "code": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING count(student) > = 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3899196,
                "title": "pandas-2-liner-easy-to-understand",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- Group the DataFrame by class using the groupby function.\\n- Count the number of students in each class by using the count function on the grouped DataFrame and resetting the index.\\n- Filter the class_counts DataFrame to include only the rows where the student count is greater than or equal to five.\\n- Return the resulting DataFrame containing the classes with at least five students.\\n# Code\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    # Group by class and count the number of students in each class\\n    class_counts = courses.groupby(\\'class\\')[\\'student\\'].count().reset_index()\\n    \\n    # Filter classes with at least five students\\n    result = class_counts[class_counts[\\'student\\'] >= 5][[\"class\"]]\\n    \\n    return result\\n```\\n![upvote img.jpg](https://assets.leetcode.com/users/images/4be8f8e0-263e-4a69-8cd9-f89b75c468a8_1691842427.9345431.jpeg)\\n",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    # Group by class and count the number of students in each class\\n    class_counts = courses.groupby(\\'class\\')[\\'student\\'].count().reset_index()\\n    \\n    # Filter classes with at least five students\\n    result = class_counts[class_counts[\\'student\\'] >= 5][[\"class\"]]\\n    \\n    return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2431324,
                "title": "mysql-1-liner-solution-beginner-level-simple-short-solution",
                "content": "***Please upvote to motivate me in my quest of documenting all leetcode solutions. HAPPY CODING:)\\nAny suggestions and improvements are always welcome**.*\\n______________________\\n\\u2705 **MySQL Code :**\\n```\\nSELECT class FROM courses GROUP BY class HAVING COUNT(distinct student)>=5;\\n```\\n**Runtime:** 363 ms\\n**Memory Usage:**  0B\\n________________________________\\n__________________________________\\n\\nIf you like the solution, please upvote \\uD83D\\uDD3C\\nFor any questions, or discussions, comment below. \\uD83D\\uDC47\\uFE0F",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class FROM courses GROUP BY class HAVING COUNT(distinct student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 103571,
                "title": "all-the-same",
                "content": "sql is always no more flexible\\n```\\nselect class from courses group by class having count(distinct student) >= 5;\\n```",
                "solutionTags": [],
                "code": "```\\nselect class from courses group by class having count(distinct student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3863249,
                "title": "pandas-vs-sql-elegant-short-all-30-days-of-pandas-solutions",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n- Space complexity: $$O(n)$$\\n\\n# Code\\n```Python []\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    stats = courses.groupby([\\'class\\']).count().reset_index()\\n    return stats[stats[\\'student\\'] >= 5][[\\'class\\']]\\n```\\n```SQL []\\nSELECT class\\n  FROM Courses\\n GROUP BY class\\nHAVING count(*) >= 5;\\n```\\n\\n# Important!\\n###### If you like the solution or find it useful, feel free to **upvote** for it, it will support me in creating high quality solutions)\\n\\n# 30 Days of Pandas solutions\\n\\n### Data Filtering \\u2705\\n- [Big Countries](https://leetcode.com/problems/big-countries/solutions/3848474/pandas-elegant-short-1-line/)\\n- [Recyclable and Low Fat Products](https://leetcode.com/problems/recyclable-and-low-fat-products/solutions/3848500/pandas-elegant-short-1-line/)\\n- [Customers Who Never Order](https://leetcode.com/problems/customers-who-never-order/solutions/3848527/pandas-elegant-short-1-line/)\\n- [Article Views I](https://leetcode.com/problems/article-views-i/solutions/3867192/pandas-elegant-short-1-line/)\\n\\n\\n### String Methods \\u2705\\n- [Invalid Tweets](https://leetcode.com/problems/invalid-tweets/solutions/3849121/pandas-elegant-short-1-line/)\\n- [Calculate Special Bonus](https://leetcode.com/problems/calculate-special-bonus/solutions/3867209/pandas-elegant-short-1-line/)\\n- [Fix Names in a Table](https://leetcode.com/problems/fix-names-in-a-table/solutions/3849167/pandas-elegant-short-1-line/)\\n- [Find Users With Valid E-Mails](https://leetcode.com/problems/find-users-with-valid-e-mails/solutions/3849177/pandas-elegant-short-1-line/)\\n- [Patients With a Condition](https://leetcode.com/problems/patients-with-a-condition/solutions/3849196/pandas-elegant-short-1-line-regex/)\\n\\n\\n### Data Manipulation \\u2705\\n- [Nth Highest Salary](https://leetcode.com/problems/nth-highest-salary/solutions/3867257/pandas-elegant-short-1-line/)\\n- [Second Highest Salary](https://leetcode.com/problems/second-highest-salary/solutions/3867278/pandas-elegant-short/)\\n- [Department Highest Salary](https://leetcode.com/problems/department-highest-salary/solutions/3867312/pandas-elegant-short-1-line/)\\n- [Rank Scores](https://leetcode.com/problems/rank-scores/solutions/3872817/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Delete Duplicate Emails](https://leetcode.com/problems/delete-duplicate-emails/solutions/3849211/pandas-elegant-short/)\\n- [Rearrange Products Table](https://leetcode.com/problems/rearrange-products-table/solutions/3849226/pandas-elegant-short-1-line/)\\n\\n\\n### Statistics \\u2705\\n- [The Number of Rich Customers](https://leetcode.com/problems/the-number-of-rich-customers/solutions/3849251/pandas-elegant-short-1-line/)\\n- [Immediate Food Delivery I](https://leetcode.com/problems/immediate-food-delivery-i/solutions/3872719/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Count Salary Categories](https://leetcode.com/problems/count-salary-categories/solutions/3872801/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n\\n\\n### Data Aggregation \\u2705\\n- [Find Total Time Spent by Each Employee](https://leetcode.com/problems/find-total-time-spent-by-each-employee/solutions/3872715/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Game Play Analysis I](https://leetcode.com/problems/game-play-analysis-i/solutions/3863223/pandas-elegant-short-1-line/)\\n- [Number of Unique Subjects Taught by Each Teacher](https://leetcode.com/problems/number-of-unique-subjects-taught-by-each-teacher/solutions/3863239/pandas-elegant-short-1-line/)\\n- [Classes More Than 5 Students](https://leetcode.com/problems/classes-more-than-5-students/solutions/3863249/pandas-elegant-short/)\\n- [Customer Placing the Largest Number of Orders](https://leetcode.com/problems/customer-placing-the-largest-number-of-orders/solutions/3863257/pandas-elegant-short-1-line/)\\n- [Group Sold Products By The Date](https://leetcode.com/problems/group-sold-products-by-the-date/solutions/3863267/pandas-elegant-short-1-line/)\\n- [Daily Leads and Partners](https://leetcode.com/problems/daily-leads-and-partners/solutions/3863279/pandas-elegant-short-1-line/)\\n\\n\\n### Data Aggregation \\u2705\\n- [Actors and Directors Who Cooperated At Least Three Times](https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times/solutions/3863309/pandas-elegant-short/)\\n- [Replace Employee ID With The Unique Identifier](https://leetcode.com/problems/replace-employee-id-with-the-unique-identifier/solutions/3872822/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Students and Examinations](https://leetcode.com/problems/students-and-examinations/solutions/3872699/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Managers with at Least 5 Direct Reports](https://leetcode.com/problems/managers-with-at-least-5-direct-reports/solutions/3872861/pandas-elegant-short/)\\n- [Sales Person](https://leetcode.com/problems/sales-person/solutions/3872712/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "MySQL",
                    "Pandas"
                ],
                "code": "```Python []\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    stats = courses.groupby([\\'class\\']).count().reset_index()\\n    return stats[stats[\\'student\\'] >= 5][[\\'class\\']]\\n```\n```SQL []\\nSELECT class\\n  FROM Courses\\n GROUP BY class\\nHAVING count(*) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3912758,
                "title": "pandas-one-liner-solution-beats-95-detailed-solution-explaining-each-step",
                "content": "# Approach\\n1. Select the class column from the DataFrame and calculate the value_counts for each class available in the class.\\n```\\ncourses[\\'class\\'].value_counts()\\n```\\n2. Comparing this to >4 will give you a boolean list containing true for those classes which are present at least 5 times.\\n```\\ncourses[\\'class\\'].value_counts()>4\\n```\\n3. Selecting only those classes which are stated True.\\n```\\ncourses[\\'class\\'].value_counts()[(courses[\\'class\\'].value_counts()>4)]\\n```\\n4. As value_counts will return us a Series which will be containing classes as indexes and their counts as their values we use .index function to just fetch the classes name.\\n\\n5.  Now this data is still in Series whereas we have to return a dataframe for which we used .to_frame() function to convert the series into a dataframe.\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    return courses[\\'class\\'].value_counts()[(courses[\\'class\\'].value_counts()>4)].index.to_frame()\\n```\\n\\n# Feedback\\nUpvote this solution if it helped you, so it can reach more people.\\n",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\ncourses[\\'class\\'].value_counts()\\n```\n```\\ncourses[\\'class\\'].value_counts()>4\\n```\n```\\ncourses[\\'class\\'].value_counts()[(courses[\\'class\\'].value_counts()>4)]\\n```\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    return courses[\\'class\\'].value_counts()[(courses[\\'class\\'].value_counts()>4)].index.to_frame()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 808232,
                "title": "sql-easy-peasy-solution",
                "content": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING count(DISTINCT student)>=5\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING count(DISTINCT student)>=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 618945,
                "title": "75-faster-one-line-answer",
                "content": "```\\nselect class from courses group by class having count(distinct student)>=5;\\n```",
                "solutionTags": [],
                "code": "```\\nselect class from courses group by class having count(distinct student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2716880,
                "title": "one-line-code-mysql",
                "content": "`select class from courses group by class having count(class)>=5;`",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "`select class from courses group by class having count(class)>=5;`",
                "codeTag": "Java"
            },
            {
                "id": 2518437,
                "title": "classes-more-than-5-students",
                "content": "select class from Courses group by class having count(class)>= 5",
                "solutionTags": [],
                "code": "select class from Courses group by class having count(class)>= 5",
                "codeTag": "Java"
            },
            {
                "id": 146087,
                "title": "can-not-be-more-simpler",
                "content": "select class from courses group by class having count(distinct student) >= 5",
                "solutionTags": [],
                "code": "select class from courses group by class having count(distinct student) >= 5",
                "codeTag": "Java"
            },
            {
                "id": 3865367,
                "title": "100-easy-fast-clean-solution",
                "content": "IF THIS WILL BE HELPFUL TO YOU, PLEASE UPVOTE !\\n\\n# Code\\n```\\n/* Write your PL/SQL query statement below */\\nSELECT class FROM Courses GROUP BY class HAVING COUNT(class) >= 5\\n\\n```\\n![5kej8w.jpg](https://assets.leetcode.com/users/images/9731784e-37a4-4123-9b28-4b6b3fdde438_1691211290.2432384.jpeg)\\n",
                "solutionTags": [
                    "Oracle",
                    "Database"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nSELECT class FROM Courses GROUP BY class HAVING COUNT(class) >= 5\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3306256,
                "title": "596-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5;\\n\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5;\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1303815,
                "title": "having-count-distinct",
                "content": "The main idea is to use `HAVING` so we don\\'t have to use the Subquery. To handle the Dublicates we can use `DISTINCT` within `COUNT` aggregation function.\\n\\n```\\nSELECT class \\nFROM courses\\nGROUP by class\\nHAVING(COUNT( DISTINCT student)>=5)\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class \\nFROM courses\\nGROUP by class\\nHAVING(COUNT( DISTINCT student)>=5)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3473321,
                "title": "beats-96-52-easy-one-liner-approach-group-by",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nI have used GROUP BY , to group all the studnts of same class having count of student more than 5. \\n\\nIt is very simple approach to solve this question. \\n\\n# Complexity\\n- Time complexity: \\n \\n    Beats 96.52 % \\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n![image.png](https://assets.leetcode.com/users/images/52385908-4b72-419d-bffa-ce85cc08a496_1682938557.1244524.png)\\n\\n\\n# Upvote\\n\\nIf this code helps you please upvote the solution. :) \\n\\n# Code\\n```\\nSELECT class FROM Courses GROUP BY class HAVING count(student) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class FROM Courses GROUP BY class HAVING count(student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3283639,
                "title": "beats-80-mysql",
                "content": "# Please upvote guys! :))))))\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class\\nFROM Courses\\nGROUP BY class \\nHAVING COUNT(student)>=5 \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class\\nFROM Courses\\nGROUP BY class \\nHAVING COUNT(student)>=5 \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2780233,
                "title": "mysql-classes-more-than-5-students",
                "content": "```\\n# Write your MySQL query statement below\\nselect distinct class from Courses\\ngroup by class\\nhaving count(class) > 4;\\n# where count(class) > 4;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect distinct class from Courses\\ngroup by class\\nhaving count(class) > 4;\\n# where count(class) > 4;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 853223,
                "title": "easy-solution-beats-100-less-space-beats-80-runtime",
                "content": "```\\nselect class from courses\\ngroup by class \\nHAVING count(distinct student) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class from courses\\ngroup by class \\nHAVING count(distinct student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 153073,
                "title": "my-first-mysql-solution",
                "content": "```\\nselect class\\nfrom courses\\ngroup by class\\nhaving count( distinct student) > 4;\\n```\\n",
                "solutionTags": [],
                "code": "```\\nselect class\\nfrom courses\\ngroup by class\\nhaving count( distinct student) > 4;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 128777,
                "title": "concise-solution-using-distinct-and-having",
                "content": "The code below selects all classes with the number of distinct students greater or equal to 5, which is exactly what the problem is asking for.\\n\\n```\\nSELECT class \\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5\\n```\\n",
                "solutionTags": [],
                "code": "```\\nSELECT class \\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3966871,
                "title": "pandas-beginner-friendly-solution",
                "content": "**\\uD83D\\uDD3C IF YOU FIND THIS POST HELPFUL PLEASE UPVOTE \\uD83D\\uDC4D**\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    \\n    grouped = courses.groupby([\\'class\\'])[\\'student\\'].count().reset_index()\\n    \\n    result = grouped[grouped[\\'student\\'] >= 5]\\n    \\n    return result[[\\'class\\']]\\n```\\n**Thank you for reading! \\uD83D\\uDE04 Comment if you have any questions or feedback.**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    \\n    grouped = courses.groupby([\\'class\\'])[\\'student\\'].count().reset_index()\\n    \\n    result = grouped[grouped[\\'student\\'] >= 5]\\n    \\n    return result[[\\'class\\']]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3896237,
                "title": "from-subqueries-to-having-and-pandas-detailed",
                "content": "# My SQL\\n\\n## Using Subquery:\\n\\n```sql []\\nSELECT class\\nFROM (\\n    SELECT class, COUNT(student) AS num\\n    FROM courses\\n    GROUP BY class\\n    ) AS temp_table\\nWHERE num >= 5\\n```\\n\\n## Using Having with Group By\\n```sql []\\n# Write your MySQL query statement below\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5\\n```\\n\\n# Pandas\\n\\nWe use the function `size()` to count the number of occurrences for each unique class, which gives us the count of students in each class. We use `reset_index(name=\\'count\\')` to name this column as `count`.\\n\\n## Using Count:\\n`count()` simply counts the rows after doing group by. So, after grouping by class, the count operator will count how many rows are there.\\n\\n``` python3 []\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n  df = courses.groupby(\\'class\\').count().reset_index()\\n  df = df[df[\\'student\\']>=5]\\n  return df[[\\'class\\']]\\n```\\n\\n## Using Size:\\n\\nUsing `size()` creates a new column with header 0. So, we need to name that column by providing `name=\\'count\\'` inside of `reset_index()`.\\n``` python3 []\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n  df = courses.groupby(\\'class\\').size().reset_index(name=\\'count\\')\\n  df = df[df[\\'count\\'] >= 5]\\n  return df[[\\'class\\']]\\n```",
                "solutionTags": [
                    "MySQL",
                    "Pandas"
                ],
                "code": "```sql []\\nSELECT class\\nFROM (\\n    SELECT class, COUNT(student) AS num\\n    FROM courses\\n    GROUP BY class\\n    ) AS temp_table\\nWHERE num >= 5\\n```\n```sql []\\n# Write your MySQL query statement below\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5\\n```\n``` python3 []\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n  df = courses.groupby(\\'class\\').count().reset_index()\\n  df = df[df[\\'student\\']>=5]\\n  return df[[\\'class\\']]\\n```\n``` python3 []\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n  df = courses.groupby(\\'class\\').size().reset_index(name=\\'count\\')\\n  df = df[df[\\'count\\'] >= 5]\\n  return df[[\\'class\\']]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3797155,
                "title": "using-simple-query",
                "content": "\\n\\n# Approach\\nA simple logic just use `group by class` everything else have the basic knowledge and understanding.\\n\\n\\n\\n# Code\\n```\\nSELECT class FROM Courses \\ngroup by class \\nhaving count(Distinct student) >= 5;\\n```\\n![1qivbn.jpg](https://assets.leetcode.com/users/images/a169dbd7-b34d-4a99-8359-a8a813239d9a_1689869293.2703924.jpeg)",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class FROM Courses \\ngroup by class \\nhaving count(Distinct student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3723261,
                "title": "one-line-of-code-easy-to-read",
                "content": "# Upvote if you feel it easy!\\n\\n# Code\\n```\\nselect class from Courses group by class having count(student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class from Courses group by class having count(student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3607282,
                "title": "easy-solution-with-explanation-mysql-pandas-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n- The question asks us to retrieve distinct class that has atleast 5 distinct students in it.\\n- To otain distinct class, we **group the query by class**.\\n- For the class to have atleast 5 distict students, we use **COUNT()** function.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. In the SELECT statement, we retrieve the column **class**.\\n2. In the FROM statement, we write the table name **Courses**.\\n3. The **GROUP BY** clause is used to **obtain all the distinct classes**.\\n4. The HAVING clause filters the classes that have atleast 5 distinct students using **HAVING COUNT(DISTINCT student) >= \\'5\\'** \\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= \\'5\\';\\n```\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    courses = courses[\\'class\\'].value_counts().reset_index()\\n    return courses[courses[\\'count\\'] >= 5][\\'class\\'].to_frame()\\n```\\n### Please upvote if you find my solution helpful.",
                "solutionTags": [
                    "MySQL",
                    "Pandas"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= \\'5\\';\\n```\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    courses = courses[\\'class\\'].value_counts().reset_index()\\n    return courses[courses[\\'count\\'] >= 5][\\'class\\'].to_frame()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3532823,
                "title": "mysql-solution-for-classes-more-than-5-students-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe given SQL query selects the distinct class names from the \"courses\" table where the count of distinct students enrolled in each class is greater than or equal to 5.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. The query starts with the SELECT keyword followed by the column name class.\\n2. It specifies the table name courses.\\n3. The GROUP BY clause is used to group the records by the class column.\\n4. The HAVING clause filters the grouped records based on the condition count(distinct student) >= 5.\\n- count(distinct student) calculates the number of distinct students in each class.\\n- The condition >= 5 ensures that only classes with at least 5 distinct students are included in the result.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of this query depends on the size of the \"courses\" table and the number of distinct classes. It involves grouping the records and performing the count of distinct students for each class. The time complexity is typically determined by the efficiency of the database engine\\'s grouping and aggregation operations. Assuming appropriate indexing is in place, the time complexity is often linear or close to linear in the size of the \"courses\" table.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity of the query depends on the number of distinct classes that satisfy the condition count(distinct student) >= 5. The database engine needs to store the intermediate results of grouping and counting the distinct students. The space complexity is proportional to the number of distinct classes returned in the result set.\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(distinct student) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(distinct student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3483801,
                "title": "using-group-by-beats-96-mysql-query",
                "content": "\\n# Code\\n```\\nselect class FROM Courses GROUP BY class\\nHAVING COUNT(class)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class FROM Courses GROUP BY class\\nHAVING COUNT(class)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2594855,
                "title": "cte-solution-efficient-code",
                "content": "```\\nWITH cte AS (SELECT class, COUNT(class) AS num FROM Courses GROUP BY class)\\nSELECT class \\nFROM cte\\nWHERE num>=5; \\n```",
                "solutionTags": [],
                "code": "```\\nWITH cte AS (SELECT class, COUNT(class) AS num FROM Courses GROUP BY class)\\nSELECT class \\nFROM cte\\nWHERE num>=5; \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2110866,
                "title": "msql-using-order-by-and-group-by",
                "content": "```\\nselect\\n    class \\nfrom\\n    Courses \\ngroup by class\\nhaving count(student) >= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect\\n    class \\nfrom\\n    Courses \\ngroup by class\\nhaving count(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1405415,
                "title": "mysql-using-having",
                "content": "```\\nselect class\\nFROM courses\\nGROUP BY class\\nHaving COUNT(DISTINCT student) >= 5",
                "solutionTags": [],
                "code": "```\\nselect class\\nFROM courses\\nGROUP BY class\\nHaving COUNT(DISTINCT student) >= 5",
                "codeTag": "Java"
            },
            {
                "id": 955924,
                "title": "simple-understandable-solution",
                "content": "```\\nSELECT  e.class from courses e group  by e.class having count(distinct e.student) >=5 ;\\n```",
                "solutionTags": [
                    "MySQL",
                    "Oracle"
                ],
                "code": "```\\nSELECT  e.class from courses e group  by e.class having count(distinct e.student) >=5 ;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4058381,
                "title": "pandas-sql-easy-classes-more-than-5-students-easy",
                "content": "[see the Successfully Accepted Solution](https://leetcode.com/submissions/detail/1052333248/)\\n\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n     # 1) First, we  group courses DataFrame by a column named \\'class\\' and then select a specific column \\'student\\' from each group.\\n    group_class_students = courses.groupby(\\'class\\')[\\'student\\']\\n    \\n    # 2) Then, we count the number of occurrences of students for each unique class.\\n    count_class_students = group_class_students.count()\\n    \\n    # 3) In the next step, a new DataFrame with a default integer-based index (the new index consists of default integer values) is created.\\n    indexed_class = count_class_students.reset_index()\\n    \\n    # 4) Finaly, we filter classes with at least five students\\n    filtered_class = indexed_class[indexed_class[\\'student\\'] >= 5][[\"class\"]]\\n    \\n    return filtered_class\\n```\\n\\n**SQL**\\n\\n[see the Successfully Accepted Solution](https://leetcode.com/submissions/detail/1061649089/)\\n```\\nSELECT class \\nFROM Courses \\nGROUP BY class \\nHAVING COUNT(class) >= 5\\n```\\n\\n```\\n-- Select the \"class\" column from the \"Courses\" table\\nSELECT class \\n\\n-- Specify the source table as \"Courses\" from which data will be retrieved\\nFROM Courses \\n\\n-- Group the results by the \"class\" column, grouping together rows with the same class value\\nGROUP BY class \\n\\n-- Apply a filter condition to the grouped results:\\n-- We are selecting only those groups (classes) where the count of rows in the group is greater than or equal to 5\\nHAVING COUNT(class) >= 5\\n```\\n![image](https://assets.leetcode.com/users/images/b95bb0ea-eae6-4e08-8efe-63f843f460ab_1695222175.9877925.jpeg)\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n     # 1) First, we  group courses DataFrame by a column named \\'class\\' and then select a specific column \\'student\\' from each group.\\n    group_class_students = courses.groupby(\\'class\\')[\\'student\\']\\n    \\n    # 2) Then, we count the number of occurrences of students for each unique class.\\n    count_class_students = group_class_students.count()\\n    \\n    # 3) In the next step, a new DataFrame with a default integer-based index (the new index consists of default integer values) is created.\\n    indexed_class = count_class_students.reset_index()\\n    \\n    # 4) Finaly, we filter classes with at least five students\\n    filtered_class = indexed_class[indexed_class[\\'student\\'] >= 5][[\"class\"]]\\n    \\n    return filtered_class\\n```\n```\\nSELECT class \\nFROM Courses \\nGROUP BY class \\nHAVING COUNT(class) >= 5\\n```\n```\\n-- Select the \"class\" column from the \"Courses\" table\\nSELECT class \\n\\n-- Specify the source table as \"Courses\" from which data will be retrieved\\nFROM Courses \\n\\n-- Group the results by the \"class\" column, grouping together rows with the same class value\\nGROUP BY class \\n\\n-- Apply a filter condition to the grouped results:\\n-- We are selecting only those groups (classes) where the count of rows in the group is greater than or equal to 5\\nHAVING COUNT(class) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4019790,
                "title": "easy-mysql-solution",
                "content": "# **PLEASE UPVOTE MY SOLUTION IG YOU LIKE IT**\\n# **CONNECT WITH ME**\\n# **[https://www.linkedin.com/in/pratay-nandy-9ba57b229/]()**\\n# **[https://www.instagram.com/pratay_nandy/]()**\\n# Approach\\nSQL Query Approach:\\n\\nSelect Statement: Start with the SELECT statement to specify the columns you want in the result. In this case, you want to select the \"class\" column.\\n\\n- SELECT class\\nFrom Clause: Specify the table from which you want to retrieve data. In this case, it\\'s the \"courses\" table.\\n\\n- FROM courses\\nGroup By Clause: Use the GROUP BY clause to group the rows by the \"class\" column. This groups all rows with the same \"class\" value together.\\n\\n- GROUP BY class\\nHaving Clause: The HAVING clause is used to filter the grouped results. It allows you to apply conditions to groups. Here, you want to keep only those groups (i.e., classes) that have at least 5 students. So, you specify COUNT(student) >= 5 in the HAVING clause.\\n\\n\\n- HAVING COUNT(student) >= 5\\nResult: After executing this SQL query, you will get a result set that contains the \"class\" values for classes that meet the specified condition (having at least 5 students).\\n\\nThe result will be a list of class names that satisfy the condition.\\n\\nHere\\'s the complete SQL query:\\n\\n- SELECT class FROM courses GROUP BY class HAVING COUNT(student) >= 5\\n\\nWhen you execute this query, it will return a list of class names where there are at least 5 students enrolled in each class.\\n\\n\\n\\n\\n\\n\\n# Code\\n```\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(student) >= 5\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3945450,
                "title": "pandas-solution-with-groupby-beats-98-by-runtime",
                "content": "# Intuition\\nUse groupby() method.\\n\\n# Approach\\n**Step 1**. Count number of classes\\nWe can group by \"class\" column and get the number of students assigned to each class:\\n\\n```\\ngrouped = courses.groupby(\\'class\\')[\\'student\\'].count().reset_index()\\n```\\n\\n\\n**Step 2**. Select only required class / classes\\n\\nNext we need to select only the rows where number of \\'student\\' is more than 5:\\n\\n```\\ngrouped = grouped[grouped[\\'student\\'] >= 5]\\n```\\n\\n**Step 3**.\\nIn return statement we only need to select one column and wrap it in double square brackets to make it DataFrame class.\\n\\n\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    grouped = courses.groupby(\\'class\\')[\\'student\\'].count().reset_index()\\n    grouped = grouped[grouped[\\'student\\'] >= 5]\\n    return grouped[[\\'class\\']]\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\ngrouped = courses.groupby(\\'class\\')[\\'student\\'].count().reset_index()\\n```\n```\\ngrouped = grouped[grouped[\\'student\\'] >= 5]\\n```\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    grouped = courses.groupby(\\'class\\')[\\'student\\'].count().reset_index()\\n    grouped = grouped[grouped[\\'student\\'] >= 5]\\n    return grouped[[\\'class\\']]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3887462,
                "title": "one-line-mysql-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3852259,
                "title": "2-lines-pandas-solution-beats-96-43",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    df = courses.groupby([\\'class\\']).count().reset_index()\\n    return df[df[\\'student\\'] >= 5][[\\'class\\']]\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    df = courses.groupby([\\'class\\']).count().reset_index()\\n    return df[df[\\'student\\'] >= 5][[\\'class\\']]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3621149,
                "title": "for-beginner-one-line-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(distinct student) >= 5;\\n\\n\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(distinct student) >= 5;\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3539831,
                "title": "easiest-for-beginners",
                "content": "# Code\\n```\\n/* Write your T-SQL query statement below */\\n\\nSELECT class FROM Courses Group by class \\nHAVING count(student) >= 5;\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\n\\nSELECT class FROM Courses Group by class \\nHAVING count(student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3482894,
                "title": "using-group-by",
                "content": "# Code\\n```\\nSELECT class FROM Courses GROUP BY class\\nHAVING COUNT(class) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class FROM Courses GROUP BY class\\nHAVING COUNT(class) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3293626,
                "title": "mysql-solution",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(class) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(class) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2693940,
                "title": "2-new-method-of-solving-the-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nCASE 1\\nselect distinct a.class from courses a\\ninner join (select count(class) num, class from courses group by class) b on a.class = b.class\\nwhere b.num >=5;\\n\\nCASE 2\\nselect class from courses\\ngroup by class\\nhaving count(class) >= 5\\n\\n\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nCASE 1\\nselect distinct a.class from courses a\\ninner join (select count(class) num, class from courses group by class) b on a.class = b.class\\nwhere b.num >=5;\\n\\nCASE 2\\nselect class from courses\\ngroup by class\\nhaving count(class) >= 5\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2427403,
                "title": "a-simple-solution",
                "content": "select class\\nfrom courses\\ngroup by class\\nhaving count(*)>=5",
                "solutionTags": [],
                "code": "select class\\nfrom courses\\ngroup by class\\nhaving count(*)>=5",
                "codeTag": "Java"
            },
            {
                "id": 2416662,
                "title": "very-easy-beginners-group-by-having-count-clause",
                "content": "**Using Having clause**\\n```\\nselect class from courses  group by class having count(*)>=5;\\n```\\nIn place of * , you can use class or student too.\\n\\n**Using sub query**\\n```\\nselect class\\nfrom \\n    (select class, count(distinct student) as num\\n    from courses\\n    group by class) as temp\\nwhere num >= 5;\\n```",
                "solutionTags": [],
                "code": "```\\nselect class from courses  group by class having count(*)>=5;\\n```\n```\\nselect class\\nfrom \\n    (select class, count(distinct student) as num\\n    from courses\\n    group by class) as temp\\nwhere num >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2178045,
                "title": "very-easy-sql-solution-use-distinct",
                "content": "```\\nselect class from Courses \\ngroup by class\\nhaving count(distinct student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class from Courses \\ngroup by class\\nhaving count(distinct student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2138590,
                "title": "mysql-simple-group-by-and-count",
                "content": "```\\nSELECT CLASS\\nFROM COURSES\\nGROUP BY CLASS\\nHAVING COUNT(STUDENT) >= 5\\n```\\nPLEASE **UPVOTE**.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT CLASS\\nFROM COURSES\\nGROUP BY CLASS\\nHAVING COUNT(STUDENT) >= 5\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2105984,
                "title": "faster-than-88-9-submission-solution",
                "content": "```\\nSELECT class FROM courses \\nGROUP BY class\\nHAVING count(student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class FROM courses \\nGROUP BY class\\nHAVING count(student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1872579,
                "title": "classes-more-than-5-students-solution-mysql",
                "content": "select class from courses group by class having count(distinct student) >= 5;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "select class from courses group by class having count(distinct student) >= 5;",
                "codeTag": "Java"
            },
            {
                "id": 1656403,
                "title": "classes-more-than-5-student",
                "content": "MySQl\\n```\\nSELECT\\n    class\\nFROM\\n    courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student)>= 5;\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT\\n    class\\nFROM\\n    courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student)>= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1156433,
                "title": "mysql-group-by-having",
                "content": "```sql\\n# Write your MySQL query statement below\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student) >= 5\\n",
                "solutionTags": [],
                "code": "```sql\\n# Write your MySQL query statement below\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student) >= 5\\n",
                "codeTag": "Java"
            },
            {
                "id": 1109606,
                "title": "mysql-solution-244-ms-faster-than-79-06",
                "content": "select\\n    class as class\\nfrom\\n    (select \\n        class, COUNT(DISTINCT(student)) as nb_student\\n    from\\n        courses\\n    group by\\n        class) as count_table\\nwhere\\n    nb_student >= 5;",
                "solutionTags": [],
                "code": "select\\n    class as class\\nfrom\\n    (select \\n        class, COUNT(DISTINCT(student)) as nb_student\\n    from\\n        courses\\n    group by\\n        class) as count_table\\nwhere\\n    nb_student >= 5;",
                "codeTag": "Java"
            },
            {
                "id": 1075856,
                "title": "simple-mysql-solution-faster-than-99-28",
                "content": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student)>=5;",
                "solutionTags": [],
                "code": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student)>=5;",
                "codeTag": "Java"
            },
            {
                "id": 222380,
                "title": "simple-query-mysql",
                "content": "select class from courses group by (class) \\nhaving count (distinct( student) ) >=5;",
                "solutionTags": [],
                "code": "select class from courses group by (class) \\nhaving count (distinct( student) ) >=5;",
                "codeTag": "Java"
            },
            {
                "id": 3973113,
                "title": "pandas-using-value-counts",
                "content": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    cnt = courses[\"class\"].value_counts().to_frame()\\n    return cnt[cnt[\"count\"] >= 5].reset_index()[\"class\"].to_frame()\\n```",
                "solutionTags": [],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    cnt = courses[\"class\"].value_counts().to_frame()\\n    return cnt[cnt[\"count\"] >= 5].reset_index()[\"class\"].to_frame()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3889857,
                "title": "simple-subquerry-helps",
                "content": "\\n\\n# Code\\n```\\nWITH HELP AS (\\n    SELECT class, COUNT(class) c FROM Courses GROUP BY 1\\n)\\n\\nSELECT\\n    HELP.class\\nFROM\\n    HELP\\nWHERE\\n    HELP.c>=5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nWITH HELP AS (\\n    SELECT class, COUNT(class) c FROM Courses GROUP BY 1\\n)\\n\\nSELECT\\n    HELP.class\\nFROM\\n    HELP\\nWHERE\\n    HELP.c>=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3830914,
                "title": "classes-more-than-five-students",
                "content": "# Intuition\\n<i>When forty winters shall besiege thy brow,\\nAnd dig deep trenches in thy beauty\\u2019s field,\\nThy youth\\u2019s proud livery, so gazed on now,\\nWill be a tatter\\u2019d weed, of small worth held:\\nThen being ask\\u2019d where all thy beauty lies,\\nWhere all the treasure of thy lusty days,\\nTo say, within thine own deep-sunken eyes,\\nWere an all-eating shame and thriftless praise.\\nHow much more praise deserved thy beauty\\u2019s use,\\nIf thou couldst answer \\u2018This fair child of mine\\nShall sum my count and make my old excuse,\\u2019\\nProving his beauty by succession thine!\\nThis were to be new made when thou art old,\\nAnd see thy blood warm when thou feel\\u2019st it cold.</I>\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(student) >=5;\\n```",
                "solutionTags": [
                    "MySQL",
                    "Brainteaser"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(student) >=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3547979,
                "title": "easy-sql-code-group-by-and-having-clause-concept-used",
                "content": "# Intuition\\nSimply **GROUP BY** clause along with **HAVING** clause is used.\\n\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class FROM Courses GROUP BY class HAVING COUNT(class)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class FROM Courses GROUP BY class HAVING COUNT(class)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3355335,
                "title": "mysql-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(*)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(*)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2594137,
                "title": "the-simplest-solution",
                "content": "select class\\nfrom Courses\\ngroup by class\\nhaving count(*) >= 5",
                "solutionTags": [],
                "code": "select class\\nfrom Courses\\ngroup by class\\nhaving count(*) >= 5",
                "codeTag": "Java"
            },
            {
                "id": 2561683,
                "title": "my-sql-solution-group-by",
                "content": "```\\nselect class from Courses group by class having count(student)>4;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class from Courses group by class having count(student)>4;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2524405,
                "title": "mysql-one-line-simple-solution",
                "content": "```\\nselect class from courses group by class having count(student) >= 5\\n```",
                "solutionTags": [],
                "code": "```\\nselect class from courses group by class having count(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2442246,
                "title": "two-methods",
                "content": "# Method 1 Using \"HAVING\" Clause\\nSELECT class FROM Courses GROUP BY class HAVING COUNT(student) > 4;\\n\\n\\n# Method 2 Using Window Function\\nSELECT DISTINCT(class) FROM \\n(SELECT class, COUNT(student) OVER (PARTITION BY class) AS cc FROM Courses) c\\nWHERE cc > 4;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "# Method 1 Using \"HAVING\" Clause\\nSELECT class FROM Courses GROUP BY class HAVING COUNT(student) > 4;\\n\\n\\n# Method 2 Using Window Function\\nSELECT DISTINCT(class) FROM \\n(SELECT class, COUNT(student) OVER (PARTITION BY class) AS cc FROM Courses) c\\nWHERE cc > 4;",
                "codeTag": "Java"
            },
            {
                "id": 2383657,
                "title": "simple-solution-using-group-by-and-having",
                "content": "```\\nSELECT class FROM Courses GROUP BY class HAVING COUNT(student) >= 5\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class FROM Courses GROUP BY class HAVING COUNT(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2373912,
                "title": "easy-mysql-solution-with-and-without-distinct",
                "content": "So the problem states that we need to report all the classes that have **at least five students**.\\n\\nThus I have used the **GROUP BY** & **HAVING** clause to solve this query.\\n\\n```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student)>=5;\\n```\\n\\nYou can also use the **DISTINCT** method.\\n```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student)>=5;\\n```\n```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2334148,
                "title": "mysql-solution-easy-to-understand",
                "content": "```\\nSELECT\\n    class\\nFROM\\n    Courses\\nGROUP BY\\n    class\\nHAVING\\n    COUNT(*) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT\\n    class\\nFROM\\n    Courses\\nGROUP BY\\n    class\\nHAVING\\n    COUNT(*) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2299333,
                "title": "simplest-oracle-solution",
                "content": "```\\nselect class\\n from Courses \\n group by class\\n having count(*) >=5\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\nselect class\\n from Courses \\n group by class\\n having count(*) >=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2256826,
                "title": "simple-query-using-group-by-having-and-count",
                "content": "\\tselect class from courses  \\n\\tgroup by class having count(class) >4",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "\\tselect class from courses  \\n\\tgroup by class having count(class) >4",
                "codeTag": "Java"
            },
            {
                "id": 2240540,
                "title": "oracle-memory-100",
                "content": "```\\nSELECT class FROM courses GROUP BY class HAVING count(class) > 4;\\nUNION\\nSELECT class FROM courses GROUP BY class HAVING count(class) > 4;",
                "solutionTags": [],
                "code": "```\\nSELECT class FROM courses GROUP BY class HAVING count(class) > 4;\\nUNION\\nSELECT class FROM courses GROUP BY class HAVING count(class) > 4;",
                "codeTag": "Java"
            },
            {
                "id": 2099030,
                "title": "tsql-statement-group-by-having",
                "content": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(1) >=5\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(1) >=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2095469,
                "title": "accepted-solution-for-mysql-clean-simple-code",
                "content": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2090558,
                "title": "simple-solution-using-group-by-having",
                "content": "```\\nSELECT CLASS\\nFROM COURSES\\nGROUP BY CLASS\\nHAVING COUNT(STUDENT)>4;\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT CLASS\\nFROM COURSES\\nGROUP BY CLASS\\nHAVING COUNT(STUDENT)>4;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2032509,
                "title": "simple-solution-using-group-by-and-having-clause",
                "content": "SELECT class FROM Courses\\nGROUP BY CLASS\\nHAVING COUNT(class)>=5",
                "solutionTags": [],
                "code": "SELECT class FROM Courses\\nGROUP BY CLASS\\nHAVING COUNT(class)>=5",
                "codeTag": "Java"
            },
            {
                "id": 2006472,
                "title": "mysql-using-group-by-and-having",
                "content": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(*) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(*) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1993188,
                "title": "mysql-super-easy-solution",
                "content": "```\\nselect class from \\ncourses\\ngroup by class\\nhaving count(*) >=5```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class from \\ncourses\\ngroup by class\\nhaving count(*) >=5```",
                "codeTag": "Java"
            },
            {
                "id": 1972429,
                "title": "group-by-and-having",
                "content": "```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(student)>=5\\n```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(student)>=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1924434,
                "title": "mysql-solution-90-faster-solution",
                "content": "```\\nwith p as (select class, count(student) c from Courses\\ngroup by class)\\nselect class from p where c >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nwith p as (select class, count(student) c from Courses\\ngroup by class)\\nselect class from p where c >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1903326,
                "title": "sql-server-simple-and-100",
                "content": "```\\nselect\\n  class\\nfrom\\n  Courses\\ngroup by\\n  class\\nhaving \\n  count(student) >= 5\\n```",
                "solutionTags": [],
                "code": "```\\nselect\\n  class\\nfrom\\n  Courses\\ngroup by\\n  class\\nhaving \\n  count(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1418774,
                "title": "subquery",
                "content": "```\\nselect class from \\n(select distinct student, class from courses) t\\ngroup by class\\nhaving count(class)>=5",
                "solutionTags": [],
                "code": "```\\nselect class from \\n(select distinct student, class from courses) t\\ngroup by class\\nhaving count(class)>=5",
                "codeTag": "Java"
            },
            {
                "id": 1416774,
                "title": "mysql",
                "content": "```\\nselect class from courses group by class having count(distinct student)>4;\\n```",
                "solutionTags": [],
                "code": "```\\nselect class from courses group by class having count(distinct student)>4;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1398754,
                "title": "mysql",
                "content": "SELECT class\\nFROM courses\\ngroup by class HAVING COUNT(DISTINCT student)>=5;",
                "solutionTags": [],
                "code": "SELECT class\\nFROM courses\\ngroup by class HAVING COUNT(DISTINCT student)>=5;",
                "codeTag": "Java"
            },
            {
                "id": 1370605,
                "title": "simple",
                "content": "select class from courses group by(class) having count(distinct student)>=5",
                "solutionTags": [],
                "code": "select class from courses group by(class) having count(distinct student)>=5",
                "codeTag": "Java"
            },
            {
                "id": 1363113,
                "title": "using-group-by-having-sql-server",
                "content": "```\\nSELECT DISTINCT CLASS\\nFROM \\n    COURSES\\nGROUP BY \\n    CLASS\\nHAVING  COUNT(DISTINCT STUDENT)>=5",
                "solutionTags": [],
                "code": "```\\nSELECT DISTINCT CLASS\\nFROM \\n    COURSES\\nGROUP BY \\n    CLASS\\nHAVING  COUNT(DISTINCT STUDENT)>=5",
                "codeTag": "Unknown"
            },
            {
                "id": 1351686,
                "title": "sql-101-you-cant-believe-how-simple-it-is",
                "content": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >=5\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1325855,
                "title": "mysql",
                "content": "```\\nSELECT\\n    class\\nFROM\\n    courses\\nGROUP BY\\n    class\\nHAVING\\n    COUNT(DISTINCT student) >= 5;\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT\\n    class\\nFROM\\n    courses\\nGROUP BY\\n    class\\nHAVING\\n    COUNT(DISTINCT student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1175928,
                "title": "use-of-having",
                "content": "```\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5\\n```",
                "solutionTags": [],
                "code": "```\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1115876,
                "title": "simple-and-fast-solution",
                "content": "Select class FROM courses\\nGROUP BY class\\nHaving count( DISTINCT student)>=5",
                "solutionTags": [],
                "code": "Select class FROM courses\\nGROUP BY class\\nHaving count( DISTINCT student)>=5",
                "codeTag": "Java"
            },
            {
                "id": 1105921,
                "title": "oracle-solution-99-84-faster",
                "content": "```\\n\\nselect class from courses  group by class having count(Distinct(student)) >= 5; \\n````",
                "solutionTags": [],
                "code": "```\\n\\nselect class from courses  group by class having count(Distinct(student)) >= 5; \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1069811,
                "title": "very-easy",
                "content": "```\\n# Write your MySQL query statement below\\n\\nselect class from courses group by class having count(distinct student)>=5 \\n",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\n\\nselect class from courses group by class having count(distinct student)>=5 \\n",
                "codeTag": "Java"
            },
            {
                "id": 1061577,
                "title": "mysql-count-distinct",
                "content": "SELECT class\\nFROM courses\\ngroup by class\\nhaving count(distinct student) >= 5",
                "solutionTags": [],
                "code": "SELECT class\\nFROM courses\\ngroup by class\\nhaving count(distinct student) >= 5",
                "codeTag": "Java"
            },
            {
                "id": 1051977,
                "title": "mysql-simple",
                "content": "```\\n \\nSELECT class\\nFROM courses \\nGROUP BY  class\\nHAVING  COUNT(DISTINCT  student) >=5;\\n```",
                "solutionTags": [],
                "code": "```\\n \\nSELECT class\\nFROM courses \\nGROUP BY  class\\nHAVING  COUNT(DISTINCT  student) >=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1026520,
                "title": "mysql-count-distinct",
                "content": "```\\n# Write your MySQL query statement below\\nSELECT\\n    tab.class \\nFROM\\n    (SELECT\\n        class,\\n        COUNT(DISTINCT student) AS cnt\\n    FROM \\n        courses\\n    GROUP BY \\n        class) AS tab\\nWHERE\\n    tab.cnt > 4\\n```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT\\n    tab.class \\nFROM\\n    (SELECT\\n        class,\\n        COUNT(DISTINCT student) AS cnt\\n    FROM \\n        courses\\n    GROUP BY \\n        class) AS tab\\nWHERE\\n    tab.cnt > 4\\n```",
                "codeTag": "Java"
            },
            {
                "id": 941352,
                "title": "simple-easy-solution-by-mysql",
                "content": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 896433,
                "title": "mysql-sol-group-by-having",
                "content": "```\\nSELECT class\\nFROM  courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student))>=5\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class\\nFROM  courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student))>=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 800322,
                "title": "crazy-simple-sql",
                "content": "```\\nSELECT class from courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5;\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class from courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 793590,
                "title": "sql-server-faster-than-61",
                "content": "SELECT \\nclass \\nFROM courses \\nGROUP BY class \\nHAVING COUNT(DISTINCT student)>4",
                "solutionTags": [],
                "code": "SELECT \\nclass \\nFROM courses \\nGROUP BY class \\nHAVING COUNT(DISTINCT student)>4",
                "codeTag": "Java"
            },
            {
                "id": 722397,
                "title": "easy-solution-with-using-any-function",
                "content": "``` \\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct(student))>=5;\\n\\n```",
                "solutionTags": [],
                "code": "``` \\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct(student))>=5;\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 659739,
                "title": "sql-server-sub-query-solution",
                "content": "select class \\nfrom \\n(select class, count(student) as counter\\nfrom courses\\ngroup by class \\nhaving count(student)>=5)as temp_table;",
                "solutionTags": [],
                "code": "select class \\nfrom \\n(select class, count(student) as counter\\nfrom courses\\ngroup by class \\nhaving count(student)>=5)as temp_table;",
                "codeTag": "Java"
            },
            {
                "id": 455693,
                "title": "simple-question-but-wrong-contradicting-test-case",
                "content": "```select class from courses  group by class having count(1) >= 5```\\n\\nThere are wrong contradicting test cases upon submission \\n1. expects count to be >= 5\\n{\"headers\": {\"courses\": [\"student\", \"class\"]}, \"rows\": {\"courses\": [[\"A\", \"Math\"], [\"B\", \"English\"], [\"C\", \"Math\"], [\"D\", \"Biology\"], [\"E\", \"Math\"], [\"F\", \"Math\"], [\"G\", \"Math\"]]}}\\n{\"headers\":[\"class\"],\"values\":[[\"Math\"]]}\\n\\n1. expects count to be > 5\\n{\"headers\": {\"courses\": [\"student\", \"class\"]}, \"rows\": {\"courses\": [[\"A\", \"Math\"], [\"B\", \"English\"], [\"C\", \"Math\"], [\"D\", \"Biology\"], [\"E\", \"Math\"], [\"F\", \"Math\"], [\"A\", \"Math\"]]}}\\n{\"headers\": [\"class\"], \"values\": []}",
                "solutionTags": [],
                "code": "```select class from courses  group by class having count(1) >= 5```",
                "codeTag": "Java"
            },
            {
                "id": 418646,
                "title": "2-solutions-in-mysql-easy-understanding-using-group-by",
                "content": "1. three select with different function (remove duplicate, count group by students number, select class)\\n\\n```\\nselect class from (\\n    select d.class, count(d.class) as cnt from (\\n        select distinct * from courses  # merge the duplicate data\\n    ) as d\\n    group by class  # count distinct class\\n) as a\\nwhere a.cnt >= 5  # student >= 5 people\\n```\\n\\n\\n2. concise and simple solution with having count() function\\n\\n```\\nselect class from courses\\ngroup by class having count(distinct student)>=5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class from (\\n    select d.class, count(d.class) as cnt from (\\n        select distinct * from courses  # merge the duplicate data\\n    ) as d\\n    group by class  # count distinct class\\n) as a\\nwhere a.cnt >= 5  # student >= 5 people\\n```\n```\\nselect class from courses\\ngroup by class having count(distinct student)>=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 370408,
                "title": "ms-sql-server-solution",
                "content": "```\\nSELECT class \\nFROM courses \\nGROUP BY class\\nHAVING Count(distinct(student)) >= 5 \\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class \\nFROM courses \\nGROUP BY class\\nHAVING Count(distinct(student)) >= 5 \\n```",
                "codeTag": "Java"
            },
            {
                "id": 365985,
                "title": "elegant-mysql-solution",
                "content": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5;\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 359762,
                "title": "don-t-forget-distinct",
                "content": "```\\nSelect C.class \\nfrom (select count(distinct student) as N , class\\n      from courses \\n       group by class \\n       having N >=5 ) as C\\n```",
                "solutionTags": [],
                "code": "```\\nSelect C.class \\nfrom (select count(distinct student) as N , class\\n      from courses \\n       group by class \\n       having N >=5 ) as C\\n```",
                "codeTag": "Java"
            },
            {
                "id": 313049,
                "title": "simple-solution-mysql",
                "content": "select class from courses group by class having count(distinct student) > 4",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "select class from courses group by class having count(distinct student) > 4",
                "codeTag": "Java"
            },
            {
                "id": 311732,
                "title": "simple-solution-ms-sql",
                "content": "```\\n/* Write your T-SQL query statement below */\\nSELECT class from courses\\ngroup by class\\nhaving count(distinct student) >= 5\\n```",
                "solutionTags": [],
                "code": "```\\n/* Write your T-SQL query statement below */\\nSELECT class from courses\\ngroup by class\\nhaving count(distinct student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 254597,
                "title": "sql-server-beats-100",
                "content": "Question has only one trick: We must check duplicate student names with DISTINCT\\n```\\nSELECT class\\nFROM (SELECT DISTINCT student, class FROM courses) as tbl\\nGROUP BY class\\nHAVING COUNT(class) >= 5",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "Question has only one trick: We must check duplicate student names with DISTINCT\\n```\\nSELECT class\\nFROM (SELECT DISTINCT student, class FROM courses) as tbl\\nGROUP BY class\\nHAVING COUNT(class) >= 5",
                "codeTag": "Java"
            },
            {
                "id": 103574,
                "title": "general-solution",
                "content": "The key of this problem is the student key is not primary, so the table may have two identical rows. \\nUsing `DISTINCT` would solve this problem.\\n```\\nSELECT class\\nFROM (\\nSELECT DISTINCT student, class\\nFROM courses\\n) AS C\\nGROUP BY class\\nHAVING COUNT(*) >=5\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT class\\nFROM (\\nSELECT DISTINCT student, class\\nFROM courses\\n) AS C\\nGROUP BY class\\nHAVING COUNT(*) >=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4103499,
                "title": "group-by-having-count",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\n\\nselect class from Courses c\\ngroup by class having count(distinct student) > 4;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n\\nselect class from Courses c\\ngroup by class having count(distinct student) > 4;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4102243,
                "title": "simple-easy-solution-group-by-having-clause",
                "content": "\\n# Approach\\n- The *GROUP BY* statement groups rows that have the same values into summary rows\\n- The GROUP BY statement is often used with aggregate functions (COUNT(), MAX(), MIN(), SUM(), AVG()) to group the result-set by one or more columns.\\n- The *HAVING clause* was added to SQL because the WHERE keyword cannot be used with aggregate functions.\\n\\n# Complexity\\n- Runtime :: 551ms\\nBeats 84.02% of users with MySQL\\n- Memory :: 0.00MB\\nBeats 100.00% of users with MySQL\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class \\nfrom Courses \\ngroup by class \\nhaving count(student)>= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class \\nfrom Courses \\ngroup by class \\nhaving count(student)>= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4102100,
                "title": "using-cte-and-group-by",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nwith ct as (select class,count(student) as cnt\\nfrom Courses\\ngroup by class)\\nselect class from ct where cnt>=5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nwith ct as (select class,count(student) as cnt\\nfrom Courses\\ngroup by class)\\nselect class from ct where cnt>=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4101483,
                "title": "group-by-having-simple",
                "content": "\\nselect class from Courses group by class having  count(student) >=5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "\\nselect class from Courses group by class having  count(student) >=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4101043,
                "title": "easy-peasy-solutions",
                "content": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(class) > 4;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class\\nFROM courses\\nGROUP BY class\\nHAVING COUNT(class) > 4;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4100170,
                "title": "using-cte",
                "content": "Using CTE\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nWITH CTE AS (\\n    SELECT class, COUNT(student) AS cnt\\n    FROM Courses\\n    GROUP BY class\\n)\\n\\nSELECT class\\nFROM CTE\\nWHERE cnt >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nWITH CTE AS (\\n    SELECT class, COUNT(student) AS cnt\\n    FROM Courses\\n    GROUP BY class\\n)\\n\\nSELECT class\\nFROM CTE\\nWHERE cnt >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4098621,
                "title": "easy-use-of-having-mysql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(class)>=5 \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from courses group by class having count(class)>=5 \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4098068,
                "title": "sql-mysql-postgresql-database",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class FROM Courses GROUP BY class HAVING count(student) >=5; \\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server",
                    "Database",
                    "Data Stream"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class FROM Courses GROUP BY class HAVING count(student) >=5; \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4097931,
                "title": "pandas",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWhen looking at the example, I believe that the student column is extra information. I would just count the frequency of each class. \\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nI would use the value_counts function and from there, just filter the dataframe\\n\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    df = courses.value_counts(subset = \\'class\\').reset_index()\\n    df = df[df[\\'count\\']>=5]\\n    return df[[\\'class\\']]\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    df = courses.value_counts(subset = \\'class\\').reset_index()\\n    df = df[df[\\'count\\']>=5]\\n    return df[[\\'class\\']]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4097902,
                "title": "596-classes-more-than-5-students-runtime-497-ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT DISTINCT class\\nFROM Courses\\nWHERE class IN (\\n  SELECT class\\n  FROM Courses\\n  GROUP BY class\\n  HAVING COUNT(DISTINCT student) >= 5\\n);\\n\\n\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT DISTINCT class\\nFROM Courses\\nWHERE class IN (\\n  SELECT class\\n  FROM Courses\\n  GROUP BY class\\n  HAVING COUNT(DISTINCT student) >= 5\\n);\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4096301,
                "title": "596-classes-more-than-5-students",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class \\nFROM (\\nSELECT DISTINCT class, COUNT(student) over (PARTITION BY class) AS count_col\\nFROM Courses ) AS alias\\nWHERE count_col >= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class \\nFROM (\\nSELECT DISTINCT class, COUNT(student) over (PARTITION BY class) AS count_col\\nFROM Courses ) AS alias\\nWHERE count_col >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4094180,
                "title": "simple-use-of-having",
                "content": "Simple use of ```having```\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```having```\n```\\n# Write your MySQL query statement below\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4093644,
                "title": "an-optimized-mysql-solution-beats-50-in-runtime-beats-100-at-memory",
                "content": "# Intuition\\nAn optimized apporach to solve the problem using MYSQL.\\nI have used just a having clause and count variable for counting the frequency of elements of the table class.\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class \\nfrom Courses  \\ngroup by class having count(class)>=5; \\n\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class \\nfrom Courses  \\ngroup by class having count(class)>=5; \\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4093053,
                "title": "simple-solution-using-having",
                "content": "# Explanation\\nVery simple, select the class from courses and group by class. Then using a having clause to only get the classes whose student count is greater than or equal to 5. **Like if this was useful!!!**\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4091730,
                "title": "sql-simple-solution",
                "content": "# Code\\n\\n```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING count(student) >= 5\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING count(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4089815,
                "title": "code-faster-than-usain-bolt",
                "content": "\\n\\n# Code\\n```\\nselect class from (\\nselect class,count(class) cnt from courses\\ngroup by class\\nhaving cnt>=5) q\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class from (\\nselect class,count(class) cnt from courses\\ngroup by class\\nhaving cnt>=5) q\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4089530,
                "title": "simple-sql-query-with-having-clause",
                "content": "# Code\\n```\\nselect class\\nfrom Courses\\nGROUP BY class\\nHAVING count(class) >= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class\\nfrom Courses\\nGROUP BY class\\nHAVING count(class) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4088284,
                "title": "mssql-and-mysql-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nSelect from subquery. For MySQL This approach works faster then solution which use having. But On MSSQL having works faster\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n# Code\\n```\\n# Fastest time response\\nSELECT class\\nFROM (\\nSELECT COUNT(student) AS cnt, class\\nFROM Courses\\nGROUP BY class) AS c\\nWHERE c.cnt >=5\\n\\n# Another way to solve this problem\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5\\n```\\n\\n",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\n# Fastest time response\\nSELECT class\\nFROM (\\nSELECT COUNT(student) AS cnt, class\\nFROM Courses\\nGROUP BY class) AS c\\nWHERE c.cnt >=5\\n\\n# Another way to solve this problem\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4086884,
                "title": "my-sql-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4086339,
                "title": "simple-straightforward-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4079482,
                "title": "simple-solution-easy-understanding",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your PL/SQL query statement below */\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(student)>=5\\n```",
                "solutionTags": [
                    "Oracle",
                    "Database"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(student)>=5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4076531,
                "title": "runtime-beats-95-88-and-memory-beats-100-00-of-users-with-oracle",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your PL/SQL query statement below */\\nSELECT distinct c.class class\\nFROM (SELECT \\nclass, count(class) over(partition by class) cnt\\nFROM courses) c where c.cnt>=5;\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nSELECT distinct c.class class\\nFROM (SELECT \\nclass, count(class) over(partition by class) cnt\\nFROM courses) c where c.cnt>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4073869,
                "title": "beats-89-11-of-users-with-mysql",
                "content": "\\n```\\nSELECT class \\nFROM Courses \\nGROUP BY class \\nHAVING COUNT(student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT class \\nFROM Courses \\nGROUP BY class \\nHAVING COUNT(student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4072603,
                "title": "one-liner-group-by-having-clause-all-test-passed",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4071368,
                "title": "simple-group-by-count",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(class) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(class) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4069969,
                "title": "easy-sql-q5",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSelect class from Courses group by class having count(student)>=5\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSelect class from Courses group by class having count(student)>=5\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4066439,
                "title": "pandas-one-line-to-solve",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    result = courses.groupby(\\'class\\')[\\'student\\'].count().reset_index()\\n    return result[result[\\'student\\'] >= 5][[\\'class\\']]\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    result = courses.groupby(\\'class\\')[\\'student\\'].count().reset_index()\\n    return result[result[\\'student\\'] >= 5][[\\'class\\']]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4065585,
                "title": "using-having-clauses-easy",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\n\\nselect class from Courses group by class having count(class) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n\\nselect class from Courses group by class having count(class) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4063734,
                "title": "best-solution-in-mysql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from Courses\\ngroup by class\\nhaving count(student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from Courses\\ngroup by class\\nhaving count(student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4063547,
                "title": "easy-python-solution",
                "content": "# Intuition\\nGet the number of student for each class\\n\\n# Approach\\ngroup by the class column and get the size()\\n\\nThen filter out the row where count >=5\\n\\nDrop the count column \\n\\nReturn the dataframe\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    result = courses.groupby(\"class\").size().to_frame(\"count\").reset_index()\\n    result = result.loc[result[\"count\"] >= 5]\\n    result = result.drop(\"count\",axis=1)\\n    return result\\n    \\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    result = courses.groupby(\"class\").size().to_frame(\"count\").reset_index()\\n    result = result.loc[result[\"count\"] >= 5]\\n    result = result.drop(\"count\",axis=1)\\n    return result\\n    \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4062231,
                "title": "group-by-and-having-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from Courses\\ngroup by class\\nhaving count(*) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from Courses\\ngroup by class\\nhaving count(*) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4061843,
                "title": "solution-2",
                "content": "# Intuition\\nMy initial thoughts on solving this problem would be to use SQL to query the database and retrieve the required information. Specifically, I would use a SELECT statement with appropriate filtering and grouping clauses to extract the desired data from the \"Courses\" table.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nTime complexity: This query has a time complexity of O(n), where n is the number of rows in the \"Courses\" table. It involves grouping the rows by the \"class\" column and counting the students in each class, which is a linear operation in terms of the number of rows.\\n- Space complexity:\\nThe space complexity is also O(n) because the query involves processing the entire table and grouping the classes, which doesn\\'t require additional memory proportional to the input size.\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4060675,
                "title": "easy-solution-with-explaination",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nSo the problem simply we have to get the class that have >= 5 students\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWhat we have to do is:\\n1. We need to get the class, count(class) and we have to GROUP BY the class name and HAVING the count(class) >= 5\\n2. After that, we can just add an alias to the SELECT query that we have create (Just assume that the alias is our new table)\\n3. Then from the new table that we have created in ``point 2``, we can simply select class from the new table.\\n\\nHere is the code:\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class FROM (SELECT class, count(class) as num_students FROM Courses GROUP BY class HAVING num_students >=5) as class\\n\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class FROM (SELECT class, count(class) as num_students FROM Courses GROUP BY class HAVING num_students >=5) as class\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4059650,
                "title": "easy-solution-using-group-by",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(student)>=5;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(student)>=5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4059000,
                "title": "using-gruop-by-and-having",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nSELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4058857,
                "title": "try-it-may-by-help-to-you",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect class \\nfrom courses\\ngroup by class\\nhaving count(student) >= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect class \\nfrom courses\\ngroup by class\\nhaving count(student) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4053231,
                "title": "single-line-intuition-solution",
                "content": "# Intuition\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(student) >= 5\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "# Intuition\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n\\n# Write your MySQL query statement below\\nselect class from Courses group by class having count(student) >= 5\\n",
                "codeTag": "Java"
            },
            {
                "id": 4051636,
                "title": "classes-more-than-5-students",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nselect class from Courses group by class having count(class) >=5\\n\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\nselect class from Courses group by class having count(class) >=5\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4051412,
                "title": "596-classes-more-than-5-students",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n\\n    df = courses.groupby(\\'class\\', as_index = False).count()\\n\\n    df = df[df[\\'student\\'] >= 5]\\n\\n    return df[[\\'class\\']]\\n\\n\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n\\n    df = courses.groupby(\\'class\\', as_index = False).count()\\n\\n    df = df[df[\\'student\\'] >= 5]\\n\\n    return df[[\\'class\\']]\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4051130,
                "title": "sql-advance-alternate-sol-beats-90-window-fun-count-distinct",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nwith base as (\\n    select \\n        class, \\n        count(student) over (partition by class) as student_count\\n    from Courses\\n)\\n\\nselect distinct class\\nfrom base\\nwhere student_count>=5\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nwith base as (\\n    select \\n        class, \\n        count(student) over (partition by class) as student_count\\n    from Courses\\n)\\n\\nselect distinct class\\nfrom base\\nwhere student_count>=5\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4046464,
                "title": "easy-and-beats-95-of-mysql-users",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect  class from courses group by class having count(class) >= 5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect  class from courses group by class having count(class) >= 5\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4045957,
                "title": "one-line-code-in-both-pandas-and-sql-and-3-ways-of-writing-sql-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n```python []\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    return courses.groupby(\"class\").count().reset_index()[courses.groupby(\"class\").count().reset_index()[\"student\"]>=5][[\"class\"]]\\n```\\n```MySQL []\\n# select class from (select class,count(student) as cnt from courses group by class) as new where new.cnt>=5\\n# --------------\\n# select class from(\\n# select class,count(student) as std from courses\\n# group by class\\n# having std>=5) as new\\n# --------------\\nselect class from courses\\ngroup by class\\nhaving count(student)>=5\\n```\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n\\n```",
                "solutionTags": [
                    "Python3",
                    "MySQL"
                ],
                "code": "```python []\\nimport pandas as pd\\n\\ndef find_classes(courses: pd.DataFrame) -> pd.DataFrame:\\n    return courses.groupby(\"class\").count().reset_index()[courses.groupby(\"class\").count().reset_index()[\"student\"]>=5][[\"class\"]]\\n```\n```MySQL []\\n# select class from (select class,count(student) as cnt from courses group by class) as new where new.cnt>=5\\n# --------------\\n# select class from(\\n# select class,count(student) as std from courses\\n# group by class\\n# having std>=5) as new\\n# --------------\\nselect class from courses\\ngroup by class\\nhaving count(student)>=5\\n```\n```\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4045786,
                "title": "subquery-mysql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT class \\nFROM\\n(SELECT class, COUNT(student) as cnt FROM Courses GROUP BY class) s\\nWHERE s.cnt>=5\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT class \\nFROM\\n(SELECT class, COUNT(student) as cnt FROM Courses GROUP BY class) s\\nWHERE s.cnt>=5\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1565349,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1564846,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1567018,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1576144,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1574487,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1576969,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1566834,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1570310,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1575581,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1696488,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1565349,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1564846,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1567018,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1576144,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1574487,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1576969,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1566834,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1570310,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1575581,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1696488,
                "content": [
                    {
                        "username": "1105349291",
                        "content": "In fact, this is a \"no primary key\" table ,so it is possible to have same line like \\u201cA - math\\u201d \\u201cA - math\\u201d;\\nand in this case, you query should count 1 instead of 2.\\nhere is my query:\\n\\nselect class\\nfrom courses\\ngroup by class\\nhaving count(distinct student)>=5;"
                    },
                    {
                        "username": "jamedeo",
                        "content": "Distinct is not needed in this example.  There are no duplicates within the table.  Also in real life scenarios students do not take classes more than once *within the same semester*.  They do not start their day with math and end their day with math.  If you need distinct in this scenario then the database is not properly designed."
                    },
                    {
                        "username": "gjiehs",
                        "content": "I think there could be something wrong with the testcase. The testcase is showing null.\\n\\n![image](https://assets.leetcode.com/users/images/b8d1513e-293b-4c95-bd9a-07112a34cfaf_1612661222.09667.png)\\n"
                    },
                    {
                        "username": "SamRod33",
                        "content": "There are only 4 students taking Math, not 5. Students A, C, E, F. A is repeated twice..."
                    },
                    {
                        "username": "pratyush1889",
                        "content": "\\'\\'\\'\\'\\'\\n\\nselect class\\nfrom Courses\\ngroup by class\\nhaving count(student) >= 5\\n\\n\\'\\'\\'\\'\\'\\'\\'\\'"
                    },
                    {
                        "username": "frederikmuller",
                        "content": "\\nI started a series on YouTube where I give free video explanations to all LeetCode SQL problems. Here\\'s the video for this problem:\\n[https://youtu.be/bJOXJaV0QB0](https://youtu.be/bJOXJaV0QB0)\\n\\nI cleared technical interviews at Spotify, Facebook, Apple, PlayStation and others. I\\u2019m also leading technical interviews for my own company and learned a lot from being on the other side of an interview. Therefore I focus on teaching both the correct way of finding and explaining a solution to a technical problem in my tutorials. I\\u2019m planning to go through all database problems on LeetCode so make sure to subscribe if you want assistance on your journey to mastering the SQL interview."
                    },
                    {
                        "username": "kshitij_thakre",
                        "content": "# Write your MySQL query statement below\\nselect class\\nfrom Courses \\ngroup by class\\nhaving count(class)>4;"
                    },
                    {
                        "username": "jbcs",
                        "content": "For test case like:\\n\\nstudent  class\\nA            Math\\nA            Math\\n"
                    },
                    {
                        "username": "Ruofan_Zang",
                        "content": "This may be a stupid question, but...\\n\\nI think in the original table, it should not exist the situation that one class has duplicated student\\'s name. Why a student\\'s name can appear twice in the name list of the same class? Someone writes it down by mistake?\\nIt is not a problem of SQL."
                    },
                    {
                        "username": "bansalshruti504",
                        "content": "# Write your MySQL query statement below\\n\\nSelect t.class from \\n(Select distinct class,student from courses)as t \\ngroup by t.class having count(*)>=5\\n\\n// step 2 will give disctinct pair of class and student\\n// step 1 will take class list from new table created in step 2\\n// step 3 will give the list of class having count >= 5"
                    },
                    {
                        "username": "VehicleOfPuzzle",
                        "content": "The title says \"Classes More Than 5 Students\", implying we need > 5, but the description says \"at least five students\", meaning >= 5. The title should be updated to resolve this discrepancy."
                    }
                ]
            },
            {
                "id": 1643268,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 1575648,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 1574440,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 1573540,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 1572370,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 1572326,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 1571783,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 1570070,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 2069376,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 2062850,
                "content": [
                    {
                        "username": "n1ghtc0re_neko",
                        "content": "At their leisure, they ought to check the title against the description against the test cases.\\n\\nClasses .. more than 5 students\\nvs\\n.. at least .. 5 students\\nand test case with 5 students exactly\\n\\nI\\'m no English major, but in my understanding, they\\'re not the same thing."
                    },
                    {
                        "username": "gunish",
                        "content": "`select class from (select distinct * from courses) a  group by class having count(*) >= 5`"
                    },
                    {
                        "username": "shobhag77",
                        "content": "**select class from courses group by class having count(DISTINCT student)>=5**"
                    },
                    {
                        "username": "rj007",
                        "content": "\\'\\'\\'\\nselect class\\nfrom (select class,count(distinct student)countstu\\n     from courses\\n     group by class)t\\n     where countstu>=5\\n\\t \\'\\'\\'"
                    },
                    {
                        "username": "a1way5",
                        "content": "I can\\'t figure out what\\'s wrong with my answer. I tried to change \\'DISTINCT c.class\\' to \\'DISTINCT c.student\\' and it worked. But technically I think \\'DISTINCT c.class\\' should also work because no student should have duplicate class in the same semester. Am I correct?\\n\\n\\'\\'\\'\\nSELECT c.class\\nFROM courses c\\nGROUP BY 1\\nHAVING COUNT(DISTINCT c.class) >= 5\\n\\'\\'\\'"
                    },
                    {
                        "username": "uttara223",
                        "content": "Distinct is needed for the different test cases. No matter how the table has been designed (for an interview, or company), your query must be able to handle all test cases.\\n\\nSELECT t.class\\nFROM\\n(\\nSELECT class, COUNT(DISTINCT student) as dcnt\\n    FROM courses\\n    GROUP BY class\\n    HAVING dcnt >=5\\n) AS t"
                    },
                    {
                        "username": "xingshenyasuo",
                        "content": "Re: [my solution](/topic/89956/my-solution)\\n\\n**select class from courses group by class having count(student)>=5;**\\n\\n When i run this sql on my PC ,\\n the result is right.\\n But when i submit this sql to the website,\\n it says that it is a wrong answer."
                    },
                    {
                        "username": "blogspk18",
                        "content": "If there are duplicate students, doesn\\'t it violate the PK/unique records constraint??"
                    },
                    {
                        "username": "gorman",
                        "content": "Want to know how much time I spent debugging, because the question title says \"more than 5\", but the tests want \"at least 5\"?  Please fix this deception."
                    },
                    {
                        "username": "Abantika_Choudhary",
                        "content": "select class \\nfrom courses\\ngroup by class\\nhaving count(class)>=5;"
                    }
                ]
            },
            {
                "id": 2043856,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 2036231,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 2026352,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 2024447,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 2022147,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 2010140,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 1994422,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 1985523,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 1981967,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 1969189,
                "content": [
                    {
                        "username": "Saniyabubere",
                        "content": "-- Selecting the class names\\nSELECT class\\n\\n-- Grouping the rows by class to count the number of students in each class\\nFROM courses\\n\\n-- Filtering the classes where the count of students is greater than or equal to 5\\nGROUP BY class\\nHAVING COUNT(student) >= 5;\\n"
                    },
                    {
                        "username": "Chorror",
                        "content": "The title says \"more than 5\" but the description says \"at least five.\" The actual test criteria is at least five. The title should be changed. "
                    },
                    {
                        "username": "Olek-dev",
                        "content": "Could someone please tell why  it passes with GROUP BY and fails when I remove it? Is GROUP BY mandatory here if we only select this very column already? \\n\\nSELECT class\\nFROM Courses\\ngroup by class\\nHaving count(student)>= 5 "
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n| class | student\\n+---------+----------+\\n| Math | A,C,E,G,H,I\\n| English |B\\n| Biology |D\\n| Computer | F"
                    },
                    {
                        "username": "usama27muneer",
                        "content": "This one was also solved by me and I used two methods to solve it\\n\\n1 -  Select class\\nfrom Courses\\nGroup by class\\nOrder By Count(Class) DESC\\nLimit 1\\n\\n2- Select class\\nFrom Courses\\nGroup by class\\nHaving Count(student) >=5\\n\\nthe first one was running fine but not submitting and the 2nd was doing both.\\n\\nSo there could be lots of solution to your problem. Just don\\'t be diss - heart. Be Consistent and that\\'s it.\\n"
                    },
                    {
                        "username": "hellosummerkim",
                        "content": "What is the difference with 'GROUP BY' in this query? \nIf i put 'GROUP BY' in my query, i get the right answer, \nbut if I don't put it in there, i get the wrong answer.\nWhat's the role of 'GROUP BY' in the query here? \nI think it's because of 'HAVING' but, still can't understand what's the difference between using it and NOT using it. \n\nSELECT class\nFROM courses \nGROUP BY class \nHAVING COUNT(DISTINCT student) >= 5 \n\n"
                    },
                    {
                        "username": "ucrime",
                        "content": "after doing group by the visualization will be like this\\n+---------+----------+\\n | class         | student\\n+---------+----------+\\n| Math          | A,C,E,G,H,I\\n| English       |B\\n | Biology     |D\\n | Computer | F\\n\\n"
                    },
                    {
                        "username": "edithi",
                        "content": "Use value_counts() on the \\'class\\' column to count students in each class.\\nApply boolean indexing to filter classes with at least five students.\\nReset the index and rename columns using reset_index() and columns.\\nReturn the resulting DataFrame with the \\'class\\' column."
                    },
                    {
                        "username": "Sathya_Bala",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(student) >= 5;"
                    },
                    {
                        "username": "wardatahir570",
                        "content": "select class\\nfrom Courses\\nGroup by class\\nHaving Count(*)>=4;\\n"
                    },
                    {
                        "username": "rakhikumari6602",
                        "content": "SELECT class \\nwhere COUNT(students)>=5\\nFROM Courses\\nGROUP BY class;\\n\\nwhy is this not working?"
                    },
                    {
                        "username": "ucrime",
                        "content": " the primary distinction between HAVING and WHERE is that the WHERE clause filters rows before any grouping or aggregation is done, while the HAVING clause filters groups of rows after they've been grouped and aggregated.\n\nfor more information do chatgpt:-\ndifference between having and where in sql"
                    },
                    {
                        "username": "Din_Srg",
                        "content": "Name:\\n-> Classes More Than 5 Students\\nDescription:\\n-> Find all the classes that have at least five students\\n\\nWell that is... confusing."
                    }
                ]
            },
            {
                "id": 1907673,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1906360,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1885002,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1884375,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1879546,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1866093,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1860047,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1845092,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1817326,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            },
            {
                "id": 1809511,
                "content": [
                    {
                        "username": "ilyassacha",
                        "content": "select c1.class\\nfrom courses as c1\\ninner join courses as c2\\non c1.student = c2.student\\ngroup by class\\norder by count(c2.student) desc\\nlimit 1\\n\\nwhy i can\\'t submit this query although it\\'s correct"
                    },
                    {
                        "username": "JustinAdams",
                        "content": "Title and description conflict with each other.\\n\\nMore than 5 != at least 5"
                    },
                    {
                        "username": "lucasschnee",
                        "content": "SELECT class\\nFROM Courses\\nGROUP BY class\\nHAVING COUNT(DISTINCT(student)) >= 5"
                    },
                    {
                        "username": "trip_",
                        "content": "select class from Courses group by class having count(*)> 4;"
                    },
                    {
                        "username": "dtula859",
                        "content": "Sort of a different approach than what I see in the discussion section, but similar results:\\n\\nWITH new_table AS (\\nSELECT class, count(student) as no_students\\nFROM Courses\\nGROUP BY class)\\n\\nSELECT class\\nFROM new_table\\nWHERE no_students > 5"
                    },
                    {
                        "username": "Amit_Jha",
                        "content": "Below query worked for me,\\n\\nselect cs.class from Courses as cs group by cs.class having count(cs.class) >= 5"
                    },
                    {
                        "username": "Raveena05",
                        "content": "select class from courses group by class having count(class)>5;"
                    },
                    {
                        "username": "monitdua",
                        "content": "select class from courses group by class >= \\'5\\'"
                    },
                    {
                        "username": "guptashubham-sg11",
                        "content": "Most of the users here discussing about same student attends same course multiple times.  Well, I guess there was error in this question a long time ago. But in 2023, it is clearly written that combination of student and class is a primary key. So now, same student attending same class multiple times is not possible as it is mentioned."
                    },
                    {
                        "username": "yogesh402",
                        "content": "select  class from Courses \\ngroup by class \\nhaving count(*) >4\\norder by count(*)"
                    }
                ]
            }
        ]
    },
    {
        "title": "Degree of an Array",
        "question_content": "<p>Given a non-empty array of non-negative integers <code>nums</code>, the <b>degree</b> of this array is defined as the maximum frequency of any one of its elements.</p>\n\n<p>Your task is to find the smallest possible length of a (contiguous) subarray of <code>nums</code>, that has the same degree as <code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,2,3,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe input array has a degree of 2 because both elements 1 and 2 appear twice.\nOf the subarrays that have the same degree:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\nThe shortest length is 2. So return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,2,3,1,4,2]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> \nThe degree is 3 because the element 2 is repeated 3 times.\nSo [2,2,3,1,4,2] is the shortest subarray, therefore returning 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums.length</code> will be between 1 and 50,000.</li>\n\t<li><code>nums[i]</code> will be an integer between 0 and 49,999.</li>\n</ul>\n",
        "solutions": [
            {
                "id": 124317,
                "title": "java-c-python-one-pass-solution",
                "content": "# **Explanation**\\nOne pass on `A`,\\nFor each different number `a` in `A`,\\nwe need to count its frequency and it first occurrence index.\\n\\nIf `a` has the maximum frequency,\\nupdate the `degree = count[a]` and `res = i - first[A[i]] + 1`.\\n\\nIf `a` is one of the numbers that has the maximum frequency,\\nupdate the `res = min(res, i - first[A[i]] + 1)`\\n<br>\\n\\n# **Complexity**\\nTime `O(N)`, hardly find the any reason to scan twice.\\nSpace `O(M)`, where M is the size of different numbers.\\n<br>\\n\\n**Java:**\\n```java\\n    public int findShortestSubArray(int[] A) {\\n        Map<Integer, Integer> count = new HashMap<>(), first = new HashMap<>();\\n        int res = 0, degree = 0;\\n        for (int i = 0; i < A.length; ++i) {\\n            first.putIfAbsent(A[i], i);\\n            count.put(A[i], count.getOrDefault(A[i], 0) + 1);\\n            if (count.get(A[i]) > degree) {\\n                degree = count.get(A[i]);\\n                res = i - first.get(A[i]) + 1;\\n            } else if (count.get(A[i]) == degree)\\n                res = Math.min(res, i - first.get(A[i]) + 1);\\n        }\\n        return res;\\n    }\\n```\\n\\n**C++:**\\n```cpp\\n    int findShortestSubArray(vector<int>& A) {\\n        unordered_map<int, int> count, first;\\n        int res = 0, degree = 0;\\n        for (int i = 0; i < A.size(); ++i) {\\n            if (first.count(A[i]) == 0) first[A[i]] = i;\\n            if (++count[A[i]] > degree) {\\n                degree = count[A[i]];\\n                res = i - first[A[i]] + 1;\\n            } else if (count[A[i]] == degree)\\n                res = min(res, i - first[A[i]] + 1);\\n        }\\n        return res;\\n    }\\n```\\n\\n**Python:**\\n```python\\n    def findShortestSubArray(self, A):\\n        first, count, res, degree = {}, {}, 0, 0\\n        for i, a in enumerate(A):\\n            first.setdefault(a, i)\\n            count[a] = count.get(a, 0) + 1\\n            if count[a] > degree:\\n                degree = count[a]\\n                res = i - first[a] + 1\\n            elif count[a] == degree:\\n                res = min(res, i - first[a] + 1)\\n        return res\\n```\\n",
                "solutionTags": [],
                "code": "```java\\n    public int findShortestSubArray(int[] A) {\\n        Map<Integer, Integer> count = new HashMap<>(), first = new HashMap<>();\\n        int res = 0, degree = 0;\\n        for (int i = 0; i < A.length; ++i) {\\n            first.putIfAbsent(A[i], i);\\n            count.put(A[i], count.getOrDefault(A[i], 0) + 1);\\n            if (count.get(A[i]) > degree) {\\n                degree = count.get(A[i]);\\n                res = i - first.get(A[i]) + 1;\\n            } else if (count.get(A[i]) == degree)\\n                res = Math.min(res, i - first.get(A[i]) + 1);\\n        }\\n        return res;\\n    }\\n```\n```cpp\\n    int findShortestSubArray(vector<int>& A) {\\n        unordered_map<int, int> count, first;\\n        int res = 0, degree = 0;\\n        for (int i = 0; i < A.size(); ++i) {\\n            if (first.count(A[i]) == 0) first[A[i]] = i;\\n            if (++count[A[i]] > degree) {\\n                degree = count[A[i]];\\n                res = i - first[A[i]] + 1;\\n            } else if (count[A[i]] == degree)\\n                res = min(res, i - first[A[i]] + 1);\\n        }\\n        return res;\\n    }\\n```\n```python\\n    def findShortestSubArray(self, A):\\n        first, count, res, degree = {}, {}, 0, 0\\n        for i, a in enumerate(A):\\n            first.setdefault(a, i)\\n            count[a] = count.get(a, 0) + 1\\n            if count[a] > degree:\\n                degree = count[a]\\n                res = i - first[a] + 1\\n            elif count[a] == degree:\\n                res = min(res, i - first[a] + 1)\\n        return res\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 108682,
                "title": "the-example-for-this-question-is-poor",
                "content": "The wording of the example\\'s explanation does not make it clear if 2 is being returned because it is highest degree, what number has the highest degree, or \"length of shortest contiguous subarray that has the same highest degree of the original array\"\\n\\nNow that I understand the problem it makes sense, but I definitely think a better example could have been chosen.\\n\\nAlso, the title has almost nothing to do the with the question, as evidenced by the fact that the default function name is far from what the title is.\\n\\nEDIT: Clearer example:\\n```\\nInput: [1, 7, 7, 5, 7, 1]\\nOutput: 4\\n```\\nExplanation: The degree of this array is 3 because 7 appears the most of any number. The shortest subarray that you can make that has a degree of 3 is [7,7,5,7]. The length of that subarray is 4, so we return 4.",
                "solutionTags": [],
                "code": "```\\nInput: [1, 7, 7, 5, 7, 1]\\nOutput: 4\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 108650,
                "title": "easy-understand-java-solution-beats-100-solutions",
                "content": "```\\n public int findShortestSubArray(int[] nums) {\\n        if (nums.length == 0 || nums == null) return 0;\\n        Map<Integer, int[]> map = new HashMap<>();\\n        for (int i = 0; i < nums.length; i++){\\n           if (!map.containsKey(nums[i])){\\n               map.put(nums[i], new int[]{1, i, i});  // the first element in array is degree, second is first index of this key, third is last index of this key\\n           } else {\\n               int[] temp = map.get(nums[i]);\\n               temp[0]++;\\n               temp[2] = i;\\n           }\\n        }\\n        int degree = Integer.MIN_VALUE, res = Integer.MAX_VALUE;\\n        for (int[] value : map.values()){\\n            if (value[0] > degree){\\n                degree = value[0];\\n                res = value[2] - value[1] + 1;\\n            } else if (value[0] == degree){\\n                res = Math.min( value[2] - value[1] + 1, res);\\n            } \\n        }\\n        return res;\\n    }\\n````",
                "solutionTags": [],
                "code": "```\\n public int findShortestSubArray(int[] nums) {\\n        if (nums.length == 0 || nums == null) return 0;\\n        Map<Integer, int[]> map = new HashMap<>();\\n        for (int i = 0; i < nums.length; i++){\\n           if (!map.containsKey(nums[i])){\\n               map.put(nums[i], new int[]{1, i, i});  // the first element in array is degree, second is first index of this key, third is last index of this key\\n           } else {\\n               int[] temp = map.get(nums[i]);\\n               temp[0]++;\\n               temp[2] = i;\\n           }\\n        }\\n        int degree = Integer.MIN_VALUE, res = Integer.MAX_VALUE;\\n        for (int[] value : map.values()){\\n            if (value[0] > degree){\\n                degree = value[0];\\n                res = value[2] - value[1] + 1;\\n            } else if (value[0] == degree){\\n                res = Math.min( value[2] - value[1] + 1, res);\\n            } \\n        }\\n        return res;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 108651,
                "title": "straightforward-c-solution-35ms",
                "content": "Just record the index of each number in a hash map and find the degree of the array. Second iteration to find the shortest index range for the number with the largest frequency.\\nHere is the code which is self explained.\\n\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,vector<int>> mp;\\n        for(int i=0;i<nums.size();i++) mp[nums[i]].push_back(i);\\n        int degree=0;\\n        for(auto it=mp.begin();it!=mp.end();it++) degree=max(degree,int(it->second.size()));\\n        int shortest=nums.size();\\n        for(auto it=mp.begin();it!=mp.end();it++)\\n        {\\n            if(it->second.size()==degree)\\n            {\\n                shortest=min(shortest,it->second.back()-it->second[0]+1);\\n            }\\n        }\\n        return shortest;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,vector<int>> mp;\\n        for(int i=0;i<nums.size();i++) mp[nums[i]].push_back(i);\\n        int degree=0;\\n        for(auto it=mp.begin();it!=mp.end();it++) degree=max(degree,int(it->second.size()));\\n        int shortest=nums.size();\\n        for(auto it=mp.begin();it!=mp.end();it++)\\n        {\\n            if(it->second.size()==degree)\\n            {\\n                shortest=min(shortest,it->second.back()-it->second[0]+1);\\n            }\\n        }\\n        return shortest;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 108647,
                "title": "python-o-n-concise-with-explanation-two-approaches",
                "content": "Firstly, group each num and collect the index it appears into a list. The list with the longest length will be the degree of the array.\\n\\nNext loop through each of the lists, only those lists with the same length as the degree will qualify. We simply take difference between the first and last value of each qualifying lists to find the length of such a possible subarray .\\n\\nFor example if we have `[1, 1, 2, 2, 2, 3, 1]`, after grouping by value:\\n\\n`[1, 1, 2, 2, 2, 3, 1]` => `{ 1: [0, 1, 6], 2: [2, 3, 4], 3: [4] }, degree: 3`\\n\\nOnly have to consider values where the length == degree:\\n- `1: [0, 1, 6]` => subarray length: (6 - 0) + 1 = 7\\n- `2: [2, 3, 4]` => subarray length: (4 - 2) + 1 = 3 (Winner!)\\n\\n**\\uD83D\\uDCAF Check out https://www.techinterviewhandbook.org for more tips and tricks by me to ace your coding interview \\uD83D\\uDCAF**\\n\\n```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        nums_map, deg, min_len = collections.defaultdict(list), 0, float(\\'inf\\')\\n        for index, num in enumerate(nums):\\n            nums_map[num].append(index)\\n            deg = max(deg, len(nums_map[num]))\\n        for num, indices in nums_map.items():\\n            if len(indices) == deg:\\n                min_len = min(min_len, indices[-1] - indices[0] + 1)\\n        return min_len\\n```\\n\\nAnother solution that just requires one for loop:\\n\\n```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        nums_map, deg, min_len = collections.defaultdict(list), 0, float(\\'inf\\')\\n        for index, num in enumerate(nums):\\n            nums_map[num].append(index)\\n            if len(nums_map[num]) == deg:\\n                min_len = min(min_len, nums_map[num][-1] - nums_map[num][0] + 1)\\n            elif len(nums_map[num]) > deg:\\n                deg = len(nums_map[num])\\n                min_len = nums_map[num][-1] - nums_map[num][0] + 1\\n        return min_len\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        nums_map, deg, min_len = collections.defaultdict(list), 0, float(\\'inf\\')\\n        for index, num in enumerate(nums):\\n            nums_map[num].append(index)\\n            deg = max(deg, len(nums_map[num]))\\n        for num, indices in nums_map.items():\\n            if len(indices) == deg:\\n                min_len = min(min_len, indices[-1] - indices[0] + 1)\\n        return min_len\\n```\n```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        nums_map, deg, min_len = collections.defaultdict(list), 0, float(\\'inf\\')\\n        for index, num in enumerate(nums):\\n            nums_map[num].append(index)\\n            if len(nums_map[num]) == deg:\\n                min_len = min(min_len, nums_map[num][-1] - nums_map[num][0] + 1)\\n            elif len(nums_map[num]) > deg:\\n                deg = len(nums_map[num])\\n                min_len = nums_map[num][-1] - nums_map[num][0] + 1\\n        return min_len\\n```",
                "codeTag": "Java"
            },
            {
                "id": 349801,
                "title": "solution-in-python-3-beats-98",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n    \\tC = {}\\n    \\tfor i, n in enumerate(nums):\\n    \\t\\tif n in C: C[n].append(i)\\n    \\t\\telse: C[n] = [i]\\n    \\tM = max([len(i) for i in C.values()])\\n    \\treturn min([i[-1]-i[0] for i in C.values() if len(i) == M]) + 1\\n\\t\\t\\n\\t\\t\\n- Junaid Mansuri",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "class Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n    \\tC = {}",
                "codeTag": "Java"
            },
            {
                "id": 108666,
                "title": "python-easy-and-concise-solution",
                "content": "````\\ndef findShortestSubArray(self, nums):\\n        first, last = {}, {}\\n        for i, v in enumerate(nums):\\n            first.setdefault(v, i)\\n            last[v] = i\\n        c = collections.Counter(nums)\\n        degree = max(c.values())\\n        return min(last[v] - first[v] + 1 for v in c if c[v] == degree)\\n````\\nUpdate:\\nI realise we can solve it better, so I add this post: [[C++/Java/Python] one-pass and O(M) space](https://leetcode.com/problems/degree-of-an-array/discuss/124317)",
                "solutionTags": [],
                "code": "````\\ndef findShortestSubArray(self, nums):\\n        first, last = {}, {}\\n        for i, v in enumerate(nums):\\n            first.setdefault(v, i)\\n            last[v] = i\\n        c = collections.Counter(nums)\\n        degree = max(c.values())\\n        return min(last[v] - first[v] + 1 for v in c if c[v] == degree)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 748298,
                "title": "easy-python-one-pass-3-approaches-top-speed",
                "content": "**Easy Python | One-Pass | 3 Approaches | Top Speed**\\n\\n**A) Classic Version**\\n\\nTypical algorithm:\\n\\n1. Group elements by label/value. \\n2. Find the highest degree, which is the maximum length of each sub-array per label.\\n3. Find the shortest span for each sub-array at maximum degree (this is enough to contain the highest degree).\\n\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        # Group indexes by element type\\n        d = defaultdict(list)\\n        for i,x in enumerate(nums):\\n            d[x].append(i)\\n        #\\n        # Find highest Degree\\n        m = max([ len(v) for v in d.values() ])\\n        #\\n        # Find shortest span for max. degree\\n        best = len(nums)\\n        for v in d.values():\\n            if len(v)==m:\\n                best = min(best,v[-1]-v[0]+1)\\n        return best\\n```\\n\\n**B) One-Pass (Optimization)**\\n\\nHigh Speed algorithm, it\\'s an optimized version inspired by the previous code. We simply discover elements, and track the shortest length of the highest degree that we currently see.\\n\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        d       = defaultdict(list) # Dictionary with [indexes] where each label appears\\n        m, best = 1, 1              # m = record degree, best = shortest span (for m)\\n        for i,x in enumerate(nums):\\n            d[x].append(i) # Add index to respective sub-array\\n            L =len(d[x])   # Track length of sub-array at label = x\\n            if L>m:\\n                # Initialize new Record\\n                m = L\\n                best = i - d[x][0] + 1\\n            elif L == m:\\n                # Pick best at highest degree\\n                best = min( best , i - d[x][0] + 1 )\\n        return best\\n```\\n\\n**C) Hyper-Optimized (Lower Space Complexity)**\\n\\nThis Final Approach runs under the same principles outlined for (B), but it only uses O( X ) space complexity, where X is the number of unique labels in \"nums\". It only tracks the initial position, and the degree of each sub-array with label = x. This makes a lot of sense, since we never needed to use intermediate sub-array values.\\n\\nI hope you found the code helpful. Cheers,\\n\\n```\\n# Note: This code uses a slightly different nomenclature as before.\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        d       = {}    # Dictionary with information for each label x = nums[i]\\n        #                 Entries have the form d[x] = [i, m] = [beginning_subarray, degree]\\n        #\\n        A, best = 1, 1  # A = record degree, best = shortest span (for A)\\n        #\\n        for i,x in enumerate(nums):\\n            if x in d:\\n                d[x][1] += 1               # Update Degree\\n                m        = d[x][1]         # Fetch Degree\\n                L        = i - d[x][0] + 1 # Length sub-array\\n            else:\\n                d[x] = [i,1]\\n                L    = m = 1\\n            if m>A:\\n                # Initialize new Record\\n                A,best = m, L\\n            elif A == m:\\n                # Pick best at highest degree\\n                best = min( best , L )\\n        return best\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        # Group indexes by element type\\n        d = defaultdict(list)\\n        for i,x in enumerate(nums):\\n            d[x].append(i)\\n        #\\n        # Find highest Degree\\n        m = max([ len(v) for v in d.values() ])\\n        #\\n        # Find shortest span for max. degree\\n        best = len(nums)\\n        for v in d.values():\\n            if len(v)==m:\\n                best = min(best,v[-1]-v[0]+1)\\n        return best\\n```\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        d       = defaultdict(list) # Dictionary with [indexes] where each label appears\\n        m, best = 1, 1              # m = record degree, best = shortest span (for m)\\n        for i,x in enumerate(nums):\\n            d[x].append(i) # Add index to respective sub-array\\n            L =len(d[x])   # Track length of sub-array at label = x\\n            if L>m:\\n                # Initialize new Record\\n                m = L\\n                best = i - d[x][0] + 1\\n            elif L == m:\\n                # Pick best at highest degree\\n                best = min( best , i - d[x][0] + 1 )\\n        return best\\n```\n```\\n# Note: This code uses a slightly different nomenclature as before.\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        d       = {}    # Dictionary with information for each label x = nums[i]\\n        #                 Entries have the form d[x] = [i, m] = [beginning_subarray, degree]\\n        #\\n        A, best = 1, 1  # A = record degree, best = shortest span (for A)\\n        #\\n        for i,x in enumerate(nums):\\n            if x in d:\\n                d[x][1] += 1               # Update Degree\\n                m        = d[x][1]         # Fetch Degree\\n                L        = i - d[x][0] + 1 # Length sub-array\\n            else:\\n                d[x] = [i,1]\\n                L    = m = 1\\n            if m>A:\\n                # Initialize new Record\\n                A,best = m, L\\n            elif A == m:\\n                # Pick best at highest degree\\n                best = min( best , L )\\n        return best\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3206883,
                "title": "java-sliding-window-hashmap-aditya-verma-sliding-window-playlist",
                "content": "**If you don\\'t know about variable size sliding window then first watch all the videos from this playlist given below and then you can understand.\\nLink:- https://youtube.com/playlist?list=PL_z_8CaSLPWeM8BDJmIYDaoQ5zuwyxnfj**\\n```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        HashMap<Integer,Integer> count=new HashMap<>();\\n        for(int i:nums){\\n            count.put(i,count.getOrDefault(i,0)+1);\\n        }\\n        int maxcount=Integer.MIN_VALUE;\\n        for(int j:count.keySet()){\\n            maxcount=Math.max(maxcount,count.get(j));\\n        }\\n        HashMap<Integer,Integer> hm=new HashMap<>();\\n        int windowsize=Integer.MIN_VALUE;\\n        int res=Integer.MAX_VALUE;\\n        int i=0,j=0;\\n        while(j<nums.length){\\n            hm.put(nums[j],hm.getOrDefault(nums[j],0)+1);\\n            windowsize=Math.max(windowsize,hm.get(nums[j]));\\n            while(windowsize==maxcount){\\n                res=Math.min(res,j-i+1);\\n                hm.put(nums[i],hm.get(nums[i])-1);\\n                if(hm.get(nums[i])==0)\\n                    hm.remove(nums[i]);\\n                if(nums[i]==nums[j])\\n                    windowsize--;\\n                i++;\\n            }\\n            j++;\\n        }\\n        return res;\\n    }\\n}\\n```\\n![image](https://assets.leetcode.com/users/images/6d6d5ae2-b392-4f0c-9fbf-60cd27d079a0_1676827348.201913.jpeg)\\n",
                "solutionTags": [
                    "Java",
                    "Sliding Window"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        HashMap<Integer,Integer> count=new HashMap<>();\\n        for(int i:nums){\\n            count.put(i,count.getOrDefault(i,0)+1);\\n        }\\n        int maxcount=Integer.MIN_VALUE;\\n        for(int j:count.keySet()){\\n            maxcount=Math.max(maxcount,count.get(j));\\n        }\\n        HashMap<Integer,Integer> hm=new HashMap<>();\\n        int windowsize=Integer.MIN_VALUE;\\n        int res=Integer.MAX_VALUE;\\n        int i=0,j=0;\\n        while(j<nums.length){\\n            hm.put(nums[j],hm.getOrDefault(nums[j],0)+1);\\n            windowsize=Math.max(windowsize,hm.get(nums[j]));\\n            while(windowsize==maxcount){\\n                res=Math.min(res,j-i+1);\\n                hm.put(nums[i],hm.get(nums[i])-1);\\n                if(hm.get(nums[i])==0)\\n                    hm.remove(nums[i]);\\n                if(nums[i]==nums[j])\\n                    windowsize--;\\n                i++;\\n            }\\n            j++;\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 779166,
                "title": "easy-understanding-c",
                "content": "\\n     class Elements{\\n         public:\\n           int freq;\\n           int leftindex;\\n           int rightindex;\\n         Elements(){\\n             freq=0;\\n             leftindex=0;\\n             rightindex=0;\\n         }\\n     };\\n     class Solution {\\n     public:\\n         int findShortestSubArray(vector<int>& nums) {\\n             unordered_map<int,Elements> map;\\n             for(int i=0;i<nums.size();i++){\\n                 if(map.count(nums[i])==0){\\n                     map[nums[i]].freq++;\\n                     map[nums[i]].leftindex=i;\\n                     map[nums[i]].rightindex=i;\\n                 }else{\\n                     map[nums[i]].freq++;\\n                     map[nums[i]].rightindex=i;\\n                 }\\n             }\\n             int index=INT_MIN;\\n             int deg=nums.size()-1;\\n             for(int i=0;i<nums.size();i++){\\n                 if(map[nums[i]].freq>index){\\n                     index=map[nums[i]].freq;\\n                     deg=map[nums[i]].rightindex-map[nums[i]].leftindex+1;\\n                 }\\n                 if(map[nums[i]].freq==index){\\n                     if(deg>(map[nums[i]].rightindex-map[nums[i]].leftindex+1)){\\n                         deg=map[nums[i]].rightindex-map[nums[i]].leftindex+1;\\n                     }\\n                 }\\n             }\\n             return deg;\\n         }\\n     };\\n\\t \\n**Feel free to ask any question in the comment section.\\nIf you like this solution, do UPVOTE.\\nHappy Coding :)**",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\n     public:\\n         int findShortestSubArray(vector<int>& nums) {\\n             unordered_map<int,Elements> map;\\n             for(int i=0;i<nums.size();i++){\\n                 if(map.count(nums[i])==0){\\n                     map[nums[i]].freq++;\\n                     map[nums[i]].leftindex=i;\\n                     map[nums[i]].rightindex=i;\\n                 }",
                "codeTag": "Java"
            },
            {
                "id": 911022,
                "title": "java-8ms-faster-than-94-87-using-single-map-in-one-iteration",
                "content": "The map stores the value of an array as key and in value it use an int[] of size three whose 0th element is left most position of that element, 1st element contains right most position of that element and 2nd position contains the degree of that element.\\nmax variable is used to store the max degree and res is used to store the result.\\n```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        Map<Integer, int[]> m = new HashMap<>();\\n        int max = 0;\\n        int res = 0;\\n        for(int i=0;i<nums.length;i++){\\n            int a = nums[i];\\n            if(!m.containsKey(a)){\\n                m.put(a, new int[]{i,i,1});\\n                if(max == 0) max = 1;\\n                if(res == 0) res = 1;\\n            }else{\\n                int []x = m.get(a);\\n                x[1] = i;\\n                x[2]++;\\n                if(x[2]>max){\\n                    max = x[2];\\n                    res = i-x[0]+1;\\n                }else if(x[2] == max){\\n                    res = Math.min(res, i-x[0]+1);\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        Map<Integer, int[]> m = new HashMap<>();\\n        int max = 0;\\n        int res = 0;\\n        for(int i=0;i<nums.length;i++){\\n            int a = nums[i];\\n            if(!m.containsKey(a)){\\n                m.put(a, new int[]{i,i,1});\\n                if(max == 0) max = 1;\\n                if(res == 0) res = 1;\\n            }else{\\n                int []x = m.get(a);\\n                x[1] = i;\\n                x[2]++;\\n                if(x[2]>max){\\n                    max = x[2];\\n                    res = i-x[0]+1;\\n                }else if(x[2] == max){\\n                    res = Math.min(res, i-x[0]+1);\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 483120,
                "title": "c-96-27-speed",
                "content": "```\\nint findShortestSubArray(vector<int>& nums) {\\n        int number;\\n        unordered_map<int,pair<int,vector<int>>> hashmap;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            number  = nums[i];\\n            hashmap[number].first++;\\n            hashmap[number].second.push_back(i);\\n        }\\n        int degree = -1;\\n        for(auto it:hashmap)\\n        {\\n            if(it.second.first>degree){\\n                degree = it.second.first;\\n            }\\n        }\\n        \\n        int ans = nums.size();\\n            \\n        for(auto it:hashmap)\\n        {\\n            if(it.second.first==degree){\\n                int minimum = *min_element(it.second.second.begin(),it.second.second.end());\\n                int maximum = *max_element(it.second.second.begin(),it.second.second.end());\\n                \\n                if(maximum-minimum<ans){\\n                    ans = maximum - minimum;\\n                }\\n                \\n            }\\n        }\\n        \\n        return ans+1;\\n    }\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nint findShortestSubArray(vector<int>& nums) {\\n        int number;\\n        unordered_map<int,pair<int,vector<int>>> hashmap;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            number  = nums[i];\\n            hashmap[number].first++;\\n            hashmap[number].second.push_back(i);\\n        }\\n        int degree = -1;\\n        for(auto it:hashmap)\\n        {\\n            if(it.second.first>degree){\\n                degree = it.second.first;\\n            }\\n        }\\n        \\n        int ans = nums.size();\\n            \\n        for(auto it:hashmap)\\n        {\\n            if(it.second.first==degree){\\n                int minimum = *min_element(it.second.second.begin(),it.second.second.end());\\n                int maximum = *max_element(it.second.second.begin(),it.second.second.end());\\n                \\n                if(maximum-minimum<ans){\\n                    ans = maximum - minimum;\\n                }\\n                \\n            }\\n        }\\n        \\n        return ans+1;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 108657,
                "title": "javascript-o-n-time-and-o-n-space",
                "content": "```\\nconst findShortestSubArray = (nums) => {\\n    const counts = {}\\n    const firstIndexes = {}\\n    const lastIndexes = {}\\n    let max = 0\\n    for (let i = 0; i < nums.length; i++) {\\n        const k = nums[i]\\n        counts[k] = (counts[k] || 0) + 1\\n        max = Math.max(max, counts[k])\\n        if (firstIndexes[k] === undefined) {\\n            firstIndexes[k] = i\\n        }\\n        lastIndexes[k] = i\\n    }\\n    let res = nums.length\\n    for (const k in counts) {\\n        if (counts[k] === max) {\\n            res = Math.min(res, lastIndexes[k] - firstIndexes[k] + 1)\\n        }\\n    }\\n    return res\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst findShortestSubArray = (nums) => {\\n    const counts = {}\\n    const firstIndexes = {}\\n    const lastIndexes = {}\\n    let max = 0\\n    for (let i = 0; i < nums.length; i++) {\\n        const k = nums[i]\\n        counts[k] = (counts[k] || 0) + 1\\n        max = Math.max(max, counts[k])\\n        if (firstIndexes[k] === undefined) {\\n            firstIndexes[k] = i\\n        }\\n        lastIndexes[k] = i\\n    }\\n    let res = nums.length\\n    for (const k in counts) {\\n        if (counts[k] === max) {\\n            res = Math.min(res, lastIndexes[k] - firstIndexes[k] + 1)\\n        }\\n    }\\n    return res\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 108660,
                "title": "java-o-n-time-o-n-space",
                "content": "1) Get *degree* of array, frequency of all integers in array, and the indices of the first and last occurrence of each integer in the array\\n2) Return the minimum occurrence range of each integer which appears *degree* number of times in the array,  \\n\\n```\\npublic int findShortestSubArray(int[] nums) {\\n    int degree = 0, n = nums.length, minSize = n;\\n    Map<Integer, Integer> map = new HashMap<>();\\n    Map<Integer, Integer[]> map2 = new HashMap<>();\\n    \\n    for (int i=0;i<n;i++) {\\n        map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);\\n        degree = Math.max(degree, map.get(nums[i]));\\n\\n        if (map2.get(nums[i]) == null) map2.put(nums[i], new Integer[2]);\\n        Integer[] numRange = map2.get(nums[i]);\\n        if (numRange[0] == null) numRange[0] = i;\\n        numRange[1] = i;\\n    }\\n\\n    for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\\n        if (entry.getValue() != degree) continue;\\n        Integer[] range = map2.get(entry.getKey());\\n        minSize = Math.min(minSize, range[1] - range[0] + 1);  \\n    }\\n    return minSize;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic int findShortestSubArray(int[] nums) {\\n    int degree = 0, n = nums.length, minSize = n;\\n    Map<Integer, Integer> map = new HashMap<>();\\n    Map<Integer, Integer[]> map2 = new HashMap<>();\\n    \\n    for (int i=0;i<n;i++) {\\n        map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);\\n        degree = Math.max(degree, map.get(nums[i]));\\n\\n        if (map2.get(nums[i]) == null) map2.put(nums[i], new Integer[2]);\\n        Integer[] numRange = map2.get(nums[i]);\\n        if (numRange[0] == null) numRange[0] = i;\\n        numRange[1] = i;\\n    }\\n\\n    for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\\n        if (entry.getValue() != degree) continue;\\n        Integer[] range = map2.get(entry.getKey());\\n        minSize = Math.min(minSize, range[1] - range[0] + 1);  \\n    }\\n    return minSize;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1179769,
                "title": "simple-python-solution-with-explanation-o-n",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        \\'\\'\\'\\n        step 1: find the degree\\n            - create a hashmap of a number and value as list of occurance indices\\n            - the largest indices array in the hashmap gives us the degree\\n        step 2: find the minimum length subarray with same degree\\n            - initialize result as length of array\\n            - for each indices array, if it\\'s length equals degree, means it\\'s most frequent element\\n                - this length will be equal to the difference of first occurance and last occurance of most frequent element\\n                - compare this length with current result and keep the smallest length as result\\n            - return result + 1 because difference of indices will give us length - 1\\n                \\n            \\n        \\'\\'\\'\\n        c = defaultdict(list)\\n        for i, n in enumerate(nums):\\n            c[n].append(i)        \\n        degree = max([len(x) for x in c.values()])\\n        \\n        result = len(nums)\\n        for indices in c.values():\\n            if len(indices) == degree:\\n                result = min(result, indices[-1] - indices[0])\\n        return result + 1            \\n        \\n        \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        \\'\\'\\'\\n        step 1: find the degree\\n            - create a hashmap of a number and value as list of occurance indices\\n            - the largest indices array in the hashmap gives us the degree\\n        step 2: find the minimum length subarray with same degree\\n            - initialize result as length of array\\n            - for each indices array, if it\\'s length equals degree, means it\\'s most frequent element\\n                - this length will be equal to the difference of first occurance and last occurance of most frequent element\\n                - compare this length with current result and keep the smallest length as result\\n            - return result + 1 because difference of indices will give us length - 1\\n                \\n            \\n        \\'\\'\\'\\n        c = defaultdict(list)\\n        for i, n in enumerate(nums):\\n            c[n].append(i)        \\n        degree = max([len(x) for x in c.values()])\\n        \\n        result = len(nums)\\n        for indices in c.values():\\n            if len(indices) == degree:\\n                result = min(result, indices[-1] - indices[0])\\n        return result + 1            \\n        \\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 870056,
                "title": "c-one-pass-faster-than-100-memory-less-than-97-05",
                "content": "\\'\\'\\'\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        \\n        int cnt[50000][2]; // {index of first occurance, frequence of that element}\\n        memset(cnt, -1, sizeof(cnt));\\n        int maxFreq = 0, minLen = INT_MAX;\\n        \\n        for(int i = 0; i < nums.size(); i++) {\\n            if(cnt[nums[i]][0] == -1)\\n                cnt[nums[i]][0] = i, cnt[nums[i]][1] = 1; \\n            else\\n                cnt[nums[i]][1]++;\\n            if(cnt[nums[i]][1] > maxFreq)\\n                maxFreq = cnt[nums[i]][1], minLen = i - cnt[nums[i]][0] + 1;\\n            else if (cnt[nums[i]][1] == maxFreq)\\n                minLen = min(minLen, i - cnt[nums[i]][0] + 1);\\n        }\\n        return minLen;\\n    }\\n};\\n\\'\\'\\'\\n\\nPlease upvote if you find it helpful.",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        \\n        int cnt[50000][2]; // {index of first occurance, frequence of that element}",
                "codeTag": "Java"
            },
            {
                "id": 2523483,
                "title": "java-hashmap-arraylist-easy-solution",
                "content": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        int max=0;\\n        HashMap<Integer,Integer> map = new HashMap<>();\\n        ArrayList<Integer> list = new ArrayList<>();\\n        for(int i: nums){\\n            list.add(i);\\n            map.put(i,map.getOrDefault(i,0)+1);\\n            if((int)map.get(i)>max)\\n                max=map.get(i);\\n        }\\n        int min = Integer.MAX_VALUE;\\n        for(Map.Entry m: map.entrySet()){\\n            if((int)m.getValue()==max){\\n                int num = (int)m.getKey();\\n                int n1 = list.indexOf(num);\\n                int n2 = list.lastIndexOf(num);\\n                if(n2-n1+1<min)\\n                    min=n2-n1+1;\\n            }\\n        }\\n        return min;\\n    }\\n}\\n```\\nKindly upvote if you like the code.",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        int max=0;\\n        HashMap<Integer,Integer> map = new HashMap<>();\\n        ArrayList<Integer> list = new ArrayList<>();\\n        for(int i: nums){\\n            list.add(i);\\n            map.put(i,map.getOrDefault(i,0)+1);\\n            if((int)map.get(i)>max)\\n                max=map.get(i);\\n        }\\n        int min = Integer.MAX_VALUE;\\n        for(Map.Entry m: map.entrySet()){\\n            if((int)m.getValue()==max){\\n                int num = (int)m.getKey();\\n                int n1 = list.indexOf(num);\\n                int n2 = list.lastIndexOf(num);\\n                if(n2-n1+1<min)\\n                    min=n2-n1+1;\\n            }\\n        }\\n        return min;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1205490,
                "title": "simple-cpp-solution-with-comments",
                "content": "class Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        \\n        unordered_map<int, int> freq, firstIndex;\\n\\n        int minLen= INT_MAX, degree= 0;\\n        for(int i=0; i<nums.size(); i++)\\n        {\\n            freq[nums[i]]++;\\n            \\n            //checking if we are getting the current element first time or not and if yes\\n\\t\\t\\t//then we are saving its index value into firstIndex map\\n\\t\\t\\t\\n            if(freq[nums[i]] == 1)\\n                firstIndex[nums[i]] = i;\\n            \\n            // if current frequency is equals to the degree of an array then we have to\\n\\t\\t\\t//check current subarrays length and according to that we have to update \\n\\t\\t\\t//the minimum length \\n\\t\\t\\t\\n            if(freq[nums[i]] == degree)\\n            {\\n                int currLen= i - firstIndex[nums[i]] + 1;\\n                if(minLen > currLen)\\n                    minLen= currLen;\\n            }\\n            \\n            //we are updating degree dynamically(in the runtime) so for each iteration\\n\\t\\t\\t//we have to check the degree and if current frequency is greater then the\\n\\t\\t\\t//degree then we would update the degree as well as the minimum length \\n\\t\\t\\t//because this is the first time where we are getting the highest degree and \\n\\t\\t\\t//no other elements before this, contains the maximum degree\\n\\t\\t\\t\\n            if(freq[nums[i]] > degree)\\n            {\\n                minLen = i - firstIndex[nums[i]] + 1;\\n                degree = freq[nums[i]];\\n            }\\n        }\\n        \\n        return minLen;\\n    }\\n};\\n\\n**Please upvote :-)**",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        \\n        unordered_map<int, int> freq, firstIndex;\\n\\n        int minLen= INT_MAX, degree= 0;\\n        for(int i=0; i<nums.size(); i++)\\n        {\\n            freq[nums[i]]++;\\n            \\n            //checking if we are getting the current element first time or not and if yes\\n\\t\\t\\t//then we are saving its index value into firstIndex map\\n\\t\\t\\t\\n            if(freq[nums[i]] == 1)\\n                firstIndex[nums[i]] = i;\\n            \\n            // if current frequency is equals to the degree of an array then we have to\\n\\t\\t\\t//check current subarrays length and according to that we have to update \\n\\t\\t\\t//the minimum length \\n\\t\\t\\t\\n            if(freq[nums[i]] == degree)\\n            {\\n                int currLen= i - firstIndex[nums[i]] + 1;\\n                if(minLen > currLen)\\n                    minLen= currLen;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 780507,
                "title": "javascript-solution-using-hashmaps-w-comments",
                "content": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar findShortestSubArray = function(nums) {\\n    // using hash maps\\n\\t\\n    let num_counts = new Map();  // hash map to keep count of each number\\n    let degree = 0;              // initalize degree to 0\\n    \\n    let first_seen = new Map();  // hash map keep track of first time we see the number\\n    let min_length = 0;\\n    \\n    for (let i= 0; i<= nums.length; i++){    // loop through the numbers \\n        if(!first_seen.has(nums[i])){   \\n            first_seen.set(nums[i], i);  // mark the index of first occurance\\n        }\\n        \\n        // key: current number\\n        // value: count of number( if nums is in map we get the current count or if not count equals 0 then we increment + 1)\\n         num_counts.set(nums[i], (num_counts.has(nums[i]) ? num_counts.get(nums[i]) : 0) + 1)  \\n        \\n        // if count > degree then we update the degree\\n     if(num_counts.get(nums[i]) > degree){\\n         degree = num_counts.get(nums[i]);\\n         min_length = i - first_seen.get(nums[i]) + 1;     // subtract occurance (max) from first occurance to see the \\n     } else if (num_counts.get(nums[i]) === degree){      // if number is equal to degree\\n            min_length = Math.min(min_length, i - first_seen.get(nums[i])+ 1); \\n        }\\n        \\n    }\\n    return min_length;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar findShortestSubArray = function(nums) {\\n    // using hash maps\\n\\t\\n    let num_counts = new Map();  // hash map to keep count of each number\\n    let degree = 0;              // initalize degree to 0\\n    \\n    let first_seen = new Map();  // hash map keep track of first time we see the number\\n    let min_length = 0;\\n    \\n    for (let i= 0; i<= nums.length; i++){    // loop through the numbers \\n        if(!first_seen.has(nums[i])){   \\n            first_seen.set(nums[i], i);  // mark the index of first occurance\\n        }\\n        \\n        // key: current number\\n        // value: count of number( if nums is in map we get the current count or if not count equals 0 then we increment + 1)\\n         num_counts.set(nums[i], (num_counts.has(nums[i]) ? num_counts.get(nums[i]) : 0) + 1)  \\n        \\n        // if count > degree then we update the degree\\n     if(num_counts.get(nums[i]) > degree){\\n         degree = num_counts.get(nums[i]);\\n         min_length = i - first_seen.get(nums[i]) + 1;     // subtract occurance (max) from first occurance to see the \\n     } else if (num_counts.get(nums[i]) === degree){      // if number is equal to degree\\n            min_length = Math.min(min_length, i - first_seen.get(nums[i])+ 1); \\n        }\\n        \\n    }\\n    return min_length;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 306484,
                "title": "java-22ms-solution-with-explanation",
                "content": "We need two HashMap\\n1. ```numToFreq``` to record frequency of each num\\n2. ```numToFirst``` to record the index that each num first appears\\n\\nTraverse the array to update ```numToFreq``` and ```numToFirst```. We use ```freq``` to record current maximum frequency and ```result``` to record the length of shortest subarray:\\n1. If the frequency of ```nums[i]``` is larger than ```freq```, then update ```result```\\n2. If the frequency of ```nums[i]``` is equal to ```freq```, compare the length of ```nums[i]``` and update ```result``` if current length is less than ```result```\\n\\n```\\npublic int findShortestSubArray(int[] nums) {\\n    Map<Integer, Integer> numToFreq = new HashMap<Integer, Integer>();\\n    Map<Integer, Integer> numToFirst = new HashMap<Integer, Integer>();\\n\\n    int freq = 0, result = 0;\\n    for(int i = 0; i < nums.length; i++) {\\n        if( !numToFreq.containsKey(nums[i]) ) {\\n            numToFreq.put(nums[i], 1);\\n            numToFirst.put(nums[i], i);\\n            if( freq == 0 ) {\\n                freq = 1;\\n                result = 1;\\n            }\\n        }\\n        else {\\n            int newFreq = numToFreq.get(nums[i]) + 1;\\n            numToFreq.put(nums[i], newFreq);        \\n            if( newFreq > freq ) {\\n                freq = newFreq;\\n                result = i - numToFirst.get(nums[i]) + 1;\\n            }\\n            else if( newFreq == freq ) {\\n                result = Math.min(result, i - numToFirst.get(nums[i]) + 1);\\n            }\\n        }\\n    }\\n\\n    return result;\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Hash Table"
                ],
                "code": "```numToFreq```\n```numToFirst```\n```numToFreq```\n```numToFirst```\n```freq```\n```result```\n```nums[i]```\n```freq```\n```result```\n```nums[i]```\n```freq```\n```nums[i]```\n```result```\n```result```\n```\\npublic int findShortestSubArray(int[] nums) {\\n    Map<Integer, Integer> numToFreq = new HashMap<Integer, Integer>();\\n    Map<Integer, Integer> numToFirst = new HashMap<Integer, Integer>();\\n\\n    int freq = 0, result = 0;\\n    for(int i = 0; i < nums.length; i++) {\\n        if( !numToFreq.containsKey(nums[i]) ) {\\n            numToFreq.put(nums[i], 1);\\n            numToFirst.put(nums[i], i);\\n            if( freq == 0 ) {\\n                freq = 1;\\n                result = 1;\\n            }\\n        }\\n        else {\\n            int newFreq = numToFreq.get(nums[i]) + 1;\\n            numToFreq.put(nums[i], newFreq);        \\n            if( newFreq > freq ) {\\n                freq = newFreq;\\n                result = i - numToFirst.get(nums[i]) + 1;\\n            }\\n            else if( newFreq == freq ) {\\n                result = Math.min(result, i - numToFirst.get(nums[i]) + 1);\\n            }\\n        }\\n    }\\n\\n    return result;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 108674,
                "title": "concise-c-solution-using-hash-map-o-n-time",
                "content": "Using two hash map.\\nOne  records the starting index for the character.\\nThe other records the frequency of the character.\\n\\nOnce a certain character's frequency is bigger than others. we update the variable len. When more than two character have the same frequency, just compare their length, choose the shorter one.\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        if (nums.size() < 2) return nums.size();\\n        int res = nums.size();\\n        unordered_map<int, int> startIndex, count;\\n        int len = nums.size(), fre = 0;\\n        for (int i = 0; i < nums.size() ;i++) {\\n            if (startIndex.count(nums[i]) == 0) startIndex[nums[i]] = i;\\n            count[nums[i]]++;\\n            if (count[nums[i]] == fre){\\n                len = min(i - startIndex[nums[i]] + 1, len);\\n            }\\n            if (count[nums[i]] > fre){\\n                len = i - startIndex[nums[i]] + 1;\\n                fre = count[nums[i]];\\n            }\\n        }\\n        return len;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        if (nums.size() < 2) return nums.size();\\n        int res = nums.size();\\n        unordered_map<int, int> startIndex, count;\\n        int len = nums.size(), fre = 0;\\n        for (int i = 0; i < nums.size() ;i++) {\\n            if (startIndex.count(nums[i]) == 0) startIndex[nums[i]] = i;\\n            count[nums[i]]++;\\n            if (count[nums[i]] == fre){\\n                len = min(i - startIndex[nums[i]] + 1, len);\\n            }\\n            if (count[nums[i]] > fre){\\n                len = i - startIndex[nums[i]] + 1;\\n                fre = count[nums[i]];\\n            }\\n        }\\n        return len;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3392508,
                "title": "easiest-c-solution-using-map-beats-91-99-runtime",
                "content": "# Intuition\\nUsing map and vector.\\n\\n# Approach\\nStore all the indexes of elements in the map using vector.If we have the maximum size of vector in map i.e degree(vector)==degree(nums),in that case update the ans.If there are two elements having maximum size of the vector,in that case we will choose the element whose difference of last index of appearence and first indext of appearance is minimum.\\n\\n# Complexity\\n- Time complexity:\\n  O(n)\\n\\n- Space complexity:\\nO(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int,vector<int>>mp;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++){\\n            mp[nums[i]].push_back(i);\\n        }\\n        int maxe=-1,cnt=0,ans=INT_MAX;\\n        for(auto x:mp){        \\n            if(x.second.size()==cnt)\\n                ans=min(ans,x.second[x.second.size()-1]-x.second[0]);\\n            if(x.second.size()>cnt)\\n            {       \\n                ans=x.second[x.second.size()-1]-x.second[0];\\n                cnt=x.second.size();\\n            }\\n        }   \\n        return ans+1;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int,vector<int>>mp;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++){\\n            mp[nums[i]].push_back(i);\\n        }\\n        int maxe=-1,cnt=0,ans=INT_MAX;\\n        for(auto x:mp){        \\n            if(x.second.size()==cnt)\\n                ans=min(ans,x.second[x.second.size()-1]-x.second[0]);\\n            if(x.second.size()>cnt)\\n            {       \\n                ans=x.second[x.second.size()-1]-x.second[0];\\n                cnt=x.second.size();\\n            }\\n        }   \\n        return ans+1;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1286284,
                "title": "c-easy-to-understand-fast-and-efficient-solution-using-hashtables",
                "content": "***Please upvote to motivate me in my quest of documenting all leetcode solutions. HAPPY CODING:)\\nAny suggestions and improvements are always welcome***\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n    unordered_map<int,vector<int> > mp;\\n    for(int i=0;i<nums.size();i++)\\n    {\\n        mp[nums[i]].push_back(i);\\n    }\\n        int count=0;\\n        for(auto it=mp.begin();it!=mp.end();it++)\\n        {\\n            count=max(count,(int)it->second.size()); \\n        }\\n        int degree=nums.size();\\n        for(auto it=mp.begin();it!=mp.end();it++)\\n        {\\n            if(it->second.size()==count)\\n             degree=min(degree,it->second.back()-it->second[0]+1);   \\n        }\\n        return degree;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n    unordered_map<int,vector<int> > mp;\\n    for(int i=0;i<nums.size();i++)\\n    {\\n        mp[nums[i]].push_back(i);\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 775021,
                "title": "c-efficient-solution-explained-60-time-90-space",
                "content": "The core idea: I run through the sequence only once and for each number I store in a hashmap 3 values: its frequency, the first position I saw it and the last one. I will explain why in the last part if it is not clear, but otherwise bear with me while I will explain \"how\" and bear in mind that in that very same single pass I will also constantly update the value of the highest frequency found so far and the values that have that frequency in common.\\n\\nAs I said, first of all I declare an `unordered_map` `freqMap`, meant to have numerical values as keys and for each one, as mentioned, we will store/update the frequency, the position of the first occurrence and the position of the last; `mostFreq` will store the value of the highest frequency so far, while `mostFreqs` will do the same for the most frequent values (so, if we find something with the same frequency as `mostFreq` we add it to `mostFreqs`, otherwise if the value is higher, we set `mostFreqs` to contain only that last value).\\n\\nAnd I should really improve my naming skills, since being focused on the logic should not be passable excuse: I know...\\n\\nOnce I am done with the loop, all I have to do is to perform a reduce/fold operation (I prefer to use `accumulate` for it, but a loop works of course as well) in order to find the one among the most frequant ones (provided we have more than one, actually) that has the smallest distance from the first and last position in which it was ever met.\\n\\nThe code (surprisingly faster and lighter using an array instead of a vector in my map; not using a map and just using a bidimensional array of 50000 elements would be also much faster, but burn memory like crazy even for the smallest sets!):\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        // mapping values in the frequency, first, last format, keeping track of the nost frequents\\n        unordered_map<int, int[3]> freqMap;\\n        int mostFreq = 0;\\n        vector<int> mostFreqs;\\n        for (int i = 0; i < nums.size(); i++) {\\n            int n = nums[i];\\n            if (freqMap.find(n) == end(freqMap)) {\\n                freqMap[n][0]++;\\n                freqMap[n][1] = i;\\n                freqMap[n][2] = i;\\n            }\\n            else {\\n                freqMap[n][0]++;\\n                freqMap[n][2] = i;\\n            }\\n            if (freqMap[n][0] == mostFreq) mostFreqs.push_back(n);\\n            else if (freqMap[n][0] > mostFreq) {\\n                mostFreq = freqMap[n][0];\\n                mostFreqs = {n};\\n            }\\n        }\\n        // finally, computing the size of the smallest subset of highly frequent numbers\\n        return accumulate(begin(mostFreqs), end(mostFreqs), INT_MAX, [&freqMap](int a, int b){\\n            return min(a, freqMap[b][2] - freqMap[b][1] + 1);\\n        });\\n    }\\n};`\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Counting"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        // mapping values in the frequency, first, last format, keeping track of the nost frequents\\n        unordered_map<int, int[3]> freqMap;\\n        int mostFreq = 0;\\n        vector<int> mostFreqs;\\n        for (int i = 0; i < nums.size(); i++) {\\n            int n = nums[i];\\n            if (freqMap.find(n) == end(freqMap)) {\\n                freqMap[n][0]++;\\n                freqMap[n][1] = i;\\n                freqMap[n][2] = i;\\n            }\\n            else {\\n                freqMap[n][0]++;\\n                freqMap[n][2] = i;\\n            }\\n            if (freqMap[n][0] == mostFreq) mostFreqs.push_back(n);\\n            else if (freqMap[n][0] > mostFreq) {\\n                mostFreq = freqMap[n][0];\\n                mostFreqs = {n};\\n            }\\n        }\\n        // finally, computing the size of the smallest subset of highly frequent numbers\\n        return accumulate(begin(mostFreqs), end(mostFreqs), INT_MAX, [&freqMap](int a, int b){\\n            return min(a, freqMap[b][2] - freqMap[b][1] + 1);\\n        });\\n    }\\n};`\\n```",
                "codeTag": "Java"
            },
            {
                "id": 526278,
                "title": "c-one-pass-solution",
                "content": "```\\npublic class Solution\\n{\\n    public int FindShortestSubArray(int[] nums)\\n    {\\n        int degree = 0, minLength = Int32.MaxValue;\\n\\n        // <Key: number, Value: indexes where number occurs>\\n        Dictionary<int, List<int>> occurency = new Dictionary<int, List<int>>();\\n\\n        for (int i = 0; i < nums.Length; i++)\\n        {\\n            if (occurency.ContainsKey(nums[i]))\\n                occurency[nums[i]].Add(i); // Add the index to num[i]\\'s occurence indexes\\n            else\\n                occurency.Add(nums[i], new List<int> { i }); // initialize a list with the index where num[i] occurs at the first time  \\n\\n            if (occurency[nums[i]].Count > degree)\\n            {\\n                degree = occurency[nums[i]].Count; // update the degree with a greater value if exist               \\n                minLength = i - occurency[nums[i]][0] + 1; // update the min length\\n            }\\n            else if (occurency[nums[i]].Count == degree)\\n            {\\n                minLength = Math.Min(minLength, i - occurency[nums[i]][0] + 1); // when having same degree, get the smallest length.\\n            }\\n        }\\n\\n        return minLength;\\n    }\\n}\\n\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution\\n{\\n    public int FindShortestSubArray(int[] nums)\\n    {\\n        int degree = 0, minLength = Int32.MaxValue;\\n\\n        // <Key: number, Value: indexes where number occurs>\\n        Dictionary<int, List<int>> occurency = new Dictionary<int, List<int>>();\\n\\n        for (int i = 0; i < nums.Length; i++)\\n        {\\n            if (occurency.ContainsKey(nums[i]))\\n                occurency[nums[i]].Add(i); // Add the index to num[i]\\'s occurence indexes\\n            else\\n                occurency.Add(nums[i], new List<int> { i }); // initialize a list with the index where num[i] occurs at the first time  \\n\\n            if (occurency[nums[i]].Count > degree)\\n            {\\n                degree = occurency[nums[i]].Count; // update the degree with a greater value if exist               \\n                minLength = i - occurency[nums[i]][0] + 1; // update the min length\\n            }\\n            else if (occurency[nums[i]].Count == degree)\\n            {\\n                minLength = Math.Min(minLength, i - occurency[nums[i]][0] + 1); // when having same degree, get the smallest length.\\n            }\\n        }\\n\\n        return minLength;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 152815,
                "title": "c-solution",
                "content": "Record the indexes of the numbers, find the min length of the one with highest frequency (max degree).\\n```\\n#include <vector>\\n#include <unordered_map>\\n\\nclass Solution {\\npublic:\\n    int findShortestSubArray(std::vector<int>& nums) {\\n\\n        std::unordered_map<int, std::vector<int>> table;       // key, val => number, corresponding indexes in nums\\n\\n        for (int i = 0; i < nums.size(); ++i) {\\n            table[nums[i]].push_back(i);\\n        }\\n\\n        int degree = 0;\\n        for (const auto& ele : table) {\\n            degree = std::max(degree, (int)ele.second.size());\\n        }\\n        \\n        int min_length = nums.size();\\n        for (const auto& ele : table) {\\n            if (ele.second.size() == degree) {\\n                min_length = std::min(min_length, ele.second.back() - ele.second[0] + 1);\\n            }\\n        }\\n\\n        return min_length;\\n    }\\n};\\n\\n```",
                "solutionTags": [],
                "code": "```\\n#include <vector>\\n#include <unordered_map>\\n\\nclass Solution {\\npublic:\\n    int findShortestSubArray(std::vector<int>& nums) {\\n\\n        std::unordered_map<int, std::vector<int>> table;       // key, val => number, corresponding indexes in nums\\n\\n        for (int i = 0; i < nums.size(); ++i) {\\n            table[nums[i]].push_back(i);\\n        }\\n\\n        int degree = 0;\\n        for (const auto& ele : table) {\\n            degree = std::max(degree, (int)ele.second.size());\\n        }\\n        \\n        int min_length = nums.size();\\n        for (const auto& ele : table) {\\n            if (ele.second.size() == degree) {\\n                min_length = std::min(min_length, ele.second.back() - ele.second[0] + 1);\\n            }\\n        }\\n\\n        return min_length;\\n    }\\n};\\n\\n```",
                "codeTag": "C++"
            },
            {
                "id": 108686,
                "title": "java-very-concise-and-easy-solution-beats-100-java-solutions",
                "content": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        int len=nums.length;\\n        if(len==0) return 0;\\n        Map<Integer,Integer> count= new HashMap<>();\\n        Map<Integer,Integer> starts= new HashMap<>();\\n        Map<Integer,Integer> ends= new HashMap<>();\\n        int max=0;\\n        for(int i=0;i<len;i++){\\n            if(!count.containsKey(nums[i])){\\n                count.put(nums[i],0);\\n                starts.put(nums[i],i);\\n            }\\n            ends.put(nums[i],i);\\n            count.put(nums[i],count.get(nums[i])+1);\\n            max=Math.max(count.get(nums[i]),max);\\n        }\\n        int min=Integer.MAX_VALUE;\\n        for(Integer key: count.keySet()){\\n            if(count.get(key)==max){\\n                min=Math.min(min,ends.get(key)-starts.get(key)+1);\\n            }\\n        }\\n        return min;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        int len=nums.length;\\n        if(len==0) return 0;\\n        Map<Integer,Integer> count= new HashMap<>();\\n        Map<Integer,Integer> starts= new HashMap<>();\\n        Map<Integer,Integer> ends= new HashMap<>();\\n        int max=0;\\n        for(int i=0;i<len;i++){\\n            if(!count.containsKey(nums[i])){\\n                count.put(nums[i],0);\\n                starts.put(nums[i],i);\\n            }\\n            ends.put(nums[i],i);\\n            count.put(nums[i],count.get(nums[i])+1);\\n            max=Math.max(count.get(nums[i]),max);\\n        }\\n        int min=Integer.MAX_VALUE;\\n        for(Integer key: count.keySet()){\\n            if(count.get(key)==max){\\n                min=Math.min(min,ends.get(key)-starts.get(key)+1);\\n            }\\n        }\\n        return min;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3079344,
                "title": "commented-explained-java-solution-90-faster-o-n",
                "content": "# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(n)\\n\\n# Code\\n```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        // The int is an array of [firstEncounter, lastEncounter, frequency]\\n        HashMap<Integer, int[]> map = new HashMap<>();\\n        for(int i = 0; i < nums.length; i++){\\n\\n            // If the key does not exist in the map, we put it with the first encounter and last encounter set to the current position, \\'i\\', and the freqency 1\\n            if(!map.containsKey(nums[i])){\\n                map.put(nums[i], new int[]{i, i, 1});\\n            } \\n\\n            // If it does exist, we update the last encounter to the current position and we increase the frequency by 1\\n            else {\\n                int[] arr = map.get(nums[i]);\\n                arr[1] = i;\\n                arr[2]++;\\n                map.put(nums[i], arr);\\n            }\\n        }\\n        // Maximim frequency\\n        int maxFreq = Integer.MIN_VALUE;\\n\\n        // Minimum distance\\n        int minDist = Integer.MAX_VALUE;\\n\\n        // Going through all the values of the HashMap\\n        for(int[] value : map.values()){\\n            // value[0] = the first encounter index\\n            // value[1] = the last encounter index\\n            // value[2] = frequency\\n\\n            // If the frecuency is greater than the maxFreq, then we update it and also set the minDist\\n            if(value[2] > maxFreq){\\n                maxFreq = value[2];\\n                minDist = value[1] - value[0] + 1;\\n            } \\n\\n            // If the frecuency is equal to the current max, we take the minimum between the exiting minDist and the minimum distance for the current value\\n            else if(value[2] == maxFreq){\\n                minDist = Math.min(minDist, value[1] - value[0] + 1);\\n            }\\n        }\\n        return minDist;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Hash Table"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        // The int is an array of [firstEncounter, lastEncounter, frequency]\\n        HashMap<Integer, int[]> map = new HashMap<>();\\n        for(int i = 0; i < nums.length; i++){\\n\\n            // If the key does not exist in the map, we put it with the first encounter and last encounter set to the current position, \\'i\\', and the freqency 1\\n            if(!map.containsKey(nums[i])){\\n                map.put(nums[i], new int[]{i, i, 1});\\n            } \\n\\n            // If it does exist, we update the last encounter to the current position and we increase the frequency by 1\\n            else {\\n                int[] arr = map.get(nums[i]);\\n                arr[1] = i;\\n                arr[2]++;\\n                map.put(nums[i], arr);\\n            }\\n        }\\n        // Maximim frequency\\n        int maxFreq = Integer.MIN_VALUE;\\n\\n        // Minimum distance\\n        int minDist = Integer.MAX_VALUE;\\n\\n        // Going through all the values of the HashMap\\n        for(int[] value : map.values()){\\n            // value[0] = the first encounter index\\n            // value[1] = the last encounter index\\n            // value[2] = frequency\\n\\n            // If the frecuency is greater than the maxFreq, then we update it and also set the minDist\\n            if(value[2] > maxFreq){\\n                maxFreq = value[2];\\n                minDist = value[1] - value[0] + 1;\\n            } \\n\\n            // If the frecuency is equal to the current max, we take the minimum between the exiting minDist and the minimum distance for the current value\\n            else if(value[2] == maxFreq){\\n                minDist = Math.min(minDist, value[1] - value[0] + 1);\\n            }\\n        }\\n        return minDist;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1617808,
                "title": "easy-c-solution-runtime-faster-than-97-64-memory-usage-less-than-91-21",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,int>mp; //store the frequency of each element present in the array\\n        int temp=0,n=nums.size();\\n        for(auto &i:nums){\\n            mp[i]++;\\n            if(mp[i]>temp) \\n                temp=mp[i]; //find max occurnace element in array\\n        }\\n        if(temp==1)\\n            return 1;\\n        int ans=INT_MAX;\\n        for(auto &i:mp){\\n            if(i.second == temp){ //iterating over all the elments having max occurance\\n                int l=0,r=n-1;\\n                while(l<=r && nums[l]!=i.first) //finding left most occurance of that element\\n                    l++;\\n                while(l<=r && nums[r]!=i.first) //finding right most occurance of that element\\n                    r--;\\n                ans=min(ans,r-l+1);//storing min length subarray->of all the element with max occurance            \\n            }\\n        }        \\n        return ans; //returning min length subarray\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Hash Table",
                    "Two Pointers",
                    "Sliding Window"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,int>mp; //store the frequency of each element present in the array\\n        int temp=0,n=nums.size();\\n        for(auto &i:nums){\\n            mp[i]++;\\n            if(mp[i]>temp) \\n                temp=mp[i]; //find max occurnace element in array\\n        }\\n        if(temp==1)\\n            return 1;\\n        int ans=INT_MAX;\\n        for(auto &i:mp){\\n            if(i.second == temp){ //iterating over all the elments having max occurance\\n                int l=0,r=n-1;\\n                while(l<=r && nums[l]!=i.first) //finding left most occurance of that element\\n                    l++;\\n                while(l<=r && nums[r]!=i.first) //finding right most occurance of that element\\n                    r--;\\n                ans=min(ans,r-l+1);//storing min length subarray->of all the element with max occurance            \\n            }\\n        }        \\n        return ans; //returning min length subarray\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1387101,
                "title": "c-hashmap",
                "content": "I store {number, {count, {start_index, end_index}} in a map\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, pair<int, pair<int, int>>> mp;\\n        int n = nums.size();\\n        \\n        int maxCount =  0;\\n        for(int i = 0; i<n; i++) {\\n            if(!mp.count(nums[i])) {\\n                mp[nums[i]] = make_pair(1, make_pair(i, i));\\n            } else {\\n                mp[nums[i]].first++;\\n                mp[nums[i]].second.second = i;\\n            }\\n            maxCount = max(maxCount, mp[nums[i]].first);\\n        }\\n        \\n        int length = INT_MAX;\\n        for(auto &it : mp) {\\n            int element = it.first;\\n            int count   = it.second.first;\\n            int start   = it.second.second.first;\\n            int end     = it.second.second.second;\\n            \\n            \\n            \\n            if(count == maxCount) {\\n                length = min(length, end-start+1);\\n            }\\n        }\\n        return length;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, pair<int, pair<int, int>>> mp;\\n        int n = nums.size();\\n        \\n        int maxCount =  0;\\n        for(int i = 0; i<n; i++) {\\n            if(!mp.count(nums[i])) {\\n                mp[nums[i]] = make_pair(1, make_pair(i, i));\\n            } else {\\n                mp[nums[i]].first++;\\n                mp[nums[i]].second.second = i;\\n            }\\n            maxCount = max(maxCount, mp[nums[i]].first);\\n        }\\n        \\n        int length = INT_MAX;\\n        for(auto &it : mp) {\\n            int element = it.first;\\n            int count   = it.second.first;\\n            int start   = it.second.second.first;\\n            int end     = it.second.second.second;\\n            \\n            \\n            \\n            if(count == maxCount) {\\n                length = min(length, end-start+1);\\n            }\\n        }\\n        return length;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1014923,
                "title": "java-left-right-index-and-count-o-n",
                "content": "```\\nclass Solution {\\n    \\n    private class MetaData {\\n        int left;\\n        int right;\\n        int count;\\n        public MetaData (int l, int r, int c) {\\n            this.left = l;\\n            this.right = r;\\n            this.count = c;\\n        }\\n    }\\n    \\n    public int findShortestSubArray(int[] nums) {\\n        int maxFreq = 1;\\n        Map<Integer, MetaData> map = new HashMap<Integer, MetaData>();\\n        \\n        for (int i = 0; i < nums.length; ++i) {\\n            int n = nums[i];\\n            if (!map.containsKey(n)) {\\n                map.put(n, new MetaData(i, i, 1));\\n            } else {\\n                MetaData meta = map.get(n);\\n                map.put(n, new MetaData(meta.left, i, meta.count + 1));\\n                maxFreq = Math.max(maxFreq, meta.count + 1);\\n            }\\n        }\\n        \\n        int ans = Integer.MAX_VALUE;\\n        for (Integer key : map.keySet()) {\\n            MetaData meta = map.get(key);\\n            if (meta.count == maxFreq) {\\n                ans = Math.min(ans, meta.right - meta.left + 1);\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    \\n    private class MetaData {\\n        int left;\\n        int right;\\n        int count;\\n        public MetaData (int l, int r, int c) {\\n            this.left = l;\\n            this.right = r;\\n            this.count = c;\\n        }\\n    }\\n    \\n    public int findShortestSubArray(int[] nums) {\\n        int maxFreq = 1;\\n        Map<Integer, MetaData> map = new HashMap<Integer, MetaData>();\\n        \\n        for (int i = 0; i < nums.length; ++i) {\\n            int n = nums[i];\\n            if (!map.containsKey(n)) {\\n                map.put(n, new MetaData(i, i, 1));\\n            } else {\\n                MetaData meta = map.get(n);\\n                map.put(n, new MetaData(meta.left, i, meta.count + 1));\\n                maxFreq = Math.max(maxFreq, meta.count + 1);\\n            }\\n        }\\n        \\n        int ans = Integer.MAX_VALUE;\\n        for (Integer key : map.keySet()) {\\n            MetaData meta = map.get(key);\\n            if (meta.count == maxFreq) {\\n                ans = Math.min(ans, meta.right - meta.left + 1);\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 518409,
                "title": "java-o-n-sliding-window-method-with-comments",
                "content": "\\n```java\\n    public int findShortestSubArray(int[] nums) {\\n        // Step1. Count numbers\\n        Map<Integer, Integer> count = new HashMap<>();\\n        for (int i = 0; i < nums.length; i++) {\\n            count.put(nums[i], count.getOrDefault(nums[i], 0) + 1);\\n        }\\n        \\n        // Step2. Find the degree of the whole array, which is used in sliding windwo algorithm to determine window status\\n        int degree = Collections.max(count.values());\\n        \\n        // Step3. Run sliding window. \\n        // use a slow pointer to indicate the end of the window, and a scanning pointer \\'fast\\' indicating the front of the window\\n        int slow = 0;\\n        int minLength = nums.length;\\n        Map<Integer, Integer> windowCount = new HashMap<>(); // window counter\\n        int windowDegree = 0;  // the degree in the window\\n        \\n        for(int fast = 0; fast < nums.length; fast++) {\\n            windowCount.put(nums[fast], windowCount.getOrDefault(nums[fast],0) + 1);\\n            windowDegree = Math.max(windowDegree, windowCount.get(nums[fast]));\\n            // when the window degree equals to the global degree, we need to minimize the window size, to find the min length\\n            while(windowDegree == degree) {\\n                // update our result\\n                minLength = Math.min(minLength, fast - slow + 1);\\n                \\n                // pop out the number at \\'slow\\' pointer, and increment slow\\n                windowCount.put(nums[slow], windowCount.get(nums[slow]) - 1);\\n                slow++;\\n                \\n                // only when the number popped up equals to the newly added number, we can safely reduce the windowDegree\\n                // thus break the loop\\n                if(nums[slow - 1] == nums[fast]) {\\n                    windowDegree--;\\n                }\\n            }\\n        }\\n        return minLength;\\n    }\\n```",
                "solutionTags": [
                    "Java",
                    "Sliding Window"
                ],
                "code": "```java\\n    public int findShortestSubArray(int[] nums) {\\n        // Step1. Count numbers\\n        Map<Integer, Integer> count = new HashMap<>();\\n        for (int i = 0; i < nums.length; i++) {\\n            count.put(nums[i], count.getOrDefault(nums[i], 0) + 1);\\n        }\\n        \\n        // Step2. Find the degree of the whole array, which is used in sliding windwo algorithm to determine window status\\n        int degree = Collections.max(count.values());\\n        \\n        // Step3. Run sliding window. \\n        // use a slow pointer to indicate the end of the window, and a scanning pointer \\'fast\\' indicating the front of the window\\n        int slow = 0;\\n        int minLength = nums.length;\\n        Map<Integer, Integer> windowCount = new HashMap<>(); // window counter\\n        int windowDegree = 0;  // the degree in the window\\n        \\n        for(int fast = 0; fast < nums.length; fast++) {\\n            windowCount.put(nums[fast], windowCount.getOrDefault(nums[fast],0) + 1);\\n            windowDegree = Math.max(windowDegree, windowCount.get(nums[fast]));\\n            // when the window degree equals to the global degree, we need to minimize the window size, to find the min length\\n            while(windowDegree == degree) {\\n                // update our result\\n                minLength = Math.min(minLength, fast - slow + 1);\\n                \\n                // pop out the number at \\'slow\\' pointer, and increment slow\\n                windowCount.put(nums[slow], windowCount.get(nums[slow]) - 1);\\n                slow++;\\n                \\n                // only when the number popped up equals to the newly added number, we can safely reduce the windowDegree\\n                // thus break the loop\\n                if(nums[slow - 1] == nums[fast]) {\\n                    windowDegree--;\\n                }\\n            }\\n        }\\n        return minLength;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 165682,
                "title": "java-three-hashmap-solution",
                "content": "    public int findShortestSubArray(int[] nums) {\\n        if (nums == null || nums.length == 0) return 0;\\n        Map<Integer, Integer> countMap = new HashMap<Integer, Integer>();\\n        Map<Integer, Integer> firstMap = new HashMap<Integer, Integer>();\\n        Map<Integer, Integer> lastMap = new HashMap<Integer, Integer>();\\n        int max = 0, res = Integer.MAX_VALUE;\\n        for (int i = 0; i < nums.length; i++) {\\n        \\tif (!countMap.containsKey(nums[i])) {\\n        \\t\\tcountMap.put(nums[i], 1);\\n        \\t\\tfirstMap.put(nums[i], i);\\n        \\t\\tlastMap.put(nums[i], i);\\n        \\t} else {\\n        \\t\\tcountMap.put(nums[i], countMap.get(nums[i]) + 1);\\n        \\t\\tlastMap.put(nums[i], i);\\n        \\t}\\n        \\tmax = Math.max(max, countMap.get(nums[i]));\\n        }\\n        \\n        for (Map.Entry<Integer, Integer> entry : countMap.entrySet()) {\\n        \\tif (entry.getValue() == max) {\\n        \\t\\tres = Math.min(res, lastMap.get(entry.getKey()) - firstMap.get(entry.getKey()) + 1);\\n        \\t}\\n        }\\n        \\n        return res;\\n    }",
                "solutionTags": [],
                "code": "    public int findShortestSubArray(int[] nums) {\\n        if (nums == null || nums.length == 0) return 0;\\n        Map<Integer, Integer> countMap = new HashMap<Integer, Integer>();\\n        Map<Integer, Integer> firstMap = new HashMap<Integer, Integer>();\\n        Map<Integer, Integer> lastMap = new HashMap<Integer, Integer>();\\n        int max = 0, res = Integer.MAX_VALUE;\\n        for (int i = 0; i < nums.length; i++) {\\n        \\tif (!countMap.containsKey(nums[i])) {\\n        \\t\\tcountMap.put(nums[i], 1);\\n        \\t\\tfirstMap.put(nums[i], i);\\n        \\t\\tlastMap.put(nums[i], i);\\n        \\t} else {\\n        \\t\\tcountMap.put(nums[i], countMap.get(nums[i]) + 1);\\n        \\t\\tlastMap.put(nums[i], i);\\n        \\t}\\n        \\tmax = Math.max(max, countMap.get(nums[i]));\\n        }\\n        \\n        for (Map.Entry<Integer, Integer> entry : countMap.entrySet()) {\\n        \\tif (entry.getValue() == max) {\\n        \\t\\tres = Math.min(res, lastMap.get(entry.getKey()) - firstMap.get(entry.getKey()) + 1);\\n        \\t}\\n        }\\n        \\n        return res;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 161453,
                "title": "python-4-lines-hashtable-solution",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        cnt, seen = collections.Counter(nums), collections.defaultdict(list)\\n        degree = max(cnt.values())\\n        for i, v in enumerate(nums): seen[v].append(i)\\n        return min(seen[v][-1] - seen[v][0] + 1 for v in cnt if cnt[v] == degree)\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        cnt, seen = collections.Counter(nums), collections.defaultdict(list)\\n        degree = max(cnt.values())\\n        for i, v in enumerate(nums): seen[v].append(i)\\n        return min(seen[v][-1] - seen[v][0] + 1 for v in cnt if cnt[v] == degree)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3329310,
                "title": "easy-commented-code-0-ms-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        int n = nums.size(), maxFreq = 0, ans = n;\\n        unordered_map<int, int> freq, left, right;\\n        // Find the frequency of each number and the maximum frequency\\n        for(int i = 0; i < n; i++){\\n            freq[nums[i]]++;\\n            maxFreq = max(maxFreq, freq[nums[i]]);\\n            // Record the leftmost and rightmost indices for each number\\n            if(left.find(nums[i]) == left.end())    left[nums[i]] = i;\\n            right[nums[i]] = i;\\n        }\\n        // Find the minimum length subarray\\n        for(auto& p : freq)\\n            if(p.second == maxFreq)\\n                ans = min(ans, right[p.first] - left[p.first] + 1);\\n        return ans;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        int n = nums.size(), maxFreq = 0, ans = n;\\n        unordered_map<int, int> freq, left, right;\\n        // Find the frequency of each number and the maximum frequency\\n        for(int i = 0; i < n; i++){\\n            freq[nums[i]]++;\\n            maxFreq = max(maxFreq, freq[nums[i]]);\\n            // Record the leftmost and rightmost indices for each number\\n            if(left.find(nums[i]) == left.end())    left[nums[i]] = i;\\n            right[nums[i]] = i;\\n        }\\n        // Find the minimum length subarray\\n        for(auto& p : freq)\\n            if(p.second == maxFreq)\\n                ans = min(ans, right[p.first] - left[p.first] + 1);\\n        return ans;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2417223,
                "title": "python-3-hashmaps-99-of-submissions",
                "content": "![image](https://assets.leetcode.com/users/images/976a39ba-4762-4613-b520-2bb2b9f3a899_1660338785.2251601.png)\\n\\nCreate 3 hashmaps for storing the frequency, starting index, and ending index of each **distinct** item in nums\\n\\nidentify the item(s) with the greatest frequency with the variable **maxFreq** \\n\\nFor each distinct item in nums:\\n- if it is (one of the) most freqent items in nums:\\n\\t- calculate the length of the subarray by using the starting index and ending index of that item in nums as variable **span**\\n\\t- you are looking for the SHORTEST subarray, so if **span** is less than your previously identified shortest subarray:\\n\\t\\t- **span** becomes your newest shortest subarray, **lowSpan**\\n\\nreturn **lowSpan**",
                "solutionTags": [
                    "Python"
                ],
                "code": "![image](https://assets.leetcode.com/users/images/976a39ba-4762-4613-b520-2bb2b9f3a899_1660338785.2251601.png)\\n\\nCreate 3 hashmaps for storing the frequency, starting index, and ending index of each **distinct** item in nums\\n\\nidentify the item(s) with the greatest frequency with the variable **maxFreq** \\n\\nFor each distinct item in nums:\\n- if it is (one of the) most freqent items in nums:\\n\\t- calculate the length of the subarray by using the starting index and ending index of that item in nums as variable **span**\\n\\t- you are looking for the SHORTEST subarray, so if **span** is less than your previously identified shortest subarray:\\n\\t\\t- **span** becomes your newest shortest subarray, **lowSpan**\\n\\nreturn **lowSpan**",
                "codeTag": "Unknown"
            },
            {
                "id": 2067969,
                "title": "python-sol-using-2-dict-with-explanation",
                "content": "4 steps to the question\\n* calculate the degree of the array\\n* note the first and last occurance of those elements\\n* list all elements who have max occurances.\\n* calcuate the lengths of subarrays which have those elements and return the shortest lenght\\n\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        count = {}\\n        idx = {}\\n        \\n        for i, num in enumerate(nums):\\n            if num not in count:\\n                count[num]=1\\n                idx[num] = [i, i]\\n            else:\\n                count[num]+=1\\n                idx[num][1] = i \\n                \\n        \\n        deg = max(count.values())\\n        \\n        \\n        listOfKeys = [key for (key, value) in count.items() if value==deg]\\n        \\n        ln=len(nums)\\n\\n        for key in listOfKeys:\\n            lb=idx[key][0]\\n            ub=idx[key][1]\\n            ln = min(ln, ub-lb+1)\\n            \\n        return ln\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        count = {}\\n        idx = {}\\n        \\n        for i, num in enumerate(nums):\\n            if num not in count:\\n                count[num]=1\\n                idx[num] = [i, i]\\n            else:\\n                count[num]+=1\\n                idx[num][1] = i \\n                \\n        \\n        deg = max(count.values())\\n        \\n        \\n        listOfKeys = [key for (key, value) in count.items() if value==deg]\\n        \\n        ln=len(nums)\\n\\n        for key in listOfKeys:\\n            lb=idx[key][0]\\n            ub=idx[key][1]\\n            ln = min(ln, ub-lb+1)\\n            \\n        return ln\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2017020,
                "title": "python-consise-and-easy-solution-184ms-beats-98-with-explanation",
                "content": "**Explanation**\\nThe array will have a certain degree `d`, where a certain number occurs `d` times. Therefore, the shortest subarray of the same degree would be the first occurence and last occurence of that number.\\n\\n1. define left and right dictionaries (for first occurences of the numbers and last occurences of the numbers) with the key being the number and value being the index of first and last occurrence\\n2. define a count dictionary for the number of times each number appears\\n3. Enumerate through nums\\n\\t4. if it\\'s the first occurence of a number (if the number isn\\'t in the first occurences dictionaries yet): add that number into left dictionary\\n\\t5. if not, update the last occurence of this number to be this index (continuously update)\\n\\t6. update the count for this number\\n\\n-----------------------------------------------------\\nNow we have our first and last occurences of each number with the number of times they occur. The longest possible result is the entire list (`len(nums)`)The degree will be the maximum of count (number that appeared most). \\n\\n1. Iterate through count\\n2. If the count of that number is equal to degree:\\n\\t3. update result to be the munimum of the old result and the difference of last and first occurence indexes + 1 (list index starts at 0)\\n4. return result *yay*\\n\\n![image](https://assets.leetcode.com/users/images/f5f53d35-6d33-4269-abd0-2cc676c76bdd_1651947619.6590207.png)\\n\\n\\n```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        left = {}\\n        right = {}\\n        count = {}\\n        for i, x in enumerate(nums):\\n            if x not in left:\\n                left[x] = i\\n            right[x] = i\\n            count[x] = count.get(x, 0) + 1\\n            \\n        res = len(nums)\\n        degree = max(count.values())\\n        for x in count:\\n            if count[x] == degree:\\n                res = min(res, right[x] - left[x] + 1)\\n        return res\\n```\\n\\n**If you liked this, please upvote to support me!**",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        left = {}\\n        right = {}\\n        count = {}\\n        for i, x in enumerate(nums):\\n            if x not in left:\\n                left[x] = i\\n            right[x] = i\\n            count[x] = count.get(x, 0) + 1\\n            \\n        res = len(nums)\\n        degree = max(count.values())\\n        for x in count:\\n            if count[x] == degree:\\n                res = min(res, right[x] - left[x] + 1)\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2016374,
                "title": "javascript-one-pass-solution",
                "content": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nconst findShortestSubArray = nums => {\\n    let maxFrequence = 0\\n    let freq = {}\\n    let first = {}\\n    let shortestSubArray = 1\\n    \\n    for (let i = 0; i < nums.length; i++) {\\n        const num = nums[i]\\n        if (freq[num]) {\\n            freq[num]++\\n        } else {\\n            freq[num] = 1\\n            first[num] = i\\n        }\\n        \\n        if (freq[num] > maxFrequence) {\\n            maxFrequence = freq[num]\\n            shortestSubArray = i - first[num] + 1\\n        }\\n        \\n        if (freq[num] === maxFrequence) {\\n            shortestSubArray = Math.min(shortestSubArray, i - first[num] + 1)\\n        }\\n    }\\n    \\n    return shortestSubArray\\n};\\n```\\n\\n<br />\\n\\n\\u2139\\uFE0F [My javascript solution collection](https://github.com/toantd90/leetcode-js-solutions)\\n\\n<br />",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nconst findShortestSubArray = nums => {\\n    let maxFrequence = 0\\n    let freq = {}\\n    let first = {}\\n    let shortestSubArray = 1\\n    \\n    for (let i = 0; i < nums.length; i++) {\\n        const num = nums[i]\\n        if (freq[num]) {\\n            freq[num]++\\n        } else {\\n            freq[num] = 1\\n            first[num] = i\\n        }\\n        \\n        if (freq[num] > maxFrequence) {\\n            maxFrequence = freq[num]\\n            shortestSubArray = i - first[num] + 1\\n        }\\n        \\n        if (freq[num] === maxFrequence) {\\n            shortestSubArray = Math.min(shortestSubArray, i - first[num] + 1)\\n        }\\n    }\\n    \\n    return shortestSubArray\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1428974,
                "title": "java-clean-concise-optimal-code-map-data-structure-o-n-time-solution",
                "content": "```\\nclass Degree {\\n    \\n    int count, start, end;\\n    \\n    public Degree (int start) {\\n        \\n        count = 1;\\n        this.start = start;\\n        this.end = start;\\n    }\\n}\\n\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        int maxDegree = 1, minLength = nums.length;\\n        Map<Integer, Degree> map = new HashMap<> ();\\n        \\n        for (int i = 0; i < nums.length; i++) {\\n            if (map.containsKey (nums[i])) {\\n                Degree degree = map.get (nums[i]);\\n                ++degree.count;\\n                degree.end = i;\\n                maxDegree = Math.max (maxDegree, degree.count);\\n            }\\n            else {\\n                map.put (nums[i], new Degree (i));\\n            }\\n        }\\n        \\n        for (Degree degree : map.values ()) {\\n            if (degree.count == maxDegree) {\\n                minLength = Math.min (minLength, degree.end - degree.start + 1);\\n            }\\n        }\\n        \\n        return minLength;\\n    }\\n}\\n```\\n\\nPlease help to **UPVOTE** if this post is useful for you.\\nIf you have any questions, feel free to comment below.\\n\\n**LOVE CODING :)\\nHAPPY CODING :)\\nHAPPY LEARNING :)**",
                "solutionTags": [],
                "code": "```\\nclass Degree {\\n    \\n    int count, start, end;\\n    \\n    public Degree (int start) {\\n        \\n        count = 1;\\n        this.start = start;\\n        this.end = start;\\n    }\\n}\\n\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        int maxDegree = 1, minLength = nums.length;\\n        Map<Integer, Degree> map = new HashMap<> ();\\n        \\n        for (int i = 0; i < nums.length; i++) {\\n            if (map.containsKey (nums[i])) {\\n                Degree degree = map.get (nums[i]);\\n                ++degree.count;\\n                degree.end = i;\\n                maxDegree = Math.max (maxDegree, degree.count);\\n            }\\n            else {\\n                map.put (nums[i], new Degree (i));\\n            }\\n        }\\n        \\n        for (Degree degree : map.values ()) {\\n            if (degree.count == maxDegree) {\\n                minLength = Math.min (minLength, degree.end - degree.start + 1);\\n            }\\n        }\\n        \\n        return minLength;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1241702,
                "title": "c-simple-hashmap-based-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,vector<int>>mp;\\n        \\n        int size=0,pos=-1;\\n        \\n        for(int i=0;i<nums.size();i++)\\n        {\\n               mp[nums[i]].push_back(i);\\n                if(mp[nums[i]].size()>size)\\n                {\\n                    size=mp[nums[i]].size();\\n                    pos=nums[i];\\n                }\\n        }\\n        \\n        int ans=INT_MAX;\\n        \\n        for(auto x: mp)\\n        {\\n            if(x.second.size()==size)\\n            {\\n                  ans=min(ans,(x.second[x.second.size()-1]-x.second[0]+1));\\n            }\\n        }\\n     return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,vector<int>>mp;\\n        \\n        int size=0,pos=-1;\\n        \\n        for(int i=0;i<nums.size();i++)\\n        {\\n               mp[nums[i]].push_back(i);\\n                if(mp[nums[i]].size()>size)\\n                {\\n                    size=mp[nums[i]].size();\\n                    pos=nums[i];\\n                }\\n        }\\n        \\n        int ans=INT_MAX;\\n        \\n        for(auto x: mp)\\n        {\\n            if(x.second.size()==size)\\n            {\\n                  ans=min(ans,(x.second[x.second.size()-1]-x.second[0]+1));\\n            }\\n        }\\n     return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 653537,
                "title": "please-see-these-examples-before-you-solve",
                "content": "Very poor explaination, I feel sorry for the candidate :) in real interview. \\n\\nExamples From previous poster\\n\\n```\\n\\nIn fact, this question need to consider multi items have same max frequency.\\nExample 1 . [1, 2, 2, 3, 1]\\nitem 1 and item 2 both appear most frequency 2 times.\\nto get (contiguous) subarray contain item 1 for 2 times , we can only get\\n[1,2,2,3,1] length is 5\\nto get (contiguous) subarray contain item 2 for 2 times , we can get\\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\\nshortest length is 2.\\nSo, return 2\\nExample 2 [1,2,2,3,1,4,2]\\nthe most frequency appearing item is 2, which appeared 3 times.\\nto get (contiguous) subarray contain item 2 for 3 times , we can get\\n[1,2,2,3,1,4,2] length is 7\\n[2,2,3,1,4,2] length is 6\\nno other solution, so, the shortest subarray length is 6\\n\\nI may add one expamle to explain\\n[5,5,5,1,6,1,6,6]\\n5 and 6 are the most frequency items, both appear 3 times\\nto get (contiguous) subarray contain item 5 is [5,5,5]. length is 3\\nto get (contiguous) subarray contain item 6 is [6,1,6,6]. length is 4\\n```",
                "solutionTags": [],
                "code": "```\\n\\nIn fact, this question need to consider multi items have same max frequency.\\nExample 1 . [1, 2, 2, 3, 1]\\nitem 1 and item 2 both appear most frequency 2 times.\\nto get (contiguous) subarray contain item 1 for 2 times , we can only get\\n[1,2,2,3,1] length is 5\\nto get (contiguous) subarray contain item 2 for 2 times , we can get\\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\\nshortest length is 2.\\nSo, return 2\\nExample 2 [1,2,2,3,1,4,2]\\nthe most frequency appearing item is 2, which appeared 3 times.\\nto get (contiguous) subarray contain item 2 for 3 times , we can get\\n[1,2,2,3,1,4,2] length is 7\\n[2,2,3,1,4,2] length is 6\\nno other solution, so, the shortest subarray length is 6\\n\\nI may add one expamle to explain\\n[5,5,5,1,6,1,6,6]\\n5 and 6 are the most frequency items, both appear 3 times\\nto get (contiguous) subarray contain item 5 is [5,5,5]. length is 3\\nto get (contiguous) subarray contain item 6 is [6,1,6,6]. length is 4\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 275356,
                "title": "share-my-swift-solution",
                "content": "Loop through the array and use a dictionary to map each element to all positions of its occurance, i.e. its indices array. \\n\\nThen loop through the dictionary. If we find an elements with more frequent occurance, i.e. its indices array is longer, then we update the degree and the Length of subarray (first to last occurance of this element). If we find another element with same degree (frequency), we track the min value of the subarray length.\\n\\nHope it helps.\\n```\\nclass Solution {\\n\\tfunc findShortestSubArray(_ nums: [Int]) -> Int {\\n\\t\\t\\n\\t\\tvar dict: [Int: [Int]] = [:]\\n\\t\\tfor (i, num) in nums.enumerated() {\\n\\t\\t\\tdict[num, default: []].append(i)\\n\\t\\t} // O(n)\\n\\t\\t\\n\\t\\tvar degree = 0\\n\\t\\tvar minLength = 0\\n\\t\\tdict.forEach { (element, indices) in\\n\\t\\t\\tif indices.count > degree {\\n\\t\\t\\t\\tdegree = indices.count\\n\\t\\t\\t\\tminLength = indices[degree-1] - indices[0] + 1\\n\\t\\t\\t} else if indices.count == degree {\\n\\t\\t\\t\\tminLength = min(minLength, indices[degree-1] - indices[0] + 1)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn minLength\\n\\t}\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n\\tfunc findShortestSubArray(_ nums: [Int]) -> Int {\\n\\t\\t\\n\\t\\tvar dict: [Int: [Int]] = [:]\\n\\t\\tfor (i, num) in nums.enumerated() {\\n\\t\\t\\tdict[num, default: []].append(i)\\n\\t\\t} // O(n)\\n\\t\\t\\n\\t\\tvar degree = 0\\n\\t\\tvar minLength = 0\\n\\t\\tdict.forEach { (element, indices) in\\n\\t\\t\\tif indices.count > degree {\\n\\t\\t\\t\\tdegree = indices.count\\n\\t\\t\\t\\tminLength = indices[degree-1] - indices[0] + 1\\n\\t\\t\\t} else if indices.count == degree {\\n\\t\\t\\t\\tminLength = min(minLength, indices[degree-1] - indices[0] + 1)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn minLength\\n\\t}\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 250903,
                "title": "c-99",
                "content": "```\\npublic class Solution {\\n    public int FindShortestSubArray(int[] nums) {\\n        var dict = new Dictionary<int, List<int>>();\\n        \\n        for(var i = 0; i < nums.Length; i++){\\n            if(dict.ContainsKey(nums[i]))\\n                dict[nums[i]].Add(i);\\n            else dict[nums[i]] = new List<int> { i };\\n        }\\n        \\n        var f = dict.Max(d => d.Value.Count());\\n        \\n        return dict.Where(d=>d.Value.Count == f).Min(a => a.Value[a.Value.Count - 1] - a.Value[0] + 1);\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int FindShortestSubArray(int[] nums) {\\n        var dict = new Dictionary<int, List<int>>();\\n        \\n        for(var i = 0; i < nums.Length; i++){\\n            if(dict.ContainsKey(nums[i]))\\n                dict[nums[i]].Add(i);\\n            else dict[nums[i]] = new List<int> { i };\\n        }\\n        \\n        var f = dict.Max(d => d.Value.Count());\\n        \\n        return dict.Where(d=>d.Value.Count == f).Min(a => a.Value[a.Value.Count - 1] - a.Value[0] + 1);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 223582,
                "title": "js-one-pass-with-hashmap",
                "content": "```\\nconst findShortestSubArray = nums => {\\n   let map = {}, degree = 0, minLen = Infinity;\\n    \\n    for (let i = 0; i < nums.length; i++) {\\n        let n = nums[i];\\n        \\n        if (map[n] !== undefined) { map[n][0]++; } \\n        else { map[n] = [1, i]; }\\n        \\n        if (map[n][0] > degree) {\\n            degree = map[n][0];\\n            minLen = i - map[n][1] + 1;\\n        } else if (map[n][0] === degree) {\\n            minLen = Math.min(minLen, i - map[n][1] + 1);\\n        }\\n    }\\n    \\n    return minLen;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nconst findShortestSubArray = nums => {\\n   let map = {}, degree = 0, minLen = Infinity;\\n    \\n    for (let i = 0; i < nums.length; i++) {\\n        let n = nums[i];\\n        \\n        if (map[n] !== undefined) { map[n][0]++; } \\n        else { map[n] = [1, i]; }\\n        \\n        if (map[n][0] > degree) {\\n            degree = map[n][0];\\n            minLen = i - map[n][1] + 1;\\n        } else if (map[n][0] === degree) {\\n            minLen = Math.min(minLen, i - map[n][1] + 1);\\n        }\\n    }\\n    \\n    return minLen;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 108696,
                "title": "c-solution-unordered-map",
                "content": "vector[0] is used to count the times of the value, vector[0] is the start position and vector[1] is the end position.\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, vector<int>> mMap;\\n        \\n        int maxTimes =  0;\\n        for(int i = 0;i<nums.size();++i) {\\n            if(mMap[nums[i]].empty()) {\\n                mMap[nums[i]].push_back(1);\\n                mMap[nums[i]].push_back(i);\\n                mMap[nums[i]].push_back(i);\\n            }\\n            else {\\n                mMap[nums[i]][0]++;\\n                mMap[nums[i]][2] = i;\\n            }\\n            maxTimes = max(maxTimes,mMap[nums[i]][0]);\\n        }\\n        if(maxTimes == 1) return 1;\\n        auto retVal = INT_MAX;\\n        for(auto &val:mMap) {\\n            if((val.second)[0]==maxTimes) retVal = min(retVal,(val.second)[2]-(val.second)[1]+1);\\n        }\\n        if(retVal == INT_MAX) retVal = 1;\\n        return retVal;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, vector<int>> mMap;\\n        \\n        int maxTimes =  0;\\n        for(int i = 0;i<nums.size();++i) {\\n            if(mMap[nums[i]].empty()) {\\n                mMap[nums[i]].push_back(1);\\n                mMap[nums[i]].push_back(i);\\n                mMap[nums[i]].push_back(i);\\n            }\\n            else {\\n                mMap[nums[i]][0]++;\\n                mMap[nums[i]][2] = i;\\n            }\\n            maxTimes = max(maxTimes,mMap[nums[i]][0]);\\n        }\\n        if(maxTimes == 1) return 1;\\n        auto retVal = INT_MAX;\\n        for(auto &val:mMap) {\\n            if((val.second)[0]==maxTimes) retVal = min(retVal,(val.second)[2]-(val.second)[1]+1);\\n        }\\n        if(retVal == INT_MAX) retVal = 1;\\n        return retVal;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3486588,
                "title": "hashing-optimal-code",
                "content": "**optimal code - using struct**\\n\\n---\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        struct Data {\\n            int count = 0;\\n            int firstIdx = -1;\\n            int lastIdx = -1;\\n        };\\n\\n        unordered_map<int, Data> mp;\\n        int n = nums.size();\\n        int maxDeg = 0;\\n\\n        for (int i=0; i<n; i++) {\\n            if (!mp.count(nums[i])) mp[nums[i]].firstIdx = i; // storing first-index\\n            mp[nums[i]].lastIdx = i; // updating last-index\\n            maxDeg = max(maxDeg, ++mp[nums[i]].count); // updating max-frequency\\n        }\\n        \\n        int res = n;\\n        for (const auto &[num, data]: mp) {\\n            if (data.count == maxDeg) {\\n                res = min(res, data.lastIdx - data.firstIdx + 1); \\n            }\\n        }\\n\\n        return res;\\n    }\\n};\\n```\\n\\n**using nested pairs**\\n\\n---\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n\\n        int n = nums.size(), maxf = 0;\\n        unordered_map<int, pair<int, pair<int, int>>> mp;\\n\\n        for (int i=0; i<n; i++) {\\n            if (!mp.count(nums[i])) mp[nums[i]].second.first = i;\\n            mp[nums[i]].second.second = i;\\n            maxf = max(maxf, ++mp[nums[i]].first);\\n        }\\n        \\n        int ans = n;\\n        for (auto i: nums)\\n            if (mp[i].first == maxf)\\n                ans = min(ans, mp[i].second.second - mp[i].second.first + 1);\\n\\n        return ans;\\n    }\\n};\\n```\\n\\n---\\n\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n\\n        int n = nums.size(), maxf = 0;\\n        unordered_map<int, int> freq, lastIdx, firstIdx;\\n\\n        for (int i=0; i<n; i++) {\\n            // stores first index\\n            if (firstIdx.find(nums[i]) == end(firstIdx)) firstIdx[nums[i]] = i;\\n            lastIdx[nums[i]] = i; // updating last index\\n            maxf = max(maxf, ++freq[nums[i]]); // maxf -> stores max frequency\\n        }\\n        \\n        int ans = n;\\n        for (int i=0; i<n; i++)\\n            if (freq[nums[i]] == maxf)\\n                ans = min(ans, lastIdx[nums[i]]-firstIdx[nums[i]]+1);\\n\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        struct Data {\\n            int count = 0;\\n            int firstIdx = -1;\\n            int lastIdx = -1;\\n        };\\n\\n        unordered_map<int, Data> mp;\\n        int n = nums.size();\\n        int maxDeg = 0;\\n\\n        for (int i=0; i<n; i++) {\\n            if (!mp.count(nums[i])) mp[nums[i]].firstIdx = i; // storing first-index\\n            mp[nums[i]].lastIdx = i; // updating last-index\\n            maxDeg = max(maxDeg, ++mp[nums[i]].count); // updating max-frequency\\n        }\\n        \\n        int res = n;\\n        for (const auto &[num, data]: mp) {\\n            if (data.count == maxDeg) {\\n                res = min(res, data.lastIdx - data.firstIdx + 1); \\n            }\\n        }\\n\\n        return res;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n\\n        int n = nums.size(), maxf = 0;\\n        unordered_map<int, pair<int, pair<int, int>>> mp;\\n\\n        for (int i=0; i<n; i++) {\\n            if (!mp.count(nums[i])) mp[nums[i]].second.first = i;\\n            mp[nums[i]].second.second = i;\\n            maxf = max(maxf, ++mp[nums[i]].first);\\n        }\\n        \\n        int ans = n;\\n        for (auto i: nums)\\n            if (mp[i].first == maxf)\\n                ans = min(ans, mp[i].second.second - mp[i].second.first + 1);\\n\\n        return ans;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n\\n        int n = nums.size(), maxf = 0;\\n        unordered_map<int, int> freq, lastIdx, firstIdx;\\n\\n        for (int i=0; i<n; i++) {\\n            // stores first index\\n            if (firstIdx.find(nums[i]) == end(firstIdx)) firstIdx[nums[i]] = i;\\n            lastIdx[nums[i]] = i; // updating last index\\n            maxf = max(maxf, ++freq[nums[i]]); // maxf -> stores max frequency\\n        }\\n        \\n        int ans = n;\\n        for (int i=0; i<n; i++)\\n            if (freq[nums[i]] == maxf)\\n                ans = min(ans, lastIdx[nums[i]]-firstIdx[nums[i]]+1);\\n\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2755963,
                "title": "c-easy-short",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& A) {\\n        unordered_map<int, int> count, first;\\n        int res = 0, degree = 0;\\n        for (int i = 0; i < A.size(); ++i) {\\n            if (first.count(A[i]) == 0) first[A[i]] = i;\\n            if (++count[A[i]] > degree) {\\n                degree = count[A[i]];\\n                res = i - first[A[i]] + 1;\\n            } else if (count[A[i]] == degree)\\n                res = min(res, i - first[A[i]] + 1);\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& A) {\\n        unordered_map<int, int> count, first;\\n        int res = 0, degree = 0;\\n        for (int i = 0; i < A.size(); ++i) {\\n            if (first.count(A[i]) == 0) first[A[i]] = i;\\n            if (++count[A[i]] > degree) {\\n                degree = count[A[i]];\\n                res = i - first[A[i]] + 1;\\n            } else if (count[A[i]] == degree)\\n                res = min(res, i - first[A[i]] + 1);\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2547951,
                "title": "c-explained-in-detail-hashmaps",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int, int> first, last, count;\\n        // Maintaining 3 maps to store first occurence, last occurence and count of numbers\\n        for(int i = 0 ; i < nums.size(); i++)\\n        {\\n            if(first.count(nums[i]) == 0)\\n                first[nums[i]] = i;\\n            last[nums[i]] = i;\\n            count[nums[i]]++;\\n        }\\n        // Finding max frequency element of the array\\n        int max_count = 0;\\n        for(auto i : count)\\n            max_count = max(max_count, i.second);\\n        // ans = to store the ans\\n        int ans = INT_MAX;\\n        // Iterating over the map, and finding the min length of subarray containing the max freq element\\n        // last index - first index of max freq number is our answer\\n        for(auto i : count)\\n        {\\n            if(i.second == max_count)\\n            {\\n                ans = min(ans, last[i.first] - first[i.first] + 1);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int, int> first, last, count;\\n        // Maintaining 3 maps to store first occurence, last occurence and count of numbers\\n        for(int i = 0 ; i < nums.size(); i++)\\n        {\\n            if(first.count(nums[i]) == 0)\\n                first[nums[i]] = i;\\n            last[nums[i]] = i;\\n            count[nums[i]]++;\\n        }\\n        // Finding max frequency element of the array\\n        int max_count = 0;\\n        for(auto i : count)\\n            max_count = max(max_count, i.second);\\n        // ans = to store the ans\\n        int ans = INT_MAX;\\n        // Iterating over the map, and finding the min length of subarray containing the max freq element\\n        // last index - first index of max freq number is our answer\\n        for(auto i : count)\\n        {\\n            if(i.second == max_count)\\n            {\\n                ans = min(ans, last[i.first] - first[i.first] + 1);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2369201,
                "title": "python-solution-with-easy-explanation-beats-99-8",
                "content": "1. We will create 3 Maps i.e **count** which stores frequency of elements, **start** which stores starting index of elements and last is **end** which stores last index of elements\\n2. Then we will get the degree of array i.e. maxm frequency of elements from count.values()\\n3. After that we will iterate through our count and check elements which have maxm frequency\\n4. if we find one, then we will store the distance between the start and last index of it\\n5. at the end we will return the minimum distance.\\n```\\n\\t\\tcount={}\\n        start={}\\n        end={}\\n        for i in range(len(nums)):\\n            if nums[i] not in count:\\n                count[nums[i]]=1\\n                start[nums[i]]=i\\n                end[nums[i]]=i\\n            else:\\n                count[nums[i]]+=1\\n                end[nums[i]]=i\\n        res=[]\\n        maxm=max(list(count.values()))\\n        for i,j in count.items():\\n            if j==maxm:\\n                d=end[i]-start[i]+1\\n                res.append(d)\\n        return min(res)\\n```\\n**Thankyou for reading\\uD83D\\uDC96\\nDont forget to upvote if you liked the explanation!**",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C"
                ],
                "code": "```\\n\\t\\tcount={}\\n        start={}\\n        end={}\\n        for i in range(len(nums)):\\n            if nums[i] not in count:\\n                count[nums[i]]=1\\n                start[nums[i]]=i\\n                end[nums[i]]=i\\n            else:\\n                count[nums[i]]+=1\\n                end[nums[i]]=i\\n        res=[]\\n        maxm=max(list(count.values()))\\n        for i,j in count.items():\\n            if j==maxm:\\n                d=end[i]-start[i]+1\\n                res.append(d)\\n        return min(res)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2207865,
                "title": "java-single-iteration-one-pass-o-n",
                "content": "Java single pass solution. I am maintaining a seenMap which will store the index of first occurence of an array element. Once we get a degree we find the first occurence where that element has occured to calculate the length of subarray. \\n\\nA case could occur where we have two elements having same degree. In that case we find the minimum length. \\n\\n\\n```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        HashMap<Integer,Integer> freqMap = new HashMap<>();\\n        HashMap<Integer,Integer> seenMap = new HashMap<>();\\n        int degree=0;\\n        int minLength=0;\\n        for(int i=0;i<nums.length;i++){\\n            seenMap.putIfAbsent(nums[i],i);// this will store the index of first seen occurence\\n            freqMap.put(nums[i],freqMap.getOrDefault(nums[i],0)+1);\\n            if(degree<freqMap.get(nums[i])){\\n                degree=freqMap.get(nums[i]);\\n                minLength= i-seenMap.get(nums[i])+1;\\n            }\\n            else if(degree==freqMap.get(nums[i])){\\n                minLength= Math.min(minLength,i-seenMap.get(nums[i])+1);\\n            }\\n        }\\n        return minLength;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Hash Table"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        HashMap<Integer,Integer> freqMap = new HashMap<>();\\n        HashMap<Integer,Integer> seenMap = new HashMap<>();\\n        int degree=0;\\n        int minLength=0;\\n        for(int i=0;i<nums.length;i++){\\n            seenMap.putIfAbsent(nums[i],i);// this will store the index of first seen occurence\\n            freqMap.put(nums[i],freqMap.getOrDefault(nums[i],0)+1);\\n            if(degree<freqMap.get(nums[i])){\\n                degree=freqMap.get(nums[i]);\\n                minLength= i-seenMap.get(nums[i])+1;\\n            }\\n            else if(degree==freqMap.get(nums[i])){\\n                minLength= Math.min(minLength,i-seenMap.get(nums[i])+1);\\n            }\\n        }\\n        return minLength;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2162968,
                "title": "c-solution-hashmap-explained-short-simple",
                "content": "**Code:**\\n\\n```\\nclass Solution\\n{\\npublic:\\n    int findShortestSubArray(vector<int> &nums)\\n    {\\n        int n = nums.size();\\n        int mn = n;\\n        int mx = 0;\\n        unordered_map<int, vector<int>> mp;\\n        for (int i = 0; i < n; i++)\\n        {\\n            mp[nums[i]].push_back(i);\\n            int sz = mp[nums[i]].size();\\n            mx = max(mx, sz);\\n        }\\n        for (auto x : mp)\\n        {\\n            int sz = x.second.size();\\n            if (sz == mx)\\n            {\\n                int len = x.second[sz - 1] - x.second[0] + 1;\\n                mn = min(mn, len);\\n            }\\n        }\\n        return mn;\\n    }\\n};\\n\\n/*\\nwe create a map whose key will be the nums[i] and each key will have a vector array which will\\nstore the indexes where nums[i] appeared in nums\\nnow the most occuring element will have the vector of largest size\\nand there can be more than 1 maximum occuring element\\nso in the second for loop we check for the min length of the subarray\\nnote that when we store the indexes in vector array then the index of first occurence of nums[i]=v[0]\\nnd index of last occurence of nums[i]=v[sz-1] where sz is size of v\\nso the subarray length will be v[sz-1]-v[0]+1\\nupdate the min length mn and return it\\n*/\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution\\n{\\npublic:\\n    int findShortestSubArray(vector<int> &nums)\\n    {\\n        int n = nums.size();\\n        int mn = n;\\n        int mx = 0;\\n        unordered_map<int, vector<int>> mp;\\n        for (int i = 0; i < n; i++)\\n        {\\n            mp[nums[i]].push_back(i);\\n            int sz = mp[nums[i]].size();\\n            mx = max(mx, sz);\\n        }\\n        for (auto x : mp)\\n        {\\n            int sz = x.second.size();\\n            if (sz == mx)\\n            {\\n                int len = x.second[sz - 1] - x.second[0] + 1;\\n                mn = min(mn, len);\\n            }\\n        }\\n        return mn;\\n    }\\n};\\n\\n/*\\nwe create a map whose key will be the nums[i] and each key will have a vector array which will\\nstore the indexes where nums[i] appeared in nums\\nnow the most occuring element will have the vector of largest size\\nand there can be more than 1 maximum occuring element\\nso in the second for loop we check for the min length of the subarray\\nnote that when we store the indexes in vector array then the index of first occurence of nums[i]=v[0]\\nnd index of last occurence of nums[i]=v[sz-1] where sz is size of v\\nso the subarray length will be v[sz-1]-v[0]+1\\nupdate the min length mn and return it\\n*/\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2161981,
                "title": "go-simple-solution",
                "content": "```\\nfunc findShortestSubArray(nums []int) int {\\n\\tif len(nums) == 0 {\\n\\t\\treturn 0\\n\\t}\\n\\n\\tm := make(map[int][3]int)\\n\\n\\tfor i, num := range nums {\\n\\t\\tvalue := m[num]\\n\\n\\t\\tif value[0] == 0 {\\n\\t\\t\\tvalue[0]++\\n\\t\\t\\tvalue[1] = i\\n\\t\\t\\tvalue[2] = -1\\n\\t\\t} else {\\n\\t\\t\\tvalue[0]++\\n\\t\\t\\tvalue[2] = i\\n\\t\\t}\\n\\n\\t\\tm[num] = value\\n\\t}\\n\\n\\tres := 1\\n\\n\\tvalue := m[nums[0]]\\n\\tfrequency := value[0]\\n\\n\\tif value[2] != -1 {\\n\\t\\tres = value[2] - value[1] + 1\\n\\t}\\n\\n\\tfor i := 1; i < len(nums); i++ {\\n\\t\\ttriple := m[nums[i]]\\n\\n\\t\\tif triple[2] != -1 {\\n\\t\\t\\tif triple[0] > frequency {\\n\\t\\t\\t\\tfrequency = triple[0]\\n                res = triple[2] - triple[1] + 1\\n\\t\\t\\t} else if triple[0] == frequency {\\n\\t\\t\\t\\tif triple[2]-triple[1]+1 < res {\\n\\t\\t\\t\\t\\tres = triple[2] - triple[1] + 1\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn res\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc findShortestSubArray(nums []int) int {\\n\\tif len(nums) == 0 {\\n\\t\\treturn 0\\n\\t}\\n\\n\\tm := make(map[int][3]int)\\n\\n\\tfor i, num := range nums {\\n\\t\\tvalue := m[num]\\n\\n\\t\\tif value[0] == 0 {\\n\\t\\t\\tvalue[0]++\\n\\t\\t\\tvalue[1] = i\\n\\t\\t\\tvalue[2] = -1\\n\\t\\t} else {\\n\\t\\t\\tvalue[0]++\\n\\t\\t\\tvalue[2] = i\\n\\t\\t}\\n\\n\\t\\tm[num] = value\\n\\t}\\n\\n\\tres := 1\\n\\n\\tvalue := m[nums[0]]\\n\\tfrequency := value[0]\\n\\n\\tif value[2] != -1 {\\n\\t\\tres = value[2] - value[1] + 1\\n\\t}\\n\\n\\tfor i := 1; i < len(nums); i++ {\\n\\t\\ttriple := m[nums[i]]\\n\\n\\t\\tif triple[2] != -1 {\\n\\t\\t\\tif triple[0] > frequency {\\n\\t\\t\\t\\tfrequency = triple[0]\\n                res = triple[2] - triple[1] + 1\\n\\t\\t\\t} else if triple[0] == frequency {\\n\\t\\t\\t\\tif triple[2]-triple[1]+1 < res {\\n\\t\\t\\t\\t\\tres = triple[2] - triple[1] + 1\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn res\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1300574,
                "title": "python-solution-using-hash-map-easy-one",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        f = defaultdict(int)\\n        ma=0\\n        d={}\\n        n = len(nums)\\n        \\n        \\n        for j in range(n):\\n            \\n            f[nums[j]]+=1\\n            \\n            if nums[j] not in d:\\n                d[nums[j]] = [j,j]\\n            else:\\n                d[nums[j]][0] = min(d[nums[j]][0],j)\\n                d[nums[j]][1] = max(d[nums[j]][1],j)\\n            \\n            ma = max(f[nums[j]],ma)\\n            \\n            \\n        ans=9999999999\\n        for k in set(nums):\\n            if f[k] == ma:\\n                ans= min(ans,  d[k][1]-d[k][0]+1)\\n                \\n        return ans\\n            \\n            \\n            \\n        \\n        \\n        \\n        \\n        \\n        \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        f = defaultdict(int)\\n        ma=0\\n        d={}\\n        n = len(nums)\\n        \\n        \\n        for j in range(n):\\n            \\n            f[nums[j]]+=1\\n            \\n            if nums[j] not in d:\\n                d[nums[j]] = [j,j]\\n            else:\\n                d[nums[j]][0] = min(d[nums[j]][0],j)\\n                d[nums[j]][1] = max(d[nums[j]][1],j)\\n            \\n            ma = max(f[nums[j]],ma)\\n            \\n            \\n        ans=9999999999\\n        for k in set(nums):\\n            if f[k] == ma:\\n                ans= min(ans,  d[k][1]-d[k][0]+1)\\n                \\n        return ans\\n            \\n            \\n            \\n        \\n        \\n        \\n        \\n        \\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1168066,
                "title": "golang-o-n-solution",
                "content": "``` go\\nfunc findShortestSubArray(nums []int) int {\\n\\tres := 1\\n\\tstarts := make(map[int]int)\\n\\tcounters, maxCounter := make(map[int]int), 1\\n\\n\\tfor i, num := range nums {\\n\\t\\tif _, ok := starts[num]; ok {\\n\\t\\t\\tcounters[num]++\\n\\t\\t\\tif counters[num] > maxCounter {\\n\\t\\t\\t\\tmaxCounter = counters[num]\\n\\t\\t\\t\\tres = i - starts[num] + 1\\n\\t\\t\\t} else if counters[num] == maxCounter && i - starts[num] < res {\\n\\t\\t\\t\\tres = i - starts[num] + 1\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tstarts[num], counters[num] = i, 1\\n\\t\\t}\\n\\t}\\n\\treturn res\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "``` go\\nfunc findShortestSubArray(nums []int) int {\\n\\tres := 1\\n\\tstarts := make(map[int]int)\\n\\tcounters, maxCounter := make(map[int]int), 1\\n\\n\\tfor i, num := range nums {\\n\\t\\tif _, ok := starts[num]; ok {\\n\\t\\t\\tcounters[num]++\\n\\t\\t\\tif counters[num] > maxCounter {\\n\\t\\t\\t\\tmaxCounter = counters[num]\\n\\t\\t\\t\\tres = i - starts[num] + 1\\n\\t\\t\\t} else if counters[num] == maxCounter && i - starts[num] < res {\\n\\t\\t\\t\\tres = i - starts[num] + 1\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tstarts[num], counters[num] = i, 1\\n\\t\\t}\\n\\t}\\n\\treturn res\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 467706,
                "title": "easy-to-understand-python-solution",
                "content": "```python\\ndef findShortestSubArray(self, nums: List[int]) -> int:\\n\\tmin_length = 0\\n\\tdegree = 0\\n\\tcount = {}\\n\\tfirst_seen = {}\\n\\n\\tfor i, n in enumerate(nums): \\n\\t\\tif n not in first_seen: \\n\\t\\t\\tfirst_seen[n] = i\\n\\n\\t\\tcount[n] = count.get(n, 0) + 1\\n\\t\\tif count[n] > degree: \\n\\t\\t\\tdegree = count[n]\\n\\t\\t\\tmin_length = (i - first_seen[n]) + 1\\n\\t\\telif count[n] == degree: \\n\\t\\t\\tmin_length = min(min_length, (i - first_seen[n]) + 1)\\n\\n\\treturn min_length\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```python\\ndef findShortestSubArray(self, nums: List[int]) -> int:\\n\\tmin_length = 0\\n\\tdegree = 0\\n\\tcount = {}\\n\\tfirst_seen = {}\\n\\n\\tfor i, n in enumerate(nums): \\n\\t\\tif n not in first_seen: \\n\\t\\t\\tfirst_seen[n] = i\\n\\n\\t\\tcount[n] = count.get(n, 0) + 1\\n\\t\\tif count[n] > degree: \\n\\t\\t\\tdegree = count[n]\\n\\t\\t\\tmin_length = (i - first_seen[n]) + 1\\n\\t\\telif count[n] == degree: \\n\\t\\t\\tmin_length = min(min_length, (i - first_seen[n]) + 1)\\n\\n\\treturn min_length\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 202980,
                "title": "two-hash-map-to-deal-with-this-problem-o-n",
                "content": "```\\nauto __ =[]()\\n{\\n    std::ios::sync_with_stdio(false);\\n    cin.tie(nullptr);\\n    return nullptr;\\n}();\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        if(nums.size() == 0)\\n        {\\n            return 0;\\n        }\\n        unordered_map<int,int> sets;\\n        int max = INT_MIN;\\n        unordered_map<int,int> beg;\\n        unordered_map<int,int> end;\\n        int cnt = 0;\\n        for(auto num : nums)\\n        {\\n            sets[num]++;\\n            if(!beg.count(num))\\n            {\\n                beg[num] = cnt;\\n            }\\n            max = max>sets[num]?max:sets[num];\\n            end[num] = cnt;\\n            cnt++;\\n        }\\n        int retv = INT_MAX;\\n        for(auto ele:sets)\\n        {\\n            if(ele.second == max)\\n            {\\n                retv = retv<end[ele.first]-beg[ele.first]+1?retv:end[ele.first]-beg[ele.first]+1;\\n                \\n            }\\n        }\\n        return retv;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nauto __ =[]()\\n{\\n    std::ios::sync_with_stdio(false);\\n    cin.tie(nullptr);\\n    return nullptr;\\n}();\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        if(nums.size() == 0)\\n        {\\n            return 0;\\n        }\\n        unordered_map<int,int> sets;\\n        int max = INT_MIN;\\n        unordered_map<int,int> beg;\\n        unordered_map<int,int> end;\\n        int cnt = 0;\\n        for(auto num : nums)\\n        {\\n            sets[num]++;\\n            if(!beg.count(num))\\n            {\\n                beg[num] = cnt;\\n            }\\n            max = max>sets[num]?max:sets[num];\\n            end[num] = cnt;\\n            cnt++;\\n        }\\n        int retv = INT_MAX;\\n        for(auto ele:sets)\\n        {\\n            if(ele.second == max)\\n            {\\n                retv = retv<end[ele.first]-beg[ele.first]+1?retv:end[ele.first]-beg[ele.first]+1;\\n                \\n            }\\n        }\\n        return retv;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 187222,
                "title": "javascript-map-o-n",
                "content": "```\\nvar findShortestSubArray = function(nums) {\\n    let map = new Map();\\n    let result = null;\\n    nums.forEach((value, index) => {\\n        if(!map.has(value)) {\\n            map.set(value, {\\'de\\': 1, \\'dis\\': 0, \\'begin\\': index});\\n        } else {\\n            let obj = map.get(value);\\n            ++ obj.de;\\n            obj.dis = index - obj.begin + 1;\\n        }\\n    });\\n    for(let value of map.values()) {\\n        if(value.de > degreeCnt) {\\n            degreeCnt = value.de;\\n            result = value.dis;\\n        } else if(value.de == degreeCnt) {\\n            result = Math.min(value.dis, result);\\n        }\\n    }\\n\\n    return result || 1;\\n    \\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar findShortestSubArray = function(nums) {\\n    let map = new Map();\\n    let result = null;\\n    nums.forEach((value, index) => {\\n        if(!map.has(value)) {\\n            map.set(value, {\\'de\\': 1, \\'dis\\': 0, \\'begin\\': index});\\n        } else {\\n            let obj = map.get(value);\\n            ++ obj.de;\\n            obj.dis = index - obj.begin + 1;\\n        }\\n    });\\n    for(let value of map.values()) {\\n        if(value.de > degreeCnt) {\\n            degreeCnt = value.de;\\n            result = value.dis;\\n        } else if(value.de == degreeCnt) {\\n            result = Math.min(value.dis, result);\\n        }\\n    }\\n\\n    return result || 1;\\n    \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 151263,
                "title": "python3-56ms-99-89",
                "content": "```\\nfrom collections import Counter\\n\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        counter = Counter(nums)\\n        degree = counter.most_common(1)[0][1]\\n\\n        if degree == 1:\\n            return 1\\n\\n        most_frequent = []\\n        for num, freq in counter.most_common():\\n            if freq == degree:\\n                most_frequent.append(num)\\n            else:\\n                break\\n\\n        sizes = []\\n        for i in most_frequent:\\n            sizes.append(len(nums) - nums.index(i) - nums[::-1].index(i))\\n\\n        return min(sizes)\\n```",
                "solutionTags": [],
                "code": "```\\nfrom collections import Counter\\n\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        counter = Counter(nums)\\n        degree = counter.most_common(1)[0][1]\\n\\n        if degree == 1:\\n            return 1\\n\\n        most_frequent = []\\n        for num, freq in counter.most_common():\\n            if freq == degree:\\n                most_frequent.append(num)\\n            else:\\n                break\\n\\n        sizes = []\\n        for i in most_frequent:\\n            sizes.append(len(nums) - nums.index(i) - nums[::-1].index(i))\\n\\n        return min(sizes)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 108662,
                "title": "o-n-and-o-n-space-using-hashmap-and-sliding-window",
                "content": "I think the code is self-explanatory\\n```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        //Find maximum frequency \\n        HashMap<Integer,Integer> hmap = new HashMap<>();\\n        int max = 0;\\n        for(int i:nums){\\n            int count = hmap.getOrDefault(i,0)+1;\\n            max = Math.max(max,count);\\n            hmap.put(i,count);\\n        }\\n        //Use sliding window\\n        hmap = new HashMap<>();\\n        int i=0;\\n        int min = Integer.MAX_VALUE;\\n        for(int j=0;j<nums.length;j++){\\n            int count = hmap.getOrDefault(nums[j],0)+1;\\n            hmap.put(nums[j],count);\\n            while(hmap.get(nums[j])==max){\\n                min = Math.min(min,j-i+1);\\n                hmap.put(nums[i],hmap.get(nums[i])-1);\\n                i++;\\n            }\\n            \\n        }\\n        return min;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        //Find maximum frequency \\n        HashMap<Integer,Integer> hmap = new HashMap<>();\\n        int max = 0;\\n        for(int i:nums){\\n            int count = hmap.getOrDefault(i,0)+1;\\n            max = Math.max(max,count);\\n            hmap.put(i,count);\\n        }\\n        //Use sliding window\\n        hmap = new HashMap<>();\\n        int i=0;\\n        int min = Integer.MAX_VALUE;\\n        for(int j=0;j<nums.length;j++){\\n            int count = hmap.getOrDefault(nums[j],0)+1;\\n            hmap.put(nums[j],count);\\n            while(hmap.get(nums[j])==max){\\n                min = Math.min(min,j-i+1);\\n                hmap.put(nums[i],hmap.get(nums[i])-1);\\n                i++;\\n            }\\n            \\n        }\\n        return min;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 108670,
                "title": "11-lines-c-o-n-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, int>idx, cnt;\\n        int degree = 0, minlen = nums.size();\\n        for(int i = 0; i < nums.size(); i++){\\n            if(!idx.count(nums[i])) idx[nums[i]] = i;\\n            if(++cnt[nums[i]] == degree) minlen = min(minlen, i - idx[nums[i]] + 1);\\n            if(cnt[nums[i]] > degree){\\n                degree = cnt[nums[i]];\\n                minlen = i - idx[nums[i]] + 1;\\n            }\\n        }\\n        return minlen;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, int>idx, cnt;\\n        int degree = 0, minlen = nums.size();\\n        for(int i = 0; i < nums.size(); i++){\\n            if(!idx.count(nums[i])) idx[nums[i]] = i;\\n            if(++cnt[nums[i]] == degree) minlen = min(minlen, i - idx[nums[i]] + 1);\\n            if(cnt[nums[i]] > degree){\\n                degree = cnt[nums[i]];\\n                minlen = i - idx[nums[i]] + 1;\\n            }\\n        }\\n        return minlen;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3827096,
                "title": "c-solution-with-explanation-maps",
                "content": "# Intuition\\n#### **To find the smallest possible length of a (contiguous) subarray of nums, that has the same degree as nums, first we need to calculate the maximum frequency and the element with maximum frequency. Then store the starting and eneding index of every element. Then find out the minimum length subarray , which is also one of the element with maximum freequency.**\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums){\\n       \\n       int n = nums.size();\\n       map<int, int>freq;         //[number , freq]      \\n       int maxFreq = INT_MIN;\\n\\n       for(int i=0 ; i<n ; i++)\\n       {\\n           freq[nums[i]]++;\\n           maxFreq = max(maxFreq, freq[nums[i]]);\\n       }\\n\\n       set<int>st;   //contains elements with maximum freq\\n\\n       for(auto it : freq)\\n       {\\n           if(it.second == maxFreq)\\n           {\\n               st.insert(it.first);\\n           }\\n       }\\n\\n       map<int, int>startInd, endInd;    //[element , starting index]\\n\\n       for(int i=0 ; i<n ; i++)\\n       {\\n           startInd[nums[i]] = -1;\\n           endInd[nums[i]] = -1;\\n\\n       }\\n\\n       for(int i=0 ; i<n; i++)\\n       {\\n           if(startInd[nums[i]] == -1)\\n           {\\n               //it\\'s the first time the element has occured\\n               startInd[nums[i]] = i;\\n           }\\n       }\\n\\n       for(int i=n-1 ; i>=0 ; i--)\\n       {\\n           if(endInd[nums[i]] == -1)\\n           {\\n               //last index\\n               endInd[nums[i]] = i;\\n           }\\n       }\\n\\n       int len = INT_MAX;\\n\\n       for(int i=0 ; i<n ; i++)\\n       {\\n           if(st.find(nums[i]) != st.end())     //only maxFreq element \\n           {\\n\\n              len = min(len , endInd[nums[i]] - startInd[nums[i]] + 1);\\n           }\\n       }\\n\\n       return len;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Ordered Map"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums){\\n       \\n       int n = nums.size();\\n       map<int, int>freq;         //[number , freq]      \\n       int maxFreq = INT_MIN;\\n\\n       for(int i=0 ; i<n ; i++)\\n       {\\n           freq[nums[i]]++;\\n           maxFreq = max(maxFreq, freq[nums[i]]);\\n       }\\n\\n       set<int>st;   //contains elements with maximum freq\\n\\n       for(auto it : freq)\\n       {\\n           if(it.second == maxFreq)\\n           {\\n               st.insert(it.first);\\n           }\\n       }\\n\\n       map<int, int>startInd, endInd;    //[element , starting index]\\n\\n       for(int i=0 ; i<n ; i++)\\n       {\\n           startInd[nums[i]] = -1;\\n           endInd[nums[i]] = -1;\\n\\n       }\\n\\n       for(int i=0 ; i<n; i++)\\n       {\\n           if(startInd[nums[i]] == -1)\\n           {\\n               //it\\'s the first time the element has occured\\n               startInd[nums[i]] = i;\\n           }\\n       }\\n\\n       for(int i=n-1 ; i>=0 ; i--)\\n       {\\n           if(endInd[nums[i]] == -1)\\n           {\\n               //last index\\n               endInd[nums[i]] = i;\\n           }\\n       }\\n\\n       int len = INT_MAX;\\n\\n       for(int i=0 ; i<n ; i++)\\n       {\\n           if(st.find(nums[i]) != st.end())     //only maxFreq element \\n           {\\n\\n              len = min(len , endInd[nums[i]] - startInd[nums[i]] + 1);\\n           }\\n       }\\n\\n       return len;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3519870,
                "title": "simple-and-easy-solution-in-javascript-wow-0-almost-looks-like-to-editorial-but-in-js-0-0",
                "content": "\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nfunction findShortestSubArray(nums) {\\n    let left = {}, right = {}, count = {};\\n    for (let i = 0; i < nums.length; i++) {\\n        let x = nums[i];\\n        if (left[x] === undefined) left[x] = i;\\n        right[x] = i;\\n        count[x] = (count[x] || 0) + 1;\\n    }\\n    let ans = nums.length;\\n    let degree = Math.max(...Object.values(count));\\n    for (let x in count) {\\n        if (count[x] === degree) {\\n            ans = Math.min(ans, right[x] - left[x] + 1);\\n        }\\n    }\\n    return ans;\\n}\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nfunction findShortestSubArray(nums) {\\n    let left = {}, right = {}, count = {};\\n    for (let i = 0; i < nums.length; i++) {\\n        let x = nums[i];\\n        if (left[x] === undefined) left[x] = i;\\n        right[x] = i;\\n        count[x] = (count[x] || 0) + 1;\\n    }\\n    let ans = nums.length;\\n    let degree = Math.max(...Object.values(count));\\n    for (let x in count) {\\n        if (count[x] === degree) {\\n            ans = Math.min(ans, right[x] - left[x] + 1);\\n        }\\n    }\\n    return ans;\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3493915,
                "title": "c-solution-maps",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int,int> mp;\\n        set<int> st;\\n        for (int i=0; i<nums.size(); i++)mp[nums[i]]++;\\n        int mx=0;\\n        for (auto vl: mp){\\n            mx= max(mx,vl.second);\\n        }\\n        for (auto vl: mp){\\n            if (vl.second==mx)st.insert(vl.first);\\n        }\\n        int i=0; int j= nums.size()-1;\\n        while (!st.empty()){\\n            while (i<nums.size() && st.find(nums[i])==st.end()){\\n                i++;\\n            }\\n            while (j>=0 && st.find(nums[j])==st.end()){\\n                j--;\\n            }\\n            st.erase(nums[i]);\\n            if (st.size()==0)break;\\n            i++;\\n        }\\n        for (auto vl: mp){\\n            if (vl.second==mx)st.insert(vl.first);\\n        }\\n        int i1=0; int j1= nums.size()-1;\\n        while (!st.empty()){\\n            while (i1<nums.size() && st.find(nums[i1])==st.end()){\\n                i1++;\\n            }\\n            while (j1>=0 && st.find(nums[j1])==st.end()){\\n                j1--;\\n            }\\n            st.erase(nums[j1]);\\n            if (st.size()==0)break;\\n            j1--;\\n        }\\n        \\n        return min(j-i+1,j1-i1+1);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Hash Table",
                    "Simulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int,int> mp;\\n        set<int> st;\\n        for (int i=0; i<nums.size(); i++)mp[nums[i]]++;\\n        int mx=0;\\n        for (auto vl: mp){\\n            mx= max(mx,vl.second);\\n        }\\n        for (auto vl: mp){\\n            if (vl.second==mx)st.insert(vl.first);\\n        }\\n        int i=0; int j= nums.size()-1;\\n        while (!st.empty()){\\n            while (i<nums.size() && st.find(nums[i])==st.end()){\\n                i++;\\n            }\\n            while (j>=0 && st.find(nums[j])==st.end()){\\n                j--;\\n            }\\n            st.erase(nums[i]);\\n            if (st.size()==0)break;\\n            i++;\\n        }\\n        for (auto vl: mp){\\n            if (vl.second==mx)st.insert(vl.first);\\n        }\\n        int i1=0; int j1= nums.size()-1;\\n        while (!st.empty()){\\n            while (i1<nums.size() && st.find(nums[i1])==st.end()){\\n                i1++;\\n            }\\n            while (j1>=0 && st.find(nums[j1])==st.end()){\\n                j1--;\\n            }\\n            st.erase(nums[j1]);\\n            if (st.size()==0)break;\\n            j1--;\\n        }\\n        \\n        return min(j-i+1,j1-i1+1);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3437968,
                "title": "solution",
                "content": "```C++ []\\n#include <tuple>\\n\\nclass Solution {\\n    struct Info {\\n        int count;\\n        int startIdx;\\n        int endIdx;\\n\\n        void updateEnd(int end) {\\n            endIdx = end;\\n            ++count;\\n        }\\n        int range() const {\\n            return endIdx - startIdx + 1;\\n        }\\n    };\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, Info> cache; // num, <count, startIdx, endIdx>\\n\\n        for (int i = 0; i < nums.size(); ++i) {\\n            if (cache.find(nums[i]) != cache.end()) {\\n                cache[nums[i]].updateEnd(i);\\n            }\\n            else {\\n                cache[nums[i]] = Info{1, i, i};\\n            }\\n        }\\n        int count = 0;\\n        int shorted = 0;\\n        for (auto& [k, v] : cache) {\\n            if (count < v.count) {\\n                count = v.count;\\n\\n                shorted = v.range();\\n            }\\n            else if (count == v.count) {\\n                if (shorted > v.range()) {\\n                    shorted = v.range();\\n                }\\n            }\\n        }\\n        return shorted;\\n    }\\n};\\n```\\n\\n```Python3 []\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        f = collections.Counter(nums)\\n        d = max(f.values())\\n        if d == 1:\\n            return(1)\\n        nums_f = [n for n in f if f[n] == d]\\n        ans = len(nums)\\n        for n in nums_f:\\n            li = nums.index(n)\\n            ri = len(nums) - nums[::-1].index(n)\\n            ans = min(ans, ri - li)\\n        return(ans)\\n```\\n\\n```Java []\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        int max = -1;\\n        for (int i=0; i<nums.length;i++)\\n            if (nums[i] > max) max = nums[i];\\n\\n        MinMax [] minmax = new MinMax[max + 1];\\n        int maxfreq = 0;\\n        for (int i=0; i<nums.length;i++) {\\n            if (minmax[nums[i]] == null)\\n                minmax[nums[i]] = new MinMax(i);\\n            minmax[nums[i]].max = i;\\n            minmax[nums[i]].count++;\\n\\n            if (minmax[nums[i]].count > maxfreq)\\n                maxfreq = minmax[nums[i]].count;\\n        }\\n        int minarray = Integer.MAX_VALUE;\\n        for (int i=0; i<minmax.length;i++) {\\n            if (minmax[i] != null && minmax[i].count == maxfreq)\\n                minarray = Math.min(minarray, minmax[i].max - minmax[i].min + 1);\\n        }\\n        return minarray;\\n    }\\n    private class MinMax {\\n        int count = 0;\\n        int min = -1;\\n        int max = -1;\\n\\n        public MinMax(int i) {\\n            min = i;\\n            max = i;\\n        }\\n    }\\n}\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3"
                ],
                "code": "```C++ []\\n#include <tuple>\\n\\nclass Solution {\\n    struct Info {\\n        int count;\\n        int startIdx;\\n        int endIdx;\\n\\n        void updateEnd(int end) {\\n            endIdx = end;\\n            ++count;\\n        }\\n        int range() const {\\n            return endIdx - startIdx + 1;\\n        }\\n    };\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, Info> cache; // num, <count, startIdx, endIdx>\\n\\n        for (int i = 0; i < nums.size(); ++i) {\\n            if (cache.find(nums[i]) != cache.end()) {\\n                cache[nums[i]].updateEnd(i);\\n            }\\n            else {\\n                cache[nums[i]] = Info{1, i, i};\\n            }\\n        }\\n        int count = 0;\\n        int shorted = 0;\\n        for (auto& [k, v] : cache) {\\n            if (count < v.count) {\\n                count = v.count;\\n\\n                shorted = v.range();\\n            }\\n            else if (count == v.count) {\\n                if (shorted > v.range()) {\\n                    shorted = v.range();\\n                }\\n            }\\n        }\\n        return shorted;\\n    }\\n};\\n```\n```Python3 []\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        f = collections.Counter(nums)\\n        d = max(f.values())\\n        if d == 1:\\n            return(1)\\n        nums_f = [n for n in f if f[n] == d]\\n        ans = len(nums)\\n        for n in nums_f:\\n            li = nums.index(n)\\n            ri = len(nums) - nums[::-1].index(n)\\n            ans = min(ans, ri - li)\\n        return(ans)\\n```\n```Java []\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        int max = -1;\\n        for (int i=0; i<nums.length;i++)\\n            if (nums[i] > max) max = nums[i];\\n\\n        MinMax [] minmax = new MinMax[max + 1];\\n        int maxfreq = 0;\\n        for (int i=0; i<nums.length;i++) {\\n            if (minmax[nums[i]] == null)\\n                minmax[nums[i]] = new MinMax(i);\\n            minmax[nums[i]].max = i;\\n            minmax[nums[i]].count++;\\n\\n            if (minmax[nums[i]].count > maxfreq)\\n                maxfreq = minmax[nums[i]].count;\\n        }\\n        int minarray = Integer.MAX_VALUE;\\n        for (int i=0; i<minmax.length;i++) {\\n            if (minmax[i] != null && minmax[i].count == maxfreq)\\n                minarray = Math.min(minarray, minmax[i].max - minmax[i].min + 1);\\n        }\\n        return minarray;\\n    }\\n    private class MinMax {\\n        int count = 0;\\n        int min = -1;\\n        int max = -1;\\n\\n        public MinMax(int i) {\\n            min = i;\\n            max = i;\\n        }\\n    }\\n}\\n```",
                "codeTag": "C++"
            },
            {
                "id": 3408080,
                "title": "simplest-and-easy-to-understand-python-solution",
                "content": "First we will find three things:\\n1. freq of each element\\n2. Maximun frequency\\n3. First occurance of each element. \\n\\nThen we will start from the back end of the array. When we see an element we will check if it is the most freq element or not.\\n**``freqMap[nums[i]] == maxFreq``**\\n\\nIf yes then we will take the current index and subtract the\\nfirst occurance of this element plus 1(because of 0-indexing). \\nIf this is less than the already found contiguousSubarray the we save it.\\n**``contiguousSubarray = min(contiguousSubarray, i-firstOccurance[nums[i]]+1)``**\\nWe will also decrease its freq by 1, so that when we encounter it again,\\n**``freqMap[nums[i]] == maxFreq``** is not satisfied.\\n\\n\\nSee the code below:\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        firstOccurance = {}\\n        freqMap = {}\\n        maxFreq = -inf\\n        for i in range(len(nums)):\\n            if nums[i] not in firstOccurance:\\n                firstOccurance[nums[i]] = i\\n                \\n            if nums[i] in freqMap:\\n                freqMap[nums[i]] += 1\\n            else:\\n                freqMap[nums[i]] = 1\\n            maxFreq = max(maxFreq, freqMap[nums[i]])\\n\\n        contiguousSubarray = inf\\n        for i in range(len(nums)-1, -1, -1):\\n            if freqMap[nums[i]] == maxFreq:\\n                contiguousSubarray = min(contiguousSubarray, i-firstOccurance[nums[i]]+1)\\n                freqMap[nums[i]] -= 1\\n            \\n        return contiguousSubarray\\n```\\n\\nAnother solution is to just use a single pass to do all this. \\nWe will go thorugh the array, we will keep storing the first index of elements. \\nWe will also keep increasing the freq of the elements. \\nWe will also keep updating maxFreq. \\nIf maxFreq at any point less the current element\\'s freq \\n**```freqMap[nums[i]] > maxFreq```**\\nThen we will update maxFreq and take this elements first and current positions\\ndifference as the answer. \\n\\nIf mazFreq is same as current freq then we might have an element with same freq as \\nthe most freq element.\\n**```freqMap[nums[i]] == maxFreq```**\\nIn this case we will take res as min of res and take this elements first and current positions difference as the answer. \\n\\nSee the code:\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        firstOccurance = {}\\n        freqMap = {}\\n        maxFreq = -inf\\n        contiguousSubarray = 0\\n        \\n        for i in range(len(nums)):\\n            if nums[i] not in firstOccurance:\\n                firstOccurance[nums[i]] = i \\n                \\n            if nums[i] in freqMap:\\n                freqMap[nums[i]] += 1\\n            else:\\n                freqMap[nums[i]] = 1\\n            \\n            if freqMap[nums[i]] > maxFreq:\\n                maxFreq = freqMap[nums[i]]\\n                contiguousSubarray = i - firstOccurance[nums[i]] + 1\\n            \\n            if freqMap[nums[i]] == maxFreq:\\n                contiguousSubarray = min(contiguousSubarray, i-firstOccurance[nums[i]]+1)\\n                \\n        return contiguousSubarray\\n```\\n\\nLet me know if any questions. \\n\\n\\n\\t\\n",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        firstOccurance = {}\\n        freqMap = {}\\n        maxFreq = -inf\\n        for i in range(len(nums)):\\n            if nums[i] not in firstOccurance:\\n                firstOccurance[nums[i]] = i\\n                \\n            if nums[i] in freqMap:\\n                freqMap[nums[i]] += 1\\n            else:\\n                freqMap[nums[i]] = 1\\n            maxFreq = max(maxFreq, freqMap[nums[i]])\\n\\n        contiguousSubarray = inf\\n        for i in range(len(nums)-1, -1, -1):\\n            if freqMap[nums[i]] == maxFreq:\\n                contiguousSubarray = min(contiguousSubarray, i-firstOccurance[nums[i]]+1)\\n                freqMap[nums[i]] -= 1\\n            \\n        return contiguousSubarray\\n```\n```freqMap[nums[i]] > maxFreq```\n```freqMap[nums[i]] == maxFreq```\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        firstOccurance = {}\\n        freqMap = {}\\n        maxFreq = -inf\\n        contiguousSubarray = 0\\n        \\n        for i in range(len(nums)):\\n            if nums[i] not in firstOccurance:\\n                firstOccurance[nums[i]] = i \\n                \\n            if nums[i] in freqMap:\\n                freqMap[nums[i]] += 1\\n            else:\\n                freqMap[nums[i]] = 1\\n            \\n            if freqMap[nums[i]] > maxFreq:\\n                maxFreq = freqMap[nums[i]]\\n                contiguousSubarray = i - firstOccurance[nums[i]] + 1\\n            \\n            if freqMap[nums[i]] == maxFreq:\\n                contiguousSubarray = min(contiguousSubarray, i-firstOccurance[nums[i]]+1)\\n                \\n        return contiguousSubarray\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3323145,
                "title": "697-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n1. Initialize variables:\\n- degree to 0\\n- degree_nums dictionary to track the frequency of each number in nums\\n- left dictionary to track the leftmost index of each number in nums\\n- right dictionary to track the rightmost index of each number in nums\\n- shortest to the length of nums\\n2. Traverse through nums using the enumerate function:\\n- If the current number num is not in degree_nums, add it with frequency 1\\n- Otherwise, increment the frequency of num in degree_nums\\n- Update the degree variable to be the maximum frequency in degree_nums\\n- If num is not in left, add it with index i as the leftmost occurrence\\n- Update right[num] to the current index i\\n3. Iterate over the degree_nums dictionary to find the numbers with frequency equal to degree:\\n- For each number num with frequency freq equal to degree, calculate the length of the subarray with num as the degree using right[num] - left[num] + 1\\n- Update shortest to the minimum of its current value and the subarray length\\n4. Return shortest as the answer\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        # Initialize variables\\n        degree = 0\\n        degree_nums = {}\\n        left = {}\\n        right = {}\\n        shortest = len(nums)\\n        \\n        # Traverse through the array\\n        for i, num in enumerate(nums):\\n            # Update degree and degree_nums\\n            if num in degree_nums:\\n                degree_nums[num] += 1\\n            else:\\n                degree_nums[num] = 1\\n            degree = max(degree, degree_nums[num])\\n            \\n            # Update left and right\\n            if num not in left:\\n                left[num] = i\\n            right[num] = i\\n                \\n        # Find the shortest subarray with degree\\n        for num, freq in degree_nums.items():\\n            if freq == degree:\\n                shortest = min(shortest, right[num] - left[num] + 1)\\n        \\n        # Return the shortest subarray length\\n        return shortest\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Hash Table"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        # Initialize variables\\n        degree = 0\\n        degree_nums = {}\\n        left = {}\\n        right = {}\\n        shortest = len(nums)\\n        \\n        # Traverse through the array\\n        for i, num in enumerate(nums):\\n            # Update degree and degree_nums\\n            if num in degree_nums:\\n                degree_nums[num] += 1\\n            else:\\n                degree_nums[num] = 1\\n            degree = max(degree, degree_nums[num])\\n            \\n            # Update left and right\\n            if num not in left:\\n                left[num] = i\\n            right[num] = i\\n                \\n        # Find the shortest subarray with degree\\n        for num, freq in degree_nums.items():\\n            if freq == degree:\\n                shortest = min(shortest, right[num] - left[num] + 1)\\n        \\n        # Return the shortest subarray length\\n        return shortest\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2980777,
                "title": "easy-approach-beats-72-55ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nStore first index of all the unique elements in a frequency vector and store the maximum frequency in a variable. Use a hash map to store frequency of all elements, whenever the frequency of the element becomes equal to the maximum frequency, calculate the size of sub-array it is present in. Calculate the minimum size of sub-array which is present with the stated condition.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nIntution contains the approach in itself. The code is attached for reference.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(nlogn)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) \\n    {\\n        vector<int> temp = nums;\\n        sort(temp.begin() , temp.end());\\n        int count = 1, mx = 1, ans = INT_MAX;\\n        for(int i = 1; i < temp.size(); i++)\\n        {\\n            if(temp[i] == temp[i - 1])\\n            {\\n                count++;\\n                mx = max(mx , count);\\n            }\\n            else\\n            {\\n                count = 1;\\n            }\\n        }\\n        vector<int> index(50000 , -1);\\n        map<int , int> mp;\\n        for(int i = 0; i < nums.size(); i++)\\n        {\\n            if(index[nums[i]] == -1)   index[nums[i]] = i;\\n            mp[nums[i]]++;\\n            if(mp[nums[i]] == mx)\\n            {\\n                ans = min(ans , i - index[nums[i]] + 1);\\n            }\\n        } \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) \\n    {\\n        vector<int> temp = nums;\\n        sort(temp.begin() , temp.end());\\n        int count = 1, mx = 1, ans = INT_MAX;\\n        for(int i = 1; i < temp.size(); i++)\\n        {\\n            if(temp[i] == temp[i - 1])\\n            {\\n                count++;\\n                mx = max(mx , count);\\n            }\\n            else\\n            {\\n                count = 1;\\n            }\\n        }\\n        vector<int> index(50000 , -1);\\n        map<int , int> mp;\\n        for(int i = 0; i < nums.size(); i++)\\n        {\\n            if(index[nums[i]] == -1)   index[nums[i]] = i;\\n            mp[nums[i]]++;\\n            if(mp[nums[i]] == mx)\\n            {\\n                ans = min(ans , i - index[nums[i]] + 1);\\n            }\\n        } \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2972289,
                "title": "python-linear-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        dict1=collections.defaultdict(list)\\n        max_degre=0\\n        res=float(\\'inf\\')\\n        for i in range(len(nums)):\\n            dict1[nums[i]].append(i+1)\\n            max_degre=max(len(dict1[nums[i]]),max_degre)\\n        if max_degre==1:\\n            return 1\\n\\n        for i in dict1:\\n            if len(dict1[i])==max_degre:\\n                res=min(res,dict1[i][-1]-dict1[i][0]+1)\\n        return res\\n\\n\\n\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        dict1=collections.defaultdict(list)\\n        max_degre=0\\n        res=float(\\'inf\\')\\n        for i in range(len(nums)):\\n            dict1[nums[i]].append(i+1)\\n            max_degre=max(len(dict1[nums[i]]),max_degre)\\n        if max_degre==1:\\n            return 1\\n\\n        for i in dict1:\\n            if len(dict1[i])==max_degre:\\n                res=min(res,dict1[i][-1]-dict1[i][0]+1)\\n        return res\\n\\n\\n\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2899095,
                "title": "python-simple-explanation-one-pass-beats-99",
                "content": "# Breaking down problem\\n\\nFor me, personally, a more understandable phrasing of the question is: \\n\"**What is the length of the shortest subarray which contains n repeats of a value, where n is the max occurrences of any value?**\"\\n\\nWe will need a couple of pieces of information to solve this problem:\\n- Highest number of repeats for any given value\\n--- To get this information we will need a count for each value in the list, usually dictionary (hash map) is best way to store key-value pairs. The highest number of repeats will be the highest value stored in this dictionary\\n\\n- List of values that are tied for highest number of occurrences\\n--- After we have filled our occurrence count dictionary we can use it to create a list of all the keys with a value of [max occurrences]\\n\\n- Length of smallest substring containing all repeats of a value for each value in our list of values tied for highest occurrences\\n--- To get this information we need first index and last index of each value. Again, we can create key-value pairs with dictionaries for leftmost and rightmost indeces of each value\\n\\nOnce we have collected our data we can use it to answer the question of \"What is the length of the shortest subarray which contains n repeats of a value, where n is the max occurrences of any value?\".\\n- For each value tied for most occurrences, find the length of its smallest substring containing all repeats of that value.\\n--- We can use our left and right index values to find the smallest substring for each value that we need to check. Rightmost index - leftmost index + 1 will give us the substring length\\n--- Return the length of whichever substring length is the smallest\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        #create a dictionary containing frequency of each num found so far\\n        #create a dictionary containing leftmost index for a given value\\n        #create a dictionary containing rightmost index for a given value\\n        repeatCounts = {}\\n        lefts = {}\\n        rights = {}\\n\\n        #iterate through the list to fill the dictionaries with \\n        #their respective data\\n        for index, i in enumerate(nums):\\n            if i in repeatCounts:\\n                repeatCounts[i] += 1\\n                rights[i] = index\\n            else:\\n                repeatCounts[i] = 1\\n                lefts[i] = index\\n                rights[i] = index\\n\\n        #find highest degree (highest number of repeats for any value in list)\\n        maxRepeats = max(repeatCounts.values())\\n\\n        #form a list of the values which share highest degree\\n        keys = [key for key, value in repeatCounts.items() if value == maxRepeats]\\n\\n        #iterate through the list of values sharing highest degree and find\\n        #the value with smallest difference between its rightmost index and leftmost index\\n        #add one to this value and return it \\n        #because difference tells us distance between indeces (non inclusive) while we\\n        #want to return length of substring\\n        return min([rights[key] - lefts[key] for key in keys]) + 1\\n            \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        #create a dictionary containing frequency of each num found so far\\n        #create a dictionary containing leftmost index for a given value\\n        #create a dictionary containing rightmost index for a given value\\n        repeatCounts = {}\\n        lefts = {}\\n        rights = {}\\n\\n        #iterate through the list to fill the dictionaries with \\n        #their respective data\\n        for index, i in enumerate(nums):\\n            if i in repeatCounts:\\n                repeatCounts[i] += 1\\n                rights[i] = index\\n            else:\\n                repeatCounts[i] = 1\\n                lefts[i] = index\\n                rights[i] = index\\n\\n        #find highest degree (highest number of repeats for any value in list)\\n        maxRepeats = max(repeatCounts.values())\\n\\n        #form a list of the values which share highest degree\\n        keys = [key for key, value in repeatCounts.items() if value == maxRepeats]\\n\\n        #iterate through the list of values sharing highest degree and find\\n        #the value with smallest difference between its rightmost index and leftmost index\\n        #add one to this value and return it \\n        #because difference tells us distance between indeces (non inclusive) while we\\n        #want to return length of substring\\n        return min([rights[key] - lefts[key] for key in keys]) + 1\\n            \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2685795,
                "title": "with-explanation-easy-understanding",
                "content": "\\n \\n \\n public int findShortestSubArray(int[] nums) {\\n   \\n        //maximum occurance\\n        int max = 0;\\n        \\n        //Final result\\n        int result = 0;\\n        \\n        //To keep the occurance of the elements in array\\n        Map<Integer, Integer> map = new HashMap<>();\\n        \\n        // Keep track of first occurance of element\\n        Map<Integer, Integer> first_seen = new HashMap<>();\\n        \\n        for(int i = 0; i < nums.length; i++){\\n            \\n           //Add the index with element if it is first seen \\n          first_seen.putIfAbsent(nums[i], i);\\n            \\n          map.put(nums[i], map.getOrDefault(nums[i], 0)+1);\\n            \\n            if(map.get(nums[i]) > max){\\n                \\n                max = map.get(nums[i]);\\n                \\n                //store the length with maximum occurance subarray\\n                result = i - first_seen.get(nums[i]) + 1;\\n                \\n            }\\n            \\n            //if more than one element have the maximum occurance, then find one with minimum length\\n            else if(map.get(nums[i]) == max){\\n                result = Math.min(result, i - first_seen.get(nums[i])+1);\\n            }\\n                 \\n        }\\n        return result;\\n       \\n        \\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "\\n \\n \\n public int findShortestSubArray(int[] nums) {\\n   \\n        //maximum occurance\\n        int max = 0;\\n        \\n        //Final result\\n        int result = 0;\\n        \\n        //To keep the occurance of the elements in array\\n        Map<Integer, Integer> map = new HashMap<>();\\n        \\n        // Keep track of first occurance of element\\n        Map<Integer, Integer> first_seen = new HashMap<>();\\n        \\n        for(int i = 0; i < nums.length; i++){\\n            \\n           //Add the index with element if it is first seen \\n          first_seen.putIfAbsent(nums[i], i);\\n            \\n          map.put(nums[i], map.getOrDefault(nums[i], 0)+1);\\n            \\n            if(map.get(nums[i]) > max){\\n                \\n                max = map.get(nums[i]);\\n                \\n                //store the length with maximum occurance subarray\\n                result = i - first_seen.get(nums[i]) + 1;\\n                \\n            }\\n            \\n            //if more than one element have the maximum occurance, then find one with minimum length\\n            else if(map.get(nums[i]) == max){\\n                result = Math.min(result, i - first_seen.get(nums[i])+1);\\n            }\\n                 \\n        }\\n        return result;\\n       \\n        \\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2366946,
                "title": "c-o-n-99-15-speed-24-39-memory",
                "content": "My solution is heavily based on [a solution found here](https://leetcode.com/problems/degree-of-an-array/discuss/1286284/C%2B%2Bor-EASY-TO-UNDERSTAND-or-fast-and-efficient-solutionor-Using-Hashtables). I liked the strategy of using a vector as the values of the hash table, because the information stored within it is enough to solve both parts of our problem. That is, first finding the value(s) with the highest frequency, then finding the smallest possible subarray whilst including all elements of that value (must consider case of multiple highest frequency values).\\n\\n**Time Complexity:** O(n)\\n**Space Complexity:** O(n)\\n\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, vector<int>> counts;\\n        for (int i = 0; i < nums.size(); ++i) {\\n            counts[nums[i]].push_back(i);\\n        }\\n\\n        int maxFreq = 0;\\n        for (auto it = counts.begin(); it != counts.end(); ++it) {\\n            maxFreq = max(maxFreq, (int)it->second.size());\\n        }\\n\\n        int subLen = nums.size();\\n        for (auto it = counts.begin(); it != counts.end(); ++it) {\\n            if (it->second.size() == maxFreq) {\\n                subLen = min(subLen, it->second.back() - it->second[0] + 1);\\n            }\\n        }\\n\\n        return subLen;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, vector<int>> counts;\\n        for (int i = 0; i < nums.size(); ++i) {\\n            counts[nums[i]].push_back(i);\\n        }\\n\\n        int maxFreq = 0;\\n        for (auto it = counts.begin(); it != counts.end(); ++it) {\\n            maxFreq = max(maxFreq, (int)it->second.size());\\n        }\\n\\n        int subLen = nums.size();\\n        for (auto it = counts.begin(); it != counts.end(); ++it) {\\n            if (it->second.size() == maxFreq) {\\n                subLen = min(subLen, it->second.back() - it->second[0] + 1);\\n            }\\n        }\\n\\n        return subLen;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2358709,
                "title": "java-solution-using-hashmap",
                "content": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        HashMap<Integer,Integer> frequency = new HashMap<>();\\n        \\n        HashMap<Integer,Integer> first_occurence = new HashMap<>();\\n        \\n        int degree =0;\\n        int min_length =0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            first_occurence.putIfAbsent(nums[i],i);\\n            \\n            frequency.put(nums[i],frequency.getOrDefault(nums[i],0)+1);\\n             \\n            if( frequency.get(nums[i]) > degree)\\n            {\\n                degree = frequency.get(nums[i]);\\n                min_length = (i- first_occurence.get(nums[i])) +1;\\n                \\n            }\\n            \\n            else if( frequency.get(nums[i]) == degree)\\n        {\\n            min_length = Math.min(min_length, (i- first_occurence.get(nums[i]))+1);\\n        }\\n            \\n            \\n        }\\n        \\n        return min_length;\\n        \\n    }\\n}\\n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        HashMap<Integer,Integer> frequency = new HashMap<>();\\n        \\n        HashMap<Integer,Integer> first_occurence = new HashMap<>();\\n        \\n        int degree =0;\\n        int min_length =0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            first_occurence.putIfAbsent(nums[i],i);\\n            \\n            frequency.put(nums[i],frequency.getOrDefault(nums[i],0)+1);\\n             \\n            if( frequency.get(nums[i]) > degree)\\n            {\\n                degree = frequency.get(nums[i]);\\n                min_length = (i- first_occurence.get(nums[i])) +1;\\n                \\n            }\\n            \\n            else if( frequency.get(nums[i]) == degree)\\n        {\\n            min_length = Math.min(min_length, (i- first_occurence.get(nums[i]))+1);\\n        }\\n            \\n            \\n        }\\n        \\n        return min_length;\\n        \\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2127473,
                "title": "python-easy-peasy-solution",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, x: List[int]) -> int:\\n        \\n        l=len(x)\\n        ma=defaultdict(lambda:-inf)\\n        mi=defaultdict(lambda:inf)\\n        f=defaultdict(lambda:0)\\n        for i in range(l):\\n            f[x[i]]+=1\\n            ma[x[i]]=max(ma[x[i]],i)\\n            mi[x[i]]=min(mi[x[i]],i)\\n        maa=max(f.values())\\n        ans=inf\\n        for i in f:\\n            if f[i]==maa:\\n                ans=min(ans,ma[i]-mi[i]+1)\\n        return ans\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, x: List[int]) -> int:\\n        \\n        l=len(x)\\n        ma=defaultdict(lambda:-inf)\\n        mi=defaultdict(lambda:inf)\\n        f=defaultdict(lambda:0)\\n        for i in range(l):\\n            f[x[i]]+=1\\n            ma[x[i]]=max(ma[x[i]],i)\\n            mi[x[i]]=min(mi[x[i]],i)\\n        maa=max(f.values())\\n        ans=inf\\n        for i in f:\\n            if f[i]==maa:\\n                ans=min(ans,ma[i]-mi[i]+1)\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1975725,
                "title": "c-very-easy-explanation-time-complexity-o-n",
                "content": "Go throught the comments at each step. Reply if anything is not clear.\\nUpvote if it helps.\\n```\\nint findShortestSubArray(vector<int>& nums) {\\n        // using 2 maps to store the first occurence of a new element and to store their frequency\\n        unordered_map<int, int> first;\\n        unordered_map<int, int> freq;\\n        int degree = 0;\\n        int len = 0;\\n        for(int i = 0; i < nums.size(); i++) {\\n            // storing first occurence if element encountered for the first time\\n            if(first.count(nums[i]) == 0) first[nums[i]] = i;\\n            // checking the degree of the element\\n            if(++freq[nums[i]] > degree) {\\n                degree = freq[nums[i]];\\n                // adding 1 since the range length should be inclusive\\n                len = i - first[nums[i]] + 1;\\n            }\\n            else if(freq[nums[i]] == degree)\\n                // taking the min of the subarray with highest degree as specified in the question\\n                len = min(len, i - first[nums[i]] + 1);\\n        }\\n        return len;\\n    }",
                "solutionTags": [
                    "C"
                ],
                "code": "Go throught the comments at each step. Reply if anything is not clear.\\nUpvote if it helps.\\n```\\nint findShortestSubArray(vector<int>& nums) {\\n        // using 2 maps to store the first occurence of a new element and to store their frequency\\n        unordered_map<int, int> first;\\n        unordered_map<int, int> freq;\\n        int degree = 0;\\n        int len = 0;\\n        for(int i = 0; i < nums.size(); i++) {\\n            // storing first occurence if element encountered for the first time\\n            if(first.count(nums[i]) == 0) first[nums[i]] = i;\\n            // checking the degree of the element\\n            if(++freq[nums[i]] > degree) {\\n                degree = freq[nums[i]];\\n                // adding 1 since the range length should be inclusive\\n                len = i - first[nums[i]] + 1;\\n            }\\n            else if(freq[nums[i]] == degree)\\n                // taking the min of the subarray with highest degree as specified in the question\\n                len = min(len, i - first[nums[i]] + 1);\\n        }\\n        return len;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1881878,
                "title": "degree-of-an-array-solution-java",
                "content": "class Solution {\\n  public int findShortestSubArray(int[] nums) {\\n    int ans = 0;\\n    int degree = 0;\\n    Map<Integer, Integer> debut = new HashMap<>();\\n    Map<Integer, Integer> count = new HashMap<>();\\n\\n    for (int i = 0; i < nums.length; ++i) {\\n      final int num = nums[i];\\n      debut.putIfAbsent(num, i);\\n      count.put(num, count.getOrDefault(num, 0) + 1);\\n      if (count.get(num) > degree) {\\n        degree = count.get(num);\\n        ans = i - debut.get(num) + 1;\\n      } else if (count.get(num) == degree) {\\n        ans = Math.min(ans, i - debut.get(num) + 1);\\n      }\\n    }\\n\\n    return ans;\\n  }\\n}\\n",
                "solutionTags": [
                    "Array",
                    "Hash Table"
                ],
                "code": "class Solution {\\n  public int findShortestSubArray(int[] nums) {\\n    int ans = 0;\\n    int degree = 0;\\n    Map<Integer, Integer> debut = new HashMap<>();\\n    Map<Integer, Integer> count = new HashMap<>();\\n\\n    for (int i = 0; i < nums.length; ++i) {\\n      final int num = nums[i];\\n      debut.putIfAbsent(num, i);\\n      count.put(num, count.getOrDefault(num, 0) + 1);\\n      if (count.get(num) > degree) {\\n        degree = count.get(num);\\n        ans = i - debut.get(num) + 1;\\n      }",
                "codeTag": "Java"
            },
            {
                "id": 1712738,
                "title": "c-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic: \\n    int findShortestSubArray(vector<int>& nums) {\\n        // if an element giving maximum degree\\n        // minimum length subarray will contain all occurence of this element\\n        \\n        //also consider case when more that two elements giving highest degree\\n        //create a map such that it contains count,first and last occurence of every elemment\\n        unordered_map<int,vector<int>> mp;\\n        int degree=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            mp[nums[i]].push_back(i);\\n            degree=max(degree,(int)mp[nums[i]].size());\\n        }\\n        \\n        int min_length=nums.size();\\n        \\n        for(auto it: mp)\\n        {\\n            if(it.second.size()==degree)\\n            {\\n                min_length=min(min_length,it.second.back()-it.second[0]+1);\\n            }\\n        }\\n        return min_length;\\n        \\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "Hash Table"
                ],
                "code": "```\\nclass Solution {\\npublic: \\n    int findShortestSubArray(vector<int>& nums) {\\n        // if an element giving maximum degree\\n        // minimum length subarray will contain all occurence of this element\\n        \\n        //also consider case when more that two elements giving highest degree\\n        //create a map such that it contains count,first and last occurence of every elemment\\n        unordered_map<int,vector<int>> mp;\\n        int degree=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            mp[nums[i]].push_back(i);\\n            degree=max(degree,(int)mp[nums[i]].size());\\n        }\\n        \\n        int min_length=nums.size();\\n        \\n        for(auto it: mp)\\n        {\\n            if(it.second.size()==degree)\\n            {\\n                min_length=min(min_length,it.second.back()-it.second[0]+1);\\n            }\\n        }\\n        return min_length;\\n        \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1706503,
                "title": "sliding-window-real-one-pass",
                "content": "## Sliding Window\\nI wanted to share a sliding window approach, which takes O(N) time where `N=len(nums)`, though iterating over `nums` multiple times.\\n\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        num_to_freq = defaultdict(int)\\n        for num in nums:\\n            num_to_freq[num] += 1\\n        max_freq = max(num_to_freq.values())\\n        \\n        subarr_num_to_freq = defaultdict(int)\\n        left = right = 0\\n        min_subarr_len = len(nums)\\n        \\n        while right < len(nums):\\n            right_num = nums[right]\\n            subarr_num_to_freq[right_num] += 1\\n            if subarr_num_to_freq[right_num] == max_freq:\\n                while left < right:\\n                    if nums[left] == right_num:\\n                        break\\n                    subarr_num_to_freq[nums[left]] -= 1\\n                    left += 1\\n                # nums[left..right] has the same degree as nums\\n                min_subarr_len = min(min_subarr_len, right - left + 1)\\n            right += 1\\n        \\n        return min_subarr_len\\n```\\n\\n## Real One Pass\\nCertainly, storing first occurrence per number and tracking the degree of nums on the fly is a more common approach, and that iterates `nums` only once.\\n\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        num_start_pos = {}\\n        num_to_freq = defaultdict(int)\\n        max_freq = 0\\n        min_subarr_len = n = len(nums)\\n        \\n        for i in range(n):\\n            num = nums[i]\\n\\n            num_start_pos.setdefault(num, i)\\n                \\n            num_to_freq[num] += 1\\n\\n            if num_to_freq[num] > max_freq:\\n                max_freq = num_to_freq[num]\\n                min_subarr_len = i - num_start_pos[num] + 1\\n            elif num_to_freq[num] == max_freq:\\n                min_subarr_len = min(min_subarr_len, i - num_start_pos[num] + 1)\\n            \\n        return min_subarr_len\\n        \\n```",
                "solutionTags": [
                    "Sliding Window"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        num_to_freq = defaultdict(int)\\n        for num in nums:\\n            num_to_freq[num] += 1\\n        max_freq = max(num_to_freq.values())\\n        \\n        subarr_num_to_freq = defaultdict(int)\\n        left = right = 0\\n        min_subarr_len = len(nums)\\n        \\n        while right < len(nums):\\n            right_num = nums[right]\\n            subarr_num_to_freq[right_num] += 1\\n            if subarr_num_to_freq[right_num] == max_freq:\\n                while left < right:\\n                    if nums[left] == right_num:\\n                        break\\n                    subarr_num_to_freq[nums[left]] -= 1\\n                    left += 1\\n                # nums[left..right] has the same degree as nums\\n                min_subarr_len = min(min_subarr_len, right - left + 1)\\n            right += 1\\n        \\n        return min_subarr_len\\n```\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        num_start_pos = {}\\n        num_to_freq = defaultdict(int)\\n        max_freq = 0\\n        min_subarr_len = n = len(nums)\\n        \\n        for i in range(n):\\n            num = nums[i]\\n\\n            num_start_pos.setdefault(num, i)\\n                \\n            num_to_freq[num] += 1\\n\\n            if num_to_freq[num] > max_freq:\\n                max_freq = num_to_freq[num]\\n                min_subarr_len = i - num_start_pos[num] + 1\\n            elif num_to_freq[num] == max_freq:\\n                min_subarr_len = min(min_subarr_len, i - num_start_pos[num] + 1)\\n            \\n        return min_subarr_len\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1665420,
                "title": "simple-easy-solution-by-python-3",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:        \\n        degrees, max_degree = {}, 0\\n        for i, num in enumerate(nums):\\n            if num not in degrees:\\n                degrees[num] = [0, i, i]\\n            degrees[num][0] += 1\\n            degrees[num][2] = i\\n\\n            if degrees[num][0] > max_degree:\\n                max_degree = degrees[num][0]\\n\\n        return min(degree[2] - degree[1] + 1 for degree in degrees.values() if degree[0] == max_degree)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:        \\n        degrees, max_degree = {}, 0\\n        for i, num in enumerate(nums):\\n            if num not in degrees:\\n                degrees[num] = [0, i, i]\\n            degrees[num][0] += 1\\n            degrees[num][2] = i\\n\\n            if degrees[num][0] > max_degree:\\n                max_degree = degrees[num][0]\\n\\n        return min(degree[2] - degree[1] + 1 for degree in degrees.values() if degree[0] == max_degree)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1552647,
                "title": "c-100-fast-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int,int>m;\\n        for(auto a:nums){\\n            m[a]++;\\n        }\\n        int l=0;\\n        for(auto a:m){\\n            if(l<a.second){\\n              l=a.second;  \\n            }\\n        }\\n        vector<int> v;\\n        for(auto a:m){\\n            if(l==a.second){\\n               v.push_back(a.first);\\n            }\\n        }\\n        \\n        \\n        int mn=INT_MAX;\\n        for(auto aa:v){\\n            int i=0;\\n            int c=nums.size();\\n            while(nums[i]!=aa){\\n                c--;\\n                i++;\\n            }\\n            i=nums.size()-1;\\n            while(nums[i]!=aa){\\n                c--;\\n                i--;\\n            }\\n            \\n            cout<<c<<endl;\\n            mn=min(mn,c);\\n        }\\n        return mn;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int,int>m;\\n        for(auto a:nums){\\n            m[a]++;\\n        }\\n        int l=0;\\n        for(auto a:m){\\n            if(l<a.second){\\n              l=a.second;  \\n            }\\n        }\\n        vector<int> v;\\n        for(auto a:m){\\n            if(l==a.second){\\n               v.push_back(a.first);\\n            }\\n        }\\n        \\n        \\n        int mn=INT_MAX;\\n        for(auto aa:v){\\n            int i=0;\\n            int c=nums.size();\\n            while(nums[i]!=aa){\\n                c--;\\n                i++;\\n            }\\n            i=nums.size()-1;\\n            while(nums[i]!=aa){\\n                c--;\\n                i--;\\n            }\\n            \\n            cout<<c<<endl;\\n            mn=min(mn,c);\\n        }\\n        return mn;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 1478224,
                "title": "degree-of-an-array-c-solution",
                "content": "\\n\\tint findShortestSubArray(vector<int>& nums) {\\n        \\n        // number -> {occurance,firstIdx,lastIdx};\\n        \\n        map<int,vector<int>> mp;\\n        int mx = INT_MIN;\\n        int n= nums.size();\\n        for(int i=0;i<n;i++) {\\n            if(!mp.count(nums[i])) {\\n                mp[nums[i]] = {1,i,i};\\n            }\\n            else {\\n                vector<int> r = mp[nums[i]];\\n                mp[nums[i]] = {r[0]+1,r[1],i};\\n            }\\n            mx = max(mx,mp[nums[i]][0]);\\n        }\\n        \\n        int res = INT_MAX;\\n                           \\n        for(int i=0;i<n;i++) {\\n            if(mp[nums[i]][0]==mx) {\\n                res = min(res,mp[nums[i]][2]-mp[nums[i]][1]+1);\\n            }\\n        }\\n        return res;\\n    }\\n};\\n\\n**If you like my Approach Consider Upvoting the Post :)**",
                "solutionTags": [],
                "code": "\\n\\tint findShortestSubArray(vector<int>& nums) {\\n        \\n        // number -> {occurance,firstIdx,lastIdx};\\n        \\n        map<int,vector<int>> mp;\\n        int mx = INT_MIN;\\n        int n= nums.size();\\n        for(int i=0;i<n;i++) {\\n            if(!mp.count(nums[i])) {\\n                mp[nums[i]] = {1,i,i};\\n            }\\n            else {\\n                vector<int> r = mp[nums[i]];\\n                mp[nums[i]] = {r[0]+1,r[1],i};\\n            }\\n            mx = max(mx,mp[nums[i]][0]);\\n        }\\n        \\n        int res = INT_MAX;\\n                           \\n        for(int i=0;i<n;i++) {\\n            if(mp[nums[i]][0]==mx) {\\n                res = min(res,mp[nums[i]][2]-mp[nums[i]][1]+1);\\n            }\\n        }\\n        return res;\\n    }\\n};\\n\\n**If you like my Approach Consider Upvoting the Post :)**",
                "codeTag": "Unknown"
            },
            {
                "id": 1466220,
                "title": "easy-c-solution",
                "content": "```\\nclass Solution \\n{\\npublic:\\n    int findShortestSubArray(vector<int>& nums)\\n    {\\n        // map to store the frequencies\\n        unordered_map<int,int>m;\\n        \\n        // map to store the first and the last occurence of an element\\n        unordered_map<int,vector<int>>dict;\\n        \\n        // d is the degree of the array and ans is the answer\\n        int d=0,ans=INT_MAX;\\n        \\n        // populate the frequnecy map and calculate the degree\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            m[nums[i]]++;\\n            d=max(d,m[nums[i]]);\\n        }\\n        \\n        // store the first occurence of the elements which has frequency=degree of the whole array\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(m[nums[i]]==d)\\n            {\\n                if(dict.find(nums[i])==dict.end())\\n                {\\n                    dict[nums[i]].push_back(i);\\n                }\\n            }\\n        }\\n        \\n        // take the last occurence of the elements (having frequency=degree of the whole array) and calculate the length of a potential sub-array\\n        for(int i=nums.size()-1;i>=0;i--)\\n        {\\n            if(m[nums[i]]==d)\\n            {\\n                if(dict[nums[i]].size()==1)\\n                {\\n                    ans=min(ans,abs(i-dict[nums[i]][0])+1);\\n                    dict[nums[i]].push_back(i);\\n                }\\n            }\\n        }\\n        \\n        // finally return the answer\\n        return ans;\\n    }\\n};\\n```\\n***Please upvote if you have got any help from my code. Thank you.***",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    int findShortestSubArray(vector<int>& nums)\\n    {\\n        // map to store the frequencies\\n        unordered_map<int,int>m;\\n        \\n        // map to store the first and the last occurence of an element\\n        unordered_map<int,vector<int>>dict;\\n        \\n        // d is the degree of the array and ans is the answer\\n        int d=0,ans=INT_MAX;\\n        \\n        // populate the frequnecy map and calculate the degree\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            m[nums[i]]++;\\n            d=max(d,m[nums[i]]);\\n        }\\n        \\n        // store the first occurence of the elements which has frequency=degree of the whole array\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(m[nums[i]]==d)\\n            {\\n                if(dict.find(nums[i])==dict.end())\\n                {\\n                    dict[nums[i]].push_back(i);\\n                }\\n            }\\n        }\\n        \\n        // take the last occurence of the elements (having frequency=degree of the whole array) and calculate the length of a potential sub-array\\n        for(int i=nums.size()-1;i>=0;i--)\\n        {\\n            if(m[nums[i]]==d)\\n            {\\n                if(dict[nums[i]].size()==1)\\n                {\\n                    ans=min(ans,abs(i-dict[nums[i]][0])+1);\\n                    dict[nums[i]].push_back(i);\\n                }\\n            }\\n        }\\n        \\n        // finally return the answer\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1439902,
                "title": "javascript-easy-understand-solution-speed-beats-99-23-with-only-one-for-loop",
                "content": "```\\nvar findShortestSubArray = function(nums) {\\n\\n    let map = new Map();\\n    let maxFreq = 1;\\n    let maxFreqNum = nums[0];\\n\\n    for (let i = 0; i < nums.length; i++) {\\n\\n        let curr = nums[i];\\n\\n        // Update map for nums[i]\\n        if (!map.has(curr)) map.set(curr, { firstIdx: i, degree: 1, freq: 1 });\\n        else map.set(curr, { firstIdx: map.get(curr).firstIdx, degree: i - map.get(curr).firstIdx + 1, freq: map.get(curr).freq + 1 });\\n\\n\\n        let currFreq = map.get(curr).freq;\\n\\n        // Update maxFrequency & maxFrequencyNumber\\n        if (maxFreq < currFreq) {\\n            \\n            maxFreq = currFreq\\n            maxFreqNum = curr;\\n        }\\n        // Check if 2 numbers with the same frequency happened ?\\n        // Keep the one with lower degree as the requirement\\n        else if (maxFreq == currFreq && map.get(maxFreqNum).degree > map.get(curr).degree ) maxFreqNum = curr;\\n    }\\n\\n    return map.get(maxFreqNum).degree;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar findShortestSubArray = function(nums) {\\n\\n    let map = new Map();\\n    let maxFreq = 1;\\n    let maxFreqNum = nums[0];\\n\\n    for (let i = 0; i < nums.length; i++) {\\n\\n        let curr = nums[i];\\n\\n        // Update map for nums[i]\\n        if (!map.has(curr)) map.set(curr, { firstIdx: i, degree: 1, freq: 1 });\\n        else map.set(curr, { firstIdx: map.get(curr).firstIdx, degree: i - map.get(curr).firstIdx + 1, freq: map.get(curr).freq + 1 });\\n\\n\\n        let currFreq = map.get(curr).freq;\\n\\n        // Update maxFrequency & maxFrequencyNumber\\n        if (maxFreq < currFreq) {\\n            \\n            maxFreq = currFreq\\n            maxFreqNum = curr;\\n        }\\n        // Check if 2 numbers with the same frequency happened ?\\n        // Keep the one with lower degree as the requirement\\n        else if (maxFreq == currFreq && map.get(maxFreqNum).degree > map.get(curr).degree ) maxFreqNum = curr;\\n    }\\n\\n    return map.get(maxFreqNum).degree;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1432808,
                "title": "c-easy-to-understand",
                "content": "``` \\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,int>mp;\\n        int n=nums.size(),deg=0;\\n        for(auto i:nums) {\\n            ++mp[i];\\n            if(deg<mp[i]) deg = mp[i];\\n        }\\n        if(deg == 1) return 1;\\n        int minl=INT_MAX;\\n        for(auto i:mp) {\\n            int start,end,fcnt=0;\\n            if(i.second == deg) {\\n                for(int j=0;j<n;j++) {\\n                    if(nums[j] == i.first && fcnt == 0) {start = j; ++fcnt;}\\n                    if(nums[j] == i.first && fcnt != 0) end = j;\\n                }\\n                if(minl > (end-start+1)) minl = end-start+1;\\n            }\\n        }\\n        return minl;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "``` \\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,int>mp;\\n        int n=nums.size(),deg=0;\\n        for(auto i:nums) {\\n            ++mp[i];\\n            if(deg<mp[i]) deg = mp[i];\\n        }\\n        if(deg == 1) return 1;\\n        int minl=INT_MAX;\\n        for(auto i:mp) {\\n            int start,end,fcnt=0;\\n            if(i.second == deg) {\\n                for(int j=0;j<n;j++) {\\n                    if(nums[j] == i.first && fcnt == 0) {start = j; ++fcnt;}\\n                    if(nums[j] == i.first && fcnt != 0) end = j;\\n                }\\n                if(minl > (end-start+1)) minl = end-start+1;\\n            }\\n        }\\n        return minl;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1431098,
                "title": "python-intuitive-and-easy-to-understand-beats-96",
                "content": "The logic is around finding the repetitions and putting on a hash, while doing that we also store the index.\\nLater we go through each value in the hash, if we find an answer with more repetitions, this is the new answer, if we find one with same number of repetitions we should find the lowest length one.\\nTo find the length we just subtract the last found index with the first found index, and then increase by 1. The increase by 1 is due to indexes being 0-indexed on a loop.\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        repetitions = defaultdict(list)\\n        for idx, n in enumerate(nums):\\n            repetitions[n].append(idx)\\n            \\n        answer = float(\\'inf\\')\\n        answer_repetitions = 0\\n        for key in repetitions:\\n            if len(repetitions[key]) > answer_repetitions:\\n                answer = repetitions[key][-1]+1 - repetitions[key][0]\\n                answer_repetitions = len(repetitions[key])\\n            elif len(repetitions[key]) == answer_repetitions:\\n                answer = min(answer, repetitions[key][-1]+1 - repetitions[key][0])\\n        return answer\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        repetitions = defaultdict(list)\\n        for idx, n in enumerate(nums):\\n            repetitions[n].append(idx)\\n            \\n        answer = float(\\'inf\\')\\n        answer_repetitions = 0\\n        for key in repetitions:\\n            if len(repetitions[key]) > answer_repetitions:\\n                answer = repetitions[key][-1]+1 - repetitions[key][0]\\n                answer_repetitions = len(repetitions[key])\\n            elif len(repetitions[key]) == answer_repetitions:\\n                answer = min(answer, repetitions[key][-1]+1 - repetitions[key][0])\\n        return answer\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1190722,
                "title": "c-easy-to-understand-code-with-explanation",
                "content": "Basically we need to find the maximum frequency element in an array and then cal the subarray of min length. i will use 3 maps named as count , first and last count map is used to cal. the frequency while first and last map is used to store the first and last index of the element . now i calculate the max freq of which element . and then calculate min. length subarray.\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) \\n    {\\n        unordered_map<int,int>count;\\n         unordered_map<int,int>first;\\n         unordered_map<int,int>last;\\n        \\n        for(int i=0;i<nums.size();i++)\\n        {\\n             count[nums[i]]++;\\n            \\n            if(first.find(nums[i]) ==first.end())\\n                first[nums[i]]=i;\\n            \\n            last[nums[i]]=i;\\n            \\n        }\\n           \\n        \\n        int max=0;\\n        for(auto x : count)\\n             if(x.second>max)\\n                 max=x.second;\\n        \\n        int ans=INT_MAX;\\n        \\n        for(auto x : count)\\n        {\\n            if(x.second==max)\\n            {\\n                int f_index=first[x.first];\\n                int l_index=last[x.first];\\n                int temp=l_index-f_index+1;\\n                \\n                ans=min(ans,temp);\\n                                   \\n                \\n                \\n            }\\n            \\n            \\n        }\\n        \\n        return ans;\\n        \\n        \\n        \\n        \\n        \\n    }\\n};\\n```\\nFeel free to ask anything if uh stuck.\\nThanks .\\n[edited]\\nNote we can optimize the space . we can also make something like this.\\nmap<int, pair<int,int>>um;\\nthis type of map is used to help store the first and last index. \\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) \\n    {\\n        unordered_map<int,int>count;\\n         unordered_map<int,int>first;\\n         unordered_map<int,int>last;\\n        \\n        for(int i=0;i<nums.size();i++)\\n        {\\n             count[nums[i]]++;\\n            \\n            if(first.find(nums[i]) ==first.end())\\n                first[nums[i]]=i;\\n            \\n            last[nums[i]]=i;\\n            \\n        }\\n           \\n        \\n        int max=0;\\n        for(auto x : count)\\n             if(x.second>max)\\n                 max=x.second;\\n        \\n        int ans=INT_MAX;\\n        \\n        for(auto x : count)\\n        {\\n            if(x.second==max)\\n            {\\n                int f_index=first[x.first];\\n                int l_index=last[x.first];\\n                int temp=l_index-f_index+1;\\n                \\n                ans=min(ans,temp);\\n                                   \\n                \\n                \\n            }\\n            \\n            \\n        }\\n        \\n        return ans;\\n        \\n        \\n        \\n        \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1181279,
                "title": "problem-697-c-80-speed-with-explanations",
                "content": "### Solution\\n\\nThe smallest subarray that has the same degree as the overall array will be the subarray that starts at the first occurrence of the most frequent number and ends at the last occurrence of the most frequent number.\\n\\nA map is a natural way to store the count of each number and then we can use that to find the most frequent number.\\n\\nBut how do we deal with ties? Consider [1, 3, 1, 5, 5] for example. We count all the elements and find that both 1 and 5 appear twice. So how do we know which is better?\\n\\nOne way is to store the index of each number when we see it for the first time. Then as we\\'re counting in our map, if a number\\'s count equals the degree, we might need to update the size of our smallest subarray. How do we know if we need to update it? It\\'s if the distance from our current number to its first appearance is less than the current smallest subarray.\\n\\nAnd if a number exceeds the current degree, we certainly need to update our current smallest subarray.\\n\\n```cpp\\nint findShortestSubArray(vector<int>& nums) {\\n  unordered_map<int, int> counts;\\n  unordered_map<int, int> first_ind;\\n  int leader = 0;\\n  int degree = 0;\\n\\n  for (int i = 0; i < nums.size(); i++) {\\n    int n = nums[i];\\n    counts[n]++;\\n\\n    if (counts[n] == 1) {\\n      first_ind[n] = i;\\n    }\\n    if (counts[n] == degree) {\\n      int curr_size = i - first_ind[n] + 1;\\n      if (curr_size < leader) leader = curr_size;\\n    }\\n    if (counts[n] > degree) {\\n      leader = i - first_ind[n] + 1;\\n      degree = counts[n];\\n    }\\n  }\\n\\n  return leader;\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```cpp\\nint findShortestSubArray(vector<int>& nums) {\\n  unordered_map<int, int> counts;\\n  unordered_map<int, int> first_ind;\\n  int leader = 0;\\n  int degree = 0;\\n\\n  for (int i = 0; i < nums.size(); i++) {\\n    int n = nums[i];\\n    counts[n]++;\\n\\n    if (counts[n] == 1) {\\n      first_ind[n] = i;\\n    }\\n    if (counts[n] == degree) {\\n      int curr_size = i - first_ind[n] + 1;\\n      if (curr_size < leader) leader = curr_size;\\n    }\\n    if (counts[n] > degree) {\\n      leader = i - first_ind[n] + 1;\\n      degree = counts[n];\\n    }\\n  }\\n\\n  return leader;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1158354,
                "title": "js-easy-to-understand-for-beginners-as-well-commented",
                "content": "```\\nvar findShortestSubArray = function(nums) {\\n    \\n    let map = new Map();\\n    \\n    for(let i=0;i<nums.length;i++){\\n        map.set(nums[i],map.get(nums[i])+1||1);\\n    }\\n\\t// sorting map according to the value in descending order(value is number of occurances)\\n    const sortedMap = new Map([...map.entries()].sort((a,b)=>b[1]-a[1]));\\n    \\n\\t/* finding the numbers which have occured maximum\\n\\t(initialized an array because there can be more than one) */\\n    let maxKeys=[],max=-1\\n    for(let [key,value] of sortedMap){\\n\\t// checking greater than or equal because consider [1,2,2,3,1]. If it was greater then only \\'1\\' would be present\\n        if(value>=max){\\n            max = value\\n            maxKeys.push(key)\\n        }\\n    }\\n    \\n    let minDistanceBetweenOccurances = nums.length;\\n\\t/* iterating the keys to find which had the mininum distance from its first occurance\\n\\tand last occurance(which basically gives the starting and ending point of subarray) */\\n    maxKeys.forEach((key)=>{\\n        const firstOccurance = nums.indexOf(key);\\n        const lastOccurance = nums.lastIndexOf(key);\\n        const distanceBetweenOccurances = lastOccurance - firstOccurance;\\n\\t\\t// checking less than because there is only one unique key which has the least distance\\n        if(distance<minDistanceBetweenOccurances){\\n            minDistanceBetweenOccurances = distanceBetweenOccurances;\\n        }\\n    })\\n\\t// Adding 1 because we have found difference between the starting and ending index(0 indexed)\\n    return minDistanceBetweenOccurances+1;\\n};\\n```\\nWithout comments:\\n```\\nvar findShortestSubArray = function(nums) {\\n    \\n    let map = new Map();\\n    \\n    for(let i=0;i<nums.length;i++){\\n        map.set(nums[i],map.get(nums[i])+1||1);\\n    }\\n    const sortedMap = new Map([...map.entries()].sort((a,b)=>b[1]-a[1]));\\n    \\n    let maxKeys=[],max=-1\\n    for(let [key,value] of sortedMap){\\n        if(value>=max){\\n            max = value\\n            maxKeys.push(key)\\n        }\\n    }\\n    \\n    let min=nums.length;\\n    maxKeys.forEach((key)=>{\\n        const firstOccurance = nums.indexOf(key);\\n        const lastOccurance = nums.lastIndexOf(key);\\n        const distance = lastOccurance - firstOccurance;\\n        if(distance<min){\\n            min = distance;\\n        }\\n    })\\n    return min+1;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar findShortestSubArray = function(nums) {\\n    \\n    let map = new Map();\\n    \\n    for(let i=0;i<nums.length;i++){\\n        map.set(nums[i],map.get(nums[i])+1||1);\\n    }\\n\\t// sorting map according to the value in descending order(value is number of occurances)\\n    const sortedMap = new Map([...map.entries()].sort((a,b)=>b[1]-a[1]));\\n    \\n\\t/* finding the numbers which have occured maximum\\n\\t(initialized an array because there can be more than one) */\\n    let maxKeys=[],max=-1\\n    for(let [key,value] of sortedMap){\\n\\t// checking greater than or equal because consider [1,2,2,3,1]. If it was greater then only \\'1\\' would be present\\n        if(value>=max){\\n            max = value\\n            maxKeys.push(key)\\n        }\\n    }\\n    \\n    let minDistanceBetweenOccurances = nums.length;\\n\\t/* iterating the keys to find which had the mininum distance from its first occurance\\n\\tand last occurance(which basically gives the starting and ending point of subarray) */\\n    maxKeys.forEach((key)=>{\\n        const firstOccurance = nums.indexOf(key);\\n        const lastOccurance = nums.lastIndexOf(key);\\n        const distanceBetweenOccurances = lastOccurance - firstOccurance;\\n\\t\\t// checking less than because there is only one unique key which has the least distance\\n        if(distance<minDistanceBetweenOccurances){\\n            minDistanceBetweenOccurances = distanceBetweenOccurances;\\n        }\\n    })\\n\\t// Adding 1 because we have found difference between the starting and ending index(0 indexed)\\n    return minDistanceBetweenOccurances+1;\\n};\\n```\n```\\nvar findShortestSubArray = function(nums) {\\n    \\n    let map = new Map();\\n    \\n    for(let i=0;i<nums.length;i++){\\n        map.set(nums[i],map.get(nums[i])+1||1);\\n    }\\n    const sortedMap = new Map([...map.entries()].sort((a,b)=>b[1]-a[1]));\\n    \\n    let maxKeys=[],max=-1\\n    for(let [key,value] of sortedMap){\\n        if(value>=max){\\n            max = value\\n            maxKeys.push(key)\\n        }\\n    }\\n    \\n    let min=nums.length;\\n    maxKeys.forEach((key)=>{\\n        const firstOccurance = nums.indexOf(key);\\n        const lastOccurance = nums.lastIndexOf(key);\\n        const distance = lastOccurance - firstOccurance;\\n        if(distance<min){\\n            min = distance;\\n        }\\n    })\\n    return min+1;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 960024,
                "title": "python-3-o-n-solution",
                "content": "You don\\'t need any explaination for this code, the variable names will do that for you.\\n```\\ndef findShortestSubArray(self, nums: List[int]) -> int:\\n\\tfreq = {}\\n\\tmax_freq = 0\\n\\tfirst_occurance = {}\\n\\tl = len(nums)\\n\\n\\tfor i in range(0, l):\\n\\t\\tif nums[i] not in freq:\\n\\t\\t\\tfreq[nums[i]] = 1\\n\\t\\t\\tfirst_occurance[nums[i]] = i\\n\\t\\telse:\\n\\t\\t\\tfreq[nums[i]]+=1\\n\\n\\t\\tif freq[nums[i]]>max_freq:\\n\\t\\t\\tmax_freq = freq[nums[i]]\\n\\t\\t\\tmin_sub_length = i - first_occurance[nums[i]]+1\\n\\t\\telif freq[nums[i]]==max_freq:\\n\\t\\t\\tmin_sub_length = min(min_sub_length, i - first_occurance[nums[i]]+1)\\n\\n\\treturn min_sub_length\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\ndef findShortestSubArray(self, nums: List[int]) -> int:\\n\\tfreq = {}\\n\\tmax_freq = 0\\n\\tfirst_occurance = {}\\n\\tl = len(nums)\\n\\n\\tfor i in range(0, l):\\n\\t\\tif nums[i] not in freq:\\n\\t\\t\\tfreq[nums[i]] = 1\\n\\t\\t\\tfirst_occurance[nums[i]] = i\\n\\t\\telse:\\n\\t\\t\\tfreq[nums[i]]+=1\\n\\n\\t\\tif freq[nums[i]]>max_freq:\\n\\t\\t\\tmax_freq = freq[nums[i]]\\n\\t\\t\\tmin_sub_length = i - first_occurance[nums[i]]+1\\n\\t\\telif freq[nums[i]]==max_freq:\\n\\t\\t\\tmin_sub_length = min(min_sub_length, i - first_occurance[nums[i]]+1)\\n\\n\\treturn min_sub_length\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 918067,
                "title": "swift-solution",
                "content": "```swift\\nclass Solution {\\n    func findShortestSubArray(_ nums: [Int]) -> Int {\\n        var dict = [Int: [Int]]()\\n        for (idx, num) in nums.enumerated() {\\n            dict[num, default: []].append(idx)\\n        }\\n        let degree = dict.values.map { $0.count }.max() ?? 0\\n        return dict.values.filter { $0.count == degree }.map {\\n            $0.max()! - $0.min()! + 1\\n        }.min()!\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```swift\\nclass Solution {\\n    func findShortestSubArray(_ nums: [Int]) -> Int {\\n        var dict = [Int: [Int]]()\\n        for (idx, num) in nums.enumerated() {\\n            dict[num, default: []].append(idx)\\n        }\\n        let degree = dict.values.map { $0.count }.max() ?? 0\\n        return dict.values.filter { $0.count == degree }.map {\\n            $0.max()! - $0.min()! + 1\\n        }.min()!\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 833243,
                "title": "one-map-one-pass",
                "content": "```\\n    public int findShortestSubArray(int[] nums) {\\n        Map<Integer, List<Integer>> degreeMap = new HashMap<>();\\n        int degree = 0, res = Integer.MAX_VALUE;\\n        for(int i=0; i<nums.length; i++){\\n            degreeMap.computeIfAbsent(nums[i], k -> new ArrayList<>()).add(i);\\n            List<Integer> curr = degreeMap.get(nums[i]);\\n            if(curr.size() >= degree){\\n                if(curr.size() > degree){\\n                    res = Integer.MAX_VALUE;\\n                }\\n                degree = Math.max(degree, curr.size());\\n                res = Math.min(res, curr.get(curr.size()-1) - curr.get(0) + 1);\\n            }            \\n        }\\n        return res;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public int findShortestSubArray(int[] nums) {\\n        Map<Integer, List<Integer>> degreeMap = new HashMap<>();\\n        int degree = 0, res = Integer.MAX_VALUE;\\n        for(int i=0; i<nums.length; i++){\\n            degreeMap.computeIfAbsent(nums[i], k -> new ArrayList<>()).add(i);\\n            List<Integer> curr = degreeMap.get(nums[i]);\\n            if(curr.size() >= degree){\\n                if(curr.size() > degree){\\n                    res = Integer.MAX_VALUE;\\n                }\\n                degree = Math.max(degree, curr.size());\\n                res = Math.min(res, curr.get(curr.size()-1) - curr.get(0) + 1);\\n            }            \\n        }\\n        return res;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 807821,
                "title": "easy-java-store-start-end-count-in-array",
                "content": "```\\n\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        Map<Integer, int[]> map = new HashMap<Integer, int[]>();\\n        \\n        int max = 1;\\n        int minLength = Integer.MAX_VALUE;\\n        \\n        for(int i = 0; i < nums.length; i++)\\n        {\\n            int[] data = new int[3];\\n            if(!map.containsKey(nums[i]))\\n            {\\n                data = new int[] {i, i, 1};\\n            }\\n            else\\n            {\\n                data = map.get(nums[i]);\\n                data[2]++;\\n                data[1] = i;\\n                max = Math.max(max, data[2]);\\n            }\\n            map.put(nums[i], data);\\n        }\\n        \\n        for(int key : map.keySet())\\n        {\\n            int[] data = map.get(key);\\n            if(data[2] == max)\\n            {\\n                minLength = Math.min(minLength, data[1] - data[0] + 1);\\n            }\\n        }\\n        \\n        return minLength;\\n    }\\n\\t\\n\\t```",
                "solutionTags": [],
                "code": "```\\n\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        Map<Integer, int[]> map = new HashMap<Integer, int[]>();\\n        \\n        int max = 1;\\n        int minLength = Integer.MAX_VALUE;\\n        \\n        for(int i = 0; i < nums.length; i++)\\n        {\\n            int[] data = new int[3];\\n            if(!map.containsKey(nums[i]))\\n            {\\n                data = new int[] {i, i, 1};\\n            }\\n            else\\n            {\\n                data = map.get(nums[i]);\\n                data[2]++;\\n                data[1] = i;\\n                max = Math.max(max, data[2]);\\n            }\\n            map.put(nums[i], data);\\n        }\\n        \\n        for(int key : map.keySet())\\n        {\\n            int[] data = map.get(key);\\n            if(data[2] == max)\\n            {\\n                minLength = Math.min(minLength, data[1] - data[0] + 1);\\n            }\\n        }\\n        \\n        return minLength;\\n    }\\n\\t\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 737828,
                "title": "c-pure-class-approach-95-05-98-02-easy-to-understand",
                "content": "***Runtime: 68 ms, faster than 95.05% of C++ online submissions for Degree of an Array.\\nMemory Usage: 24.7 MB, less than 98.02% of C++ online submissions for Degree of an Array..***\\n```\\nclass Number{\\n    private:\\n        int frequency;\\n        int startIndex;\\n        int endIndex;\\n    public:\\n        Number(){\\n            frequency = 0;\\n            startIndex = 0;\\n            endIndex = 0;\\n        }\\n        void setStartIndex(int s){\\n            startIndex = s;\\n        }\\n        void setEndIndex(int e){\\n            endIndex = e;\\n        }\\n        void setFrequency(int f){\\n            frequency = f;\\n        }\\n        int getFrequency(){\\n            return frequency;\\n        }\\n        int getValue(){\\n            return endIndex - startIndex;\\n        } \\n};\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        Number hashmap[50000], *num;\\n        int maxOccur = 0, minval = 0;\\n        for(int i=0;i<nums.size();i++){\\n            num = &hashmap[nums[i]];\\n            if(num->getFrequency() == 0){\\n                num->setStartIndex(i);\\n            }\\n            num->setEndIndex(i);\\n            num->setFrequency(num->getFrequency()+1);\\n        }\\n        for(int i=0;i<nums.size();i++){\\n            num = &hashmap[nums[i]];\\n            if(maxOccur < num->getFrequency()){\\n                maxOccur = num->getFrequency();\\n                minval = num->getValue();\\n            }else if(maxOccur == num->getFrequency()){\\n                minval = min(minval, num->getValue());\\n            }\\n        }\\n        return minval + 1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Number{\\n    private:\\n        int frequency;\\n        int startIndex;\\n        int endIndex;\\n    public:\\n        Number(){\\n            frequency = 0;\\n            startIndex = 0;\\n            endIndex = 0;\\n        }\\n        void setStartIndex(int s){\\n            startIndex = s;\\n        }\\n        void setEndIndex(int e){\\n            endIndex = e;\\n        }\\n        void setFrequency(int f){\\n            frequency = f;\\n        }\\n        int getFrequency(){\\n            return frequency;\\n        }\\n        int getValue(){\\n            return endIndex - startIndex;\\n        } \\n};\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        Number hashmap[50000], *num;\\n        int maxOccur = 0, minval = 0;\\n        for(int i=0;i<nums.size();i++){\\n            num = &hashmap[nums[i]];\\n            if(num->getFrequency() == 0){\\n                num->setStartIndex(i);\\n            }\\n            num->setEndIndex(i);\\n            num->setFrequency(num->getFrequency()+1);\\n        }\\n        for(int i=0;i<nums.size();i++){\\n            num = &hashmap[nums[i]];\\n            if(maxOccur < num->getFrequency()){\\n                maxOccur = num->getFrequency();\\n                minval = num->getValue();\\n            }else if(maxOccur == num->getFrequency()){\\n                minval = min(minval, num->getValue());\\n            }\\n        }\\n        return minval + 1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 736241,
                "title": "c-with-vector-and-map",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n    if(nums.size()==1){\\n        return 1;\\n    }\\n    if(nums.size()==2){\\n        if(nums[0]==nums[1]){\\n            return 2;\\n        }\\n        else{\\n            return 1;\\n        }\\n    }\\n    unordered_map<int,int> mp;\\n    int maxm=0;\\n    for(int i=0;i<nums.size();i++){\\n        mp[nums[i]]++;\\n        maxm=max(maxm,mp[nums[i]]);\\n    }\\n    if(maxm==1){\\n        return 1;\\n    }\\n    vector<int> vect;\\n    for(auto i:mp){\\n        if(i.second==maxm){\\n            vect.push_back(i.first);\\n        }\\n    }\\n    int minm=INT_MAX;\\n    for(int k=0;k<vect.size();k++){\\n        int i=0;\\n        int j=nums.size()-1;\\n        int p=-1;\\n        int q=-1;\\n        while(i<j){\\n            if(nums[i]!=vect[k]){\\n                i++;\\n            }\\n            else{\\n                p=i;\\n            }\\n            if(nums[j]!=vect[k]){\\n                j--;\\n            }\\n            else{\\n                q=j;\\n            }\\n            if(p>=0 && q>0 ){\\n                p=q-p+1;\\n                break;\\n            }\\n        }\\n        minm=min(minm,p);\\n    }return minm;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n    if(nums.size()==1){\\n        return 1;\\n    }\\n    if(nums.size()==2){\\n        if(nums[0]==nums[1]){\\n            return 2;\\n        }\\n        else{\\n            return 1;\\n        }\\n    }\\n    unordered_map<int,int> mp;\\n    int maxm=0;\\n    for(int i=0;i<nums.size();i++){\\n        mp[nums[i]]++;\\n        maxm=max(maxm,mp[nums[i]]);\\n    }\\n    if(maxm==1){\\n        return 1;\\n    }\\n    vector<int> vect;\\n    for(auto i:mp){\\n        if(i.second==maxm){\\n            vect.push_back(i.first);\\n        }\\n    }\\n    int minm=INT_MAX;\\n    for(int k=0;k<vect.size();k++){\\n        int i=0;\\n        int j=nums.size()-1;\\n        int p=-1;\\n        int q=-1;\\n        while(i<j){\\n            if(nums[i]!=vect[k]){\\n                i++;\\n            }\\n            else{\\n                p=i;\\n            }\\n            if(nums[j]!=vect[k]){\\n                j--;\\n            }\\n            else{\\n                q=j;\\n            }\\n            if(p>=0 && q>0 ){\\n                p=q-p+1;\\n                break;\\n            }\\n        }\\n        minm=min(minm,p);\\n    }return minm;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 722107,
                "title": "python-sliding-window-o-n",
                "content": "```\\nfrom collections import Counter\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        degree = max(Counter(nums).values())\\n        left, shortest = 0, len(nums)\\n        counter = Counter()\\n        for right, num in enumerate(nums):\\n            counter[num]+=1\\n            while counter[num] == degree:\\n                shortest = min(shortest, right-left+1)\\n                counter[nums[left]]-=1\\n                left+=1\\n        return shortest\\n```\\n\\nThe basic idea is to shrink the window while it contains an element with the max degree; updating the minimum size each time.\\n\\nTime: O(n) for creating the counter. O(n) for the `for` loop as well since each element is visited at most twice.\\nSpace: O(n) for the counters",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Sliding Window"
                ],
                "code": "```\\nfrom collections import Counter\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        degree = max(Counter(nums).values())\\n        left, shortest = 0, len(nums)\\n        counter = Counter()\\n        for right, num in enumerate(nums):\\n            counter[num]+=1\\n            while counter[num] == degree:\\n                shortest = min(shortest, right-left+1)\\n                counter[nums[left]]-=1\\n                left+=1\\n        return shortest\\n```",
                "codeTag": "Java"
            },
            {
                "id": 632177,
                "title": "c-very-short-solution-using-map",
                "content": "```\\nint findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, vector<int>> hash;\\n        int m = 0;\\n        int ans = INT_MAX;\\n        for(int i=0 ; i<nums.size(); i++)\\n            hash[nums[i]].push_back(i);\\n        for(auto &p: hash)\\n        {\\n            int len = p.second.size();\\n            m = max(m, len);\\n        }\\n        for(auto &p: hash)\\n        {\\n            if(p.second.size()==m)\\n                ans = min(ans, p.second[p.second.size()-1] - p.second[0] + 1);\\n        }\\n        \\n        return ans;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\nint findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, vector<int>> hash;\\n        int m = 0;\\n        int ans = INT_MAX;\\n        for(int i=0 ; i<nums.size(); i++)\\n            hash[nums[i]].push_back(i);\\n        for(auto &p: hash)\\n        {\\n            int len = p.second.size();\\n            m = max(m, len);\\n        }\\n        for(auto &p: hash)\\n        {\\n            if(p.second.size()==m)\\n                ans = min(ans, p.second[p.second.size()-1] - p.second[0] + 1);\\n        }\\n        \\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 479775,
                "title": "short-and-easy-solution-67-runtime-72-memory",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        d = dict()\\n        for i, num in enumerate(nums):\\n            freq, first_occur, last_occur = d.get(num, (0, i, i))\\n            d[num] = (freq + 1, first_occur, i)\\n        \\n        freq, first_occur, last_occur = max(d.values(), key=lambda x: (x[0], x[1]-x[2]))\\n        return last_occur - first_occur + 1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        d = dict()\\n        for i, num in enumerate(nums):\\n            freq, first_occur, last_occur = d.get(num, (0, i, i))\\n            d[num] = (freq + 1, first_occur, i)\\n        \\n        freq, first_occur, last_occur = max(d.values(), key=lambda x: (x[0], x[1]-x[2]))\\n        return last_occur - first_occur + 1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 434794,
                "title": "python3-solution-beat-100",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        if nums == []:\\n            return 0\\n        dic = {}\\n        for n in nums:\\n            if n not in dic:\\n                dic[n] = 1\\n            else:\\n                dic[n] += 1\\n        degree = max(dic.values())\\n        if degree == 1:\\n            return 1\\n        else:\\n            min_length = len(nums)\\n            for keys in dic:\\n                if dic[keys] == degree:\\n                    pos1 = nums.index(keys)\\n                    pos2 = len(nums) -nums[::-1].index(keys) - 1\\n                    if pos2 - pos1 + 1 < min_length:\\n                        min_length = pos2 - pos1 + 1\\n        return min_length\\n            \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        if nums == []:\\n            return 0\\n        dic = {}\\n        for n in nums:\\n            if n not in dic:\\n                dic[n] = 1\\n            else:\\n                dic[n] += 1\\n        degree = max(dic.values())\\n        if degree == 1:\\n            return 1\\n        else:\\n            min_length = len(nums)\\n            for keys in dic:\\n                if dic[keys] == degree:\\n                    pos1 = nums.index(keys)\\n                    pos2 = len(nums) -nums[::-1].index(keys) - 1\\n                    if pos2 - pos1 + 1 < min_length:\\n                        min_length = pos2 - pos1 + 1\\n        return min_length\\n            \\n```",
                "codeTag": "Java"
            },
            {
                "id": 373903,
                "title": "c-o-n-k-s-n-solution",
                "content": "```\\n/*\\nO(N+K), S(K)\\nN: length of vector\\nK: number of unique elements\\n*/\\n\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        if(nums.size() <= 1) return nums.size();\\n        unordered_map<int, Element> hashmap;\\n        int max_freq = INT_MIN;\\n        // first round, record freq, first_pos and last_pos\\n        // also record the max_freq, i.e., the candidates\\n        for(int i = 0; i < nums.size(); ++i) {\\n            if(hashmap.count(nums[i]) == 0) {\\n                hashmap.insert(make_pair(nums[i],Element(1, i, i)));\\n                max_freq = max(max_freq, 1);\\n            }\\n            else {\\n                auto it = hashmap.find(nums[i]);\\n                ++(it->second.freq);\\n                it->second.last_pos = i;\\n                max_freq = max(max_freq, it->second.freq);\\n            }\\n        }\\n        int res = INT_MAX;\\n        // second round, check all candidates and find out min res\\n        for(auto it = hashmap.begin(); it != hashmap.end(); ++it) {\\n            if(it->second.freq == max_freq) {\\n                res = min(res, it->second.last_pos - it->second.first_pos+1);\\n            }\\n        }\\n        return res;\\n    }\\nprivate:\\n    struct Element {\\n        int freq;\\n        int first_pos;\\n        int last_pos;\\n        Element (int freq_, int first_pos_, int last_pos_) {\\n            freq = freq_;\\n            first_pos = first_pos_;\\n            last_pos = last_pos_;\\n        }\\n    };\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n/*\\nO(N+K), S(K)\\nN: length of vector\\nK: number of unique elements\\n*/\\n\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        if(nums.size() <= 1) return nums.size();\\n        unordered_map<int, Element> hashmap;\\n        int max_freq = INT_MIN;\\n        // first round, record freq, first_pos and last_pos\\n        // also record the max_freq, i.e., the candidates\\n        for(int i = 0; i < nums.size(); ++i) {\\n            if(hashmap.count(nums[i]) == 0) {\\n                hashmap.insert(make_pair(nums[i],Element(1, i, i)));\\n                max_freq = max(max_freq, 1);\\n            }\\n            else {\\n                auto it = hashmap.find(nums[i]);\\n                ++(it->second.freq);\\n                it->second.last_pos = i;\\n                max_freq = max(max_freq, it->second.freq);\\n            }\\n        }\\n        int res = INT_MAX;\\n        // second round, check all candidates and find out min res\\n        for(auto it = hashmap.begin(); it != hashmap.end(); ++it) {\\n            if(it->second.freq == max_freq) {\\n                res = min(res, it->second.last_pos - it->second.first_pos+1);\\n            }\\n        }\\n        return res;\\n    }\\nprivate:\\n    struct Element {\\n        int freq;\\n        int first_pos;\\n        int last_pos;\\n        Element (int freq_, int first_pos_, int last_pos_) {\\n            freq = freq_;\\n            first_pos = first_pos_;\\n            last_pos = last_pos_;\\n        }\\n    };\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 187842,
                "title": "java-one-for-loop-solution",
                "content": "Use two HashMaps—one for counting frequencies and the other for recording the first occurence of a number. The result of the algorithm is the last position of the most frequent number substract its first position plus 1. \n\n```\nclass Solution {\n    public int findShortestSubArray(int[] nums) {\n        Map<Integer, Integer> count = new HashMap<>();\n        Map<Integer, Integer> pos = new HashMap<>();\n        int maxCount = 0;\n        int res = 0;\n        \n        for (int i = 0; i < nums.length; i++) {\n            int n = count.getOrDefault(nums[i], 0) + 1;\n            count.put(nums[i], n);\n            if (!pos.containsKey(nums[i])) pos.put(nums[i], i);\n            if (n > maxCount) {\n                maxCount = n;\n                res = i - pos.get(nums[i]) + 1;\n            } else if (n == maxCount) {\n                res = Math.min(res, i - pos.get(nums[i]) + 1);\n            }\n        }\n        return res;\n    }\n}\n```",
                "solutionTags": [],
                "code": "```\nclass Solution {\n    public int findShortestSubArray(int[] nums) {\n        Map<Integer, Integer> count = new HashMap<>();\n        Map<Integer, Integer> pos = new HashMap<>();\n        int maxCount = 0;\n        int res = 0;\n        \n        for (int i = 0; i < nums.length; i++) {\n            int n = count.getOrDefault(nums[i], 0) + 1;\n            count.put(nums[i], n);\n            if (!pos.containsKey(nums[i])) pos.put(nums[i], i);\n            if (n > maxCount) {\n                maxCount = n;\n                res = i - pos.get(nums[i]) + 1;\n            } else if (n == maxCount) {\n                res = Math.min(res, i - pos.get(nums[i]) + 1);\n            }\n        }\n        return res;\n    }\n}\n```",
                "codeTag": "Java"
            },
            {
                "id": 172383,
                "title": "comprehensive-javascript-solution",
                "content": "```\\nvar findShortestSubArray = function(nums) {\\n    // \\u91CD\\u590D\\u6B21\\u6570\\u6700\\u591A\\u7684\\u90A3\\u4E2A\\u5143\\u7D20\\u7684\\u7B2C\\u4E00\\u4E2A\\u4E0B\\u6807\\u548C\\u6700\\u540E\\u4E00\\u4E2A\\u4E0B\\u6807\\u7684\\u5DEE\\u503C\\u52A0\\u4E00\\u5373\\u4E3A\\u8DDD\\u79BB\\uFF0C \\u53EF\\u80FD\\u91CD\\u590D\\u7684\\u5143\\u7D20\\u4E0D\\u6B62\\u4E00\\u4E2A\\u3002\\n    var counts = {};\\n    var max = 0;\\n    for(let i = 0; i < nums.length; i++) {\\n        counts[nums[i]] = (counts[nums[i]] || 0) + 1;\\n        max = Math.max(max, counts[nums[i]]);\\n    }\\n    var res = nums.length;\\n    for(var k in counts) {\\n        if(counts[k] === max) {\\n            res = Math.min(res, nums.lastIndexOf(Number(k)) - nums.indexOf(Number(k)) + 1);\\n        }\\n    }\\n    return res;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar findShortestSubArray = function(nums) {\\n    // \\u91CD\\u590D\\u6B21\\u6570\\u6700\\u591A\\u7684\\u90A3\\u4E2A\\u5143\\u7D20\\u7684\\u7B2C\\u4E00\\u4E2A\\u4E0B\\u6807\\u548C\\u6700\\u540E\\u4E00\\u4E2A\\u4E0B\\u6807\\u7684\\u5DEE\\u503C\\u52A0\\u4E00\\u5373\\u4E3A\\u8DDD\\u79BB\\uFF0C \\u53EF\\u80FD\\u91CD\\u590D\\u7684\\u5143\\u7D20\\u4E0D\\u6B62\\u4E00\\u4E2A\\u3002\\n    var counts = {};\\n    var max = 0;\\n    for(let i = 0; i < nums.length; i++) {\\n        counts[nums[i]] = (counts[nums[i]] || 0) + 1;\\n        max = Math.max(max, counts[nums[i]]);\\n    }\\n    var res = nums.length;\\n    for(var k in counts) {\\n        if(counts[k] === max) {\\n            res = Math.min(res, nums.lastIndexOf(Number(k)) - nums.indexOf(Number(k)) + 1);\\n        }\\n    }\\n    return res;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 162152,
                "title": "intuitive-python-solution",
                "content": "\\n    # O(n) time\\n    # O(n) space\\n\\t\\t\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        count = {}\\n        first_appearance = {}\\n        last_appearance = {}\\n        degree = 0\\n        for i, num in enumerate(nums):\\n            if num in count:\\n                count[num] += 1\\n                last_appearance[num] = i\\n            else:\\n                count[num] = 1\\n                first_appearance[num] = i\\n                last_appearance[num] = i\\n            degree = max(degree, count[num])        \\n        min_len = float(\\'inf\\')\\n        for num in count:\\n            if count[num] == degree:\\n                min_len = min(min_len, last_appearance[num] - first_appearance[num]+1)\\n        return min_len\\n                    ",
                "solutionTags": [],
                "code": "\\n    # O(n) time\\n    # O(n) space\\n\\t\\t\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        count = {}\\n        first_appearance = {}\\n        last_appearance = {}\\n        degree = 0\\n        for i, num in enumerate(nums):\\n            if num in count:\\n                count[num] += 1\\n                last_appearance[num] = i\\n            else:\\n                count[num] = 1\\n                first_appearance[num] = i\\n                last_appearance[num] = i\\n            degree = max(degree, count[num])        \\n        min_len = float(\\'inf\\')\\n        for num in count:\\n            if count[num] == degree:\\n                min_len = min(min_len, last_appearance[num] - first_appearance[num]+1)\\n        return min_len\\n                    ",
                "codeTag": "Python3"
            },
            {
                "id": 140809,
                "title": "clean-c-solution-one-pass",
                "content": "```\\npublic class Solution {\\n    \\n    class Item\\n    {\\n        public int degree; // total length \\n        public int count;  // count of same numbers\\n        public int start;  // start index\\n    }\\n    \\n    public int FindShortestSubArray(int[] nums) {\\n        int minDegree = 0;\\n        Dictionary<int, Item> dict = new Dictionary<int, Item>();        \\n        int maxCount = 0;\\n        \\n        for (int i = 0; i < nums.Length; i++) \\n        {\\n            int num = nums[i];\\n            \\n            if (dict.ContainsKey(num))\\n            {\\n                dict[num].count++;\\n                dict[num].degree = i - dict[num].start + 1;                                               \\n            }\\n            else\\n            {\\n                dict[num] = new Item(){ start = i, count = 1, degree = 1 };\\n            }\\n            \\n            if (dict[num].count > maxCount || (dict[num].count == maxCount && dict[num].degree < minDegree))\\n            {\\n                maxCount = dict[num].count;\\n                minDegree = dict[num].degree;\\n            }\\n        }\\n        \\n        \\n        return minDegree;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    \\n    class Item\\n    {\\n        public int degree; // total length \\n        public int count;  // count of same numbers\\n        public int start;  // start index\\n    }\\n    \\n    public int FindShortestSubArray(int[] nums) {\\n        int minDegree = 0;\\n        Dictionary<int, Item> dict = new Dictionary<int, Item>();        \\n        int maxCount = 0;\\n        \\n        for (int i = 0; i < nums.Length; i++) \\n        {\\n            int num = nums[i];\\n            \\n            if (dict.ContainsKey(num))\\n            {\\n                dict[num].count++;\\n                dict[num].degree = i - dict[num].start + 1;                                               \\n            }\\n            else\\n            {\\n                dict[num] = new Item(){ start = i, count = 1, degree = 1 };\\n            }\\n            \\n            if (dict[num].count > maxCount || (dict[num].count == maxCount && dict[num].degree < minDegree))\\n            {\\n                maxCount = dict[num].count;\\n                minDegree = dict[num].degree;\\n            }\\n        }\\n        \\n        \\n        return minDegree;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 108714,
                "title": "python-solution-with-detailed-explanation",
                "content": "**Degree of an Array** https://leetcode.com/problems/degree-of-an-array/description/\\n\\n**Two Pointer Solution**\\n* First compute the degree of the array.\\n* Then use start and end as two pointers. Initialize start as 0 and extend end till we get a solution. Then reduce start to optimize the solution.\\n* O(N) time and O(N) space.\\n```\\nfrom collections import Counter, defaultdict\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        if nums == []:\\n            return 0\\n        degree = max(Counter(nums).values())\\n        so_far = defaultdict(int)\\n        min_size = len(nums)\\n        start, end = 0, len(nums)-1\\n        for end, num in enumerate(nums):\\n            so_far[num] += 1\\n            while start <= end and so_far[num] == degree:\\n                min_size = min(min_size, end-start+1)\\n                so_far[nums[start]] -= 1\\n                start += 1\\n        return min_size\\n```\\n\\n**Store start and end indices to optimize range**\\n* In the first pass, preprocess the input so that we have the frequency of each number, start index and end index. In addition, we can also compute the degree.\\n* In the second pass, scan the table again, and minimize the range.\\n* O(N) time and space.\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        table, degree, min_range = {}, 0, len(nums)\\n        for idx, num in enumerate(nums):\\n            v = table.setdefault(num, [0, None, None])\\n            v[0] += 1\\n            if v[1] is None: v[1]= idx\\n            v[2] = idx\\n            degree = max(degree, v[0])\\n        return min(v[2]-v[1]+1 for k,v in table.items() if v[0]==degree)\\n```",
                "solutionTags": [],
                "code": "```\\nfrom collections import Counter, defaultdict\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        if nums == []:\\n            return 0\\n        degree = max(Counter(nums).values())\\n        so_far = defaultdict(int)\\n        min_size = len(nums)\\n        start, end = 0, len(nums)-1\\n        for end, num in enumerate(nums):\\n            so_far[num] += 1\\n            while start <= end and so_far[num] == degree:\\n                min_size = min(min_size, end-start+1)\\n                so_far[nums[start]] -= 1\\n                start += 1\\n        return min_size\\n```\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        table, degree, min_range = {}, 0, len(nums)\\n        for idx, num in enumerate(nums):\\n            v = table.setdefault(num, [0, None, None])\\n            v[0] += 1\\n            if v[1] is None: v[1]= idx\\n            v[2] = idx\\n            degree = max(degree, v[0])\\n        return min(v[2]-v[1]+1 for k,v in table.items() if v[0]==degree)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4004178,
                "title": "best-java-solution-beats-95",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        Map<Integer, int[]> m = new HashMap<>();\\n        int max = 0;\\n        int res = 0;\\n        for(int i=0;i<nums.length;i++){\\n            int a = nums[i];\\n            if(!m.containsKey(a)){\\n                m.put(a, new int[]{i,i,1});\\n                if(max == 0) max = 1;\\n                if(res == 0) res = 1;\\n            }else{\\n                int []x = m.get(a);\\n                x[1] = i;\\n                x[2]++;\\n                if(x[2]>max){\\n                    max = x[2];\\n                    res = i-x[0]+1;\\n                }else if(x[2] == max){\\n                    res = Math.min(res, i-x[0]+1);\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        Map<Integer, int[]> m = new HashMap<>();\\n        int max = 0;\\n        int res = 0;\\n        for(int i=0;i<nums.length;i++){\\n            int a = nums[i];\\n            if(!m.containsKey(a)){\\n                m.put(a, new int[]{i,i,1});\\n                if(max == 0) max = 1;\\n                if(res == 0) res = 1;\\n            }else{\\n                int []x = m.get(a);\\n                x[1] = i;\\n                x[2]++;\\n                if(x[2]>max){\\n                    max = x[2];\\n                    res = i-x[0]+1;\\n                }else if(x[2] == max){\\n                    res = Math.min(res, i-x[0]+1);\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3744763,
                "title": "degree-of-an-array",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n- store elements frequ their start and end index , then find max freq elemtns and among them their min length ie end-start +1 cause min subbarray must contain all max freq elements \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- BRUTE - store elements with their indiices as pairs in an array and sort them , and find max occuring element or elements,  and then find those max freq element , length  ie min index -max index of that element + 1.  and which one has min length return. T-nlogn S-N\\n\\nOPTIMAL- store element\\'s  frequency, start indx , end indx in distinct maps and then find max frequency elements and return min  lentgh among max freq element using end-start+1.  T-n  S-N\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n - n\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n- n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        \\n        if(nums.size()==0)\\n        {\\n            return 0;\\n        }\\n\\n        unordered_map<int , int> c,s,e; // map of count , start indx and end indx of AN ELEMENT. To calculate max frequency of element or elements and min subarray of those elements start and end.\\n        \\n        int m=0; // storing max frequency of an element\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(c[nums[i]]==0) // if element occuring first time \\n            {\\n                s[nums[i]]=i; // start same indx\\n                e[nums[i]]=i; // end same indx\\n            }\\n            else // if occured more than 1 time\\n            {\\n                e[nums[i]]=i; // just change the ending indx\\n            }\\n\\n            c[nums[i]]++; // and increase every elemtns count\\n\\n            m=max(m,c[nums[i]]);// also taking max of an elemtns frequency among frequencies of elements\\n\\n        }\\n\\n                int mi=INT_MAX;// for storing max frequencies element\\'s min subbarray length\\n        for(auto i : c) // using iterator to iterate element of count map\\n        {\\n\\n                if(i.second==m)//if iterator second sub element get matched with max frequency\\n                { \\n                    mi=min(mi,e[i.first]-s[i.first]+1); // store min lentgh of matched element among matched elements\\n                                                    // using end - size +1 , because subarray must include the max \\n                                                    //frequency number\\n                }\\n\\n\\n        }\\n        return mi;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Hash Table",
                    "Two Pointers",
                    "Dynamic Programming"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        \\n        if(nums.size()==0)\\n        {\\n            return 0;\\n        }\\n\\n        unordered_map<int , int> c,s,e; // map of count , start indx and end indx of AN ELEMENT. To calculate max frequency of element or elements and min subarray of those elements start and end.\\n        \\n        int m=0; // storing max frequency of an element\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(c[nums[i]]==0) // if element occuring first time \\n            {\\n                s[nums[i]]=i; // start same indx\\n                e[nums[i]]=i; // end same indx\\n            }\\n            else // if occured more than 1 time\\n            {\\n                e[nums[i]]=i; // just change the ending indx\\n            }\\n\\n            c[nums[i]]++; // and increase every elemtns count\\n\\n            m=max(m,c[nums[i]]);// also taking max of an elemtns frequency among frequencies of elements\\n\\n        }\\n\\n                int mi=INT_MAX;// for storing max frequencies element\\'s min subbarray length\\n        for(auto i : c) // using iterator to iterate element of count map\\n        {\\n\\n                if(i.second==m)//if iterator second sub element get matched with max frequency\\n                { \\n                    mi=min(mi,e[i.first]-s[i.first]+1); // store min lentgh of matched element among matched elements\\n                                                    // using end - size +1 , because subarray must include the max \\n                                                    //frequency number\\n                }\\n\\n\\n        }\\n        return mi;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3738891,
                "title": "c-hashmap-sliding-window-tc-o-n-sc-o-n",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,int> mp ;\\n        int mxf=0 ;\\n        // Calculating maximum frequency in nums\\n        for(auto it : nums)   mp[it]++  ,  mxf = max(mxf , mp[it]) ;\\n        \\n        int l=0 , h=0 , n=nums.size() ;\\n        unordered_map<int,int> fr ;\\n        int ans=INT_MAX ;\\n        // Using sliding window for calculating minimum subarray with\\n        // maximum element frequency equal to max frequency(i.e. mxf)\\n        while(h < n)\\n        {\\n            fr[nums[h]]++ ;\\n            while(fr[nums[h]] == mxf)\\n            {\\n                ans = min(ans , h-l+1) ;\\n                fr[nums[l]]-- ;\\n                l++ ;\\n            }\\n            h++ ;\\n        }\\n        return ans ;\\n    }\\n};\\n```\\n\\n# UPVOTE IF HELPFUL :)",
                "solutionTags": [
                    "C++",
                    "Hash Table",
                    "Sliding Window"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,int> mp ;\\n        int mxf=0 ;\\n        // Calculating maximum frequency in nums\\n        for(auto it : nums)   mp[it]++  ,  mxf = max(mxf , mp[it]) ;\\n        \\n        int l=0 , h=0 , n=nums.size() ;\\n        unordered_map<int,int> fr ;\\n        int ans=INT_MAX ;\\n        // Using sliding window for calculating minimum subarray with\\n        // maximum element frequency equal to max frequency(i.e. mxf)\\n        while(h < n)\\n        {\\n            fr[nums[h]]++ ;\\n            while(fr[nums[h]] == mxf)\\n            {\\n                ans = min(ans , h-l+1) ;\\n                fr[nums[l]]-- ;\\n                l++ ;\\n            }\\n            h++ ;\\n        }\\n        return ans ;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3349572,
                "title": "c-single-linq-query",
                "content": "```\\npublic class Solution\\n{\\n    public int FindShortestSubArray(int[] nums)\\n    {\\n        var result =\\n            from index in Enumerable.Range(0, nums.Length)\\n            group index by nums[index] into sub\\n            let degree = sub.Count()\\n            let length = sub.Last() - sub.First() + 1\\n            orderby degree descending, length\\n            select length;\\n        \\n        return result.First();\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution\\n{\\n    public int FindShortestSubArray(int[] nums)\\n    {\\n        var result =\\n            from index in Enumerable.Range(0, nums.Length)\\n            group index by nums[index] into sub\\n            let degree = sub.Count()\\n            let length = sub.Last() - sub.First() + 1\\n            orderby degree descending, length\\n            select length;\\n        \\n        return result.First();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3286135,
                "title": "degree-of-an-array-o-n-javascript-memory-95-45-meaningful-vars",
                "content": "Time Complexity: O(N)\\nSpace Complexity: O(N)\\n```\\nvar findShortestSubArray = function(array) {\\n\\tconst elementMapping = {};\\n\\tfor (let index = 0; index < array.length; index++) {\\n\\t\\tconst element = array[index];\\n\\t\\tif (!elementMapping[element]) {\\n\\t\\t\\telementMapping[element] = { frequency: 1, startIndex: index, endIndex: index };\\n\\t\\t} else {\\n\\t\\t\\telementMapping[element].frequency += 1;\\n\\t\\t\\telementMapping[element].endIndex = index;\\n\\t\\t}\\n\\t}\\n\\tlet highestFrequency = -Infinity;\\n\\tlet frequencyMapping = {};\\n\\n\\tfor (const element in elementMapping) {\\n\\t\\tconst { frequency, startIndex, endIndex } = elementMapping[element];\\n\\t\\tif (frequency > highestFrequency) {\\n\\t\\t\\thighestFrequency = frequency;\\n\\t\\t}\\n\\t\\tif (!frequencyMapping[frequency]) {\\n\\t\\t\\tfrequencyMapping[frequency] = [];\\n\\t\\t}\\n\\t\\tfrequencyMapping[frequency].push(element);\\n\\t}\\n\\tlet minLength = Infinity;\\n\\tfor (const iterator of frequencyMapping[highestFrequency]) {\\n\\t\\tconst startIndex = elementMapping[iterator].startIndex;\\n\\t\\tconst endIndex = elementMapping[iterator].endIndex;\\n\\t\\tconst effectiveLength = endIndex - startIndex + 1;\\n\\t\\tif (minLength > effectiveLength) {\\n\\t\\t\\tminLength = effectiveLength;\\n\\t\\t}\\n\\t}\\n\\n\\treturn minLength;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar findShortestSubArray = function(array) {\\n\\tconst elementMapping = {};\\n\\tfor (let index = 0; index < array.length; index++) {\\n\\t\\tconst element = array[index];\\n\\t\\tif (!elementMapping[element]) {\\n\\t\\t\\telementMapping[element] = { frequency: 1, startIndex: index, endIndex: index };\\n\\t\\t} else {\\n\\t\\t\\telementMapping[element].frequency += 1;\\n\\t\\t\\telementMapping[element].endIndex = index;\\n\\t\\t}\\n\\t}\\n\\tlet highestFrequency = -Infinity;\\n\\tlet frequencyMapping = {};\\n\\n\\tfor (const element in elementMapping) {\\n\\t\\tconst { frequency, startIndex, endIndex } = elementMapping[element];\\n\\t\\tif (frequency > highestFrequency) {\\n\\t\\t\\thighestFrequency = frequency;\\n\\t\\t}\\n\\t\\tif (!frequencyMapping[frequency]) {\\n\\t\\t\\tfrequencyMapping[frequency] = [];\\n\\t\\t}\\n\\t\\tfrequencyMapping[frequency].push(element);\\n\\t}\\n\\tlet minLength = Infinity;\\n\\tfor (const iterator of frequencyMapping[highestFrequency]) {\\n\\t\\tconst startIndex = elementMapping[iterator].startIndex;\\n\\t\\tconst endIndex = elementMapping[iterator].endIndex;\\n\\t\\tconst effectiveLength = endIndex - startIndex + 1;\\n\\t\\tif (minLength > effectiveLength) {\\n\\t\\t\\tminLength = effectiveLength;\\n\\t\\t}\\n\\t}\\n\\n\\treturn minLength;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2655637,
                "title": "easy-java-solution-using-hashmap-simple-and-easy-to-understand-o-n",
                "content": "```class Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        //count the repetition of elements\\n        HashMap<Integer, Integer> count_map = new HashMap<>();\\n        //to keep the track of element when it is first appeared\\n        HashMap<Integer, Integer> first_seen = new HashMap<>();\\n        int degree = 0,res = 0;\\n        for(int i = 0;i < nums.length; i++){\\n            //put in it if the element is not present in this hashmap before\\n            first_seen.putIfAbsent(nums[i],i);\\n            count_map.put(nums[i],count_map.getOrDefault(nums[i],0)+1);\\n            if(count_map.get(nums[i] > degree)){\\n                degree = count_map.get(nums[i]);\\n                res = i - first_seen.get(nums[i])+1;  //this is the index at which repetition of element becomes more than degree\\n                //now check when that element was appeared first and subtract it from current index to get the range of minimum subarrray of that degree\\n                \\n            }\\n            else if(degree == count_map.get(nums[i])){\\n                res = Math.min(res,i-first_seen.get(nums[i])+1);\\n            }\\n        }\\n        return res;\\n    }\\n}",
                "solutionTags": [
                    "Array"
                ],
                "code": "class Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        //count the repetition of elements\\n        HashMap<Integer, Integer> count_map = new HashMap<>();\\n        //to keep the track of element when it is first appeared\\n        HashMap<Integer, Integer> first_seen = new HashMap<>();\\n        int degree = 0,res = 0;\\n        for(int i = 0;i < nums.length; i++){\\n            //put in it if the element is not present in this hashmap before\\n            first_seen.putIfAbsent(nums[i],i);\\n            count_map.put(nums[i],count_map.getOrDefault(nums[i],0)+1);\\n            if(count_map.get(nums[i] > degree)){\\n                degree = count_map.get(nums[i]);\\n                res = i - first_seen.get(nums[i])+1;  //this is the index at which repetition of element becomes more than degree\\n                //now check when that element was appeared first and subtract it from current index to get the range of minimum subarrray of that degree\\n                \\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2636480,
                "title": "python-solution-space-o-n-time-o-n",
                "content": "```\\nif not nums:\\n\\treturn \\n\\ncounter = Counter(nums)\\ncount = max(counter.values())\\n\\ntrack = defaultdict(list)\\nfor i in range(len(nums)):\\n\\ttrack[nums[i]].append(i)\\n\\nreturn min(track[t][-1]-track[t][0]+1 for t in track if counter[t] == count)",
                "solutionTags": [],
                "code": "```\\nif not nums:\\n\\treturn \\n\\ncounter = Counter(nums)\\ncount = max(counter.values())\\n\\ntrack = defaultdict(list)\\nfor i in range(len(nums)):\\n\\ttrack[nums[i]].append(i)\\n\\nreturn min(track[t][-1]-track[t][0]+1 for t in track if counter[t] == count)",
                "codeTag": "Unknown"
            },
            {
                "id": 2488604,
                "title": "js-easy-solution-with-hashmap-faster-than-100",
                "content": "```\\nvar findShortestSubArray = function(nums) {\\n    const hashmap = {};\\n    let temp = {\\n        value: [],\\n        count: 0,\\n    }\\n    \\n    for (let i = 0; i < nums.length; i++) {\\n        const num = nums[i];\\n        if (!hashmap[num]) hashmap[num] = [];\\n        const indexOfNum = hashmap[num];\\n        indexOfNum.push(i);\\n        \\n      \\n        if (indexOfNum.length > temp.count) {\\n            temp = {\\n                value: [num],\\n                count: indexOfNum.length,\\n            }\\n        } else if (indexOfNum.length === temp.count) {\\n            temp.value.push(num);\\n        }\\n    }\\n\\n    let output;\\n    for (let i = 0; i < temp.value.length; i++) {\\n        const subArray = hashmap[temp.value[i]];\\n        output = Math.min(output || +Infinity, subArray[subArray.length - 1] - subArray[0] + 1);\\n    }\\n    return output;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar findShortestSubArray = function(nums) {\\n    const hashmap = {};\\n    let temp = {\\n        value: [],\\n        count: 0,\\n    }\\n    \\n    for (let i = 0; i < nums.length; i++) {\\n        const num = nums[i];\\n        if (!hashmap[num]) hashmap[num] = [];\\n        const indexOfNum = hashmap[num];\\n        indexOfNum.push(i);\\n        \\n      \\n        if (indexOfNum.length > temp.count) {\\n            temp = {\\n                value: [num],\\n                count: indexOfNum.length,\\n            }\\n        } else if (indexOfNum.length === temp.count) {\\n            temp.value.push(num);\\n        }\\n    }\\n\\n    let output;\\n    for (let i = 0; i < temp.value.length; i++) {\\n        const subArray = hashmap[temp.value[i]];\\n        output = Math.min(output || +Infinity, subArray[subArray.length - 1] - subArray[0] + 1);\\n    }\\n    return output;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2444680,
                "title": "python-easy-solution-using-counter-and-dict",
                "content": "I use collections.Counter() to find the degree of the array ```nums```. \\nThen if an element of ```nums``` has the same degree I add all occurrences (index) of the element into a dictionary.\\nThe result is calculated as a minimum between the last and the first occurrences for every element in the dictionary\\n\\n````\\nfrom collections import Counter\\n\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        \\n        counter = Counter(nums)\\n        degree = counter.most_common(1)[0][1]\\n        \\n        positions = dict()\\n        for i in range(len(nums)):\\n            num = nums[i]\\n            if counter[num] == degree:\\n                if num not in positions:\\n                    positions[num] = [i]\\n                else:\\n                    positions[num] += [i]\\n        \\n        res = 100000\\n        for i in positions:\\n            res = min(res, positions[i][-1] - positions[i][0])\\n        return res+1\\n\\t\\t```\\n",
                "solutionTags": [
                    "Python"
                ],
                "code": "```nums```\n```nums```\n````\\nfrom collections import Counter\\n\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        \\n        counter = Counter(nums)\\n        degree = counter.most_common(1)[0][1]\\n        \\n        positions = dict()\\n        for i in range(len(nums)):\\n            num = nums[i]\\n            if counter[num] == degree:\\n                if num not in positions:\\n                    positions[num] = [i]\\n                else:\\n                    positions[num] += [i]\\n        \\n        res = 100000\\n        for i in positions:\\n            res = min(res, positions[i][-1] - positions[i][0])\\n        return res+1\\n\\t\\t```",
                "codeTag": "Java"
            },
            {
                "id": 2440362,
                "title": "simple-c-solution-using-hashmap",
                "content": "```\\nclass Solution {\\npublic:\\n    unordered_map<int,int> m;\\n    int mx(vector<int>& nums){\\n        int ans=INT_MIN;\\n        int e;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++){\\n            m[nums[i]]++;\\n        }\\n        for(auto x : m){\\n            ans=max(ans,x.second);\\n        }\\n        return ans;\\n    }\\n    \\n    int mn(vector<int>& nums,int e){\\n        int n=nums.size();\\n        int i=0,j=n-1;\\n        while(nums[i]!=e){\\n            i++;\\n        }\\n        while(nums[j]!=e){\\n            j--;\\n        }\\n        return j-i+1;\\n    }\\n    \\n    int findShortestSubArray(vector<int>& nums) {\\n        int ans=INT_MAX;\\n        int t=mx(nums);\\n        vector<int> v;\\n        for(auto i : m){\\n            if(i.second==t){\\n                v.push_back(i.first);\\n            }\\n        }\\n        for(int i=0;i<v.size();i++){\\n            ans=min(ans,mn(nums,v[i]));\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    unordered_map<int,int> m;\\n    int mx(vector<int>& nums){\\n        int ans=INT_MIN;\\n        int e;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++){\\n            m[nums[i]]++;\\n        }\\n        for(auto x : m){\\n            ans=max(ans,x.second);\\n        }\\n        return ans;\\n    }\\n    \\n    int mn(vector<int>& nums,int e){\\n        int n=nums.size();\\n        int i=0,j=n-1;\\n        while(nums[i]!=e){\\n            i++;\\n        }\\n        while(nums[j]!=e){\\n            j--;\\n        }\\n        return j-i+1;\\n    }\\n    \\n    int findShortestSubArray(vector<int>& nums) {\\n        int ans=INT_MAX;\\n        int t=mx(nums);\\n        vector<int> v;\\n        for(auto i : m){\\n            if(i.second==t){\\n                v.push_back(i.first);\\n            }\\n        }\\n        for(int i=0;i<v.size();i++){\\n            ans=min(ans,mn(nums,v[i]));\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2407404,
                "title": "compact-comment-explained-c-code-for-degree-of-an-array",
                "content": "```\\nint findShortestSubArray(vector<int>& nums) {\\n        \\n        // MAP explanation : \\n        // first parameter is the elements\\n        // second parameter\\'s first parameter is frequency count\\n        // second parameter\\'s second parameter is index storage\\n        unordered_map<int, pair<int, vector<int>>> mp;\\n        \\n        int maxi = INT_MIN;     // to calculate the max freq, i.e., the degree of array\\n        \\n        for(int i=0; i<nums.size(); i++) {\\n            mp[nums[i]].first++;    // inc the frequency\\n            mp[nums[i]].second.push_back(i);    // pushing index\\n            maxi = max(maxi, mp[nums[i]].first);    // calc the degree\\n        }\\n        \\n        int ans = INT_MAX;\\n        \\n        // iterate thru the map and if freq of any element is equal to degree,\\n        // calculate the length of subarray from first and last index of that element\\n        // and hence, minimise it.\\n        for(auto it : mp) {\\n            if(it.second.first == maxi) {\\n                int size = it.second.second.size();\\n                int l = it.second.second[0], r = it.second.second[size-1];\\n                ans = min(ans, r-l+1);\\n            }\\n        }\\n        \\n        return ans;\\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint findShortestSubArray(vector<int>& nums) {\\n        \\n        // MAP explanation : \\n        // first parameter is the elements\\n        // second parameter\\'s first parameter is frequency count\\n        // second parameter\\'s second parameter is index storage\\n        unordered_map<int, pair<int, vector<int>>> mp;\\n        \\n        int maxi = INT_MIN;     // to calculate the max freq, i.e., the degree of array\\n        \\n        for(int i=0; i<nums.size(); i++) {\\n            mp[nums[i]].first++;    // inc the frequency\\n            mp[nums[i]].second.push_back(i);    // pushing index\\n            maxi = max(maxi, mp[nums[i]].first);    // calc the degree\\n        }\\n        \\n        int ans = INT_MAX;\\n        \\n        // iterate thru the map and if freq of any element is equal to degree,\\n        // calculate the length of subarray from first and last index of that element\\n        // and hence, minimise it.\\n        for(auto it : mp) {\\n            if(it.second.first == maxi) {\\n                int size = it.second.second.size();\\n                int l = it.second.second[0], r = it.second.second[size-1];\\n                ans = min(ans, r-l+1);\\n            }\\n        }\\n        \\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2374995,
                "title": "easy-solution-python",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        \\n        #lets count the frequency\\n        if len(nums)==1:\\n            return 1\\n        freq = {}\\n        for num in nums:\\n            if (num in freq):\\n                freq[num] += 1\\n            else:\\n                freq[num] = 1\\n        #get the max frequency value\\n        m=max(freq.values())\\n        #get the element which has max value matching\\n        max_element=[k for k in freq if freq.get(k) == m]\\n        c=[]\\n        for d in max_element:\\n            visited=0\\n            first_post=0\\n            last_post=0\\n            for i in range(0,len(nums)):\\n                if d == nums[i] and visited==0:\\n                    first_post=i\\n                    visited+=1\\n                    \\n                if d== nums[i] and visited>=1:\\n                    last_post=i\\n                    visited+=1\\n                else:\\n                    pass\\n            pos=last_post-first_post\\n            pos=pos+1\\n            c.append(pos)\\n        \\n        return min(c)\\n             \\n                \\n                \\n        \\n        \\n        \\n        ``\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        \\n        #lets count the frequency\\n        if len(nums)==1:\\n            return 1\\n        freq = {}\\n        for num in nums:\\n            if (num in freq):\\n                freq[num] += 1\\n            else:\\n                freq[num] = 1\\n        #get the max frequency value\\n        m=max(freq.values())\\n        #get the element which has max value matching\\n        max_element=[k for k in freq if freq.get(k) == m]\\n        c=[]\\n        for d in max_element:\\n            visited=0\\n            first_post=0\\n            last_post=0\\n            for i in range(0,len(nums)):\\n                if d == nums[i] and visited==0:\\n                    first_post=i\\n                    visited+=1\\n                    \\n                if d== nums[i] and visited>=1:\\n                    last_post=i\\n                    visited+=1\\n                else:\\n                    pass\\n            pos=last_post-first_post\\n            pos=pos+1\\n            c.append(pos)\\n        \\n        return min(c)\\n             \\n                \\n                \\n        \\n        \\n        \\n        ``\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2373344,
                "title": "c-one-pass-hash-map-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums)\\n    {\\n        unordered_map<int,int> cnt,first;\\n        int deg=0,ans=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(cnt[nums[i]]==0)\\n                first[nums[i]]=i;\\n            cnt[nums[i]]++;\\n            if(cnt[nums[i]]>deg)\\n            {\\n                ans=i-first[nums[i]]+1;\\n                deg=cnt[nums[i]];\\n            }\\n            else if(cnt[nums[i]]==deg)\\n            {\\n                ans=min(ans,i-first[nums[i]]+1);\\n            }\\n            \\n        }\\n        return ans;\\n        \\n    }\\n};\\n//if you like the solution plz upvote.",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums)\\n    {\\n        unordered_map<int,int> cnt,first;\\n        int deg=0,ans=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(cnt[nums[i]]==0)\\n                first[nums[i]]=i;\\n            cnt[nums[i]]++;\\n            if(cnt[nums[i]]>deg)\\n            {\\n                ans=i-first[nums[i]]+1;\\n                deg=cnt[nums[i]];\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2319915,
                "title": "fast-python-with-explanation",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        dict_ = {}\\n        l=len(nums)\\n        for i in range(l):\\n            if nums[i] in dict_:\\n                dict_[nums[i]][0]+=1\\n                dict_[nums[i]][2]=i-dict_[nums[i]][1] #updating difference between first and last idx\\n            else:\\n                dict_[nums[i]] = [1,i,0] #count, first idx, difference between first and last idx\\n                \\n        max_c=0 \\n        for i in dict_:\\n            max_c = max(max_c,dict_[i][0]) #getting max occurence\\n        #print(max_c)\\n        nums_max_c = []\\n        for i in dict_:\\n            if dict_[i][0] == max_c:\\n                nums_max_c.append(i) #getting numbers with max occurence\\n        #print(nums_max_c)\\n        \\n        min_dist=51000\\n        for i in nums_max_c:\\n            min_dist = min(min_dist,dict_[i][2]) #getting min distance between first and last idx among selected numbers\\n        return min_dist+1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        dict_ = {}\\n        l=len(nums)\\n        for i in range(l):\\n            if nums[i] in dict_:\\n                dict_[nums[i]][0]+=1\\n                dict_[nums[i]][2]=i-dict_[nums[i]][1] #updating difference between first and last idx\\n            else:\\n                dict_[nums[i]] = [1,i,0] #count, first idx, difference between first and last idx\\n                \\n        max_c=0 \\n        for i in dict_:\\n            max_c = max(max_c,dict_[i][0]) #getting max occurence\\n        #print(max_c)\\n        nums_max_c = []\\n        for i in dict_:\\n            if dict_[i][0] == max_c:\\n                nums_max_c.append(i) #getting numbers with max occurence\\n        #print(nums_max_c)\\n        \\n        min_dist=51000\\n        for i in nums_max_c:\\n            min_dist = min(min_dist,dict_[i][2]) #getting min distance between first and last idx among selected numbers\\n        return min_dist+1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2305214,
                "title": "java-easy-solution-using-map",
                "content": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n       int ans = Integer.MAX_VALUE;\\n        Map<Integer, Integer> count = new HashMap<>();\\n        Map<Integer, Integer> startIndex = new HashMap<>();\\n        Map<Integer, Integer> endIndex = new HashMap<>();\\n\\n        for (int i = 0; i < nums.length; i++) {\\n            count.put(nums[i], count.getOrDefault(nums[i], 0) + 1);\\n        }\\n\\n        for (int i = 0; i < nums.length; i++) {\\n            int no = nums[i];\\n            if (!startIndex.containsKey(no)) {\\n                startIndex.put(no, i);\\n            }\\n            endIndex.put(no, i);\\n        }\\n\\n        int degree = Integer.MIN_VALUE;\\n        for (Integer key : count.keySet()) {\\n            degree = Math.max(degree, count.get(key));\\n        }\\n\\n        for (Integer key : count.keySet()) {\\n            if (count.get(key) == degree) {\\n                int arraySize = endIndex.get(key) - startIndex.get(key) + 1;\\n                ans = Math.min(ans, arraySize);\\n            }\\n        }\\n\\n        return ans; \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n       int ans = Integer.MAX_VALUE;\\n        Map<Integer, Integer> count = new HashMap<>();\\n        Map<Integer, Integer> startIndex = new HashMap<>();\\n        Map<Integer, Integer> endIndex = new HashMap<>();\\n\\n        for (int i = 0; i < nums.length; i++) {\\n            count.put(nums[i], count.getOrDefault(nums[i], 0) + 1);\\n        }\\n\\n        for (int i = 0; i < nums.length; i++) {\\n            int no = nums[i];\\n            if (!startIndex.containsKey(no)) {\\n                startIndex.put(no, i);\\n            }\\n            endIndex.put(no, i);\\n        }\\n\\n        int degree = Integer.MIN_VALUE;\\n        for (Integer key : count.keySet()) {\\n            degree = Math.max(degree, count.get(key));\\n        }\\n\\n        for (Integer key : count.keySet()) {\\n            if (count.get(key) == degree) {\\n                int arraySize = endIndex.get(key) - startIndex.get(key) + 1;\\n                ans = Math.min(ans, arraySize);\\n            }\\n        }\\n\\n        return ans; \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2291438,
                "title": "easy-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,int>freq;\\n        int maxElem = INT_MIN;\\n        for(int num:nums){\\n            freq[num]++;\\n            maxElem = max(maxElem,freq[num]);\\n        }\\n        int minLength = INT_MAX;\\n        unordered_map<int,bool>traversed;\\n        for(int i = 0;i<nums.size();i++){\\n            if(freq[nums[i]] == maxElem && !traversed[nums[i]]){\\n                int start = i;\\n                int remaining = maxElem - 1;\\n                int j = i+1;\\n                int last = start;\\n                while(j < nums.size() && remaining > 0){\\n                    if(nums[j] == nums[i]){\\n                        remaining--;\\n                        last = j;\\n                    }\\n                    j++;\\n                }\\n                minLength = min(last - start +1,minLength);\\n                traversed[nums[i]] = true;\\n            }\\n        }\\n        return minLength;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,int>freq;\\n        int maxElem = INT_MIN;\\n        for(int num:nums){\\n            freq[num]++;\\n            maxElem = max(maxElem,freq[num]);\\n        }\\n        int minLength = INT_MAX;\\n        unordered_map<int,bool>traversed;\\n        for(int i = 0;i<nums.size();i++){\\n            if(freq[nums[i]] == maxElem && !traversed[nums[i]]){\\n                int start = i;\\n                int remaining = maxElem - 1;\\n                int j = i+1;\\n                int last = start;\\n                while(j < nums.size() && remaining > 0){\\n                    if(nums[j] == nums[i]){\\n                        remaining--;\\n                        last = j;\\n                    }\\n                    j++;\\n                }\\n                minLength = min(last - start +1,minLength);\\n                traversed[nums[i]] = true;\\n            }\\n        }\\n        return minLength;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2211108,
                "title": "c-hashmaps-2-pointers-easy-clean",
                "content": "![image](https://assets.leetcode.com/users/images/d8025bc4-aad5-467b-9dae-30c828e6b564_1656444064.8686512.png)\\n\\n\\tclass Solution {\\n\\tpublic:\\n\\t\\tint findShortestSubArray(vector<int>& nums) {\\n\\t\\t\\tmap<int,int>mp;\\n\\t\\t\\tint t=0;\\n\\t\\t\\tvector<int>v;\\n\\t\\t\\tfor(int i=0;i<nums.size();i++) mp[nums[i]]++;\\n\\t\\t\\tfor(auto i:mp) t=max(t,i.second);\\n\\t\\t\\tfor(auto i:mp) {\\n\\t\\t\\t\\tif(i.second==t)v.push_back(i.first);\\n\\t\\t\\t}\\n\\t\\t\\tint ans=INT_MAX;\\n\\t\\t\\tfor(int k=0;k<v.size();k++){\\n\\t\\t\\t\\tint i=0,j=nums.size()-1;\\n\\t\\t\\t\\twhile(j>=i){\\n\\t\\t\\t\\t\\tif(nums[i]!=v[k])i++;\\n\\t\\t\\t\\t\\tif(nums[j]!=v[k])j--;\\n\\t\\t\\t\\t\\tif(nums[i]==v[k] && nums[j]==v[k]){\\n\\t\\t\\t\\t\\t\\tans=min(ans,j-i+1);\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}    \\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn ans;\\n\\t\\t}\\n\\t};",
                "solutionTags": [
                    "C++",
                    "C",
                    "Two Pointers"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tint findShortestSubArray(vector<int>& nums) {\\n\\t\\t\\tmap<int,int>mp;\\n\\t\\t\\tint t=0;\\n\\t\\t\\tvector<int>v;\\n\\t\\t\\tfor(int i=0;i<nums.size();i++) mp[nums[i]]++;\\n\\t\\t\\tfor(auto i:mp) t=max(t,i.second);\\n\\t\\t\\tfor(auto i:mp) {\\n\\t\\t\\t\\tif(i.second==t)v.push_back(i.first);\\n\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 2155928,
                "title": "java-o-n-solution-using-single-hashmap-having-array-of-integers",
                "content": "We make a hashmap having key as the elements of the input array and value as an array of size 3 such that:\\n* 0th index of each array stores the frequency of the given element\\n* 1st index stores first index in input array where the element is found\\n* 2nd index stores last index in input array where the element is found\\n\\nAfter forming the hashmap, we iterate over the keys such that there occurence is equal to the degree and choose the least difference between the starting and end index where the element was found.\\n\\n```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        int degree = Integer.MIN_VALUE;\\n        int lengthMinSubarray = Integer.MAX_VALUE;\\n        HashMap<Integer,Integer[]> hsh = new HashMap<>();\\n        for(int i=0;i<nums.length;i++){\\n            \\n            if(hsh.get(nums[i])!=null){\\n                hsh.put(nums[i],new Integer[]{hsh.get(nums[i])[0]+1,hsh.get(nums[i])[1],i});\\n            }\\n            else{\\n                hsh.put(nums[i],new Integer[]{1,i,i});\\n            }\\n            \\n            if(hsh.get(nums[i])[0]>degree)\\n                degree = hsh.get(nums[i])[0];\\n        }\\n        \\n        for(int i: hsh.keySet()){\\n            if(hsh.get(i)[0]==degree){\\n                lengthMinSubarray = Math.min(lengthMinSubarray, hsh.get(i)[2] - hsh.get(i)[1] + 1);\\n            }\\n        }\\n        \\n        return lengthMinSubarray;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        int degree = Integer.MIN_VALUE;\\n        int lengthMinSubarray = Integer.MAX_VALUE;\\n        HashMap<Integer,Integer[]> hsh = new HashMap<>();\\n        for(int i=0;i<nums.length;i++){\\n            \\n            if(hsh.get(nums[i])!=null){\\n                hsh.put(nums[i],new Integer[]{hsh.get(nums[i])[0]+1,hsh.get(nums[i])[1],i});\\n            }\\n            else{\\n                hsh.put(nums[i],new Integer[]{1,i,i});\\n            }\\n            \\n            if(hsh.get(nums[i])[0]>degree)\\n                degree = hsh.get(nums[i])[0];\\n        }\\n        \\n        for(int i: hsh.keySet()){\\n            if(hsh.get(i)[0]==degree){\\n                lengthMinSubarray = Math.min(lengthMinSubarray, hsh.get(i)[2] - hsh.get(i)[1] + 1);\\n            }\\n        }\\n        \\n        return lengthMinSubarray;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2122239,
                "title": "c-solution-with-explanation-using-map",
                "content": "Record the index of each element in an unordered map and find the degree (that would be the element with maximum indices in the map). Then for that element record the first and last index. minimum subarray length will be **last - first + 1**.\\n\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,vector<int>> mp;\\n        int deg = 0;\\n        for(int i=0; i<nums.size(); i++) mp[nums[i]].push_back(i);\\n        for (auto& e : mp) deg = max(deg, (int)e.second.size());\\n        int len = nums.size();\\n        for (auto& e : mp) {\\n            if (e.second.size() == deg) {\\n                len = min(len, e.second.back() - e.second.front() + 1);\\n            }\\n        } return len;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,vector<int>> mp;\\n        int deg = 0;\\n        for(int i=0; i<nums.size(); i++) mp[nums[i]].push_back(i);\\n        for (auto& e : mp) deg = max(deg, (int)e.second.size());\\n        int len = nums.size();\\n        for (auto& e : mp) {\\n            if (e.second.size() == deg) {\\n                len = min(len, e.second.back() - e.second.front() + 1);\\n            }\\n        } return len;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2083144,
                "title": "fastest-java-solution-using-hashmap",
                "content": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) \\n    {\\n        HashMap<Integer,Integer> count = new HashMap<>(),left = new HashMap<>(),right = new HashMap<>();\\n        int j = 0;\\n        for(int num:nums)\\n        {\\n            if(left.get(num)==null)\\n                left.put(num,j);\\n            right.put(num,j);\\n            count.put(num,count.getOrDefault(num,0)+1);\\n            j++;\\n        }\\n        int min=Integer.MAX_VALUE;\\n        int degree = Collections.max(count.values());\\n        for(int num:count.keySet())\\n        {\\n            if(count.get(num)==degree)\\n                min = Math.min(min,right.get(num)-left.get(num)+1);\\n        }\\n        return min;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public int findShortestSubArray(int[] nums) \\n    {\\n        HashMap<Integer,Integer> count = new HashMap<>(),left = new HashMap<>(),right = new HashMap<>();\\n        int j = 0;\\n        for(int num:nums)\\n        {\\n            if(left.get(num)==null)\\n                left.put(num,j);\\n            right.put(num,j);\\n            count.put(num,count.getOrDefault(num,0)+1);\\n            j++;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2082317,
                "title": "c-solution-faster-than-97-26-solutions-using-hash-map",
                "content": "```\\n#include<bits/stdc++.h>\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, vector<int>> m;\\n        int degree = 0, res = INT_MAX;\\n        for(int i = 0; i < nums.size(); i++) {\\n            m[nums[i]].push_back(i);\\n            degree = max(degree, (int)m[nums[i]].size());\\n        }\\n        for(auto it : m) {\\n            if(it.second.size() == degree)\\n                res = min(res, it.second[degree - 1] - it.second[0]);\\n        }\\n        return res + 1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n#include<bits/stdc++.h>\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, vector<int>> m;\\n        int degree = 0, res = INT_MAX;\\n        for(int i = 0; i < nums.size(); i++) {\\n            m[nums[i]].push_back(i);\\n            degree = max(degree, (int)m[nums[i]].size());\\n        }\\n        for(auto it : m) {\\n            if(it.second.size() == degree)\\n                res = min(res, it.second[degree - 1] - it.second[0]);\\n        }\\n        return res + 1;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 1922608,
                "title": "python3-easy-solution-with-comments-time-o-n-and-space-o-n",
                "content": "\\t\\t#find which elements have the max frequency. maintain them in a set\\n        #keep a track of the start and end positions of the elements\\n        #now iterate over the set, and find which can be the smallest possible subarray\\n        #Time: O(N) and space O(N)\\n        \\n        #O(N)+O(N)+O(N) = O(N) space\\n        dict1 = {}\\n        dict1Pos = {}\\n        elementsWithMaxFreq = set()\\n        \\n        maxFreq = 0\\n        #O(N) time\\n        for key,num in enumerate(nums):\\n            if num not in dict1:\\n                dict1[num] = 1\\n                dict1Pos[num] = [key,key]\\n            else:\\n                dict1[num] +=1\\n                dict1Pos[num][1] = key\\n                \\n            if maxFreq < dict1[num]:\\n                    maxFreq = dict1[num]\\n        \\n        #O(N) time\\n        for key,value in dict1.items():\\n            if value == maxFreq:\\n                elementsWithMaxFreq.add(key)\\n\\n        \\n        answer = inf\\n        #O(N)\\n        for key in elementsWithMaxFreq:\\n            start = dict1Pos[key][0]\\n            end = dict1Pos[key][1]\\n            if answer>end-start+1:\\n                answer = end-start+1\\n        return answer\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "\\t\\t#find which elements have the max frequency. maintain them in a set\\n        #keep a track of the start and end positions of the elements\\n        #now iterate over the set, and find which can be the smallest possible subarray\\n        #Time: O(N) and space O(N)\\n        \\n        #O(N)+O(N)+O(N) = O(N) space\\n        dict1 = {}\\n        dict1Pos = {}\\n        elementsWithMaxFreq = set()\\n        \\n        maxFreq = 0\\n        #O(N) time\\n        for key,num in enumerate(nums):\\n            if num not in dict1:\\n                dict1[num] = 1\\n                dict1Pos[num] = [key,key]\\n            else:\\n                dict1[num] +=1\\n                dict1Pos[num][1] = key\\n                \\n            if maxFreq < dict1[num]:\\n                    maxFreq = dict1[num]\\n        \\n        #O(N) time\\n        for key,value in dict1.items():\\n            if value == maxFreq:\\n                elementsWithMaxFreq.add(key)\\n\\n        \\n        answer = inf\\n        #O(N)\\n        for key in elementsWithMaxFreq:\\n            start = dict1Pos[key][0]\\n            end = dict1Pos[key][1]\\n            if answer>end-start+1:\\n                answer = end-start+1\\n        return answer\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1881825,
                "title": "simple-c-solution-using-map",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& arr) {\\n        int n = arr.size();\\n        unordered_map<int,int> mp;\\n        for(int i=0 ; i<n ; i++){\\n            mp[arr[i]]++;\\n        }\\n        int maxf=INT_MIN;\\n        int maxx = INT_MIN;\\n        for(auto it:mp){\\n            if(it.second>maxf){\\n                maxf = it.second;\\n                maxx = it.first;\\n            }\\n        }\\n        \\n        vector<int> maxelem;\\n        for(auto it:mp){\\n            if(it.second==maxf){\\n                maxelem.push_back(it.first);\\n            }\\n        }\\n        \\n        int minn = INT_MAX;\\n        for(int j=0 ; j<maxelem.size() ; j++){\\n            int start = 0 , end = n-1;\\n            for(int i=0 ; i<n ; i++){\\n                if(arr[i]==maxelem[j]){\\n                    end = i;\\n                }\\n            }\\n\\n            for(int i=n-1 ; i>=0 ; i--){\\n                if(arr[i]==maxelem[j]){\\n                    start = i;\\n                }\\n            }\\n            minn = min(minn ,end-start+1 );\\n        }\\n        return minn;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& arr) {\\n        int n = arr.size();\\n        unordered_map<int,int> mp;\\n        for(int i=0 ; i<n ; i++){\\n            mp[arr[i]]++;\\n        }\\n        int maxf=INT_MIN;\\n        int maxx = INT_MIN;\\n        for(auto it:mp){\\n            if(it.second>maxf){\\n                maxf = it.second;\\n                maxx = it.first;\\n            }\\n        }\\n        \\n        vector<int> maxelem;\\n        for(auto it:mp){\\n            if(it.second==maxf){\\n                maxelem.push_back(it.first);\\n            }\\n        }\\n        \\n        int minn = INT_MAX;\\n        for(int j=0 ; j<maxelem.size() ; j++){\\n            int start = 0 , end = n-1;\\n            for(int i=0 ; i<n ; i++){\\n                if(arr[i]==maxelem[j]){\\n                    end = i;\\n                }\\n            }\\n\\n            for(int i=n-1 ; i>=0 ; i--){\\n                if(arr[i]==maxelem[j]){\\n                    start = i;\\n                }\\n            }\\n            minn = min(minn ,end-start+1 );\\n        }\\n        return minn;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1849328,
                "title": "c-solution-with-explanation-this-question-should-be-a-medium-one",
                "content": "It would have been easy if only one element had the max frequency \\nBut more than one elements can have max frequency\\nSo the best way to do this question is \\nFind the max frequency & starting and ending index of every element \\nNow iterate the frequency map\\nIf you find an element that has max frequency find it\\'s starting and ending index that we stored earlier\\n\\n```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& a) {\\n        \\n        int n = a.size();\\n        \\n        map<int,int> m;\\n        map<int, pair<int,int>> se;\\n        \\n        int mf = 0;\\n        \\n        int ans = n;\\n        \\n        for(int i = 0 ; i < n ; i++){\\n            \\n            m[a[i]]++;\\n            mf = max(mf,m[a[i]]);\\n            \\n            if(se.find(a[i]) != se.end())\\n                se[a[i]].second = i;    \\n            else    \\n                se[a[i]] = {i,i};\\n            \\n        }\\n        \\n        for(auto i:m){\\n            \\n            if(i.second == mf){\\n                \\n                auto indices = se[i.first];\\n                \\n                int s = indices.first;\\n                int e = indices.second;\\n                \\n                ans = min(ans, e-s+1);\\n                \\n            }\\n            \\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& a) {\\n        \\n        int n = a.size();\\n        \\n        map<int,int> m;\\n        map<int, pair<int,int>> se;\\n        \\n        int mf = 0;\\n        \\n        int ans = n;\\n        \\n        for(int i = 0 ; i < n ; i++){\\n            \\n            m[a[i]]++;\\n            mf = max(mf,m[a[i]]);\\n            \\n            if(se.find(a[i]) != se.end())\\n                se[a[i]].second = i;    \\n            else    \\n                se[a[i]] = {i,i};\\n            \\n        }\\n        \\n        for(auto i:m){\\n            \\n            if(i.second == mf){\\n                \\n                auto indices = se[i.first];\\n                \\n                int s = indices.first;\\n                int e = indices.second;\\n                \\n                ans = min(ans, e-s+1);\\n                \\n            }\\n            \\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1832039,
                "title": "java-sliding-window-hashmap",
                "content": "```\\n public int findShortestSubArray(int[] nums) {\\n        //calculate the degree\\n        HashMap<Integer, Integer> number = new HashMap<>();\\n        int degree = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            int count = number.getOrDefault(nums[i], 0) + 1;\\n            number.put(nums[i], count);\\n            degree = Math.max(degree, count);\\n        }\\n        int ans = Integer.MAX_VALUE;\\n        HashMap<Integer, Integer> occur = new HashMap<>();\\n        int end = 0;\\n\\t\\t//build the first sliding window\\n        while (end < nums.length ) {\\n            int count = occur.getOrDefault(nums[end], 0);\\n            count++;\\n            occur.put(nums[end], count);\\n            if (count == degree) {\\n                break;\\n            }\\n            end++;\\n        }\\n        ans = Math.min(ans, end + 1);\\n        for (int i = 0; i < nums.length; i++) {\\n            if (occur.getOrDefault(nums[i], 0) != degree) {\\n                occur.put(nums[i], occur.getOrDefault(nums[i], 0) - 1);\\n            } else {\\n                occur.put(nums[i], occur.getOrDefault(nums[i], 0) - 1);\\n                //only one number whoes degree will be the k(which is the degree of the entire array)\\n                end++;\\n                while (end < nums.length ) {\\n                    int count = occur.getOrDefault(nums[end], 0) + 1;\\n                    occur.put(nums[end], count);\\n                    if (count == degree) {\\n                        break;\\n                    }\\n                    end++;\\n                }\\n                if (end == nums.length) {\\n                    // this sliding windows donesn\\'t have the k degree,so should discard\\n                    break;\\n                }\\n            }\\n            //while the slidin window, if this number is delete, we just need to find a new number that his degree is k\\n            //start the slding\\n            ans = Math.min(ans, end - i);\\n        }\\n        return ans;\\n    }\\n```",
                "solutionTags": [
                    "Java",
                    "Sliding Window"
                ],
                "code": "```\\n public int findShortestSubArray(int[] nums) {\\n        //calculate the degree\\n        HashMap<Integer, Integer> number = new HashMap<>();\\n        int degree = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            int count = number.getOrDefault(nums[i], 0) + 1;\\n            number.put(nums[i], count);\\n            degree = Math.max(degree, count);\\n        }\\n        int ans = Integer.MAX_VALUE;\\n        HashMap<Integer, Integer> occur = new HashMap<>();\\n        int end = 0;\\n\\t\\t//build the first sliding window\\n        while (end < nums.length ) {\\n            int count = occur.getOrDefault(nums[end], 0);\\n            count++;\\n            occur.put(nums[end], count);\\n            if (count == degree) {\\n                break;\\n            }\\n            end++;\\n        }\\n        ans = Math.min(ans, end + 1);\\n        for (int i = 0; i < nums.length; i++) {\\n            if (occur.getOrDefault(nums[i], 0) != degree) {\\n                occur.put(nums[i], occur.getOrDefault(nums[i], 0) - 1);\\n            } else {\\n                occur.put(nums[i], occur.getOrDefault(nums[i], 0) - 1);\\n                //only one number whoes degree will be the k(which is the degree of the entire array)\\n                end++;\\n                while (end < nums.length ) {\\n                    int count = occur.getOrDefault(nums[end], 0) + 1;\\n                    occur.put(nums[end], count);\\n                    if (count == degree) {\\n                        break;\\n                    }\\n                    end++;\\n                }\\n                if (end == nums.length) {\\n                    // this sliding windows donesn\\'t have the k degree,so should discard\\n                    break;\\n                }\\n            }\\n            //while the slidin window, if this number is delete, we just need to find a new number that his degree is k\\n            //start the slding\\n            ans = Math.min(ans, end - i);\\n        }\\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1789271,
                "title": "python-easy-solution-beats-94-68",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        x = dict(Counter(nums)) # counter all types of number\\n        \\n        All = {} \\n        Max = max(x.values()) # find the The highest frequency number\\n        Min = float(\\'inf\\') #  a very large value\\n        for i in x:\\n            if x[i] == Max:\\n                All[i] = []  # put the number into Dict\\n       \\n        for i in range(len(nums)):\\n            if nums[i] in All:\\n                All[nums[i]].append(i)   # record the position of The highest frequency number in nums\\n        \\n        for k in All:\\n            for i in range(len(All[k])-(Max-1)):  # find the min-distance each highest frequency number\\n                Min = min(Min,All[k][i+(Max-1)] - All[k][i] + 1)\\n  \\n        return Min \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        x = dict(Counter(nums)) # counter all types of number\\n        \\n        All = {} \\n        Max = max(x.values()) # find the The highest frequency number\\n        Min = float(\\'inf\\') #  a very large value\\n        for i in x:\\n            if x[i] == Max:\\n                All[i] = []  # put the number into Dict\\n       \\n        for i in range(len(nums)):\\n            if nums[i] in All:\\n                All[nums[i]].append(i)   # record the position of The highest frequency number in nums\\n        \\n        for k in All:\\n            for i in range(len(All[k])-(Max-1)):  # find the min-distance each highest frequency number\\n                Min = min(Min,All[k][i+(Max-1)] - All[k][i] + 1)\\n  \\n        return Min \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1782266,
                "title": "python-simple-solution",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        hashtable = {}\\n        largestCount = 1\\n        for i in range(len(nums)):\\n            n = nums[i]\\n            if hashtable.get(n):\\n                num = hashtable.get(n)\\n                num.append(i)\\n                hashtable[n] = num\\n                if len(num) >= largestCount:\\n                    largestCount = len(num)\\n            else:\\n                hashtable[n] = [i]\\n        smallestLength = len(nums)\\n        for n in nums:\\n            arr = hashtable[n]\\n            if len(arr) == largestCount:\\n                smallestLength = min(smallestLength, arr[len(arr)-1] - arr[0])\\n        return smallestLength + 1\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        hashtable = {}\\n        largestCount = 1\\n        for i in range(len(nums)):\\n            n = nums[i]\\n            if hashtable.get(n):\\n                num = hashtable.get(n)\\n                num.append(i)\\n                hashtable[n] = num\\n                if len(num) >= largestCount:\\n                    largestCount = len(num)\\n            else:\\n                hashtable[n] = [i]\\n        smallestLength = len(nums)\\n        for n in nums:\\n            arr = hashtable[n]\\n            if len(arr) == largestCount:\\n                smallestLength = min(smallestLength, arr[len(arr)-1] - arr[0])\\n        return smallestLength + 1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1778551,
                "title": "cpp-code",
                "content": "int findShortestSubArray(vector<int>& n) {\\n        int sz=n.size();\\n        unordered_map<int,int>m;\\n        int maxfq=0;\\n        for(auto i:n){\\n            m[i]++;\\n           maxfq=max(maxfq,m[i]);\\n        }\\n        unordered_map<int,int>c;\\n        int j=0;\\n        int len=INT_MAX;\\n        for(int i=0;i<sz;i++){\\n            c[n[i]]++;\\n            if(c[n[i]]==maxfq){\\n                while(n[j]!=n[i])j++;\\n                len=min(len,i-j+1);\\n            }\\n            j=0;\\n        }\\n        return len;\\n    }",
                "solutionTags": [
                    "C++"
                ],
                "code": "int findShortestSubArray(vector<int>& n) {\\n        int sz=n.size();\\n        unordered_map<int,int>m;\\n        int maxfq=0;\\n        for(auto i:n){\\n            m[i]++;\\n           maxfq=max(maxfq,m[i]);\\n        }\\n        unordered_map<int,int>c;\\n        int j=0;\\n        int len=INT_MAX;\\n        for(int i=0;i<sz;i++){\\n            c[n[i]]++;\\n            if(c[n[i]]==maxfq){\\n                while(n[j]!=n[i])j++;\\n                len=min(len,i-j+1);\\n            }\\n            j=0;\\n        }\\n        return len;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1776368,
                "title": "sliding-window-java-simple-solution-beats-90",
                "content": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        int freq[]= new int [50000];\\n        int max=0;\\n        int n=nums.length;\\n        for(int i:nums){\\n            freq[i]++;\\n            max=Math.max(max,freq[i]);\\n        }\\n        Arrays.fill(freq,0);\\n        int min=n;\\n        int l=0;\\n        for(int r=0;r<n;r++){\\n            freq[nums[r]]++;\\n            if(freq[nums[r]]<max){\\n                \\n            }\\n            else{\\n                while(l<n && freq[nums[r]]>= max){\\n                    if(freq[nums[l]]==max){\\n                        min=Math.min(min,r-l+1);\\n                    }\\n                    freq[nums[l]]--;\\n                    l++;\\n                }\\n                //r--;\\n            }\\n           // System.out.println(r);\\n            \\n        }\\n        return min;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Sliding Window"
                ],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        int freq[]= new int [50000];\\n        int max=0;\\n        int n=nums.length;\\n        for(int i:nums){\\n            freq[i]++;\\n            max=Math.max(max,freq[i]);\\n        }\\n        Arrays.fill(freq,0);\\n        int min=n;\\n        int l=0;\\n        for(int r=0;r<n;r++){\\n            freq[nums[r]]++;\\n            if(freq[nums[r]]<max){\\n                \\n            }\\n            else{\\n                while(l<n && freq[nums[r]]>= max){\\n                    if(freq[nums[l]]==max){\\n                        min=Math.min(min,r-l+1);\\n                    }\\n                    freq[nums[l]]--;\\n                    l++;\\n                }\\n                //r--;\\n            }\\n           // System.out.println(r);\\n            \\n        }\\n        return min;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1774302,
                "title": "c-hashmap-easy-code-explanation",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,vector<int>> mp; //mp[number]=<count, start index, end index>\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(mp.find(nums[i])==mp.end())//if the first time\\n            {\\n                mp[nums[i]].push_back(0);//set zero, because will add 1 later\\n                mp[nums[i]].push_back(i);//start index\\n                mp[nums[i]].push_back(i);//end index\\n            }\\n            mp[nums[i]][0]++;//count+1\\n            mp[nums[i]][2]=i;//end index\\n            \\n        }\\n        int mmax=1;//max count\\n        \\n        for(unordered_map<int,vector<int>>::iterator it=mp.begin();it!=mp.end();it++)//get max count\\n            mmax=max(it->second[0],mmax);\\n\\n        int res=INT_MAX;\\n        for(unordered_map<int,vector<int>>::iterator it=mp.begin();it!=mp.end();it++)//get result; because may more then one number is max count, so calculate and compair their length\\n        {\\n            if(it->second[0]==mmax)\\n                res=min(it->second[2]-it->second[1]+1,res);\\n        }     \\n        \\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int,vector<int>> mp; //mp[number]=<count, start index, end index>\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(mp.find(nums[i])==mp.end())//if the first time\\n            {\\n                mp[nums[i]].push_back(0);//set zero, because will add 1 later\\n                mp[nums[i]].push_back(i);//start index\\n                mp[nums[i]].push_back(i);//end index\\n            }\\n            mp[nums[i]][0]++;//count+1\\n            mp[nums[i]][2]=i;//end index\\n            \\n        }\\n        int mmax=1;//max count\\n        \\n        for(unordered_map<int,vector<int>>::iterator it=mp.begin();it!=mp.end();it++)//get max count\\n            mmax=max(it->second[0],mmax);\\n\\n        int res=INT_MAX;\\n        for(unordered_map<int,vector<int>>::iterator it=mp.begin();it!=mp.end();it++)//get result; because may more then one number is max count, so calculate and compair their length\\n        {\\n            if(it->second[0]==mmax)\\n                res=min(it->second[2]-it->second[1]+1,res);\\n        }     \\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1754791,
                "title": "c-solution-using-hashmap",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        vector <int> freq(50001,0);\\n        int deg = 0;\\n        for(auto x : nums){\\n            freq[x]++;\\n            deg = max(deg,freq[x]);\\n        }\\n        map<int,pair<int,int>> occ;\\n        \\n        for(int i=0;i<50001;++i){\\n            if(freq[i] == deg){\\n                \\n                occ[i] = {-1,-1};\\n            }\\n        }\\n        \\n        for(int i=0;i<nums.size();++i){\\n            if(occ.find(nums[i]) != occ.end()){\\n                if(occ[nums[i]].first == -1){\\n                    occ[nums[i]] = {i,i};\\n                }\\n                else{\\n                    occ[nums[i]] = {occ[nums[i]].first,i};\\n                }\\n            }\\n        }\\n        int ans = nums.size();\\n        for(auto x : occ){\\n            \\n            auto y = x.second;\\n            //cout <<x.first <<\" \"<< y.first <<\" \"<< y.second <<\"\\\\n\";\\n            ans = min(ans,(y.second- y.first + 1));\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        vector <int> freq(50001,0);\\n        int deg = 0;\\n        for(auto x : nums){\\n            freq[x]++;\\n            deg = max(deg,freq[x]);\\n        }\\n        map<int,pair<int,int>> occ;\\n        \\n        for(int i=0;i<50001;++i){\\n            if(freq[i] == deg){\\n                \\n                occ[i] = {-1,-1};\\n            }\\n        }\\n        \\n        for(int i=0;i<nums.size();++i){\\n            if(occ.find(nums[i]) != occ.end()){\\n                if(occ[nums[i]].first == -1){\\n                    occ[nums[i]] = {i,i};\\n                }\\n                else{\\n                    occ[nums[i]] = {occ[nums[i]].first,i};\\n                }\\n            }\\n        }\\n        int ans = nums.size();\\n        for(auto x : occ){\\n            \\n            auto y = x.second;\\n            //cout <<x.first <<\" \"<< y.first <<\" \"<< y.second <<\"\\\\n\";\\n            ans = min(ans,(y.second- y.first + 1));\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 1728002,
                "title": "python-solution-in-one-pass-with-explanation",
                "content": "```\\n######################################################\\n\\n#   Runtime: 248ms   -   67.68%\\n#   Memory: 15.3MB  -   98.58%\\n\\n######################################################\\n\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        # counts is a dictionary having structure\\n        # number present in nums array as key\\n        # [count of that number, start index of that number] as value\\n        counts = {}\\n        # Stores the max degree\\n        degree = 0\\n        # Stores the required minSize\\n        minSize = math.inf\\n        # Looping through numbers\\n        for i in range(len(nums)):\\n            if nums[i] not in counts:\\n                # If nums[i] is not already present in counts\\n                # Iniitalize it with count 1 and start index as i\\n                counts[nums[i]] = [1, i] \\n            else: \\n                # If nums[i] is already present, increasing count of it by 1\\n                counts[nums[i]][0] += 1\\n            # If count of nums[i] > degree then we change value of degree\\n            # Since as of now nums[i] has max degree minSize list should include\\n            # all instance of nums[i]. That is start index of nums[i] till index i\\n            # start index is stored in counts[nums[i]][1]. So we change minSize\\n            # to i - counts[nums[i]][1] + 1 and degree to count of nums[i]\\n            if degree < counts[nums[i]][0]:\\n                degree = counts[nums[i]][0]\\n                minSize = i - counts[nums[i]][1] + 1\\n            # If degree not < count of nums[i] but == to it, that means 2 elements\\n            # have same degree. We can include any of them in our subarray. Since we\\n            # need min size of subarray there is a possibility that nums[i] elements\\n            # are closer than exisiting subarray\\n            # Ex: [1, 3, 2, 1, 2]. At last index we get to know that both 1 and 2 have\\n            # degree 2. Before last index there is only 1 having max count. So the \\n            # minSize was 4. But if we consider subarray for 2 we can get it with\\n            # minSize of 3 only\\n            elif degree == counts[nums[i]][0]:\\n                # If subaaray length of start and end index of nums[i] < minSize\\n                # we change minSize to that length\\n                if i - counts[nums[i]][1] + 1 < minSize:\\n                    minSize = i - counts[nums[i]][1] + 1\\n        \\n        return minSize\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\n######################################################\\n\\n#   Runtime: 248ms   -   67.68%\\n#   Memory: 15.3MB  -   98.58%\\n\\n######################################################\\n\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        # counts is a dictionary having structure\\n        # number present in nums array as key\\n        # [count of that number, start index of that number] as value\\n        counts = {}\\n        # Stores the max degree\\n        degree = 0\\n        # Stores the required minSize\\n        minSize = math.inf\\n        # Looping through numbers\\n        for i in range(len(nums)):\\n            if nums[i] not in counts:\\n                # If nums[i] is not already present in counts\\n                # Iniitalize it with count 1 and start index as i\\n                counts[nums[i]] = [1, i] \\n            else: \\n                # If nums[i] is already present, increasing count of it by 1\\n                counts[nums[i]][0] += 1\\n            # If count of nums[i] > degree then we change value of degree\\n            # Since as of now nums[i] has max degree minSize list should include\\n            # all instance of nums[i]. That is start index of nums[i] till index i\\n            # start index is stored in counts[nums[i]][1]. So we change minSize\\n            # to i - counts[nums[i]][1] + 1 and degree to count of nums[i]\\n            if degree < counts[nums[i]][0]:\\n                degree = counts[nums[i]][0]\\n                minSize = i - counts[nums[i]][1] + 1\\n            # If degree not < count of nums[i] but == to it, that means 2 elements\\n            # have same degree. We can include any of them in our subarray. Since we\\n            # need min size of subarray there is a possibility that nums[i] elements\\n            # are closer than exisiting subarray\\n            # Ex: [1, 3, 2, 1, 2]. At last index we get to know that both 1 and 2 have\\n            # degree 2. Before last index there is only 1 having max count. So the \\n            # minSize was 4. But if we consider subarray for 2 we can get it with\\n            # minSize of 3 only\\n            elif degree == counts[nums[i]][0]:\\n                # If subaaray length of start and end index of nums[i] < minSize\\n                # we change minSize to that length\\n                if i - counts[nums[i]][1] + 1 < minSize:\\n                    minSize = i - counts[nums[i]][1] + 1\\n        \\n        return minSize\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1697602,
                "title": "python-just-23-line-code-dictionary-o-n-time",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        \\n        frq = defaultdict(int) # frequency map for nums\\n        fnl = {} # stores first and last index of each num\\n        deg = 0  # degree\\n        \\n        for i in range(len(nums)):\\n            frq[nums[i]] += 1\\n            deg = max(deg, frq[nums[i]])\\n            if nums[i] in fnl:\\n                fnl[nums[i]][1] = i\\n            else:\\n                fnl[nums[i]] = [i,i]\\n                \\n        res = len(nums)\\n                \\n        for num in frq:\\n            if frq[num] != deg:\\n                continue\\n            res = min(res, fnl[num][1] - fnl[num][0] + 1)\\n\\n        return res\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        \\n        frq = defaultdict(int) # frequency map for nums\\n        fnl = {} # stores first and last index of each num\\n        deg = 0  # degree\\n        \\n        for i in range(len(nums)):\\n            frq[nums[i]] += 1\\n            deg = max(deg, frq[nums[i]])\\n            if nums[i] in fnl:\\n                fnl[nums[i]][1] = i\\n            else:\\n                fnl[nums[i]] = [i,i]\\n                \\n        res = len(nums)\\n                \\n        for num in frq:\\n            if frq[num] != deg:\\n                continue\\n            res = min(res, fnl[num][1] - fnl[num][0] + 1)\\n\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1687182,
                "title": "concise-java-solution",
                "content": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        HashMap<Integer, int[]> map = new HashMap<>(); \\n        int maxOccr = Integer.MIN_VALUE; // maxOccr same as degree\\n        \\n        for(int i = 0; i < nums.length; i++) {\\n            \\n            // if it isnt contained in the map, add to it and the first occurence\\n            if(!map.containsKey(nums[i])) {\\n                map.put(nums[i], new int[]{i, i, 1}); //setting first occurence and number of occurence\\n            }\\n            else { // otherwise update the last occurence\\n                map.get(nums[i])[1]=i; // update last index\\n                map.get(nums[i])[2]++; // increase number of occurence\\n                map.put(nums[i],  map.get(nums[i])); \\n            }\\n            \\n            maxOccr = Math.max(maxOccr, map.get(nums[i])[2]);   \\n        }\\n        \\n        // get the minimum length of two degrees\\n        int out = nums.length;        \\n        for(int x : map.keySet()) {\\n            if(map.get(x)[2] == maxOccr) \\n                out = Math.min(out, map.get(x)[1]-map.get(x)[0]+1);\\n        }\\n        \\n        \\n        \\n        return out;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int findShortestSubArray(int[] nums) {\\n        \\n        HashMap<Integer, int[]> map = new HashMap<>(); \\n        int maxOccr = Integer.MIN_VALUE; // maxOccr same as degree\\n        \\n        for(int i = 0; i < nums.length; i++) {\\n            \\n            // if it isnt contained in the map, add to it and the first occurence\\n            if(!map.containsKey(nums[i])) {\\n                map.put(nums[i], new int[]{i, i, 1}); //setting first occurence and number of occurence\\n            }\\n            else { // otherwise update the last occurence\\n                map.get(nums[i])[1]=i; // update last index\\n                map.get(nums[i])[2]++; // increase number of occurence\\n                map.put(nums[i],  map.get(nums[i])); \\n            }\\n            \\n            maxOccr = Math.max(maxOccr, map.get(nums[i])[2]);   \\n        }\\n        \\n        // get the minimum length of two degrees\\n        int out = nums.length;        \\n        for(int x : map.keySet()) {\\n            if(map.get(x)[2] == maxOccr) \\n                out = Math.min(out, map.get(x)[1]-map.get(x)[0]+1);\\n        }\\n        \\n        \\n        \\n        return out;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1684914,
                "title": "c-one-pass-using-unordered-map-and-tuple-human-friendly-and-readable-code",
                "content": "Basically store the frequency of each number, its start and end position. \\n\\n* Initially start = end position\\n* If we go over the same number again, update the end position.\\n* Check at each iteration the current freq of the number we are at if it bigger or equal than the maxFreq, update the result with the minimum length.\\n* return the result.\\n\\n```\\ntypedef tuple<int, int, int> t;\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, t> m;\\n        int maxFreq = 0;\\n        int res = 1;\\n        for(int i = 0; i < nums.size(); i++){\\n            if(m.find(nums[i]) == m.end()){\\n                t entry = make_tuple(1, i, i);\\n                m[nums[i]] = entry;\\n            } else {\\n                auto& [freq, start, end] = m[nums[i]];\\n                freq++;\\n                end = i;\\n                if(freq > maxFreq){\\n                    maxFreq = freq;\\n                    res = end - start + 1; \\n                }\\n                if(freq >= maxFreq )\\n                res = min(res,end - start + 1); \\n            }\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\ntypedef tuple<int, int, int> t;\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, t> m;\\n        int maxFreq = 0;\\n        int res = 1;\\n        for(int i = 0; i < nums.size(); i++){\\n            if(m.find(nums[i]) == m.end()){\\n                t entry = make_tuple(1, i, i);\\n                m[nums[i]] = entry;\\n            } else {\\n                auto& [freq, start, end] = m[nums[i]];\\n                freq++;\\n                end = i;\\n                if(freq > maxFreq){\\n                    maxFreq = freq;\\n                    res = end - start + 1; \\n                }\\n                if(freq >= maxFreq )\\n                res = min(res,end - start + 1); \\n            }\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1669876,
                "title": "python3-straight-forward-statistic",
                "content": "# Algorithm\\nMake a one pass to the array, and we will get the count of each number, the start and end index of a number.\\nThen go throught the stats, only calculate the max count number\\n# Python3 Implementation\\n```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        if not nums: return 0\\n        stats = {}\\n        for i, n in enumerate(nums):\\n            if n not in stats:\\n                stats[n] = {\"start\":i, \"end\":i, \"count\":1}\\n            else:\\n                stats[n][\"end\"] = i\\n                stats[n][\"count\"] += 1\\n        \\n        degree = 1\\n        length = 1\\n        for v in stats.values():\\n            if v[\"count\"] > degree:\\n                degree = v[\"count\"]\\n                length = v[\"end\"] - v[\"start\"] + 1\\n            elif v[\"count\"] == degree:\\n                length = min(length, v[\"end\"] - v[\"start\"] + 1)\\n        \\n        return length\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        if not nums: return 0\\n        stats = {}\\n        for i, n in enumerate(nums):\\n            if n not in stats:\\n                stats[n] = {\"start\":i, \"end\":i, \"count\":1}\\n            else:\\n                stats[n][\"end\"] = i\\n                stats[n][\"count\"] += 1\\n        \\n        degree = 1\\n        length = 1\\n        for v in stats.values():\\n            if v[\"count\"] > degree:\\n                degree = v[\"count\"]\\n                length = v[\"end\"] - v[\"start\"] + 1\\n            elif v[\"count\"] == degree:\\n                length = min(length, v[\"end\"] - v[\"start\"] + 1)\\n        \\n        return length\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1606357,
                "title": "97-faster-python-solution",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        f={}\\n        for i in nums:\\n            if i in f:\\n                f[i]+=1\\n            else:\\n                f[i]=1\\n        a = max(f.values())\\n        if a == 1:\\n            return 1\\n        solution = [n for n in f if f[n] == a]\\n        minlen=50000\\n        for n in solution:\\n            l=nums.index(n)\\n            r=len(nums)-nums[::-1].index(n)\\n            minlen=min(minlen,r-l)\\n        return minlen\\n",
                "solutionTags": [],
                "code": "class Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        f={}",
                "codeTag": "Java"
            },
            {
                "id": 1597314,
                "title": "best-python-solution",
                "content": "```\\nfrom collections import Counter\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        freq = Counter(nums)\\n        degree = max(freq.values())\\n        if degree == 1:\\n            return 1\\n        solution = [n for n in freq if freq[n] == degree]\\n        \\n        minlen = 50000 #constraint\\n        for n in solution:\\n            left = nums.index(n)\\n            right = len(nums) - nums[::-1].index(n)\\n            minlen = min(minlen, right-left)\\n        return minlen\\n       ```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nfrom collections import Counter\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        freq = Counter(nums)\\n        degree = max(freq.values())\\n        if degree == 1:\\n            return 1\\n        solution = [n for n in freq if freq[n] == degree]\\n        \\n        minlen = 50000 #constraint\\n        for n in solution:\\n            left = nums.index(n)\\n            right = len(nums) - nums[::-1].index(n)\\n            minlen = min(minlen, right-left)\\n        return minlen\\n       ```",
                "codeTag": "Java"
            },
            {
                "id": 1468462,
                "title": "can-someone-help-me-find-what-s-wrong-with-this-c-code",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, int> start, end, degree;\\n        int d=INT_MIN; \\n        int ans=nums.size();\\n        for(int i=0; i<nums.size(); i++)\\n        {\\n            int x=nums[i];\\n            if(start[x]==NULL)\\n            {\\n                start[x]=i;\\n            }\\n                \\n            end[x]=i;\\n            degree[x]++;\\n            \\n            d=max(d, degree[x]);\\n            \\n        }\\n        \\n        for(auto m : degree)\\n        {\\n            if(m.second==d)\\n            {\\n                ans=min(ans, end[m.first]-start[m.first]+1);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        unordered_map<int, int> start, end, degree;\\n        int d=INT_MIN; \\n        int ans=nums.size();\\n        for(int i=0; i<nums.size(); i++)\\n        {\\n            int x=nums[i];\\n            if(start[x]==NULL)\\n            {\\n                start[x]=i;\\n            }\\n                \\n            end[x]=i;\\n            degree[x]++;\\n            \\n            d=max(d, degree[x]);\\n            \\n        }\\n        \\n        for(auto m : degree)\\n        {\\n            if(m.second==d)\\n            {\\n                ans=min(ans, end[m.first]-start[m.first]+1);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1456981,
                "title": "c-solution",
                "content": "```\\n int findShortestSubArray(vector<int>& nums) {\\n        \\n        map<int,set<int>> mp;\\n        \\n        int maxele=-1;\\n        for(int i=0;i<nums.size();i++){\\n            mp[nums[i]].insert(i);\\n            int z=mp[nums[i]].size();\\n            maxele=max(maxele,z);\\n        }\\n        \\n        int len=INT_MAX;\\n        \\n        for(auto x: mp){\\n            if(x.second.size()==maxele){\\n                len=min(len,*(--x.second.end()) - *(x.second.begin()) + 1);\\n            }\\n        }\\n        \\n        return len;\\n    }\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\n int findShortestSubArray(vector<int>& nums) {\\n        \\n        map<int,set<int>> mp;\\n        \\n        int maxele=-1;\\n        for(int i=0;i<nums.size();i++){\\n            mp[nums[i]].insert(i);\\n            int z=mp[nums[i]].size();\\n            maxele=max(maxele,z);\\n        }\\n        \\n        int len=INT_MAX;\\n        \\n        for(auto x: mp){\\n            if(x.second.size()==maxele){\\n                len=min(len,*(--x.second.end()) - *(x.second.begin()) + 1);\\n            }\\n        }\\n        \\n        return len;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1421688,
                "title": "python-ugly-solution",
                "content": "```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        counts = collections.Counter(nums)\\n        degree = 0\\n        valid = []\\n        \\n\\t\\t# get degree\\n        for key, value in counts.items():\\n            if value > degree:\\n                degree = value\\n        \\n\\t\\t# determine which num has that degree\\n        for key, value in counts.items():\\n            if value == degree:\\n                valid.append(key)\\n                \\n\\t\\t# exhaust all valid nums\\n        ans = 0\\n        for v in valid:\\n            i = nums.index(v)\\n            count = 0 \\n\\t\\t\\t# increase subarray until degree is matched\\n            for j in range(i, len(nums)):\\n                if nums[j] == v:\\n                    count += 1\\n                if count == degree:\\n\\t\\t\\t\\t\\t# return smallest subarray length\\n                    if ans == 0 or j-i+1 < ans:\\n                        ans = j-i+1\\n                    break\\n                \\n        return ans",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def findShortestSubArray(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        counts = collections.Counter(nums)\\n        degree = 0\\n        valid = []\\n        \\n\\t\\t# get degree\\n        for key, value in counts.items():\\n            if value > degree:\\n                degree = value\\n        \\n\\t\\t# determine which num has that degree\\n        for key, value in counts.items():\\n            if value == degree:\\n                valid.append(key)\\n                \\n\\t\\t# exhaust all valid nums\\n        ans = 0\\n        for v in valid:\\n            i = nums.index(v)\\n            count = 0 \\n\\t\\t\\t# increase subarray until degree is matched\\n            for j in range(i, len(nums)):\\n                if nums[j] == v:\\n                    count += 1\\n                if count == degree:\\n\\t\\t\\t\\t\\t# return smallest subarray length\\n                    if ans == 0 or j-i+1 < ans:\\n                        ans = j-i+1\\n                    break\\n                \\n        return ans",
                "codeTag": "Java"
            },
            {
                "id": 1415675,
                "title": "runtime-32-ms-faster-than-85-42-of-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int, pair<int,vector<int> >> mp;\\n        int n = nums.size();\\n        for(int i = 0 ; i < n;i++)\\n        {\\n            mp[nums[i]].first++;\\n            mp[nums[i]].second.push_back(i);\\n            \\n        }\\n        \\n        int mx = INT_MIN;\\n        for(auto el:mp)\\n            mx = max(mx,el.second.first);\\n        int mn = INT_MAX;\\n        for(auto el:mp)\\n\\n            if(el.second.first == mx)\\n                mn = min(mn,el.second.second[el.second.second.size()-1] -  el.second.second[0]);\\n\\n\\n        \\n        return mn+1;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int findShortestSubArray(vector<int>& nums) {\\n        map<int, pair<int,vector<int> >> mp;\\n        int n = nums.size();\\n        for(int i = 0 ; i < n;i++)\\n        {\\n            mp[nums[i]].first++;\\n            mp[nums[i]].second.push_back(i);\\n            \\n        }\\n        \\n        int mx = INT_MIN;\\n        for(auto el:mp)\\n            mx = max(mx,el.second.first);\\n        int mn = INT_MAX;\\n        for(auto el:mp)\\n\\n            if(el.second.first == mx)\\n                mn = min(mn,el.second.second[el.second.second.size()-1] -  el.second.second[0]);\\n\\n\\n        \\n        return mn+1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1392130,
                "title": "java-with-one-pass",
                "content": "Idea: Use a Map to track frequency and record the index of the number first time seen. When degree is higher or equal, update the length by using the lastest seen index minus the first time seen index plus 1.\\n\\n```\\npublic int findShortestSubArray(int[] nums) {\\n        int degree = 0, length = 0;\\n        //int[0] - frequency, int[1] - length\\n        Map<Integer, int[]> map = new HashMap();\\n        for(int i = 0; i < nums.length; i++) {\\n            int[] freq = map.getOrDefault(nums[i], new int[]{0, i});\\n            freq[0]++;\\n            map.put(nums[i], freq);\\n            \\n            if(degree < freq[0]){\\n                length = i - freq[1] + 1;\\n                degree = freq[0];\\n            }\\n            else if(degree == freq[0])\\n                length = Math.min(length, i - freq[1] + 1);\\n        }\\n        return length;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic int findShortestSubArray(int[] nums) {\\n        int degree = 0, length = 0;\\n        //int[0] - frequency, int[1] - length\\n        Map<Integer, int[]> map = new HashMap();\\n        for(int i = 0; i < nums.length; i++) {\\n            int[] freq = map.getOrDefault(nums[i], new int[]{0, i});\\n            freq[0]++;\\n            map.put(nums[i], freq);\\n            \\n            if(degree < freq[0]){\\n                length = i - freq[1] + 1;\\n                degree = freq[0];\\n            }\\n            else if(degree == freq[0])\\n                length = Math.min(length, i - freq[1] + 1);\\n        }\\n        return length;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1375342,
                "title": "90-17-faster",
                "content": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        maxv=0\\n        d={}\\n        count=1000000\\n        for i in nums:\\n            if i in d:\\n                d[i]+=1\\n                maxv=max(maxv, d[i])\\n            else:\\n                d[i]=1\\n        \\n        if maxv<=1:\\n            return 1\\n        \\n        for i, k in d.items():\\n            start=end=0\\n            if k==maxv:\\n                for num in range(len(nums)):\\n                    if nums[num]==i:\\n                        start=num\\n                        break\\n                for num in range(len(nums)-1,-1,-1):\\n                    if nums[num]==i:\\n                        end=num\\n                        break\\n            else:\\n                continue\\n            \\n            if count>(end-start+1): \\n                count=end-start+1\\n            \\n            print(count)\\n        return count\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findShortestSubArray(self, nums: List[int]) -> int:\\n        maxv=0\\n        d={}\\n        count=1000000\\n        for i in nums:\\n            if i in d:\\n                d[i]+=1\\n                maxv=max(maxv, d[i])\\n            else:\\n                d[i]=1\\n        \\n        if maxv<=1:\\n            return 1\\n        \\n        for i, k in d.items():\\n            start=end=0\\n            if k==maxv:\\n                for num in range(len(nums)):\\n                    if nums[num]==i:\\n                        start=num\\n                        break\\n                for num in range(len(nums)-1,-1,-1):\\n                    if nums[num]==i:\\n                        end=num\\n                        break\\n            else:\\n                continue\\n            \\n            if count>(end-start+1): \\n                count=end-start+1\\n            \\n            print(count)\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1359870,
                "title": "o-n-time-and-o-n-space-hashmap-solution",
                "content": "class StartStopFreq {\\n\\n    int frequency = 0;\\n    int start = -1;\\n    int end = -1;\\n}\\nclass Solution {\\n\\n    public int findShortestSubArray(int[] nums) {\\n        HashMap<Integer, StartStopFreq> hm = new HashMap<>();\\n        int result = nums.length;\\n        int degree = 0;\\n        \\n        for(int i = 0; i < nums.length; i++) {\\n            if(hm.containsKey(nums[i])) {\\n                hm.get(nums[i]).frequency += 1;\\n                hm.get(nums[i]).end = i;\\n            }\\n            else {\\n                StartStopFreq el = new StartStopFreq();\\n                el.frequency = 1;\\n                el.start = i;\\n                el.end = i;\\n                hm.put(nums[i], el);   \\n            }\\n            if(hm.get(nums[i]).frequency > degree) {\\n                degree = hm.get(nums[i]).frequency;\\n                result = i - hm.get(nums[i]).start + 1;\\n            }\\n            else if(hm.get(nums[i]).frequency == degree) {\\n                result = Math.min(result, i - hm.get(nums[i]).start + 1);\\n            }\\n        }\\n        return result;\\n    }\\n\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n\\n    public int findShortestSubArray(int[] nums) {\\n        HashMap<Integer, StartStopFreq> hm = new HashMap<>();\\n        int result = nums.length;\\n        int degree = 0;\\n        \\n        for(int i = 0; i < nums.length; i++) {\\n            if(hm.containsKey(nums[i])) {\\n                hm.get(nums[i]).frequency += 1;\\n                hm.get(nums[i]).end = i;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1350488,
                "title": "c-solution",
                "content": "int findShortestSubArray(vector<int>& nums) {\\n      unordered_map<int,int>mp;\\n        int i,j=0,mx=0,mn=INT_MAX;\\n        for(i=0;i<nums.size();i++)\\n        {\\n         mp[nums[i]]++;\\n         mx=max(mx,mp[nums[i]]);\\n        }\\n        if(mx==1)\\n            return 1;\\n        unordered_map<int,int>m;\\n        for(i=0;i<nums.size();i++)\\n        {\\n            m[nums[i]]++;\\n            if(m[nums[i]]==mx)\\n            {\\n                while(nums[j]!=nums[i])\\n                    j++;\\n                mn=min(mn,i-j+1);\\n                j=0;\\n            }\\n        }\\n       return mn;\\n    }\\n};",
                "solutionTags": [],
                "code": "int findShortestSubArray(vector<int>& nums) {\\n      unordered_map<int,int>mp;\\n        int i,j=0,mx=0,mn=INT_MAX;\\n        for(i=0;i<nums.size();i++)\\n        {\\n         mp[nums[i]]++;\\n         mx=max(mx,mp[nums[i]]);\\n        }\\n        if(mx==1)\\n            return 1;\\n        unordered_map<int,int>m;\\n        for(i=0;i<nums.size();i++)\\n        {\\n            m[nums[i]]++;\\n            if(m[nums[i]]==mx)\\n            {\\n                while(nums[j]!=nums[i])\\n                    j++;\\n                mn=min(mn,i-j+1);\\n                j=0;\\n            }\\n        }\\n       return mn;\\n    }\\n};",
                "codeTag": "Unknown"
            }
        ],
        "discussions": [
            {
                "id": 1780549,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1744561,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1631990,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1673495,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1826658,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1912366,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1786857,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 2027299,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1812514,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1732807,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1780549,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1744561,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1631990,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1673495,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1826658,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1912366,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1786857,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 2027299,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1812514,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1732807,
                "content": [
                    {
                        "username": "Kratos50",
                        "content": "the guy who gave this problem \"easy\" tag probably has a cure for cancer"
                    },
                    {
                        "username": "user8738ZV",
                        "content": "it should be tagged under medium"
                    },
                    {
                        "username": "osireg17",
                        "content": "What a stupid Question for real, how is that easy"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Fr dude and I am too lazy to think about the logic lol"
                    },
                    {
                        "username": "Pizzasoccer",
                        "content": "think"
                    },
                    {
                        "username": "sarvar_raxmonov",
                        "content": "Truely i didn\\'t understand the question "
                    },
                    {
                        "username": "cheukhin1024",
                        "content": "You are not alone"
                    },
                    {
                        "username": "teksignal",
                        "content": "[@omar22khaled](/omar22khaled) Thanks a lot for explanation, now I got it."
                    },
                    {
                        "username": "omar22khaled",
                        "content": "It was hard for me at first but it simply that:\\nYou search for the degree of the array by searching the most frequent element.\\nThe subarray you try to form must have this condition:\\n- it contains all the occurrences of the most frequent element in the original array \"and all elements between those occurrences\"\\n\\nex: if the original array --> arr = [1,2,2,4,2,3]\\nthe possible subarrays are : [2,2,4,2,3] >> I removed the 1 .... or [1,2,2,4,2] >> I removed 3 ... or [2,2,4,2] >> I removed 1,3 ....... \\nbut I cannot form [2,2,2] because there is an element 4 I in-between I cannot remove it."
                    },
                    {
                        "username": "miracomel",
                        "content": "I thought im the only one not understand the question, i reread many times still no clue what the question want :("
                    },
                    {
                        "username": "ericwaterloo",
                        "content": "I have a feeling that interviewers won\\'t ask this question...because even themselves don\\'t understand the question"
                    },
                    {
                        "username": "HexagonSun",
                        "content": "If you are struggling to understand the question, be sure to note that it\\'s asking for a ***contiguous*** subarray. This is key to how you approach the problem."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This is anything but easy lol"
                    },
                    {
                        "username": "jasngh_004",
                        "content": "easy ? my interviewer asked this and i literally hustle for 30 min i cant solve after trying 2-3 approach and after interviewer said all the best thank you for joining :( "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "This is not a easy problem at all"
                    },
                    {
                        "username": "daadestroyer",
                        "content": "This isn\\'t an easy question :-("
                    }
                ]
            },
            {
                "id": 1567999,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 2070307,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 2035063,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 2033641,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 2022899,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 1987372,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 1968554,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 1966659,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 1964718,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            },
            {
                "id": 1961676,
                "content": [
                    {
                        "username": "hliu94",
                        "content": "My code didn't get accepted because the 2nd note constraint was not obeyed when checking my submissions"
                    },
                    {
                        "username": "HansarajKosarkar",
                        "content": "Passed 87/89 test cases and got stuck. This isn't falling under easy now. lol"
                    },
                    {
                        "username": "user5400vw",
                        "content": "woof woof!  not easy!"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "`Simple Dictionary Solution,`\\nhttps://leetcode.com/problems/degree-of-an-array/solutions/3969893/simple-dictionary-approach-beats-99-55-in-runtime/"
                    },
                    {
                        "username": "MoeSadoon",
                        "content": "Don\\'t think this is an easy at all. \\n\\nEasy enough to brute force, but getting a barely performant solution puts this in medium territory earily."
                    },
                    {
                        "username": "i_am_guts",
                        "content": "easy? we gotta do like 3 tasks inhere , aint no way its easy"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I think this is a good problem, just a bit hard for an easy"
                    },
                    {
                        "username": "had0uken",
                        "content": "Oh gosh! It`s not an easy problem. It is a medium one. Very difficult to debug, it takes a lot of time to debug code. Usually I spend to medium problems less time than I have spent on this \"Easy\" task. "
                    },
                    {
                        "username": "user0581xU",
                        "content": "Time Limit Exceeded for the giant case. Any suggestion? "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\\uD83D\\uDFE2 just a time taking problem"
                    }
                ]
            }
        ]
    }
]