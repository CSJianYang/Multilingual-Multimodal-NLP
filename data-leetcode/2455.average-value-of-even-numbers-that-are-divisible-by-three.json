[
    {
        "title": "Average Value of Even Numbers That Are Divisible by Three",
        "question_content": "Given an integer array nums of positive integers, return the average value of all even integers that are divisible by 3.\nNote that the average of n elements is the sum of the n elements divided by n and rounded down to the nearest integer.\n&nbsp;\nExample 1:\n\nInput: nums = [1,3,6,10,12,15]\nOutput: 9\nExplanation: 6 and 12 are even numbers that are divisible by 3. (6 + 12) / 2 = 9.\n\nExample 2:\n\nInput: nums = [1,2,4,7,10]\nOutput: 0\nExplanation: There is no single number that satisfies the requirement, so return 0.\n\n&nbsp;\nConstraints:\n\n\t1 <= nums.length <= 1000\n\t1 <= nums[i] <= 1000",
        "solutions": [
            {
                "id": 2757976,
                "title": "c-solution-very-simple-easy-to-understand",
                "content": "<b>Up Vote if you like the solution\\n```\\n/*\\nSimply check if the number is divisible by 2 & 3 or not. If divisible add it to sum and increament count.\\nThen return the average by diving sum by count.\\n*/\\n\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0, count = 0;\\n        for(auto n: nums){\\n            if(n%3 == 0 && n%2 == 0){\\n                sum += n;\\n                count++;\\n            }\\n        }\\n        return count != 0 ? sum/count: 0;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\n/*\\nSimply check if the number is divisible by 2 & 3 or not. If divisible add it to sum and increament count.\\nThen return the average by diving sum by count.\\n*/\\n\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0, count = 0;\\n        for(auto n: nums){\\n            if(n%3 == 0 && n%2 == 0){\\n                sum += n;\\n                count++;\\n            }\\n        }\\n        return count != 0 ? sum/count: 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2757978,
                "title": "python-c-java-rust-one-liners-tricks-with-detailed-comments",
                "content": "**\\u2705 IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n****\\nThis solution employs filtering of numbers that are divisible by 6. Time complexity is linear: **O(N)**. Space complexity is linear: **O(N)**. \\n\\n**Python #1.** A numpy-based one-liner.\\n```\\nimport numpy as np\\n\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        # - get list of numbers that are divisibe by 6\\n        # - for the empty list, use \\'or 0\\' trick\\n        return int(np.mean([n for n in nums if n % 6 == 0] or 0))\\n```\\n\\n**Python #2.** Just core Python, with *walrus* operator (:=) used to count numbers inside the list comprehension.\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int], cnt = 0) -> int:\\n        return sum(n for n in nums if n % 6 == 0 and (cnt := cnt + 1)) // (cnt if cnt else 1)\\n```\\n\\nSolutions in other languages are also very concise (some with **O(1)** space complexity).\\n<iframe src=\"https://leetcode.com/playground/Av5SmzQb/shared\" frameBorder=\"0\" width=\"800\" height=\"220\"></iframe>",
                "solutionTags": [],
                "code": "```\\nimport numpy as np\\n\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        # - get list of numbers that are divisibe by 6\\n        # - for the empty list, use \\'or 0\\' trick\\n        return int(np.mean([n for n in nums if n % 6 == 0] or 0))\\n```\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int], cnt = 0) -> int:\\n        return sum(n for n in nums if n % 6 == 0 and (cnt := cnt + 1)) // (cnt if cnt else 1)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758446,
                "title": "python-3-2-lines-t-m-100-86",
                "content": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        \\n        nums = [n for n in nums if not n%6]\\n        \\n        return sum(nums)//len(nums) if nums else 0\\n```\\n[https://leetcode.com/submissions/detail/833141059/](http://)",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        \\n        nums = [n for n in nums if not n%6]\\n        \\n        return sum(nums)//len(nums) if nums else 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2759159,
                "title": "java-fastest-solution-100-big-o-n",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int num:nums)\\n            if (num%6==0) {\\n                sum += num;\\n                count++;\\n            }\\n        return count==0?0:Math.round(sum/count);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int num:nums)\\n            if (num%6==0) {\\n                sum += num;\\n                count++;\\n            }\\n        return count==0?0:Math.round(sum/count);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2761690,
                "title": "java-runtime-100-1ms-big-o-n",
                "content": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n         int count = 0;\\n        int sum =0;\\n\\n        for (int num : nums) {\\n            if (num%6==0){\\n                count++;\\n                sum+=num;\\n            }\\n        }\\n       return count == 0?0:sum/count;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n         int count = 0;\\n        int sum =0;\\n\\n        for (int num : nums) {\\n            if (num%6==0){\\n                count++;\\n                sum+=num;\\n            }\\n        }\\n       return count == 0?0:sum/count;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758989,
                "title": "n-6",
                "content": "**C++**\\n```cpp\\nint averageValue(vector<int>& n) {\\n    return accumulate(begin(n), end(n), 0, [](int s, int n){ return s + (n % 6 ? 0 : n); }) \\n        / max(1, (int)count_if(begin(n), end(n), [](int n){ return n % 6 == 0; }));\\n}\\n```\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\nint averageValue(vector<int>& n) {\\n    return accumulate(begin(n), end(n), 0, [](int s, int n){ return s + (n % 6 ? 0 : n); }) \\n        / max(1, (int)count_if(begin(n), end(n), [](int n){ return n % 6 == 0; }));\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3182601,
                "title": "o-n-python-one-liner-using-walrus-operator-zero-extra-iterations",
                "content": "# Intuition\\nI wanted to solve this problem in **one line** using python, I figured this was the perfect use for the **Walrus Operator!**\\n\\n# Approach\\nI didn\\'t want any extra iterations, so we perform a list comprehention with only the values divisible by 6 (2 and 3) and use the walrus operator to store the comprehention in *lst*. Then, we can take the average as you would expect, accounting for dividing by zero using an in-line if statement.  \\n\\nIf you\\'ve never used the walrus operator before: https://realpython.com/python-walrus-operator/ \\n\\n# Complexity\\n- Time complexity:\\nO(n), we iterate over each item in the input list once. \\n\\n- Space complexity:\\nO(n), we store all elements divisible by both 2 and 3.\\n\\n# Code\\n\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        return int(sum(lst) / len(lst)) if len(lst := [num for num in nums if num % 6 == 0]) > 0 else 0 \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        return int(sum(lst) / len(lst)) if len(lst := [num for num in nums if num % 6 == 0]) > 0 else 0 \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3129876,
                "title": "python-easy-solution",
                "content": "# Code\\u2705\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        nums = list(filter(lambda x: x % 2 == 0 and x % 3 == 0, nums)) # list(filter(lambda x: x % 6 == 0, nums)) will also works\\n        return 0 if not len(nums) else sum(nums)//len(nums)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        nums = list(filter(lambda x: x % 2 == 0 and x % 3 == 0, nums)) # list(filter(lambda x: x % 6 == 0, nums)) will also works\\n        return 0 if not len(nums) else sum(nums)//len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2761078,
                "title": "javascript-time-o-n",
                "content": "```\\nvar averageValue = function(nums) {\\n    let sum = 0;\\n    let count = 0;\\n    for (let n of nums) {\\n        if (n % 6 === 0) {\\n            sum += n;\\n            count++;\\n        }\\n    }\\n    return sum === 0 ? sum : Math.floor(sum / count);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar averageValue = function(nums) {\\n    let sum = 0;\\n    let count = 0;\\n    for (let n of nums) {\\n        if (n % 6 === 0) {\\n            sum += n;\\n            count++;\\n        }\\n    }\\n    return sum === 0 ? sum : Math.floor(sum / count);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2759497,
                "title": "c-2-different-approaches-clean-code",
                "content": "### Approach 1: scan and count (3ms)\\n\\nThis is straight forward.\\n\\n```cpp\\n    static int averageValue(const vector<int>& nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for (int num : nums) {\\n            if (num % 2 == 0 && num % 3 == 0) {\\n                sum += num;\\n                ++count;\\n            }\\n        }\\n        return count ? sum / count : 0;\\n    }\\n```\\n\\nWe could simplify the condition ```if (num % 2 == 0 && num % 3 == 0)``` to ```if (num % 6 == 0)```.\\n\\n**Complexity Analysis**\\n  * Time complexity: $$O(n)$$ we need to look at all the numbers in ```nums```\\n  * Space complexity: $$O(1)$$\\n\\n### Approach 2: partition the input\\n\\nIf we are willing to modify the input vector ```nums``` we could also parition the input and do something like:\\n\\n```cpp\\n    static int averageValue(vector<int>& nums) {\\n        auto it = partition(begin(nums), end(nums), [](int num) { return num % 6 == 0; });\\n        return it == begin(nums) ? 0 : reduce(begin(nums), it) / distance(begin(nums), it);\\n    }\\n```\\n\\nInstead of ```std::reduce``` we could use ```std::accumulate```, but integer addition is associative and commutative so we can use ```std::reduce``` here.\\n\\n**Complexity Analysis**\\nWe are potentialy doing more work, but the overall complexity remains the same as with the first approach.\\n\\n_As always: Feedback, questions, and comments are welcome. Leaving an up-vote sparks joy! :)_\\n\\n**p.s. Join us on the [LeetCode The Hard Way Discord Server](https://discord.gg/hFUyVyWy2E)!**\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\n    static int averageValue(const vector<int>& nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for (int num : nums) {\\n            if (num % 2 == 0 && num % 3 == 0) {\\n                sum += num;\\n                ++count;\\n            }\\n        }\\n        return count ? sum / count : 0;\\n    }\\n```\n```if (num % 2 == 0 && num % 3 == 0)```\n```if (num % 6 == 0)```\n```nums```\n```nums```\n```cpp\\n    static int averageValue(vector<int>& nums) {\\n        auto it = partition(begin(nums), end(nums), [](int num) { return num % 6 == 0; });\\n        return it == begin(nums) ? 0 : reduce(begin(nums), it) / distance(begin(nums), it);\\n    }\\n```\n```std::reduce```\n```std::accumulate```\n```std::reduce```",
                "codeTag": "Unknown"
            },
            {
                "id": 2758403,
                "title": "rust-filter-with-comments",
                "content": "This is my unrevised submission for the 2022-10-30 Weekly Contest 317. Filter out the even numbers that are also evenly divisible by 3 and collect them in a vector to compute the average value.\\n\\nComments:\\n* I missed the small word *even* in the problem description since I was rushing. Five minutes penalty :(. Lesson learned.\\n\\n```\\nimpl Solution {\\n    pub fn average_value(nums: Vec<i32>) -> i32 {\\n        let div = nums.into_iter().filter(|n| *n % 2 == 0 && *n % 3 == 0).collect::<Vec<_>>();\\n        let n = div.len() as i32;\\n        if n == 0 { 0 } else { div.into_iter().sum::<i32>() / n }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn average_value(nums: Vec<i32>) -> i32 {\\n        let div = nums.into_iter().filter(|n| *n % 2 == 0 && *n % 3 == 0).collect::<Vec<_>>();\\n        let n = div.len() as i32;\\n        if n == 0 { 0 } else { div.into_iter().sum::<i32>() / n }\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2758042,
                "title": "java-easy-solution-100-faster-o-n",
                "content": "```\\n public int averageValue(int[] nums) {\\n        int sum=0,count=0;\\n        for(int i:nums){\\n            if(i%6==0){\\n                sum+=i;\\n                count++;\\n            }\\n        }\\n        return count==0 ? 0 : Math.round(sum/count);\\n    }\\n```\\nEvery number thats divisible by 2 and 3 is divisible by 6",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n public int averageValue(int[] nums) {\\n        int sum=0,count=0;\\n        for(int i:nums){\\n            if(i%6==0){\\n                sum+=i;\\n                count++;\\n            }\\n        }\\n        return count==0 ? 0 : Math.round(sum/count);\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3564886,
                "title": "solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) \\n    {\\n     int Total_Sum=0;\\n        int Total_Number=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                Total_Sum+=nums[i];\\n                Total_Number++;\\n            }\\n        }      \\n        if(Total_Sum==0) return 0;\\n        return Total_Sum/Total_Number;   \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) \\n    {\\n     int Total_Sum=0;\\n        int Total_Number=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                Total_Sum+=nums[i];\\n                Total_Number++;\\n            }\\n        }      \\n        if(Total_Sum==0) return 0;\\n        return Total_Sum/Total_Number;   \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2998667,
                "title": "python-simple-two-lines-solution",
                "content": "# Approach\\nLeave in the array only the even elements that divided to 3.\\nCalaulate the average of the array.\\n\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        nums = [i for i in nums if not i % 3 and not i % 2]\\n        return 0 if not len(nums) else (sum(nums) // len(nums))\\n```\\n\\nLike it ? Please upvote!",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        nums = [i for i in nums if not i % 3 and not i % 2]\\n        return 0 if not len(nums) else (sum(nums) // len(nums))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2783301,
                "title": "c-solution",
                "content": "``` C++ []\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sumNum{0}, count{0};\\n        for (int x:nums) {\\n            if (x%6==0) {sumNum+=x;\\n            count++;}\\n        }\\n        return count>0 ? sumNum/count:0;\\n    }\\n};\\n```\\n\\n*Upvote if solution helped!*",
                "solutionTags": [
                    "C++"
                ],
                "code": "``` C++ []\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sumNum{0}, count{0};\\n        for (int x:nums) {\\n            if (x%6==0) {sumNum+=x;\\n            count++;}\\n        }\\n        return count>0 ? sumNum/count:0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2763040,
                "title": "easiest-c-solution-with-explaination",
                "content": "Here is my Solution:-\\n\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int ans=0; int cnt=0;             // ans will store the sum of elements which are even and divisible by 3; \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t // cnt will store the number of elements which are even and divisible by 3; \\n        for (int i=0; i<nums.size(); i++){\\n\\t\\t// Elements which are divisible by 3 and are even simply means **It must be divisible by 6** So we are checking that in the loop\\n\\t\\t// we are adding it to ans if it is divisible by 6 and increase cnt by 1;\\n            if (nums[i]%6==0){ans+=nums[i];cnt++;}\\n        }\\n        if (cnt==0)return 0; // if no element is found return 0;\\n        return (ans/cnt);  // else return the average that is sum of elements divided by no. of elements\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int ans=0; int cnt=0;             // ans will store the sum of elements which are even and divisible by 3; \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t // cnt will store the number of elements which are even and divisible by 3; \\n        for (int i=0; i<nums.size(); i++){\\n\\t\\t// Elements which are divisible by 3 and are even simply means **It must be divisible by 6** So we are checking that in the loop\\n\\t\\t// we are adding it to ans if it is divisible by 6 and increase cnt by 1;\\n            if (nums[i]%6==0){ans+=nums[i];cnt++;}\\n        }\\n        if (cnt==0)return 0; // if no element is found return 0;\\n        return (ans/cnt);  // else return the average that is sum of elements divided by no. of elements\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2760518,
                "title": "java-easy-understanding-brute-force-solution",
                "content": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n        for (int num : nums){\\n            if(num%2 == 0 && num%3 == 0) list.add(num);\\n        }\\n        int sum = 0;\\n        for (int i = 0; i < list.size(); i++) {\\n            sum += list.get(i);\\n        }\\n        if(list.size()>0) return sum/list.size();\\n        else return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n        for (int num : nums){\\n            if(num%2 == 0 && num%3 == 0) list.add(num);\\n        }\\n        int sum = 0;\\n        for (int i = 0; i < list.size(); i++) {\\n            sum += list.get(i);\\n        }\\n        if(list.size()>0) return sum/list.size();\\n        else return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3682114,
                "title": "easy-to-understand-c-and-java-optimised",
                "content": "# Code\\n```C++ []\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int count=0, sum=0;\\n        for (int i=0; i<nums.size(); i++)\\n        {\\n            if  (nums[i]%6==0)\\n            {\\n                count++;\\n                sum+=nums[i];\\n            }\\n        }\\n       return (count==0)?0:sum/count;\\n    }\\n};\\n```\\n```Java []\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n=nums.length;\\n        int sum = 0, count=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(nums[i]%6==0)\\n            {\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0) return 0;\\n        return sum/count;\\n    }\\n}\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Array",
                    "Math"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int count=0, sum=0;\\n        for (int i=0; i<nums.size(); i++)\\n        {\\n            if  (nums[i]%6==0)\\n            {\\n                count++;\\n                sum+=nums[i];\\n            }\\n        }\\n       return (count==0)?0:sum/count;\\n    }\\n};\\n```\n```Java []\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n=nums.length;\\n        int sum = 0, count=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(nums[i]%6==0)\\n            {\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0) return 0;\\n        return sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2788991,
                "title": "linear-scan",
                "content": "# Intuition\\nAs we are looking for numbers even and divisible by 3 that means we are looking for number divisible by 2 and 3 which is the divisibity rule of 6.\\nSo we directly check if the number is divisible by 6.\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nUsing a linear scan we check if the number is divisible by 6.\\nIf so we add it to `sum` and increment the `count`.\\n\\nAt the end we find the average if `count` is not `0`.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: *`O(n)`*\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: *`O(1)`*\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0, count = 0;\\n        for(int num: nums) {\\n            if(num % 6 == 0) {\\n                sum += num;\\n                count++;\\n            }\\n        }\\n        if(count == 0)\\n            return 0;\\n        return sum / count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0, count = 0;\\n        for(int num: nums) {\\n            if(num % 6 == 0) {\\n                sum += num;\\n                count++;\\n            }\\n        }\\n        if(count == 0)\\n            return 0;\\n        return sum / count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2780860,
                "title": "python-99-84-faster-o-n-solution",
                "content": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s,c,n=0,0,len(nums)\\n        for i in nums:\\n            if i%6==0: \\n                s+=i\\n                c+=1\\n        if c==0:\\n            return 0\\n        return s//c\\n```\\n\\n**Please upvote if you like the solution**",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s,c,n=0,0,len(nums)\\n        for i in nums:\\n            if i%6==0: \\n                s+=i\\n                c+=1\\n        if c==0:\\n            return 0\\n        return s//c\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2776370,
                "title": "east-to-understand-cpp-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int x:nums)\\n        {\\n            if(x%6==0)\\n            {\\n                sum += x;\\n                count ++;\\n            }\\n        }\\n        if(count == 0)\\n        return 0;\\n        return (sum/count);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int x:nums)\\n        {\\n            if(x%6==0)\\n            {\\n                sum += x;\\n                count ++;\\n            }\\n        }\\n        if(count == 0)\\n        return 0;\\n        return (sum/count);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2770799,
                "title": "easy-python-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        l=[]\\n        for i in nums:\\n            if i%6==0:\\n                l.append(i)\\n        return sum(l)//len(l) if len(l)>0 else 0\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        l=[]\\n        for i in nums:\\n            if i%6==0:\\n                l.append(i)\\n        return sum(l)//len(l) if len(l)>0 else 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2764545,
                "title": "python-simple-python-solution",
                "content": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s=0\\n        k=0\\n        for i in nums:\\n            if i%6==0:\\n                k+=1\\n                s+=i\\n        \\n        if k==0:\\n            return 0\\n        else:\\n            return(s//k)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s=0\\n        k=0\\n        for i in nums:\\n            if i%6==0:\\n                k+=1\\n                s+=i\\n        \\n        if k==0:\\n            return 0\\n        else:\\n            return(s//k)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2759732,
                "title": "c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0;\\n        int count=0;\\n        for(auto i: nums){\\n            if(i%2==0 && i%3==0){\\n                count++;\\n                sum=sum+i;\\n            }\\n        }\\n        if(count==0){\\n            return 0;\\n        }\\n        return sum/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0;\\n        int count=0;\\n        for(auto i: nums){\\n            if(i%2==0 && i%3==0){\\n                count++;\\n                sum=sum+i;\\n            }\\n        }\\n        if(count==0){\\n            return 0;\\n        }\\n        return sum/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758305,
                "title": "easy-to-understand-with-comments",
                "content": "\\n\\tclass Solution {\\n\\tpublic:\\n    int averageValue(vector<int>& nums) {\\n        int s=0,c=0;\\n        for(auto x:nums){\\n\\t\\t// x is even i.e. it should be divided by 2 and as mention in question x should be divided by 3 also therefore it should be divided be (2*3)=6\\n            if(x%6==0){\\n\\t\\t\\t// add every value of x that satisfies the condition and store it\\n                s+=x;\\n\\t\\t\\t// counter variable which can be used at end to calculate the average\\n                c++;\\n            }\\n        }\\n\\t\\t\\n        if(s==0)\\n            return 0;\\n        return s/c;\\n    }\\n};",
                "solutionTags": [
                    "Math"
                ],
                "code": "class Solution {\\n\\tpublic:\\n    int averageValue(vector<int>& nums) {\\n        int s=0,c=0;\\n        for(auto x:nums){\\n\\t\\t// x is even i.e. it should be divided by 2 and as mention in question x should be divided by 3 also therefore it should be divided be (2*3)=6\\n            if(x%6==0){\\n\\t\\t\\t// add every value of x that satisfies the condition and store it\\n                s+=x;\\n\\t\\t\\t// counter variable which can be used at end to calculate the average\\n                c++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2758161,
                "title": "easiest-and-fastest-in-java-with-explanation",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Iterate through the array and check if each number is divisible by 2 and 3.\\n2. If it\\'s true, add that number to a sum variable and increment count by 1.\\n3. After iterating through all numbers in the array, divide sum with count to get average value of all numbers that are divisible by 2 and 3 (if there were any). \\n4. If no such numbers exist then return 0;\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n = nums.length;\\n        int sum = 0;\\n        int count =0;\\n        for(int i=0; i<n;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0){\\n            return 0;\\n        }\\n        else{\\n        int avg = sum/count;\\n        return avg;\\n        }\\n    }\\n}\\n```\\n# Upvote me if you like the approach and solution.Happy Coding...\\n\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n = nums.length;\\n        int sum = 0;\\n        int count =0;\\n        for(int i=0; i<n;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0){\\n            return 0;\\n        }\\n        else{\\n        int avg = sum/count;\\n        return avg;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758107,
                "title": "easy-short-efficient-clean-code",
                "content": "```\\nclass Solution {\\ntypedef long long ll;\\npublic:\\n    int averageValue(vector<int>&v) {\\n        ll sum=0, cnt=0;\\n        for(ll it:v){\\n            if(!(it&1) && !(it%3)){\\n                ++cnt, sum+=it;\\n            }\\n        }\\n        if(!cnt){\\n            return 0;\\n        }\\n        return sum/cnt;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\ntypedef long long ll;\\npublic:\\n    int averageValue(vector<int>&v) {\\n        ll sum=0, cnt=0;\\n        for(ll it:v){\\n            if(!(it&1) && !(it%3)){\\n                ++cnt, sum+=it;\\n            }\\n        }\\n        if(!cnt){\\n            return 0;\\n        }\\n        return sum/cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3949423,
                "title": "easy-solution-in-java",
                "content": "# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count = 0;\\n        int sum = 0;\\n        for(int i : nums){\\n            if(i%6 == 0){\\n                count++;\\n                sum+=i;\\n            }\\n        }\\n        if(count == 0) return 0;\\n        return sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count = 0;\\n        int sum = 0;\\n        for(int i : nums){\\n            if(i%6 == 0){\\n                count++;\\n                sum+=i;\\n            }\\n        }\\n        if(count == 0) return 0;\\n        return sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3682104,
                "title": "0-ms-solution-in-java-easy-approach",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n=nums.length;\\n        int sum = 0, count=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(nums[i]%6==0)\\n            {\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0) return 0;\\n        return sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n=nums.length;\\n        int sum = 0, count=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(nums[i]%6==0)\\n            {\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0) return 0;\\n        return sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3667663,
                "title": "easy-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0;\\n        int sum =0;\\n        for(int i =0;i < nums.length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                count++;\\n                sum+=nums[i];\\n            }\\n        }\\n        if (count == 0) {\\n            return 0;\\n        } else {\\n            return sum / count;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0;\\n        int sum =0;\\n        for(int i =0;i < nums.length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                count++;\\n                sum+=nums[i];\\n            }\\n        }\\n        if (count == 0) {\\n            return 0;\\n        } else {\\n            return sum / count;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3543642,
                "title": "simplest-efficient-c-code-time-o-n-space-o-1",
                "content": "# Intuition\\nThe code aims to calculate the average value of numbers in an array that are divisible by 6.\\n\\n# Approach\\nThe code initializes two variables: sum and count to keep track of the sum of numbers divisible by 6 and the count of such numbers, respectively. Then, it iterates through the array nums using a for loop. For each element nums[i], it checks if it is divisible by 6 using the condition nums[i] % 6 == 0. If it is divisible, it adds the element to the sum and increments the count variable.\\n\\nAfter iterating through all the elements, the code checks if the count variable is zero. If it is, it means no numbers in the array were divisible by 6, so the code returns 0. Otherwise, it calculates the average by dividing the sum by the count and returns the result.\\n\\n# Complexity\\n- Time complexity: $O(n)$, where n is the size of the array nums. This is because the code iterates through each element of the array once.\\n\\n- Space complexity: $O(1)$ because it uses a constant amount of extra space to store the sum and count variables, regardless of the size of the input array.\\n\\n# Code\\n```\\nint averageValue(int* nums, int numsSize)\\n{\\n    int sum = 0,count = 0;\\n    for(int i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]%6==0)\\n        {\\n            sum += nums[i];\\n            count++;\\n        }\\n    }\\n    if(count==0)\\n    return 0;\\n    return sum/count;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint averageValue(int* nums, int numsSize)\\n{\\n    int sum = 0,count = 0;\\n    for(int i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]%6==0)\\n        {\\n            sum += nums[i];\\n            count++;\\n        }\\n    }\\n    if(count==0)\\n    return 0;\\n    return sum/count;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3355902,
                "title": "easy-c-solution",
                "content": "# Intuition sum all no. that are divisible by 2 and 3 ;\\n \\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach for each loop count++;\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0;\\n        int count=0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%3==0 && nums[i]%2==0 && nums[i]!=1){\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        while(count!=0){\\n        return sum/count;\\n    }\\n     return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0;\\n        int count=0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%3==0 && nums[i]%2==0 && nums[i]!=1){\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        while(count!=0){\\n        return sum/count;\\n    }\\n     return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3208790,
                "title": "average-value-of-even-numbers-that-are-divisible-by-three-solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int i, sum=0, count=0;\\n        for(i=0 ; i<nums.size() ; i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                sum += nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0)\\n            return 0;\\n        return sum/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int i, sum=0, count=0;\\n        for(i=0 ; i<nums.size() ; i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                sum += nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0)\\n            return 0;\\n        return sum/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3178758,
                "title": "faster-than-91-88-of-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int ans = 0;\\n        int a = 0;\\n        for (auto i: nums){\\n            if (i % 2 == 0 && i % 3 == 0){\\n                a++;\\n                ans += i;\\n            }\\n        }\\n        if (a == 0){\\n            return 0;\\n        }\\n        return ans / a;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int ans = 0;\\n        int a = 0;\\n        for (auto i: nums){\\n            if (i % 2 == 0 && i % 3 == 0){\\n                a++;\\n                ans += i;\\n            }\\n        }\\n        if (a == 0){\\n            return 0;\\n        }\\n        return ans / a;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3087824,
                "title": "java-o-n-100-solution",
                "content": "# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(n)$$\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n$$O(1)$$\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int num:nums)\\n            if (num%6==0) {\\n                sum += num;\\n                count++;\\n            }\\n       return count == 0 ? 0 : sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int num:nums)\\n            if (num%6==0) {\\n                sum += num;\\n                count++;\\n            }\\n       return count == 0 ? 0 : sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3073637,
                "title": "easy-cpp-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int ans=0,count=0;;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                count++;\\n                ans+=nums[i];\\n            }\\n        }\\n        return count==0?0:ans/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int ans=0,count=0;;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                count++;\\n                ans+=nums[i];\\n            }\\n        }\\n        return count==0?0:ans/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3019455,
                "title": "accepted-swift",
                "content": "```\\nclass Solution {\\n    func averageValue(_ nums: [Int]) -> Int {\\n        let ns = nums.filter { $0 % 2 == 0 && $0 % 3 == 0 }\\n        return ns.reduce(0, +) / max(ns.count, 1)\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func averageValue(_ nums: [Int]) -> Int {\\n        let ns = nums.filter { $0 % 2 == 0 && $0 % 3 == 0 }\\n        return ns.reduce(0, +) / max(ns.count, 1)\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2999658,
                "title": "easy-c-solution-beats-97-with-explaination",
                "content": "# Intuition\\n%6 == 0\\n\\n# Approach\\nmake a new vector and add elements which are divisble by 6 then take sum of all the elements and divide by its size.\\n\\n# Complexity\\n- Time complexity:\\n0(n)\\n\\n- Space complexity:\\n0(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        vector<int> p ;\\n        int a = nums.size();\\n        for(int i=0 ; i<a;i++){\\n             if(nums[i]%6==0){\\n             p.push_back(nums[i]);\\n               }\\n        }\\n        int sum = 0 ; \\n        for(int i = 0 ; i<p.size() ; i++){\\n            sum=sum+p[i];\\n        }\\n        while(p.size()!=0){\\n        return sum/p.size() ;}\\nreturn 0 ; \\n    }\\n};",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        vector<int> p ;\\n        int a = nums.size();\\n        for(int i=0 ; i<a;i++){\\n             if(nums[i]%6==0){\\n             p.push_back(nums[i]);\\n               }",
                "codeTag": "Java"
            },
            {
                "id": 2998668,
                "title": "python-super-simple-2-lines-pythonic-solution",
                "content": "# Approach\\nFirst we filter all the even numbers that are divisible by three.\\nThen we calculate their average.\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        res = [a for a in nums if ((a % 2 == 0) and (a % 3 == 0))]\\n        return 0 if len(res) == 0 else sum(res) // len(res)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        res = [a for a in nums if ((a % 2 == 0) and (a % 3 == 0))]\\n        return 0 if len(res) == 0 else sum(res) // len(res)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2927312,
                "title": "python3-code",
                "content": "# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        d = [num for num in nums if num % 3 == 0 and num % 2 == 0]\\n        if d == []: return 0\\n        return int(sum(d) / len(d))\\n```\\n\\n![image.png](https://assets.leetcode.com/users/images/45d1447a-c792-479d-a41e-549ed22bf768_1671428391.651131.png)\\n",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        d = [num for num in nums if num % 3 == 0 and num % 2 == 0]\\n        if d == []: return 0\\n        return int(sum(d) / len(d))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2881730,
                "title": "python-simple-o-n",
                "content": "https://leetcode.com/problems/average-value-of-even-numbers-that-are-divisible-by-three/submissions/855293684/\\nRuntime 85 ms Beats 90.83%  \\nMemory 14.1 MB Beats 73.88%  \\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s, c = 0, 0\\n        for n in nums:\\n            f = n%6==0\\n            s += f*n\\n            c += f*1\\n        return int(s/c) if c!=0 else 0\\n```\\n\\nhttps://leetcode.com/problems/average-value-of-even-numbers-that-are-divisible-by-three/submissions/855282858/\\nRuntime 192 ms Beats 29.19%  \\nMemory 13.9 MB Beats 93.49%  \\n```\\nfrom math import floor, ceil\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s, c = 0, 0\\n        for n in nums:\\n            m = n/6\\n            if floor(m)==ceil(m):\\n                s += n\\n                c += 1\\n        return int(s/c) if c!=0 else 0\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s, c = 0, 0\\n        for n in nums:\\n            f = n%6==0\\n            s += f*n\\n            c += f*1\\n        return int(s/c) if c!=0 else 0\\n```\n```\\nfrom math import floor, ceil\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s, c = 0, 0\\n        for n in nums:\\n            m = n/6\\n            if floor(m)==ceil(m):\\n                s += n\\n                c += 1\\n        return int(s/c) if c!=0 else 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2828263,
                "title": "easy-python-solution",
                "content": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        n=len(nums)\\n        l=[]\\n        \\n        for i in range(n):\\n            if(nums[i]%2==0 and nums[i]%3==0):\\n                l.append(nums[i])\\n\\n        if (len(l)==0):\\n            return 0\\n        return int(sum(l)/len(l))",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        n=len(nums)\\n        l=[]\\n        \\n        for i in range(n):\\n            if(nums[i]%2==0 and nums[i]%3==0):\\n                l.append(nums[i])\\n\\n        if (len(l)==0):\\n            return 0\\n        return int(sum(l)/len(l))",
                "codeTag": "Java"
            },
            {
                "id": 2827059,
                "title": "java-o-n-average-value-of-even-numbers-that-are-divisible-by-three",
                "content": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int c=0;\\n        int sum=0;\\n        for(int i:nums)\\n        {\\n            if(i%3==0&&i%2==0){\\n                sum+=i;\\n                c++;\\n            }\\n        }\\n        \\n        return sum==0?0:sum/c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int c=0;\\n        int sum=0;\\n        for(int i:nums)\\n        {\\n            if(i%3==0&&i%2==0){\\n                sum+=i;\\n                c++;\\n            }\\n        }\\n        \\n        return sum==0?0:sum/c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2804265,
                "title": "average-value-of-even-numbers-that-are-divisible-by-three-solution-java",
                "content": "class Solution {\\n  public int averageValue(int[] nums) {\\n    int sum = 0;\\n    int count = 0;\\n\\n    for (final int num : nums)\\n      if (num % 6 == 0) {\\n        sum += num;\\n        ++count;\\n      }\\n\\n    return count == 0 ? 0 : sum / count;\\n  }\\n}\\n",
                "solutionTags": [
                    "Array",
                    "Math"
                ],
                "code": "class Solution {\\n  public int averageValue(int[] nums) {\\n    int sum = 0;\\n    int count = 0;\\n\\n    for (final int num : nums)\\n      if (num % 6 == 0) {\\n        sum += num;\\n        ++count;\\n      }",
                "codeTag": "Java"
            },
            {
                "id": 2803332,
                "title": "javascript-solution-fast-and-easy-to-understand",
                "content": "```\\nvar averageValue = function(nums) {\\n    const result = nums.filter(x => x % 3 === 0 )\\n    if(result.length<1){\\n        return 0\\n    }else{\\n        divisibleBy2 = result.filter(x=> x % 2 === 0)\\n        if(divisibleBy2.length<1){\\n            return 0\\n        }else{\\n            const sum = divisibleBy2.reduce((a,b)=> a+b,0)\\n            return Math.floor(sum/divisibleBy2.length);\\n        }\\n    } \\n    \\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar averageValue = function(nums) {\\n    const result = nums.filter(x => x % 3 === 0 )\\n    if(result.length<1){\\n        return 0\\n    }else{\\n        divisibleBy2 = result.filter(x=> x % 2 === 0)\\n        if(divisibleBy2.length<1){\\n            return 0\\n        }else{\\n            const sum = divisibleBy2.reduce((a,b)=> a+b,0)\\n            return Math.floor(sum/divisibleBy2.length);\\n        }\\n    } \\n    \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2786035,
                "title": "swift-simple-solution",
                "content": "# Code\\n```\\nclass Solution {\\n    func averageValue(_ nums: [Int]) -> Int {\\n        var answer = 0\\n        var count = 0\\n        for num in nums {\\n            if num % 3 == 0, num % 2 == 0 {\\n                answer += num\\n                count += 1\\n            }\\n        }\\n        return count != 0 ? answer/count : answer \\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func averageValue(_ nums: [Int]) -> Int {\\n        var answer = 0\\n        var count = 0\\n        for num in nums {\\n            if num % 3 == 0, num % 2 == 0 {\\n                answer += num\\n                count += 1\\n            }\\n        }\\n        return count != 0 ? answer/count : answer \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2780425,
                "title": "python-one-pass-o-n",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nFrom the question, we know we need to check which numbers are both even and divisible by three.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nLoop through nums, check what fits reqs, add it to array. If the array has anything in it, divide the sum by the length, else just return 0.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nI think it\\'s also O(n)? I\\'d really appreciate it if someone could clarify.\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        _ans =[]\\n        for i in nums:\\n            if (i%2==0) and (i%3==0):\\n                _ans.append(i)\\n        return sum(_ans)//len(_ans) if len(_ans) > 0 else 0\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        _ans =[]\\n        for i in nums:\\n            if (i%2==0) and (i%3==0):\\n                _ans.append(i)\\n        return sum(_ans)//len(_ans) if len(_ans) > 0 else 0\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2774373,
                "title": "easy-to-understand-for-beginners",
                "content": "If you find the solution helpful kindly consider upvoting.... \\nI have added the comments to each step, if further clarification is required kindly drop a message and will be more than happy to help\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    let temp = []\\n    nums.forEach(val =>{\\n        if(val % 2 == 0 && val % 3 == 0){ // here we are segregating the elements which meet the condition listed in the question, we are using modular operator \\n            temp.push(val) // we are pushing the segregated elements to a new array\\n        }\\n    })\\n    let sum = 0;\\n    for(i = 0; i < temp.length; i++){ // this loop is to get the sum of all the elements, which is stored in sum\\n        sum += temp[i]\\n    }\\n    sum = sum / temp.length; // we are using temp.length here coz we dont know how many elements will meet the codition and to find the sum..\\n    if(sum > 0 ){ // this if statement is used in case none of the element meets the condition\\n\\t\\n        return Math.floor(sum) // here we are using Math.floor to round down the no. \\n\\t\\t\\n    } return 0 // in case none of the element meets the condition this line will be executed\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    let temp = []\\n    nums.forEach(val =>{\\n        if(val % 2 == 0 && val % 3 == 0){ // here we are segregating the elements which meet the condition listed in the question, we are using modular operator \\n            temp.push(val) // we are pushing the segregated elements to a new array\\n        }\\n    })\\n    let sum = 0;\\n    for(i = 0; i < temp.length; i++){ // this loop is to get the sum of all the elements, which is stored in sum\\n        sum += temp[i]\\n    }\\n    sum = sum / temp.length; // we are using temp.length here coz we dont know how many elements will meet the codition and to find the sum..\\n    if(sum > 0 ){ // this if statement is used in case none of the element meets the condition\\n\\t\\n        return Math.floor(sum) // here we are using Math.floor to round down the no. \\n\\t\\t\\n    } return 0 // in case none of the element meets the condition this line will be executed\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2773016,
                "title": "c-easy-solution-easy-to-understand",
                "content": "##### \\nIf You feel this is Useful solution || Plz Upvote\\n\\n\\n##### Simply check if the number is divisible by 2 & 3 or not. If divisible add it to sum and increament count . Then return the average by diving sum by count.\\n\\n    int averageValue(vector<int>& nums) \\n    {\\n        int sum=0,count =0;\\n        for(int i = 0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0)\\n                if(nums[i]%3==0)\\n                {\\n                    sum = sum+ nums[i];\\n                    count++;\\n                }\\n        }\\n        if(count==0)\\n            return 0;\\n        int average = (sum/count);\\n        return average;\\n    }",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "##### \\nIf You feel this is Useful solution || Plz Upvote\\n\\n\\n##### Simply check if the number is divisible by 2 & 3 or not. If divisible add it to sum and increament count . Then return the average by diving sum by count.\\n\\n    int averageValue(vector<int>& nums) \\n    {\\n        int sum=0,count =0;\\n        for(int i = 0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0)\\n                if(nums[i]%3==0)\\n                {\\n                    sum = sum+ nums[i];\\n                    count++;\\n                }\\n        }\\n        if(count==0)\\n            return 0;\\n        int average = (sum/count);\\n        return average;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2767616,
                "title": "easy-to-understand-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n     int y=0;\\n        int s=0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                y+=nums[i];\\n                s++;\\n            }\\n        }      \\n        if(y==0) return 0;\\n        \\n        return y/s;   \\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n     int y=0;\\n        int s=0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                y+=nums[i];\\n                s++;\\n            }\\n        }      \\n        if(y==0) return 0;\\n        \\n        return y/s;   \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2766801,
                "title": "java-easiest-solution-in-o-n",
                "content": "\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0, sum = 0;\\n      for(int num : nums) {\\n          if(num % 6 == 0) {\\n              count ++;\\n              sum += num;\\n          }\\n      } \\n      return count == 0 ? 0 : sum / count; \\n    }\\n}\\n```\\n# PLEASE UPVOTE IF IT WAS HELPFULL",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0, sum = 0;\\n      for(int num : nums) {\\n          if(num % 6 == 0) {\\n              count ++;\\n              sum += num;\\n          }\\n      } \\n      return count == 0 ? 0 : sum / count; \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2766403,
                "title": "operation",
                "content": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0;\\n        int sum =0;\\n        \\n        for(int value:nums){\\n            if(value%2==0){\\n                if(value%3==0){\\n                    count++;\\n                    sum+=value;\\n                }\\n            }\\n        }\\n      return count==0 ? 0 : sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0;\\n        int sum =0;\\n        \\n        for(int value:nums){\\n            if(value%2==0){\\n                if(value%3==0){\\n                    count++;\\n                    sum+=value;\\n                }\\n            }\\n        }\\n      return count==0 ? 0 : sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2764817,
                "title": "golang-3-ms-4-1-mb",
                "content": "```\\nfunc averageValue(nums []int) int {\\n\\tsum := 0\\n\\tcount := 0\\n\\tfor _, num := range nums {\\n\\t\\tif num%6 == 0 {\\n\\t\\t\\tsum += num\\n\\t\\t\\tcount++\\n\\t\\t}\\n\\t}\\n\\tif count == 0 {\\n\\t\\treturn 0\\n\\t}\\n\\treturn sum / count\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc averageValue(nums []int) int {\\n\\tsum := 0\\n\\tcount := 0\\n\\tfor _, num := range nums {\\n\\t\\tif num%6 == 0 {\\n\\t\\t\\tsum += num\\n\\t\\t\\tcount++\\n\\t\\t}\\n\\t}\\n\\tif count == 0 {\\n\\t\\treturn 0\\n\\t}\\n\\treturn sum / count\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2763358,
                "title": "c-easy",
                "content": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        vector<int>numbers;\\n        int sum=0,count = 0;\\n        for(auto i:nums)\\n        {\\n            if(i % 2==0 && i % 3==0)\\n            {\\n                count++;\\n                numbers.push_back(i);\\n            }\\n        }\\n        if(numbers.size()==0)\\n            return 0;\\n        for(int i=0;i<numbers.size();i++)\\n        {\\n            sum+= numbers[i];\\n        }\\n        int avg = sum / count;\\n        return avg;     \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        vector<int>numbers;\\n        int sum=0,count = 0;\\n        for(auto i:nums)\\n        {\\n            if(i % 2==0 && i % 3==0)\\n            {\\n                count++;\\n                numbers.push_back(i);\\n            }\\n        }\\n        if(numbers.size()==0)\\n            return 0;\\n        for(int i=0;i<numbers.size();i++)\\n        {\\n            sum+= numbers[i];\\n        }\\n        int avg = sum / count;\\n        return avg;     \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2763059,
                "title": "easiest-python-solution-with-explanation",
                "content": "Here is my solution in Python:-\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        ans=0       # ans will store the sum of elements which are even and divisible by 3; \\n        cnt=0       # cnt will store the number of elements which are even and divisible by 3;       \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\n        for ele in nums:\\n\\t\\t# Elements which are divisible by 3 and are even simply means **It must be divisible by 6** So we are checking that in the loop\\n\\t\\t# we are adding it to ans if it is divisible by 6 and increase cnt by 1;\\n            if (ele%6==0):\\n                ans+=ele;\\n                cnt+=1;\\n        if (cnt==0):\\n            return 0; # if no element is found return 0;\\n        return (floor(ans/cnt));  # else return the floor value ofaverage that is sum of elements divided by no. of elements\\n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        ans=0       # ans will store the sum of elements which are even and divisible by 3; \\n        cnt=0       # cnt will store the number of elements which are even and divisible by 3;       \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\n        for ele in nums:\\n\\t\\t# Elements which are divisible by 3 and are even simply means **It must be divisible by 6** So we are checking that in the loop\\n\\t\\t# we are adding it to ans if it is divisible by 6 and increase cnt by 1;\\n            if (ele%6==0):\\n                ans+=ele;\\n                cnt+=1;\\n        if (cnt==0):\\n            return 0; # if no element is found return 0;\\n        return (floor(ans/cnt));  # else return the floor value ofaverage that is sum of elements divided by no. of elements\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2759525,
                "title": "swift-simple-solution",
                "content": "\\n\\n```\\nfunc averageValue(_ nums: [Int]) -> Int {\\n\\tlet hash = nums.filter { $0.isMultiple(of: 3) && $0.isMultiple(of: 2) }\\n\\treturn hash.isEmpty ? 0 : hash.reduce(0,+) / hash.count\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nfunc averageValue(_ nums: [Int]) -> Int {\\n\\tlet hash = nums.filter { $0.isMultiple(of: 3) && $0.isMultiple(of: 2) }\\n\\treturn hash.isEmpty ? 0 : hash.reduce(0,+) / hash.count\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2759042,
                "title": "python-easy-understanding-solution",
                "content": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        eve = []\\n        flag = False\\n        for i in range(len(nums)):\\n            if nums[i] % 2 == 0 and nums[i] % 3 == 0:\\n                eve.append(nums[i])\\n                flag = True\\n        if flag is False:\\n            return 0\\n        return sum(eve)//len(eve)\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        eve = []\\n        flag = False\\n        for i in range(len(nums)):\\n            if nums[i] % 2 == 0 and nums[i] % 3 == 0:\\n                eve.append(nums[i])\\n                flag = True\\n        if flag is False:\\n            return 0\\n        return sum(eve)//len(eve)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2759002,
                "title": "python-easy",
                "content": "```\\nclass Solution:\\n    def averageValue(self, arr: List[int]) -> int:\\n        s = 0\\n        n = 0\\n        for i in arr:\\n            if i % 6 == 0:\\n                s += i\\n                n += 1\\n        if n == 0:\\n            return 0\\n        return s // n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def averageValue(self, arr: List[int]) -> int:\\n        s = 0\\n        n = 0\\n        for i in arr:\\n            if i % 6 == 0:\\n                s += i\\n                n += 1\\n        if n == 0:\\n            return 0\\n        return s // n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758954,
                "title": "15-ms-faster-than-100-00-of-c-online-submissions",
                "content": "\\'\\'\\'int averageValue(vector<int>& nums) {\\n        int sum=0, ct=0;\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum=sum+nums[i];\\n                ct++;\\n            }\\n        }\\n        if(ct==0){\\n            return 0;\\n        }\\n        return sum/ct;\\n    }\\'\\'\\'",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "\\'\\'\\'int averageValue(vector<int>& nums) {\\n        int sum=0, ct=0;\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum=sum+nums[i];\\n                ct++;\\n            }\\n        }\\n        if(ct==0){\\n            return 0;\\n        }\\n        return sum/ct;\\n    }\\'\\'\\'",
                "codeTag": "Unknown"
            },
            {
                "id": 2758600,
                "title": "java-solution-o-n-100-0-faster",
                "content": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count = 0;\\n        int sum = 0;\\n        for(int i:nums){\\n            if(i%2==0 && i%3==0){\\n                sum+=i;\\n                count+=1;\\n            }\\n        }\\n        if(count>0)\\n            return sum/count;\\n        return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count = 0;\\n        int sum = 0;\\n        for(int i:nums){\\n            if(i%2==0 && i%3==0){\\n                sum+=i;\\n                count+=1;\\n            }\\n        }\\n        if(count>0)\\n            return sum/count;\\n        return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758599,
                "title": "java-easy",
                "content": "### **Please Upvote** :D\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n = 0;\\n        int sum = 0;\\n        for (int i : nums) {\\n            if (i % 3 == 0 && i % 2 == 0) {\\n                sum += i;\\n                n++;\\n            }\\n        }\\n\\n        return n == 0 ? 0 : sum / n;\\n    }\\n}\\n\\n// TC: O(n)\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n = 0;\\n        int sum = 0;\\n        for (int i : nums) {\\n            if (i % 3 == 0 && i % 2 == 0) {\\n                sum += i;\\n                n++;\\n            }\\n        }\\n\\n        return n == 0 ? 0 : sum / n;\\n    }\\n}\\n\\n// TC: O(n)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758507,
                "title": "python-js-java-c-o-n-for-beginner-w-comment",
                "content": "**Python**\\n\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        \\n        \\n        # \"Even number and multiple of 3\" must be multiple of 6\\n        candidates = [ number for number in nums if (number % 6) == 0]\\n        \\n        if candidates:\\n            return math.floor( sum(candidates) / len(candidates) )\\n        else:\\n            return 0\\n```\\n\\n---\\n\\n**Javascript**:\\n\\n```\\nvar getSum = (prev, cur) => (prev + cur );\\n\\nvar averageValue = function(nums) {\\n    \\n    // \"Even number and multiple of 3\" must be multiple of 6 \\n    candidates = [];\\n    \\n    for( const number of nums){\\n        if( number % 6 == 0 ){\\n            candidates.push( number );\\n        }\\n    }\\n        \\n    if( candidates.length != 0 ){\\n        return Math.floor( candidates.reduce(getSum) / candidates.length );\\n    }else{\\n        return 0;\\n    }\\n};\\n```\\n\\n---\\n\\n**C++**\\n\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n\\n        // \"Even number and multiple of 3\" must be multiple of 6 \\n        vector<int> candidates;\\n\\n        for( const int& number : nums){\\n            if( number % 6 == 0 ){\\n                candidates.emplace_back( number );\\n            }\\n        }\\n\\n        if( candidates.size() != 0 ){\\n            return floor( accumulate( candidates.begin(), candidates.end(), 0) / candidates.size() );\\n        }else{\\n            return 0;\\n        }        \\n        \\n    }\\n};\\n```\\n\\n---\\n\\n**Java**:\\n\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        \\n        // \"Even number and multiple of 3\" must be multiple of 6 \\n        ArrayList<Integer> candidates = new ArrayList<Integer>();\\n        \\n        int summation = 0;\\n        for( int number : nums){\\n            if( number % 6 == 0 ){\\n                candidates.add( number );\\n                summation += number;\\n            }\\n        }\\n\\n        if( candidates.size() != 0 ){\\n             return summation / candidates.size();\\n        }else{\\n            return 0;\\n        }        \\n    }\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "C",
                    "JavaScript"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        \\n        \\n        # \"Even number and multiple of 3\" must be multiple of 6\\n        candidates = [ number for number in nums if (number % 6) == 0]\\n        \\n        if candidates:\\n            return math.floor( sum(candidates) / len(candidates) )\\n        else:\\n            return 0\\n```\n```\\nvar getSum = (prev, cur) => (prev + cur );\\n\\nvar averageValue = function(nums) {\\n    \\n    // \"Even number and multiple of 3\" must be multiple of 6 \\n    candidates = [];\\n    \\n    for( const number of nums){\\n        if( number % 6 == 0 ){\\n            candidates.push( number );\\n        }\\n    }\\n        \\n    if( candidates.length != 0 ){\\n        return Math.floor( candidates.reduce(getSum) / candidates.length );\\n    }else{\\n        return 0;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n\\n        // \"Even number and multiple of 3\" must be multiple of 6 \\n        vector<int> candidates;\\n\\n        for( const int& number : nums){\\n            if( number % 6 == 0 ){\\n                candidates.emplace_back( number );\\n            }\\n        }\\n\\n        if( candidates.size() != 0 ){\\n            return floor( accumulate( candidates.begin(), candidates.end(), 0) / candidates.size() );\\n        }else{\\n            return 0;\\n        }        \\n        \\n    }\\n};\\n```\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        \\n        // \"Even number and multiple of 3\" must be multiple of 6 \\n        ArrayList<Integer> candidates = new ArrayList<Integer>();\\n        \\n        int summation = 0;\\n        for( int number : nums){\\n            if( number % 6 == 0 ){\\n                candidates.add( number );\\n                summation += number;\\n            }\\n        }\\n\\n        if( candidates.size() != 0 ){\\n             return summation / candidates.size();\\n        }else{\\n            return 0;\\n        }        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758476,
                "title": "easy-approach-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        vector<int> v;\\n        for(auto it:nums)\\n        {\\n            if(it%3==0 && it%2==0)\\n                v.push_back(it);\\n        }\\n        \\n        int ans=0;\\n        int si=v.size();\\n        if(v.size()==0)return 0;\\n        for(auto it:v)\\n        {\\n            ans+=it;\\n        }\\n        int final=ans/si;\\n        return final;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        vector<int> v;\\n        for(auto it:nums)\\n        {\\n            if(it%3==0 && it%2==0)\\n                v.push_back(it);\\n        }\\n        \\n        int ans=0;\\n        int si=v.size();\\n        if(v.size()==0)return 0;\\n        for(auto it:v)\\n        {\\n            ans+=it;\\n        }\\n        int final=ans/si;\\n        return final;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758465,
                "title": "2n-line-js-simple-solution-using-filter-reduce",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\nnums = nums.filter(a => a % 6 ===0)\\nreturn nums.length ? parseInt(nums.reduce((a,b) => a + b )/ nums.length) : 0\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\nnums = nums.filter(a => a % 6 ===0)\\nreturn nums.length ? parseInt(nums.reduce((a,b) => a + b )/ nums.length) : 0\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2758189,
                "title": "brute-force-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int cnt = 0,sum =0;\\n        for(auto ele:nums)\\n            if(ele%2==0 and ele%3==0)sum+=ele,++cnt;\\n        return sum == 0 ? 0:sum/cnt;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int cnt = 0,sum =0;\\n        for(auto ele:nums)\\n            if(ele%2==0 and ele%3==0)sum+=ele,++cnt;\\n        return sum == 0 ? 0:sum/cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758168,
                "title": "c-easy-straight-forward",
                "content": "->Traverse nums by checking given conditions for each element; if satisfied add the number to sum and increase count.\\n->We have sum, we have count hence return average (make sure c!=0 while dividing)\\n\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int c = 0;\\n        int sum = 0;\\n        int ans = 0; \\n        for(int i = 0; i <nums.size(); i++){\\n            if(nums[i]%2 ==0 && nums[i]%3 ==0){\\n                sum +=nums[i];\\n                c++;\\n            }\\n        }\\n        if (c!=0)  ans = sum/c;\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int c = 0;\\n        int sum = 0;\\n        int ans = 0; \\n        for(int i = 0; i <nums.size(); i++){\\n            if(nums[i]%2 ==0 && nums[i]%3 ==0){\\n                sum +=nums[i];\\n                c++;\\n            }\\n        }\\n        if (c!=0)  ans = sum/c;\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758153,
                "title": "easy-and-simple-python-code-100-faster",
                "content": "upvote if you like the solution\\n```\\n        l=[]\\n        for i in nums:\\n            if i%6==0:\\n                l.append(i)\\n        return sum(l)/len(l) if l else 0\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\n        l=[]\\n        for i in nums:\\n            if i%6==0:\\n                l.append(i)\\n        return sum(l)/len(l) if l else 0\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2758086,
                "title": "average-value-of-even-numbers-that-are-divisible-by-three-simple-solution",
                "content": "int averageValue(vector<int>& nums) {\\n        int sum=0;\\n        int cnt=0;\\n        for(int i=0;i<size(nums);i++)\\n        {\\n            if(nums[i]%2==0 and nums[i]%3==0)\\n            {\\n                sum+=nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(cnt>0){\\n            return sum/cnt;\\n        }\\n        return 0;\\n    }",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "int averageValue(vector<int>& nums) {\\n        int sum=0;\\n        int cnt=0;\\n        for(int i=0;i<size(nums);i++)\\n        {\\n            if(nums[i]%2==0 and nums[i]%3==0)\\n            {\\n                sum+=nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(cnt>0){\\n            return sum/cnt;\\n        }\\n        return 0;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2758050,
                "title": "python-straight-forward-code",
                "content": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        sum = 0\\n        divisor = 0\\n        for num in nums:\\n            if num%2==0 and num%3==0:\\n                sum+=num\\n                divisor+=1\\n        if divisor == 0:\\n            return 0\\n        return int(sum/divisor)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        sum = 0\\n        divisor = 0\\n        for num in nums:\\n            if num%2==0 and num%3==0:\\n                sum+=num\\n                divisor+=1\\n        if divisor == 0:\\n            return 0\\n        return int(sum/divisor)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758029,
                "title": "java-easy-solution",
                "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n        \\n        int ans = 0;\\n        int count = 0;\\n        \\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%6 == 0)\\n            {\\n                ans = ans + nums[i];\\n                count++;\\n            }\\n        }\\n        \\n       if(count !=0) \\n       {\\n           return ans/count;\\n       }\\n        else\\n        {\\n            return 0;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public int averageValue(int[] nums) {\\n        \\n        int ans = 0;\\n        int count = 0;\\n        \\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%6 == 0)\\n            {\\n                ans = ans + nums[i];\\n                count++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2758014,
                "title": "c-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0,cnt=0;\\n        for(auto it : nums){\\n            if(it%2==0 && it%3==0){\\n                sum += it;\\n                cnt+=1;\\n            }\\n        }\\n        return cnt!=0?sum/cnt:0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0,cnt=0;\\n        for(auto it : nums){\\n            if(it%2==0 && it%3==0){\\n                sum += it;\\n                cnt+=1;\\n            }\\n        }\\n        return cnt!=0?sum/cnt:0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2757988,
                "title": "c-easy-approach",
                "content": "Here is my code for this problem.\\n\\'\\'\\'\\nclass Solution {\\npublic:\\n\\n    int averageValue(vector<int>& nums) {\\n        int sum=0, cnt=0;\\n        for(int i=0; i<nums.size(); i++){\\n            if(!(nums[i]&1) && nums[i]%3==0){sum+=nums[i]; cnt++;}\\n        }\\n        if(sum==0){return 0;}\\n        return sum/cnt;\\n    }\\n};\\n\\'\\'\\'",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n\\n    int averageValue(vector<int>& nums) {\\n        int sum=0, cnt=0;\\n        for(int i=0; i<nums.size(); i++){\\n            if(!(nums[i]&1) && nums[i]%3==0){sum+=nums[i]; cnt++;}",
                "codeTag": "Java"
            },
            {
                "id": 2757984,
                "title": "c-simple-traversal-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n = nums.size();\\n        \\n        int sum = 0,cnt = 0;\\n        \\n        for(int i=0;i<n;i++){\\n            if(nums[i]%2 == 0 && nums[i]%3 == 0){\\n                sum += nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(sum > 0 && cnt > 0){\\n        int avg = sum/cnt;\\n            return avg;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n```\\n**Please upvote if it was helpful for you, thank you!**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n = nums.size();\\n        \\n        int sum = 0,cnt = 0;\\n        \\n        for(int i=0;i<n;i++){\\n            if(nums[i]%2 == 0 && nums[i]%3 == 0){\\n                sum += nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(sum > 0 && cnt > 0){\\n        int avg = sum/cnt;\\n            return avg;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4093986,
                "title": "easiest-approach-java-easy-to-understand-anyone-can-do-leetcode",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        ArrayList<Integer> ans=new ArrayList<Integer>();\\n        int sum=0;\\n        for(int a: nums)\\n        {\\n            if(a%2==0 && a%3==0)\\n            {\\n                ans.add(a);\\n            }\\n        }\\n        if(ans.size()==0)\\n        return 0;\\n        for(Integer a: ans)\\n        {\\n            sum = sum+ a;\\n        }\\n        int s = sum/(ans.size());\\n        return s;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        ArrayList<Integer> ans=new ArrayList<Integer>();\\n        int sum=0;\\n        for(int a: nums)\\n        {\\n            if(a%2==0 && a%3==0)\\n            {\\n                ans.add(a);\\n            }\\n        }\\n        if(ans.size()==0)\\n        return 0;\\n        for(Integer a: ans)\\n        {\\n            sum = sum+ a;\\n        }\\n        int s = sum/(ans.size());\\n        return s;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4093650,
                "title": "average-value-of-even-no",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public int AverageValue(int[] nums) {\\n        int i ;\\n        int sum =0;\\n        int avg =0;\\n        int count=0;\\n        for(i=0;i<nums.Length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum += nums[i];\\n                count++;      \\n\\n            }\\n         \\n\\n        }\\n            if(sum!=0){\\n                  avg = sum/count;\\n                  return avg;\\n            }\\n            return 0;\\n           \\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int AverageValue(int[] nums) {\\n        int i ;\\n        int sum =0;\\n        int avg =0;\\n        int count=0;\\n        for(i=0;i<nums.Length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum += nums[i];\\n                count++;      \\n\\n            }\\n         \\n\\n        }\\n            if(sum!=0){\\n                  avg = sum/count;\\n                  return avg;\\n            }\\n            return 0;\\n           \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4079512,
                "title": "c-simple-linq-solution",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n- Space complexity: $$O(n)$$\\n\\n# Code\\n```\\npublic class Solution\\n{\\n    public int AverageValue(int[] nums)\\n    {\\n        var ints = nums.Where(x => x % 2 == 0 && x % 3 == 0);\\n        return ints.Any() ? (int) ints.Average() : 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution\\n{\\n    public int AverageValue(int[] nums)\\n    {\\n        var ints = nums.Where(x => x % 2 == 0 && x % 3 == 0);\\n        return ints.Any() ? (int) ints.Average() : 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4073894,
                "title": "understandable-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    let k=0;\\n    let sum=0;\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i]%6===0){\\n            sum+=nums[i];\\n            k+=1\\n        }\\n    }\\n      if(sum===0) return 0\\n      return  parseInt(sum / k);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    let k=0;\\n    let sum=0;\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i]%6===0){\\n            sum+=nums[i];\\n            k+=1\\n        }\\n    }\\n      if(sum===0) return 0\\n      return  parseInt(sum / k);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4071187,
                "title": "4-ms-c-using-two-pointer",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int i = 0, j = nums.size() - 1, cnt = 0, ret = 0, sum = 0;\\n\\n        while(i<=j)\\n        {\\n            if(i == j)\\n            {\\n                if(nums[i] % 3 == 0 && nums[i] % 2 == 0)\\n                {\\n                    cnt++;\\n                    sum += nums[i];\\n                }\\n            }\\n            else\\n            {\\n                if(nums[i] % 3 == 0 && nums[i] % 2 == 0)\\n                {\\n                    cnt++;\\n                    sum += nums[i];\\n                }\\n                if(nums[j] % 3 == 0 && nums[j] % 2 == 0)\\n                {\\n                    cnt++;\\n                    sum += nums[j];\\n                }\\n            }\\n            i++;\\n            j--;\\n        }\\n        if(cnt != 0)\\n            ret = sum/cnt;\\n        return ret;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int i = 0, j = nums.size() - 1, cnt = 0, ret = 0, sum = 0;\\n\\n        while(i<=j)\\n        {\\n            if(i == j)\\n            {\\n                if(nums[i] % 3 == 0 && nums[i] % 2 == 0)\\n                {\\n                    cnt++;\\n                    sum += nums[i];\\n                }\\n            }\\n            else\\n            {\\n                if(nums[i] % 3 == 0 && nums[i] % 2 == 0)\\n                {\\n                    cnt++;\\n                    sum += nums[i];\\n                }\\n                if(nums[j] % 3 == 0 && nums[j] % 2 == 0)\\n                {\\n                    cnt++;\\n                    sum += nums[j];\\n                }\\n            }\\n            i++;\\n            j--;\\n        }\\n        if(cnt != 0)\\n            ret = sum/cnt;\\n        return ret;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4070488,
                "title": "python-solution-easy-to-understand-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        l=[i for i in nums if i%3==0 and i%2==0]\\n        if l!=[]:\\n            return sum(l)//len(l)\\n        return 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        l=[i for i in nums if i%3==0 and i%2==0]\\n        if l!=[]:\\n            return sum(l)//len(l)\\n        return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4051809,
                "title": "java-beautiful-solution-o-n-elegant-code",
                "content": "```\\nclass Solution {\\n    public int averageValue(int[] nums){\\n        int count=0;\\n        int sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%6==0){   \\n                sum+=nums[i];   \\n                count++;\\n            }\\n        }\\n        return (count!=0) ? sum/count : 0;\\n    }\\n}\\n```\\n\\n![2f007d42-adf7-4a05-a8a0-519eabc0a64c_1683556673.544262.jpeg](https://assets.leetcode.com/users/images/e18d9510-fbb5-4760-a189-f3373d70b7cf_1694873930.2479186.jpeg)\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums){\\n        int count=0;\\n        int sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%6==0){   \\n                sum+=nums[i];   \\n                count++;\\n            }\\n        }\\n        return (count!=0) ? sum/count : 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4041545,
                "title": "easy-and-understandable-code-accepted",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nUsing Mathematical formula only\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1) Create two variable which store sum and couting \\n2) Use loop to check you required number\\n3) add with sum and increament the count\\n4) check the condtion for edge case\\n4) return the ans as average formula \\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(N)$$\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n$$O(1)$$\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%2 == 0 && nums[i]%3 == 0){\\n                count++;\\n                sum += nums[i];\\n            }\\n        }\\n        if(count== 0){\\n            return 0;\\n        }\\n        \\n        return sum/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%2 == 0 && nums[i]%3 == 0){\\n                count++;\\n                sum += nums[i];\\n            }\\n        }\\n        if(count== 0){\\n            return 0;\\n        }\\n        \\n        return sum/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4038857,
                "title": "easy-to-understand-meant-for-begineers",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int count = 0;\\n        \\n        for (int i = 0; i < nums.length; i++) {\\n            if (nums[i] % 6 == 0) {\\n                sum += nums[i];\\n                count++;\\n            }\\n        }\\n        \\n        if (count == 0) {\\n            return 0;\\n        }\\n\\n        \\n        return sum / count;\\n    }\\n}\\n\\n```\\n# upvote me!!1\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int count = 0;\\n        \\n        for (int i = 0; i < nums.length; i++) {\\n            if (nums[i] % 6 == 0) {\\n                sum += nums[i];\\n                count++;\\n            }\\n        }\\n        \\n        if (count == 0) {\\n            return 0;\\n        }\\n\\n        \\n        return sum / count;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4023412,
                "title": "easy-solution-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0;\\n        int count=0;\\n        for(int i=0;i<nums.size();i++){\\n            if((nums[i]%3==0) && (nums[i]%2==0)){\\n                sum=sum+nums[i];\\n                count++;\\n            }\\n        }\\n        if(sum==0){\\n            return 0;\\n        }\\n        int x=sum/count;\\n        return x;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0;\\n        int count=0;\\n        for(int i=0;i<nums.size();i++){\\n            if((nums[i]%3==0) && (nums[i]%2==0)){\\n                sum=sum+nums[i];\\n                count++;\\n            }\\n        }\\n        if(sum==0){\\n            return 0;\\n        }\\n        int x=sum/count;\\n        return x;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4019948,
                "title": "java-runtime-0ms-beginners-friendly",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum=0;\\n        int count=0;\\n        int ans=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%3==0)\\n            {\\n                if(nums[i]%2==0)\\n                {\\n                    count++;\\n                    sum+=nums[i];\\n                }\\n            }\\n        }\\n         if(sum>0)\\n         {\\n             ans=sum/count;\\n         }\\n         else\\n         {\\n             ans=0;\\n         }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum=0;\\n        int count=0;\\n        int ans=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%3==0)\\n            {\\n                if(nums[i]%2==0)\\n                {\\n                    count++;\\n                    sum+=nums[i];\\n                }\\n            }\\n        }\\n         if(sum>0)\\n         {\\n             ans=sum/count;\\n         }\\n         else\\n         {\\n             ans=0;\\n         }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4019717,
                "title": "simple-java-solution-1ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int c=0,s=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                c++;\\n                s+=nums[i];\\n            }\\n        }\\n        if(c==0)\\n            return 0;\\n        return s/c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int c=0,s=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                c++;\\n                s+=nums[i];\\n            }\\n        }\\n        if(c==0)\\n            return 0;\\n        return s/c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4003806,
                "title": "beats-easy-beginner-friendly-solution-simple-and-easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int c=0;\\n        int sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                c++;\\n                sum+=nums[i];\\n            }\\n        }\\n        if(c==0) return 0;\\n        return sum/c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int c=0;\\n        int sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                c++;\\n                sum+=nums[i];\\n            }\\n        }\\n        if(c==0) return 0;\\n        return sum/c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3981321,
                "title": "java-solution-easy-understanding-runtime-1ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n\\n        for(int i = 0; i<nums.length; i++)\\n        {\\n            if(nums[i] % 3 == 0 && nums[i] % 2 == 0)\\n            {\\n                list.add(nums[i]);\\n            }\\n        }\\n\\n        int sum = 0;\\n\\n        for(int i = 0; i<list.size(); i++)\\n        {\\n            sum += list.get(i);\\n        }\\n\\n        if(list.size() == 0)\\n        {\\n            return 0;\\n        }\\n\\n        return sum / list.size();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n\\n        for(int i = 0; i<nums.length; i++)\\n        {\\n            if(nums[i] % 3 == 0 && nums[i] % 2 == 0)\\n            {\\n                list.add(nums[i]);\\n            }\\n        }\\n\\n        int sum = 0;\\n\\n        for(int i = 0; i<list.size(); i++)\\n        {\\n            sum += list.get(i);\\n        }\\n\\n        if(list.size() == 0)\\n        {\\n            return 0;\\n        }\\n\\n        return sum / list.size();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3968721,
                "title": "easy-to-understand-python3-solution-tc-o-n-sc-o-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        length, total = 0, 0\\n\\n        for i in range(len(nums)):\\n            if nums[i] % 2 == 0 and nums[i] % 3 == 0:\\n                total += nums[i]\\n                length += 1\\n        if length == 0:\\n            return 0\\n        return total // length\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        length, total = 0, 0\\n\\n        for i in range(len(nums)):\\n            if nums[i] % 2 == 0 and nums[i] % 3 == 0:\\n                total += nums[i]\\n                length += 1\\n        if length == 0:\\n            return 0\\n        return total // length\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3968689,
                "title": "easy-solution-of-cpp",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n = nums.size();\\n        int sum=0,count=0;\\n        for(int i=0;i<n;i++){\\n            if(nums[i]%6==0){\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count ==0){\\n            return 0;\\n        }\\n        int avg = sum/count;\\n        return avg;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n = nums.size();\\n        int sum=0,count=0;\\n        for(int i=0;i<n;i++){\\n            if(nums[i]%6==0){\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count ==0){\\n            return 0;\\n        }\\n        int avg = sum/count;\\n        return avg;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3964681,
                "title": "the-fastest-in-dart",
                "content": "\\n# Complexity\\n- Time complexity:\\nO(n)\\n- Space complexity:\\nO(1)\\n# Code\\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n   int sum=0;\\n   int count=0;\\n   for(int i in nums)\\n   {\\n       if(i%2==0&&i%3==0)\\n        {\\n            sum+=i;\\n            count+=1;\\n        }\\n   }\\n   if(count!=0)\\n   return sum~/count;\\n   else \\n   return 0;\\n  }\\n}\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n   int sum=0;\\n   int count=0;\\n   for(int i in nums)\\n   {\\n       if(i%2==0&&i%3==0)\\n        {\\n            sum+=i;\\n            count+=1;\\n        }\\n   }\\n   if(count!=0)\\n   return sum~/count;\\n   else \\n   return 0;\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3959470,
                "title": "dart-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      nums..removeWhere((e) => e % 2 != 0)..removeWhere((e) => e % 3 != 0);\\n      return nums.length == 0 ? 0 : nums.fold<int>(0, (a, b) => a + b) ~/ nums.length;\\n  }\\n}\\n```\\n\\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      nums.removeWhere((e) => e % 6 != 0);\\n      return nums.length == 0 ? 0 : nums.fold<int>(0, (a, b) => a + b) ~/ nums.length;\\n  }\\n}\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      nums..removeWhere((e) => e % 2 != 0)..removeWhere((e) => e % 3 != 0);\\n      return nums.length == 0 ? 0 : nums.fold<int>(0, (a, b) => a + b) ~/ nums.length;\\n  }\\n}\\n```\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      nums.removeWhere((e) => e % 6 != 0);\\n      return nums.length == 0 ? 0 : nums.fold<int>(0, (a, b) => a + b) ~/ nums.length;\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3950608,
                "title": "day-5",
                "content": "# Intuition\\n<!-- Java solution. -->\\n\\n# Approach\\n<!--  -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- 0ms -->\\n\\n- Space complexity:\\n<!-- 42.96mb -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0, count = 0;\\n        for(int num : nums){\\n            if(num%6==0){\\n                sum+=num;\\n                count++;\\n            }\\n        }\\n        return count == 0 ? 0 : sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0, count = 0;\\n        for(int num : nums){\\n            if(num%6==0){\\n                sum+=num;\\n                count++;\\n            }\\n        }\\n        return count == 0 ? 0 : sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3950528,
                "title": "day-3",
                "content": "# Intuition\\n<!--  -->\\n\\n# Approach\\n<!- -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- 1ms -->\\n\\n- Space complexity:\\n<!-- 42.8mb-->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count=0;\\n        int sum=0;\\n        int avg=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                count++;\\n               sum+=nums[i];\\n            }\\n        }\\n        if(count==0){\\n            return 0;\\n        }\\n        return sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count=0;\\n        int sum=0;\\n        int avg=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                count++;\\n               sum+=nums[i];\\n            }\\n        }\\n        if(count==0){\\n            return 0;\\n        }\\n        return sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3946462,
                "title": "average-value-of-even-numbers-that-are-divisible-by-three-in-java",
                "content": "\\n# Complexity\\n- Time complexity:\\nO(n)\\n- Space complexity:\\nO(1)\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum=0,count=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%6==0)\\n            {\\n                sum+=nums[i];count++;\\n            }\\n        }\\n        if(count!=0)\\n        return sum/count;\\n        else\\n        return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum=0,count=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%6==0)\\n            {\\n                sum+=nums[i];count++;\\n            }\\n        }\\n        if(count!=0)\\n        return sum/count;\\n        else\\n        return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3939833,
                "title": "simple-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int s=0;\\n        int c=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0 and nums[i]%3==0)\\n            {\\n                c++;\\n                s+=nums[i];\\n            }\\n        }\\n        if(c==0)\\n        return 0;\\n        return s/c;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int s=0;\\n        int c=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0 and nums[i]%3==0)\\n            {\\n                c++;\\n                s+=nums[i];\\n            }\\n        }\\n        if(c==0)\\n        return 0;\\n        return s/c;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3920077,
                "title": "o-n",
                "content": "# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        count = 0\\n        sm = 0\\n        for n in nums:\\n            if n%2==0 and n%3==0:\\n                count += 1\\n                sm += n\\n        if count==0:\\n            return 0\\n        return sm//count\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        count = 0\\n        sm = 0\\n        for n in nums:\\n            if n%2==0 and n%3==0:\\n                count += 1\\n                sm += n\\n        if count==0:\\n            return 0\\n        return sm//count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3909642,
                "title": "java-solution-with-explanation",
                "content": "Even number (n % 2 == 0) and Divisible by Three (n % 3 == 0) --> we are actually finding numbers which can be divided by 6 (n % 6 == 0)\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int cnt = 0;\\n        for (int num: nums) {\\n            if (num % 6 == 0) {\\n                cnt++;\\n                sum += num; \\n            }\\n        }\\n        return cnt == 0 ? 0 : (sum / cnt);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int cnt = 0;\\n        for (int num: nums) {\\n            if (num % 6 == 0) {\\n                cnt++;\\n                sum += num; \\n            }\\n        }\\n        return cnt == 0 ? 0 : (sum / cnt);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3906636,
                "title": "easy-solution-5-lines",
                "content": "# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        c = s = 0\\n        for num in nums:\\n            if not num % 2 and not num % 3:\\n                c, s = c + 1, s + num\\n        return s // c if c else 0\\n```\\n\\nPlease let me know if any improvements can be made.\\n\\nThanks",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        c = s = 0\\n        for num in nums:\\n            if not num % 2 and not num % 3:\\n                c, s = c + 1, s + num\\n        return s // c if c else 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3900469,
                "title": "easy-solution-swift",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    func averageValue(_ nums: [Int]) -> Int {\\n        let filtered = nums.filter {  $0.isMultiple(of: 2) && $0.isMultiple(of: 3) }\\n        return !filtered.isEmpty ? filtered.reduce(0, +) / filtered.count : 0\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func averageValue(_ nums: [Int]) -> Int {\\n        let filtered = nums.filter {  $0.isMultiple(of: 2) && $0.isMultiple(of: 3) }\\n        return !filtered.isEmpty ? filtered.reduce(0, +) / filtered.count : 0\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3898428,
                "title": "faster-then-81-29-python-online-submissions",
                "content": "class Solution:\\n\\n    def averageValue(self, nums: List[int]) -> int:\\n        l1=[]\\n        sum=0\\n        for i in range(0,len(nums)):\\n            if nums[i]%2==0 and nums[i]%3==0:\\n                l1.append(nums[i])\\n        if(len(l1)==0):\\n            return 0\\n        for i in range(0,len(l1)):\\n            sum=sum+l1[i]\\n        return sum//len(l1)",
                "solutionTags": [
                    "Python"
                ],
                "code": "class Solution:\\n\\n    def averageValue(self, nums: List[int]) -> int:\\n        l1=[]\\n        sum=0\\n        for i in range(0,len(nums)):\\n            if nums[i]%2==0 and nums[i]%3==0:\\n                l1.append(nums[i])\\n        if(len(l1)==0):\\n            return 0\\n        for i in range(0,len(l1)):\\n            sum=sum+l1[i]\\n        return sum//len(l1)",
                "codeTag": "Java"
            },
            {
                "id": 3894989,
                "title": "it-will-be-norm",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public int AverageValue(int[] nums) {\\n         int avg = 0;\\n            int sany = 0;\\n            for (int i = 0;i<nums.Length;i++)\\n            {\\n                if (nums[i] % 2 == 0 && nums[i] % 3 == 0)\\n                {       \\n                    avg += nums[i];\\n                    sany++;\\n                }\\n            }\\n            return sany >0 ?  avg / sany : 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int AverageValue(int[] nums) {\\n         int avg = 0;\\n            int sany = 0;\\n            for (int i = 0;i<nums.Length;i++)\\n            {\\n                if (nums[i] % 2 == 0 && nums[i] % 3 == 0)\\n                {       \\n                    avg += nums[i];\\n                    sany++;\\n                }\\n            }\\n            return sany >0 ?  avg / sany : 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3892623,
                "title": "easy-dart-solution",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nCreate a new list that satisfies the parameters, get average of that list if it contains any elements if not return 0. \\n\\n# Code\\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      List<int> x = [];\\n      nums.forEach((val) {\\n          if(val % 2 == 0 && val % 3 == 0) {\\n              x.add(val);\\n          }\\n      });\\n      return getAvg(x);\\n  }\\n\\n  int getAvg(List<int> nums) {\\n      int total = nums.length;\\n      int sum = 0;\\n      for(int val in nums) {\\n          sum += val;\\n      }\\n      if(total == 0) {\\n          return 0;\\n      }\\n      return sum ~/ total;\\n  }\\n}\\n        \\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      List<int> x = [];\\n      nums.forEach((val) {\\n          if(val % 2 == 0 && val % 3 == 0) {\\n              x.add(val);\\n          }\\n      });\\n      return getAvg(x);\\n  }\\n\\n  int getAvg(List<int> nums) {\\n      int total = nums.length;\\n      int sum = 0;\\n      for(int val in nums) {\\n          sum += val;\\n      }\\n      if(total == 0) {\\n          return 0;\\n      }\\n      return sum ~/ total;\\n  }\\n}\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3891666,
                "title": "c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0,count=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                sum=sum+nums[i];\\n                count++;\\n            }\\n        }\\n        if(sum==0)\\n        {\\n            return 0;\\n        }\\n     return sum/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0,count=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                sum=sum+nums[i];\\n                count++;\\n            }\\n        }\\n        if(sum==0)\\n        {\\n            return 0;\\n        }\\n     return sum/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3887481,
                "title": "easy-and-100-efficiant-solution-in-cpp",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n=nums.size();\\n        int ans=0;\\n        int count=0;\\n        for(int i=0; i<n; i++)\\n        {\\n            if(nums[i]%3==0 && nums[i]%2==0)\\n            {\\n                ans+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0)\\n        {\\n            return 0;\\n        }\\n        return ans/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n=nums.size();\\n        int ans=0;\\n        int count=0;\\n        for(int i=0; i<n; i++)\\n        {\\n            if(nums[i]%3==0 && nums[i]%2==0)\\n            {\\n                ans+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count==0)\\n        {\\n            return 0;\\n        }\\n        return ans/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3880676,
                "title": "java-fastest-solution",
                "content": "\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n = nums.length;\\n        int sum = 0, count = 0;\\n\\n        for(int i = 0; i < n; i++)\\n            if(nums[i] % 6 == 0){\\n                count ++;\\n                sum += nums[i];\\n            }\\n        \\n        if(count == 0) return 0; \\n        return sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n = nums.length;\\n        int sum = 0, count = 0;\\n\\n        for(int i = 0; i < n; i++)\\n            if(nums[i] % 6 == 0){\\n                count ++;\\n                sum += nums[i];\\n            }\\n        \\n        if(count == 0) return 0; \\n        return sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3877471,
                "title": "easy-solution-python",
                "content": "\\n\\n# Code\\n```\\nclass Solution(object):\\n    def averageValue(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        c=0\\n        sum=0\\n        for i in nums:\\n            if i%2==0 and i%3==0:\\n                sum+=i\\n                c+=1\\n        if sum==0:\\n            return 0\\n        return sum//c\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def averageValue(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        c=0\\n        sum=0\\n        for i in nums:\\n            if i%2==0 and i%3==0:\\n                sum+=i\\n                c+=1\\n        if sum==0:\\n            return 0\\n        return sum//c\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3864627,
                "title": "java-0ms-beats-100-00",
                "content": "Time: O(n)\\n\\nSpace: O(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n\\n        int sum = 0;\\n        int count = 0;\\n\\n        for (int n : nums) {\\n            if (n % 6 == 0) {\\n                sum += n;\\n                ++count;\\n            }\\n        }\\n\\n        return count > 0 ? sum / count : 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n\\n        int sum = 0;\\n        int count = 0;\\n\\n        for (int n : nums) {\\n            if (n % 6 == 0) {\\n                sum += n;\\n                ++count;\\n            }\\n        }\\n\\n        return count > 0 ? sum / count : 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3853197,
                "title": "best-solution-in-python",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        sum=0\\n        count=0\\n        for i in range(len(nums)):\\n             if nums[i]%6==0:\\n                 sum=sum+nums[i]\\n                 count=count+1\\n        if count>0:\\n            return sum//count\\n        else:\\n            return 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        sum=0\\n        count=0\\n        for i in range(len(nums)):\\n             if nums[i]%6==0:\\n                 sum=sum+nums[i]\\n                 count=count+1\\n        if count>0:\\n            return sum//count\\n        else:\\n            return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3845347,
                "title": "swift-two-liner-o-n-time-o-1-space",
                "content": "# Code\\n```\\nclass Solution {\\n    func averageValue(_ nums: [Int]) -> Int {\\n        let (sum, count) = nums.reduce((0,0)) { $1 % 6 == 0 ? ($0.0 + $1, $0.1 + 1) : $0 }\\n        return count > 0 ? sum / count : 0\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func averageValue(_ nums: [Int]) -> Int {\\n        let (sum, count) = nums.reduce((0,0)) { $1 % 6 == 0 ? ($0.0 + $1, $0.1 + 1) : $0 }\\n        return count > 0 ? sum / count : 0\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3841501,
                "title": "simple-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum=0,c=0,n=nums.length;\\n        for(int i=0;i<n;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum+=nums[i];\\n                c++;\\n            }\\n        }\\n        if(c!=0)return sum/c;\\n        else return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum=0,c=0,n=nums.length;\\n        for(int i=0;i<n;i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum+=nums[i];\\n                c++;\\n            }\\n        }\\n        if(c!=0)return sum/c;\\n        else return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3841499,
                "title": "easy-java-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0;\\n        int a=0;\\n        for(int i=0;i<nums.length;i++){\\n         if((nums[i]%2==0)&&(nums[i]%3==0)){\\n         count++;\\n          a+=nums[i];\\n         }\\n        }\\n        if(count==0)return 0;\\n        else return a/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0;\\n        int a=0;\\n        for(int i=0;i<nums.length;i++){\\n         if((nums[i]%2==0)&&(nums[i]%3==0)){\\n         count++;\\n          a+=nums[i];\\n         }\\n        }\\n        if(count==0)return 0;\\n        else return a/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3841498,
                "title": "easy-java-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0;\\n        int a=0;\\n        for(int i=0;i<nums.length;i++){\\n         if((nums[i]%2==0)&&(nums[i]%3==0)){\\n         count++;\\n          a+=nums[i];\\n         }\\n        }\\n        if(count==0)return 0;\\n        else return a/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count =0;\\n        int a=0;\\n        for(int i=0;i<nums.length;i++){\\n         if((nums[i]%2==0)&&(nums[i]%3==0)){\\n         count++;\\n          a+=nums[i];\\n         }\\n        }\\n        if(count==0)return 0;\\n        else return a/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3837527,
                "title": "iterative-approach",
                "content": "# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s = 0\\n        c = 0\\n        for i in nums:\\n            if i % 6 == 0:\\n                s += i\\n                c += 1\\n        if s > 0:\\n            return s // c\\n        return 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        s = 0\\n        c = 0\\n        for i in nums:\\n            if i % 6 == 0:\\n                s += i\\n                c += 1\\n        if s > 0:\\n            return s // c\\n        return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3832227,
                "title": "beats-100-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n- O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        sumUp = 0\\n        arr = []\\n        for even in nums:\\n            if even % 2 == 0 and even % 3 == 0:\\n                arr.append(even)\\n        if not arr:\\n            return 0\\n        return sum(arr) // len(arr)\\n\\n```",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        sumUp = 0\\n        arr = []\\n        for even in nums:\\n            if even % 2 == 0 and even % 3 == 0:\\n                arr.append(even)\\n        if not arr:\\n            return 0\\n        return sum(arr) // len(arr)\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3822672,
                "title": "java-beats-100-easy-solution",
                "content": "# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int ans = 0,count = 0;\\n        for(int i = 0;i < nums.length;i++)\\n            if(nums[i]%6 == 0){\\n                ans +=  nums[i];\\n                count++;\\n            }\\n        if(count == 0)\\n            return 0;\\n        return ans/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int ans = 0,count = 0;\\n        for(int i = 0;i < nums.length;i++)\\n            if(nums[i]%6 == 0){\\n                ans +=  nums[i];\\n                count++;\\n            }\\n        if(count == 0)\\n            return 0;\\n        return ans/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3817677,
                "title": "easy-solution-in-c",
                "content": "# Intuition\\n\\n\\n# Approach\\n\\n\\n# Complexity\\n- Time complexity:\\nO(N)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int avg=0;\\n        int count=0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%2==0  && nums[i]%3==0){\\n                avg+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count!=0)\\n        return avg/count;\\n        else return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int avg=0;\\n        int count=0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%2==0  && nums[i]%3==0){\\n                avg+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count!=0)\\n        return avg/count;\\n        else return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3814638,
                "title": "c-easy-solution",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0;\\n        int avgSum = 0;\\n        int cnt = 0;\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum += nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(cnt!=0){\\n            avgSum = sum/cnt;\\n        }\\n        else{\\n            avgSum = sum;\\n        }\\n        return avgSum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0;\\n        int avgSum = 0;\\n        int cnt = 0;\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum += nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(cnt!=0){\\n            avgSum = sum/cnt;\\n        }\\n        else{\\n            avgSum = sum;\\n        }\\n        return avgSum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3808136,
                "title": "average-value-javascript-remainder-operator",
                "content": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    result = 0\\n    count = 0\\n\\n    for (num of nums) {\\n        if (num % 6 == 0) {\\n            result += num\\n            count ++\\n        }\\n    }\\n\\n    return count == 0 ? 0 : Math.floor(result / count)\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    result = 0\\n    count = 0\\n\\n    for (num of nums) {\\n        if (num % 6 == 0) {\\n            result += num\\n            count ++\\n        }\\n    }\\n\\n    return count == 0 ? 0 : Math.floor(result / count)\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3798086,
                "title": "3-line-simple-py-soln-beats-93",
                "content": "init list arr in which every elem % 3 and % 2 == 0\\nthen if no such elems return 0 else sum(arr) // len(arr)\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        arr = [x for x in nums if x % 3 == 0 and x % 2 == 0]\\n        if arr == []: return 0\\n        return sum(arr) // len(arr)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        arr = [x for x in nums if x % 3 == 0 and x % 2 == 0]\\n        if arr == []: return 0\\n        return sum(arr) // len(arr)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3779591,
                "title": "soln",
                "content": "# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    let count = 0;\\n    let sum = 0;\\n    nums.forEach(num => {\\n        if(num % 2 === 0 && num % 3 === 0) {\\n            sum += num;\\n            count++;\\n        }\\n    });\\n    return count === 0 ? 0 : Math.floor(sum / count);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    let count = 0;\\n    let sum = 0;\\n    nums.forEach(num => {\\n        if(num % 2 === 0 && num % 3 === 0) {\\n            sum += num;\\n            count++;\\n        }\\n    });\\n    return count === 0 ? 0 : Math.floor(sum / count);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3772260,
                "title": "easiest-code",
                "content": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>&n){\\n        int sum=0 , c=0;\\n        for(auto i:n){\\n            if(!(i&1) && !(i%3)){ //we can use this as well for modulo\\n                sum+=i;\\n                c++;\\n            }\\n        }\\n        if(c==0){\\n            return 0;\\n        }\\n        return round(sum/c); //round to nearest integer\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>&n){\\n        int sum=0 , c=0;\\n        for(auto i:n){\\n            if(!(i&1) && !(i%3)){ //we can use this as well for modulo\\n                sum+=i;\\n                c++;\\n            }\\n        }\\n        if(c==0){\\n            return 0;\\n        }\\n        return round(sum/c); //round to nearest integer\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3772244,
                "title": "simple-solution-in-java-script",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n     let arr = []\\n    for(let  i= 0 ;i <nums.length;i++){\\n        if(nums[i]%2===0&&nums[i]%3===0){\\n           arr.push(nums[i])\\n        }\\n    }\\n  let sum= arr.reduce((accumalator,currentvalue)=>{\\n      return accumalator+currentvalue\\n   },0)\\n   if(arr.length===0){\\n      return 0\\n   }else{\\n   return Math.floor(sum/arr.length)\\n   }\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n     let arr = []\\n    for(let  i= 0 ;i <nums.length;i++){\\n        if(nums[i]%2===0&&nums[i]%3===0){\\n           arr.push(nums[i])\\n        }\\n    }\\n  let sum= arr.reduce((accumalator,currentvalue)=>{\\n      return accumalator+currentvalue\\n   },0)\\n   if(arr.length===0){\\n      return 0\\n   }else{\\n   return Math.floor(sum/arr.length)\\n   }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3771880,
                "title": "simple-and-easy-to-understand-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count=0;\\n        int sum=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                sum=sum+nums[i];\\n                count++;\\n            }\\n        }\\n        if(sum==0)\\n        {\\n            return 0;\\n        }\\n        return sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int count=0;\\n        int sum=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n                sum=sum+nums[i];\\n                count++;\\n            }\\n        }\\n        if(sum==0)\\n        {\\n            return 0;\\n        }\\n        return sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3768328,
                "title": "python-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def averageValue(self, nums):\\n        a=[]\\n        for i in range(len(nums)):\\n            if nums[i]%6==0 :\\n                a.append(nums[i])\\n        if len(a)==0:\\n            return 0\\n        else:\\n            return sum(a)/len(a)\\n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def averageValue(self, nums):\\n        a=[]\\n        for i in range(len(nums)):\\n            if nums[i]%6==0 :\\n                a.append(nums[i])\\n        if len(a)==0:\\n            return 0\\n        else:\\n            return sum(a)/len(a)\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3768032,
                "title": "efficient-average-calculation-for-even-numbers-divisible-by-3",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n    List<int> filteredNums = nums.where((number) => number.isEven && number % 3 == 0).toList();\\n    return filteredNums.isNotEmpty ? filteredNums.reduce((a, b) => a + b) ~/ filteredNums.length : 0;\\n  }\\n}\\n\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n    List<int> filteredNums = nums.where((number) => number.isEven && number % 3 == 0).toList();\\n    return filteredNums.isNotEmpty ? filteredNums.reduce((a, b) => a + b) ~/ filteredNums.length : 0;\\n  }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3767957,
                "title": "easy-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->O(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->O(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        \\n        int sum = 0;\\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            // we have to find the number which is divisible by 2 and 3, \\n            // which is same as finding the number divisible by 6 :\\n            if(nums[i]%6 == 0){\\n                sum += nums[i];\\n                 count++;\\n            }\\n        }\\n       if(count == 0){\\n           return 0;\\n       }\\n       return sum/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        \\n        int sum = 0;\\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            // we have to find the number which is divisible by 2 and 3, \\n            // which is same as finding the number divisible by 6 :\\n            if(nums[i]%6 == 0){\\n                sum += nums[i];\\n                 count++;\\n            }\\n        }\\n       if(count == 0){\\n           return 0;\\n       }\\n       return sum/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3766912,
                "title": "go-simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunc averageValue(nums []int) int {\\n    var temp int\\n    flag:=0\\n    for _,value:= range(nums){\\n        if value%2==0 && value%3==0{\\n            temp = temp + value\\n            flag++\\n        }\\n    }\\n    if flag == 0{\\n        return 0\\n    } else{\\n        return temp/flag\\n    }\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc averageValue(nums []int) int {\\n    var temp int\\n    flag:=0\\n    for _,value:= range(nums){\\n        if value%2==0 && value%3==0{\\n            temp = temp + value\\n            flag++\\n        }\\n    }\\n    if flag == 0{\\n        return 0\\n    } else{\\n        return temp/flag\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3766781,
                "title": "average-of-even-numbers-in-an-integer-array-which-is-divisible-by-3",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nint averageValue(int* nums, int numsSize){\\n\\tint sum=0;\\n\\tint  evencount=0;\\n\\tfor(int i=0;i<numsSize;i++){\\n\\t\\tif(nums[i]%2==0 && nums[i]%3==0){\\n\\t\\t\\tevencount++;\\n\\t\\t\\tsum=sum+nums[i];\\n\\t\\t}\\n\\t}\\n if(sum>0){\\n\\t float avarage=sum/evencount;\\n\\t return floor(avarage);\\n }else{\\n\\t return 0;\\n }\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint averageValue(int* nums, int numsSize){\\n\\tint sum=0;\\n\\tint  evencount=0;\\n\\tfor(int i=0;i<numsSize;i++){\\n\\t\\tif(nums[i]%2==0 && nums[i]%3==0){\\n\\t\\t\\tevencount++;\\n\\t\\t\\tsum=sum+nums[i];\\n\\t\\t}\\n\\t}\\n if(sum>0){\\n\\t float avarage=sum/evencount;\\n\\t return floor(avarage);\\n }else{\\n\\t return 0;\\n }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3766733,
                "title": "dart-simple-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      int count = 0;\\n      int sum = 0;\\n      for(int i = 0; i<nums.length; i++){\\n          if(nums[i]%2==0 && nums[i]%3==0){\\n              sum += nums[i];\\n              count++;\\n          }\\n      }\\n      if(count >0){\\n          return sum ~/ count;\\n      }else{\\n          return 0;\\n      }\\n      \\n  }\\n}\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      int count = 0;\\n      int sum = 0;\\n      for(int i = 0; i<nums.length; i++){\\n          if(nums[i]%2==0 && nums[i]%3==0){\\n              sum += nums[i];\\n              count++;\\n          }\\n      }\\n      if(count >0){\\n          return sum ~/ count;\\n      }else{\\n          return 0;\\n      }\\n      \\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3766725,
                "title": "go-easy",
                "content": "\\n\\n# Code\\n```\\nfunc averageValue(nums []int) int {\\n    count := 0\\n    sum := 0\\n    avg := 0\\n    for i := 0; i < len(nums); i++ {\\n        if nums[i]%2 == 0 && nums[i]%3 == 0 {\\n            count++\\n            sum += nums[i]\\n        }\\n    }\\n    if count==0{\\n        return 0\\n    }\\n    avg = sum / count\\n    return avg\\n}\\n\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc averageValue(nums []int) int {\\n    count := 0\\n    sum := 0\\n    avg := 0\\n    for i := 0; i < len(nums); i++ {\\n        if nums[i]%2 == 0 && nums[i]%3 == 0 {\\n            count++\\n            sum += nums[i]\\n        }\\n    }\\n    if count==0{\\n        return 0\\n    }\\n    avg = sum / count\\n    return avg\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3766211,
                "title": "100-easy-to-understand-simple-clean",
                "content": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        true = []\\n        total = 0\\n        for num in nums:\\n            if num%2 == 0 and num%3 == 0:\\n                true.append(num)\\n        for num in true:\\n            total += num\\n        if len(true) == 0: return 0\\n        total /= len(true)\\n        return int(total)\\n```\\nIf you have any questions or comments about my solution, please make sure to leave a comment in the section below my code and I will get back to you ASAP to the best of my ability. :) Thanks!",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        true = []\\n        total = 0\\n        for num in nums:\\n            if num%2 == 0 and num%3 == 0:\\n                true.append(num)\\n        for num in true:\\n            total += num\\n        if len(true) == 0: return 0\\n        total /= len(true)\\n        return int(total)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3766028,
                "title": "easy-c-solution-beats-73-runtime-84-memory",
                "content": "# Complexity\\n- Time complexity:\\nO(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0;\\n        int i = 0;\\n        for(int num : nums){\\n            if(num % 6 == 0){\\n                sum += num;\\n                i++;\\n            }\\n        }\\n\\n        if(i == 0){\\n            return 0;\\n        }\\n\\n        return sum / i;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum = 0;\\n        int i = 0;\\n        for(int num : nums){\\n            if(num % 6 == 0){\\n                sum += num;\\n                i++;\\n            }\\n        }\\n\\n        if(i == 0){\\n            return 0;\\n        }\\n\\n        return sum / i;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3765331,
                "title": "easy-solution-in-dart",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      int count = 0;\\n      int sum = 0;\\n    \\n      for(int i=0;i< nums.length;i++){\\n          if(nums[i]%3==0 && nums[i]%2==0){\\n              sum=sum+nums[i];\\n              count++;\\n          }\\n      }\\n      if(sum == 0){\\n          return 0;\\n      }\\n     int average = sum~/count;\\n      return average;\\n\\n  }\\n}\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n      int count = 0;\\n      int sum = 0;\\n    \\n      for(int i=0;i< nums.length;i++){\\n          if(nums[i]%3==0 && nums[i]%2==0){\\n              sum=sum+nums[i];\\n              count++;\\n          }\\n      }\\n      if(sum == 0){\\n          return 0;\\n      }\\n     int average = sum~/count;\\n      return average;\\n\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3765196,
                "title": "clearcut-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n\\n\\n      int count=0;\\n      int sum=0;\\n\\n      for(int i=0;i<nums.length;i++){\\n\\n\\n          if(nums[i]%6==0){\\n\\n              count++;\\n              sum+=nums[i];\\n          }\\n      }\\n\\n      if(sum==0){\\n          return 0;\\n      }\\n      return sum~/count;\\n  }\\n}\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  int averageValue(List<int> nums) {\\n\\n\\n      int count=0;\\n      int sum=0;\\n\\n      for(int i=0;i<nums.length;i++){\\n\\n\\n          if(nums[i]%6==0){\\n\\n              count++;\\n              sum+=nums[i];\\n          }\\n      }\\n\\n      if(sum==0){\\n          return 0;\\n      }\\n      return sum~/count;\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3759107,
                "title": "java-simple-logic-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum=0,c=0,temp=0;\\n        for(int i=0;i<nums.length;i++){\\n           if(nums[i]%2==0 && nums[i]%3==0){\\n               sum+=nums[i];\\n               c++;\\n           }\\n        }\\n        return c==0?0:sum/c;\\n        \\n    }\\n}\\n```\\n![image.png](https://assets.leetcode.com/users/images/25d9fdaf-7edd-49e0-b5e9-5272b63236da_1689247332.6925225.png)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum=0,c=0,temp=0;\\n        for(int i=0;i<nums.length;i++){\\n           if(nums[i]%2==0 && nums[i]%3==0){\\n               sum+=nums[i];\\n               c++;\\n           }\\n        }\\n        return c==0?0:sum/c;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3750237,
                "title": "very-easy-c-solution",
                "content": "# Intuition\\n-There is a trick which i used to solve this be take the modulo of each number by 6 if(num[i]%6==0) it means the number is also even and divisible by 3. \\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n).\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1).\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        // this  variable carry the sum of all numbers which are divisible by 6 \\n        int evenNumber = 0;\\n        //this variable is used to count numbers which are divisible by 6 so we can find average\\n        int countLength = 0;\\n          // run a loop from start to end\\n        for(int i=0;i<nums.size();i++){\\n        // now check if number is divisible by 6 if yes then\\n            if(nums[i]%6==0){\\n        // add the number in evenNumber abd increment the countLength\\n                evenNumber+=nums[i];\\n                countLength++;\\n            }\\n        }\\n        // if evenNumber != 0\\n        if(evenNumber!=0)\\n        // then we find the average\\n        return evenNumber/countLength;\\n        // else return 0\\n        else\\n        return 0;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        // this  variable carry the sum of all numbers which are divisible by 6 \\n        int evenNumber = 0;\\n        //this variable is used to count numbers which are divisible by 6 so we can find average\\n        int countLength = 0;\\n          // run a loop from start to end\\n        for(int i=0;i<nums.size();i++){\\n        // now check if number is divisible by 6 if yes then\\n            if(nums[i]%6==0){\\n        // add the number in evenNumber abd increment the countLength\\n                evenNumber+=nums[i];\\n                countLength++;\\n            }\\n        }\\n        // if evenNumber != 0\\n        if(evenNumber!=0)\\n        // then we find the average\\n        return evenNumber/countLength;\\n        // else return 0\\n        else\\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3738915,
                "title": "easy-java-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int i,count=0,sum=0;\\n        for(i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count>=1)\\n            return sum/count;\\n        else\\n            return 0;    \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int i,count=0,sum=0;\\n        for(i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum+=nums[i];\\n                count++;\\n            }\\n        }\\n        if(count>=1)\\n            return sum/count;\\n        else\\n            return 0;    \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3736929,
                "title": "simplest-verified-c-solution",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        \\n        int result =0,count=0; ;\\n        for(int i=0;i<nums.size();i++){\\n               \\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                count++;\\n                result =  result + nums[i];\\n            }\\n        }\\n        if(count==0){\\n            return 0 ;\\n        }\\n         return result/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        \\n        int result =0,count=0; ;\\n        for(int i=0;i<nums.size();i++){\\n               \\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                count++;\\n                result =  result + nums[i];\\n            }\\n        }\\n        if(count==0){\\n            return 0 ;\\n        }\\n         return result/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3731454,
                "title": "easiest-approach-using-basic-math-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0;\\n        int cnt=0;\\n        int result=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if((nums[i]%2==0) && (nums[i]%3==0))\\n            {\\n                sum+=nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(cnt==0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            result=sum/cnt;\\n        }\\n        return result;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n=nums.size();\\n        int sum=0;\\n        int cnt=0;\\n        int result=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if((nums[i]%2==0) && (nums[i]%3==0))\\n            {\\n                sum+=nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(cnt==0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            result=sum/cnt;\\n        }\\n        return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3729303,
                "title": "java-easy-solution-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int cnt=0,sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%2==0&&nums[i]%3==0){\\n                sum+=nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(cnt==0)return 0;\\n        return sum/cnt;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int cnt=0,sum=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]%2==0&&nums[i]%3==0){\\n                sum+=nums[i];\\n                cnt++;\\n            }\\n        }\\n        if(cnt==0)return 0;\\n        return sum/cnt;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3727184,
                "title": "implemented-using-js-loop",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    let result = 0, count = 0\\n    \\n    nums.forEach(num => {\\n        if(num % 2 === 0 && num  % 3===0) {\\n            result +=  num\\n            count++\\n        }\\n    })\\n    return result ? Math.floor(result/count) : 0\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function(nums) {\\n    let result = 0, count = 0\\n    \\n    nums.forEach(num => {\\n        if(num % 2 === 0 && num  % 3===0) {\\n            result +=  num\\n            count++\\n        }\\n    })\\n    return result ? Math.floor(result/count) : 0\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3720034,
                "title": "2455-average-value-of-even-numbers-that-are-divisible-by-three",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function (nums) {\\n  let no = 0;\\n  let dividby = 0;\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] % 2 == 0) {\\n      if (nums[i] % 3 == 0) {\\n        no += nums[i];\\n        dividby++;\\n      }\\n    }\\n  }\\n  return no ? Math.floor(no / dividby) : 0;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar averageValue = function (nums) {\\n  let no = 0;\\n  let dividby = 0;\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] % 2 == 0) {\\n      if (nums[i] % 3 == 0) {\\n        no += nums[i];\\n        dividby++;\\n      }\\n    }\\n  }\\n  return no ? Math.floor(no / dividby) : 0;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3719123,
                "title": "average-of-even-numbers-divided-by-3",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%2==0&&nums[i]%3==0)\\n            { sum = sum+nums[i];\\n            count++;}\\n        }\\n        if(count == 0)\\n        return 0;\\n        else\\n        return sum/count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int sum = 0;\\n        int count = 0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]%2==0&&nums[i]%3==0)\\n            { sum = sum+nums[i];\\n            count++;}\\n        }\\n        if(count == 0)\\n        return 0;\\n        else\\n        return sum/count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3716845,
                "title": "c-magic",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        long ans=0;\\n        int k=1;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                ans=ans+nums[i];\\n                k++;\\n            }\\n        }\\n        if(k==1)\\n        return 0;\\n        else\\n        ans=ans/(k-1);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        long ans=0;\\n        int k=1;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                ans=ans+nums[i];\\n                k++;\\n            }\\n        }\\n        if(k==1)\\n        return 0;\\n        else\\n        ans=ans/(k-1);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3716376,
                "title": "c-solution-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:  O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0,cnt=0;\\n        for(auto it:nums)\\n        {\\n            if(it%6==0)\\n            {\\n               sum+=it;\\n               cnt++;\\n            }\\n        }\\n        if(cnt==0)\\n        {\\n            return 0;\\n        }\\n        return sum/cnt;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0,cnt=0;\\n        for(auto it:nums)\\n        {\\n            if(it%6==0)\\n            {\\n               sum+=it;\\n               cnt++;\\n            }\\n        }\\n        if(cnt==0)\\n        {\\n            return 0;\\n        }\\n        return sum/cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3713180,
                "title": "beginner-freindly-c",
                "content": "\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n = nums.size();\\n        int m = 0, sum =0;\\n\\n        for(int i=0; i<n; i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                m++;\\n            }\\n        }\\n        \\n        return m==0?0:sum/m;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int n = nums.size();\\n        int m = 0, sum =0;\\n\\n        for(int i=0; i<n; i++){\\n            if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                m++;\\n            }\\n        }\\n        \\n        return m==0?0:sum/m;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3709080,
                "title": "python3-solution-by-l-o",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nCheck divisibility. \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nCheck whether each item could be fully divided by $$6$$. \\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        total = 0; \\n        count = 0\\n        for i in nums: \\n            if i % 6 == 0: \\n                total = total + i\\n                count = count + 1\\n\\n        if count == 0: \\n            return 0; \\n        else:\\n            return floor(total/count); \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        total = 0; \\n        count = 0\\n        for i in nums: \\n            if i % 6 == 0: \\n                total = total + i\\n                count = count + 1\\n\\n        if count == 0: \\n            return 0; \\n        else:\\n            return floor(total/count); \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3704858,
                "title": "simplest-approach-c-easy-to-understand-beginner-friendly-please-thumbs-up",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0,count=0;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n               sum+=nums[i];   \\n               count++;\\n            }\\n        }\\n        if (count == 0) {\\n        return 0;\\n        }\\n        return sum/count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int averageValue(vector<int>& nums) {\\n        int sum=0,count=0;\\n        int n=nums.size();\\n        for(int i=0;i<n;i++)\\n        {\\n            if(nums[i]%2==0 && nums[i]%3==0)\\n            {\\n               sum+=nums[i];   \\n               count++;\\n            }\\n        }\\n        if (count == 0) {\\n        return 0;\\n        }\\n        return sum/count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3703505,
                "title": "easy-to-understand-beats-80-python",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        new = []\\n\\n        for i in nums:\\n            if i % 2 == 0 and i % 3 == 0:\\n                new.append(i)\\n\\n        if len(new) > 0:\\n            return int(sum(new) / len(new))\\n        else:\\n            return 0\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        new = []\\n\\n        for i in nums:\\n            if i % 2 == 0 and i % 3 == 0:\\n                new.append(i)\\n\\n        if len(new) > 0:\\n            return int(sum(new) / len(new))\\n        else:\\n            return 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3697997,
                "title": "simple-dimple",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\ncoding monk!!!\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\ncheck the count is equal to zero or not ...\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n=nums.length;\\n        int sum=0;\\n        int c=0;\\n        for(int i=0; i<n;i++){\\n            if(nums[i]%3==0 && nums[i]%2==0){\\n                sum+=nums[i];\\n               \\n                c++;\\n              \\n            }\\n        }\\n        if(c==0){\\n            return sum/1;\\n        }\\n        else return sum/c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n        int n=nums.length;\\n        int sum=0;\\n        int c=0;\\n        for(int i=0; i<n;i++){\\n            if(nums[i]%3==0 && nums[i]%2==0){\\n                sum+=nums[i];\\n               \\n                c++;\\n              \\n            }\\n        }\\n        if(c==0){\\n            return sum/1;\\n        }\\n        else return sum/c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1777972,
                "content": [
                    {
                        "username": "tamizh007",
                        "content": "As u guys might be wondering the 15 is divisible by 3 but in example question it is not , that's because the number should not only divisible by 3 but also divisible by 2. thus there is a mistake in the question .check the number divisible by 3 and 2 and run your code once again\npls upvote if  u find it usefull to u"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Read the Question once again before running the code.!"
                    },
                    {
                        "username": "user0834zM",
                        "content": "I think there is an problem with the compiler. As my code is working fine on other online compilers but when it comes to this it shows an error for the simple testcase  as well. I think they better fix this problem related to compiler."
                    },
                    {
                        "username": "gabida",
                        "content": "The question changed to sum up only numbers that are devided  by 3.  \\nAnd there is problem with tests cases [4,4,9,10] should output 9 but it shows 0."
                    },
                    {
                        "username": "sathiroy9330",
                        "content": "simply divisible with 6 instead of 3 "
                    },
                    {
                        "username": "SaurabhAgarwal207",
                        "content": "No question is correct. I also thought same like you , but on reading question again i found we have to consider only even numbers which are divisible by 3. So we need to check for both divisible by 3 and 2. "
                    },
                    {
                        "username": "NithinModiboyana",
                        "content": "there is a mistake in question instead of 3 there must be 6 then it works perfectly \\nl=[i for i in nums if i%6==0]\\nreturn sum(l)//len(l) if l else 0"
                    },
                    {
                        "username": "Biswajit_sahoo",
                        "content": "my code is correct, giving expected result in another compiler but here it is showing divided by zero error.\\n\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n       int sum=0 ,count =0 ;\\n        for(int i=0; i< nums.length; i++)\\n        { \\n            if(nums[i] % 2==0 && nums[i] % 3 == 0)\\n            {\\n                System.out.println(nums[i]);\\n                sum +=nums[i];\\n                count = count+ 1;             \\n            }\\n        } \\n       return sum/count;    \\n}\\n}"
                    },
                    {
                        "username": "ChinuBunny",
                        "content": "[@naezy](/naezy)  check if(count!=0) return sum/count;\\nelse return 0;"
                    },
                    {
                        "username": "SurendraChakravarthula",
                        "content": "[@naezy](/naezy)  return count==0?0:sum/count; instead of returning sum/count(since when count=0, sum/count=0/0 which is an arithmetic error)"
                    },
                    {
                        "username": "naezy",
                        "content": "Hey ! I am getting same error, How did you resolved it ?"
                    },
                    {
                        "username": "mallikoti",
                        "content": "class Solution(object):\\n    def averageValue(self, nums):\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]       \\n                cout+=1\\n        if cout==1:\\n            return res\\n        else:\\n            res=res/cout   //here i got an error ZeroDivisionError\\n        return res\\n\\n                \\n"
                    },
                    {
                        "username": "qazFatNerd",
                        "content": "...\\nif cout  == 0: cout = 1\\nres=res/cout //here i got an error ZeroDivisionError\\n..."
                    },
                    {
                        "username": "shaktisahoo2000",
                        "content": "class Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]\\n                cout+=1\\n        if cout !=0:\\n            res=res/cout\\n                 \\n        return int(res)"
                    },
                    {
                        "username": "mallikoti",
                        "content": "how to handle  ZeroDivisionError  `your inline code...your inline code..."
                    },
                    {
                        "username": "IAMANAND07",
                        "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n          int sum =0;\\\\\\\\Initialize sum as 0\\n          int count =0;\\\\\\\\Initialize count of number which is even and divisible by 3\\n\\n\\n\\\\\\\\Iterate over a array to check every element in an array.\\n            for(int i=0;i<nums.length;i++){\\n              if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                count++;\\n              }\\n           }\\n\\\\\\\\Now we want to check for zero exception as we can get 0 as count  \\n        if(count>0){\\n            int average = sum/count; \\\\\\\\count the average\\n            return average;\\n        }\\n        return 0;\\\\\\\\If we get count as 0 we can easily return 0 as the answer\\n    }\\n}\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1950362,
                "content": [
                    {
                        "username": "tamizh007",
                        "content": "As u guys might be wondering the 15 is divisible by 3 but in example question it is not , that's because the number should not only divisible by 3 but also divisible by 2. thus there is a mistake in the question .check the number divisible by 3 and 2 and run your code once again\npls upvote if  u find it usefull to u"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Read the Question once again before running the code.!"
                    },
                    {
                        "username": "user0834zM",
                        "content": "I think there is an problem with the compiler. As my code is working fine on other online compilers but when it comes to this it shows an error for the simple testcase  as well. I think they better fix this problem related to compiler."
                    },
                    {
                        "username": "gabida",
                        "content": "The question changed to sum up only numbers that are devided  by 3.  \\nAnd there is problem with tests cases [4,4,9,10] should output 9 but it shows 0."
                    },
                    {
                        "username": "sathiroy9330",
                        "content": "simply divisible with 6 instead of 3 "
                    },
                    {
                        "username": "SaurabhAgarwal207",
                        "content": "No question is correct. I also thought same like you , but on reading question again i found we have to consider only even numbers which are divisible by 3. So we need to check for both divisible by 3 and 2. "
                    },
                    {
                        "username": "NithinModiboyana",
                        "content": "there is a mistake in question instead of 3 there must be 6 then it works perfectly \\nl=[i for i in nums if i%6==0]\\nreturn sum(l)//len(l) if l else 0"
                    },
                    {
                        "username": "Biswajit_sahoo",
                        "content": "my code is correct, giving expected result in another compiler but here it is showing divided by zero error.\\n\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n       int sum=0 ,count =0 ;\\n        for(int i=0; i< nums.length; i++)\\n        { \\n            if(nums[i] % 2==0 && nums[i] % 3 == 0)\\n            {\\n                System.out.println(nums[i]);\\n                sum +=nums[i];\\n                count = count+ 1;             \\n            }\\n        } \\n       return sum/count;    \\n}\\n}"
                    },
                    {
                        "username": "ChinuBunny",
                        "content": "[@naezy](/naezy)  check if(count!=0) return sum/count;\\nelse return 0;"
                    },
                    {
                        "username": "SurendraChakravarthula",
                        "content": "[@naezy](/naezy)  return count==0?0:sum/count; instead of returning sum/count(since when count=0, sum/count=0/0 which is an arithmetic error)"
                    },
                    {
                        "username": "naezy",
                        "content": "Hey ! I am getting same error, How did you resolved it ?"
                    },
                    {
                        "username": "mallikoti",
                        "content": "class Solution(object):\\n    def averageValue(self, nums):\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]       \\n                cout+=1\\n        if cout==1:\\n            return res\\n        else:\\n            res=res/cout   //here i got an error ZeroDivisionError\\n        return res\\n\\n                \\n"
                    },
                    {
                        "username": "qazFatNerd",
                        "content": "...\\nif cout  == 0: cout = 1\\nres=res/cout //here i got an error ZeroDivisionError\\n..."
                    },
                    {
                        "username": "shaktisahoo2000",
                        "content": "class Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]\\n                cout+=1\\n        if cout !=0:\\n            res=res/cout\\n                 \\n        return int(res)"
                    },
                    {
                        "username": "mallikoti",
                        "content": "how to handle  ZeroDivisionError  `your inline code...your inline code..."
                    },
                    {
                        "username": "IAMANAND07",
                        "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n          int sum =0;\\\\\\\\Initialize sum as 0\\n          int count =0;\\\\\\\\Initialize count of number which is even and divisible by 3\\n\\n\\n\\\\\\\\Iterate over a array to check every element in an array.\\n            for(int i=0;i<nums.length;i++){\\n              if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                count++;\\n              }\\n           }\\n\\\\\\\\Now we want to check for zero exception as we can get 0 as count  \\n        if(count>0){\\n            int average = sum/count; \\\\\\\\count the average\\n            return average;\\n        }\\n        return 0;\\\\\\\\If we get count as 0 we can easily return 0 as the answer\\n    }\\n}\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1711720,
                "content": [
                    {
                        "username": "tamizh007",
                        "content": "As u guys might be wondering the 15 is divisible by 3 but in example question it is not , that's because the number should not only divisible by 3 but also divisible by 2. thus there is a mistake in the question .check the number divisible by 3 and 2 and run your code once again\npls upvote if  u find it usefull to u"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Read the Question once again before running the code.!"
                    },
                    {
                        "username": "user0834zM",
                        "content": "I think there is an problem with the compiler. As my code is working fine on other online compilers but when it comes to this it shows an error for the simple testcase  as well. I think they better fix this problem related to compiler."
                    },
                    {
                        "username": "gabida",
                        "content": "The question changed to sum up only numbers that are devided  by 3.  \\nAnd there is problem with tests cases [4,4,9,10] should output 9 but it shows 0."
                    },
                    {
                        "username": "sathiroy9330",
                        "content": "simply divisible with 6 instead of 3 "
                    },
                    {
                        "username": "SaurabhAgarwal207",
                        "content": "No question is correct. I also thought same like you , but on reading question again i found we have to consider only even numbers which are divisible by 3. So we need to check for both divisible by 3 and 2. "
                    },
                    {
                        "username": "NithinModiboyana",
                        "content": "there is a mistake in question instead of 3 there must be 6 then it works perfectly \\nl=[i for i in nums if i%6==0]\\nreturn sum(l)//len(l) if l else 0"
                    },
                    {
                        "username": "Biswajit_sahoo",
                        "content": "my code is correct, giving expected result in another compiler but here it is showing divided by zero error.\\n\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n       int sum=0 ,count =0 ;\\n        for(int i=0; i< nums.length; i++)\\n        { \\n            if(nums[i] % 2==0 && nums[i] % 3 == 0)\\n            {\\n                System.out.println(nums[i]);\\n                sum +=nums[i];\\n                count = count+ 1;             \\n            }\\n        } \\n       return sum/count;    \\n}\\n}"
                    },
                    {
                        "username": "ChinuBunny",
                        "content": "[@naezy](/naezy)  check if(count!=0) return sum/count;\\nelse return 0;"
                    },
                    {
                        "username": "SurendraChakravarthula",
                        "content": "[@naezy](/naezy)  return count==0?0:sum/count; instead of returning sum/count(since when count=0, sum/count=0/0 which is an arithmetic error)"
                    },
                    {
                        "username": "naezy",
                        "content": "Hey ! I am getting same error, How did you resolved it ?"
                    },
                    {
                        "username": "mallikoti",
                        "content": "class Solution(object):\\n    def averageValue(self, nums):\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]       \\n                cout+=1\\n        if cout==1:\\n            return res\\n        else:\\n            res=res/cout   //here i got an error ZeroDivisionError\\n        return res\\n\\n                \\n"
                    },
                    {
                        "username": "qazFatNerd",
                        "content": "...\\nif cout  == 0: cout = 1\\nres=res/cout //here i got an error ZeroDivisionError\\n..."
                    },
                    {
                        "username": "shaktisahoo2000",
                        "content": "class Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]\\n                cout+=1\\n        if cout !=0:\\n            res=res/cout\\n                 \\n        return int(res)"
                    },
                    {
                        "username": "mallikoti",
                        "content": "how to handle  ZeroDivisionError  `your inline code...your inline code..."
                    },
                    {
                        "username": "IAMANAND07",
                        "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n          int sum =0;\\\\\\\\Initialize sum as 0\\n          int count =0;\\\\\\\\Initialize count of number which is even and divisible by 3\\n\\n\\n\\\\\\\\Iterate over a array to check every element in an array.\\n            for(int i=0;i<nums.length;i++){\\n              if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                count++;\\n              }\\n           }\\n\\\\\\\\Now we want to check for zero exception as we can get 0 as count  \\n        if(count>0){\\n            int average = sum/count; \\\\\\\\count the average\\n            return average;\\n        }\\n        return 0;\\\\\\\\If we get count as 0 we can easily return 0 as the answer\\n    }\\n}\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1703508,
                "content": [
                    {
                        "username": "tamizh007",
                        "content": "As u guys might be wondering the 15 is divisible by 3 but in example question it is not , that's because the number should not only divisible by 3 but also divisible by 2. thus there is a mistake in the question .check the number divisible by 3 and 2 and run your code once again\npls upvote if  u find it usefull to u"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Read the Question once again before running the code.!"
                    },
                    {
                        "username": "user0834zM",
                        "content": "I think there is an problem with the compiler. As my code is working fine on other online compilers but when it comes to this it shows an error for the simple testcase  as well. I think they better fix this problem related to compiler."
                    },
                    {
                        "username": "gabida",
                        "content": "The question changed to sum up only numbers that are devided  by 3.  \\nAnd there is problem with tests cases [4,4,9,10] should output 9 but it shows 0."
                    },
                    {
                        "username": "sathiroy9330",
                        "content": "simply divisible with 6 instead of 3 "
                    },
                    {
                        "username": "SaurabhAgarwal207",
                        "content": "No question is correct. I also thought same like you , but on reading question again i found we have to consider only even numbers which are divisible by 3. So we need to check for both divisible by 3 and 2. "
                    },
                    {
                        "username": "NithinModiboyana",
                        "content": "there is a mistake in question instead of 3 there must be 6 then it works perfectly \\nl=[i for i in nums if i%6==0]\\nreturn sum(l)//len(l) if l else 0"
                    },
                    {
                        "username": "Biswajit_sahoo",
                        "content": "my code is correct, giving expected result in another compiler but here it is showing divided by zero error.\\n\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n       int sum=0 ,count =0 ;\\n        for(int i=0; i< nums.length; i++)\\n        { \\n            if(nums[i] % 2==0 && nums[i] % 3 == 0)\\n            {\\n                System.out.println(nums[i]);\\n                sum +=nums[i];\\n                count = count+ 1;             \\n            }\\n        } \\n       return sum/count;    \\n}\\n}"
                    },
                    {
                        "username": "ChinuBunny",
                        "content": "[@naezy](/naezy)  check if(count!=0) return sum/count;\\nelse return 0;"
                    },
                    {
                        "username": "SurendraChakravarthula",
                        "content": "[@naezy](/naezy)  return count==0?0:sum/count; instead of returning sum/count(since when count=0, sum/count=0/0 which is an arithmetic error)"
                    },
                    {
                        "username": "naezy",
                        "content": "Hey ! I am getting same error, How did you resolved it ?"
                    },
                    {
                        "username": "mallikoti",
                        "content": "class Solution(object):\\n    def averageValue(self, nums):\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]       \\n                cout+=1\\n        if cout==1:\\n            return res\\n        else:\\n            res=res/cout   //here i got an error ZeroDivisionError\\n        return res\\n\\n                \\n"
                    },
                    {
                        "username": "qazFatNerd",
                        "content": "...\\nif cout  == 0: cout = 1\\nres=res/cout //here i got an error ZeroDivisionError\\n..."
                    },
                    {
                        "username": "shaktisahoo2000",
                        "content": "class Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]\\n                cout+=1\\n        if cout !=0:\\n            res=res/cout\\n                 \\n        return int(res)"
                    },
                    {
                        "username": "mallikoti",
                        "content": "how to handle  ZeroDivisionError  `your inline code...your inline code..."
                    },
                    {
                        "username": "IAMANAND07",
                        "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n          int sum =0;\\\\\\\\Initialize sum as 0\\n          int count =0;\\\\\\\\Initialize count of number which is even and divisible by 3\\n\\n\\n\\\\\\\\Iterate over a array to check every element in an array.\\n            for(int i=0;i<nums.length;i++){\\n              if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                count++;\\n              }\\n           }\\n\\\\\\\\Now we want to check for zero exception as we can get 0 as count  \\n        if(count>0){\\n            int average = sum/count; \\\\\\\\count the average\\n            return average;\\n        }\\n        return 0;\\\\\\\\If we get count as 0 we can easily return 0 as the answer\\n    }\\n}\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1905967,
                "content": [
                    {
                        "username": "tamizh007",
                        "content": "As u guys might be wondering the 15 is divisible by 3 but in example question it is not , that's because the number should not only divisible by 3 but also divisible by 2. thus there is a mistake in the question .check the number divisible by 3 and 2 and run your code once again\npls upvote if  u find it usefull to u"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Read the Question once again before running the code.!"
                    },
                    {
                        "username": "user0834zM",
                        "content": "I think there is an problem with the compiler. As my code is working fine on other online compilers but when it comes to this it shows an error for the simple testcase  as well. I think they better fix this problem related to compiler."
                    },
                    {
                        "username": "gabida",
                        "content": "The question changed to sum up only numbers that are devided  by 3.  \\nAnd there is problem with tests cases [4,4,9,10] should output 9 but it shows 0."
                    },
                    {
                        "username": "sathiroy9330",
                        "content": "simply divisible with 6 instead of 3 "
                    },
                    {
                        "username": "SaurabhAgarwal207",
                        "content": "No question is correct. I also thought same like you , but on reading question again i found we have to consider only even numbers which are divisible by 3. So we need to check for both divisible by 3 and 2. "
                    },
                    {
                        "username": "NithinModiboyana",
                        "content": "there is a mistake in question instead of 3 there must be 6 then it works perfectly \\nl=[i for i in nums if i%6==0]\\nreturn sum(l)//len(l) if l else 0"
                    },
                    {
                        "username": "Biswajit_sahoo",
                        "content": "my code is correct, giving expected result in another compiler but here it is showing divided by zero error.\\n\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n       int sum=0 ,count =0 ;\\n        for(int i=0; i< nums.length; i++)\\n        { \\n            if(nums[i] % 2==0 && nums[i] % 3 == 0)\\n            {\\n                System.out.println(nums[i]);\\n                sum +=nums[i];\\n                count = count+ 1;             \\n            }\\n        } \\n       return sum/count;    \\n}\\n}"
                    },
                    {
                        "username": "ChinuBunny",
                        "content": "[@naezy](/naezy)  check if(count!=0) return sum/count;\\nelse return 0;"
                    },
                    {
                        "username": "SurendraChakravarthula",
                        "content": "[@naezy](/naezy)  return count==0?0:sum/count; instead of returning sum/count(since when count=0, sum/count=0/0 which is an arithmetic error)"
                    },
                    {
                        "username": "naezy",
                        "content": "Hey ! I am getting same error, How did you resolved it ?"
                    },
                    {
                        "username": "mallikoti",
                        "content": "class Solution(object):\\n    def averageValue(self, nums):\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]       \\n                cout+=1\\n        if cout==1:\\n            return res\\n        else:\\n            res=res/cout   //here i got an error ZeroDivisionError\\n        return res\\n\\n                \\n"
                    },
                    {
                        "username": "qazFatNerd",
                        "content": "...\\nif cout  == 0: cout = 1\\nres=res/cout //here i got an error ZeroDivisionError\\n..."
                    },
                    {
                        "username": "shaktisahoo2000",
                        "content": "class Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]\\n                cout+=1\\n        if cout !=0:\\n            res=res/cout\\n                 \\n        return int(res)"
                    },
                    {
                        "username": "mallikoti",
                        "content": "how to handle  ZeroDivisionError  `your inline code...your inline code..."
                    },
                    {
                        "username": "IAMANAND07",
                        "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n          int sum =0;\\\\\\\\Initialize sum as 0\\n          int count =0;\\\\\\\\Initialize count of number which is even and divisible by 3\\n\\n\\n\\\\\\\\Iterate over a array to check every element in an array.\\n            for(int i=0;i<nums.length;i++){\\n              if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                count++;\\n              }\\n           }\\n\\\\\\\\Now we want to check for zero exception as we can get 0 as count  \\n        if(count>0){\\n            int average = sum/count; \\\\\\\\count the average\\n            return average;\\n        }\\n        return 0;\\\\\\\\If we get count as 0 we can easily return 0 as the answer\\n    }\\n}\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1695799,
                "content": [
                    {
                        "username": "tamizh007",
                        "content": "As u guys might be wondering the 15 is divisible by 3 but in example question it is not , that's because the number should not only divisible by 3 but also divisible by 2. thus there is a mistake in the question .check the number divisible by 3 and 2 and run your code once again\npls upvote if  u find it usefull to u"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Read the Question once again before running the code.!"
                    },
                    {
                        "username": "user0834zM",
                        "content": "I think there is an problem with the compiler. As my code is working fine on other online compilers but when it comes to this it shows an error for the simple testcase  as well. I think they better fix this problem related to compiler."
                    },
                    {
                        "username": "gabida",
                        "content": "The question changed to sum up only numbers that are devided  by 3.  \\nAnd there is problem with tests cases [4,4,9,10] should output 9 but it shows 0."
                    },
                    {
                        "username": "sathiroy9330",
                        "content": "simply divisible with 6 instead of 3 "
                    },
                    {
                        "username": "SaurabhAgarwal207",
                        "content": "No question is correct. I also thought same like you , but on reading question again i found we have to consider only even numbers which are divisible by 3. So we need to check for both divisible by 3 and 2. "
                    },
                    {
                        "username": "NithinModiboyana",
                        "content": "there is a mistake in question instead of 3 there must be 6 then it works perfectly \\nl=[i for i in nums if i%6==0]\\nreturn sum(l)//len(l) if l else 0"
                    },
                    {
                        "username": "Biswajit_sahoo",
                        "content": "my code is correct, giving expected result in another compiler but here it is showing divided by zero error.\\n\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n       int sum=0 ,count =0 ;\\n        for(int i=0; i< nums.length; i++)\\n        { \\n            if(nums[i] % 2==0 && nums[i] % 3 == 0)\\n            {\\n                System.out.println(nums[i]);\\n                sum +=nums[i];\\n                count = count+ 1;             \\n            }\\n        } \\n       return sum/count;    \\n}\\n}"
                    },
                    {
                        "username": "ChinuBunny",
                        "content": "[@naezy](/naezy)  check if(count!=0) return sum/count;\\nelse return 0;"
                    },
                    {
                        "username": "SurendraChakravarthula",
                        "content": "[@naezy](/naezy)  return count==0?0:sum/count; instead of returning sum/count(since when count=0, sum/count=0/0 which is an arithmetic error)"
                    },
                    {
                        "username": "naezy",
                        "content": "Hey ! I am getting same error, How did you resolved it ?"
                    },
                    {
                        "username": "mallikoti",
                        "content": "class Solution(object):\\n    def averageValue(self, nums):\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]       \\n                cout+=1\\n        if cout==1:\\n            return res\\n        else:\\n            res=res/cout   //here i got an error ZeroDivisionError\\n        return res\\n\\n                \\n"
                    },
                    {
                        "username": "qazFatNerd",
                        "content": "...\\nif cout  == 0: cout = 1\\nres=res/cout //here i got an error ZeroDivisionError\\n..."
                    },
                    {
                        "username": "shaktisahoo2000",
                        "content": "class Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]\\n                cout+=1\\n        if cout !=0:\\n            res=res/cout\\n                 \\n        return int(res)"
                    },
                    {
                        "username": "mallikoti",
                        "content": "how to handle  ZeroDivisionError  `your inline code...your inline code..."
                    },
                    {
                        "username": "IAMANAND07",
                        "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n          int sum =0;\\\\\\\\Initialize sum as 0\\n          int count =0;\\\\\\\\Initialize count of number which is even and divisible by 3\\n\\n\\n\\\\\\\\Iterate over a array to check every element in an array.\\n            for(int i=0;i<nums.length;i++){\\n              if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                count++;\\n              }\\n           }\\n\\\\\\\\Now we want to check for zero exception as we can get 0 as count  \\n        if(count>0){\\n            int average = sum/count; \\\\\\\\count the average\\n            return average;\\n        }\\n        return 0;\\\\\\\\If we get count as 0 we can easily return 0 as the answer\\n    }\\n}\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1666873,
                "content": [
                    {
                        "username": "tamizh007",
                        "content": "As u guys might be wondering the 15 is divisible by 3 but in example question it is not , that's because the number should not only divisible by 3 but also divisible by 2. thus there is a mistake in the question .check the number divisible by 3 and 2 and run your code once again\npls upvote if  u find it usefull to u"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Read the Question once again before running the code.!"
                    },
                    {
                        "username": "user0834zM",
                        "content": "I think there is an problem with the compiler. As my code is working fine on other online compilers but when it comes to this it shows an error for the simple testcase  as well. I think they better fix this problem related to compiler."
                    },
                    {
                        "username": "gabida",
                        "content": "The question changed to sum up only numbers that are devided  by 3.  \\nAnd there is problem with tests cases [4,4,9,10] should output 9 but it shows 0."
                    },
                    {
                        "username": "sathiroy9330",
                        "content": "simply divisible with 6 instead of 3 "
                    },
                    {
                        "username": "SaurabhAgarwal207",
                        "content": "No question is correct. I also thought same like you , but on reading question again i found we have to consider only even numbers which are divisible by 3. So we need to check for both divisible by 3 and 2. "
                    },
                    {
                        "username": "NithinModiboyana",
                        "content": "there is a mistake in question instead of 3 there must be 6 then it works perfectly \\nl=[i for i in nums if i%6==0]\\nreturn sum(l)//len(l) if l else 0"
                    },
                    {
                        "username": "Biswajit_sahoo",
                        "content": "my code is correct, giving expected result in another compiler but here it is showing divided by zero error.\\n\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n       int sum=0 ,count =0 ;\\n        for(int i=0; i< nums.length; i++)\\n        { \\n            if(nums[i] % 2==0 && nums[i] % 3 == 0)\\n            {\\n                System.out.println(nums[i]);\\n                sum +=nums[i];\\n                count = count+ 1;             \\n            }\\n        } \\n       return sum/count;    \\n}\\n}"
                    },
                    {
                        "username": "ChinuBunny",
                        "content": "[@naezy](/naezy)  check if(count!=0) return sum/count;\\nelse return 0;"
                    },
                    {
                        "username": "SurendraChakravarthula",
                        "content": "[@naezy](/naezy)  return count==0?0:sum/count; instead of returning sum/count(since when count=0, sum/count=0/0 which is an arithmetic error)"
                    },
                    {
                        "username": "naezy",
                        "content": "Hey ! I am getting same error, How did you resolved it ?"
                    },
                    {
                        "username": "mallikoti",
                        "content": "class Solution(object):\\n    def averageValue(self, nums):\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]       \\n                cout+=1\\n        if cout==1:\\n            return res\\n        else:\\n            res=res/cout   //here i got an error ZeroDivisionError\\n        return res\\n\\n                \\n"
                    },
                    {
                        "username": "qazFatNerd",
                        "content": "...\\nif cout  == 0: cout = 1\\nres=res/cout //here i got an error ZeroDivisionError\\n..."
                    },
                    {
                        "username": "shaktisahoo2000",
                        "content": "class Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]\\n                cout+=1\\n        if cout !=0:\\n            res=res/cout\\n                 \\n        return int(res)"
                    },
                    {
                        "username": "mallikoti",
                        "content": "how to handle  ZeroDivisionError  `your inline code...your inline code..."
                    },
                    {
                        "username": "IAMANAND07",
                        "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n          int sum =0;\\\\\\\\Initialize sum as 0\\n          int count =0;\\\\\\\\Initialize count of number which is even and divisible by 3\\n\\n\\n\\\\\\\\Iterate over a array to check every element in an array.\\n            for(int i=0;i<nums.length;i++){\\n              if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                count++;\\n              }\\n           }\\n\\\\\\\\Now we want to check for zero exception as we can get 0 as count  \\n        if(count>0){\\n            int average = sum/count; \\\\\\\\count the average\\n            return average;\\n        }\\n        return 0;\\\\\\\\If we get count as 0 we can easily return 0 as the answer\\n    }\\n}\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1666871,
                "content": [
                    {
                        "username": "tamizh007",
                        "content": "As u guys might be wondering the 15 is divisible by 3 but in example question it is not , that's because the number should not only divisible by 3 but also divisible by 2. thus there is a mistake in the question .check the number divisible by 3 and 2 and run your code once again\npls upvote if  u find it usefull to u"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Read the Question once again before running the code.!"
                    },
                    {
                        "username": "user0834zM",
                        "content": "I think there is an problem with the compiler. As my code is working fine on other online compilers but when it comes to this it shows an error for the simple testcase  as well. I think they better fix this problem related to compiler."
                    },
                    {
                        "username": "gabida",
                        "content": "The question changed to sum up only numbers that are devided  by 3.  \\nAnd there is problem with tests cases [4,4,9,10] should output 9 but it shows 0."
                    },
                    {
                        "username": "sathiroy9330",
                        "content": "simply divisible with 6 instead of 3 "
                    },
                    {
                        "username": "SaurabhAgarwal207",
                        "content": "No question is correct. I also thought same like you , but on reading question again i found we have to consider only even numbers which are divisible by 3. So we need to check for both divisible by 3 and 2. "
                    },
                    {
                        "username": "NithinModiboyana",
                        "content": "there is a mistake in question instead of 3 there must be 6 then it works perfectly \\nl=[i for i in nums if i%6==0]\\nreturn sum(l)//len(l) if l else 0"
                    },
                    {
                        "username": "Biswajit_sahoo",
                        "content": "my code is correct, giving expected result in another compiler but here it is showing divided by zero error.\\n\\nclass Solution {\\n    public int averageValue(int[] nums) {\\n       int sum=0 ,count =0 ;\\n        for(int i=0; i< nums.length; i++)\\n        { \\n            if(nums[i] % 2==0 && nums[i] % 3 == 0)\\n            {\\n                System.out.println(nums[i]);\\n                sum +=nums[i];\\n                count = count+ 1;             \\n            }\\n        } \\n       return sum/count;    \\n}\\n}"
                    },
                    {
                        "username": "ChinuBunny",
                        "content": "[@naezy](/naezy)  check if(count!=0) return sum/count;\\nelse return 0;"
                    },
                    {
                        "username": "SurendraChakravarthula",
                        "content": "[@naezy](/naezy)  return count==0?0:sum/count; instead of returning sum/count(since when count=0, sum/count=0/0 which is an arithmetic error)"
                    },
                    {
                        "username": "naezy",
                        "content": "Hey ! I am getting same error, How did you resolved it ?"
                    },
                    {
                        "username": "mallikoti",
                        "content": "class Solution(object):\\n    def averageValue(self, nums):\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]       \\n                cout+=1\\n        if cout==1:\\n            return res\\n        else:\\n            res=res/cout   //here i got an error ZeroDivisionError\\n        return res\\n\\n                \\n"
                    },
                    {
                        "username": "qazFatNerd",
                        "content": "...\\nif cout  == 0: cout = 1\\nres=res/cout //here i got an error ZeroDivisionError\\n..."
                    },
                    {
                        "username": "shaktisahoo2000",
                        "content": "class Solution:\\n    def averageValue(self, nums: List[int]) -> int:\\n        cout=0\\n        res=0\\n        for i in range(len(nums)):\\n            if nums[i]%6==0:\\n                res+=nums[i]\\n                cout+=1\\n        if cout !=0:\\n            res=res/cout\\n                 \\n        return int(res)"
                    },
                    {
                        "username": "mallikoti",
                        "content": "how to handle  ZeroDivisionError  `your inline code...your inline code..."
                    },
                    {
                        "username": "IAMANAND07",
                        "content": "class Solution {\\n    public int averageValue(int[] nums) {\\n          int sum =0;\\\\\\\\Initialize sum as 0\\n          int count =0;\\\\\\\\Initialize count of number which is even and divisible by 3\\n\\n\\n\\\\\\\\Iterate over a array to check every element in an array.\\n            for(int i=0;i<nums.length;i++){\\n              if(nums[i]%2==0 && nums[i]%3==0){\\n                sum +=nums[i];\\n                count++;\\n              }\\n           }\\n\\\\\\\\Now we want to check for zero exception as we can get 0 as count  \\n        if(count>0){\\n            int average = sum/count; \\\\\\\\count the average\\n            return average;\\n        }\\n        return 0;\\\\\\\\If we get count as 0 we can easily return 0 as the answer\\n    }\\n}\\n\\n\\n"
                    }
                ]
            }
        ]
    }
]