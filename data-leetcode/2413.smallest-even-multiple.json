[
    {
        "title": "Smallest Even Multiple",
        "question_content": "Given a positive integer n, return the smallest positive integer that is a multiple of both 2 and n.\n&nbsp;\nExample 1:\n\nInput: n = 5\nOutput: 10\nExplanation: The smallest multiple of both 5 and 2 is 10.\n\nExample 2:\n\nInput: n = 6\nOutput: 6\nExplanation: The smallest multiple of both 6 and 2 is 6. Note that a number is a multiple of itself.\n\n&nbsp;\nConstraints:\n\n\t1 <= n <= 150",
        "solutions": [
            {
                "id": 2590337,
                "title": "java-c-python-bit-solution",
                "content": "# **Explanation**\\nif `n` is even, return `n << 0`\\nif `n` is odd, return `n << 1`\\n<br>\\n\\n# **Complexity**\\nTime `O(1)`\\nSpace `O(1)`\\n<br>\\n\\n**Java**\\n```java\\n    public int smallestEvenMultiple(int n) {\\n        return n << (n & 1);\\n    }\\n```\\n\\n**C++**\\n```cpp\\n    int smallestEvenMultiple(int n) {\\n        return n << (n & 1);\\n    }\\n```\\n\\n**Python**\\n```py\\n    def smallestEvenMultiple(self, n):\\n        return n << (n & 1)\\n```\\n",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C"
                ],
                "code": "```java\\n    public int smallestEvenMultiple(int n) {\\n        return n << (n & 1);\\n    }\\n```\n```cpp\\n    int smallestEvenMultiple(int n) {\\n        return n << (n & 1);\\n    }\\n```\n```py\\n    def smallestEvenMultiple(self, n):\\n        return n << (n & 1)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2590125,
                "title": "n-or-2n",
                "content": "\\n**C++**\\n```cpp\\nint smallestEvenMultiple(int n) {\\n    return n * (n % 2 + 1);\\n}\\n```",
                "solutionTags": [],
                "code": "```cpp\\nint smallestEvenMultiple(int n) {\\n    return n * (n % 2 + 1);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2590050,
                "title": "python3-o-1-with-explanation",
                "content": "First check if n is even, if it is even return n.\\nIf n is odd, return n*2.\\n\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        return 2*n\\n```\\n\\n**Upvote** if you like this post.\\n\\n**Connect with me on [LinkedIn](https://www.linkedin.com/in/meida-chen-938a265b/)** if you\\'d like to discuss other related topics\\n\\nJust in case if you are working on **ML/DL 3D data-related projects** or are interested in the topic, please check out our project **[HERE](https://github.com/meidachen/STPLS3D)**",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        return 2*n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2590557,
                "title": "beginner-friendly-java-javascript-python-solution",
                "content": "**Time Complexity : O(1)**\\n\\n```java []\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : n * 2;\\n    }\\n}\\n```\\n\\n```javasript []\\nvar smallestEvenMultiple = function(n) {\\n    return n % 2 == 0 ? n : n * 2\\n};\\n```\\n\\n```python []\\nclass Solution(object):\\n    def smallestEvenMultiple(self, n):\\n        return n if n % 2 == 0 else n * 2\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "JavaScript"
                ],
                "code": "```java []\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : n * 2;\\n    }\\n}\\n```\n```javasript []\\nvar smallestEvenMultiple = function(n) {\\n    return n % 2 == 0 ? n : n * 2\\n};\\n```\n```python []\\nclass Solution(object):\\n    def smallestEvenMultiple(self, n):\\n        return n if n % 2 == 0 else n * 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2590042,
                "title": "c-easily-understandable-2-line-code",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) \\n    {\\n        if(n%2==0) return n;                // if n is multiple of 2 it means it will also the multiple of n so return n\\n        return n*2;                         // if it is not multiple of 2 then multiply it with 2 and return so it will become multiple of 2 as well\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) \\n    {\\n        if(n%2==0) return n;                // if n is multiple of 2 it means it will also the multiple of n so return n\\n        return n*2;                         // if it is not multiple of 2 then multiply it with 2 and return so it will become multiple of 2 as well\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2916605,
                "title": "python-easy-solution",
                "content": "# Code\\u2705\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return n if n % 2 ==0 else n * 2\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return n if n % 2 ==0 else n * 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3417096,
                "title": "simple-c-code-beats-100-time",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nIf the number is even, return n.\\nIf the number is odd, return n*2;\\n\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0)\\n            return n;\\n        else\\n        {\\n            return n*2;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0)\\n            return n;\\n        else\\n        {\\n            return n*2;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2803420,
                "title": "python-tc-o-1-simple-solution",
                "content": "\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n % 2 == 0: # check if n is even return as it is because it will be the smallest even no \\n            return n\\n        else:\\n            return n*2 # else multipy it with 2 to convert it into smallest even multiple\\n```\\n**If you like my solution Please Upvote**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n % 2 == 0: # check if n is even return as it is because it will be the smallest even no \\n            return n\\n        else:\\n            return n*2 # else multipy it with 2 to convert it into smallest even multiple\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2593906,
                "title": "shortest-solution",
                "content": "\\n```\\ndef smallestEvenMultiple(self, n: int) -> int: return n << (n & 1)\\n```\\n\\n```\\nint smallestEvenMultiple(int n) {return n << (n & 1);}\\n```",
                "solutionTags": [],
                "code": "```\\ndef smallestEvenMultiple(self, n: int) -> int: return n << (n & 1)\\n```\n```\\nint smallestEvenMultiple(int n) {return n << (n & 1);}\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3103660,
                "title": "easiest-solution-c-with-0ms-beats-100-of-solutions",
                "content": "# Intuition\\nSince we are checking it against `2` you can deduce that any even number is divisible by `2` and therefore a multiple.\\nAnd when it is odd, the next multiple would need to be double itself.\\n\\n# Complexity\\n- Time complexity:\\n$1$\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(!(n%2)) return n;\\n        return n*2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(!(n%2)) return n;\\n        return n*2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2601867,
                "title": "leetcode-the-hard-way-explained-line-by-line",
                "content": "Please check out [LeetCode The Hard Way](https://wingkwong.github.io/leetcode-the-hard-way/) for more solution explanations and tutorials. \\nIf you like it, please give a star, watch my [Github Repository](https://github.com/wingkwong/leetcode-the-hard-way) and upvote this post. You may also join my [Discord](https://discord.gg/Nqm4jJcyBf) for more updates.\\n\\n---\\n\\n**Python**\\n\\n```py\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n\\t\\t# it\\'s just asking for LCM of 2 and n\\n        return lcm(2, n)\\n```\\n\\n```py\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n\\t\\t# alternatively, we can use GCD to calculate LCM\\n        return (2 * n) // gcd(2, n)\\n```\\n\\n```py\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n\\t\\t# or simply check if it is divisable by 2, if so return n\\n\\t\\t# else return its double\\n        return 2 * n if n & 1 else n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```py\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n\\t\\t# it\\'s just asking for LCM of 2 and n\\n        return lcm(2, n)\\n```\n```py\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n\\t\\t# alternatively, we can use GCD to calculate LCM\\n        return (2 * n) // gcd(2, n)\\n```\n```py\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n\\t\\t# or simply check if it is divisable by 2, if so return n\\n\\t\\t# else return its double\\n        return 2 * n if n & 1 else n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2590548,
                "title": "gcd-vs-lcm",
                "content": "- Question is asking for **LCM**.\\n- Calculate with help of **GCD**.\\n# C++\\t\\n\\tint smallestEvenMultiple(int n) {\\n        return (n*2) / __gcd(2,n);\\n    }",
                "solutionTags": [
                    "C"
                ],
                "code": "- Question is asking for **LCM**.\\n- Calculate with help of **GCD**.\\n# C++\\t\\n\\tint smallestEvenMultiple(int n) {\\n        return (n*2) / __gcd(2,n);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3396518,
                "title": "smallestevenmultiple",
                "content": "<!-- # Intuition -->\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n<!-- # Approach -->\\n<!-- Describe your approach to solving the problem. -->\\n\\n<!-- # Complexity\\n- Time complexity: -->\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n<!-- - Space complexity: -->\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n  return n % 2 == 0 ? n : n * 2;  \\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n  return n % 2 == 0 ? n : n * 2;  \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3264871,
                "title": "used-infinite-while-loop-for-fun",
                "content": "# Intuition\\nThe idea is to find the smallest even multiple of the given number n.\\n\\n# Approach\\nWe start checking numbers from 2 onwards until we find a number that is both divisible by n and even. Once we find such a number, we break out of the loop and return that number.\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int i=2;\\n        while(true){\\n            if(i%n==0 && i%2 ==0){\\n                break;\\n            }\\n            i++;\\n        }\\n        return i;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int i=2;\\n        while(true){\\n            if(i%n==0 && i%2 ==0){\\n                break;\\n            }\\n            i++;\\n        }\\n        return i;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3105621,
                "title": "best-1-line-of-code-in-java-with-0ms-and-100-beats",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n; return n*2;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n; return n*2;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3053382,
                "title": "typescript-javascript-simple-one-line-solution-with-comments-discussion",
                "content": "# Intuition\\nAs long as you know the `mod` operator `%` this one should be pretty easy for you.\\n\\n# Approach\\nSince there is the same solution available, regardless of the input, this is pretty easy to code a solution for. Just return the number `n` if it divides evenly by 2, otherwise return the number multiplied by 2.\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\nconst smallestEvenMultiple = (n: number): number => {\\n\\n    return n % 2 == 0 ? n : n * 2;\\n\\n};\\n```\\nSee more `TypeScript`/`JavaScript` (and other language) LeetCode solutions at https://github.com/jasonmauss/LeetCode",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nconst smallestEvenMultiple = (n: number): number => {\\n\\n    return n % 2 == 0 ? n : n * 2;\\n\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2775871,
                "title": "java-fastest-solution-shortest-code-1-line-100",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n%2==0? n: n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n%2==0? n: n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2613131,
                "title": "c-two-line-easy-solution",
                "content": "if(n%2==0)\\n            return n ;\\n        return n*2;",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "if(n%2==0)\\n            return n ;\\n        return n*2;",
                "codeTag": "Unknown"
            },
            {
                "id": 2599492,
                "title": "2413-javascript-1-line-solution-o-1",
                "content": "```\\n const smallestEvenMultiple = n => (n%2 === 0)? n: n*2;\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n const smallestEvenMultiple = n => (n%2 === 0)? n: n*2;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2594803,
                "title": "two-liner-solutions-in-every-language",
                "content": "**Runtime: 0 ms, faster than 100.00% of C++ online submissions for Smallest Even Multiple.\\nMemory Usage: 6 MB, less than 50.00% of C++ online submissions for Smallest Even Multiple.**\\n\\nC++ code:\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n};\\n```\\n\\n**Runtime: 0 ms, faster than 100.00% of Java online submissions for Smallest Even Multiple.\\nMemory Usage: 38.8 MB, less than 100.00% of Java online submissions for Smallest Even Multiple.**\\n\\nJava code:\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n}\\n```\\n\\n**Runtime: 23 ms, faster than 100.00% of Python online submissions for Smallest Even Multiple.\\nMemory Usage: 13.1 MB, less than 100.00% of Python online submissions for Smallest Even Multiple.**\\n\\nPython code:\\n```\\nclass Solution(object):\\n    def smallestEvenMultiple(self, n):\\n        if(n%2==0): return n\\n        else: return n*2\\n```\\n\\n**Runtime: 48 ms, faster than 45.45% of Python3 online submissions for Smallest Even Multiple.\\nMemory Usage: 13.8 MB, less than 100.00% of Python3 online submissions for Smallest Even Multiple.**\\n\\nPython3 code:\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if(n%2==0): return n\\n        else: return n*2\\n```\\n\\n**Runtime: 5 ms, faster than 100.00% of C online submissions for Smallest Even Multiple.\\nMemory Usage: 5.7 MB, less than 100.00% of C online submissions for Smallest Even Multiple.**\\n\\nC code:\\n```\\nint smallestEvenMultiple(int n){\\n    if(n%2==0) return n;\\n    else return n*2;\\n}\\n```\\n\\n**Runtime: 36 ms, faster than 100.00% of C# online submissions for Smallest Even Multiple.\\nMemory Usage: 25.3 MB, less than 100.00% of C# online submissions for Smallest Even Multiple.**\\n\\nC# code:\\n```\\npublic class Solution {\\n    public int SmallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n}\\n```\\n\\n**Runtime: 94 ms, faster than 100.00% of JavaScript online submissions for Smallest Even Multiple.\\nMemory Usage: 41.7 MB, less than 100.00% of JavaScript online submissions for Smallest Even Multiple.**\\n\\nJavaScript code:\\n```\\nvar smallestEvenMultiple = function(n) {\\n    if(n%2==0) return n\\n    else return n*2\\n};\\n```\\n\\n**Runtime: 102 ms, faster than 100.00% of Ruby online submissions for Smallest Even Multiple.\\nMemory Usage: 211 MB, less than 100.00% of Ruby online submissions for Smallest Even Multiple.**\\n\\nRuby code:\\n```\\ndef smallest_even_multiple(n)\\n    if(n%2==0); return n\\n    else; return n*2\\n    end\\nend\\n```\\n\\n**Runtime: 4 ms, faster than 100.00% of Swift online submissions for Smallest Even Multiple.\\nMemory Usage: 13.8 MB, less than 100.00% of Swift online submissions for Smallest Even Multiple.**\\n\\nSwift code:\\n```\\nclass Solution {\\n    func smallestEvenMultiple(_ n: Int) -> Int {\\n        if(n%2==0) {return n}\\n        else {return n*2}\\n    }\\n}\\n```\\n\\n**Runtime: 0 ms, faster than 100.00% of Go online submissions for Smallest Even Multiple.\\nMemory Usage: 1.9 MB, less than 100.00% of Go online submissions for Smallest Even Multiple.**\\n\\nGo code:\\n```\\nfunc smallestEvenMultiple(n int) int {\\n    if n%2==0 { return n\\n    } else { return n*2 }\\n}\\n```\\n\\n**Runtime: 711 ms, faster than 100.00% of Scala online submissions for Smallest Even Multiple.\\nMemory Usage: 62.7 MB, less than 100.00% of Scala online submissions for Smallest Even Multiple.**\\n\\nScala code:\\n```\\nobject Solution {\\n    def smallestEvenMultiple(n: Int): Int = {\\n        if(n%2==0) n\\n        else n*2\\n    }\\n}\\n```\\n\\n**Runtime: 247 ms, faster than 100.00% of Kotlin online submissions for Smallest Even Multiple.\\nMemory Usage: 33.4 MB, less than 100.00% of Kotlin online submissions for Smallest Even Multiple.**\\n\\nKotlin code:\\n```\\nclass Solution {\\n    fun smallestEvenMultiple(n: Int): Int {\\n        if(n%2==0) return n \\n        else return n*2\\n    }\\n}\\n```\\n\\n**Runtime: 3 ms, faster than 100.00% of Rust online submissions for Smallest Even Multiple.\\nMemory Usage: 2.2 MB, less than 100.00% of Rust online submissions for Smallest Even Multiple.**\\n\\nRust code:\\n```\\nimpl Solution {\\n    pub fn smallest_even_multiple(n: i32) -> i32 {\\n        if(n%2==0) {return n}\\n        else {return n*2}\\n    }\\n}\\n```\\n\\n**Runtime: 14 ms, faster than 100.00% of PHP online submissions for Smallest Even Multiple.\\nMemory Usage: 19.1 MB, less than 100.00% of PHP online submissions for Smallest Even Multiple.**\\n\\nPHP code:\\n```\\nclass Solution {\\n    function smallestEvenMultiple($n) {\\n        if($n%2==0) return $n;\\n        else return $n*2;\\n    }\\n}\\n```\\n\\n**Runtime: 76 ms, faster than 100.00% of TypeScript online submissions for Smallest Even Multiple.\\nMemory Usage: 43.2 MB, less than 100.00% of TypeScript online submissions for Smallest Even Multiple.**\\n\\nTypeScript code:\\n```\\nfunction smallestEvenMultiple(n: number): number {\\n    if(n%2==0) return n\\n    else return n*2\\n};\\n```\\n\\n**Runtime: 490 ms, faster than 100.00% of Racket online submissions for Smallest Even Multiple.\\nMemory Usage: 98.6 MB, less than 100.00% of Racket online submissions for Smallest Even Multiple.**\\n\\nRacket code:\\n```\\n(define/contract (smallest-even-multiple n)\\n  (-> exact-integer? exact-integer?)\\n                 (if(equal? (modulo n 2) 0) n (* n 2))\\n  )\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n};\\n```\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n}\\n```\n```\\nclass Solution(object):\\n    def smallestEvenMultiple(self, n):\\n        if(n%2==0): return n\\n        else: return n*2\\n```\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if(n%2==0): return n\\n        else: return n*2\\n```\n```\\nint smallestEvenMultiple(int n){\\n    if(n%2==0) return n;\\n    else return n*2;\\n}\\n```\n```\\npublic class Solution {\\n    public int SmallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n}\\n```\n```\\nvar smallestEvenMultiple = function(n) {\\n    if(n%2==0) return n\\n    else return n*2\\n};\\n```\n```\\ndef smallest_even_multiple(n)\\n    if(n%2==0); return n\\n    else; return n*2\\n    end\\nend\\n```\n```\\nclass Solution {\\n    func smallestEvenMultiple(_ n: Int) -> Int {\\n        if(n%2==0) {return n}\\n        else {return n*2}\\n    }\\n}\\n```\n```\\nfunc smallestEvenMultiple(n int) int {\\n    if n%2==0 { return n\\n    } else { return n*2 }\\n}\\n```\n```\\nobject Solution {\\n    def smallestEvenMultiple(n: Int): Int = {\\n        if(n%2==0) n\\n        else n*2\\n    }\\n}\\n```\n```\\nclass Solution {\\n    fun smallestEvenMultiple(n: Int): Int {\\n        if(n%2==0) return n \\n        else return n*2\\n    }\\n}\\n```\n```\\nimpl Solution {\\n    pub fn smallest_even_multiple(n: i32) -> i32 {\\n        if(n%2==0) {return n}\\n        else {return n*2}\\n    }\\n}\\n```\n```\\nclass Solution {\\n    function smallestEvenMultiple($n) {\\n        if($n%2==0) return $n;\\n        else return $n*2;\\n    }\\n}\\n```\n```\\nfunction smallestEvenMultiple(n: number): number {\\n    if(n%2==0) return n\\n    else return n*2\\n};\\n```\n```\\n(define/contract (smallest-even-multiple n)\\n  (-> exact-integer? exact-integer?)\\n                 (if(equal? (modulo n 2) 0) n (* n 2))\\n  )\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2594171,
                "title": "python3-2413-smallest-even-multiple",
                "content": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return 2*n if n%2 else n",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return 2*n if n%2 else n",
                "codeTag": "Java"
            },
            {
                "id": 2590635,
                "title": "c-0-ms-solution-one-liner",
                "content": "// O(1)\\n\\n\\t\\tclass Solution {\\n\\t\\tpublic:\\n\\t\\t\\tint smallestEvenMultiple(int n) {\\n\\t\\t\\t\\treturn n % 2 == 0 ? n : n * 2;\\n\\t\\t\\t}\\n\\t\\t};",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "class Solution {\\n\\t\\tpublic:\\n\\t\\t\\tint smallestEvenMultiple(int n) {\\n\\t\\t\\t\\treturn n % 2 == 0 ? n : n * 2;\\n\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 2590088,
                "title": "simple-o-1-time-solution-c",
                "content": "Simple\\n1) If even return the number itself\\n2) If odd return twice the number\\n\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(!(n&1))\\n            return n;\\n        return n<<1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(!(n&1))\\n            return n;\\n        return n<<1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3542507,
                "title": "easy-java-two-line-code-100",
                "content": "# Please UpVote\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2!=0)return n*2;\\n        return n;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2!=0)return n*2;\\n        return n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3178861,
                "title": "c-2-line-code-beginner-friendly-clean",
                "content": "![image](https://assets.leetcode.com/users/images/a5d8d4f2-54c8-43e7-a514-7bf0a15aff22_1676266153.1189017.png)\\n\\n**T->O(1) && S->O(1)**\\n\\n\\tclass Solution {\\n\\tpublic:\\n\\t\\tint smallestEvenMultiple(int n){   \\n\\t\\t\\tif(n % 2 == 1) return n*2;\\n\\t\\t\\treturn n;\\n\\t\\t}\\n\\t};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tint smallestEvenMultiple(int n){   \\n\\t\\t\\tif(n % 2 == 1) return n*2;\\n\\t\\t\\treturn n;\\n\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3140079,
                "title": "one-line-without-if-statement",
                "content": "# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n + n * (n % 2);\\n    }\\n}\\n```\\n![Screenshot 2023-02-03 at 19.57.18.png](https://assets.leetcode.com/users/images/1e500106-ea3e-47da-a873-f9250d3e1f2a_1675503867.9706118.png)",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n + n * (n % 2);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3117557,
                "title": "python-one-liner",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return n if n % 2 == 0 else 2*n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return n if n % 2 == 0 else 2*n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3113139,
                "title": "java-best-solution-o-1-time-complexity",
                "content": "# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0){\\n            return n;\\n        }\\n        else\\n        return 2*n;\\n    }\\n}\\n```\\n> Upvote Please\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0){\\n            return n;\\n        }\\n        else\\n        return 2*n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3074092,
                "title": "best-python-one-liner-with-99-beats",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return n if n%2==0 else n*2\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return n if n%2==0 else n*2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2830039,
                "title": "c-modulo-and-multiple-if-needed",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nIf the number is even we are done, otherwise multiple by 2.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nFollow our intuation.\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2 * n;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2 * n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2738920,
                "title": "0ms-java-solution",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            return n*2;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            return n*2;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2601496,
                "title": "simple-solution-just-multiply-n-by-2",
                "content": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) \\n    {\\n        long long s=n;\\n        while(true)\\n        {\\n            if(s%2==0&&s%s==0)\\n                return s;\\n            s=s*2;\\n        }\\n        return false;\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) \\n    {\\n        long long s=n;\\n        while(true)\\n        {\\n            if(s%2==0&&s%s==0)\\n                return s;\\n            s=s*2;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2593484,
                "title": "easy-java-solution",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int k=2*n;\\n        for(int i=2*n;i>=n;i--)\\n        {\\n            if(i%n==0&&i%2==0)\\n                k=i;\\n        }\\n        return k;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int k=2*n;\\n        for(int i=2*n;i>=n;i--)\\n        {\\n            if(i%n==0&&i%2==0)\\n                k=i;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2590220,
                "title": "c-simplest-one",
                "content": "```\\n//Please upvote if it helps :)\\nclass Solution \\n{\\npublic:\\n    int smallestEvenMultiple(int n) \\n    {\\n        if(n%2==0) return n;\\n        return n*2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\n//Please upvote if it helps :)\\nclass Solution \\n{\\npublic:\\n    int smallestEvenMultiple(int n) \\n    {\\n        if(n%2==0) return n;\\n        return n*2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2590068,
                "title": "super-easy-one-liner-c-solution",
                "content": "```\\nint smallestEvenMultiple(int n) {\\n        return (n%2) ? n*2 : n;\\n    }\\n```\\n\\n***Please Upvote if this helped***",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint smallestEvenMultiple(int n) {\\n        return (n%2) ? n*2 : n;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2590055,
                "title": "one-line-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n & 1 ? (n << 1) : n;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n & 1 ? (n << 1) : n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3994176,
                "title": "easy-to-understand-code",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        for(int i = 1;i<300;i++){\\n            if(i%2==0 && i%n==0)return i;\\n        }\\n        return n;\\n    }\\n}\\n```\\n![f9e51783-3660-4252-933c-ec2c42b2d57d_1677809905.0379472.jpeg](https://assets.leetcode.com/users/images/cd09286d-ec82-4093-bbe1-e21f7709b214_1693685792.7237215.jpeg)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        for(int i = 1;i<300;i++){\\n            if(i%2==0 && i%n==0)return i;\\n        }\\n        return n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3922807,
                "title": "c-java-easy-solution-beats-100",
                "content": "\\n# Complexity\\n- Time complexity:\\n![image.png](https://assets.leetcode.com/users/images/2a0afe14-56a7-42e9-8ac5-993c37d20ea1_1692282478.8337853.png)\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n % 2 == 0)\\n            return n;\\n            \\n        return n * 2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "C#"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n % 2 == 0)\\n            return n;\\n            \\n        return n * 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3708764,
                "title": "smallest-even-multiple-in-js-easy-way",
                "content": "# Intuition\\n1. Need to find the smallest even multiple of the given number n.\\n2. If n is already an even number, then n itself is the smallest even multiple.\\n3. Otherwise, we need to multiply n by 2 to get the smallest even multiple.\\n\\n# Approach\\nFirstly, we need to find is there a reminder when n is divided by 2.\\nIf the reminder is equal to 1, the we need to return n * 2.\\nIf the reminder is 0, then simply return the n.\\n\\n# Complexity\\nComplexity | Details\\n--- | ---\\nJavaScript | 63 ms\\n\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n\\nvar reminder =  n % 2\\n\\nif (reminder == 1) {\\n    return n * 2\\n} else if (reminder == 0) {\\n    return n\\n}\\n\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n\\nvar reminder =  n % 2\\n\\nif (reminder == 1) {\\n    return n * 2\\n} else if (reminder == 0) {\\n    return n\\n}\\n\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3643959,
                "title": "easy-java-c-c-javascript-code-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe all know that if given integer n is an even number than it is already the smallest even multiple, if it is odd then we can multiply by 2 as any odd number multiplied by 2 will result in an even number. \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. We are given an input integer \"n\" and we need to find the smallest even multiple of \"n\".\\n1. We start by checking if \"n\" is already even by using the condition n % 2 == 0. If it is even, we can return \"n\" itself as it is already the smallest even multiple.\\n3. If \"n\" is not even, it means it is an odd number. In this case, we need to find the smallest even multiple of \"n\".\\n4. We can obtain the smallest even multiple by multiplying \"n\" by 2, as any odd number multiplied by 2 will result in an even number.\\n5. Finally, we return the result, which is the smallest even multiple of \"n\".\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# JAVA Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        return n*2;\\n    }\\n}\\n```\\n# C Code\\n```\\nint smallestEvenMultiple(int n){\\n    if(n%2 == 0){\\n        return n;\\n    }\\n    return n*2;\\n}\\n```\\n# C++ Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        return n*2;\\n    }\\n};\\n```\\n# JavaScript Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        return n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "C",
                    "JavaScript"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        return n*2;\\n    }\\n}\\n```\n```\\nint smallestEvenMultiple(int n){\\n    if(n%2 == 0){\\n        return n;\\n    }\\n    return n*2;\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        return n*2;\\n    }\\n};\\n```\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        return n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3638192,
                "title": "fastest-java-solution",
                "content": "# Intuition\\nThis problem is really simple if you think about the 2 types of testcases. First, the number inputted can be divisible by 2. In this case, we can just return the number itself since it satisfies all of the criteria. Else, you can just return the number times 2.\\n\\n# Complexity\\n- Time complexity: O(1)\\n- Space complexity: O(1)\\n\\n# Code\\n```java\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if (n % 2 == 0) {\\n            return n;\\n        } else {\\n            return n * 2;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Number Theory"
                ],
                "code": "```java\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if (n % 2 == 0) {\\n            return n;\\n        } else {\\n            return n * 2;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3638025,
                "title": "smallest-even-multiple-100-easy-java-code",
                "content": "# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==1){\\n            return 2*n;\\n        }\\n        return n;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==1){\\n            return 2*n;\\n        }\\n        return n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3350347,
                "title": "one-line-solution-swift",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    func smallestEvenMultiple(_ n: Int) -> Int {\\n        n.isMultiple(of: 2) ? n : n * 2\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func smallestEvenMultiple(_ n: Int) -> Int {\\n        n.isMultiple(of: 2) ? n : n * 2\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3338800,
                "title": "beats-99",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n\\n    if (n%2 !== 0 )\\n    {\\n        return n*2;\\n    }\\n    else\\n    {\\n        return n;\\n    }\\n    \\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n\\n    if (n%2 !== 0 )\\n    {\\n        return n*2;\\n    }\\n    else\\n    {\\n        return n;\\n    }\\n    \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3326627,
                "title": "weird-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n*(n%2+1);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n*(n%2+1);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3283881,
                "title": "easy-java-solution",
                "content": "# Approach\\n- If the number is even then directly return the number. As the number itself is the smallest\\n- If the number is odd then multiply it with 2 then return the multiplied no\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if (n%2==0)\\n            return n;\\n        else\\n            return n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if (n%2==0)\\n            return n;\\n        else\\n            return n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3280382,
                "title": "c-easy-solution",
                "content": "\\n# Complexity\\n- Time complexity: 33 ms.\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: 26.6 Mb.\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public int SmallestEvenMultiple(int n) {\\n      return n%2==0? n:n*2;  \\n    }\\n}\\n```",
                "solutionTags": [
                    "C#",
                    "Math"
                ],
                "code": "```\\npublic class Solution {\\n    public int SmallestEvenMultiple(int n) {\\n      return n%2==0? n:n*2;  \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3273734,
                "title": "c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n    if(n%2!=0)\\n        return n*2;\\n    return n;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n    if(n%2!=0)\\n        return n*2;\\n    return n;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3264916,
                "title": "simplest-solution-c-beats-100-1-line-of-code",
                "content": "# Approach\\n \\nVery simple approach -> If n is odd, the next possible multiple of n and 2 is obviously 2*n, otherwise if n is even, it is  already a multiple of n and 2. \\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n        if(n%2==0)return n;\\n            return 2*n;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n        if(n%2==0)return n;\\n            return 2*n;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3222236,
                "title": "easy-approach",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n       \\n       int ans =0;\\n       int count=0;\\n      for(int i=0;i<n;i++)\\n      {\\n          if(n%2!=0)\\n          {\\n\\n            return n*2; \\n         \\n          }\\n          else {\\n              return n;\\n\\n          }\\n      }\\n        return 0;\\n       \\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n       \\n       int ans =0;\\n       int count=0;\\n      for(int i=0;i<n;i++)\\n      {\\n          if(n%2!=0)\\n          {\\n\\n            return n*2; \\n         \\n          }\\n          else {\\n              return n;\\n\\n          }\\n      }\\n        return 0;\\n       \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3195198,
                "title": "one-liner",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        \\n        # if n % 2 == 0:\\n        #     return n \\n        # else:\\n        #     return n * 2\\n        \\n        return n if n % 2 == 0 else n * 2\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        \\n        # if n % 2 == 0:\\n        #     return n \\n        # else:\\n        #     return n * 2\\n        \\n        return n if n % 2 == 0 else n * 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3126444,
                "title": "javascript-one-liner-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n    return n % 2 === 0 ? n : n * 2;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n    return n % 2 === 0 ? n : n * 2;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3098245,
                "title": "c-simple-easy-to-understand-95-speed-and-memory",
                "content": "\\n# Code\\n```\\npublic class Solution {\\n    public int SmallestEvenMultiple(int n) \\n    {\\n        if(n % 2 == 1)\\n        { \\n            n *= 2;\\n        }\\n        return n;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int SmallestEvenMultiple(int n) \\n    {\\n        if(n % 2 == 1)\\n        { \\n            n *= 2;\\n        }\\n        return n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3073696,
                "title": "c-solution",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n % 2 == 0) return n;\\n        else return n * 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n % 2 == 0) return n;\\n        else return n * 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3040629,
                "title": "0ms-runtime-beats-100",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0){\\n            return n;\\n        }else{\\n            return 2*n;\\n        }\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0){\\n            return n;\\n        }else{\\n            return 2*n;\\n        }\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3028396,
                "title": "swift-bit-manipulation-one-liner-solution",
                "content": "# Code\\n```\\nclass Solution {\\n    func smallestEvenMultiple(_ n: Int) -> Int {\\n        n & 1 == 0 ? n : n << 1\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift",
                    "Bit Manipulation"
                ],
                "code": "```\\nclass Solution {\\n    func smallestEvenMultiple(_ n: Int) -> Int {\\n        n & 1 == 0 ? n : n << 1\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2903535,
                "title": "solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2836617,
                "title": "1-line-code-java",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2836597,
                "title": "java",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n       if (n % 2==0){\\n           return n;\\n       } \\n        return n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n       if (n % 2==0){\\n           return n;\\n       } \\n        return n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2800818,
                "title": "o-1-time-c-100-faster-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n % 2 == 0) return n;\\n        return n * 2;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n % 2 == 0) return n;\\n        return n * 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2775883,
                "title": "java-fastest-solution-0ms-runtime-o-1-space-1-1-line-code",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2760992,
                "title": "c-o-1-time-space-complexity-2-lines-of-logic-faster-than-100",
                "content": "![image](https://assets.leetcode.com/users/images/756ea796-2dd8-490f-a795-a9c6a839816a_1667158364.1446862.png)\\n\\n    int smallestEvenMultiple(int n) {\\n        \\n        for(int i=1;i<=150;i++)\\n        {\\n            int mul = n*i;\\n            if(mul % 2 == 0 && mul % i == 0)return mul;\\n        }\\n        return -1;\\n    }\\n\\t\\n\\n\\tWhy time complexity is O(1) ?\\n\\tBecz we are iterating till 150 in best, avg and even in worst case.\\n\\tBut if n is dynamic then this algorithm takes O(n)\\n\\t\\n\\t",
                "solutionTags": [
                    "C"
                ],
                "code": "![image](https://assets.leetcode.com/users/images/756ea796-2dd8-490f-a795-a9c6a839816a_1667158364.1446862.png)\\n\\n    int smallestEvenMultiple(int n) {\\n        \\n        for(int i=1;i<=150;i++)\\n        {\\n            int mul = n*i;\\n            if(mul % 2 == 0 && mul % i == 0)return mul;\\n        }\\n        return -1;\\n    }\\n\\t\\n\\n\\tWhy time complexity is O(1) ?\\n\\tBecz we are iterating till 150 in best, avg and even in worst case.\\n\\tBut if n is dynamic then this algorithm takes O(n)\\n\\t\\n\\t",
                "codeTag": "Unknown"
            },
            {
                "id": 2731116,
                "title": "easy-simple-solution",
                "content": "\\'\\'\\'\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        int  ans=0;\\n        if(n%2==0)\\n        {\\n            ans= n;\\n        }\\n       \\n        else\\n        {\\n            if(n*2%2==0)\\n            {\\n                ans= n*2;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n\\'\\'\\'",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        int  ans=0;\\n        if(n%2==0)\\n        {\\n            ans= n;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2694016,
                "title": "python-simple-solution-in-4-lines",
                "content": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        else:\\n            return 2*n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        else:\\n            return 2*n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2678481,
                "title": "scala",
                "content": "```\\nobject Solution {\\n    def smallestEvenMultiple(n: Int): Int = n & 1 match {\\n        case 0 => n\\n        case 1 => n << 1\\n    }\\n}\\n```",
                "solutionTags": [
                    "Scala"
                ],
                "code": "```\\nobject Solution {\\n    def smallestEvenMultiple(n: Int): Int = n & 1 match {\\n        case 0 => n\\n        case 1 => n << 1\\n    }\\n}\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2642013,
                "title": "runtime-0-ms-faster-than-100-00-of-c-online-submissions",
                "content": "```\\n\\n/*** 2413. Smallest Even Multiple - CPP17 ***/\\n\\nclass Solution {\\npublic:\\n\\n   //recursive function to find gcd of two numbers \\n    long long gcd(long long int a, long long int b)\\n    {\\n       if (b == 0)\\n           return a;\\n        return gcd(b, a % b);\\n    }\\n \\n\\t\\n\\t\\n\\t/* HCF(a,b) X LCM(a,b) = a x b */\\n\\t\\n\\t// function to find lcm of two numbers \\n    long long lcm(int a, int b)\\n    {\\n          return (a / gcd(a, b)) * b;\\n    }\\n    \\n    int smallestEvenMultiple(int n) {\\n\\t\\t//smallest common multiple of  2 and n is nothing but lcm (2,n)\\n        return  lcm(2,n) ;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "```\\n\\n/*** 2413. Smallest Even Multiple - CPP17 ***/\\n\\nclass Solution {\\npublic:\\n\\n   //recursive function to find gcd of two numbers \\n    long long gcd(long long int a, long long int b)\\n    {\\n       if (b == 0)\\n           return a;\\n        return gcd(b, a % b);\\n    }\\n \\n\\t\\n\\t\\n\\t/* HCF(a,b) X LCM(a,b) = a x b */\\n\\t\\n\\t// function to find lcm of two numbers \\n    long long lcm(int a, int b)\\n    {\\n          return (a / gcd(a, b)) * b;\\n    }\\n    \\n    int smallestEvenMultiple(int n) {\\n\\t\\t//smallest common multiple of  2 and n is nothing but lcm (2,n)\\n        return  lcm(2,n) ;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2608475,
                "title": "c-simple-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n%2==0 ? n : n*2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n%2==0 ? n : n*2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2601730,
                "title": "simple-solution-c",
                "content": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n)\\n    {\\n        if(n%2==0&&n%n==0)\\n            return n;\\n        return n*2;\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n)\\n    {\\n        if(n%2==0&&n%n==0)\\n            return n;\\n        return n*2;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2601620,
                "title": "c-easy-bit-manipulation",
                "content": "**For Any Doubt feel free to ask**\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n & 1 ==1){\\n            return n*2;\\n        }\\n        return n;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "Bit Manipulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n & 1 ==1){\\n            return n*2;\\n        }\\n        return n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2600487,
                "title": "smallest-even-multiple",
                "content": "class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int n1;\\n        for (int i = n; i < n*2; i++) {\\n            if( n % 2 == 0){\\n                return n;\\n            }else{\\n\\n            }\\n\\n    }\\n        return n*2;\\n        \\n        \\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int n1;\\n        for (int i = n; i < n*2; i++) {\\n            if( n % 2 == 0){\\n                return n;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2597220,
                "title": "easy-python-solution",
                "content": "```\\ndef smallestEvenMultiple(self, n: int) -> int:\\n        x=2*n\\n        i=2\\n        while (i%n!=0 and i%x!=0):\\n            i+=2\\n        return i\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndef smallestEvenMultiple(self, n: int) -> int:\\n        x=2*n\\n        i=2\\n        while (i%n!=0 and i%x!=0):\\n            i+=2\\n        return i\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2595164,
                "title": "please-upvote-easeiest-approch",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n       if(n%2==1)\\n       {\\n           return (n*2);\\n       }\\n        else\\n            return n;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n       if(n%2==1)\\n       {\\n           return (n*2);\\n       }\\n        else\\n            return n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2593259,
                "title": "only-two-lines-easy-java-solution",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0)    return n;\\n        return n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0)    return n;\\n        return n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2592800,
                "title": "one-line-easy-solution",
                "content": "```\\nreturn n if n % 2 == 0 else n * 2\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nreturn n if n % 2 == 0 else n * 2\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2591469,
                "title": "best-c-solution-2-line-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n&1) return 2*n;\\n        else return n;\\n    \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n&1) return 2*n;\\n        else return n;\\n    \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2590431,
                "title": "short-python-answer-one-line-and-15-characters",
                "content": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return lcm(n,2)",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return lcm(n,2)",
                "codeTag": "Java"
            },
            {
                "id": 2590272,
                "title": "python3-parity",
                "content": "Please pull this [commit](https://github.com/gaosanyong/leetcode/commit/698d76630013c1560b237181c50d25e7bd2715ac) for solutions of weekly 311. \\n\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return ((n&1)+1)*n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return ((n&1)+1)*n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4045850,
                "title": "solution-of-smallest-even-multiple-problem",
                "content": "# **There are two cases:**\\n- if number is even: return number\\n- if number is odd(else): return double number value\\n\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n % 2 == 0:\\n            return n\\n        else:\\n            return n*2\\n        \\n```",
                "solutionTags": [
                    "Python3",
                    "Math",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n % 2 == 0:\\n            return n\\n        else:\\n            return n*2\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3864479,
                "title": "beats-100-java-two-line-code-beginner-friendly-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n\\n- Space complexity: O(n)\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0){\\n            return n;\\n        }\\n        else{\\n            return n*2;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0){\\n            return n;\\n        }\\n        else{\\n            return n*2;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3821039,
                "title": "worst-java-solution",
                "content": "# Intuition:\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach:\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity:\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code:\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2==0?n:n*2);\\n    }\\n}\\n```\\n![unknown.png](https://assets.leetcode.com/users/images/203e162e-17a7-4c19-94a8-18c2526c7e50_1690403997.7022803.png)\\n",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2==0?n:n*2);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3741191,
                "title": "solved-using-python3",
                "content": "Python3 :-\\n\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n % 2 == 0:\\n            return n\\n        else:\\n            return n*2\\n```",
                "solutionTags": [
                    "Python3",
                    "Math",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n % 2 == 0:\\n            return n\\n        else:\\n            return n*2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3698790,
                "title": "one-liner",
                "content": "\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n      return (n%2==0) ? n: 2*n;  \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n      return (n%2==0) ? n: 2*n;  \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3649564,
                "title": "simple-optimised-one-liner-solution-c",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return (n%2==0)?n:2*n;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return (n%2==0)?n:2*n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3614736,
                "title": "100-only-1-line-solution-c-killer-solution-by-sd-upvote-if-you-like-0ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) \\n    {\\n        if(n%2==0)\\n        return n;\\n        else\\n        return n*2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) \\n    {\\n        if(n%2==0)\\n        return n;\\n        else\\n        return n*2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3580950,
                "title": "javascript-oneliner-simplest-solution-o-1-beats-97",
                "content": "# Intuition\\nThe intuition behind this problem is to find the smallest even multiple of the given number n. If n is already an even number, then n itself is the smallest even multiple. Otherwise, we need to multiply n by 2 to get the smallest even multiple.\\n# Approach\\nThe approach to solving this problem is straightforward. We can use a ternary operator to check if n is already an even number (n%2 === 0). If it is, we return n as the smallest even multiple. Otherwise, we return n multiplied by 2 as the smallest even multiple.\\n\\n# Complexity\\n- Time complexity: O(1)\\n- Space complexity: O(1)\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n    return n%2===0?n:n*2\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar smallestEvenMultiple = function(n) {\\n    return n%2===0?n:n*2\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3567751,
                "title": "beats-100-easy-solution-with-explanation-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe problem is asking for the smallest even multiple of a given number n. To find the solution, we can utilize the concept of greatest common divisor (GCD) and the property that the product of two numbers divided by their GCD gives their least common multiple (LCM). Since we are looking for the smallest even multiple, we can simply multiply n by 2 and divide it by the GCD of n and 2.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe approach involves calculating the GCD of n and 2 using the Euclidean algorithm, and then computing the smallest even multiple by multiplying n by 2 and dividing it by the GCD.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of computing the GCD using the Euclidean algorithm is logarithmic in the value of n, so the overall time complexity is O(log n).\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n The space complexity is O(1) since no extra space is required.\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return (n*2)/gcd(n,2);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return (n*2)/gcd(n,2);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3528623,
                "title": "brute-force-and-logic-methods-python3",
                "content": "# Complexity\\n- Time complexity:\\n***$$O(n)$$ and $$O(1)$$***\\n\\n- Space complexity:\\n***$$O(n)$$ and $$O(1)$$***\\n\\n# Code:\\n#### ***Brute Force:***\\n```python [Brute Force]\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        for i in range(n, n*2+1):\\n            if i % n == 0 and i % 2 == 0:\\n                return i \\n```\\n#### ***Logic:***\\n```python [Logic]\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return n * 2 if n % 2 else n\\n```\\n# ***Please upvote for this solution!***\\n",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Math",
                    "Greedy",
                    "Geometry"
                ],
                "code": "```python [Brute Force]\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        for i in range(n, n*2+1):\\n            if i % n == 0 and i % 2 == 0:\\n                return i \\n```\n```python [Logic]\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        return n * 2 if n % 2 else n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3509221,
                "title": "a-new-but-simple-approach-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nAs this was a very simple problem. So using % operator might take more time. That\\'s why i went for bit manipulation.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nIn bit manipulation, if & operation is performed between any number and 1 then the output will be 0 if the number is even otherwise it will be odd.\\nThen after we used simple a ternary operator. It reduces the if-else statement in single line. \\nLike If n&1==0 then n is even so return n else return 2*n.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n0(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n0(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n     return (n & 1)==0?n:n*2;   \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Bit Manipulation"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n     return (n & 1)==0?n:n*2;   \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3477210,
                "title": "easy-java-solution-for-beginners",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int i,a,b,c;\\n       for(i=1;i<=1000000000;i++){\\n          if(i%n==0 && i%2==0)\\n          break;\\n       } \\n      \\nreturn i;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int i,a,b,c;\\n       for(i=1;i<=1000000000;i++){\\n          if(i%n==0 && i%2==0)\\n          break;\\n       } \\n      \\nreturn i;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3362946,
                "title": "very-easy-using-if-else-beginner-cpp",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n       if(n%2==0){\\n       return n ;\\n       }\\n       else \\n       return n*2; \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n       if(n%2==0){\\n       return n ;\\n       }\\n       else \\n       return n*2; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3335635,
                "title": "simple-python-solution-beats-87-6-in-runtime-and-90-3-in-memory",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        i=n\\n        while i>=n:\\n            if i%2==0 and i%n==0:\\n                return i\\n                break\\n            else:\\n                i+=1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        i=n\\n        while i>=n:\\n            if i%2==0 and i%n==0:\\n                return i\\n                break\\n            else:\\n                i+=1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3307963,
                "title": "easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int i = 1;\\n      while(n>0){\\n          if(i%n == 0 && i%2 == 0 ){\\n              return i;\\n          }\\n\\n          i++;\\n      }\\n\\n      return 0;  \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int i = 1;\\n      while(n>0){\\n          if(i%n == 0 && i%2 == 0 ){\\n              return i;\\n          }\\n\\n          i++;\\n      }\\n\\n      return 0;  \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3202339,
                "title": "simple-java-sol-0ms-beats-100",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if (n%2==0) return n;\\n        else return 2*n;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if (n%2==0) return n;\\n        else return 2*n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3179058,
                "title": "fastest-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(!(n%2))\\n            return n;\\n        return n*2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(!(n%2))\\n            return n;\\n        return n*2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3172472,
                "title": "easy-java-solution-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n- $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if((n & 1) == 0)\\n            return n;\\n        else\\n            return 2*n;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if((n & 1) == 0)\\n            return n;\\n        else\\n            return 2*n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3125126,
                "title": "one-liner-beats-100-simple-cpp",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\no(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\no(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return (n%2==0)?n:n*2;\\n        \\n    }\\n};\\n```\\n\\n---\\n\\n**please upvote if helpful**\\n\\n---\\n\\n",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return (n%2==0)?n:n*2;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3124294,
                "title": "beats-79-60-smallest-even-multiple",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        else:\\n            return n*2\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        else:\\n            return n*2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3056947,
                "title": "2413-java-2-approach",
                "content": "# Approach 1\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Runtime : 0 ms\\n- Beats : 100%\\n- Memory : 39.1 MB\\n- Beats : 70.57%\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : n + n;\\n    }\\n}\\n```\\n# Approach 2\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Runtime : 0 ms\\n- Beats : 100%\\n- Memory : 39.1 MB\\n- Beats : 77.57%\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int temp = n;\\n        while(temp % 2 != 0 || temp % n != 0) temp += temp;\\n        return temp;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : n + n;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int temp = n;\\n        while(temp % 2 != 0 || temp % n != 0) temp += temp;\\n        return temp;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3040074,
                "title": "1-line-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n       return (n%2==0)?n:n*2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n       return (n%2==0)?n:n*2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2999383,
                "title": "smallest-even-multiple",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(1)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(1)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return 2*n;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return 2*n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2934220,
                "title": "c-2-line-logic-100-faster",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0)\\n        return n;\\n\\n        else\\n        return n*2;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2==0)\\n        return n;\\n\\n        else\\n        return n*2;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2931525,
                "title": "100-faster-easy-one-liner",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {       \\n        if(n%2==0) //If n is even return as it is\\n          return n;\\n        else\\n        return n*2;//If n is odd return n * 2\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {       \\n        if(n%2==0) //If n is even return as it is\\n          return n;\\n        else\\n        return n*2;//If n is odd return n * 2\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2905381,
                "title": "3-lines-self-explanatory",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2 == 0)\\n            return n;\\n       return n*2;\\n       \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2 == 0)\\n            return n;\\n       return n*2;\\n       \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2851594,
                "title": "c-o-1-solution",
                "content": "Firswst verify if the given number is a multiple of 2\\nif not simply multiply the given number by 2\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if (n % 2 == 0)\\n            return n;\\n        return n * 2;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if (n % 2 == 0)\\n            return n;\\n        return n * 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2828960,
                "title": "c-easy-100-fast",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : n * 2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : n * 2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2819579,
                "title": "only-one-line-solution-c-plus-plus",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2783918,
                "title": "easiest-runtime-0-ms-faster-than-100-00-of-java-online-submissions-just-a-line",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2754968,
                "title": "c-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if (n%2==0){\\n            return n;}\\n        \\n            return n*2;}\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if (n%2==0){\\n            return n;}\\n        \\n            return n*2;}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2744483,
                "title": "easy-and-efficient-way",
                "content": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if (n%2==0)\\n        {\\n            return n;\\n        }\\n        else \\n        {\\n            return n*2;\\n        }\\n        \\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if (n%2==0)\\n        {\\n            return n;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2742289,
                "title": "joke-in-c",
                "content": "```\\n  int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n  int smallestEvenMultiple(int n) {\\n        return n%2==0?n:n*2;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2739712,
                "title": "java-1-liner-easiest-solution",
                "content": "# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n      return n % 2 == 0 ? n : n * 2;   \\n    }\\n}\\n```\\n# PLEASE UPVOTE IF IT WAS HELPFULL",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n      return n % 2 == 0 ? n : n * 2;   \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2718445,
                "title": "java-solution-best-solution",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0) return n;\\n        else return n*2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2699701,
                "title": "short-javascript-solution",
                "content": "Found this solution helpful? Consider showing support by upvoting this post.\\nHave a question? Kindly leave a comment below.\\nThank you and happy hacking!\\n```\\nvar smallestEvenMultiple = function(n) {\\n    let result = 1\\n    while(result % 2 !== 0 || result % n !== 0 ) result ++\\n    return result\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar smallestEvenMultiple = function(n) {\\n    let result = 1\\n    while(result % 2 !== 0 || result % n !== 0 ) result ++\\n    return result\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2697437,
                "title": "smallest-even-multiple",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        int m=0;\\n        if(n%2==0){\\n            m=n/2; //update to smallest \\n        }else{\\n            m=n; //keep same\\n        }\\n        \\n        return 2*m;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        int m=0;\\n        if(n%2==0){\\n            m=n/2; //update to smallest \\n        }else{\\n            m=n; //keep same\\n        }\\n        \\n        return 2*m;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2695591,
                "title": "java-fastest-solution-0ms-100-fast",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        \\n        int a = 0;\\n        if(n%2!=0){\\n            a = n*2;\\n        }\\n        if(n%2==0){ \\n            a = n;\\n        }\\n        return a;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        \\n        int a = 0;\\n        if(n%2!=0){\\n            a = n*2;\\n        }\\n        if(n%2==0){ \\n            a = n;\\n        }\\n        return a;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2690674,
                "title": "smallest-even-multiple",
                "content": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : n * 2;\\n    }\\n};",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : n * 2;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2685670,
                "title": "cpp",
                "content": "```\\n int smallestEvenMultiple(int n) {\\n        int i=n;\\n        while(true)\\n        {\\n            if(i%2==0 && i%n==0)\\n            {\\n            break; \\n            }\\n            i++;\\n           \\n            \\n            \\n            \\n        }\\n       return i;\\n    }",
                "solutionTags": [],
                "code": "```\\n int smallestEvenMultiple(int n) {\\n        int i=n;\\n        while(true)\\n        {\\n            if(i%2==0 && i%n==0)\\n            {\\n            break; \\n            }\\n            i++;\\n           \\n            \\n            \\n            \\n        }\\n       return i;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2683693,
                "title": "one-liner-code-n-or-2n",
                "content": "~~~\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return (n%2)?2*n:n;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return (n%2)?2*n:n;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2676098,
                "title": "simple-solution-with-python-95-faster-and-less-memory-used",
                "content": "# Approach\\njust check number is even, if it is, we can return it without any changes if number is odd we have to multiply number to 2 and return it ! just simple :)\\n\\n# Complexity\\n- Time complexity:  O(1) \\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n % 2 == 0:\\n            return n\\n        return n * 2\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n % 2 == 0:\\n            return n\\n        return n * 2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2670809,
                "title": "bruteforce-solution-in-java",
                "content": "class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        for(int i=1;i<=n*2;i++)\\n        {\\n            if(i%2==0 && i%n==0)\\n                return i;\\n        }\\n return 0;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        for(int i=1;i<=n*2;i++)\\n        {\\n            if(i%2==0 && i%n==0)\\n                return i;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2665080,
                "title": "java-easiest-solution-faster-than-100-online-java-submission-0ms-runtime",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            return n*2;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            return n*2;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2656757,
                "title": "java-easy-solution-0ms",
                "content": "if(n%2==0)\\n                return n;\\n            else\\n                return 2*n;",
                "solutionTags": [],
                "code": "if(n%2==0)\\n                return n;\\n            else\\n                return 2*n;",
                "codeTag": "Unknown"
            },
            {
                "id": 2651505,
                "title": "java-0ms-constant-time-o-1",
                "content": "```\\n  public int smallestEvenMultiple(int n) {\\n        if(n%2==0)\\n            return n;\\n        return n*2;\\n        \\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n  public int smallestEvenMultiple(int n) {\\n        if(n%2==0)\\n            return n;\\n        return n*2;\\n        \\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2642886,
                "title": "2-bit-ops-solution",
                "content": ">  Odd number `n` left shift with `1`  since the lowest bit is `1`.  \\n\\n```rust\\nimpl Solution {\\n    pub fn smallest_even_multiple(n: i32) -> i32 {\\n        n << (n & 1)\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```rust\\nimpl Solution {\\n    pub fn smallest_even_multiple(n: i32) -> i32 {\\n        n << (n & 1)\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2641989,
                "title": "runtime-0-ms-faster-than-100-00-of-java-online-submissions",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0){  //when n is even\\n            return n;\\n        }\\n        return n*2;  //when n is odd\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0){  //when n is even\\n            return n;\\n        }\\n        return n*2;  //when n is odd\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2641274,
                "title": "javascript-easy-solution-100",
                "content": "```const smallestEvenMultiple = n => n % 2 === 0 ? n : n * 2;```",
                "solutionTags": [],
                "code": "```const smallestEvenMultiple = n => n % 2 === 0 ? n : n * 2;```",
                "codeTag": "Unknown"
            },
            {
                "id": 2635865,
                "title": "python-o-n",
                "content": "Time Complexcity O(1)\\nSpace Complexcity O(1)\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n<1 and n<150:\\n            return 0\\n        for i in range(2,300+1,2):\\n            if i%n==0:\\n                return i\\n        \\n        \\n```",
                "solutionTags": [
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n<1 and n<150:\\n            return 0\\n        for i in range(2,300+1,2):\\n            if i%n==0:\\n                return i\\n        \\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2625221,
                "title": "easy-to-understand-python3-brute-force",
                "content": "***Please Upvote If you like the solution***\\n```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        a=2\\n        return n*2//gcd(n,a)\\n    \\n    def gcd(a,b):\\n        if a>b:\\n            temp=b\\n        else:\\n            temp=a\\n            for i in range(1,temp+1):\\n                if ((a%i==0) and (b%i==0)):\\n                    gcd=i\\n            return gcd\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        a=2\\n        return n*2//gcd(n,a)\\n    \\n    def gcd(a,b):\\n        if a>b:\\n            temp=b\\n        else:\\n            temp=a\\n            for i in range(1,temp+1):\\n                if ((a%i==0) and (b%i==0)):\\n                    gcd=i\\n            return gcd\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2620755,
                "title": "javascript-sol",
                "content": "```\\nvar smallestEvenMultiple = function (n) {\\n\\n    for (let i = 1; i > 0; i++) {\\n        let num = n * i;\\n        if ((num % 2) === 0) {\\n            return num;\\n        }\\n    }\\n};",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar smallestEvenMultiple = function (n) {\\n\\n    for (let i = 1; i > 0; i++) {\\n        let num = n * i;\\n        if ((num % 2) === 0) {\\n            return num;\\n        }\\n    }\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 2609380,
                "title": "java-100-faster-1-line-solution",
                "content": "\\n```\\n\\t//The first way\\n    public int smallestEvenMultiple(int n) {\\n        if (n % 2 == 0) {\\n            return n;\\n        } else return n * 2;\\n    }\\n\\t//Second one line approach\\n    public int smallestEvenMultiple2(int n) {\\n        return n % 2 == 0 ? n : n * 2;\\n    }",
                "solutionTags": [],
                "code": "\\n```\\n\\t//The first way\\n    public int smallestEvenMultiple(int n) {\\n        if (n % 2 == 0) {\\n            return n;\\n        } else return n * 2;\\n    }\\n\\t//Second one line approach\\n    public int smallestEvenMultiple2(int n) {\\n        return n % 2 == 0 ? n : n * 2;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2605684,
                "title": "one-liner-code-c-very-very-easy",
                "content": "```\\n return n%2 == 0 ? n: n*2;\\n```",
                "solutionTags": [],
                "code": "```\\n return n%2 == 0 ? n: n*2;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2604483,
                "title": "easy-question",
                "content": "runtime : 0 ms\\n\\n```\\nint smallestEvenMultiple(int n) {\\n        if(n==1){\\n            return 2;\\n            }\\n        for(int i=1;i<n;i++){\\n            int ans = n*i;\\n            if(ans%2==0 and ans%n==0){\\n                return ans;\\n            }\\n        }\\n        return 0;\\n    }\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nint smallestEvenMultiple(int n) {\\n        if(n==1){\\n            return 2;\\n            }\\n        for(int i=1;i<n;i++){\\n            int ans = n*i;\\n            if(ans%2==0 and ans%n==0){\\n                return ans;\\n            }\\n        }\\n        return 0;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2603260,
                "title": "java-100-beats-time-and-o-1-space-and-time",
                "content": "This is the easiest solution with the same fundamental approach as in all other solutions. We can just minimize time by doing **bitwise operations** to check the **parity** of the number rather than using the modulus operator and **left shift operation** instead of multiplying by 2. Multiplication and modulo operations are quite costly as compared to bitwise operations.\\n\\nNote: We could also use the ternary operator instead of if-else to minimize the size of the code, but it has negligible effect on the time/space. And my solution is intended for simplicity not for shortness with complexity.\\n\\nIf odd - multiply the number by 2 and return\\nelse - return the number itself\\n\\nResult:\\n\\n![image](https://assets.leetcode.com/users/images/944b43c1-3e40-4bba-96ca-8e344a55d53b_1663723262.7644374.png)\\n\\n\\nSolution:\\n\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if((n&1)==1)  \\n            return n<<1;\\n        else\\n            return n;\\n    }\\n}\\n```\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if((n&1)==1)  \\n            return n<<1;\\n        else\\n            return n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2602662,
                "title": "java-solution-100-easy-solutio-n",
                "content": "//No comment\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1)==0?n:n*2;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1)==0?n:n*2;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2600786,
                "title": "c-very-easy-solution-faster-than-93",
                "content": "![image](https://assets.leetcode.com/users/images/86c50cf9-5ea8-4156-b8ab-6ecbc5c26922_1663669986.992385.png)\\n\\n**Don\\'t hesitate to suggest or ask bellow about something that you don\\'t understand**\\n\\n```\\npublic class Solution {\\n    public int SmallestEvenMultiple(int n) {\\n        \\n        if (n % 2 != 0)\\n            return n * 2;\\n        return n;\\n    }\\n}\\n```\\n\\nIf you like it don\\'t forget to **upvote!**",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int SmallestEvenMultiple(int n) {\\n        \\n        if (n % 2 != 0)\\n            return n * 2;\\n        return n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2598871,
                "title": "java-solution",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int val = n;\\n        while(true){\\n            if(val%2==0 && val%n==0)return val;\\n            else val+=n;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        int val = n;\\n        while(true){\\n            if(val%2==0 && val%n==0)return val;\\n            else val+=n;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2596963,
                "title": "java-0ms-runtime-easy-and-elegant-solution",
                "content": "```\\nif(n%2==1)\\n\\treturn n*2;\\nreturn n;\\n```\\n\\n**If you have any question, feel free to ask. If you like the solution or the explanation, Please UPVOTE !**",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nif(n%2==1)\\n\\treturn n*2;\\nreturn n;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2596788,
                "title": "java-100-faster-solution",
                "content": "// Kindly Upvote if you like the solution.\\n\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        \\n        //hcf is highest common factor of 2 and n.\\n        int hcf = 1;\\n        \\n        // Calculating hcf\\n        for(int i = 1; i<=2 && i<=n; i++){\\n            if(2%i==0 && n%i==0){\\n                hcf = i;\\n            }\\n        }\\n        \\n        // LCM of 2 numbers a and b is (a*b)/hcf(a,b)\\n        \\n        return (2*n)/hcf;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        \\n        //hcf is highest common factor of 2 and n.\\n        int hcf = 1;\\n        \\n        // Calculating hcf\\n        for(int i = 1; i<=2 && i<=n; i++){\\n            if(2%i==0 && n%i==0){\\n                hcf = i;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2596715,
                "title": "easy-and-efficient-approach",
                "content": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2 != 0){\\n            return n*2;\\n        }\\n        \\n        else{\\n            return n;\\n        }\\n    }\\n};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n%2 != 0){\\n            return n*2;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2594641,
                "title": "with-explanation-comments-time-4-ms-50-00-space-5-7-mb-100-00",
                "content": "**Like it? ->Upvote please!** \\u30C4\\n\\n**Solution 1: Iterative**\\n\\nTC: O(n)   //iterate the array\\nSC: O(1)\\nTime: 5 ms (50.00%), Space: 5.7 MB (100.00%)\\n\\n\\'\\'\\'\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n        //loop over the whole integer values\\n        for(int i=1;i<=INT_MAX;i++)\\n            \\n            //check first if the current value is divisible by 2\\n            if(i%2==0)\\n                //if yes-> then, check if it\\'s divisible by the given n, too\\n                if(i%n==0)\\n                    //if yes-> return the valid i value\\n                    return i;\\n        \\n        //if no, for both two conditions-> return 0\\n        return 0;\\n    }\\n};\\n\\'\\'\\'\\n\\n**Solution2:**\\n\\nTC: O(1)  \\nSC: O(1)\\nTime: 4 ms (50.00%), Space: 5.9 MB (50.00%)\\n\\n\\n\\'\\'\\'\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n        //check if the given value is an even one\\n        if(n%2==0)\\n            //return it-> divisible by 2 & itself\\n            return n;\\n        \\n        else\\n            //if odd-> return its double value, to be even & divisible by the two values\\n            return 2*n;\\n        \\n    }\\n};\\n\\'\\'\\'\\n\\n**Solution3: One Line: Short-Hand if Statement | Logic**\\n\\nTC: O(1)  \\nSC: O(1)\\nTime: 4 ms (50.00%), Space: 5.8 MB (50.00%)\\n\\n\\n\\'\\'\\'\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n\\t\\n        return n*(n%2+1);\\n\\t\\t\\n        //return n%2==0 ? n : n*2;\\n    }\\n};\\n\\'\\'\\'\\n\\n**Like it? ->Upvote please!** \\u30C4\\n**If still not understood, feel free to comment. I will help you out**\\n**Happy Coding :)**",
                "solutionTags": [
                    "C++",
                    "C",
                    "Array",
                    "Math"
                ],
                "code": "class Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n        //loop over the whole integer values\\n        for(int i=1;i<=INT_MAX;i++)\\n            \\n            //check first if the current value is divisible by 2\\n            if(i%2==0)\\n                //if yes-> then, check if it\\'s divisible by the given n, too\\n                if(i%n==0)\\n                    //if yes-> return the valid i value\\n                    return i;\\n        \\n        //if no, for both two conditions-> return 0\\n        return 0;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2594282,
                "title": "c-bitwise-no-ternary-100-time-0ms-50-space-5-9mb",
                "content": "Basically the problem boils down to doubling the number when it is odd; you might be tempted to do so using something like `n % 2 == 0` and then `n * 2`, in case (with a ternary operator to wrap it up, but we can do better.\\n\\nAnd we will do so doing `n & 1` to check if the number is odd and in case shifting it left by `1`; we can do it all in one go, remembering bitwise operator precedence and thus `return`ing `n << (n & 1)`.\\n\\nThe code:\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n << (n & 1);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n << (n & 1);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2594108,
                "title": "smallest-even-multiple-lcm-of-two-no-gcd-method",
                "content": "```\\nint gcd(int a ,int b)\\n    {\\n        if(b==0)return a;\\n        return gcd(b,a%b);\\n    }\\n    int smallestEvenMultiple(int n) \\n    {\\n        int g = gcd(n,2);\\n        return (n*2)/g;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\nint gcd(int a ,int b)\\n    {\\n        if(b==0)return a;\\n        return gcd(b,a%b);\\n    }\\n    int smallestEvenMultiple(int n) \\n    {\\n        int g = gcd(n,2);\\n        return (n*2)/g;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2593444,
                "title": "c-gcd-simplest-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n        int a = __gcd(n,2);\\n        if(a!=1)\\n            return n;\\n        return 2*n;\\n        \\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        \\n        int a = __gcd(n,2);\\n        if(a!=1)\\n            return n;\\n        return 2*n;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2593376,
                "title": "odd-or-even-c-o-1",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n&1)return n*2;\\n        return n;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        if(n&1)return n*2;\\n        return n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2592552,
                "title": "python-easy-solution",
                "content": "\\tclass Solution:\\n\\t\\tdef smallestEvenMultiple(self, n: int) -> int:\\n\\t\\t\\tif n % 2==0:\\n\\t\\t\\t\\treturn n\\n\\t\\t\\telse:\\n\\t\\t\\t\\treturn n*2",
                "solutionTags": [],
                "code": "\\tclass Solution:\\n\\t\\tdef smallestEvenMultiple(self, n: int) -> int:\\n\\t\\t\\tif n % 2==0:\\n\\t\\t\\t\\treturn n\\n\\t\\t\\telse:\\n\\t\\t\\t\\treturn n*2",
                "codeTag": "Java"
            },
            {
                "id": 2592355,
                "title": "c-one-line-code-100-fastest",
                "content": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n%2==0 ? n : 2*n;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int smallestEvenMultiple(int n) {\\n        return n%2==0 ? n : 2*n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2592038,
                "title": "rust-solutions",
                "content": "1. Simple match\\n```\\nimpl Solution {\\n    pub fn smallest_even_multiple(n: i32) -> i32 {\\n        match n % 2 {\\n            1 => n * 2,\\n            _ => n,\\n        }\\n    }\\n}\\n```\\n\\n2. One-liner\\n```\\nimpl Solution {\\n    pub fn smallest_even_multiple(n: i32) -> i32 {\\n        n << (n & 1)\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust",
                    "Math",
                    "Bit Manipulation"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn smallest_even_multiple(n: i32) -> i32 {\\n        match n % 2 {\\n            1 => n * 2,\\n            _ => n,\\n        }\\n    }\\n}\\n```\n```\\nimpl Solution {\\n    pub fn smallest_even_multiple(n: i32) -> i32 {\\n        n << (n & 1)\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2591880,
                "title": "java-beats-100-0-ms-solution-o-1-simple-solution",
                "content": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        \\n        if(n%2 == 0 )\\n            return n;\\n        else \\n            return n*2;\\n        \\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        \\n        if(n%2 == 0 )\\n            return n;\\n        else \\n            return n*2;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2591851,
                "title": "java-solution-0ms-runtime-faster-than-100-1-liner",
                "content": "```java \\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n       return n%2==0? n:2*n;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int smallestEvenMultiple(int n) {\\n       return n%2==0? n:2*n;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2591831,
                "title": "java-100-fastest-easiest-o-1",
                "content": "![image](https://assets.leetcode.com/users/images/104743d7-398d-41a5-b495-2b2f165c5daa_1663488665.8077278.png)\\n\\n```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0)return n;\\n        return n<<1;\\n    }\\n}\\n```\\n`---------------------------------------------------------PLEASE UPVOTE IF YOU LIKE!!----------------------------------------------------------\\u2014`",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        if(n%2==0)return n;\\n        return n<<1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1633090,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1965756,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1884748,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1741207,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1719418,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 2059367,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1794499,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1734168,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1720204,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1701627,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1633090,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1965756,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1884748,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1741207,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1719418,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 2059367,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1794499,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1734168,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1720204,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            },
            {
                "id": 1701627,
                "content": [
                    {
                        "username": "K_Vamshikrishna",
                        "content": "if the numer is even then the output is input . if the input is odd then the output is 2* input\\n"
                    },
                    {
                        "username": "portfedh",
                        "content": "Thanks for framing the problem this way. Its very helpful."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "Solving leet problems != trying to understand what the author imagined in his head, but poorly stated. \\nIt has nothing to do with programming! \\nIf you are a freelancer and are used to that, it still has nothing to do with programming."
                    },
                    {
                        "username": "Bablu888",
                        "content": "exactly im also facing same problem "
                    },
                    {
                        "username": "dmitryartux",
                        "content": "**Too easy, next....**"
                    },
                    {
                        "username": "shashwat1712",
                        "content": " `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n%2!=0)?n*2:n;\\n    }\\n}\\n`\\nThis Solution works, But can anyone explain why below solution does not work. I tried using bit Manipulation.\\n `\\nclass Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return (n&1!=0)?n*2:n;\\n    }\\n}\\n`"
                    },
                    {
                        "username": "shashwat1712",
                        "content": "[@NoiseCake](/NoiseCake) yes thank you i figured it out way before but thanks for help"
                    },
                    {
                        "username": "NoiseCake",
                        "content": "In the expression n&1!=0, the inequality != has higher precedence than the bitwise AND &. try to use brackets"
                    },
                    {
                        "username": "ravi_r",
                        "content": "try this syntax  class Solution { public int smallestEvenMultiple(int n) {  return ((n&1)!=0)?n*2:n;}}"
                    },
                    {
                        "username": "chandra_var",
                        "content": "but your code is working in my case,  you have done some syntax errors:\nwrite it like this:\nclass Solution { public: int smallestEvenMultiple(int n) { return (n&1!=0)?n*2:n; } };"
                    },
                    {
                        "username": "suyashgiri2001",
                        "content": "class Solution:\\n    def smallestEvenMultiple(self, n: int) -> int:\\n        if n%2==0:\\n            return n\\n        s=2*n\\n        return s"
                    },
                    {
                        "username": "rishavranjan1821",
                        "content": "They are asking you L.C.M of only two numbers 2 and n."
                    },
                    {
                        "username": "omdhyawarneniwar23",
                        "content": "If the given number is even then simply returns the number itself,else if the number is odd then return 2*given number."
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "simple c++.......\\nint smallestEvenMultiple(int n) {\\n        if(n%2 == 0){\\n            return n;\\n        }\\n        else{\\n            int i = n+1;\\n            while(true){\\n                if(i%2 == 0 and i%n == 0){\\n                    return i;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n    }"
                    },
                    {
                        "username": "vk970097",
                        "content": "`class Solution {\\n    public int smallestEvenMultiple(int n) {\\n        return n % 2 == 0 ? n : 2*n ;\\n    }\\n}`"
                    },
                    {
                        "username": "ankit_049",
                        "content": "hint - is there we can easily do o(1) space and time Complexity with the use of Bit Manipulation \\noperator use: { &  ,  << };"
                    }
                ]
            }
        ]
    }
]