[
    {
        "title": "Calculate Delayed Arrival Time",
        "question_content": "You are given a positive integer arrivalTime denoting the arrival time of a train in hours, and another positive integer delayedTime denoting the amount of delay in hours.\nReturn the time when the train will arrive at the station.\nNote that the time in this problem is in 24-hours format.\n&nbsp;\nExample 1:\n\nInput: arrivalTime = 15, delayedTime = 5 \nOutput: 20 \nExplanation: Arrival time of the train was 15:00 hours. It is delayed by 5 hours. Now it will reach at 15+5 = 20 (20:00 hours).\n\nExample 2:\n\nInput: arrivalTime = 13, delayedTime = 11\nOutput: 0\nExplanation: Arrival time of the train was 13:00 hours. It is delayed by 11 hours. Now it will reach at 13+11=24 (Which is denoted by 00:00 in 24 hours format so return 0).\n\n&nbsp;\nConstraints:\n\n\t1 <= arrivaltime <&nbsp;24\n\t1 <= delayedTime <= 24",
        "solutions": [
            {
                "id": 3446050,
                "title": "one-liner-using-modulo-24-very-simple-easy-to-understand-solution",
                "content": "<b>Up vote if you like the solution\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime)%24;\\n    }\\n};\\n```\\n<b> Here is an article of my recent interview experience - A Journey to FAANG Company, I recomand you to go through this to know which all resources I have used & how I cracked interview at Amazon:\\nhttps://leetcode.com/discuss/interview-experience/3171859/Journey-to-a-FAANG-Company-Amazon-or-SDE2-(L5)-or-Bangalore-or-Oct-2022-Accepted",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446040,
                "title": "leetcode-the-hard-way-one-line",
                "content": "```cpp\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n};\\n```\\n\\n```py\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```\\n\\n```java\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n};\\n```\n```py\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```\n```java\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445952,
                "title": "easiest-best-solution-in-3-lines-time-o-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int b) {\\n        return (a+b)%24;\\n        //     Or\\n        // if(a+b>=24) return (a+b)-24;\\n        // else return a+b;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int b) {\\n        return (a+b)%24;\\n        //     Or\\n        // if(a+b>=24) return (a+b)-24;\\n        // else return a+b;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445669,
                "title": "simple-java-solution",
                "content": "\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int aT, int dT) {\\n        return (aT+dT)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int aT, int dT) {\\n        return (aT+dT)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446380,
                "title": "c-python-o-1-time-and-space",
                "content": "\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# C++\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int at, int dt) {\\n        int arrive = at + dt;\\n        return arrive >= 24 ? arrive - 24 : arrive;\\n    }\\n};\\n```\\n\\n# Python / Python 3\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, at: int, dt: int) -> int:\\n        arrive = at + dt\\n        if arrive >= 24:\\n            return arrive - 24\\n        return arrive\\n```",
                "solutionTags": [
                    "C++",
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int at, int dt) {\\n        int arrive = at + dt;\\n        return arrive >= 24 ? arrive - 24 : arrive;\\n    }\\n};\\n```\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, at: int, dt: int) -> int:\\n        arrive = at + dt\\n        if arrive >= 24:\\n            return arrive - 24\\n        return arrive\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3492584,
                "title": "c-math-retuen-a-b-24",
                "content": "# Complexity\\n- Time complexity:\\no(1)\\n\\n- Space complexity:\\n(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        return (a+b)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        return (a+b)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3488470,
                "title": "python-go-easy-solution",
                "content": "# Python\\u2705\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n            return (arrivalTime + delayedTime)%24\\n}\\n```\\n# Go\\u2705\\n```\\nfunc findDelayedArrivalTime(arrivalTime int, delayedTime int) int {\\n    return (arrivalTime+delayedTime)%24\\n}\\n```",
                "solutionTags": [
                    "Python3",
                    "Go",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n            return (arrivalTime + delayedTime)%24\\n}\\n```\n```\\nfunc findDelayedArrivalTime(arrivalTime int, delayedTime int) int {\\n    return (arrivalTime+delayedTime)%24\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469224,
                "title": "simple-one-line-solution",
                "content": "\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 3445936,
                "title": "python3-solution",
                "content": "\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime+delayedTime)%24\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime+delayedTime)%24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3592642,
                "title": "very-easy-java-solution-beats-100-runtime-0ms",
                "content": "# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int arriveAt = arrivalTime + delayedTime;\\n        if(arriveAt >= 24) return (arriveAt - 24);\\n        else return arriveAt;\\n    }\\n}\\n```\\n\\nPlease upvote if you like the solution.\\nHappy Coding! \\uD83D\\uDE0A",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int arriveAt = arrivalTime + delayedTime;\\n        if(arriveAt >= 24) return (arriveAt - 24);\\n        else return arriveAt;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3545787,
                "title": "java-just-2-line-and-that-s-it",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime >= 24) return Math.abs((arrivalTime+delayedTime) - 24);\\n        return arrivalTime+delayedTime;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime >= 24) return Math.abs((arrivalTime+delayedTime) - 24);\\n        return arrivalTime+delayedTime;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446023,
                "title": "javascript-2651-calculate-delayed-arrival-time",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n\\n1\\n```\\nvar findDelayedArrivalTime = function (arrivalTime, delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n};\\n```\\n\\n---\\n\\n**Contest**\\n- https://leetcode.com/contest/weekly-contest-342/ranking/67/\\n\\n**All Answers**\\n- **Q1** - https://leetcode.com/problems/calculate-delayed-arrival-time/solutions/3446023/javascript-2651-calculate-delayed-arrival-time/?orderBy=most_votes\\n- **Q2** - https://leetcode.com/problems/sum-multiples/solutions/3446027/javascript-2652-sum-multiples/?orderBy=most_votes\\n- **Q3** - https://leetcode.com/problems/sliding-subarray-beauty/solutions/3446035/javascript-2653-sliding-subarray-beauty/?orderBy=most_votes\\n- **Q4** - https://leetcode.com/problems/minimum-number-of-operations-to-make-all-array-elements-equal-to-1/solutions/3446411/javascript-2654-minimum-number-of-operations-to-make-all-array-elements-equal-to-1/?orderBy=most_votes\\n\\n---\\n\\n![image.png](https://assets.leetcode.com/users/images/37970e7b-b559-4aa9-834c-e178df5ddaa7_1682232917.7638698.png)\\n\\n---\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar findDelayedArrivalTime = function (arrivalTime, delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3445855,
                "title": "two-liner-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nAns is totalTime%24.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Find total time and return totaltime % 24.\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\n       int time=arrivalTime+delayedTime;\\n        return time%24;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\n       int time=arrivalTime+delayedTime;\\n        return time%24;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445660,
                "title": "java-one-liner",
                "content": "# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n  }\\n}\\n```\\nIf you like my solution, please upvote it!",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n  public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3478275,
                "title": "1-liner-c-100-faster",
                "content": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3447662,
                "title": "c-easy-approach",
                "content": "Here is my c++ code for this problem.\\n\\n# Complexity\\n- Time complexity:$$O(1)$$\\n\\n- Space complexity:$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        return (a+d)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        return (a+d)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3447038,
                "title": "c-oneliner",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nTypical modulo arithmetic problem.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nA simple formula\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(1)$$\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n$$O(1)$$\\n\\n# Code\\n```\\npublic class Solution {\\n    public int FindDelayedArrivalTime(int arrivalTime, int delayedTime) => \\n      (arrivalTime + delayedTime) % 24;    \\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int FindDelayedArrivalTime(int arrivalTime, int delayedTime) => \\n      (arrivalTime + delayedTime) % 24;    \\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446669,
                "title": "100-fast-and-space-optimized-c-1-liner",
                "content": "# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrival, int delay) {\\n        return (arrival+delay)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Design"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrival, int delay) {\\n        return (arrival+delay)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446085,
                "title": "1line-c",
                "content": "````\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        return (a+b)%24;\\n    }\\n};\\n````",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "````\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        return (a+b)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446053,
                "title": "easy-and-simplest-c-approach-1-line-code",
                "content": "# Intuition\\n sum of arrival and delayed time was done and remainder of sum is returned \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$ \\n- Space complexity:\\n$$O(1)$$\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int sum = arrivalTime + delayedTime ;\\n                return sum % 24 ;\\n \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int sum = arrivalTime + delayedTime ;\\n                return sum % 24 ;\\n \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445791,
                "title": "c-well-explained-1-line-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445703,
                "title": "one-line-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445682,
                "title": "java-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arr, int del) {\\n        return (arr+del)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arr, int del) {\\n        return (arr+del)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4097910,
                "title": "solution-of-calculate-delayed-arrival-time-problem",
                "content": "# Approach\\n- The problem of availability of 24 hours is solved using %\\n\\n# Complexity\\n- Time complexity:\\nO(1) - as, no functions were called\\n\\n- Space complexity:\\nO(1) - as, no extra space is required.\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3966648,
                "title": "easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n      int a=arrivalTime+delayedTime;\\n      return a%24;\\n       \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n      int a=arrivalTime+delayedTime;\\n      return a%24;\\n       \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3865349,
                "title": "java-one-liner-0ms-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3748908,
                "title": "one-liner",
                "content": "\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return ((arrivalTime+delayedTime)%24);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return ((arrivalTime+delayedTime)%24);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3710960,
                "title": "super-easy-simpe-great-best-start-good-solution-in-js-d",
                "content": "\\n# Code\\n```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function(arrivalTime, delayedTime) {\\n    let time = arrivalTime + delayedTime\\n    return time >= 24 ? time - 24 : time\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function(arrivalTime, delayedTime) {\\n    let time = arrivalTime + delayedTime\\n    return time >= 24 ? time - 24 : time\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3710748,
                "title": "calculate-delayed-arrival-time-java-solution-code",
                "content": "# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int time = 24;\\n        int temp_time = arrivalTime + delayedTime;\\n        if(temp_time > time){\\n            temp_time = temp_time % time;\\n            return temp_time;\\n        }\\n        else if(time > temp_time){\\n            return temp_time;\\n        }\\n        return 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int time = 24;\\n        int temp_time = arrivalTime + delayedTime;\\n        if(temp_time > time){\\n            temp_time = temp_time % time;\\n            return temp_time;\\n        }\\n        else if(time > temp_time){\\n            return temp_time;\\n        }\\n        return 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3651228,
                "title": "beats-in-runtime-and-97-beats-in-memory-usage-easy-solution-with-one-line-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3590637,
                "title": "actual-one-liner-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nDay resets at 24.So the count gets set back to 0 upon time>=24;\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nIf delay==24 we reset it 0. Delay caps at 24,so simply mod 24 works.\\nNow for the final time,it is just addition but we will reset to 0 after 23.\\nThus,we again with mod 24 over the final sum.\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution \\n{\\n    public:\\n        int findDelayedArrivalTime(int a,int d) \\n        {\\n            return (a+(d%24))%24;\\n        }   \\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution \\n{\\n    public:\\n        int findDelayedArrivalTime(int a,int d) \\n        {\\n            return (a+(d%24))%24;\\n        }   \\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3533404,
                "title": "simplest-efficient-1-liner-c-code-time-o-1-space-o-1",
                "content": "# Intuition\\nThe problem asks for finding the delayed arrival time given the original arrival time and the amount of delay. We need to consider the possibility of the arrival time crossing midnight (i.e., going beyond 24 hours).\\n\\n# Approach\\nTo solve this problem, we can use the modulus operator (%), which calculates the remainder when the arrival time and delayed time are divided by 24. This operation ensures that the result is always within the range of 0 to 23, representing the hours of a day. By adding the arrival time and delayed time together and then taking the modulus 24, we can find the delayed arrival time.\\n\\nFor example, if the arrival time is 20 (8 PM) and the delayed time is 6, adding them together gives us 26. Taking the modulus 24 of 26, we get 2, which represents 2 AM, indicating the delayed arrival time.\\n\\n# Complexity\\n- Time complexity: The time complexity of this approach is $O(1)$ since it only involves a simple calculation and a modulus operation, which are constant time operations.\\n\\n- Space complexity: The space complexity is also $O(1)$ as there is no additional space used apart from the return value.\\n\\n# Code\\n```\\nint findDelayedArrivalTime(int arrivalTime, int delayedTime){\\n    return (arrivalTime + delayedTime)%24;}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint findDelayedArrivalTime(int arrivalTime, int delayedTime){\\n    return (arrivalTime + delayedTime)%24;}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3479012,
                "title": "c-easy-solution-simple-maths",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n      \\n        int sum=arrivalTime+delayedTime;\\n\\n        if(sum==24){\\n            sum=0;\\n        }\\n        else if(sum>24){\\n            sum=sum-24;\\n        }\\n   return sum; }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n      \\n        int sum=arrivalTime+delayedTime;\\n\\n        if(sum==24){\\n            sum=0;\\n        }\\n        else if(sum>24){\\n            sum=sum-24;\\n        }\\n   return sum; }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3463571,
                "title": "easy-1-liner-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        int x = (a+b);\\n        return x%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        int x = (a+b);\\n        return x%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3453891,
                "title": "simple-way-to-find-out-time-using-c",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrival, int delayed) {\\n        \\n        int time =0;\\n   if(arrival + delayed >=24)\\n       return ( arrival + delayed - 24);\\n\\n       else{\\n           time = arrival + delayed;\\n       }\\n     \\n        return time;\\n  \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrival, int delayed) {\\n        \\n        int time =0;\\n   if(arrival + delayed >=24)\\n       return ( arrival + delayed - 24);\\n\\n       else{\\n           time = arrival + delayed;\\n       }\\n     \\n        return time;\\n  \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3453850,
                "title": "beats-100-simple-ready-to-begin-question-in-cpp-language",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nAs we can see we have to convert total time taken by train ie(arrivalTime + delayedTime)in 24 hour format. We calculate total time and if it is greater than 23 then take mod 24 of that time and return it.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int time=arrivalTime+delayedTime;\\n        if(time>23){\\n        time=time%24;}\\n        return time;\\n       \\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int time=arrivalTime+delayedTime;\\n        if(time>23){\\n        time=time%24;}\\n        return time;\\n       \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3449994,
                "title": "one-liner-code-in-java-python-c",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nIt adds the delayed time to the arrival time, and then calculates the modulo 24.\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```JAVA []\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n```\\n```python []\\ndef findDelayedArrivalTime(arrivalTime, delayedTime):\\n    return (arrivalTime + delayedTime) % 24\\n\\n```\\n```C++ []\\nint findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n}\\n\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python"
                ],
                "code": "```JAVA []\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n```\n```python []\\ndef findDelayedArrivalTime(arrivalTime, delayedTime):\\n    return (arrivalTime + delayedTime) % 24\\n\\n```\n```C++ []\\nint findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n}\\n\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3447596,
                "title": "easiest-one-line-solution-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int at, int dt) {\\n         return (at + dt) %24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int at, int dt) {\\n         return (at + dt) %24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3447112,
                "title": "learn-maths-ye-nahi-dekha-to-kya-dekha",
                "content": "# Intuition\\n```AGAR YE BHI NAHI HUA TO BHAI APKO CODING BADME SIKHNI HAI FIRST LEARN BASICS OF MATHEMATICS. (NO NEED TO OFFEND JUST KIDDING \\uD83E\\uDD71\\uD83D\\uDE25\\uD83D\\uDE1E)```\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        return (a+d)%24;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```AGAR YE BHI NAHI HUA TO BHAI APKO CODING BADME SIKHNI HAI FIRST LEARN BASICS OF MATHEMATICS. (NO NEED TO OFFEND JUST KIDDING \\uD83E\\uDD71\\uD83D\\uDE25\\uD83D\\uDE1E)```\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        return (a+d)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446862,
                "title": "one-liner-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        return (a + b) % 24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        return (a + b) % 24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446651,
                "title": "python3-simple-one-line",
                "content": "Just sum the arrivalTime and the delayedTime and check if the sum is outside the limits of 24.\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return arrivalTime + delayedTime if arrivalTime + delayedTime < 24 else arrivalTime + delayedTime - 24\\n```\\nor shorter version using **mod**:\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return arrivalTime + delayedTime if arrivalTime + delayedTime < 24 else arrivalTime + delayedTime - 24\\n```\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446635,
                "title": "easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans=arrivalTime+delayedTime;\\n        if(ans>=24){\\n            return ans-24;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans=arrivalTime+delayedTime;\\n        if(ans>=24){\\n            return ans-24;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446531,
                "title": "java-super-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans=arrivalTime+delayedTime;\\n        if(ans>=24){\\n            return ans-24;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans=arrivalTime+delayedTime;\\n        if(ans>=24){\\n            return ans-24;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446119,
                "title": "easy-c-1-line-code-beats-100-time",
                "content": "\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445953,
                "title": "simple-logic-c-no-need-of-modulo-operator",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\nint findDelayedArrivalTime(int arrivalTime, int delayedTime)\\n{\\n    if (arrivalTime + delayedTime < 24)\\n    {\\n        return arrivalTime + delayedTime;\\n    }\\n    else\\n    {\\n        return arrivalTime + delayedTime - 24;\\n    }\\n}\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\nint findDelayedArrivalTime(int arrivalTime, int delayedTime)\\n{\\n    if (arrivalTime + delayedTime < 24)\\n    {\\n        return arrivalTime + delayedTime;\\n    }\\n    else\\n    {\\n        return arrivalTime + delayedTime - 24;\\n    }\\n}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445935,
                "title": "c-one-line-code",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n      \\n        return (a+d)%24;;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n      \\n        return (a+d)%24;;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445714,
                "title": "python3-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        if arrivalTime + delayedTime == 24: return 0\\n        elif arrivalTime + delayedTime > 24: return abs(24 - (arrivalTime + delayedTime))\\n        else: return arrivalTime + delayedTime\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        if arrivalTime + delayedTime == 24: return 0\\n        elif arrivalTime + delayedTime > 24: return abs(24 - (arrivalTime + delayedTime))\\n        else: return arrivalTime + delayedTime\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445676,
                "title": "c-a-d-24",
                "content": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        return (a+d)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        return (a+d)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4101341,
                "title": "java-one-line-solution-beats-100",
                "content": "# Approach\\nJust simply using modulo to get the remainder, which is the answer.\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4100994,
                "title": "simple-and-easy-to-understand-java-solution-2liner",
                "content": "\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int actualTime = arrivalTime + delayedTime;\\n        return actualTime%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int actualTime = arrivalTime + delayedTime;\\n        return actualTime%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4092377,
                "title": "3line-answer",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n      int time=arrivalTime+delayedTime;\\n      if(time>=24){\\n          return time%24;\\n      }  else return time;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n      int time=arrivalTime+delayedTime;\\n      if(time>=24){\\n          return time%24;\\n      }  else return time;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4089448,
                "title": "0-ms-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4085284,
                "title": "best-java-solution-for-beginners-beats-100",
                "content": "**UP VOTE IF YOU LIKE IT**\\n# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int val=arrivalTime+delayedTime;\\n        if(val<=23){\\n            return val;\\n        }\\n        else{\\n            int val2=val-24;\\n            if (val==24){\\n                return 0;\\n            }\\n            return val2;\\n        }\\n        \\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int val=arrivalTime+delayedTime;\\n        if(val<=23){\\n            return val;\\n        }\\n        else{\\n            int val2=val-24;\\n            if (val==24){\\n                return 0;\\n            }\\n            return val2;\\n        }\\n        \\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4082219,
                "title": "php-solution",
                "content": "\\n# Code\\n```\\nclass Solution {\\n\\n    /**\\n     * @param Integer $arrivalTime\\n     * @param Integer $delayedTime\\n     * @return Integer\\n     */\\n    function findDelayedArrivalTime($arrivalTime, $delayedTime) {\\n        $result = $arrivalTime + $delayedTime;\\n        // return $result;\\n        if($result == \\'24\\'){\\n          return \\'0\\';\\n        }else if($result > \\'24\\'){\\n         return  $result - \\'24\\';\\n        }\\n        return $result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "PHP"
                ],
                "code": "```\\nclass Solution {\\n\\n    /**\\n     * @param Integer $arrivalTime\\n     * @param Integer $delayedTime\\n     * @return Integer\\n     */\\n    function findDelayedArrivalTime($arrivalTime, $delayedTime) {\\n        $result = $arrivalTime + $delayedTime;\\n        // return $result;\\n        if($result == \\'24\\'){\\n          return \\'0\\';\\n        }else if($result > \\'24\\'){\\n         return  $result - \\'24\\';\\n        }\\n        return $result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4080215,
                "title": "c-python-easiest-solution-ever-t-c-o-1-s-c-o-1",
                "content": "# Complexity\\n- Time complexity:$$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n``` C++ []\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int aT, int dT) {\\n        return (aT + dT)%24;\\n    }\\n};\\n```\\n``` Python []\\nclass Solution:\\n    def findDelayedArrivalTime(self, aT: int, dT: int) -> int:\\n        return (aT + dT)%24\\n```",
                "solutionTags": [
                    "C++",
                    "Python3"
                ],
                "code": "``` C++ []\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int aT, int dT) {\\n        return (aT + dT)%24;\\n    }\\n};\\n```\n``` Python []\\nclass Solution:\\n    def findDelayedArrivalTime(self, aT: int, dT: int) -> int:\\n        return (aT + dT)%24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4077356,
                "title": "0ms-solution-one-line-of-code",
                "content": "# Intuition\\n<!-- At first glance I thought that I was going to need a way to wrap around back to 0 after the total time reaches 24 -->\\n\\n# Approach\\n<!-- I first needed to add the two times. Once I did that I needed a way to have all times over 24h be reset back to 0. I found that the modulo operation best performed this and would allow me to output everything in one line -->\\n\\n# Time and Space\\n- Runtime: 0 ms\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Memory Used: 39.12 \\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        //adding the arrival time and the delayed time together then modulo-ing that by 24. This allows any time over 24h to be reset back to 0. (Ex: 25%24 = 1 | 40%24 = 16 )\\n        return (arrivalTime + delayedTime)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        //adding the arrival time and the delayed time together then modulo-ing that by 24. This allows any time over 24h to be reset back to 0. (Ex: 25%24 = 1 | 40%24 = 16 )\\n        return (arrivalTime + delayedTime)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4077123,
                "title": "very-basic-java-soln-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4072086,
                "title": "swift-runtime-beating-100-upvote-if-helpful",
                "content": "# Intuition\\nTo calculate the actual time when the train had arrived.\\n\\n# Approach\\nMathematical\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$\\n\\n\\n# Code\\n```\\nclass Solution {\\n    func findDelayedArrivalTime(_ arrivalTime: Int, _ delayedTime: Int) -> Int {\\n        // 24 or 48 hours mean 0 (i.e. 00:00 in time standards)\\n        if(arrivalTime + delayedTime == 24 || arrivalTime + delayedTime == 48){\\n            return 0\\n        }\\n        if(arrivalTime + delayedTime < 24){\\n            return arrivalTime + delayedTime\\n        }\\n        // when the time is greater than 24 but less than 48 hours\\n        if(arrivalTime + delayedTime > 24 && arrivalTime + delayedTime < 48) {\\n            return arrivalTime + delayedTime - 24\\n        }\\n        return arrivalTime + delayedTime\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    func findDelayedArrivalTime(_ arrivalTime: Int, _ delayedTime: Int) -> Int {\\n        // 24 or 48 hours mean 0 (i.e. 00:00 in time standards)\\n        if(arrivalTime + delayedTime == 24 || arrivalTime + delayedTime == 48){\\n            return 0\\n        }\\n        if(arrivalTime + delayedTime < 24){\\n            return arrivalTime + delayedTime\\n        }\\n        // when the time is greater than 24 but less than 48 hours\\n        if(arrivalTime + delayedTime > 24 && arrivalTime + delayedTime < 48) {\\n            return arrivalTime + delayedTime - 24\\n        }\\n        return arrivalTime + delayedTime\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4056843,
                "title": "100-beats-0ms-1-line-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n           \\n               return  (arrivalTime+delayedTime)%24;\\n           \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n           \\n               return  (arrivalTime+delayedTime)%24;\\n           \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4050730,
                "title": "java-so-lution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4042710,
                "title": "simple-straight-forward-without-any-optimisation",
                "content": "# Intuition\\nIt\\'s a very simple problem, use reminder of 24 to get hours\\n\\n# Approach\\nBrute force approach\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    fun findDelayedArrivalTime(arrivalTime: Int, delayedTime: Int): Int {\\n        var time = arrivalTime + delayedTime\\n\\n        time = time % 24\\n\\n        return time\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun findDelayedArrivalTime(arrivalTime: Int, delayedTime: Int): Int {\\n        var time = arrivalTime + delayedTime\\n\\n        time = time % 24\\n\\n        return time\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4036292,
                "title": "2-lines-solution",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int res = (arrivalTime + delayedTime);\\n        return res % 24 ;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int res = (arrivalTime + delayedTime);\\n        return res % 24 ;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4027381,
                "title": "simplest-code-0ms-runtime",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) \\n    {\\n     \\n      int sum = arrivalTime + delayedTime;\\n       if(sum >= 24)\\n       {\\n           sum -= 24;  // sum = sum - 24\\n       }  \\n       return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) \\n    {\\n     \\n      int sum = arrivalTime + delayedTime;\\n       if(sum >= 24)\\n       {\\n           sum -= 24;  // sum = sum - 24\\n       }  \\n       return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4023884,
                "title": "beginner-friendly-python-runtime-8ms-beats-96-5",
                "content": "# Complexity\\n- Time complexity:\\nRuntime 8ms || Beats 96.5%\\n\\n- Space complexity:\\nMemory 13.2MB || Beats 39.13%\\n\\n# Code\\n```\\nclass Solution(object):\\n    def findDelayedArrivalTime(self, arrivalTime, delayedTime):\\n        return (arrivalTime + delayedTime) % 24\\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def findDelayedArrivalTime(self, arrivalTime, delayedTime):\\n        return (arrivalTime + delayedTime) % 24\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4022072,
                "title": "easiest-solution",
                "content": "# Code\\n```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function(arrivalTime, delayedTime) {\\n    return (arrivalTime + delayedTime) % 24\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function(arrivalTime, delayedTime) {\\n    return (arrivalTime + delayedTime) % 24\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4014498,
                "title": "solution-using-python",
                "content": "# Complexity\\n- Time complexity: 9ms\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: 13.30MB\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def findDelayedArrivalTime(self, arrivalTime, delayedTime):\\n        \"\"\"\\n        :type arrivalTime: int\\n        :type delayedTime: int\\n        :rtype: int\\n        \"\"\"\\n        res = arrivalTime + delayedTime\\n        res1 = res%24\\n        if res <= 24:\\n            if res1!=0:\\n                return res\\n            elif res1==0:\\n                return 0\\n        elif res <= 47:\\n            res1 = res1%24\\n            return res1\\n        else:\\n            return 0\\n\\n\\n\\n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def findDelayedArrivalTime(self, arrivalTime, delayedTime):\\n        \"\"\"\\n        :type arrivalTime: int\\n        :type delayedTime: int\\n        :rtype: int\\n        \"\"\"\\n        res = arrivalTime + delayedTime\\n        res1 = res%24\\n        if res <= 24:\\n            if res1!=0:\\n                return res\\n            elif res1==0:\\n                return 0\\n        elif res <= 47:\\n            res1 = res1%24\\n            return res1\\n        else:\\n            return 0\\n\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4008143,
                "title": "python-simple-solution-math",
                "content": "# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```python\\nclass Solution:\\n  def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n    return (arrivalTime + delayedTime) % 24\\n```\\n",
                "solutionTags": [
                    "Python3",
                    "Math"
                ],
                "code": "```python\\nclass Solution:\\n  def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n    return (arrivalTime + delayedTime) % 24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3998172,
                "title": "o-1-100-beats-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime>=24){            \\n            return (arrivalTime+delayedTime)-24;\\n        }else{\\n            return arrivalTime+delayedTime;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime>=24){            \\n            return (arrivalTime+delayedTime)-24;\\n        }else{\\n            return arrivalTime+delayedTime;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3995903,
                "title": "one-line-python3-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3991512,
                "title": "only-one-line-code-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nonly one line code using Modulo operator.\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        return (a+b)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) {\\n        return (a+b)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3983551,
                "title": "c-very-simple-and-easy-to-understand-solution",
                "content": "# Intuition\\nThe intuition behind this solution is to calculate the time when the train will arrive at the station after accounting for the delay.\\n\\n# Approach\\nThe approach to solving this problem involves adding the `arrivalTime` and `delayedTime` to determine the new arrival time after the delay. If the sum of `arrivalTime` and `delayedTime` exceeds 23 (the maximum hour in 24-hour format), we need to subtract 24 to get the correct time within the 24-hour format.\\n\\n# Complexity\\n- Time complexity: **O(1)**  \\n\\n- Space complexity: **O(1)**  \\n\\n# Code\\n```cpp\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if (arrivalTime + delayedTime > 23) {\\n            return (arrivalTime + delayedTime) - 24;\\n        }\\n        return arrivalTime + delayedTime;\\n    }\\n};\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if (arrivalTime + delayedTime > 23) {\\n            return (arrivalTime + delayedTime) - 24;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 3977565,
                "title": "easiest-c-solution-2023",
                "content": "```\\nint findDelayedArrivalTime(int arrivalTime, int delayedTime){\\nreturn (arrivalTime+delayedTime)%24;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint findDelayedArrivalTime(int arrivalTime, int delayedTime){\\nreturn (arrivalTime+delayedTime)%24;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3967568,
                "title": "simplest-java-code-faster-than-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity : O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity : O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int time = arrivalTime + delayedTime;\\n        if(time < 24){\\n            return time;\\n        }\\n        return time-24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int time = arrivalTime + delayedTime;\\n        if(time < 24){\\n            return time;\\n        }\\n        return time-24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3967379,
                "title": "simple-solution-using-java",
                "content": "\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3950413,
                "title": "beginner-friendly-100-beats-solution-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThis is a basic question which can easily be easily solved from if and else condition\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->To solve this problem first we need to compare the sum of the arrivaltime and delayed time with 24 as the output should be in 24 hrs format.\\nIf the sum is greater or equal to 24 we can simply return (time-24).\\nelse directly we will return the sum.\\n\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int time=arrivalTime+delayedTime;\\n        if(time>=24){\\n            return (time-24);\\n        }\\n        else {\\n            return time;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int time=arrivalTime+delayedTime;\\n        if(time>=24){\\n            return (time-24);\\n        }\\n        else {\\n            return time;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3944981,
                "title": "c-solution-easy-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int  s=arrivalTime+delayedTime;\\n        if(s==24){\\n            return 0;\\n        }else if(s<24){\\n            return s;\\n        }else{\\n            return s-24;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int  s=arrivalTime+delayedTime;\\n        if(s==24){\\n            return 0;\\n        }else if(s<24){\\n            return s;\\n        }else{\\n            return s-24;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3941933,
                "title": "single-line-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime+delayedTime) if arrivalTime+delayedTime<24 else arrivalTime+delayedTime-24\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime+delayedTime) if arrivalTime+delayedTime<24 else arrivalTime+delayedTime-24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3941090,
                "title": "",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return ((arrivalTime  + delayedTime) % 24);    \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return ((arrivalTime  + delayedTime) % 24);    \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3937822,
                "title": "calculate-delayed-arrival-time-in-java",
                "content": "\\n# Complexity\\n- Time complexity:\\nO(1)\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3931685,
                "title": "very-easy-math-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int at = arrivalTime;\\n        int dt = delayedTime;\\n        int t = dt + at;\\n        if(t >= 24){\\n            return t - 24;\\n        }\\n        return t % 24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int at = arrivalTime;\\n        int dt = delayedTime;\\n        int t = dt + at;\\n        if(t >= 24){\\n            return t - 24;\\n        }\\n        return t % 24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3925999,
                "title": "one-line-code-beats-100-memory-and-100-time",
                "content": "\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        return (a+d)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        return (a+d)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3924631,
                "title": "simple-elixir-solution",
                "content": "```\\ndefmodule Solution do\\n  @spec find_delayed_arrival_time(arrival_time :: integer, delayed_time :: integer) :: integer\\n  def find_delayed_arrival_time(arrival_time, delayed_time) do\\n      new_time = arrival_time + delayed_time\\n      new_time = if new_time >= 24 do\\n                   new_time - 24\\n                 else\\n                   new_time\\n                 end\\n                  \\n      \\n      new_time\\n\\n  end\\nend\\n\\n```",
                "solutionTags": [],
                "code": "```\\ndefmodule Solution do\\n  @spec find_delayed_arrival_time(arrival_time :: integer, delayed_time :: integer) :: integer\\n  def find_delayed_arrival_time(arrival_time, delayed_time) do\\n      new_time = arrival_time + delayed_time\\n      new_time = if new_time >= 24 do\\n                   new_time - 24\\n                 else\\n                   new_time\\n                 end\\n                  \\n      \\n      new_time\\n\\n  end\\nend\\n\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3922014,
                "title": "kotlin-oneline-solution",
                "content": "```\\nclass Solution {\\n    fun findDelayedArrivalTime(arrivalTime: Int, delayedTime: Int): Int = (arrivalTime + delayedTime) % 24\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun findDelayedArrivalTime(arrivalTime: Int, delayedTime: Int): Int = (arrivalTime + delayedTime) % 24\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3921241,
                "title": "solved-in-c-00ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int sumOfHours=delayedTime+arrivalTime;\\n        if (sumOfHours >= 24){\\n            return sumOfHours -24;\\n        }\\n        return sumOfHours;  \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int sumOfHours=delayedTime+arrivalTime;\\n        if (sumOfHours >= 24){\\n            return sumOfHours -24;\\n        }\\n        return sumOfHours;  \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3911397,
                "title": "beats-100-easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int x=arrivalTime+delayedTime;\\n        if(x>=24)\\n        x=x%24;\\n        return x;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int x=arrivalTime+delayedTime;\\n        if(x>=24)\\n        x=x%24;\\n        return x;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3910105,
                "title": "2651-calculate-delayed-arrival-time-solution-for-python-3",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        resTime = arrivalTime\\n        more = delayedTime\\n        \\n        while more != 0:\\n            more -= 1\\n            resTime += 1\\n            if resTime == 24:\\n                resTime = 0\\n        return resTime\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        resTime = arrivalTime\\n        more = delayedTime\\n        \\n        while more != 0:\\n            more -= 1\\n            resTime += 1\\n            if resTime == 24:\\n                resTime = 0\\n        return resTime\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3908727,
                "title": "c-easy-worst-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n     int delayedArrival=arrivalTime+delayedTime;\\n     return delayedArrival%24;   \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n     int delayedArrival=arrivalTime+delayedTime;\\n     return delayedArrival%24;   \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3908324,
                "title": "give-the-delayed-time",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        \\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        \\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3899659,
                "title": "beats-100-veryy-easy-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) \\n    {\\n        int sum = a + b;\\n        \\n        if (sum >= 24) {\\n            sum -= 24;  // Adjust the time if it\\'s past 24 hours\\n        }\\n        \\n        return sum; // Convert and return the integer part of sum\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int b) \\n    {\\n        int sum = a + b;\\n        \\n        if (sum >= 24) {\\n            sum -= 24;  // Adjust the time if it\\'s past 24 hours\\n        }\\n        \\n        return sum; // Convert and return the integer part of sum\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3896868,
                "title": "go-simple-solution",
                "content": "```go\\n// Improve documentation\\nconst (\\n    maxHourPerDay = 24\\n)\\n\\nfunc findDelayedArrivalTime(arrivalTime, delayedTime int) int {\\n    return (arrivalTime + delayedTime) % maxHourPerDay\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```go\\n// Improve documentation\\nconst (\\n    maxHourPerDay = 24\\n)\\n\\nfunc findDelayedArrivalTime(arrivalTime, delayedTime int) int {\\n    return (arrivalTime + delayedTime) % maxHourPerDay\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3895451,
                "title": "beats-100-00-of-users-with-c-hope-you-upvote-me",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime + delayedTime >=24)\\n        return arrivalTime +delayedTime-24;\\n        return arrivalTime +delayedTime;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime + delayedTime >=24)\\n        return arrivalTime +delayedTime-24;\\n        return arrivalTime +delayedTime;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3892346,
                "title": "100-simple-python-solution-with-best-efficiency-90",
                "content": "# Intuition\\n>First Just plus two Numbers\\n> Check on 24\\n> If more then take Remainder\\n\\n\\n# Approach\\n> Brut Force\\n\\n# Complexity\\n- Time complexity:\\n> O(1)\\n\\n- Space complexity:\\n> O(1)\\n\\n\\n> ----\\n\\n\\n![Capture.JPG](https://assets.leetcode.com/users/images/c297efbb-4c3f-4a24-b8fb-f7ecd6edcd0b_1691698542.1492267.jpeg)\\n\\n> -----\\n\\n\\n> ### kindly Like my Solution. Please It will Support me. Thanks.\\n\\n\\n# Code\\n```\\nclass Solution(object):\\n    def findDelayedArrivalTime(self, arrivalTime, delayedTime):\\n        \"\"\"\\n        :type arrivalTime: int\\n        :type delayedTime: int\\n        :rtype: int\\n        \"\"\"\\n        arrivalTime = arrivalTime + delayedTime   # O(1)\\n        if arrivalTime >= 24:                     # O(1)\\n          arrivalTime = arrivalTime % 24          \\n\\n        return arrivalTime\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def findDelayedArrivalTime(self, arrivalTime, delayedTime):\\n        \"\"\"\\n        :type arrivalTime: int\\n        :type delayedTime: int\\n        :rtype: int\\n        \"\"\"\\n        arrivalTime = arrivalTime + delayedTime   # O(1)\\n        if arrivalTime >= 24:                     # O(1)\\n          arrivalTime = arrivalTime % 24          \\n\\n        return arrivalTime\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3891580,
                "title": "easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n       int ans = 0;\\n\\n        if (arrivalTime + delayedTime >= 24) {\\n            ans = (arrivalTime + delayedTime) - 24;\\n        } else {\\n            ans = arrivalTime + delayedTime;\\n        }\\n\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n       int ans = 0;\\n\\n        if (arrivalTime + delayedTime >= 24) {\\n            ans = (arrivalTime + delayedTime) - 24;\\n        } else {\\n            ans = arrivalTime + delayedTime;\\n        }\\n\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3891490,
                "title": "easy-cpp-solution-single-line-solution-beginner-friendly",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        // By using % 24, we ensure that \\n        // The arrivalTime + delayedTime does not exceeds 24\\n        // and remains in the 24 hours format as mentioned in problem statement\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        // By using % 24, we ensure that \\n        // The arrivalTime + delayedTime does not exceeds 24\\n        // and remains in the 24 hours format as mentioned in problem statement\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3890474,
                "title": "delayed-arrival-time",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime+delayedTime)%24\\n```",
                "solutionTags": [
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime+delayedTime)%24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3889307,
                "title": "simple-and-easy-java-solution-single-line-answer-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3884765,
                "title": "easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n       int sum=0;\\n       sum=arrivalTime+delayedTime;\\n\\n       if(sum<24){\\n           sum=sum;\\n       } \\n\\n       else if(sum>24){\\n           sum=sum-24;\\n       }\\n       else{\\n           sum=0;\\n       }\\n       return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n       int sum=0;\\n       sum=arrivalTime+delayedTime;\\n\\n       if(sum<24){\\n           sum=sum;\\n       } \\n\\n       else if(sum>24){\\n           sum=sum-24;\\n       }\\n       else{\\n           sum=0;\\n       }\\n       return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3882462,
                "title": "python3-the-best-uzbekistan",
                "content": "# Intuition\\n![Screenshot from 2023-08-08 20-44-45.png](https://assets.leetcode.com/users/images/87a76601-8951-4284-ac96-648a53aef00f_1691509531.998496.png)\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3880681,
                "title": "easy-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans = arrivalTime + delayedTime;\\n\\n        if(ans>=24) return ans-24;\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans = arrivalTime + delayedTime;\\n\\n        if(ans>=24) return ans-24;\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3872027,
                "title": "beats-99-07-99-40-solution-from-a-noob",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n***30ms\\nBeats 99.07%of users with Python3***\\n\\n- Space complexity:\\n***16.06mb\\nBeats 99.40%of users with Python3***\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, a: int, d: int) -> int:\\n        s=a+d\\n        #sum of arrival and delay\\n        while s>24:\\n            s=s-24\\n        #Note that the time in this problem is in 24-hours format.(desc.)\\n        if s==24:\\n            s=0\\n        return s\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, a: int, d: int) -> int:\\n        s=a+d\\n        #sum of arrival and delay\\n        while s>24:\\n            s=s-24\\n        #Note that the time in this problem is in 24-hours format.(desc.)\\n        if s==24:\\n            s=0\\n        return s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3871508,
                "title": "short-and-simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n          return (arrivalTime+delayedTime)%24\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n          return (arrivalTime+delayedTime)%24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3861519,
                "title": "beats-88-easy-python3-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        if (arrivalTime+delayedTime)>=24: return (arrivalTime+delayedTime)-24\\n        else: return arrivalTime + delayedTime\\n        \\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        if (arrivalTime+delayedTime)>=24: return (arrivalTime+delayedTime)-24\\n        else: return arrivalTime + delayedTime\\n        \\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3860743,
                "title": "2651-calculate-delayed-arrival-time",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        output=arrivalTime+delayedTime\\n        if output>=24:\\n            output-=24\\n        return output        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        output=arrivalTime+delayedTime\\n        if output>=24:\\n            output-=24\\n        return output        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3858678,
                "title": "using-mod",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int r=arrivalTime+delayedTime;\\n        return (r%24);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int r=arrivalTime+delayedTime;\\n        return (r%24);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3857196,
                "title": "beats-100-cpp-users-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\n       int ans=arrivalTime+delayedTime;\\n       if(ans>=24){\\n           ans=ans-24;\\n       }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\n       int ans=arrivalTime+delayedTime;\\n       if(ans>=24){\\n           ans=ans-24;\\n       }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3853554,
                "title": "c-easy-approach",
                "content": "\\n\\n# Complexity\\n- Time complexity:***O(1)***\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: ***O(1)***\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime + delayedTime >= 24)\\n        {\\n            return arrivalTime + delayedTime - 24;\\n        }\\n        return arrivalTime + delayedTime;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime + delayedTime >= 24)\\n        {\\n            return arrivalTime + delayedTime - 24;\\n        }\\n        return arrivalTime + delayedTime;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3844377,
                "title": "easy-and-quick-solution-using-javascript-with-line-by-line-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function (arrivalTime, delayedTime) {\\n    let totalTime = arrivalTime + delayedTime; // initialize totalTime is the sum of arrivalTime and delayedTime\\n\\n    if (totalTime == 24) { // if totalTime is equal to 24 then return 0\\n        return 0;\\n    } else if (totalTime < 24) { // if totalTime is less than 24 then return totalTime\\n        return totalTime;\\n    } else { // else return subtraction of totalTime to 24\\n        return totalTime - 24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function (arrivalTime, delayedTime) {\\n    let totalTime = arrivalTime + delayedTime; // initialize totalTime is the sum of arrivalTime and delayedTime\\n\\n    if (totalTime == 24) { // if totalTime is equal to 24 then return 0\\n        return 0;\\n    } else if (totalTime < 24) { // if totalTime is less than 24 then return totalTime\\n        return totalTime;\\n    } else { // else return subtraction of totalTime to 24\\n        return totalTime - 24;\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3841522,
                "title": "java-one-line-100-faster",
                "content": "\\tclass Solution {\\n\\t\\tpublic int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\t\\t\\treturn (arrivalTime + delayedTime)%24;\\n\\t\\t}\\n\\t}",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "class Solution {\\n\\t\\tpublic int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\t\\t\\treturn (arrivalTime + delayedTime)%24;\\n\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3840534,
                "title": "python-easy-clean-one-line-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```\\n![catty.png](https://assets.leetcode.com/users/images/99367335-87d2-40e4-a585-9428dd5db020_1690761949.3162441.png)\\n",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3839250,
                "title": "sreeja-s-approach-python3-easy-solution-beats-84",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        time = arrivalTime + delayedTime\\n        if time == 24:\\n            return 0\\n        elif time > 24:\\n            return time - 24\\n        else:\\n            return time\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        time = arrivalTime + delayedTime\\n        if time == 24:\\n            return 0\\n        elif time > 24:\\n            return time - 24\\n        else:\\n            return time\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3837250,
                "title": "java-beats-100-00-of-users-with-java-in-runtime",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int sum =arrivalTime+delayedTime;\\n        int tot=0;\\n        if(sum==24){\\n            tot =0;\\n        }\\n        else if(sum>24){\\n            tot =(arrivalTime+delayedTime)-24;\\n        }\\n        else if(sum<24){\\n            tot =sum;\\n        }\\n        return tot;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int sum =arrivalTime+delayedTime;\\n        int tot=0;\\n        if(sum==24){\\n            tot =0;\\n        }\\n        else if(sum>24){\\n            tot =(arrivalTime+delayedTime)-24;\\n        }\\n        else if(sum<24){\\n            tot =sum;\\n        }\\n        return tot;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3834162,
                "title": "easiest-100-beats-one-line-ans",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime +delayedTime)%24;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime +delayedTime)%24;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3833877,
                "title": "java-easy-solution",
                "content": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans;\\n        int totalHours = arrivalTime + delayedTime;\\n        \\n        if (totalHours >= 24) {\\n            ans = totalHours % 24;\\n        } else {\\n            ans = totalHours;\\n        }\\n        \\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans;\\n        int totalHours = arrivalTime + delayedTime;\\n        \\n        if (totalHours >= 24) {\\n            ans = totalHours % 24;\\n        } else {\\n            ans = totalHours;\\n        }\\n        \\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3832953,
                "title": "delayed-arrival-time-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n0s\\n\\n- Space complexity:\\n6MB\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int result = arrivalTime+delayedTime;\\n        if(result < 24){\\n            return result;\\n        }else{\\n            result -= 24;\\n            return result;\\n        }    \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int result = arrivalTime+delayedTime;\\n        if(result < 24){\\n            return result;\\n        }else{\\n            result -= 24;\\n            return result;\\n        }    \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3831459,
                "title": "c-easy-solution-3-lines",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayed) {\\n        if(arrivalTime+delayed==24)\\n        {\\n            return 0;\\n        }\\n        if(arrivalTime+delayed>24)\\n        {\\n            return (arrivalTime+delayed)-24;\\n        }\\n        return arrivalTime+delayed;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayed) {\\n        if(arrivalTime+delayed==24)\\n        {\\n            return 0;\\n        }\\n        if(arrivalTime+delayed>24)\\n        {\\n            return (arrivalTime+delayed)-24;\\n        }\\n        return arrivalTime+delayed;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3821581,
                "title": "2651-calculate-delayed-arrival-time",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        if(a+d>=24){\\n            return (a+d-24);\\n        }\\n        else{\\n            return a+d;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int a, int d) {\\n        if(a+d>=24){\\n            return (a+d-24);\\n        }\\n        else{\\n            return a+d;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3819360,
                "title": "python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        finaltime = arrivalTime + delayedTime\\n        return finaltime % 24\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        finaltime = arrivalTime + delayedTime\\n        return finaltime % 24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3819010,
                "title": "c-beats-100-easy-to-understand-solution",
                "content": "# Complexity\\n- Time complexity:\\nThe time complexity of the code is O(1)\\n- Space complexity:\\nThe space complexity of the code is also O(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\n        int ans = arrivalTime+delayedTime;\\n        if(ans>=24)\\n        {\\n            ans = ans-24;\\n        }\\n        return ans;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\n        int ans = arrivalTime+delayedTime;\\n        if(ans>=24)\\n        {\\n            ans = ans-24;\\n        }\\n        return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3818754,
                "title": "java-beats-97-memory-beats-one-liner",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n      int total=arrivalTime+delayedTime;\\n      return total%24; \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n      int total=arrivalTime+delayedTime;\\n      return total%24; \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3813016,
                "title": "easy-solution-in-c-beats-100",
                "content": "# Intuition\\n\\n\\n# Approach\\n\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime) % 24;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime) % 24;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3812297,
                "title": "easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        \\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        \\n        return (arrivalTime+delayedTime)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3810422,
                "title": "c-one-line-code-simple-and-easy-approach",
                "content": "# Intuition\\nWe are given a positive integer arrivalTime denoting the arrival time of a train in hours, and another positive integer delayedTime denoting the amount of delay in hours. We have to return the time when the train will arrive at the station where the time in this problem is in 24-hours format.\\n\\n# Approach\\nThe time when train will arrive at the station is (arrivalTime+delayedTime)%24, that is because the total time train will take to arrive is arrivalTime+delayedTime and in 24-hour clock the clock resets at 24th hour to 00:00 as it is cyclic in nature, so we return (arrivalTime+delayedTime)%24.\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime+delayedTime)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3806562,
                "title": "java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int result = arrivalTime + delayedTime;\\n        if(result >= 24) return result - 24;\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int result = arrivalTime + delayedTime;\\n        if(result >= 24) return result - 24;\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3801864,
                "title": "with-explanation-comments-time-xx-ms-98-97-space-xx-mb-89-9",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        \\n        return (arrivalTime+delayedTime < 24) ? arrivalTime+delayedTime : arrivalTime+delayedTime-24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        \\n        return (arrivalTime+delayedTime < 24) ? arrivalTime+delayedTime : arrivalTime+delayedTime-24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3801042,
                "title": "simple-kotlin-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    fun findDelayedArrivalTime(arrivalTime: Int, delayedTime: Int): Int {\\n        return if (arrivalTime + delayedTime >= 24) {\\n            arrivalTime + delayedTime - 24\\n        } else {\\n            arrivalTime + delayedTime\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun findDelayedArrivalTime(arrivalTime: Int, delayedTime: Int): Int {\\n        return if (arrivalTime + delayedTime >= 24) {\\n            arrivalTime + delayedTime - 24\\n        } else {\\n            arrivalTime + delayedTime\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3799743,
                "title": "python-rust-solution-0-ms",
                "content": "# Code\\n```python []\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```\\n```rust []\\nimpl Solution {\\n    pub fn find_delayed_arrival_time(arrival_time: i32, delayed_time: i32) -> i32 {\\n        (arrival_time + delayed_time) % 24\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```python []\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```\n```rust []\\nimpl Solution {\\n    pub fn find_delayed_arrival_time(arrival_time: i32, delayed_time: i32) -> i32 {\\n        (arrival_time + delayed_time) % 24\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3797546,
                "title": "very-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24) {\\n            return (arrivalTime+delayedTime);\\n        }else {\\n            return (arrivalTime+delayedTime-24);\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24) {\\n            return (arrivalTime+delayedTime);\\n        }else {\\n            return (arrivalTime+delayedTime-24);\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3796231,
                "title": "simple-solution-in-java",
                "content": "In this code we takes two integer parameters and they returns an integer value. after that we add both arrivalTime and delayedTime and store the result in the variable \\'ans\\'. and then we take condition if our ans is greater than 24(time exceeded one day). it means arrival will happen on next day, in this case, code subtracts 24 from \\'ans\\' to adjust time within 24 hour format. After that code returns calculated \\'ans\\', which represents delayed arrival time.\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans = arrivalTime+delayedTime;\\n        int num = 0;\\n        if(ans>=24){\\n            ans = ans-24;\\n            return ans;\\n        }\\n        else{\\n            return ans;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int ans = arrivalTime+delayedTime;\\n        int num = 0;\\n        if(ans>=24){\\n            ans = ans-24;\\n            return ans;\\n        }\\n        else{\\n            return ans;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3795093,
                "title": "c-one-line-solution-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime) % 24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3793976,
                "title": "java",
                "content": "# Code\\n```\\nclass Solution \\n{\\n    public int findDelayedArrivalTime(int a, int d) \\n    {\\n        int t = a + d;\\n        if(t >= 24)\\n        t = t % 24;\\n        return t;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution \\n{\\n    public int findDelayedArrivalTime(int a, int d) \\n    {\\n        int t = a + d;\\n        if(t >= 24)\\n        t = t % 24;\\n        return t;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3791711,
                "title": "java-easy-solution-super-easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int d) {\\n        if(a+d<24)\\n        return a+d;\\n        else\\n        return Math.abs(24-(a+d));\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int d) {\\n        if(a+d<24)\\n        return a+d;\\n        else\\n        return Math.abs(24-(a+d));\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3788379,
                "title": "one-line-solution-and-faster",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: 26 ms\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: 26.72mb\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public int FindDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime)%24;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int FindDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime)%24;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3782361,
                "title": "simple-formula",
                "content": "![image.png](https://assets.leetcode.com/users/images/65869e86-149f-4098-8467-fdc086e9f5b8_1689674214.6587172.png)\\n\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        return (arrivalTime + delayedTime) % 24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3780598,
                "title": "simple-python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        sum = arrivalTime + delayedTime\\n        if sum != 24 and sum< 24:\\n            return sum\\n        else:\\n            return sum -24\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n        sum = arrivalTime + delayedTime\\n        if sum != 24 and sum< 24:\\n            return sum\\n        else:\\n            return sum -24\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3778733,
                "title": "java-easy",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int r = arrivalTime + delayedTime;\\n        if(r >= 24){\\n            r = r-24;\\n        }\\n        return r;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int r = arrivalTime + delayedTime;\\n        if(r >= 24){\\n            r = r-24;\\n        }\\n        return r;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3774831,
                "title": "time-o-1-space-o-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n\\n        a = arrivalTime + delayedTime\\n        if a==24:\\n            return 0\\n        elif a>24:\\n            return a-24\\n        else:\\n            return a\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n\\n        a = arrivalTime + delayedTime\\n        if a==24:\\n            return 0\\n        elif a>24:\\n            return a-24\\n        else:\\n            return a\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3774556,
                "title": "easy-3-line-solution-100-faster",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        \\n        return arrivalTime+delayedTime-24;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        \\n        return arrivalTime+delayedTime-24;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3767009,
                "title": "100-faster-and-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime)%24;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        return (arrivalTime + delayedTime)%24;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3763845,
                "title": "one-liner-solution-containing-only-return-statement-beating-100-in-both-runtime-and-memory",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int d) {\\n        return ((a+d)%24); \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int d) {\\n        return ((a+d)%24); \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3761529,
                "title": "simple-javascript-solution",
                "content": "\\n# Complexity\\n- Time complexity: $$O(logn)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(logn)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function(arrivalTime, delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function(arrivalTime, delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3758127,
                "title": "simple-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int ar, int de) {\\n        if(ar+de>=24 || de+ar>=24){\\n            return Math.abs(ar+de-24); \\n        }\\n        return (ar+de)==24?0:ar+de;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int ar, int de) {\\n        if(ar+de>=24 || de+ar>=24){\\n            return Math.abs(ar+de-24); \\n        }\\n        return (ar+de)==24?0:ar+de;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3752938,
                "title": "c-100-faster-math",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n\\tint findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\t\\treturn (arrivalTime + delayedTime) % 24;       \\n\\t}\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n\\tint findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n\\t\\treturn (arrivalTime + delayedTime) % 24;       \\n\\t}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3750432,
                "title": "java-delayed-arrival-time-explained",
                "content": "# Approach\\nJust some Cases to take care of like the sum being 24 or above.\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int aT, int dT) {\\n        int sum=aT+dT;\\n        if(sum==24){return 0;}\\n        if(sum>24){return sum-24;}\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int aT, int dT) {\\n        int sum=aT+dT;\\n        if(sum==24){return 0;}\\n        if(sum>24){return sum-24;}\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3747098,
                "title": "simple-solution-c",
                "content": "# Complexity\\n- Time complexity: **O(1)**\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: **O(1)**\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n}\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n    return (arrivalTime + delayedTime) % 24;\\n}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3741750,
                "title": "very-very-easy-solution-simple-to-understand-100-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int d) {\\n        int c = a+d;\\n        if(c>24)\\n            return c-24;\\n        else if(c==24)\\n            return 0;\\n        else\\n            return c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int d) {\\n        int c = a+d;\\n        if(c>24)\\n            return c-24;\\n        else if(c==24)\\n            return 0;\\n        else\\n            return c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3741746,
                "title": "very-very-easy-solution-simple-to-understand-100-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int d) {\\n        int c = a+d;\\n        if(c>24)\\n            return c-24;\\n        else if(c==24)\\n            return 0;\\n        else\\n            return c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int a, int d) {\\n        int c = a+d;\\n        if(c>24)\\n            return c-24;\\n        else if(c==24)\\n            return 0;\\n        else\\n            return c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3737386,
                "title": "just-one-line-javascript",
                "content": "# Have fun with my code\\n```\\nconst findDelayedArrivalTime = (arrivalTime, delayedTime) => (arrivalTime + delayedTime) % 24\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst findDelayedArrivalTime = (arrivalTime, delayedTime) => (arrivalTime + delayedTime) % 24\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3736602,
                "title": "easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int c= arrivalTime+delayedTime;\\n        int d=c-24;\\n        if(c<24){\\n            return c;\\n        }\\n        else \\n        return d;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        int c= arrivalTime+delayedTime;\\n        int d=c-24;\\n        if(c<24){\\n            return c;\\n        }\\n        else \\n        return d;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3735271,
                "title": "finddelayedarrivaltime",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function(arrivalTime, delayedTime) {\\n\\n     let time = arrivalTime + delayedTime;\\n     let output = time >= 24 ? time - 24 : time; \\n\\n     return output;\\n    \\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} arrivalTime\\n * @param {number} delayedTime\\n * @return {number}\\n */\\nvar findDelayedArrivalTime = function(arrivalTime, delayedTime) {\\n\\n     let time = arrivalTime + delayedTime;\\n     let output = time >= 24 ? time - 24 : time; \\n\\n     return output;\\n    \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3731824,
                "title": "one-line-code-python-3",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n             return (arrivalTime + delayedTime) % 24\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def findDelayedArrivalTime(self, arrivalTime: int, delayedTime: int) -> int:\\n             return (arrivalTime + delayedTime) % 24\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1871512,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 2047912,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1874264,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1872350,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1943111,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 2069849,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1991763,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1964413,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1959184,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1936237,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1871512,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 2047912,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1874264,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1872350,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1943111,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 2069849,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1991763,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1964413,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1959184,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            },
            {
                "id": 1936237,
                "content": [
                    {
                        "username": "cartesPerforees",
                        "content": "Bruh, for real?"
                    },
                    {
                        "username": "123GJWEQ2",
                        "content": "some of the other problems were tough tho"
                    },
                    {
                        "username": "getimad",
                        "content": "It is a good start after \"Hello World!\" problem."
                    },
                    {
                        "username": "user4779gR",
                        "content": "This one was so easy I was thinking I misunderstood the prompt."
                    },
                    {
                        "username": "Balwierz",
                        "content": "I can\\'t believe people are posting solutions to this problem"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "genuinely came here for this comment :\\'))"
                    },
                    {
                        "username": "dmr11235",
                        "content": "Question is trivial, consider removing"
                    },
                    {
                        "username": "ChenxiLu",
                        "content": "I\\'m wondering why do we have hard questions that give no hints at all, while this easy question generously gives out 4 hints (well 2 actually)."
                    },
                    {
                        "username": "Ramya1102",
                        "content": "I had to submit the answer to actually see if there\\'s some hidden difficulty. lol"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "This question is too hard for me :((((("
                    },
                    {
                        "username": "jarircse16ruet",
                        "content": "class Solution {\\npublic:\\n    int findDelayedArrivalTime(int arrivalTime, int delayedTime) {\\n        if(arrivalTime+delayedTime<24)\\n            return arrivalTime+delayedTime;\\n        else \\n            return abs(24 - (arrivalTime+delayedTime));\\n    }\\n};"
                    },
                    {
                        "username": "manojscoder",
                        "content": " return (arrivalTime + delayedTime) % 24;"
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "fr ? its not even a question bruh! "
                    }
                ]
            }
        ]
    }
]