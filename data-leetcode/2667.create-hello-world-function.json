[
    {
        "title": "Create Hello World Function",
        "question_content": "Write a function&nbsp;createHelloWorld.&nbsp;It should return a new function that always returns&nbsp;\"Hello World\".\n&nbsp;\nExample 1:\n\nInput: args = []\nOutput: \"Hello World\"\nExplanation:\nconst f = createHelloWorld();\nf(); // \"Hello World\"\nThe function returned by createHelloWorld should always return \"Hello World\".\n\nExample 2:\n\nInput: args = [{},null,42]\nOutput: \"Hello World\"\nExplanation:\nconst f = createHelloWorld();\nf({}, null, 42); // \"Hello World\"\nAny arguments could be passed to the function but it should still always return \"Hello World\".\n\n&nbsp;\nConstraints:\n\n\t0 <= args.length <= 10",
        "solutions": [
            {
                "id": 3486895,
                "title": "day-o-1-why-you-should-prefer-arrow-function-syntax",
                "content": "# When, Where and How to use the arrow  function syntax!!\\nArrow functions were first introduced in ES6 (ECMAScript 2015). They provide a concise and convenient syntax for defining functions. Let\\'s discuss how,when and where..\\n\\n**The traditional function for adding two numbers can be given as :** \\n```\\nconst add = function(a, b) {\\n  return a + b;\\n}\\n```\\n* When the above code is converted to arrow function we can skip the return part as an arrow functions automatically return the value of the expression after the arrow (=>) symbol, without the need for an explicit return statement.\\n```\\nconst add = (a, b) => a + b;\\n```\\n\\n**Lexical `this` : One of the best thing that arrow function syntax introduced to us**\\n* Arrow function has lexical `this` binding i.e they inherit the `this` value of the enclosing scope. This can be particularly useful when working with `event listeners` or `callback functions`, where the `this` value can be unpredictable.\\n*  For example in the following example the `arrow function` used as the event listener for the click event inherits the `this` value of the enclosing scope (which is the global window object), rather than having its own this value like a traditional function would.\\n```\\nconst button = document.querySelector(\\'button\\');\\nbutton.addEventListener(\\'click\\', () => {\\n  console.log(this); // logs the window object, not the button\\n});\\n```\\n**When not to use the Arrow function syntax:**\\n* `Arrow functions `cannot be used as constructors to create new objects, because they do not have their own `this` value. If you need to create objects using the `new` keyword, you will need to use a traditional function instead.\\n* Arrow functions cannot be used as generator functions that use the `yield` keyword to return multiple values over time. If you need to use the `yield` keyword, you will need to use a traditional function instead.\\n\\t*  **You must be thinking what is this `yield` keyword?** well, The `yield` keyword is used in special functions called` generator functions`, which can return multiple values over time instead of returning just one value like a normal function. When the `yield` keyword is encountered in the `generator function`, it pauses the function and returns a value, and the function can be resumed later to return more values. \\n\\t*  Basically its like a pause and resume functionality.\\n\\nWe will discuss more about `event listeners` and `callback` functions as we go further in 30days of JS challenge.\\n\\n# Answer to todays(#1) JS challenge:\\n```\\nvar createHelloWorld = function() {\\n        return () => \"Hello World\";\\n};\\n```\\n**TIme and Space : O(1)**\\n\\n***\\nHere\\'s my [github link](https://github.com/Jatin-Shihora) where I keep my solutions.\\n***",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst add = function(a, b) {\\n  return a + b;\\n}\\n```\n```\\nconst add = (a, b) => a + b;\\n```\n```\\nconst button = document.querySelector(\\'button\\');\\nbutton.addEventListener(\\'click\\', () => {\\n  console.log(this); // logs the window object, not the button\\n});\\n```\n```\\nvar createHelloWorld = function() {\\n        return () => \"Hello World\";\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486638,
                "title": "first-understand-what-is-closure-easily-master-the-concept-with-examples",
                "content": "# Definition\\n\\nIn programming, a closure is a combination of a function and its lexical environment. The lexical environment consists of any variables that were in scope at the time the closure was created.\\n\\nTo understand closures, it\\'s important to first understand lexical scoping. In JavaScript, variables declared within a function are only accessible within that function, and any nested functions within it. However, a nested function can \"remember\" the variables from the outer function even after the outer function has returned. This is because the inner function has access to the variables in the outer function\\'s lexical scope.\\n\\n# Example \\n\\n```\\nfunction outer() {\\n  const name = \"Bob\";\\n\\n  function inner() {\\n    console.log(`Hello, ${name}!`);\\n  }\\n\\n  return inner;\\n}\\n\\nconst greeting = outer();\\ngreeting(); // logs \"Hello, Bob!\"\\n\\n```\\n\\n# Explanation\\n\\nIn this example, **outer** defines a variable name and a function **inner** . **inner** is defined within outer, so it has access to name in outer\\'s lexical environment. When outer is called and returns inner, a closure is created that retains access to name. This means that even though outer has finished running and name is technically out of scope, inner can still access it and log a greeting with it.\\n\\n# Another Example\\n```\\nfunction counter() {\\n  let count = 0;\\n\\n  return function() {\\n    count++;\\n    console.log(count);\\n  }\\n}\\n\\nconst increment = counter();\\nincrement(); // logs 1\\nincrement(); // logs 2\\nincrement(); // logs 3\\n\\n```\\n# Explanation\\n\\nIn this example, counter returns a function that increments and logs a variable count each time it\\'s called. count is defined within counter, so it\\'s not accessible outside of it. However, when counter returns the inner function, a closure is created that retains access to count. This means that each time increment is called, it can still access and modify count.\\n\\n\\n# Solution \\n\\nTo create a function that returns another function that always returns \"Hello World\" in JavaScript, you can use a technique called \"function currying\". This involves creating a function that returns another function that has access to the original function\\'s variables.\\n```\\nfunction createHelloWorld() {\\n  const greeting = \"Hello World\";\\n  \\n  return function() {\\n    return greeting;\\n  };\\n}\\n\\n```\\n\\n#  \\u2B06\\uFE0F Please Upvote \\uD83D\\uDE43\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction outer() {\\n  const name = \"Bob\";\\n\\n  function inner() {\\n    console.log(`Hello, ${name}!`);\\n  }\\n\\n  return inner;\\n}\\n\\nconst greeting = outer();\\ngreeting(); // logs \"Hello, Bob!\"\\n\\n```\n```\\nfunction counter() {\\n  let count = 0;\\n\\n  return function() {\\n    count++;\\n    console.log(count);\\n  }\\n}\\n\\nconst increment = counter();\\nincrement(); // logs 1\\nincrement(); // logs 2\\nincrement(); // logs 3\\n\\n```\n```\\nfunction createHelloWorld() {\\n  const greeting = \"Hello World\";\\n  \\n  return function() {\\n    return greeting;\\n  };\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486599,
                "title": "solution-o-1-javascript-typescript",
                "content": "# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n# Code\\n<iframe src=\"https://leetcode.com/playground/6JtAKRex/shared\" frameBorder=\"0\" width=\"700\" height=\"300\"></iframe>\\n",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n# Code\\n<iframe src=\"https://leetcode.com/playground/6JtAKRex/shared\" frameBorder=\"0\" width=\"700\" height=\"300\"></iframe>\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 3487523,
                "title": "why-this-problem-is-important",
                "content": "When we go through the problem and found that it\\'s really easy problem,then why leetcode post this question. \\n\\nBecause it\\'s use the one important concept closure which is asked in most interviews.\\n\\nWhat is Closure ?\\n\\nA closure is a function that has access to variables from its outer (enclosing) lexical scope, even after that outer function has returned.\\n\\nLet\\'s breakdown the definition -\\n\\nOne thing is sure from the definition, closure is sometype of function.\\n\\n```javascript\\nfunction someTypeOfFunction(y) {\\n    console.log(y);\\n}\\n```\\n\\nSecond thing it can access variables outside of the lexical scope. In normal terms we can say it can access the variable which is declared outside of the function.\\n\\n```javascript\\nconst variable = \"which declared outside of the function\";\\nfunction someTypeOfFunction(y) {\\n    console.log(y);\\n    console.log(variable);\\n}\\n```\\n\\nThird thing after returning from outer function we can access the variable which is declared outside of the closure.\\n\\n```\\nconst outerFunction = () => {\\n    const variable = \"which declared outside of the function\";\\n    function someTypeOfFunction(y) {\\n        console.log(y);\\n        console.log(variable);\\n    }\\n    return someTypeOfFunction;\\n}\\nconst closure = outerFunction();\\n``` \\n\\nNow the thing is, why it\\'s show important.\\nWith the help of this we can create private variable in javascript.\\n\\n```\\nfunction counter() {\\n  let count = 0;\\n  \\n  return {\\n    increment: function() {\\n      count++;\\n      console.log(count);\\n    },\\n    decrement: function() {\\n      count--;\\n      console.log(count);\\n    }\\n  }\\n}\\n\\nconst c = counter();\\nc.increment(); // Output: 1\\nc.increment(); // Output: 2\\nc.decrement(); // Output: 1\\n```\\n\\nIn this example, counter returns an object with two methods: increment and decrement. These methods both have access to the count variable, which is enclosed within the returned object and acts as a private variable. The methods can modify the count variable, but it cannot be accessed or modified directly from outside the returned object, ensuring data privacy.\\n\\nList of common uses of Closure - \\n\\n1. Private variables and methods in object-oriented programming.\\n2. Function factories that create functions with specific behavior depending on a parameter.\\n3. Memoization, caching the result of an expensive function call to avoid recomputation.\\n4. Event listeners and callbacks that need to access variables in the enclosing scope.\\n5. Partial application and currying, creating a new function by fixing some of its arguments.\\n6. Iteration over an array using forEach, map, filter, or reduce functions, which all take a function as an argument and can make use of closures to access variables in the outer scope.\\n7. Emulating block scope in JavaScript before the introduction of the let and const keywords in ES6.\\n8. Promises and asynchronous programming, using closures to capture variables that need to be accessed in a callback function.\\n9. Managing state in Redux, a popular library for managing application state in React applications.\\n10. Creating reusable utility functions that can be used in different parts of a codebase and require access to variables in the enclosing scope.\\n\\nSolution of this problem -\\n\\nJavascript \\n```javascript\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n```\\n\\nTypescript\\n```typescript\\nfunction createHelloWorld() {\\n\\treturn function(...args): string {\\n        return \"Hello World\";\\n    };\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```javascript\\nfunction someTypeOfFunction(y) {\\n    console.log(y);\\n}\\n```\n```javascript\\nconst variable = \"which declared outside of the function\";\\nfunction someTypeOfFunction(y) {\\n    console.log(y);\\n    console.log(variable);\\n}\\n```\n```\\nconst outerFunction = () => {\\n    const variable = \"which declared outside of the function\";\\n    function someTypeOfFunction(y) {\\n        console.log(y);\\n        console.log(variable);\\n    }\\n    return someTypeOfFunction;\\n}\\nconst closure = outerFunction();\\n```\n```\\nfunction counter() {\\n  let count = 0;\\n  \\n  return {\\n    increment: function() {\\n      count++;\\n      console.log(count);\\n    },\\n    decrement: function() {\\n      count--;\\n      console.log(count);\\n    }\\n  }\\n}\\n\\nconst c = counter();\\nc.increment(); // Output: 1\\nc.increment(); // Output: 2\\nc.decrement(); // Output: 1\\n```\n```javascript\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n```\n```typescript\\nfunction createHelloWorld() {\\n\\treturn function(...args): string {\\n        return \"Hello World\";\\n    };\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487642,
                "title": "createhelloworld-level-up-your-javascript-skills-with-these-intuitive-implementations",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n>The problem requires us to create a function that returns another function that always returns \"Hello World\". This can be achieved by simply defining a function that returns another function that has the constant value of \"Hello World\".\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n>We can use a higher order function to create and return a new function that always returns \"Hello World\". This can be done by defining a function that returns another function that has \"Hello World\" as its return value.\\n\\n# Complexity\\n- Time complexity:\\n>The time complexity of this function is O(1) because it simply returns a constant value.\\n\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n>The space complexity of this function is O(1) because it does not use any additional memory besides the returned function.\\n\\n# Code\\n>There are several ways to implement a function that returns a new function that always returns \"Hello World\". Here are three possible solutions in JavaScript:\\n\\n- Using an arrow function with implicit return:\\n\\n```\\nconst createHelloWorld = () => () => \"Hello World\";\\n```\\n>This creates an arrow function that takes no arguments and returns another arrow function that always returns \"Hello World\".\\n\\n- Using a function expression with explicit return:\\n```\\nconst createHelloWorld = function() {\\n  return function() {\\n    return \"Hello World\";\\n  }\\n};\\n```\\n>This is a similar approach as the previous one, but using a regular function expression instead of an arrow function.\\n\\n- Using a function declaration:\\n```\\nfunction createHelloWorld() {\\n  return function() {\\n    return \"Hello World\";\\n  }\\n}\\n```\\n>This is the most verbose option, but it works in the same way as the previous two.\\n\\n>All three solutions return a new function that always returns \"Hello World\", regardless of the arguments passed to it. Here\\'s an example of how to use them:\\n\\n```\\nconst f = createHelloWorld();\\nconsole.log(f()); // \"Hello World\"\\nconsole.log(f(\"foo\", \"bar\")); // \"Hello World\"\\nBoth calls to f will return \"Hello World\", even though different arguments were passed to it.\\n```\\n\\n![image.png](https://assets.leetcode.com/users/images/b427e686-2e5d-469a-8e7a-db5140022a6b_1677715904.0948765.png)\\n# Please Upvote\\uD83D\\uDC4D\\uD83D\\uDC4D\\n```\\nThanks for visiting my solution.\\uD83D\\uDE0A Keep Learning\\nPlease give my solution an upvote! \\uD83D\\uDC4D\\nIt\\'s a simple way to show your appreciation and\\nkeep me motivated. Thank you! \\uD83D\\uDE0A\\n```\\n\\n\\n\\n# Important topic to Learn\\n>This problem mainly involves the concept of higher order functions in JavaScript.\\n\\n>Higher order functions are functions that either take other functions as arguments or return functions as their results. In this problem, we use a higher order function to return a new function that always returns the constant string \"Hello World\".\\n\\n>To fully understand higher order functions, it is important to be familiar with the following concepts:\\n\\n\\n```\\n1. Functions as first-class citizens: In JavaScript, functions are treated as first-class citizens,\\nwhich means that they can be assigned to variables, passed as arguments to other\\nfunctions, and returned as values from functions.\\n\\n2. Closures: A closure is a function that has access to variables in its outer scope, even after\\nthe outer function has returned. In this problem, the inner function returned by\\n`createHelloWorld()` has access to the variable `message` defined in its outer\\nfunction, even after `createHelloWorld()` has returned.\\n\\n3. Anonymous functions: An anonymous function is a function without a name. In this\\nproblem, the function returned by `createHelloWorld()` is anonymous.\\n\\n4. Arrow functions: Arrow functions are a shorthand way of writing anonymous functions.\\nThey have a more concise syntax and automatically bind `this` to the enclosing\\ncontext. In this problem, we could use arrow functions to define `createHelloWorld()`\\nand the function it returns:\\n```\\n\\n# Please Comment\\uD83D\\uDC4D\\uD83D\\uDC4D\\n```\\nThanks for visiting my solution comment below if you like it.\\uD83D\\uDE0A\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst createHelloWorld = () => () => \"Hello World\";\\n```\n```\\nconst createHelloWorld = function() {\\n  return function() {\\n    return \"Hello World\";\\n  }\\n};\\n```\n```\\nfunction createHelloWorld() {\\n  return function() {\\n    return \"Hello World\";\\n  }\\n}\\n```\n```\\nconst f = createHelloWorld();\\nconsole.log(f()); // \"Hello World\"\\nconsole.log(f(\"foo\", \"bar\")); // \"Hello World\"\\nBoth calls to f will return \"Hello World\", even though different arguments were passed to it.\\n```\n```\\nThanks for visiting my solution.\\uD83D\\uDE0A Keep Learning\\nPlease give my solution an upvote! \\uD83D\\uDC4D\\nIt\\'s a simple way to show your appreciation and\\nkeep me motivated. Thank you! \\uD83D\\uDE0A\\n```\n```\\n1. Functions as first-class citizens: In JavaScript, functions are treated as first-class citizens,\\nwhich means that they can be assigned to variables, passed as arguments to other\\nfunctions, and returned as values from functions.\\n\\n2. Closures: A closure is a function that has access to variables in its outer scope, even after\\nthe outer function has returned. In this problem, the inner function returned by\\n`createHelloWorld()` has access to the variable `message` defined in its outer\\nfunction, even after `createHelloWorld()` has returned.\\n\\n3. Anonymous functions: An anonymous function is a function without a name. In this\\nproblem, the function returned by `createHelloWorld()` is anonymous.\\n\\n4. Arrow functions: Arrow functions are a shorthand way of writing anonymous functions.\\nThey have a more concise syntax and automatically bind `this` to the enclosing\\ncontext. In this problem, we could use arrow functions to define `createHelloWorld()`\\nand the function it returns:\\n```\n```\\nThanks for visiting my solution comment below if you like it.\\uD83D\\uDE0A\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3486957,
                "title": "easy-solution-o-1-time-and-space-complexity",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nNeed to reture Hello World.  \\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nAdd return \"Hello World\" in the given function.\\n# Complexity\\n- Time complexity: O(1) \\n\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n           return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n           return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486568,
                "title": "blazingly-fast-solution-to-this-brutal-challenge-o-1",
                "content": "# Approach\\nUsing my vast knowledge of JavaScript\\'s syntax and principles, as well as common algorithms and data structures, I meticulously engineered a solution to complete this Herculean feat in O(1) time. This remarkable achievement has pushed the boundaries of what was once thought possible in the world of JavaScript programming.\\n\\n# Complexity\\n- Time complexity: O(1)\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3484401,
                "title": "js-ggwp",
                "content": "# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return `\\nH   H  EEEEE  L      L      OOOOO        W   W  OOOOO  RRRR   L      DDD  \\nH   H  E      L      L      O   O        W   W  O   O  R   R  L      D  D \\nHHHHH  EEEEE  L      L      O   O        W W W  O   O  R R    L      D   D\\nH   H  E      L      L      O   O        WW WW  O   O  R  R   L      D  D \\nH   H  EEEEE  LLLLL  LLLLL  OOOOO        W   W  OOOOO  R   R  LLLLL  DDD\\n`.replaceAll(/^[\\\\W\\\\w\\\\r]*$/g, \\'Hello World\\');\\n    }\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return `\\nH   H  EEEEE  L      L      OOOOO        W   W  OOOOO  RRRR   L      DDD  \\nH   H  E      L      L      O   O        W   W  O   O  R   R  L      D  D \\nHHHHH  EEEEE  L      L      O   O        W W W  O   O  R R    L      D   D\\nH   H  E      L      L      O   O        WW WW  O   O  R  R   L      D  D \\nH   H  EEEEE  LLLLL  LLLLL  OOOOO        W   W  OOOOO  R   R  LLLLL  DDD\\n`.replaceAll(/^[\\\\W\\\\w\\\\r]*$/g, \\'Hello World\\');\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487285,
                "title": "beginner-friendly-commented",
                "content": "The createHelloWorld function returns a new function that always returns the string \"**Hello World**\", regardless of any arguments passed to it.\\n This is an example of a closure, where the inner function returned by createHelloWorld \"remembers\" the environment in which it was created,\\n including any variables or functions that were in scope at that time.\\n\\nThe use of rest parameter syntax (...args) in the inner function allows for any number of arguments to be passed to the function, but they are ignored and not used in the returned string.\\n\\n```\\n\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n\\n```\\n\\nupvote if u like the solution",
                "solutionTags": [
                    "JavaScript",
                    "String"
                ],
                "code": "```\\n\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3484239,
                "title": "trivial-o-1",
                "content": "# Intuition\\nReturn string directly.\\n\\n# Approach\\nReturn \"Hello world\"\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"    \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"    \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3488723,
                "title": "my-createhelloworld",
                "content": "<!-- # Intuition -->\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n<!-- # Approach -->\\n<!-- Describe your approach to solving the problem. -->\\n\\n<!-- # Complexity\\n- Time complexity: -->\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n<!-- - Space complexity: -->\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3495303,
                "title": "easy-to-understand-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return \"Hello World\";  \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return \"Hello World\";  \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487634,
                "title": "easy-solution-o-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486958,
                "title": "javascript-easy-solution-day-1-beginner-friendly",
                "content": "## **\\u2705\\u2705JavaScript Easy Solution Day 1 || Beginner friendly**\\n# **Please Upvote as it really motivates me**\\n\\n```\\n//In the Problem we are asked to create a function that return a function \\n//and that returning function return the string \"Hello World\"\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n//Please Upvote I will be posting solutions everyday\\n```\\n\\n![image](https://assets.leetcode.com/users/images/7f423b57-81a2-46ce-9ab2-72ad38f668f7_1675480558.466273.png)\\n",
                "solutionTags": [
                    "JavaScript",
                    "String"
                ],
                "code": "```\\n//In the Problem we are asked to create a function that return a function \\n//and that returning function return the string \"Hello World\"\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n//Please Upvote I will be posting solutions everyday\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3490612,
                "title": "fully-explained-javascript-solution",
                "content": "# Approach\\nUse shorthand way of writing a function expression, introduced in the ECMAScript 6 (ES6) specification, which was finalized in June 2015.\\n\\n- ` const myfun = () => { }; `\\n\\n# Code\\n\\n```\\n\\nvar createHelloWorld = function( ) {\\n   return (...args) => \"Hello World\"\\n};\\n\\n````\\n\\n- In this example we used both type of funtion the outer one is old way of writing the funtion in JavaScript.\\n- And the returned funtion is a arrow funtion.",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n\\nvar createHelloWorld = function( ) {\\n   return (...args) => \"Hello World\"\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3489125,
                "title": "day-1-30-days-js-challenge-best-editorial-everything-explained-easy-to-understand",
                "content": "# Intuition\\nThe purpose of this code is to create a higher-order function that generates a specific function, which in this case is a function that always returns $$\"Hello \\\\space World\"$$. The outer function $$createHelloWorld()$$ is a factory function that generates the inner function. The use case of this pattern is to abstract away the details of creating the inner function and provide a simple interface to the user of the factory function.\\n\\n# Approach\\nThe approach here is to use a closure to create a function that has access to the $$ans$$ variable defined in the outer function\\'s scope. The inner function is defined using the $$ES6$$ spread operator to capture any arguments passed to it (even though the function doesn\\'t actually use them). The inner function then returns the string $$\"Hello\\\\space World\"$$ that was defined in the outer function\\'s scope.\\n\\n# Complexity\\n- Time complexity:\\nThe time complexity of this code is constant time, $$O(1)$$, because the inner function always returns the same value, $$\"Hello \\\\space World\"$$, regardless of the input arguments.\\n\\n- Space complexity:\\nThe space complexity of this code is also constant time, $$O(1)$$, because the only variable used is ans which is stored in the outer function\\'s scope, and there are no dynamic data structures used that would grow with input size.\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        //creating answer variable (type : string)\\n        var ans = \"Hello World\";\\n        //return ans\\n        return ans;\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n$$Please \\\\space Upvote \\\\space My \\\\space Solution \\\\space if \\\\space You \\\\space Liked \\\\space it..$$\\n![abc.png](https://assets.leetcode.com/users/images/7ceb9cd5-add2-4dc9-aab9-cc26a88f3984_1683287916.3398764.png)\\n\\n$$Thank \\\\space You \\\\space So \\\\space Much. $$\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        //creating answer variable (type : string)\\n        var ans = \"Hello World\";\\n        //return ans\\n        return ans;\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3488481,
                "title": "easy-one-liner-o-1-arrow-function-javascript-solution",
                "content": "**```\\nvar createHelloWorld = function() {\\n    return (... args) => \"Hello World\";\\n};\\n```**",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar createHelloWorld = function() {\\n    return (... args) => \"Hello World\";\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487857,
                "title": "beginner-friendly-solution-o-1-time-complexity-and-space-complexity-beats-100",
                "content": "# Intuition\\nThe returned function should always return the string \"Hello World\", regardless of any arguments passed to it.\\n\\nIn other words, no matter what arguments are given to the function that is created by createHelloWorld(), it should always return the string \"Hello World\". Additionally, createHelloWorld() should not take any arguments.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487539,
                "title": "javascript-1-line-solution-day-1-of-30-days-challange",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487183,
                "title": "one-line-and-very-easy-solution-just-watch-it-and-be-amazed",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = () => () => \\'Hello World\\'\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = () => () => \\'Hello World\\'\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3822905,
                "title": "javascript",
                "content": "# Code\\n```\\n/**\\n * @return {Function}\\n */\\n\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\n\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3689377,
                "title": "create-hello-world-function-javascript-solution-code",
                "content": "# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3591069,
                "title": "comprehensive-walkthrough-how-to-resolve-this-kinda-problems-100-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe probably should return something like a string. I have been thinking about this problem for quite a long time. And finally I came to the conclusion that we need to add a line - return \"Hello World\"\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Type `return \\'Hello World\\'`\\n2. Put semicolon after.\\n3. You should obtain the following string - `return \\'Hello World\\';`\\n4. This is extremely important not to confuse the case! We must not use here extra code. WE don\\'t have to use here `console.log()`. That might seem sophisticated but there is only one possible solution.\\n\\n# Complexity\\n- Time complexity: O(log(n)/log(n)) for each call. \\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: It depends strognly on the specific implementation and your requirements. In my case we have something like O(n+1-n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3517576,
                "title": "don-t-just-return-simply-instead-use-closures",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nwhen this function will be returned then a closure object will be returned which will have the function wrapped along with its lexical environment.. hence a will always be accessesible in the inner function\\'s return statement.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function(a=\"Hello World\") {\\n    return function(...args) {\\n        return a; // when this function will be returned then a closure object will be returned which will have the function wrapped along with its lexical environment.. hence a will always be accessesible in the inner function\\'s return statement.\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nwhen this function will be returned then a closure object will be returned which will have the function wrapped along with its lexical environment.. hence a will always be accessesible in the inner function\\'s return statement.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function(a=\"Hello World\") {\\n    return function(...args) {\\n        return a; // when this function will be returned then a closure object will be returned which will have the function wrapped along with its lexical environment.. hence a will always be accessesible in the inner function\\'s return statement.\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */",
                "codeTag": "Unknown"
            },
            {
                "id": 3488545,
                "title": "best-solution-for-js-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nSo by seeing the problem we can understand that we just have to return \"Hello World\" no matter what is in the argument.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nIt is a very easy question we will just simply return hard coded \"Hello World\"\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n# Please Upvote \\uD83D\\uDD25\\uD83D\\uDE4F\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3488476,
                "title": "easy-solution-with-full-explanation-and-one-liner-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nIt\\'s a basic function with return type function which returns a string literal\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWrite a funtion that return a new function which only have a single return statement returning **\"Hello World\"**\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n---\\n\\n\\n# Simple Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    // Returning this function\\n    return function(...args) {\\n        // Returning String Literal\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n# Using Arrow Function\\n```\\nvar createHelloWorld =()=>(...args)=>\"Hello World\";\\n```\\n![petshop_intro.gif](https://assets.leetcode.com/users/images/a668c080-df24-410c-93b8-1518e01d0a7e_1683277326.9789612.gif)\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    // Returning this function\\n    return function(...args) {\\n        // Returning String Literal\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\n```\\nvar createHelloWorld =()=>(...args)=>\"Hello World\";\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487217,
                "title": "java-script-solution-for-create-hello-world-function-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe above code is written in JavaScript and it defines a function called createHelloWorld.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThis function returns another function that takes any number of arguments (using the spread operator ...args) and returns the string \"Hello World\". The returned function is a closure that has access to the variables and parameters of its outer function.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time and space complexity of createHelloWorld is constant, O(1), as it simply creates and returns a function. The time and space complexity of the returned function is also constant, as it performs a simple operation of returning a string, regardless of the number of arguments it receives.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe time and space complexity of createHelloWorld is constant, O(1), as it simply creates and returns a function. The time and space complexity of the returned function is also constant, as it performs a simple operation of returning a string, regardless of the number of arguments it receives.\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return (...args) => \"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return (...args) => \"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487090,
                "title": "simple-javascript-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n    Please Up-Vote\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nSimple 1 Line Of Code To Reach The Solution\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n    O(1)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n    O(1)\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return(\"Hello World\") \\n    }\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return(\"Hello World\") \\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487013,
                "title": "simple-return-string",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486283,
                "title": "you-ve-gotta-be-kidding-me",
                "content": "```\\nconst createHelloWorld = () => () => \\'Hello World\\';\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst createHelloWorld = () => () => \\'Hello World\\';\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4015698,
                "title": "1-line-simple-javascript",
                "content": "\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3916266,
                "title": "easiest-way-to-return-a-string-irrespective-of-args-passed",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n\\nvar args = [2,3];\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n    return \"Hello World\";\\n    }\\n};\\n\\nconst f = createHelloWorld();\\nf(); \\n \\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n\\nvar args = [2,3];\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n    return \"Hello World\";\\n    }\\n};\\n\\nconst f = createHelloWorld();\\nf(); \\n \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3827178,
                "title": "easy-javascript-solution",
                "content": "# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3664978,
                "title": "js-bombastic-fantastic-solution-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3613400,
                "title": "1-problem-3-solution-js-explained-topics",
                "content": "# Approach\\nYou can use rest syntax to access all the passed arguments as an array. This isn\\'t necessary for this problem, but it will be a critical concept for many problems. You can read more about ... syntax here.\\n\\nBasic Syntax\\nThe syntax is:\\n```\\nfunction f(...args) {\\n  const sum = args[0] + args[1];\\n  return sum;\\n}\\nconsole.log(f(3, 4)); // 7\\n```\\nIn this example the variable args is [3, 4].\\n\\n##### Why\\nIt may not be immediately obvious why you would use this syntax because you can always just pass an array and get the same result.\\n\\nThe primary use-case is for creating generic factory functions that accept any function as input and return a new version of the function with some specific modification.\\n\\nBy the way, a function that accepts a function and/or returns a function is called a higher-order function, and they are very common in JavaScript.\\n\\nFor example, you can create a logged function factory:\\n```\\nfunction log(inputFunction) {\\n  return function(...args) {\\n     console.log(\"Input\", args);\\n     const result = inputFunction(...args);\\n     console.log(\"Output\", result);\\n     return result;\\n  }\\n}\\nconst f = log((a, b) => a + b);\\nf(1, 2); // Logs: Input [1, 2] Output 3\\n\\n```\\n\\n# Code\\n```\\nvar createHelloWorld = function() {\\n    return function() {\\n        return \"Hello World\";\\n    }\\n};\\n```\\n```\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n};\\n```\\n```\\nvar createHelloWorld = function() {\\n    return (...args) => \"Hello World\";\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction f(...args) {\\n  const sum = args[0] + args[1];\\n  return sum;\\n}\\nconsole.log(f(3, 4)); // 7\\n```\n```\\nfunction log(inputFunction) {\\n  return function(...args) {\\n     console.log(\"Input\", args);\\n     const result = inputFunction(...args);\\n     console.log(\"Output\", result);\\n     return result;\\n  }\\n}\\nconst f = log((a, b) => a + b);\\nf(1, 2); // Logs: Input [1, 2] Output 3\\n\\n```\n```\\nvar createHelloWorld = function() {\\n    return function() {\\n        return \"Hello World\";\\n    }\\n};\\n```\n```\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n};\\n```\n```\\nvar createHelloWorld = function() {\\n    return (...args) => \"Hello World\";\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3566949,
                "title": "day-1-of-js-challenge-1-liner-easy-javascript-solution-best-solution-for-this-question",
                "content": "# Intuition\\nWe simply return the string needed to be printed.\\n\\n# Approach\\nreturn the string \"Hello World\".\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n\\nKindly upvote if you found this solution useful! Happy learning!",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3514400,
                "title": "simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n     return \"Hello World\";   \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n     return \"Hello World\";   \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3513016,
                "title": "o-1-js-arrow-function-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nAccording to the problem we need to return `\"Hello World\"` irrespective of the type of arguments passed in the function. So we take the simplest approach of returning the String `\"Hello World\"` using an `arrow function`. \\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n};\\n\\n\\n// const f = createHelloWorld();\\n// f(); // \"Hello World               \\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n};\\n\\n\\n// const f = createHelloWorld();\\n// f(); // \"Hello World               \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3506555,
                "title": "simple-javascript-code-o-1",
                "content": "# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3492239,
                "title": "most-easiest-leetcode-question-ever",
                "content": "# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3492150,
                "title": "easy-javascript-solution",
                "content": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n\\nTC: O(1)\\nSC: O(1)",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3490693,
                "title": "just-in-case-someone-needs-help-with-this",
                "content": "# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3489942,
                "title": "o-1-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n\\n const f = createHelloWorld();\\n f()\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n\\n const f = createHelloWorld();\\n f()\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3489803,
                "title": "sweet-1-liner-solution-with-gentle-explaination",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n### Observation: *A function is returning another function*\\n\\n```\\nvar createHelloWorld = function() {\\n    return function(...args) {}\\n};\\n\\nconst f = createHelloWorld();\\nconsole.log(f);\\n```\\n\\n*gives Output*\\n\\n```\\n\\u0192 (...args) {\\n    }\\n\\n```\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n  We want to display \\'Hello World\\' when outer function is called,\\n  and though outer function gives inner function, so inner function \\n  will return \\'Hello World\\'.\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\ninner function donot depend on input size, so constant memory usage\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \\'Hello World\\'\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nvar createHelloWorld = function() {\\n    return function(...args) {}\\n};\\n\\nconst f = createHelloWorld();\\nconsole.log(f);\\n```\n```\\n\\u0192 (...args) {\\n    }\\n\\n```\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \\'Hello World\\'\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3489300,
                "title": "2667-create-hello-world-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nTo create a function that returns another function that always returns \"Hello World\" in JavaScript, you can use a technique called \"function currying\". This involves creating a function that returns another function that has access to the original function\\'s variables.\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n<!-- Describe your approach to solving the problem. -->\\n\\n```javascript []\\n//console.log(\\'Hello world!\\')\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n```TypeScript []\\nfunction createHelloWorld() {\\n\\treturn function(...args): string {\\n        return \"Hello World\";\\n    };\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n\\n\\n# Example for Function Currying \\n<!-- Describe your approach to solving the problem. -->\\nStatement: Currying is a technique used in Functional Programming that involves breaking down a function that takes multiple arguments into a series of functions, each of which takes only one argument. This can make it easier to compose functions and reason about their behavior and can lead to more modular and reusable code.\\n\\nWe simply wrap a function inside a function, which means we are going to return a function from another function to obtain this kind of translation. The parent function takes the first provided argument and returns the function that takes the next argument and this keeps on repeating till the number of arguments ends. Hopefully, the function that receives the last argument returns the expected result.  \\n\\n# Why is currying useful in JavaScript?\\n\\nIt helps us to create a higher-order function\\nIt reduces the chances of error in our function by dividing it into multiple smaller functions that can handle one responsibility.\\nIt is very useful in building modular and reusable code\\nIt helps us to avoid passing the same variable multiple times\\nIt makes the code more readable\\n\\nExample:\\n\\n```JavaScript []\\n<script>\\n\\tfunction calculateVolume(length) {\\n\\t\\treturn function (breadth) {\\n\\t\\t\\treturn function (height) {\\n\\t\\t\\t\\treturn length * breadth * height;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tconsole.log(calculateVolume(4)(5)(6));\\n</script>\\n\\n```\\n\\n",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```javascript []\\n//console.log(\\'Hello world!\\')\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\n```TypeScript []\\nfunction createHelloWorld() {\\n\\treturn function(...args): string {\\n        return \"Hello World\";\\n    };\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\n```JavaScript []\\n<script>\\n\\tfunction calculateVolume(length) {\\n\\t\\treturn function (breadth) {\\n\\t\\t\\treturn function (height) {\\n\\t\\t\\t\\treturn length * breadth * height;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tconsole.log(calculateVolume(4)(5)(6));\\n</script>\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3488677,
                "title": "simple-js-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3488396,
                "title": "javascript-solution",
                "content": "\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487830,
                "title": "return-string-i-m-the-best",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWhere do I put the return for the string\\n\\n# Approach\\nreturn string\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity - over 9000\\n- Time complexity: 0\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: 0\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487561,
                "title": "day-1-javascript-code-easy-explanation-as-well",
                "content": "# Intuition\\nSo as we already know this is the basic function of java script. My thoughts about the code are as follows:\\nHere,createHelloWorld is a function that returns another function. The inner function takes no arguments and simply returns the string \"Hello World\".\\n\\nWhen createHelloWorld is called, it creates a new execution context with its own variable environment. When the inner function is returned, it retains a reference to the variable environment of the outer function, creating a closure.\\n\\nThe closure allows the returned function to access variables defined in the outer function, even after the outer function has finished executing. In this case, the inner function does not access any variables from the outer function, but the closure is still created and demonstrates how closures work.\\n\\nTo use the returned function, createHelloWorld is called and the result is assigned to the variable f. f is then called as a function with the syntax f(), which executes the inner function and returns the string \"Hello World\".\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function() {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function() {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487542,
                "title": "just-return-hello-world-arrow-function",
                "content": "```\\n/**\\n * @return {Function}\\n */\\n\\nvar createHelloWorld = function() {\\n    return () => {return \"Hello World\"}\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\n\\nvar createHelloWorld = function() {\\n    return () => {return \"Hello World\"}\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3487180,
                "title": "day-1-solution-javascript",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";    \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";    \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486981,
                "title": "one-liner-easy",
                "content": "# Intuition\\nThe function should return \"Hello World\" as string.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        // return value\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        // return value\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486914,
                "title": "simple-javascript-solution-o-1-single-line-100",
                "content": "# Intuition\\nA simple return string statement would complete this.\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486862,
                "title": "easy-single-line-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe problem asks us to create a function that returns another function that always returns the string \"Hello World\", regardless of any arguments that are passed to it. The task is to create a closure that captures the \"Hello World\" string and returns a function that always returns this string, regardless of the input.\\n\\nTo solve this problem, we need to create a function that returns another function that always returns \"Hello World\". \\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe approach is simple everytime you have to return \"Hello World\"\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nTime complexity is O(1), which is constant time complexity.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nSpace complexity is also O(1),  which is constant space complexity.\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486789,
                "title": "return-syntax-in-javascript-brief-explanation",
                "content": "> **Please Upvote!!**\\n# Intuition\\nThe \"Hello World!\" function in JavaScript is a fundamental program that serves as an excellent starting point for beginners learning the language.\\n\\n# Approach\\n These are the most basic types of values in JavaScript and include numbers, strings, booleans, null, and undefined. A function can return a primitive value using the return keyword, followed by the value to be returned. For example:\\n```\\nfunction returnNumber() {\\n  return 42;\\n}\\n\\nfunction returnString() {\\n  return \"Hello, world!\";\\n}\\n\\nfunction returnBoolean() {\\n  return true;\\n}\\n\\nfunction returnObject() {\\n  return { name: \"Alice\", age: 25 };\\n}\\n\\nfunction returnArray() {\\n  return [1, 2, 3, 4, 5];\\n}\\n\\nfunction returnFunction() {\\n  return function() {\\n    console.log(\"Hello, world!\");\\n  };\\n}\\n```\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(1)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction returnNumber() {\\n  return 42;\\n}\\n\\nfunction returnString() {\\n  return \"Hello, world!\";\\n}\\n\\nfunction returnBoolean() {\\n  return true;\\n}\\n\\nfunction returnObject() {\\n  return { name: \"Alice\", age: 25 };\\n}\\n\\nfunction returnArray() {\\n  return [1, 2, 3, 4, 5];\\n}\\n\\nfunction returnFunction() {\\n  return function() {\\n    console.log(\"Hello, world!\");\\n  };\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486759,
                "title": "explanation-code",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nLet\\'s break down the code and its components\\n``` \\nvar createHelloWorld = function() {\\n      // ...\\n      };\\n``` \\n- This code declares a variable called createHelloWorld and assigns it to an anonymous function. \\n- This anonymous function will be returned when createHelloWorld is called.\\n``` \\nreturn function(...args) {\\n      return \"Hello World\";\\n      }\\n\\n}\\n```\\n- This is the nested function that will be returned when createHelloWorld is called. \\n- The ...args syntax is used to accept any number of arguments passed to the function, \\n- although in this case, the arguments are not used in the function\\'s logic. \\n- Instead, the function simply returns the string \"Hello World\" when called.\\n\\n\\n```\\n const f = createHelloWorld();\\nf(); // \"Hello World\"\\n \\n```\\n- its create a constant variable f and assigns it the result of calling createHelloWorld(). \\n- The variable f now holds the nested function that was returned by createHelloWorld.\\n\\n- The next line calls f(), which executes the nested function and returns the string \"Hello World\". \\n- The string is then logged to the console as the result of the function call.\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "``` \\nvar createHelloWorld = function() {\\n      // ...\\n      };\\n```\n``` \\nreturn function(...args) {\\n      return \"Hello World\";\\n      }\\n\\n}\\n```\n```\\n const f = createHelloWorld();\\nf(); // \"Hello World\"\\n \\n```\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486691,
                "title": "easy-solution-constant-complexities-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe Intution Is Simple , whatever the arguments are , we just need to return the mentioned string i.e. \"Hello World\" here.\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$1$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n\\n    /**\\n    * @return {Function}\\n    */\\n\\n    var createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n    };\\n\\n    /**\\n    * const f = createHelloWorld();\\n    * f(); // \"Hello World\"\\n    */\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe Intution Is Simple , whatever the arguments are , we just need to return the mentioned string i.e. \"Hello World\" here.\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$1$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n\\n    /**\\n    * @return {Function}\\n    */\\n\\n    var createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n    };\\n\\n    /**\\n    * const f = createHelloWorld();\\n    * f(); // \"Hello World\"\\n    */\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486664,
                "title": "easy-approach",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3486418,
                "title": "",
                "content": "\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function() {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function() {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3485430,
                "title": "one-liner",
                "content": "```\\nconst createHelloWorld = () => () => \\'Hello World\\';\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst createHelloWorld = () => () => \\'Hello World\\';\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3485274,
                "title": "easiest-leetcode-solution-ever",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3484349,
                "title": "day-1-beats-100-2667-create-hello-world-function-javascript-accepted-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nInside the **createHelloWorld** function, there is another anonymous function defined with the return statement. \\nThis nested function takes in any number of arguments using the rest parameter syntax `...args`. However, in this particular implementation, the function doesn\\'t make use of the passed arguments.\\n\\nThe nested function simply returns the string \"Hello World\". This means that whenever the createHelloWorld function is called, \\nit will return the nested function that, \\nwhen called itself, will always return the string \"Hello World\".\\n\\nit is an example of a currying function.\\n\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of the code is constant or O(1). This is because the code doesn\\'t have any loops or iterations that depend on the size of the input. Regardless of the number of arguments passed to the nested function, it will always return the same output, \"Hello World\", without any operations that scale with the input size.\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity of the code is also constant or O(1). This is because the code doesn\\'t allocate any additional memory based on the input size or any external factors. The nested function doesn\\'t use any significant amount of memory, and the only memory usage is the constant space required to store the function itself.\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n![BEATS.bmp](https://assets.leetcode.com/users/images/b36ab454-8a9f-4bea-9243-bf8a7efbe943_1683261039.4853222.bmp)\\n\\nif u Like\\uD83E\\uDD70 Please **UPVOTE** !!\\nThank You \\nHappy Coding!",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4102821,
                "title": "2667-create-hello-world-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = () => () => \\'Hello World\\'\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = () => () => \\'Hello World\\'\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4102179,
                "title": "test",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4100588,
                "title": "in-one-line",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nlet createHelloWorld=()=>()=> \"Hello World\" ;\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nlet createHelloWorld=()=>()=> \"Hello World\" ;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4100398,
                "title": "hello-world-code-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nconst createHelloWorld = function(){\\n    return function(...args){\\n        return \"Hello World\";\\n    }\\n}\\n\\n\\n\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nconst createHelloWorld = function(){\\n    return function(...args){\\n        return \"Hello World\";\\n    }\\n}\\n\\n\\n\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4100195,
                "title": "creating-a-universal-greeting-function-in-javascript-using-closures",
                "content": "# Intuition\\nThe intention behind the code is straightforward \\u2013 we want to provide a factory function that, when invoked, returns another function. This returned function, when called, will always return the string \"Hello World\" regardless of the arguments provided to it.\\n\\n# Approach\\n1. We define a function createHelloWorld that does not take any parameters.\\n2. The function, when called, returns an inner function (another example of a JavaScript closure).\\n3. This inner function is designed to accept any number of arguments (denoted by the spread syntax ...args). However, it doesn\\'t use these arguments in any way.\\n4. Regardless of the arguments passed to this inner function, it always returns the string \"Hello World\".\\n\\n# Complexity\\n- Time complexity:\\nO(1): The inner function only returns a constant string, \"Hello World\", which is a constant-time operation.\\n\\n- Space complexity:\\nO(1): The inner function doesn\\'t utilize any data structures or additional space based on the input size. It simply returns a constant string, which requires constant space.\\n\\n# Code\\nThe provided code gives a clear example of how one can create and then utilize the createHelloWorld function:\\n\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\"\\n    }\\n};\\n```\\nWhile the f function can accept arguments, they have no effect on its behavior or output. For example:\\n```\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\"\\n    }\\n};\\n```\n```\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4099415,
                "title": "my-first-try-in-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n  const f = createHelloWorld();\\nf();// \"Hello World\"\\n \\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n  const f = createHelloWorld();\\nf();// \"Hello World\"\\n \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4098676,
                "title": "function-helloworld",
                "content": "# Intuition\\n< First create a function name with createHelloWorld and then create return function in that function type return \"Hello world\">\\n\\n# Approach\\n<First we have to know how to create a function>\\n\\n# Complexity\\n- Time complexity:\\n<56ms>\\n\\n- Space complexity:\\n<41.6mb>\\n\\n# Code\\n```\\nfunction createHelloWorld()\\n{\\n  return function()\\n  {\\n    return \"Hello World\"\\n  }\\n}\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction createHelloWorld()\\n{\\n  return function()\\n  {\\n    return \"Hello World\"\\n  }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4098673,
                "title": "function-helloworld",
                "content": "# Intuition\\n< First create a function name with createHelloWorld and then create return function in that function type return \"Hello world\">\\n\\n# Approach\\n<First we have to know how to create a function>\\n\\n# Complexity\\n- Time complexity:\\n<56ms>\\n\\n- Space complexity:\\n<41.6mb>\\n\\n# Code\\n```\\nfunction createHelloWorld()\\n{\\n  return function()\\n  {\\n    return \"Hello World\"\\n  }\\n}\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction createHelloWorld()\\n{\\n  return function()\\n  {\\n    return \"Hello World\"\\n  }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4098562,
                "title": "write-a-function-createhelloworld-it-should-return-a-new-function-that-always-return-hello-world",
                "content": "# Intuition\\nThe goal here is to create a function that returns \"Hello World\" when called. This can be achieved by defining a factory function that generates and returns an inner function with a fixed return value.\\n\\n# Approach\\nI define a factory function called createHelloWorld, which returns an inner function. This inner function, when invoked, simply returns the string \"Hello World.\"\\n\\n# Complexity\\n- Time complexity: The time complexity of this code is constant (O(1)) because calling the inner function always takes the same amount of time, regardless of any input.\\n\\n- Space complexity: The space complexity is also constant (O(1)) because we\\'re not using any data structures that depend on the input size, and the inner function\\'s memory usage is constant.\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n\\n  const f = createHelloWorld();\\n  f(); // \"Hello World\"\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n\\n  const f = createHelloWorld();\\n  f(); // \"Hello World\"\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4097325,
                "title": "hopefully-just-the-beginning",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4097231,
                "title": "hello-world",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\ncreateHelloWorld();\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\ncreateHelloWorld();\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4096408,
                "title": "create-hello-world-function-javascript-solution-by-bharadwaj",
                "content": "# Approach\\nAnonymous Function Closure\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\" \\n}\\n\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\" \\n}\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4096220,
                "title": "create-hello-world-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n        \\n    }\\n};\\nconst helloWorldFunction = createHelloWorld();\\nconsole.log(helloWorldFunction()); // Output: \"Hello World\"\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n        \\n    }\\n};\\nconst helloWorldFunction = createHelloWorld();\\nconsole.log(helloWorldFunction()); // Output: \"Hello World\"\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4095350,
                "title": "sd",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4095185,
                "title": "create-hello-world-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction createHelloWorld() {\\n    \\n\\treturn function(...args): string {\\n        return \"Hello World\"\\n    };\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nfunction createHelloWorld() {\\n    \\n\\treturn function(...args): string {\\n        return \"Hello World\"\\n    };\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4094749,
                "title": "learning-more",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nconst createHelloWorld = () => {\\n    const f = () => \\'Hello World\\'\\n    return f\\n}\\ncreateHelloWorld(45)\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst createHelloWorld = () => {\\n    const f = () => \\'Hello World\\'\\n    return f\\n}\\ncreateHelloWorld(45)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4093985,
                "title": "arry-function-solution-with-low-run-time",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = ()=>{\\n    \\n    return (...args)=> {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = ()=>{\\n    \\n    return (...args)=> {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4093968,
                "title": "simple-and-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4093851,
                "title": "one-line-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nconst createHelloWorld = () => (): string => \"Hello World\"\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nconst createHelloWorld = () => (): string => \"Hello World\"\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4093341,
                "title": "print-hello-world",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n\\nconst f = createHelloWorld();\\nf(); // \"Hello World\"\\n \\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n\\nconst f = createHelloWorld();\\nf(); // \"Hello World\"\\n \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4092908,
                "title": "java-script-day1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4090724,
                "title": "easy-js-solution-100-correct-proper-explanation-javascript-solution",
                "content": "```\\nSource Code:\\n```\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\" // if we pass return than it will only return that\\n    }\\n};\\n```\\n\\nExplanation:\\nHere\\'s a breakdown of how it works:\\n\\n1. createHelloWorld is a function that doesn\\'t take any arguments.\\n2. Inside createHelloWorld, it defines and returns an anonymous function.\\nThis inner function takes any number of arguments \\n(...args is known as a rest parameter and allows you to capture an arbitrary number of arguments as an array). \\n3. Inside the inner function, it always returns the string \"Hello World.\"\\n\\n```\\nPLEASE UPVOTE\\nHave a good day  \\n```\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nSource Code:\\n```\n```\\n\\nExplanation:\\nHere\\'s a breakdown of how it works:\\n\\n1. createHelloWorld is a function that doesn\\'t take any arguments.\\n2. Inside createHelloWorld, it defines and returns an anonymous function.\\nThis inner function takes any number of arguments \\n(...args is known as a rest parameter and allows you to capture an arbitrary number of arguments as an array). \\n3. Inside the inner function, it always returns the string \"Hello World.\"\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4090215,
                "title": "solucion-facil-a-esta-cosa",
                "content": "# Intuition\\nNo se, lo escribo en espa\\xF1ol porque alta paja hacerlo en ingles, pues no se, algo tan basico como deducir que se podia facilitar mas de lo que me lo estaban planteando, porque realmente podias meter en un return la funcion en flecha para con la string\\n\\n# Approach\\nPues al principio no se porque me parecio que lo querian hacer tan complejo para un funcion\\n\\n# Complexity\\n- Time complexity:\\n5 min\\n\\n- Space complexity:\\nNo se que colocar aca lo siento (dato no menor: estoy estudiando ingles apenas, es de las pocas cosas aparte de la programacion que estudio con mas dedicacion y no entiendo que quiere decir espacio de complejidad cfff)\\n\\n# Code\\n```\\n\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n}\\nconsole.log(createHelloWorld);\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n}\\nconsole.log(createHelloWorld);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4089704,
                "title": "my-1st-leetcode-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction createHelloWorld()\\n{\\n    return function()\\n    {\\n        return \"Hello World\"\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction createHelloWorld()\\n{\\n    return function()\\n    {\\n        return \"Hello World\"\\n    }\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4088464,
                "title": "hello-world",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4088389,
                "title": "hello-world",
                "content": "# Intuition\\nComplex syntax for such an easy problem.\\n\\n# Approach\\nJust returned \"Hello World\"\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n const f = createHelloWorld();\\n f(); // \"Hello World\"\\n \\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n const f = createHelloWorld();\\n f(); // \"Hello World\"\\n \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4088112,
                "title": "lesson1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return (...args) => \"Hello World\"\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return (...args) => \"Hello World\"\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4087415,
                "title": "neer-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n        return () => \"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n        return () => \"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4086462,
                "title": "simple-solution",
                "content": "# Intuition\\nI first though I would have to do the function from scratch so I had already planed to create a secondary function which will return the string \"Hello world\" then I would make the createHelloWorld function to return my secondary function\\n\\n# Approach\\nSince the code of the createHelloWorld function and the secondary function was already done, I just added the return Sring needed to sent the message back to the origin.\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4086009,
                "title": "hello-world-always",
                "content": "# Intuition\\nWrite a function createHelloWorld. It should return a new function that always returns \"Hello World\".\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nfunction createHelloWorld() {\\n  return () => \"Hello World\";\\n}\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nfunction createHelloWorld() {\\n  return () => \"Hello World\";\\n}\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4085868,
                "title": "complexity",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4085551,
                "title": "my-1st-javascript-30-days-challenges",
                "content": "# Intuition\\nGood for gaining new knowledge \\n\\n# Approach\\nthe question was \"Write a function createHelloWorld. It should return a new function that always returns \"Hello World\".\"\\nso i write a named function called createHelloWorld and return a new named function called message then inside a function i write const named word and put a string as Hello world. after that write new const as fn and called first named function then console it.\\nthanking you!\\n\\n\\n# Code\\n```\\nfunction createHelloWorld() {\\n    return function message(){\\n        const word = \"Hello World\";\\n        return word\\n    }\\n}\\n\\nconst fn = createHelloWorld()\\nconsole.log(fn())\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction createHelloWorld() {\\n    return function message(){\\n        const word = \"Hello World\";\\n        return word\\n    }\\n}\\n\\nconst fn = createHelloWorld()\\nconsole.log(fn())\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4084684,
                "title": "with-rrow-function",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return () => \"Hello World\";\\n        \\n    };\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return () => \"Hello World\";\\n        \\n    };\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4084583,
                "title": "asking-the-best-practice",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nI don\\'t know if it is a best practice or not, but all I know is that this problem can be solved with minimal variable usage.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. --> \\nStart with the template, fill it with a return statement as the program requires. Providing a return statement to display the \\'Hello World\\' text, and then we simply need to print it using console.log().\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function() {\\n        return \"Hello World\"; \\n    }\\n    \\n};\\n\\nconsole.log(createHelloWorld());\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function() {\\n        return \"Hello World\"; \\n    }\\n    \\n};\\n\\nconsole.log(createHelloWorld());\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4084380,
                "title": "simple-solution-explained",
                "content": "\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\" // if we pass return than it will only return that\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\" // if we pass return than it will only return that\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4083819,
                "title": "leetcode-warm-up-say-hello-to-the-world",
                "content": "# Intuition\\nWhen faced with the challenge of saying \\'Hello, World!\\',\\nI pondered deeply and realized that a function could be\\nthe perfect vessel for this grand message.\\n\\n# Approach\\nMy approach was simple yet elegant. I harnessed the power\\n of the \\'return\\' keyword to convey my heartfelt greeting,\\n \\'Hello, World!\\', from within the confines of a function.\\n It\\'s like sending a postcard to the caller of the function.\\n\\n# Complexity\\n- Time complexity:\\n As for time complexity, we\\'re dealing with a greeting\\n that\\'s as swift as a wink, so there\\'s no significant time\\n involved. It\\'s practically instantaneous, like saying \\'Hi!\\'\\n to a friend in the hallway.\\n\\n- Space complexity:\\n When it comes to space, we\\'re not dealing with vast\\n expanses here. The memory required is minimal, just enough\\n to store our cheerful message. No need for a multi-page letter!\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4083155,
                "title": "print-hello-world",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\n// var createHelloWorld = function()  {\\n    \\n//     return \"Hello World\" ; \\n        \\n\\n// };\\n\\nfunction createHelloWorld() {\\n  return function() {\\n    return \"Hello World\";\\n  };\\n}\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\n// var createHelloWorld = function()  {\\n    \\n//     return \"Hello World\" ; \\n        \\n\\n// };\\n\\nfunction createHelloWorld() {\\n  return function() {\\n    return \"Hello World\";\\n  };\\n}\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4081008,
                "title": "",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4077481,
                "title": "always-use-arrow-functions-for-best-time-and-space-complexity",
                "content": "# Intuition\\nI used regular functions first but the space complexity wasn\\'t as good. Then I changed them to using arrow functions, and wow, it beat most of the solutions.\\n# Approach\\nJust use arrow functions wherever possible!\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = () => (...args) => \"Hello World\"\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = () => (...args) => \"Hello World\"\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4077210,
                "title": "",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        const hw = \"Hello World\";\\n        return hw;\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        const hw = \"Hello World\";\\n        return hw;\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4076713,
                "title": "easiest-ever",
                "content": "Intuition: This code defines a function createHelloWorld that returns another function. When you call createHelloWorld(), it returns a function that, when called, returns the string \"Hello World\".\\n\\nApproach: The approach here is straightforward. createHelloWorld is a higher-order function that returns a closure, capturing the \"Hello World\" string.\\n\\nComplexity:\\n\\nTime complexity: Creating the closure is an O(1) operation.\\nSpace complexity: The closure captures the \"Hello World\" string, so the space complexity is O(1).\\nThe provided code snippet demonstrates how to use this function to create a function f that, when called, returns \"Hello World\".\\n\\n\\n\\n\\n\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return ()=> \"Hello World\"\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return ()=> \"Hello World\"\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4076518,
                "title": "simple",
                "content": "\\t\\n![image.png](https://assets.leetcode.com/users/images/c53d2573-ab0c-4afa-a66a-42aa0d132fb6_1695384656.172705.png)\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return ()=> \\'Hello World\\'; \\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return ()=> \\'Hello World\\'; \\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4074649,
                "title": "hello-world",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction createHelloWorld(): () => string {\\n  return () => \\'Hello World\\';\\n}\\n\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nfunction createHelloWorld(): () => string {\\n  return () => \\'Hello World\\';\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4074229,
                "title": "2-lines-code-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n var createHelloWorld = function() {\\n        return () => \"Hello World\";\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n var createHelloWorld = function() {\\n        return () => \"Hello World\";\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4073750,
                "title": "hello-world-in-javascript",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction createHelloWorld() {\\n  return function(...args) {\\n    if (args.length > 10) {\\n      throw new Error(\"Too many arguments provided\");\\n    }\\n    return \"Hello World\";\\n  };\\n}\\n\\nconst f = createHelloWorld();\\n\\ntry {\\n  const result = f({}, null, 42, \"extraArg1\", \"extraArg2\"); \\n  console.log(result); \\n} catch (error) {\\n  console.error(error.message);\\n}\\n\\nconst result2 = f({}, null, 42);\\nconsole.log(result2);\\n\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction createHelloWorld() {\\n  return function(...args) {\\n    if (args.length > 10) {\\n      throw new Error(\"Too many arguments provided\");\\n    }\\n    return \"Hello World\";\\n  };\\n}\\n\\nconst f = createHelloWorld();\\n\\ntry {\\n  const result = f({}, null, 42, \"extraArg1\", \"extraArg2\"); \\n  console.log(result); \\n} catch (error) {\\n  console.error(error.message);\\n}\\n\\nconst result2 = f({}, null, 42);\\nconsole.log(result2);\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4073606,
                "title": "ultra-simple-solution",
                "content": "\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \\'Hello World\\'\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \\'Hello World\\'\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4073476,
                "title": "first-questioned-solve",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\nconst f = createHelloWorld();\\n  f(\\n    \\'i\\'\\n  ); // \"Hello World\"\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\nconst f = createHelloWorld();\\n  f(\\n    \\'i\\'\\n  ); // \"Hello World\"\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4070815,
                "title": "easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\n function g()\\n {\\n     return \"Hello World\";\\n }\\nvar createHelloWorld = function() {\\nreturn g;\\n        \\n    }\\n\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\n function g()\\n {\\n     return \"Hello World\";\\n }\\nvar createHelloWorld = function() {\\nreturn g;\\n        \\n    }\\n\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4070577,
                "title": "challenger-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"; \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"; \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4068418,
                "title": "hello-world",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4068181,
                "title": "javascript-exp-2",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nconst args = [{},null,42];\\nvar createHelloWorld = function (getArray) {\\n    return function () {\\n        return \"Hello World\"\\n    }\\n}\\n\\nconst f = createHelloWorld(args);\\nf()\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst args = [{},null,42];\\nvar createHelloWorld = function (getArray) {\\n    return function () {\\n        return \"Hello World\"\\n    }\\n}\\n\\nconst f = createHelloWorld(args);\\nf()\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4068156,
                "title": "javascript-exp-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nvar createHelloWorld = function () {\\n    return function (...args) {\\n        return \"Hello World\"\\n    }\\n}\\n\\nconst f = createHelloWorld();\\nf()\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar createHelloWorld = function () {\\n    return function (...args) {\\n        return \"Hello World\"\\n    }\\n}\\n\\nconst f = createHelloWorld();\\nf()\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4067998,
                "title": "easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4064969,
                "title": "javascript-day-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nconst createHelloWorld = function(){\\n    return ()=> \"Hello World\"\\n}\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nconst createHelloWorld = function(){\\n    return ()=> \"Hello World\"\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4063610,
                "title": "easy-javascript-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n \\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \"Hello World\";\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4061901,
                "title": "create-hello-world-function-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \\'Hello World\\';\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n        return \\'Hello World\\';\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4061860,
                "title": "easy-solution-must-check-once",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\"  \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\"  \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4055593,
                "title": "create-hello-world-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. --> I first look at how the function is being called, and what parameters are supplied when called.  I see that the callback function has parameters, and the main function has none.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->. I know I want the main function to provide some output.  Since I cannot supply any arguments, then I must supply the output in the code.  I can do that through my return statement.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->$$O(1)$$\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->$$O(1)$$\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4051856,
                "title": "first",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4051526,
                "title": "noob-thinking-as-you-say",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nI thought this is nested function . \\nseprating to each other,\\nThen make it single,\\nthen nest it  agian\\nit\\'s like if you can\\'t brake a bundle of stick then take only one stick and break it .\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n As nested function so I approch it like seprating nest to each other  and make single function and then nesting two function to each others and then make it \\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\n\\n\\nfunction createHelloWorld (){\\n  return  () => \\'Hello World\\';\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\n\\n\\nfunction createHelloWorld (){\\n  return  () => \\'Hello World\\';\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4050383,
                "title": "esay-way-to-solve-prbolem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4050346,
                "title": "what-is-a-closure-you-can-learn-from-this-question",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nWhat is a closure?\\nIn JavaScript, a closure refers to the combination of a function and its lexical environment. It allows a function to access variables outside its defining lexical scope and maintain references to those variables, even when called outside the function.\\n\\nA closure consists of two main components:\\n\\nFunction: A closure is a function that defines some variables and logic.\\nLexical Environment: The lexical environment is the scope created at the time of function definition, which contains the variables defined within the function and their values.\\nIn general terms, any JavaScript function is a closure, such as in a browser where window is the global object, and in Node.js where each function has a global object.\\n\\nSpecifically, a function in JavaScript is considered a closure if it accesses variables from the outer function\\'s lexical scope.\\n\\nIn simple terms, an ordinary function is considered a closure if it can access variables from the outer function\\'s lexical scope.\\n\\nThe formation process of a closure involves the following code:\\n\\n```\\nfunction makeAdder(base) {\\n  return function (num) {\\n    return base + num;\\n  }\\n}\\nconst add10 = makeAdder(10);\\nconsole.log(add10(5)); // Output: 15\\n```\\n\\n    \\nWhen the makeAdder function executes, the Activation Object (AO) is typically created and stored within it. However, in this case, since there is a reference to the base variable in the returned function, it is not released.\\n\\nWhat is an Activation Object? An Activation Object is created when a function executes and stores variables and arguments within that function.\\n\\nMemory leak caused by closures occurs in the above example. If we no longer use the add10 function, both the function object and the AO referenced by add10 should be destroyed. However, since add10 is assigned to null in the global scope, there is still a reference to the returned function object (AO), causing these memory resources to be unreleased. Therefore, closures often lead to memory leaks due to the chain of references that cannot be released.\\n\\nTo resolve memory leaks caused by closures:\\n\\n```\\nadd10 = null;\\n```\\n    \\nBy assigning add10 to null, this removes the reference to the returned function object (AO), allowing it to be destroyed according to the garbage collector mechanism.\\n\\nDo unused properties from the outer scope get destroyed? Consider the following code:\\n\\n```\\nfunction makeAdder(base) {\\n  const msg = \"hello\";\\n  return function (num) {\\n    return base + num;\\n  }\\n}\\n```\\n\\n    \\nIn this case, base remains unchanged and is accessible outside the returned function, while msg is destroyed since it is only defined within the outer function\\'s scope.\\n\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction makeAdder(base) {\\n  return function (num) {\\n    return base + num;\\n  }\\n}\\nconst add10 = makeAdder(10);\\nconsole.log(add10(5)); // Output: 15\\n```\n```\\nadd10 = null;\\n```\n```\\nfunction makeAdder(base) {\\n  const msg = \"hello\";\\n  return function (num) {\\n    return base + num;\\n  }\\n}\\n```\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4050208,
                "title": "simple-effective-solution",
                "content": "# Approach\\njust returning Hello World string\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4049621,
                "title": "solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return (\"Hello World\");\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return (\"Hello World\");\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4049204,
                "title": "hello-world-high-order-function",
                "content": "\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nlet createHelloWorld = () => () => \"Hello World\"\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nlet createHelloWorld = () => () => \"Hello World\"\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4048583,
                "title": "hello-world-in-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction createHelloWorld() {\\n  return function() {\\n    return \"Hello World\";\\n  };\\n}\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction createHelloWorld() {\\n  return function() {\\n    return \"Hello World\";\\n  };\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4048180,
                "title": "1-line-ts-js-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nconst createHelloWorld = () => ():string => \"Hello World\";\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nconst createHelloWorld = () => ():string => \"Hello World\";\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4047209,
                "title": "solution-for-2667-create-hello-world-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n- We know from the question there 2 functions;\\n- The 1st function is declared as \"createHelloWorld\" and it should return a function.\\n- The 2nd function isn\\'t declared like the 1st but what we do know is that it returns a \"Hello World\" string every time.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- Declare and create function 1 as \"createHelloWorld\" and return function 2 \\n- In function 2 return string \"Hello World\"\\n\\n\\n# Code\\n```\\nconst createHelloWorld = () => {\\n    return function() {\\n        return \"Hello World\"\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst createHelloWorld = () => {\\n    return function() {\\n        return \"Hello World\"\\n    }\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4040525,
                "title": "resposta",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\n\\nvar createHelloWorld = function() {\\n    return function() {\\n        return \"Hello World\";\\n    }\\n};\\n\\nconsole.log(createHelloWorld());\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\n\\nvar createHelloWorld = function() {\\n    return function() {\\n        return \"Hello World\";\\n    }\\n};\\n\\nconsole.log(createHelloWorld());\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4040510,
                "title": "create-hello-world-function-submission",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nBecause the returned value is constant, we use the property of closure to access the arg as an array and then return \"Hello World\" regardless of the arguments passed\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nBecause the returned value is constant, we use the property of closure to access the arg as an array and then return \"Hello World\" regardless of the arguments passed\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n0(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function(args) {\\n    return (...args) => \"Hello World\"\\n};\\n\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function(args) {\\n    return (...args) => \"Hello World\"\\n};\\n\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4040406,
                "title": "first-problem-hello-world",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\n\\nfunction createHelloWorld (){\\n\\nreturn function() {return \"Hello World\"}\\n}\\n\\n\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\n\\nfunction createHelloWorld (){\\n\\nreturn function() {return \"Hello World\"}\\n}\\n\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4040149,
                "title": "question-1-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\n \\nvar createHelloWorld = function() {\\n    \\n    return function() {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\n \\nvar createHelloWorld = function() {\\n    \\n    return function() {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4039589,
                "title": "creating-a-simple-hello-world-function-in-javascript-with-arrow-functions",
                "content": "# Intuition\\n\\nThis code snippet demonstrates the creation of a closure in JavaScript. The main idea here is to define a function createHelloWorld that returns another function. The returned function, when invoked, returns the string \"Hello World.\"\\nApproach\\n\\n    1. Define a function createHelloWorld that doesn\\'t take any arguments.\\n    \\n    2. Inside createHelloWorld, return an arrow function that takes no  \\n       arguments and returns the string \"Hello World.\"\\n\\n# Complexity\\n\\n    - Time complexity: O(1) - Both the createHelloWorld function and the\\n        returned arrow function have constant time complexity.\\n\\n    - Space complexity: O(1) - The arrow function returned by \\n        createHelloWorld doesn\\'t have any significant space usage.\\n\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nlet createHelloWorld = function() {\\n    return () => (\"Hello World\")\\n    };\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nlet createHelloWorld = function() {\\n    return () => (\"Hello World\")\\n    };\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4038164,
                "title": "js-solution",
                "content": "# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\"\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\"\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4038093,
                "title": "hello-world",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction createHelloWorld() {\\n\\treturn function(...args): string {\\n        return \"Hello World\"\\n    };\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nfunction createHelloWorld() {\\n\\treturn function(...args): string {\\n        return \"Hello World\"\\n    };\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4037570,
                "title": "challenge01",
                "content": "\\n# Code\\n```\\n\\nfunction createHelloWorld() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n\\ncreateHelloWorld();\\n\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n\\nfunction createHelloWorld() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n\\ncreateHelloWorld();\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4037395,
                "title": "javascript-simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4036927,
                "title": "hello-world-javascript-30-days-challenge",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4036306,
                "title": "this-is-the-solution-without-any-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nvar createHelloWorld = function() {\\n        return () => \"Hello World\";\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar createHelloWorld = function() {\\n        return () => \"Hello World\";\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4036142,
                "title": "one-line-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4035004,
                "title": "just-with-one-line-of-updation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\"\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4031571,
                "title": "create-a-hello-world-function-javascript",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n        \\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4031004,
                "title": "runtime-details-50ms-beats-79-42-of-users-with-typescript",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction createHelloWorld() {\\n\\treturn ()=>\"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nfunction createHelloWorld() {\\n\\treturn ()=>\"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4025202,
                "title": "hello-world",
                "content": "# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$Big-O = O(1)$$\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function () {\\n    return function (...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function () {\\n    return function (...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4023691,
                "title": "first-one",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return () => \"Hello World\";\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4023074,
                "title": "create-hello-world-function",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction createHelloWorld() {\\n  // This inner function is a closure that captures the \"Hello World\" message.\\n  function hi() {\\n    return \"Hello World\";\\n  }\\n\\n  // Return the inner function.\\n  return hi;\\n}\\n\\nconsole.log(createHelloWorld()); // This will print \"Hello World\"\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction createHelloWorld() {\\n  // This inner function is a closure that captures the \"Hello World\" message.\\n  function hi() {\\n    return \"Hello World\";\\n  }\\n\\n  // Return the inner function.\\n  return hi;\\n}\\n\\nconsole.log(createHelloWorld()); // This will print \"Hello World\"\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4017683,
                "title": "create-hello-word-in-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\nvar assign = createHelloWorld();\\nvar result = assign();\\n\\nconsole.log(result);\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n        return \"Hello World\";\\n    }\\n};\\n\\nvar assign = createHelloWorld();\\nvar result = assign();\\n\\nconsole.log(result);\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4015043,
                "title": "hello-world-in-javascript",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       let str = \"Hello World\";\\n       return str;\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    return function(...args) {\\n       let str = \"Hello World\";\\n       return str;\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */\\n```",
                "codeTag": "Unknown"
            }
        ],
        "discussions": [
            {
                "id": 1882143,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883037,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883568,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883113,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1882731,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1884172,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1918839,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1882836,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883131,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1888568,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1882143,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883037,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883568,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883113,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1882731,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1884172,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1918839,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1882836,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883131,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1888568,
                "content": [
                    {
                        "username": "bessadam",
                        "content": "I did this task 15 minutes ago and still haven\\'t received an offer from FAANG company :("
                    },
                    {
                        "username": "devvrat02",
                        "content": "[@aXXo](/aXXo) YOU Enjoying there comments lol"
                    },
                    {
                        "username": "dev-null0",
                        "content": "Lol"
                    },
                    {
                        "username": "mint_",
                        "content": "You do realize that it takes more than this to get into FAANG, right? This has nothing to do with data structures/algorithms, so if you act this entitled from solving such an easy question nothing will come to you.\n\nSending you thoughts and prayers. You'll need it for your attitude.\n\nᵃˡˢᵒ ᵗʰᶦˢ ʷᵃˢ ᵃ ʲᵒᵏᵉ"
                    },
                    {
                        "username": "codeMonarch",
                        "content": "maybe they are busy in laying off some employees to have some space for your position"
                    },
                    {
                        "username": "mauryasachin243601",
                        "content": "me also still haven\\'t received "
                    },
                    {
                        "username": "aXXo",
                        "content": "Really? I just signed my offer letter from Google after submitting. "
                    },
                    {
                        "username": "jerryy147",
                        "content": "ikr, must be the hardest problem on leetcode :("
                    },
                    {
                        "username": "ankitsumitsharma80",
                        "content": "Leetcode be like let them enjoy their 1st day "
                    },
                    {
                        "username": "codeMonarch",
                        "content": "and cry for rest of  the remaining \\n"
                    },
                    {
                        "username": "meow_power",
                        "content": "I would advise everyone to read the editorial even if u solve the problem . You would get to know about:\\n\\nhoisting\\nblock scope\\nlexical scope\\nclosures\\ndifferent ways to define a function\\nrest arguement\\nhigher order functions"
                    },
                    {
                        "username": "Beseresk",
                        "content": "Thank you."
                    },
                    {
                        "username": "arnav09022003",
                        "content": "Your comment deserves a lot more up Votes."
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "Thank you. It helps a lot."
                    },
                    {
                        "username": "kingp",
                        "content": "this is the silence before the storm type question :)"
                    },
                    {
                        "username": "Chinemerem",
                        "content": "Day 1, it can only get harder from here 😭"
                    },
                    {
                        "username": "Anurag__Das",
                        "content": "# Questions you should ask yourself and  get answer to in the editorial section.\\n## Questions\\n* How are functions perceived in JS ?\\n* Can functions be stored in Variables ?\\n* What are Immediately Invoked Function Expressions ? Which OOPs principle can be implemented as an application for the same ?\\n* What is Hoisting ? Is it regarded as a good practice ?\\n* What are Closures/Lexical Environment of functions in JS ?\\n* When do we need/omit a `return` it when using an arrow function ?\\n* Can features like `this`, `super` be used with arrow functions ? Do they give the same result ?\\n* Can Arrow functions be used as a Constructor ?\\n* What do we mean by spread syntax ?\\n* What is Rest Arguments in a function ?\\n* What is a higher-order Function ?\\n\\n## Note:\\nI think not only these are the major takeaways  from the editorial, but can be a part of an interviewers list of questions. These concepts are basic in nature and are important.\\n\\nHope this Helps people to quickly skim through the editorial and have a questions list they can review later. \\n "
                    },
                    {
                        "username": "ImHavven",
                        "content": "My Submission made Zlatan retire...."
                    },
                    {
                        "username": "rvrajaneesh",
                        "content": "bro,,"
                    },
                    {
                        "username": "Narkaa",
                        "content": "Don\\'t think it in Harder way! Your approach is probably works !! "
                    },
                    {
                        "username": "ritesh8828",
                        "content": "leetcode: let them enjoy : )"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "I guess LeetCode should remove \"Did you see this question in interview before?\""
                    }
                ]
            },
            {
                "id": 1883362,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 1884490,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 1883779,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 1883006,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 1882961,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 2075700,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 2071240,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 2067817,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 2067750,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 2067610,
                "content": [
                    {
                        "username": "botan",
                        "content": "I think this should me ranked as `Medium`"
                    },
                    {
                        "username": "user9946L",
                        "content": "Is that a serious question or what ?"
                    },
                    {
                        "username": "leeten__1500",
                        "content": "This is the first coding problem I solved < .5 minutes"
                    },
                    {
                        "username": "amansingh22160811",
                        "content": "Just return \"HELLO WORLD\""
                    },
                    {
                        "username": "vermagaurav8",
                        "content": "Good example for understanding higher order function for beginners."
                    },
                    {
                        "username": "rohitbedwal9",
                        "content": "/**\\n * @return {Function}\\n */\\nvar createHelloWorld = function() {\\n    \\n    return function(...args) {\\n       return \"Hello World\";\\n    }\\n};\\n\\n/**\\n * const f = createHelloWorld();\\n * f(); // \"Hello World\"\\n */"
                    },
                    {
                        "username": "solodjavadev91",
                        "content": "LC is becoming game like Soullike game. Start them slow and easy."
                    },
                    {
                        "username": "rmnaveen21",
                        "content": "Console.log(\" Hello world \\n\")"
                    },
                    {
                        "username": "emporteme",
                        "content": "Hello everyone, today is my first day in leetcode. Hope this journey will be great!"
                    },
                    {
                        "username": "ncn-ends",
                        "content": "Should be a hard question"
                    }
                ]
            },
            {
                "id": 2066805,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 2019294,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 2007841,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 2005776,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 1994093,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 1983939,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 1981326,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 1980290,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 1976191,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 1972670,
                "content": [
                    {
                        "username": "laraakram",
                        "content": " `your inline code...your inline code...` `your inline code...your inline code...`"
                    },
                    {
                        "username": "Ragoo",
                        "content": "SOMEONE EXPLAIN PLEASE!! the correct answer makes no sense, in the correct answer, where does \\'return\\' get logged? How am i supposed to know?\\n\\nI tried the tradition approach but it was wrong \\uD83D\\uDE22Maybe coding isnt for me, and i have spent 3 MONTHS LEARNING JAVASCRIPT and cant get off day 1 \\uD83D\\uDE22 \\n\\nI give up...\\n\\nMy incorrect solution was, \\n\\nfunction createHelloWorld() {\\n    let phrase = \"Hello World\"\\n  return phrase;\\n}\\n\\ncreateHelloWorld();\\n\\n"
                    },
                    {
                        "username": "nakul1710",
                        "content": "method to solve this "
                    },
                    {
                        "username": "kushalmahajan",
                        "content": "I mean, Why? Leetcode has this problem of filling up this space with questions. The questions on arrays alone have surpassed 1100. Maybe you need to clean up the question database a bit so that questions that don\\'t add value don\\'t contribute to the numbers on a topic. In this case, it is Javascript. I am pretty sure that when people make study plans, they make T-shirt estimate by number of questions in a topic/list/card etc. \\nPlease consider this a critical feedback. There are tons of sites doing exactly curation for better experience. You can save your time and resources in the longer run. \\n\\n"
                    },
                    {
                        "username": "abhiHegde28",
                        "content": "How can they pass any values to the function??\\nbecause there is no arguments mentioned in anonyms function."
                    },
                    {
                        "username": "Santosh_25",
                        "content": "I learned JavaScript basics but couldn\\'t solve this question at first but editorial helped me to solve the question and got to learn about HOF"
                    },
                    {
                        "username": "Singh_uday99",
                        "content": "Enjoy your first problem and best of luck "
                    },
                    {
                        "username": "devangkartiksuryavanshi",
                        "content": "Today is i am feel Demotivated because cleared my basic on javascript but did not complete this task  and also no idea how to solved it (meri shkatiya yha par kaam hi nhi kar rhi hai )\n.haha"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "New Bee\\'s just do what first line of description is saying just implement it in code."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "lol, even this problem had a little secret"
                    }
                ]
            },
            {
                "id": 1957561,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1949448,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1895131,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1890955,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1885086,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1883876,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1883806,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1883615,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1883565,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            },
            {
                "id": 1883477,
                "content": [
                    {
                        "username": "halboangel",
                        "content": "i thought this would teach coding. i was wrong- im so confused rn. this is a whole new language. "
                    },
                    {
                        "username": "sigmamies123",
                        "content": "hmm very good question!"
                    },
                    {
                        "username": "HaltAndCatchFire",
                        "content": "A newbie here. Where do I submit the solution?"
                    },
                    {
                        "username": "Zsix",
                        "content": "These discussion comments make my day lol."
                    },
                    {
                        "username": "devvrat02",
                        "content": "It simple when their is written in description return Hello world then what you need to write\\n "
                    },
                    {
                        "username": "vishaleet",
                        "content": "\"In our normal day to day programming we use c++/java/python/etc.. in that we declare a variable in a function then we use it in for/while loop in itself that function is closure or not.\\nLet\\'s discuss this guys this will help us understand concept more clearly..\""
                    },
                    {
                        "username": "thealonemusk",
                        "content": "I thought there would be a catch , i thought lemme submit the simplest solution and fix what the errors will be , it got accepted . it took me 5 s to solve this \\uD83D\\uDE2D\\uD83D\\uDE2D"
                    },
                    {
                        "username": "thomas-x-69",
                        "content": "next step : applying to google interview"
                    },
                    {
                        "username": "Bhelwulf",
                        "content": "What\\'s the point of this question?"
                    },
                    {
                        "username": "devil-1964",
                        "content": " Want to print in same line:\\nTry  `process.stdout.write()` in Javascript:\\n `process.stdout.write(\"Hello\")`\\n `process.stdout.write(\"World\")`\\n `process.stdout.write(\"!!!\")`\\n//output:- \\n`HelloWorld!!!`\\nCursor remains in same line.\\n\\nunlike when we use `console.log()`\\nwhich moves our cursor to next line while printing on the screen.\\ni.e.\\n`console.log(\"Hello\")`\\n`console.log(\"World\")`\\n`console.log(\"!!!\")`\\n//output:-\\n`Hello`\\n`World`\\n` !!!`"
                    }
                ]
            }
        ]
    }
]