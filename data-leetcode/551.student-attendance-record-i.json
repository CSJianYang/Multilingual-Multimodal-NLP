[
    {
        "title": "Student Attendance Record I",
        "question_content": "You are given a string s representing an attendance record for a student where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:\n\n\t'A': Absent.\n\t'L': Late.\n\t'P': Present.\n\nThe student is eligible for an attendance award if they meet both of the following criteria:\n\n\tThe student was absent ('A') for strictly fewer than 2 days total.\n\tThe student was never late ('L') for 3 or more consecutive days.\n\nReturn true if the student is eligible for an attendance award, or false otherwise.\n&nbsp;\nExample 1:\n\nInput: s = \"PPALLP\"\nOutput: true\nExplanation: The student has fewer than 2 absences and was never late 3 or more consecutive days.\n\nExample 2:\n\nInput: s = \"PPALLL\"\nOutput: false\nExplanation: The student was late 3 consecutive days in the last 3 days, so is not eligible for the award.\n\n&nbsp;\nConstraints:\n\n\t1 <= s.length <= 1000\n\ts[i] is either 'A', 'L', or 'P'.",
        "solutions": [
            {
                "id": 101553,
                "title": "java-1-liner",
                "content": "```\\npublic boolean checkRecord(String s) {\\n    return !s.matches(\".*LLL.*|.*A.*A.*\");\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic boolean checkRecord(String s) {\\n    return !s.matches(\".*LLL.*|.*A.*A.*\");\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 101556,
                "title": "c-very-simple-solution",
                "content": "    bool checkRecord(string s) {\\n        int a=0, l=0;\\n        for(int i=0;i<s.size();i++) {\\n            if(s[i]=='A') a++;\\n            if(s[i]=='L') l++;\\n            else l=0;\\n            if(a>=2||l>2) return false;\\n        }\\n        return true;\\n    }",
                "solutionTags": [],
                "code": "    bool checkRecord(string s) {\\n        int a=0, l=0;\\n        for(int i=0;i<s.size();i++) {\\n            if(s[i]=='A') a++;\\n            if(s[i]=='L') l++;\\n            else l=0;\\n            if(a>=2||l>2) return false;\\n        }\\n        return true;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 101552,
                "title": "java-simple-without-regex-3-lines",
                "content": "\\nSimple by using Java String Functions - \\n```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        if(s.indexOf(\"A\") != s.lastIndexOf(\"A\") || s.contains(\"LLL\"))\\n            return false;\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        if(s.indexOf(\"A\") != s.lastIndexOf(\"A\") || s.contains(\"LLL\"))\\n            return false;\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 101608,
                "title": "1-line-python",
                "content": "    return s.count('A') <= 1 and s.count('LLL') == 0",
                "solutionTags": [],
                "code": "    return s.count('A') <= 1 and s.count('LLL') == 0",
                "codeTag": "Unknown"
            },
            {
                "id": 101599,
                "title": "java-o-n-solution-accepted",
                "content": "````\\npublic boolean checkRecord(String s) {\\n        int countA=0;\\n        int continuosL = 0;\\n        int charA = 'A';\\n        int charL ='L';\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i) == charA){\\n                countA++;\\n                continuosL = 0;\\n            }\\n            else if(s.charAt(i) == charL){\\n                continuosL++;\\n            }\\n            else{\\n                continuosL = 0;\\n            }\\n            if(countA >1 || continuosL > 2 ){\\n                return false;\\n            }\\n        }\\n        return true;\\n\\n    }\\n````",
                "solutionTags": [],
                "code": "````\\npublic boolean checkRecord(String s) {\\n        int countA=0;\\n        int continuosL = 0;\\n        int charA = 'A';\\n        int charL ='L';\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i) == charA){\\n                countA++;\\n                continuosL = 0;\\n            }\\n            else if(s.charAt(i) == charL){\\n                continuosL++;\\n            }\\n            else{\\n                continuosL = 0;\\n            }\\n            if(countA >1 || continuosL > 2 ){\\n                return false;\\n            }\\n        }\\n        return true;\\n\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 101622,
                "title": "one-line-java-solution-without-regex",
                "content": "I\\'m using 2 simple checks:\\n - String doesn\\'t contain `LLL`.\\n - The first occurrence of `A` equals to the last occurrence of `A`.\\n```\\npublic boolean checkRecord(String s) {\\n    return !s.contains(\"LLL\") && (s.indexOf(\"A\") == s.lastIndexOf(\"A\"));\\n}\\n```",
                "solutionTags": [
                    "String"
                ],
                "code": "```\\npublic boolean checkRecord(String s) {\\n    return !s.contains(\"LLL\") && (s.indexOf(\"A\") == s.lastIndexOf(\"A\"));\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 356636,
                "title": "solution-in-python-3-one-line",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n    \\treturn (s.count(\\'A\\') < 2) and (\\'LLL\\' not in s)\\n\\t\\t\\n\\t\\t\\n- Junaid Mansuri\\n(LeetCode ID)@hotmail.com",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n    \\treturn (s.count(\\'A\\') < 2) and (\\'LLL\\' not in s)\\n\\t\\t\\n\\t\\t\\n- Junaid Mansuri\\n(LeetCode ID)@hotmail.com",
                "codeTag": "Java"
            },
            {
                "id": 101613,
                "title": "python-1-liner-without-regex",
                "content": "```\\n    def checkRecord(self, s):\\n        return len(s.split('A'))<=2 and s.find('LLL')==-1\\n```",
                "solutionTags": [],
                "code": "```\\n    def checkRecord(self, s):\\n        return len(s.split('A'))<=2 and s.find('LLL')==-1\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 101611,
                "title": "javascript-solution",
                "content": "var checkRecord = function(s) {\\n    return s.split('A').length <= 2 && s.indexOf('LLL') === -1;\\n};",
                "solutionTags": [],
                "code": "var checkRecord = function(s) {\\n    return s.split('A').length <= 2 && s.indexOf('LLL') === -1;\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 101607,
                "title": "tiny-ruby-short-python-java-c",
                "content": "Just check that there aren't two 'A' or *three* consecutive 'L' (takes care of all *\"more than two\"* cases). Easiest with a regular expression, though at least Python and Ruby also have nice *\"count A\"* and *\"contains LLL\"* functionality.\\n<br>\\n\\n**Ruby:**\\n```\\ndef check_record(s)\\n  !s[/A.*A|LLL/]\\nend\\n```\\nor\\n```\\ndef check_record(s)\\n  !(s.count(\"A\") > 1 || s.include?(\"LLL\"))\\nend\\n```\\n<br>\\n\\n**Python:**\\n\\n    def checkRecord(self, s):\\n        return not re.search('A.*A|LLL', s)\\n\\nor\\n\\n    def checkRecord(self, s):\\n        return not (s.count('A') > 1 or 'LLL' in s)\\n<br>\\n\\n**Java:**\\n\\n    public boolean checkRecord(String s) {\\n        return !s.matches(\".*(A.*A|LLL).*\");\\n    }\\n<br>\\n\\n**C++:**\\n\\n    bool checkRecord(string s) {\\n        return !regex_search(s, regex(\"A.*A|LLL\"));\\n    }",
                "solutionTags": [],
                "code": "```\\ndef check_record(s)\\n  !s[/A.*A|LLL/]\\nend\\n```\n```\\ndef check_record(s)\\n  !(s.count(\"A\") > 1 || s.include?(\"LLL\"))\\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1685249,
                "title": "python-one-line-simple-solution",
                "content": "**Python :**\\n\\n```\\ndef checkRecord(self, s: str) -> bool:\\n\\treturn False if \"LLL\" in s or s.count(\\'A\\') >= 2 else True\\n```\\n\\n**Like it ? please upvote !**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndef checkRecord(self, s: str) -> bool:\\n\\treturn False if \"LLL\" in s or s.count(\\'A\\') >= 2 else True\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1011776,
                "title": "python-3-one-liners",
                "content": "There are two methods I discovered. Second method is more efficent than first. \\n```\\n        # Method 1\\n        # return s.count(\\'A\\')<=1 and s.count(\\'LLL\\') == 0\\n        # Method 2\\n        return s.count(\"A\") < 2 and \"LLL\" not in s\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "String"
                ],
                "code": "```\\n        # Method 1\\n        # return s.count(\\'A\\')<=1 and s.count(\\'LLL\\') == 0\\n        # Method 2\\n        return s.count(\"A\") < 2 and \"LLL\" not in s\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 101579,
                "title": "intuitive-javascript-solution",
                "content": "```\\nvar checkRecord = function(s) {\\n    // check if there are more than 2 As and 3 continuous Ls\\n    return !/^.*(A.*A|L{3,}).*$/.test(s);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkRecord = function(s) {\\n    // check if there are more than 2 As and 3 continuous Ls\\n    return !/^.*(A.*A|L{3,}).*$/.test(s);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 101610,
                "title": "a-few-short-javascript-solutions",
                "content": "Count three consecutive lates as two absents:\\n```\\nvar checkRecord = function(s) {\\n    let absentCount = 0;\\n    for (let i = 0; i < s.length && absentCount < 2; i++) {\\n        absentCount += (s[i] === 'A') + 2 * (s[i] === 'L' && s[i - 1] === 'L' && s[i - 2] === 'L');\\n    }\\n    return absentCount < 2;\\n};\\n```\\nAnd now for some one-liners...\\n```\\nvar checkRecord = function(s) {\\n    return s.split('').reduce((c, a, i) => c + (a === 'A') + 2 * (a === 'L' && s[i - 1] === a && s[i - 2] === a), 0) < 2;\\n};\\n```\\nUsing `indexOf`:\\n```\\nvar checkRecord = function(s, a = 'dummy') {\\n    return !(~(a = s.indexOf('A')) && ~s.indexOf('A', a + 1) || ~s.indexOf('LLL'));\\n};\\n```\\nUsing regex:\\n```\\nvar checkRecord = function(s) {\\n    return !/(A.*A|LLL)/.test(s);\\n};\\n```\\nConfigurable reward criteria:\\n```\\nvar checkRecord = function(s, a = 2, l = 3) {\\n    return s.split('A').length - 1 < a && !~s.indexOf('L'.repeat(l));\\n};\\n```\\nConfigurable regex:\\n```\\nvar checkRecord = function(s, a = 2, l = 3) {\\n    return !new RegExp(`((A.*){${a}}|L{${l}})`).test(s);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkRecord = function(s) {\\n    let absentCount = 0;\\n    for (let i = 0; i < s.length && absentCount < 2; i++) {\\n        absentCount += (s[i] === 'A') + 2 * (s[i] === 'L' && s[i - 1] === 'L' && s[i - 2] === 'L');\\n    }\\n    return absentCount < 2;\\n};\\n```\n```\\nvar checkRecord = function(s) {\\n    return s.split('').reduce((c, a, i) => c + (a === 'A') + 2 * (a === 'L' && s[i - 1] === a && s[i - 2] === a), 0) < 2;\\n};\\n```\n```\\nvar checkRecord = function(s, a = 'dummy') {\\n    return !(~(a = s.indexOf('A')) && ~s.indexOf('A', a + 1) || ~s.indexOf('LLL'));\\n};\\n```\n```\\nvar checkRecord = function(s) {\\n    return !/(A.*A|LLL)/.test(s);\\n};\\n```\n```\\nvar checkRecord = function(s, a = 2, l = 3) {\\n    return s.split('A').length - 1 < a && !~s.indexOf('L'.repeat(l));\\n};\\n```\n```\\nvar checkRecord = function(s, a = 2, l = 3) {\\n    return !new RegExp(`((A.*){${a}}|L{${l}})`).test(s);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 887302,
                "title": "c-python-one-line",
                "content": "**C++:**\\n```\\nbool checkRecord(string s) {\\n\\treturn s.find(\"LLL\")==string::npos && count(s.begin(),s.end(),\\'A\\')<=1;\\n}\\n```\\nPython:\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\\'A\\')<2 and s.count(\\'LLL\\')==0\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nbool checkRecord(string s) {\\n\\treturn s.find(\"LLL\")==string::npos && count(s.begin(),s.end(),\\'A\\')<=1;\\n}\\n```\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\\'A\\')<2 and s.count(\\'LLL\\')==0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 346015,
                "title": "javascript-1-line-short-solution-without-regex",
                "content": "```js\\nvar checkRecord = function(s) {\\n    return s.split(\"\").filter(s => s == \"A\").length <= 1 && !s.includes(\"LLL\");\\n};",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```js\\nvar checkRecord = function(s) {\\n    return s.split(\"\").filter(s => s == \"A\").length <= 1 && !s.includes(\"LLL\");\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 2965909,
                "title": "simple-java-solution-beats-100-time-0-ms-runtime-brute-force-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nI tried to solve this problem using simple brute force approach\\n\\n\\n# Complexity\\n- Time complexity: O(n)- where n is the length of string\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int co = 0,a=0;\\n        for(char c : s.toCharArray())\\n        {\\n            if(c==\\'P\\' || c == \\'A\\')\\n                co=0;\\n\\n            if(c == \\'L\\')\\n                co++;\\n            \\n            if(co == 3)\\n                return false;\\n            if(c == \\'A\\')\\n                a++;\\n            \\n            if(a>=2)\\n                return false;\\n        }\\n\\n        return true;\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int co = 0,a=0;\\n        for(char c : s.toCharArray())\\n        {\\n            if(c==\\'P\\' || c == \\'A\\')\\n                co=0;\\n\\n            if(c == \\'L\\')\\n                co++;\\n            \\n            if(co == 3)\\n                return false;\\n            if(c == \\'A\\')\\n                a++;\\n            \\n            if(a>=2)\\n                return false;\\n        }\\n\\n        return true;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2826653,
                "title": "java-100-easiest-solution",
                "content": "![yoooooo.PNG](https://assets.leetcode.com/users/images/8d57c7a8-4e16-4c2e-a46e-3f370864bd43_1681411726.7323098.png)\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int A = 0, L = 0, max = 0;\\n        for (char c : s.toCharArray()) {\\n            if (c == \\'A\\') A++;\\n        }\\n        if (A >= 2) return false;\\n        for (char c : s.toCharArray()) {\\n            if (c == \\'L\\') {\\n                L++;\\n            } else {\\n                L = 0;\\n            }\\n            max = Math.max(max, L);\\n        }\\n        return max < 3;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int A = 0, L = 0, max = 0;\\n        for (char c : s.toCharArray()) {\\n            if (c == \\'A\\') A++;\\n        }\\n        if (A >= 2) return false;\\n        for (char c : s.toCharArray()) {\\n            if (c == \\'L\\') {\\n                L++;\\n            } else {\\n                L = 0;\\n            }\\n            max = Math.max(max, L);\\n        }\\n        return max < 3;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2774794,
                "title": "python-one-f-cking-liner-with-detailed-comments",
                "content": "**\\u2705 IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n****\\nThis solution employs a simple one-liner with conditional statements. Time complexity is linear: **O(N)**. Space complexity is constant: **O(1)**.\\n\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        # self-explanatory one-liner\\n        return s.count(\"A\") < 2 and s.find(\"LLL\") < 0\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        # self-explanatory one-liner\\n        return s.count(\"A\") < 2 and s.find(\"LLL\") < 0\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1687778,
                "title": "java-easy-to-understand-o-n",
                "content": "```\\nclass Solution {\\n    \\tpublic boolean checkRecord(String s) {\\n\\t\\tint abcount = 0;\\n\\t\\tint lateCount = 0;\\n\\t\\tchar[] ch = s.toCharArray();\\n\\t\\tfor (char letter : ch) {\\n\\t\\t\\tif (letter == \\'A\\') {\\n\\t\\t\\t\\t++abcount;\\n\\t\\t\\t\\tif (abcount == 2)\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\tif (letter == \\'L\\')\\n\\t\\t\\t\\t++lateCount;\\n\\t\\t\\tif (letter == \\'A\\' || letter == \\'P\\')\\n\\t\\t\\t\\tlateCount = 0;\\n\\t\\t\\tif (lateCount > 2)\\n\\t\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    \\tpublic boolean checkRecord(String s) {\\n\\t\\tint abcount = 0;\\n\\t\\tint lateCount = 0;\\n\\t\\tchar[] ch = s.toCharArray();\\n\\t\\tfor (char letter : ch) {\\n\\t\\t\\tif (letter == \\'A\\') {\\n\\t\\t\\t\\t++abcount;\\n\\t\\t\\t\\tif (abcount == 2)\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\tif (letter == \\'L\\')\\n\\t\\t\\t\\t++lateCount;\\n\\t\\t\\tif (letter == \\'A\\' || letter == \\'P\\')\\n\\t\\t\\t\\tlateCount = 0;\\n\\t\\t\\tif (lateCount > 2)\\n\\t\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3294728,
                "title": "551-space-92-86-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n1. Initialize two variables, count_A and count_L, both to 0.\\n2. Iterate through each character c in the input string s.\\n3. If the character is \\'A\\', increment count_A and reset count_L to 0.\\n4. If the character is \\'L\\', increment count_L.\\n5. If the character is not \\'A\\' or \\'L\\', reset count_L to 0.\\n6. Check if count_A is greater than or equal to 2 or if count_L is greater than or equal to 3. If either condition is met, return False.\\n7. If the iteration completes without returning False, return True.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        # Count of \\'A\\' and consecutive \\'L\\'s\\n        count_A, count_L = 0, 0\\n        \\n        for c in s:\\n            if c == \\'A\\':\\n                count_A += 1\\n                count_L = 0\\n            elif c == \\'L\\':\\n                count_L += 1\\n            else:\\n                count_L = 0\\n            \\n            if count_A >= 2 or count_L >= 3:\\n                return False\\n        \\n        return True\\n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "String"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        # Count of \\'A\\' and consecutive \\'L\\'s\\n        count_A, count_L = 0, 0\\n        \\n        for c in s:\\n            if c == \\'A\\':\\n                count_A += 1\\n                count_L = 0\\n            elif c == \\'L\\':\\n                count_L += 1\\n            else:\\n                count_L = 0\\n            \\n            if count_A >= 2 or count_L >= 3:\\n                return False\\n        \\n        return True\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1853290,
                "title": "short-javascript-solution",
                "content": "Found this solution helpful? Consider showing support by upvoting this post. If there are any questions, kindly leave a comment below. Thank you and happy hacking!\\n```\\nconst checkRecord = s => {\\n    if (s.includes(\\'LLL\\')) return false\\n    let absentCount = 0;\\n\\n    for (let i = 0; i < s.length; i++) {\\n        if (s[i] === \\'A\\') absentCount++\\n    }\\n\\n    return absentCount < 2 \\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst checkRecord = s => {\\n    if (s.includes(\\'LLL\\')) return false\\n    let absentCount = 0;\\n\\n    for (let i = 0; i < s.length; i++) {\\n        if (s[i] === \\'A\\') absentCount++\\n    }\\n\\n    return absentCount < 2 \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 952918,
                "title": "easy-java-solution-0-ms",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        \\n        int absentCount = 0;\\n        int lateCount = 0;\\n        \\n        for(char letter : s.toCharArray()){\\n            if(letter == \\'A\\') absentCount ++;\\n            if(letter == \\'L\\') lateCount ++;\\n            if(letter == \\'A\\' || letter == \\'P\\') lateCount = 0;\\n            if(lateCount > 2) return false;\\n        }\\n        \\n        \\n        return absentCount <= 1;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        \\n        int absentCount = 0;\\n        int lateCount = 0;\\n        \\n        for(char letter : s.toCharArray()){\\n            if(letter == \\'A\\') absentCount ++;\\n            if(letter == \\'L\\') lateCount ++;\\n            if(letter == \\'A\\' || letter == \\'P\\') lateCount = 0;\\n            if(lateCount > 2) return false;\\n        }\\n        \\n        \\n        return absentCount <= 1;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 685892,
                "title": "c-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        if (s.size() <= 1)\\n            return true;\\n        \\n        int Acount = 0, lCount = 0;\\n        for (int i = 0; i < s.size(); i++) {\\n            if (s[i] == \\'L\\') {\\n                lCount++;\\n                if (lCount > 2)\\n                    return false;\\n            }\\n            else {\\n                lCount = 0;\\n                if (s[i] == \\'A\\')\\n                    Acount++;\\n                if (Acount > 1)\\n                    return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        if (s.size() <= 1)\\n            return true;\\n        \\n        int Acount = 0, lCount = 0;\\n        for (int i = 0; i < s.size(); i++) {\\n            if (s[i] == \\'L\\') {\\n                lCount++;\\n                if (lCount > 2)\\n                    return false;\\n            }\\n            else {\\n                lCount = 0;\\n                if (s[i] == \\'A\\')\\n                    Acount++;\\n                if (Acount > 1)\\n                    return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 675740,
                "title": "java-python-regex-solutions-shortest-code-not-for-interviewing",
                "content": "### Answering interview questions with RegEx is not a good idea because RegEx engines in practice are slow and interviewers may not really like RegEx solutions for their problems.\\n\\n---------- \\n\\nApart from that, it would be okay to use RegEx for a question like this one.  \\n\\n```\\nclass Solution:\\n    def checkRecord(self, s):\\n        return not re.match(\\'.*(LLL|A.*A).*\\', s)\\n```\\n\\n- It would be better to use non-capturing groups  `(?:)` here:\\n\\n```\\nclass Solution:\\n    def checkRecord(self, s):\\n        return not re.match(\\'.*(?:LLL|A.*A).*\\', s)\\n```\\n\\n\\nPython Without RegEx:\\n\\n```\\nclass Solution:\\n    def checkRecord(self, s):\\n        return s.count(\\'A\\') < 2 and \\'LLL\\' not in s\\n```\\n\\n\\n### Java\\n\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        return !s.matches(\".*(?:LLL|A.*A).*\");\\n    }\\n}\\n```\\n\\n### Java: Shortest Code - NOT FOR INTERVIEW\\n\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        return!s.matches(\".*(LLL|A.*A).*\");\\n    }\\n}\\n```\\n\\n### Reference\\n\\n[Java 1-liner](https://leetcode.com/problems/student-attendance-record-i/discuss/101553/Java-1-liner)",
                "solutionTags": [
                    "Java",
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s):\\n        return not re.match(\\'.*(LLL|A.*A).*\\', s)\\n```\n```\\nclass Solution:\\n    def checkRecord(self, s):\\n        return not re.match(\\'.*(?:LLL|A.*A).*\\', s)\\n```\n```\\nclass Solution:\\n    def checkRecord(self, s):\\n        return s.count(\\'A\\') < 2 and \\'LLL\\' not in s\\n```\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        return !s.matches(\".*(?:LLL|A.*A).*\");\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        return!s.matches(\".*(LLL|A.*A).*\");\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 456439,
                "title": "java-easy-solution-nothing-fancy",
                "content": "```\\npublic boolean checkRecord(String s) {\\n\\tif(s.contains(\"LLL\"))\\n\\t\\treturn false;\\n\\tint countA = 0;\\n\\tfor(int i=0; i<s.length(); i++) {\\n\\t\\tif(s.charAt(i)==\\'A\\')\\n\\t\\t\\tcountA++;\\n\\t\\tif(countA>1)\\n\\t\\t\\treturn false;\\n\\t}\\n\\treturn true;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic boolean checkRecord(String s) {\\n\\tif(s.contains(\"LLL\"))\\n\\t\\treturn false;\\n\\tint countA = 0;\\n\\tfor(int i=0; i<s.length(); i++) {\\n\\t\\tif(s.charAt(i)==\\'A\\')\\n\\t\\t\\tcountA++;\\n\\t\\tif(countA>1)\\n\\t\\t\\treturn false;\\n\\t}\\n\\treturn true;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3539908,
                "title": "easy-to-understand-python-1-liner-o-n",
                "content": "# Intuition\\nFor string problems, see if you can solve them with built-in Python string methods. Often, it\\'s much more Pythonic than iteration, even if iteration might have faster runtime. Also, note that we need only check if there is a run of 3 \\'L\\'s, as a run of more than 3 \\'L\\'s also contains a run of 3 L\\'s.\\n\\n# Approach\\nWe count the number of occurrences of the string \\'A\\' and check that it is less than 2. We also check that \\'LLL\\' is not in the string.\\n# Complexity\\n- Time complexity:\\nCounting is $O(n)$ and substring matching is $O(n)$\\n\\n- Space complexity:\\nEverything here is in-place, so $O(1)$.\\n\\n# Code\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\\'A\\') < 2 and \\'LLL\\' not in s\\n```",
                "solutionTags": [
                    "Python3",
                    "String",
                    "String Matching"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\\'A\\') < 2 and \\'LLL\\' not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3039523,
                "title": "easiest-solution-c-with-0ms-beats-100-of-solutions",
                "content": "# How it works\\nI first check to see if the amount of Absences is above or equal to 2, if it is I return false.\\nI Then just set up a basic count statement with a for loop that goes through incremeneting it everytime it sees the letter L, and reseting the count if it is something else.\\nIf it sees nothing wrong it will return true.\\nHope this helps <3\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string str) {\\n        long int Absent {count(str.begin(), str.end(), \\'A\\')};\\n        if(Absent >= 2) return false;\\n        int count {};\\n        for(auto element: str){\\n            if(element==\\'L\\'){\\n                count++;\\n            }else{count = 0;}\\n            if(count==3)return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string str) {\\n        long int Absent {count(str.begin(), str.end(), \\'A\\')};\\n        if(Absent >= 2) return false;\\n        int count {};\\n        for(auto element: str){\\n            if(element==\\'L\\'){\\n                count++;\\n            }else{count = 0;}\\n            if(count==3)return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1697334,
                "title": "java-easy-solution-100-faster",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n      char[] arr = s.toCharArray();\\n        int countA = 0;\\n        boolean res = true;\\n      for(int i=0;i<arr.length;i++){\\n          if(arr[i]==\\'A\\')\\n              countA++;\\n          if(countA>=2){\\n              res = false;\\n              break;\\n          }\\n          if(arr[i]==\\'L\\' && (i+2)<arr.length && arr[i+1]==\\'L\\'&&arr[i+2]==\\'L\\'){\\n                    res=false;\\n                    break;\\n              }\\n          }\\n        return res;\\n    }\\n}\\n```",
                "solutionTags": [
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n      char[] arr = s.toCharArray();\\n        int countA = 0;\\n        boolean res = true;\\n      for(int i=0;i<arr.length;i++){\\n          if(arr[i]==\\'A\\')\\n              countA++;\\n          if(countA>=2){\\n              res = false;\\n              break;\\n          }\\n          if(arr[i]==\\'L\\' && (i+2)<arr.length && arr[i+1]==\\'L\\'&&arr[i+2]==\\'L\\'){\\n                    res=false;\\n                    break;\\n              }\\n          }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1407236,
                "title": "python-faster-than-100-runtime-12-ms",
                "content": "Runtime: 12 ms, faster than 100.00% of Python3 online submissions for Student Attendance Record I.\\nMemory Usage: 14.1 MB, less than 73.18% of Python3 online submissions for Student Attendance Record I.\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        d=0\\n        for i in range(len(s)):\\n            if s[i]==\\'A\\':\\n                d+=1\\n            if d==2:\\n                return False\\n            if i>=2 and s[i]==s[i-1]==s[i-2]==\\'L\\':\\n                return False\\n        return True\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "Runtime: 12 ms, faster than 100.00% of Python3 online submissions for Student Attendance Record I.\\nMemory Usage: 14.1 MB, less than 73.18% of Python3 online submissions for Student Attendance Record I.\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        d=0\\n        for i in range(len(s)):\\n            if s[i]==\\'A\\':\\n                d+=1\\n            if d==2:\\n                return False\\n            if i>=2 and s[i]==s[i-1]==s[i-2]==\\'L\\':\\n                return False\\n        return True\\n",
                "codeTag": "Java"
            },
            {
                "id": 101594,
                "title": "java-1-line-solution",
                "content": "```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        return !s.matches(\".*A.*A.*\") && !s.matches(\".*LLL.*\");\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        return !s.matches(\".*A.*A.*\") && !s.matches(\".*LLL.*\");\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3777128,
                "title": "1-line-java-using-indexof",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n// Jaret\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        return s.indexOf(\"A\")==s.lastIndexOf(\"A\") && s.indexOf(\"LLL\") == -1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n// Jaret\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        return s.indexOf(\"A\")==s.lastIndexOf(\"A\") && s.indexOf(\"LLL\") == -1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3756295,
                "title": "easy-java-100-beat",
                "content": "# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n    int a=0, l=0;\\n    for (int i=0; i < s.length(); i++) {\\n        if (s.charAt(i) == \\'A\\') a++;\\n        if (s.charAt(i) == \\'L\\') l++;\\n        else l = 0;\\n        if (a >= 2 || l > 2) return false;\\n    }\\n\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n    int a=0, l=0;\\n    for (int i=0; i < s.length(); i++) {\\n        if (s.charAt(i) == \\'A\\') a++;\\n        if (s.charAt(i) == \\'L\\') l++;\\n        else l = 0;\\n        if (a >= 2 || l > 2) return false;\\n    }\\n\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3600656,
                "title": "very-simple-c",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a = 0, b = 0, c = 0;\\n        for(auto &i: s){\\n            if(i==\\'A\\')a++,b=0;//count of Absent and consicutive late 0\\n            else if(i==\\'L\\')b++;//consicutive late count\\n            else b = 0;//if present consicutive late count = 0\\n            if(b>=3)c = 1;//if consicutive late >= 3 than return true\\n        }\\n        if(c||a>1)return false;\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a = 0, b = 0, c = 0;\\n        for(auto &i: s){\\n            if(i==\\'A\\')a++,b=0;//count of Absent and consicutive late 0\\n            else if(i==\\'L\\')b++;//consicutive late count\\n            else b = 0;//if present consicutive late count = 0\\n            if(b>=3)c = 1;//if consicutive late >= 3 than return true\\n        }\\n        if(c||a>1)return false;\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3106362,
                "title": "easiest-optimized-approach",
                "content": "\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n\\n    int size=s.length();\\n    if(s.replace(\"A\",\"\").length()<=size-2||s.indexOf(\"LLL\")!=-1)return false;\\n\\n    return true;\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n\\n    int size=s.length();\\n    if(s.replace(\"A\",\"\").length()<=size-2||s.indexOf(\"LLL\")!=-1)return false;\\n\\n    return true;\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1382721,
                "title": "all-approach-s-discussed-java-code",
                "content": "**Approach #1 Simple Solution [Accepted]**\\n\\n```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        int count=0;\\n        for(int i=0;i<s.length();i++)\\n            if(s.charAt(i)==\\'A\\')\\n                count++;\\n        return count<2 && s.indexOf(\"LLL\")<0;\\n    }\\n}\\n```\\n**Complexity Analysis**\\n\\nTime complexity : O(n). Single loop and indexOf method takes O(n) time.\\nSpace complexity : O(1). Constant space is used.\\n    \\n**Approach #2 Better Solution [Accepted]**\\n\\nOne optimization of above method is to break the loop when count of A\\'s becomes 2.\\n    \\n```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        int count=0;\\n        for(int i=0;i<s.length() && count<2 ;i++)\\n            if(s.charAt(i)==\\'A\\')\\n                count++;\\n        return count<2 && s.indexOf(\"LLL\")<0;\\n    }\\n}\\n```\\n**Complexity Analysis**\\n\\nTime complexity : O(n). Single loop and indexOf method takes O(n) time.\\nSpace complexity : O(1). Constant space is used.\\n\\n**Approach #3 Single pass Solution (Without indexOf method) [Accepted]**\\n\\nWe can solve this problem in a single pass without using indexOf method. In a single loop we can count number of A\\'s and also check the substring LLL in a given string.\\n\\n```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        int countA = 0;\\n        for (int i = 0; i < s.length() && countA < 2; i++) {\\n            if (s.charAt(i) == \\'A\\')\\n                countA++;\\n            if (i <= s.length() - 3 && s.charAt(i) == \\'L\\' && s.charAt(i + 1) == \\'L\\' && s.charAt(i + 2) == \\'L\\')\\n                return false;\\n        }\\n        return countA < 2;\\n    }\\n}\\n```\\n**Complexity Analysis**\\nTime complexity : O(n). Single loop upto string length is used.\\nSpace complexity : O(1). Constant space is used.\\n\\n",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        int count=0;\\n        for(int i=0;i<s.length();i++)\\n            if(s.charAt(i)==\\'A\\')\\n                count++;\\n        return count<2 && s.indexOf(\"LLL\")<0;\\n    }\\n}\\n```\n```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        int count=0;\\n        for(int i=0;i<s.length() && count<2 ;i++)\\n            if(s.charAt(i)==\\'A\\')\\n                count++;\\n        return count<2 && s.indexOf(\"LLL\")<0;\\n    }\\n}\\n```\n```\\npublic class Solution {\\n    public boolean checkRecord(String s) {\\n        int countA = 0;\\n        for (int i = 0; i < s.length() && countA < 2; i++) {\\n            if (s.charAt(i) == \\'A\\')\\n                countA++;\\n            if (i <= s.length() - 3 && s.charAt(i) == \\'L\\' && s.charAt(i + 1) == \\'L\\' && s.charAt(i + 2) == \\'L\\')\\n                return false;\\n        }\\n        return countA < 2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1317358,
                "title": "rust-simple-loop-solution",
                "content": "```\\nimpl Solution {\\n    pub fn check_record(s: String) -> bool {\\n        let mut absCnt = 0;\\n        let mut lateCnt = 0;\\n\\n        for char in s.chars() {\\n            match char {\\n                \\'L\\' => lateCnt += 1,\\n                \\'A\\' => {\\n                    lateCnt = 0;\\n                    absCnt += 1;\\n                },\\n                _ => lateCnt = 0,\\n            }\\n\\n            if lateCnt == 3 || absCnt == 2 {\\n                return false;\\n            }\\n        }\\n\\n        true\\n    }\\n}\\n",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn check_record(s: String) -> bool {\\n        let mut absCnt = 0;\\n        let mut lateCnt = 0;\\n\\n        for char in s.chars() {\\n            match char {\\n                \\'L\\' => lateCnt += 1,\\n                \\'A\\' => {\\n                    lateCnt = 0;\\n                    absCnt += 1;\\n                },\\n                _ => lateCnt = 0,\\n            }\\n\\n            if lateCnt == 3 || absCnt == 2 {\\n                return false;\\n            }\\n        }\\n\\n        true\\n    }\\n}\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 843658,
                "title": "python-simplest-one-liner-solution",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return not (s.count(\\'A\\') > 1 or s.count(\\'LLL\\') > 0)\\n```\\nFor some reason, this way was double faster than the first one-liner one:\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if s.count(\\'A\\') > 1 or s.count(\\'LLL\\') > 0:\\n            return False\\n        return True\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return not (s.count(\\'A\\') > 1 or s.count(\\'LLL\\') > 0)\\n```\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if s.count(\\'A\\') > 1 or s.count(\\'LLL\\') > 0:\\n            return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 567379,
                "title": "golang-one-liner",
                "content": "```\\npackage main\\n\\nimport \"strings\"\\n\\nfunc checkRecord(s string) bool {\\n\\treturn strings.Count(s, \"A\") < 2 && strings.Index(s, \"LLL\") == -1\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\npackage main\\n\\nimport \"strings\"\\n\\nfunc checkRecord(s string) bool {\\n\\treturn strings.Count(s, \"A\") < 2 && strings.Index(s, \"LLL\") == -1\\n}\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 512411,
                "title": "python-basic-solution",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        A, L = 0, 0\\n        for l in s:\\n            if l == \\'A\\': A += 1\\n            elif l == \\'L\\': L += 1\\n            if l != \\'L\\': L = 0\\n            if L > 2 or A > 1: return False\\n        return True\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        A, L = 0, 0\\n        for l in s:\\n            if l == \\'A\\': A += 1\\n            elif l == \\'L\\': L += 1\\n            if l != \\'L\\': L = 0\\n            if L > 2 or A > 1: return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 308886,
                "title": "swift-one-liner-o-n-100",
                "content": "```\\nclass Solution {\\n    func checkRecord(_ s: String) -> Bool {\\n      return s.firstIndex(of: \"A\") == s.lastIndex(of: \"A\") && !s.contains(\"LLL\")\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    func checkRecord(_ s: String) -> Bool {\\n      return s.firstIndex(of: \"A\") == s.lastIndex(of: \"A\") && !s.contains(\"LLL\")\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 177594,
                "title": "java-o-n-clear-and-concise",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int aNum = 0;\\n        int lNumContinuous = 0;\\n        for(int i = 0; i < s.length(); i++){\\n            char attendance = s.charAt(i);\\n            if(attendance == \\'L\\')\\n                lNumContinuous++;\\n            else\\n                lNumContinuous = 0;\\n            if(attendance == \\'A\\')\\n                aNum++;\\n            if(lNumContinuous > 2 || aNum > 1) return false;\\n        }\\n        return true;\\n        \\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int aNum = 0;\\n        int lNumContinuous = 0;\\n        for(int i = 0; i < s.length(); i++){\\n            char attendance = s.charAt(i);\\n            if(attendance == \\'L\\')\\n                lNumContinuous++;\\n            else\\n                lNumContinuous = 0;\\n            if(attendance == \\'A\\')\\n                aNum++;\\n            if(lNumContinuous > 2 || aNum > 1) return false;\\n        }\\n        return true;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 114059,
                "title": "c-1-line",
                "content": "```\\npublic class Solution {\\n    public bool CheckRecord(string s) {\\n        return s.ToCharArray().Count(c => c == 'A') <= 1 && !s.Contains(\"LLL\");\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public bool CheckRecord(string s) {\\n        return s.ToCharArray().Count(c => c == 'A') <= 1 && !s.Contains(\"LLL\");\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 101620,
                "title": "java-o-n-time-and-o-1-space-solution",
                "content": "Does not use the string.match method, but rather iterates through the String until it hits the conditions for it to return a FALSE.\\n\\nAny feedback is appreciated!\\n\\n```\\npublic boolean checkRecord(String s) {\\n        //Time ~ O(n)\\n        //Space ~ O(1)\\n        // ---> where n is the length of String s\\n        \\n        int countA = 0;\\n        int countL = 0;\\n        \\n        for(int i = 0; i < s.length(); i++){\\n            if(s.charAt(i) == 'A'){\\n                if(countA == 1){\\n                    return false;\\n                } else{\\n                    countA = countA + 1;\\n                }\\n                countL = 0;\\n            } else if(s.charAt(i) == 'L'){\\n                if(countL == 2){\\n                    return false;\\n                } else{\\n                    countL = countL + 1;\\n                }\\n            } else{\\n                countL = 0;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic boolean checkRecord(String s) {\\n        //Time ~ O(n)\\n        //Space ~ O(1)\\n        // ---> where n is the length of String s\\n        \\n        int countA = 0;\\n        int countL = 0;\\n        \\n        for(int i = 0; i < s.length(); i++){\\n            if(s.charAt(i) == 'A'){\\n                if(countA == 1){\\n                    return false;\\n                } else{\\n                    countA = countA + 1;\\n                }\\n                countL = 0;\\n            } else if(s.charAt(i) == 'L'){\\n                if(countL == 2){\\n                    return false;\\n                } else{\\n                    countL = countL + 1;\\n                }\\n            } else{\\n                countL = 0;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3438544,
                "title": "100-beginners-friendly",
                "content": "\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n        if count of \\'A\\' >=2 return false;\\n        if String.contains atleast 3 consecutives \"LLL\" return false \\n\\n        and else return true  \\n\\n# Complexity\\n- Time complexity:O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int a=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\') a++;\\n        }\\n        if(s.contains(\"LLL\")) return false;\\n        if(a>=2) return false;\\n\\n        return true;\\n         \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int a=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\') a++;\\n        }\\n        if(s.contains(\"LLL\")) return false;\\n        if(a>=2) return false;\\n\\n        return true;\\n         \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3021503,
                "title": "fastest-c-solution",
                "content": "***Please go through the code and comments for better clarity.***\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n\\n       //declared and initialised countAbsent variable with 0 , to count the number of days the student was absent\\n       int countAbsent=0;\\n\\n      //traverse the string and increment the countAbsent variable whenever you encounter character \\'A\\'\\n       for(int i=0;i<s.length();++i){\\n           if(s[i]==\\'A\\') countAbsent++;\\n       } \\n//The student is eligible for an attendance award if they meet both of the following criteria:\\n\\n// 1.The student was absent (\\'A\\') for strictly fewer than 2 days total.\\n       if(countAbsent>=2) return false;\\n\\n// 2.The student was never late (\\'L\\') for 3 or more consecutive days.\\n       for(int i=0;i<s.length()-1;++i){\\n           if(s[i]==\\'L\\' && s[i]==s[i+1] && s[i+1]==s[i+2]) return false;\\n       }\\n\\n       return true;\\n    }\\n};\\n```\\n# HAPPY CODING !\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n\\n       //declared and initialised countAbsent variable with 0 , to count the number of days the student was absent\\n       int countAbsent=0;\\n\\n      //traverse the string and increment the countAbsent variable whenever you encounter character \\'A\\'\\n       for(int i=0;i<s.length();++i){\\n           if(s[i]==\\'A\\') countAbsent++;\\n       } \\n//The student is eligible for an attendance award if they meet both of the following criteria:\\n\\n// 1.The student was absent (\\'A\\') for strictly fewer than 2 days total.\\n       if(countAbsent>=2) return false;\\n\\n// 2.The student was never late (\\'L\\') for 3 or more consecutive days.\\n       for(int i=0;i<s.length()-1;++i){\\n           if(s[i]==\\'L\\' && s[i]==s[i+1] && s[i+1]==s[i+2]) return false;\\n       }\\n\\n       return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2926777,
                "title": "javascript-one-line-t-o-n-s-o-1-fastest",
                "content": "Please upvote if you found this is interesting! Have fun with hacking!\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nvar checkRecord = function (s) {\\n  return s.indexOf(\"LLL\") === -1 && s.indexOf(\"A\") === s.lastIndexOf(\"A\")? true: false;\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkRecord = function (s) {\\n  return s.indexOf(\"LLL\") === -1 && s.indexOf(\"A\") === s.lastIndexOf(\"A\")? true: false;\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2904647,
                "title": "easy-solution-c",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a=0,l=0;\\n        for(int i=0;i<s.size();i++)\\n        {\\n        if(s[i]==\\'A\\')\\n        a++;\\n        if(s[i]==\\'L\\')\\n        l++;\\n        else l=0;\\n        if(a>=2||l>2)\\n        return false;\\n        }\\n        return true;\\n     \\n\\n    }\\n\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Two Pointers",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a=0,l=0;\\n        for(int i=0;i<s.size();i++)\\n        {\\n        if(s[i]==\\'A\\')\\n        a++;\\n        if(s[i]==\\'L\\')\\n        l++;\\n        else l=0;\\n        if(a>=2||l>2)\\n        return false;\\n        }\\n        return true;\\n     \\n\\n    }\\n\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2882671,
                "title": "easy-4-liner-solution-in-java-with-explanation-without-regex",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWe know that if the student is absent 2 days then he/she will not get any reward. So, we have checked the number of days in which student is absent. \\nAnd then we have to check if the student is late consecutively 3 times. If this happens then we have to return false. So we have checked using the method if String contains \"LLL\" then the student will not get the award.\\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int ca = 0;\\n        for(int i=0; i<s.length(); i++)\\n        if(s.charAt(i)==\\'A\\') ca++;\\n        return !s.contains(\"LLL\") && ca<2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int ca = 0;\\n        for(int i=0; i<s.length(); i++)\\n        if(s.charAt(i)==\\'A\\') ca++;\\n        return !s.contains(\"LLL\") && ca<2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2881483,
                "title": "c-easy-solution-tc-o-n-sc-o-1",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0,flag=0,count1=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'A\\'){\\n              count++;\\n                flag=1;\\n            }\\n            else if(s[i]==\\'L\\' && flag==1){\\n                count1=1;\\n                flag=0;\\n            }\\n            else if(s[i]==\\'L\\' && flag==0){\\n                count1++;\\n            }\\n            else {\\n                flag=1;\\n            }\\n            if(count1>2) return false;\\n        }\\n        if(count<2) return true;\\n        return false;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0,flag=0,count1=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'A\\'){\\n              count++;\\n                flag=1;\\n            }\\n            else if(s[i]==\\'L\\' && flag==1){\\n                count1=1;\\n                flag=0;\\n            }\\n            else if(s[i]==\\'L\\' && flag==0){\\n                count1++;\\n            }\\n            else {\\n                flag=1;\\n            }\\n            if(count1>2) return false;\\n        }\\n        if(count<2) return true;\\n        return false;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2812798,
                "title": "0ms-solution-in-python",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def checkRecord(self, s):\\n        isLate = False\\n        absent = 0\\n\\n        for i in range(0,len(s)) :\\n            if s[i] == \\'A\\':\\n                absent += 1\\n            \\n            if absent >= 2 :\\n                return False\\n            \\n            if s[i] == \\'L\\' and i <= len(s)-3 and s[i+1] == \\'L\\' and s[i+2] == \\'L\\':\\n                return False\\n\\n        return True\\n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def checkRecord(self, s):\\n        isLate = False\\n        absent = 0\\n\\n        for i in range(0,len(s)) :\\n            if s[i] == \\'A\\':\\n                absent += 1\\n            \\n            if absent >= 2 :\\n                return False\\n            \\n            if s[i] == \\'L\\' and i <= len(s)-3 and s[i+1] == \\'L\\' and s[i+2] == \\'L\\':\\n                return False\\n\\n        return True\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2766352,
                "title": "java-easy-solution",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int a=0;\\n        int l=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\'){\\n                a++;\\n                if(l<3)\\n                    l=0;\\n            }\\n            else if(s.charAt(i)==\\'L\\'){\\n                    l++;\\n            }\\n            else\\n                if(l<3)\\n                   l=0;\\n        }\\n        \\n        if(a>=2 || l>=3)\\n            return false;\\n        \\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int a=0;\\n        int l=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\'){\\n                a++;\\n                if(l<3)\\n                    l=0;\\n            }\\n            else if(s.charAt(i)==\\'L\\'){\\n                    l++;\\n            }\\n            else\\n                if(l<3)\\n                   l=0;\\n        }\\n        \\n        if(a>=2 || l>=3)\\n            return false;\\n        \\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2756206,
                "title": "java-string-methods",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        \\n        int c = 0;                   //to keep count of A\\'s\\n        for(int i = 0; i < s.length(); i++)\\n        {\\n            if(s.charAt(i) == \\'A\\')\\n            {\\n                c++;\\n            }\\n        }\\n        \\n        if(c < 2)    //checks condition 1\\n        {\\n            if(!s.contains(\"LLL\"))        //checks condition 2\\n            {\\n                return true;\\n            }\\n        }\\n        \\n        return false;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        \\n        int c = 0;                   //to keep count of A\\'s\\n        for(int i = 0; i < s.length(); i++)\\n        {\\n            if(s.charAt(i) == \\'A\\')\\n            {\\n                c++;\\n            }\\n        }\\n        \\n        if(c < 2)    //checks condition 1\\n        {\\n            if(!s.contains(\"LLL\"))        //checks condition 2\\n            {\\n                return true;\\n            }\\n        }\\n        \\n        return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2752526,
                "title": "easy-c-solution-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int c=0;\\n        if(s.find(\"LLL\")!=string::npos) return 0;\\n        for(auto x:s){\\n            if(x==\\'A\\') c++;\\n        }\\n        if(c>=2) return 0;\\n        return 1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int c=0;\\n        if(s.find(\"LLL\")!=string::npos) return 0;\\n        for(auto x:s){\\n            if(x==\\'A\\') c++;\\n        }\\n        if(c>=2) return 0;\\n        return 1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2751274,
                "title": "javascript-1-line-solution-with-array-prototype-reduce-beats-98-22",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:$$59ms$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$42mb$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkRecord = function(s) {\\n    return s.split(\\'\\').reduce((prev,curr)=>curr===\\'A\\'? prev+curr: prev,\\'\\').length>1 || s.includes(\\'LLL\\') ? false :true\\n};\\n```\\n# Simplified and clear code\\n```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkRecord = function(s) {\\n    const string = s.split(\\'\\')\\n    const late = s.includes(\\'LLL\\')\\n    let absent = string.reduce((prev,curr)=>curr===\\'A\\'? prev+curr: prev,\\'\\')\\n    return absent.length>1 || late? false :true\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkRecord = function(s) {\\n    return s.split(\\'\\').reduce((prev,curr)=>curr===\\'A\\'? prev+curr: prev,\\'\\').length>1 || s.includes(\\'LLL\\') ? false :true\\n};\\n```\n```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkRecord = function(s) {\\n    const string = s.split(\\'\\')\\n    const late = s.includes(\\'LLL\\')\\n    let absent = string.reduce((prev,curr)=>curr===\\'A\\'? prev+curr: prev,\\'\\')\\n    return absent.length>1 || late? false :true\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2751030,
                "title": "not-use-built-in-functions-python3-straightforward-approach",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        \\n        a = 0\\n        l = 0\\n        s = list(s)\\n        \\n        for item in s:\\n            if item == \"L\":\\n                l += 1\\n                if l >= 3:\\n                    return False\\n            else:\\n                l = 0\\n                if item == \"A\":\\n                    a += 1\\n                    if a > 1:\\n                        return False\\n        \\n        return True\\n        \\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        \\n        a = 0\\n        l = 0\\n        s = list(s)\\n        \\n        for item in s:\\n            if item == \"L\":\\n                l += 1\\n                if l >= 3:\\n                    return False\\n            else:\\n                l = 0\\n                if item == \"A\":\\n                    a += 1\\n                    if a > 1:\\n                        return False\\n        \\n        return True\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2572544,
                "title": "c-0ms-solution",
                "content": "class Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int ca=0;\\n        int n=s.size();\\n        for(int i=0;i<n;i++){\\n            if(s[i]==\\'A\\') ca++;\\n            else if(s[i]==\\'L\\' && i<=n-3){\\n                if(s[i+1]==\\'L\\' && s[i+2]==\\'L\\') return 0;\\n            }\\n        }\\n        if(ca<2) return 1;\\n        else return 0;\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int ca=0;\\n        int n=s.size();\\n        for(int i=0;i<n;i++){\\n            if(s[i]==\\'A\\') ca++;\\n            else if(s[i]==\\'L\\' && i<=n-3){\\n                if(s[i+1]==\\'L\\' && s[i+2]==\\'L\\') return 0;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2240740,
                "title": "simple-c-solution-faster-than-100",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n       int i = 0 ;\\n       int j = 0 ;\\n        int count = 2;\\n        unordered_map<char,int> temp ;\\n        while(j < s.size()){\\n            if(s[j] == \\'A\\')\\n                count--;\\n            if(!count)\\n                return false ;\\n            temp[s[j]]++;\\n            if(j-i+1 == 3){\\n                if(temp.size() == 1 && temp[\\'L\\'] == 3 )\\n                    return false ;\\n                temp[s[i]]--;\\n                if(temp[s[i]] == 0)\\n                    temp.erase(s[i]);\\n                i++;\\n            }\\n            j++;\\n        }\\n    \\n        return true ;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "String",
                    "Sliding Window"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n       int i = 0 ;\\n       int j = 0 ;\\n        int count = 2;\\n        unordered_map<char,int> temp ;\\n        while(j < s.size()){\\n            if(s[j] == \\'A\\')\\n                count--;\\n            if(!count)\\n                return false ;\\n            temp[s[j]]++;\\n            if(j-i+1 == 3){\\n                if(temp.size() == 1 && temp[\\'L\\'] == 3 )\\n                    return false ;\\n                temp[s[i]]--;\\n                if(temp[s[i]] == 0)\\n                    temp.erase(s[i]);\\n                i++;\\n            }\\n            j++;\\n        }\\n    \\n        return true ;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2018276,
                "title": "java-one-liner-100-faster",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        \\n        return !s.contains(\"LLL\") && s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\');\\n        \\n    }\\n}\\n```\\n\\nThis might look like it shouldn\\'t work, so let me explain:\\n\\nWe will look at the two sides of the && seperately.\\nFirst, we must understand what the contains() method does. Simply put, contains() returns whether the argument passed is found within the string.\\n\\n```\\nString example = \"Hello\";\\nexample.contains(\"ell\");\\n//returns true\\n```\\n\\nSo this takes care of the possibility of a student being disqualified due to being late three consecutive times. The slight nuance here, is that we inversed the contains() method with using the standard ! symbol. Therefore it would read, \"s doesn\\'t contain\".\\n\\nSecond, we must look at the two methods and their relationship with eachother, indexOf() and lastIndexOf(). This is a neat trick. The method, indexOf() returns the first index it finds a specific character. So,\\n\\n```\\nString example = \"Hello\";\\nexample.indexOf(\\'l\\');\\n//returns 2, as the first lowercase L is at index 2\\n```\\n\\nlastIndexOf() works very similarly, except it returns the last index it finds a specific character. So, in our example above, it would return 3, as the second lowercase L is in index 3.\\n\\nSo, you may notice, if we were to compare these two methods with a ==, that they would return different indices, meaning there is more than one of a specific character. That is, if there was only a single character, both methods would return the same index. \\n\\nThe one-liner is simply an extended statement that could be broken up into more readable lines, as seen below, but I thought it was a nifty solution.\\n\\n```\\nif (s.contains(\"LLL\"))\\n{\\n\\treturn false;\\n}\\nif (s.indexOf(\\'A\\') != s.lastIndexOf(\\'A\\')\\n{\\n\\treturn false\\n}\\n```\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        \\n        return !s.contains(\"LLL\") && s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\');\\n        \\n    }\\n}\\n```\n```\\nString example = \"Hello\";\\nexample.contains(\"ell\");\\n//returns true\\n```\n```\\nString example = \"Hello\";\\nexample.indexOf(\\'l\\');\\n//returns 2, as the first lowercase L is at index 2\\n```\n```\\nif (s.contains(\"LLL\"))\\n{\\n\\treturn false;\\n}\\nif (s.indexOf(\\'A\\') != s.lastIndexOf(\\'A\\')\\n{\\n\\treturn false\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1872603,
                "title": "student-attendance-record-i-solution-java",
                "content": "class Solution {\\n  public boolean checkRecord(String s) {\\n    return s.indexOf(\"A\") == s.lastIndexOf(\"A\") && !s.contains(\"LLL\");\\n  }\\n}\\n",
                "solutionTags": [
                    "String"
                ],
                "code": "class Solution {\\n  public boolean checkRecord(String s) {\\n    return s.indexOf(\"A\") == s.lastIndexOf(\"A\") && !s.contains(\"LLL\");\\n  }",
                "codeTag": "Java"
            },
            {
                "id": 1631766,
                "title": "half-line-javascript-using-regexp-shortest-ever",
                "content": "```javascript\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkRecord = function(s) {\\n    return !/A.*A|L{3}/.test(s);\\n};\\n```\\n\\nDouble `/` to create RegExp object.\\n`.*` means any number of characters. (`.` stands for any character, `*` means any number of times)\\n`|` simply means `OR`.\\n`L{3}` means 3 times of occurrence of `L`.",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```javascript\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkRecord = function(s) {\\n    return !/A.*A|L{3}/.test(s);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1570909,
                "title": "my-python-solution",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\"A\") < 2 and \"LLL\" not in s\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\"A\") < 2 and \"LLL\" not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1504411,
                "title": "c-simple",
                "content": "```\\npublic bool CheckRecord(string s) {\\n        // A should be less than 2\\n        //L consecutively should be less than 3\\n        int conL = 0;\\n        int a = 0;\\n        for (int i = 0 ; i < s.Length ; i++)\\n        {\\n            if (s[i]==\\'A\\') a++;\\n            if (a>1) return false;\\n            if (s[i]==\\'L\\') conL++;\\n            else conL=0;\\n            if (conL>2) return false;\\n        }\\n        return true;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic bool CheckRecord(string s) {\\n        // A should be less than 2\\n        //L consecutively should be less than 3\\n        int conL = 0;\\n        int a = 0;\\n        for (int i = 0 ; i < s.Length ; i++)\\n        {\\n            if (s[i]==\\'A\\') a++;\\n            if (a>1) return false;\\n            if (s[i]==\\'L\\') conL++;\\n            else conL=0;\\n            if (conL>2) return false;\\n        }\\n        return true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1494021,
                "title": "java-solution-faster-than-100",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        if (s.contains(\"LLL\")) \\n            return false;\\n        int As = 0;\\n        for (int i = 0; i < s.length(); i++) {\\n            if (s.charAt(i) == \\'A\\') \\n                As++;\\n        }\\n        \\n        if (As > 1) \\n            return false; \\n        return true;\\n    }\\n}\\n",
                "solutionTags": [],
                "code": "class Solution {\\n    public boolean checkRecord(String s) {\\n        if (s.contains(\"LLL\")) \\n            return false;\\n        int As = 0;\\n        for (int i = 0; i < s.length(); i++) {\\n            if (s.charAt(i) == \\'A\\') \\n                As++;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1453451,
                "title": "simple-java-solution",
                "content": "class Solution {\\n\\n    public boolean checkRecord(String s) {\\n        StringBuilder nm=new StringBuilder(s);\\n        int k=s.length();\\n        int c=0,c1=0;\\n        for(int i=0;i<k;i++)\\n        {\\n            if(nm.charAt(i)==\\'A\\')\\n            {\\n                c1=0;\\n                c++;\\n            }\\n            else if(nm.charAt(i)==\\'P\\')\\n            {\\n                c1=0;\\n            }\\n            else if(nm.charAt(i)==\\'L\\')\\n            {\\n                c1++;\\n            }\\n            if(c>=2||c1>=3)\\n                return false;\\n        }\\n        return true;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n\\n    public boolean checkRecord(String s) {\\n        StringBuilder nm=new StringBuilder(s);\\n        int k=s.length();\\n        int c=0,c1=0;\\n        for(int i=0;i<k;i++)\\n        {\\n            if(nm.charAt(i)==\\'A\\')\\n            {\\n                c1=0;\\n                c++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1352933,
                "title": "c-easy-understandable-code",
                "content": "```\\nclass Solution\\n{\\npublic:\\n    bool checkRecord(string s)\\n    {\\n        int n = s.size();\\n        int a = 0;\\n        int flag = 0;\\n        for (int i = 0; i < n; i++)\\n        {\\n            if (s[i] == \\'A\\')\\n            {\\n                a++;\\n            }\\n\\n            if ((s[i] == \\'L\\' && s[i + 1] == \\'L\\') && (s[i + 1] == \\'L\\' && s[i + 2] == \\'L\\'))\\n            {\\n                flag = 1;\\n            }\\n        }\\n\\n        if (a < 2 && flag == 0)\\n        {\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};\\n// PLEASE UPVOTE MY  CODE```\\n\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution\\n{\\npublic:\\n    bool checkRecord(string s)\\n    {\\n        int n = s.size();\\n        int a = 0;\\n        int flag = 0;\\n        for (int i = 0; i < n; i++)\\n        {\\n            if (s[i] == \\'A\\')\\n            {\\n                a++;\\n            }\\n\\n            if ((s[i] == \\'L\\' && s[i + 1] == \\'L\\') && (s[i + 1] == \\'L\\' && s[i + 2] == \\'L\\'))\\n            {\\n                flag = 1;\\n            }\\n        }\\n\\n        if (a < 2 && flag == 0)\\n        {\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};\\n// PLEASE UPVOTE MY  CODE```",
                "codeTag": "Java"
            },
            {
                "id": 1340790,
                "title": "java-straightforward-easy-0ms-beats-100-memory-beats-90",
                "content": "```\\n// If U find this as useful don\\'t forget to UPVOTE \\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absent=0,late=0,maxlate=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i)==\\'A\\')\\n            {\\n                absent++;\\n                if(absent==2) return false;\\n                late=0;\\n            }\\n            else if(s.charAt(i)==\\'L\\')\\n            {\\n                late++;\\n                maxlate=Math.max(late,maxlate);\\n                if(maxlate==3) return false;\\n            }\\n            else\\n            {\\n                late=0;\\n                continue;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n// If U find this as useful don\\'t forget to UPVOTE \\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absent=0,late=0,maxlate=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i)==\\'A\\')\\n            {\\n                absent++;\\n                if(absent==2) return false;\\n                late=0;\\n            }\\n            else if(s.charAt(i)==\\'L\\')\\n            {\\n                late++;\\n                maxlate=Math.max(late,maxlate);\\n                if(maxlate==3) return false;\\n            }\\n            else\\n            {\\n                late=0;\\n                continue;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1234753,
                "title": "java-runtime-0-ms-faster-than-100-00-very-easy-to-understand-solution",
                "content": "```\\npublic boolean checkRecord(String s) {\\n        if(s.contains(\"LLL\")) return false;\\n        int c=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\') c++;\\n        }\\n        if(c>=2) return false;\\n        return true;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic boolean checkRecord(String s) {\\n        if(s.contains(\"LLL\")) return false;\\n        int c=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\') c++;\\n        }\\n        if(c>=2) return false;\\n        return true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1206818,
                "title": "kotlin",
                "content": "```\\nfun checkRecord(s: String) = !s.contains(\"LLL\") && s.count { it == \\'A\\' } < 2\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nfun checkRecord(s: String) = !s.contains(\"LLL\") && s.count { it == \\'A\\' } < 2\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1053877,
                "title": "easy-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n      int result,cl=0,ca=0;\\n        for (int i=0;i<s.size();i++){\\n            if (s[i]==\\'A\\'){ca++;}\\n            if (s[i]==\\'L\\') cl++;\\n            else cl=0;\\n            if (ca>=2||cl>2) return false;\\n        }\\n        \\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n      int result,cl=0,ca=0;\\n        for (int i=0;i<s.size();i++){\\n            if (s[i]==\\'A\\'){ca++;}\\n            if (s[i]==\\'L\\') cl++;\\n            else cl=0;\\n            if (ca>=2||cl>2) return false;\\n        }\\n        \\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 933345,
                "title": "javascript-solution",
                "content": "```\\nvar checkRecord = function(s) {\\n    let absenceCount = 0;\\n    let lateCount = 0; // continuous late count\\n    \\n    for (let i = 0; i < s.length; i++) {\\n        const char = s.charAt(i);\\n        \\n        if (char === \\'A\\') absenceCount++;\\n        \\n        if (char === \"L\") lateCount++;\\n        else lateCount = 0; // reset late count if char is not \"L\"\\n        \\n        if (absenceCount > 1 || lateCount > 2) return false;\\n    }\\n\\n    return true;   \\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkRecord = function(s) {\\n    let absenceCount = 0;\\n    let lateCount = 0; // continuous late count\\n    \\n    for (let i = 0; i < s.length; i++) {\\n        const char = s.charAt(i);\\n        \\n        if (char === \\'A\\') absenceCount++;\\n        \\n        if (char === \"L\") lateCount++;\\n        else lateCount = 0; // reset late count if char is not \"L\"\\n        \\n        if (absenceCount > 1 || lateCount > 2) return false;\\n    }\\n\\n    return true;   \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 906863,
                "title": "easy-solution-0ms-100-fast",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        boolean a=true;\\n        int b=0,c=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\'){\\n                b++; if(b>=2) { a = false;break;}}\\n            try{\\n            if(s.charAt(i)==\\'L\\'){\\n                if(s.charAt(i+1)==\\'L\\' && s.charAt(i+2)==\\'L\\'){ a=false;break;}\\n            }}\\n            catch(Exception e){return a;}\\n            \\n        }\\n        return a;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        boolean a=true;\\n        int b=0,c=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\'){\\n                b++; if(b>=2) { a = false;break;}}\\n            try{\\n            if(s.charAt(i)==\\'L\\'){\\n                if(s.charAt(i+1)==\\'L\\' && s.charAt(i+2)==\\'L\\'){ a=false;break;}\\n            }}\\n            catch(Exception e){return a;}\\n            \\n        }\\n        return a;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 761511,
                "title": "java-reges-1-line",
                "content": "Ref: https://leetcode.com/problems/student-attendance-record-i/discuss/101553/Java-1-liner\\n```\\nreturn !s.matches(\".*LLL.*|.*A.*A.*\");\\n```",
                "solutionTags": [],
                "code": "```\\nreturn !s.matches(\".*LLL.*|.*A.*A.*\");\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 543180,
                "title": "python-3-solution-easy",
                "content": "```python\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if s.count(\\'A\\')>1 or s.count(\\'LLL\\')>=1:\\n            return False\\n        elif s.count(\\'A\\')<=1 or s.count(\\'LL\\')>=0:\\n            return True",
                "solutionTags": [],
                "code": "```python\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if s.count(\\'A\\')>1 or s.count(\\'LLL\\')>=1:\\n            return False\\n        elif s.count(\\'A\\')<=1 or s.count(\\'LL\\')>=0:\\n            return True",
                "codeTag": "Java"
            },
            {
                "id": 460327,
                "title": "python-3-cheap-solution-efficient",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if s.count(\\'A\\')>1 or \\'LLL\\' in s:\\n            return False            \\n        return True",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if s.count(\\'A\\')>1 or \\'LLL\\' in s:\\n            return False            \\n        return True",
                "codeTag": "Java"
            },
            {
                "id": 370712,
                "title": "straight-forward-java-solution",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int countA=0;\\n        int countL=0;\\n        for(char c:s.toCharArray()){\\n            if(c==\\'A\\'){\\n                countA++;\\n                countL=0;\\n            } else if(c==\\'L\\') countL++;\\n            else countL=0;\\n            if(countA>1 || countL>2) return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int countA=0;\\n        int countL=0;\\n        for(char c:s.toCharArray()){\\n            if(c==\\'A\\'){\\n                countA++;\\n                countL=0;\\n            } else if(c==\\'L\\') countL++;\\n            else countL=0;\\n            if(countA>1 || countL>2) return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 368943,
                "title": "short-solution-c",
                "content": "```\\npublic class Solution\\n{\\n    public bool CheckRecord(string s) \\n    {\\n        int a = 0, l = 0;\\n        for(int i = 0; i < s.Length; i++)\\n        {\\n            if (s[i] == \\'A\\') a++;\\n            if (s[i] == \\'L\\') l++; else l = 0;\\n            if (l > 2 || a > 1) return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution\\n{\\n    public bool CheckRecord(string s) \\n    {\\n        int a = 0, l = 0;\\n        for(int i = 0; i < s.Length; i++)\\n        {\\n            if (s[i] == \\'A\\') a++;\\n            if (s[i] == \\'L\\') l++; else l = 0;\\n            if (l > 2 || a > 1) return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 366617,
                "title": "java-0ms-solution-beats-100",
                "content": "```\\npublic boolean checkRecord(String s) {\\n        char[] chs = s.toCharArray();\\n        int a = 0, l = 0;\\n        for (int i = 0; i < chs.length;) {\\n            if (chs[i] == \\'A\\') a++;\\n            if (a > 1) return false;\\n            if (chs[i] == \\'L\\') {\\n                l++;\\n                while (i+1 < chs.length && chs[i+1] == \\'L\\') {\\n                    l++;\\n                    i++;\\n                }\\n                if (l > 2) return false;\\n            }\\n            l = 0;\\n            i++;\\n        }\\n        return true;\\n    }\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\npublic boolean checkRecord(String s) {\\n        char[] chs = s.toCharArray();\\n        int a = 0, l = 0;\\n        for (int i = 0; i < chs.length;) {\\n            if (chs[i] == \\'A\\') a++;\\n            if (a > 1) return false;\\n            if (chs[i] == \\'L\\') {\\n                l++;\\n                while (i+1 < chs.length && chs[i+1] == \\'L\\') {\\n                    l++;\\n                    i++;\\n                }\\n                if (l > 2) return false;\\n            }\\n            l = 0;\\n            i++;\\n        }\\n        return true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 327944,
                "title": "simple-javascript-regexp-solution",
                "content": "```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkRecord = function(s) {\\n  const failRegexp = /L{3}|A.*A/;\\n  return !failRegexp.test(s);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} s\\n * @return {boolean}\\n */\\nvar checkRecord = function(s) {\\n  const failRegexp = /L{3}|A.*A/;\\n  return !failRegexp.test(s);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 297203,
                "title": "python-easy",
                "content": "Return false only if the string contains more than one A or 3 or more continuous L .\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if s.count(\\'A\\') > 1 or s.count(\\'LLL\\') > 0:\\n            return False\\n        else:\\n            return True\\n```\\n",
                "solutionTags": [
                    "Python3",
                    "String"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if s.count(\\'A\\') > 1 or s.count(\\'LLL\\') > 0:\\n            return False\\n        else:\\n            return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 114765,
                "title": "scala-solution",
                "content": "```\\n  def checkRecord(s: String): Boolean = {\\n    s.count(_ == 'A') <= 1 && !s.contains(\"LLL\")\\n  }",
                "solutionTags": [],
                "code": "```\\n  def checkRecord(s: String): Boolean = {\\n    s.count(_ == 'A') <= 1 && !s.contains(\"LLL\")\\n  }",
                "codeTag": "Python3"
            },
            {
                "id": 114057,
                "title": "c-1-line-regular-expression",
                "content": "```\\nbool checkRecord(string s) {\\n    return !regex_match(s, regex(\".*LLL.*|.*A.*A.*\"));\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nbool checkRecord(string s) {\\n    return !regex_match(s, regex(\".*LLL.*|.*A.*A.*\"));\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 101602,
                "title": "go-0ms",
                "content": "```\\nfunc checkRecord(s string) bool {\\n    return !(strings.Count(s, `A`) > 1) && !strings.Contains(s, `LLL`)\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nfunc checkRecord(s string) bool {\\n    return !(strings.Count(s, `A`) > 1) && !strings.Contains(s, `LLL`)\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 101628,
                "title": "python-straightforward-with-explanation",
                "content": "To count all occurrences of 'A' in a list, we can use S.count('A').\\n\\nTo determine whether there are at most 2 consecutive L's, we can search for 'LLL'.  If a string has 3 or more consecutive L's, it will definitely contain 'LLL'.\\n\\nAlternatively, we could look at ```S[i:i+3] for 'LLL'```, or we could look at groups ```len(list(v)) >= 3 for k, v in itertools.groupby(S) if k == 'L'.```\\n\\n```\\ndef checkRecord(self, S):\\n    return S.count('A') <= 1 and 'LLL' not in S\\n```",
                "solutionTags": [],
                "code": "```S[i:i+3] for 'LLL'```\n```len(list(v)) >= 3 for k, v in itertools.groupby(S) if k == 'L'.```\n```\\ndef checkRecord(self, S):\\n    return S.count('A') <= 1 and 'LLL' not in S\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 4066186,
                "title": "easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n\\n        int count =0;\\n\\n        for(int i = 0; i<= s.length()-1 ; i++){\\n\\n            if(s.charAt(i) == \\'A\\'){\\n\\n                count ++ ;\\n            }\\n        }\\n\\n        for(int j =0 ; j<= s.length() -3; j++){ \\n\\n            if(s.charAt(j) == \\'L\\' && s.charAt(j+1) == \\'L\\' && s.charAt(j+2)== \\'L\\'){\\n\\n                return false;\\n            }\\n        }\\n\\n        if(count >= 2){\\n\\n            return false;\\n        }\\n                return true;\\n    \\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n\\n        int count =0;\\n\\n        for(int i = 0; i<= s.length()-1 ; i++){\\n\\n            if(s.charAt(i) == \\'A\\'){\\n\\n                count ++ ;\\n            }\\n        }\\n\\n        for(int j =0 ; j<= s.length() -3; j++){ \\n\\n            if(s.charAt(j) == \\'L\\' && s.charAt(j+1) == \\'L\\' && s.charAt(j+2)== \\'L\\'){\\n\\n                return false;\\n            }\\n        }\\n\\n        if(count >= 2){\\n\\n            return false;\\n        }\\n                return true;\\n    \\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3989650,
                "title": "easy-approach-cpp-using-basic-concepts-of-if-else-conditions",
                "content": "# Intuition\\nUSE OF BASIC IF AND ELSE CONDITION AND FOR LOOP\\n\\n# Approach\\nAs we traverse through the loop using the for loop , if we find the character \\'A\\' then we\\'ll count it, i.e increase the \\'cnt\\' by 1 and also if we find the character \\'L\\' we\\'ll increase the \\'cnt1\\' as we have to keep the count of \\'A\\' and \\'L\\'. cnt1 is set to zero whenevr we find some another character because we need to keep a count of the consecutive occurrence of \\'L\\'. Now, atlast we are checking the condition that whether the count of A , i.e, cnt >=2 or cnt1>=3 to satisfy the either of the condition for getting the award.\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int n= s.length();\\n        int i=0;\\n        int cnt=0 , cnt1=0;\\n        for (int i = 0; i < n; i++){\\n            if(s[i] == \\'A\\'){\\n                cnt++;\\n                cnt1=0;\\n            }\\n            else if(s[i] ==\\'L\\'){\\n                cnt1++;\\n            }\\n            else{\\n                cnt1=0;\\n            }\\n            if (cnt >= 2 || cnt1 >= 3) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int n= s.length();\\n        int i=0;\\n        int cnt=0 , cnt1=0;\\n        for (int i = 0; i < n; i++){\\n            if(s[i] == \\'A\\'){\\n                cnt++;\\n                cnt1=0;\\n            }\\n            else if(s[i] ==\\'L\\'){\\n                cnt1++;\\n            }\\n            else{\\n                cnt1=0;\\n            }\\n            if (cnt >= 2 || cnt1 >= 3) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3904329,
                "title": "student-attendance-record-i-java-solution-code",
                "content": "# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int countAbs = 0;\\n        int countLeave = 0;\\n\\n        for(int i=0; i<s.length(); i++){\\n            if(s.charAt(i) == \\'A\\'){\\n                countAbs++;\\n                if(countAbs >= 2){\\n                    return false;\\n                }\\n                countLeave = 0;\\n            }\\n            else if(s.charAt(i) == \\'L\\'){\\n                countLeave++;\\n                if(countLeave >= 3){\\n                    return false;\\n                }\\n            }\\n            else{\\n                countLeave = 0;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int countAbs = 0;\\n        int countLeave = 0;\\n\\n        for(int i=0; i<s.length(); i++){\\n            if(s.charAt(i) == \\'A\\'){\\n                countAbs++;\\n                if(countAbs >= 2){\\n                    return false;\\n                }\\n                countLeave = 0;\\n            }\\n            else if(s.charAt(i) == \\'L\\'){\\n                countLeave++;\\n                if(countLeave >= 3){\\n                    return false;\\n                }\\n            }\\n            else{\\n                countLeave = 0;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3697169,
                "title": "c-simple-one-liner-with-linq",
                "content": "# Intuition\\nIf the whole string contains 2 or more \\'A\\' characters  then return false. Use .Count(). If  the string contains 3 L characters in a row, return false. Use .Contains().\\n\\nThe easiest LeetCode question ever.\\n\\n# Code\\n```\\npublic class Solution {\\n    public bool CheckRecord(string s) {\\n        return s.Count(x=>x == \\'A\\') < 2 && !s.Contains(\"LLL\");\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public bool CheckRecord(string s) {\\n        return s.Count(x=>x == \\'A\\') < 2 && !s.Contains(\"LLL\");\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3396294,
                "title": "solution",
                "content": "```C++ []\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int absent=0,late=0;\\n        for(auto i:s){\\n            if(i==\\'A\\')\\n                absent++;\\n        }\\n        int cur=0;\\n        for(auto i:s)\\n        {\\n            if(i==\\'L\\')\\n                cur++;\\n            else{\\n                late=max(late,cur);\\n                cur=0;\\n            }\\n        }\\n        late=max(late,cur);\\n        if(absent<2 && late<3)\\n            return true;\\n        return false;\\n    }\\n};\\n```\\n\\n```Python3 []\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        A_count = 0\\n        L_count = 0\\n        for i in s:\\n            if i == \"A\":\\n                A_count += 1\\n                if A_count == 2:\\n                    return False\\n            if i == \"L\":\\n                L_count += 1\\n                if L_count > 2:\\n                    return False\\n            else:\\n                L_count = 0\\n        return True\\n```\\n\\n```Java []\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int count=0;\\n        int count2=0;\\n        boolean flag1=false;\\n        boolean flag2=true;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\'){\\n                count++;\\n                count2=0;\\n                flag1=false;\\n                flag2=true;\\n            }\\n            if(s.charAt(i)==\\'L\\' && (flag1==false || flag2==false)){\\n                count2++;\\n                flag1=true;\\n                flag2=false;\\n            }\\n            else\\n                count2=0;\\n            if(count==2 || count2==3)\\n                return false;\\n        }\\n        return true;\\n    }\\n}\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int absent=0,late=0;\\n        for(auto i:s){\\n            if(i==\\'A\\')\\n                absent++;\\n        }\\n        int cur=0;\\n        for(auto i:s)\\n        {\\n            if(i==\\'L\\')\\n                cur++;\\n            else{\\n                late=max(late,cur);\\n                cur=0;\\n            }\\n        }\\n        late=max(late,cur);\\n        if(absent<2 && late<3)\\n            return true;\\n        return false;\\n    }\\n};\\n```\n```Python3 []\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        A_count = 0\\n        L_count = 0\\n        for i in s:\\n            if i == \"A\":\\n                A_count += 1\\n                if A_count == 2:\\n                    return False\\n            if i == \"L\":\\n                L_count += 1\\n                if L_count > 2:\\n                    return False\\n            else:\\n                L_count = 0\\n        return True\\n```\n```Java []\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int count=0;\\n        int count2=0;\\n        boolean flag1=false;\\n        boolean flag2=true;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\'){\\n                count++;\\n                count2=0;\\n                flag1=false;\\n                flag2=true;\\n            }\\n            if(s.charAt(i)==\\'L\\' && (flag1==false || flag2==false)){\\n                count2++;\\n                flag1=true;\\n                flag2=false;\\n            }\\n            else\\n                count2=0;\\n            if(count==2 || count2==3)\\n                return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3226903,
                "title": "c-solution-100-time-9-81-space-counter-and-reset-counter",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s);\\n};\\n/*********************************************************/\\nbool Solution::checkRecord(string s) {\\n    int i, size = s.size(), maxL=0, countA=0, countL=0;\\n    for (i = 0; i < size; ++i) {\\n        if (s[i] == \\'L\\') {\\n            ++countL;\\n        } else {\\n            countL = 0;\\n        }\\n        if (s[i] == \\'A\\') {\\n            ++countA;\\n        }\\n        if (maxL < countL) {\\n            maxL = countL;\\n        }\\n        if( countA >= 2 || maxL >= 3) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n/*********************************************************/\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s);\\n};\\n/*********************************************************/\\nbool Solution::checkRecord(string s) {\\n    int i, size = s.size(), maxL=0, countA=0, countL=0;\\n    for (i = 0; i < size; ++i) {\\n        if (s[i] == \\'L\\') {\\n            ++countL;\\n        } else {\\n            countL = 0;\\n        }\\n        if (s[i] == \\'A\\') {\\n            ++countA;\\n        }\\n        if (maxL < countL) {\\n            maxL = countL;\\n        }\\n        if( countA >= 2 || maxL >= 3) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n/*********************************************************/\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3205801,
                "title": "simple-o-n-c-solution",
                "content": "\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n$$O(n)$$ - Just single \"for\" loop\\n\\n- Space complexity:\\n$$O(1)$$ - since no extra space taken\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int n = s.size();\\n        int acnt = 0, c = 0, l = 0;\\n        for(int i=0;i<n;i++){\\n            if(s[i] == \\'A\\') acnt ++;\\n            if(s[i] == \\'L\\'){\\n                l++;\\n                if(l >= 3) c++;\\n            }\\n            else{\\n                l = 0;\\n            }\\n        }\\n\\n        if(c > 0 || acnt >= 2){\\n            return false;\\n        }\\n        return true;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "String",
                    "Greedy"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int n = s.size();\\n        int acnt = 0, c = 0, l = 0;\\n        for(int i=0;i<n;i++){\\n            if(s[i] == \\'A\\') acnt ++;\\n            if(s[i] == \\'L\\'){\\n                l++;\\n                if(l >= 3) c++;\\n            }\\n            else{\\n                l = 0;\\n            }\\n        }\\n\\n        if(c > 0 || acnt >= 2){\\n            return false;\\n        }\\n        return true;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3202729,
                "title": "easy-to-understand-c-solution",
                "content": "## Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n## Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int abs=0, late=0;\\n        for (int i=0; i<s.size(); i++){\\n            if (s[i]==\\'A\\'){\\n                abs++;\\n                if (abs>=2)return false;\\n            }\\n            if (s[i]==\\'L\\'){\\n                late++;\\n                if (late>=3)return false;\\n            }\\n            else late=0;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int abs=0, late=0;\\n        for (int i=0; i<s.size(); i++){\\n            if (s[i]==\\'A\\'){\\n                abs++;\\n                if (abs>=2)return false;\\n            }\\n            if (s[i]==\\'L\\'){\\n                late++;\\n                if (late>=3)return false;\\n            }\\n            else late=0;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3147465,
                "title": "easy-to-understand-0-ms-o-n-using-java-flag-based-approch",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int count=0;\\n        int count2=0;\\n        boolean flag1=false;\\n        boolean flag2=true;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\'){\\n                count++;\\n                count2=0;\\n                flag1=false;\\n                flag2=true;\\n            }\\n            if(s.charAt(i)==\\'L\\' && (flag1==false || flag2==false)){\\n                count2++;\\n                flag1=true;\\n                flag2=false;\\n            }\\n            else\\n                count2=0;\\n            //System.out.println(s.charAt(i) + \" \" + count + \" \" + count2);\\n            if(count==2 || count2==3)\\n                return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int count=0;\\n        int count2=0;\\n        boolean flag1=false;\\n        boolean flag2=true;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\'){\\n                count++;\\n                count2=0;\\n                flag1=false;\\n                flag2=true;\\n            }\\n            if(s.charAt(i)==\\'L\\' && (flag1==false || flag2==false)){\\n                count2++;\\n                flag1=true;\\n                flag2=false;\\n            }\\n            else\\n                count2=0;\\n            //System.out.println(s.charAt(i) + \" \" + count + \" \" + count2);\\n            if(count==2 || count2==3)\\n                return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3067682,
                "title": "c-easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a = 0 , l = 0;\\n        for(auto i : s){\\n            if(i == \\'A\\') a++;\\n            if(i == \\'L\\') l++;\\n            else l = 0;\\n            if(a >= 2 || l > 2) return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a = 0 , l = 0;\\n        for(auto i : s){\\n            if(i == \\'A\\') a++;\\n            if(i == \\'L\\') l++;\\n            else l = 0;\\n            if(a >= 2 || l > 2) return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2938872,
                "title": "beginer-level-cpp",
                "content": "\\n\\n    bool checkRecord(string s) {\\n        int cnt=0;\\n        int bnt=0;\\n       \\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'A\\'){\\n                cnt++;\\n            }\\n            if(s[i]==\\'L\\'){\\n                bnt++;\\n            }\\n            else{\\n                bnt=0;\\n            }\\n            if(cnt>=2||bnt>2){\\n                return false;\\n            }\\n            \\n       \\n         }\\n         return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "\\n\\n    bool checkRecord(string s) {\\n        int cnt=0;\\n        int bnt=0;\\n       \\n        for(int i=0;i<s.length();i++){\\n            if(s[i]==\\'A\\'){\\n                cnt++;\\n            }\\n            if(s[i]==\\'L\\'){\\n                bnt++;\\n            }\\n            else{\\n                bnt=0;\\n            }\\n            if(cnt>=2||bnt>2){\\n                return false;\\n            }\\n            \\n       \\n         }\\n         return true;\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2807024,
                "title": "try-it-with-recursion-on-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n    It is pretty easy with For loop or using contains methods but for   recursion you have to thing how to check of the \\n    1.Base Case\\n    2. Conditions where the loop breaks\\n    other recusion will automatically take care of.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nfirst I wrote the the case for Absent and Leave then I wrote the Code for Base case which is when String of length 0.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n    O(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n    O(1)\\n# Code\\n```\\nimport java.lang.Object;\\nclass Solution {\\n    public boolean checkAttendace(String s, int ab, int l){\\n        if(s.length()==0)\\n            return true;\\n        if(s.charAt(0)==\\'A\\')\\n            ab=ab+1;\\n        if(s.charAt(0)==\\'L\\')\\n            l=l+1;\\n        else l=0;\\n        if(ab==2) return false;\\n        if(l==3) return false;\\n        return checkAttendace(s.substring(1,s.length()),ab,l);\\n    }\\n    public boolean checkRecord(String s) {\\n        return checkAttendace(s,0,0);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Recursion"
                ],
                "code": "```\\nimport java.lang.Object;\\nclass Solution {\\n    public boolean checkAttendace(String s, int ab, int l){\\n        if(s.length()==0)\\n            return true;\\n        if(s.charAt(0)==\\'A\\')\\n            ab=ab+1;\\n        if(s.charAt(0)==\\'L\\')\\n            l=l+1;\\n        else l=0;\\n        if(ab==2) return false;\\n        if(l==3) return false;\\n        return checkAttendace(s.substring(1,s.length()),ab,l);\\n    }\\n    public boolean checkRecord(String s) {\\n        return checkAttendace(s,0,0);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2780985,
                "title": "beat-100-c-user",
                "content": "# Intuition\\nWe have to focus on only apsent and consecutive late\\n\\n# Approach\\nif_else \\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s)\\n     \\n    {\\n        int a=0,l=0;\\n\\n        for( int i=0; i<s.length(); i++)\\n        {\\n            if( s[i] == \\'A\\')\\n            {\\n                a++;\\n                if( a>=2)\\n                {\\n                    return 0;\\n                }\\n            }\\n            else if( s[i] == \\'L\\')\\n            {\\n                l++;\\n                 if( s[i+1] == \\'L\\')\\n                 {\\n                     l++;\\n                     if( s[i+2] == \\'L\\')\\n                     {\\n                         return false;\\n                     }\\n                 }\\n            }\\n        }\\n        return 1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s)\\n     \\n    {\\n        int a=0,l=0;\\n\\n        for( int i=0; i<s.length(); i++)\\n        {\\n            if( s[i] == \\'A\\')\\n            {\\n                a++;\\n                if( a>=2)\\n                {\\n                    return 0;\\n                }\\n            }\\n            else if( s[i] == \\'L\\')\\n            {\\n                l++;\\n                 if( s[i+1] == \\'L\\')\\n                 {\\n                     l++;\\n                     if( s[i+2] == \\'L\\')\\n                     {\\n                         return false;\\n                     }\\n                 }\\n            }\\n        }\\n        return 1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2764209,
                "title": "javascript-map",
                "content": "```\\nvar checkRecord = function(s) {\\n    let map = new Map();\\n    \\n    for(let i = 0; i < s.length; i++) {\\n        \\n        if(s[i] === \\'A\\'){\\n            map.set(s[i], map.get(s[i]) === undefined ? 1 : map.get(s[i]) + 1)\\n            if(map.get(s[i]) >= 2) return false;\\n        }else if(s[i] === \"L\" && s[i + 1] === \"L\" && s[i + 2] === \"L\"){\\n            return false\\n        }\\n        \\n    }\\n    \\n    return true;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar checkRecord = function(s) {\\n    let map = new Map();\\n    \\n    for(let i = 0; i < s.length; i++) {\\n        \\n        if(s[i] === \\'A\\'){\\n            map.set(s[i], map.get(s[i]) === undefined ? 1 : map.get(s[i]) + 1)\\n            if(map.get(s[i]) >= 2) return false;\\n        }else if(s[i] === \"L\" && s[i + 1] === \"L\" && s[i + 2] === \"L\"){\\n            return false\\n        }\\n        \\n    }\\n    \\n    return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2752978,
                "title": "java-solution-to-student-attendance-record-1",
                "content": "# Code\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        \\n        char[] chars = s.toCharArray();\\n\\n        int lateCount = 0;\\n        int absCount = 0;\\n        for (char c : chars) {\\n            switch (c) {\\n                case \\'P\\':\\n                    lateCount = 0;\\n                    break;\\n                case \\'L\\':\\n                    lateCount++;\\n                    if (lateCount == 3) {\\n                        return false;\\n                    }\\n                    break;\\n                case \\'A\\':\\n                    lateCount = 0;\\n                    absCount++;\\n                    if (absCount >= 2) {\\n                        return false;\\n                    }\\n                    break;\\n            }\\n        }\\n\\n        return true;\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        \\n        char[] chars = s.toCharArray();\\n\\n        int lateCount = 0;\\n        int absCount = 0;\\n        for (char c : chars) {\\n            switch (c) {\\n                case \\'P\\':\\n                    lateCount = 0;\\n                    break;\\n                case \\'L\\':\\n                    lateCount++;\\n                    if (lateCount == 3) {\\n                        return false;\\n                    }\\n                    break;\\n                case \\'A\\':\\n                    lateCount = 0;\\n                    absCount++;\\n                    if (absCount >= 2) {\\n                        return false;\\n                    }\\n                    break;\\n            }\\n        }\\n\\n        return true;\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2752936,
                "title": "easy-c-o-n-tc-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nLinear search the string and find the no. of \\'A\\' then check if its greater than of 2 or not and then check for \\'L\\' that its consecutively present or not.\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) \\n    {\\n        int n=s.size();\\n        int c=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(s[i]==\\'A\\')\\n            {\\n                c++;\\n            }\\n        }\\n        if(c>=2)\\n        {\\n            return false;\\n        }\\n        for(int i=0;i<n;i++)\\n        {\\n            if(s[i]==\\'L\\')\\n            {\\n                if(s[i]==s[i+1] && s[i+1]==s[i+2])\\n                {\\n                    return false;\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) \\n    {\\n        int n=s.size();\\n        int c=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(s[i]==\\'A\\')\\n            {\\n                c++;\\n            }\\n        }\\n        if(c>=2)\\n        {\\n            return false;\\n        }\\n        for(int i=0;i<n;i++)\\n        {\\n            if(s[i]==\\'L\\')\\n            {\\n                if(s[i]==s[i+1] && s[i+1]==s[i+2])\\n                {\\n                    return false;\\n                }\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2603411,
                "title": "one-line-python",
                "content": "The method is simple, but is there a good way to systematically get familiar with these function?\\n\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if \\'LLL\\' in s or s.count(\\'A\\') >= 2:\\n            return False\\n        return True\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if \\'LLL\\' in s or s.count(\\'A\\') >= 2:\\n            return False\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2569180,
                "title": "python-easy-solution-for-begineers-96-80-faster-solution",
                "content": "```\\ndef checkRecord(self, s: str) -> bool:\\n        a_sum=0\\n        l_sum=0\\n        for i in range(len(s)):\\n            if s[i]==\\'A\\':\\n                a_sum=a_sum+1\\n                if a_sum>=2:\\n                    return False\\n            if s[i]==\\'L\\' and s[i:i+3]==\"LLL\":\\n                    return False\\n                \\n```",
                "solutionTags": [
                    "Python",
                    "String"
                ],
                "code": "```\\ndef checkRecord(self, s: str) -> bool:\\n        a_sum=0\\n        l_sum=0\\n        for i in range(len(s)):\\n            if s[i]==\\'A\\':\\n                a_sum=a_sum+1\\n                if a_sum>=2:\\n                    return False\\n            if s[i]==\\'L\\' and s[i:i+3]==\"LLL\":\\n                    return False\\n                \\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2541710,
                "title": "c-easy-o-n-time-o-1-space",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int ct=0;\\n        int i=0;\\n        while(i<s.size()){\\n            if(s[i]==\\'L\\'){\\n                int j=i;\\n                while(j<s.size() && s[j]==\\'L\\') j++;\\n                if(j-i>=3) return false;\\n                i=j;\\n                continue;\\n            }\\n            else if(s[i]==\\'A\\'){\\n                ct++;\\n                if(ct>=2) return false;\\n                i++;\\n                continue;\\n            }\\n            i++;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int ct=0;\\n        int i=0;\\n        while(i<s.size()){\\n            if(s[i]==\\'L\\'){\\n                int j=i;\\n                while(j<s.size() && s[j]==\\'L\\') j++;\\n                if(j-i>=3) return false;\\n                i=j;\\n                continue;\\n            }\\n            else if(s[i]==\\'A\\'){\\n                ct++;\\n                if(ct>=2) return false;\\n                i++;\\n                continue;\\n            }\\n            i++;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2528791,
                "title": "c-easy",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int n = s.size(), abs = 0;\\n        for(int i = 0; i < n; i++)\\n        {\\n            if(s[i] == \\'A\\') ++abs;\\n            if(i >= 2 and (s[i - 1] == \\'L\\' and s[i - 2] ==\\'L\\' and s[i] == \\'L\\')) return false;\\n            if(abs >= 2) return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int n = s.size(), abs = 0;\\n        for(int i = 0; i < n; i++)\\n        {\\n            if(s[i] == \\'A\\') ++abs;\\n            if(i >= 2 and (s[i - 1] == \\'L\\' and s[i - 2] ==\\'L\\' and s[i] == \\'L\\')) return false;\\n            if(abs >= 2) return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2518939,
                "title": "java-iterative-for-loop-easy-solution",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        if(s.contains(\"LLL\"))\\n            return false;\\n        int count=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\')\\n               count++;\\n        }\\n        if(count>=2)\\n            return false;\\n        return true;        \\n    }\\n}\\n```\\nKindly upvote if you like the code.",
                "solutionTags": [
                    "Java",
                    "Counting",
                    "Iterator"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        if(s.contains(\"LLL\"))\\n            return false;\\n        int count=0;\\n        for(int i=0;i<s.length();i++){\\n            if(s.charAt(i)==\\'A\\')\\n               count++;\\n        }\\n        if(count>=2)\\n            return false;\\n        return true;        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2403527,
                "title": "100-faster-java",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        boolean absent = false;\\n        int lcount = 0;\\n        for (int i=0, n=s.length(); i<n; i++) {\\n            char curr = s.charAt(i);\\n            if (curr == \\'L\\') {\\n                if (lcount == 2) return false;\\n                lcount++; \\n            } else {\\n                if (curr == \\'A\\') {\\n                    if (absent) return false;\\n                    absent = true;\\n                }\\n                lcount = 0;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public boolean checkRecord(String s) {\\n        boolean absent = false;\\n        int lcount = 0;\\n        for (int i=0, n=s.length(); i<n; i++) {\\n            char curr = s.charAt(i);\\n            if (curr == \\'L\\') {\\n                if (lcount == 2) return false;\\n                lcount++; \\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2311024,
                "title": "javascript-solution",
                "content": "```\\nvar checkRecord = function (s) {\\n    let L = 0, A = 0;\\n    let str = s.split(\\'\\');\\n\\n    for (let i = 0; i < str.length; i++) {\\n                if((str[i]== \\'L\\') && (str[i+1]== \\'L\\') && (str[i+2]== \\'L\\')) {L++}\\nelse if (str[i] == \\'A\\') { A++ }\\n    }\\n\\n    if ((A < 2) && (L <= 0)) { return true }\\n    else { return false }\\n};\\n",
                "solutionTags": [],
                "code": "```\\nvar checkRecord = function (s) {\\n    let L = 0, A = 0;\\n    let str = s.split(\\'\\');\\n\\n    for (let i = 0; i < str.length; i++) {\\n                if((str[i]== \\'L\\') && (str[i+1]== \\'L\\') && (str[i+2]== \\'L\\')) {L++}\\nelse if (str[i] == \\'A\\') { A++ }\\n    }\\n\\n    if ((A < 2) && (L <= 0)) { return true }\\n    else { return false }\\n};\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 2305878,
                "title": "c-simplest-codes-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n       int abs=count(s.begin(),s.end(),\\'A\\') ;\\n        if(abs>1) return false;\\n        \\n       int l=0;\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'L\\'){\\n                 l++;\\n                if(l>=3 && s[i-1]==\\'L\\' && s[i-2]==\\'L\\')\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkRecord(string s) {\\n       int abs=count(s.begin(),s.end(),\\'A\\') ;\\n        if(abs>1) return false;\\n        \\n       int l=0;\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'L\\'){\\n                 l++;\\n                if(l>=3 && s[i-1]==\\'L\\' && s[i-2]==\\'L\\')\\n                return false;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2299965,
                "title": "java-100",
                "content": "```\\n    public boolean checkRecord(String s) {\\n        int l = 0;\\n        int a = 0;\\n        for (char c : s.toCharArray()) {\\n            if (c == \\'A\\') {\\n                if (a == 1) {\\n                    return false;\\n                }\\n                a++;\\n                l = 0;\\n            } else if (c == \\'L\\') {\\n                if (l == 2) {\\n                    return false;\\n                }\\n                l++;\\n            } else {\\n                l = 0;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\n    public boolean checkRecord(String s) {\\n        int l = 0;\\n        int a = 0;\\n        for (char c : s.toCharArray()) {\\n            if (c == \\'A\\') {\\n                if (a == 1) {\\n                    return false;\\n                }\\n                a++;\\n                l = 0;\\n            } else if (c == \\'L\\') {\\n                if (l == 2) {\\n                    return false;\\n                }\\n                l++;\\n            } else {\\n                l = 0;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2260152,
                "title": "c-solution-o-n-time-o-1-space-faster-than-100",
                "content": "\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int ac=0, i=0;\\n        for(i=0; i<s.size(); i++)\\n        {\\n            if(s[i]==\\'L\\')\\n                if(s[i+1]==\\'L\\'&&s[i+2]==\\'L\\')\\n            \\n                    return false;\\n            \\n            if(s[i]==\\'A\\')\\n                ac++;\\n            if(ac>=2)\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```\\n\\n![image](https://assets.leetcode.com/users/images/3b0da429-b77b-4165-9bc5-c9f670d1053f_1657393141.8854308.png)\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int ac=0, i=0;\\n        for(i=0; i<s.size(); i++)\\n        {\\n            if(s[i]==\\'L\\')\\n                if(s[i+1]==\\'L\\'&&s[i+2]==\\'L\\')\\n            \\n                    return false;\\n            \\n            if(s[i]==\\'A\\')\\n                ac++;\\n            if(ac>=2)\\n                return false;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2222324,
                "title": "basic-c-solution",
                "content": "```\\n\\n```class Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int absent=0;\\n        int late;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            late=0;\\n            if(s[i]==\\'A\\')\\n            {\\n                absent++;\\n            }\\n            if(s[i]==\\'L\\')\\n            {\\n                while(s[i]==\\'L\\')\\n                {\\n                  late++;\\n                  i++;\\n                    if(late>=3)\\n                    {\\n                        return false;\\n                    }\\n                }\\n                i--;\\n            }\\n        }\\n        if(absent>=2)\\n        {\\n            return false;\\n        }\\n        return true;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2162833,
                "title": "javascript-simple-o-n",
                "content": "```\\nvar checkRecord = function(s) {\\n   let count = 0;\\n    let cons = 0;\\n    \\n    for(let i=0; i< s.length; i++){\\n        if(s[i] ===\"A\"){\\n            count++;\\n            cons =0;\\n        }\\n        if(count > 1) return false\\n        if(s[i] ===\"L\"){\\n            cons++;\\n        }else{\\n           cons =0; \\n        }\\n        if(cons > 2)return false\\n    }\\n    return true;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar checkRecord = function(s) {\\n   let count = 0;\\n    let cons = 0;\\n    \\n    for(let i=0; i< s.length; i++){\\n        if(s[i] ===\"A\"){\\n            count++;\\n            cons =0;\\n        }\\n        if(count > 1) return false\\n        if(s[i] ===\"L\"){\\n            cons++;\\n        }else{\\n           cons =0; \\n        }\\n        if(cons > 2)return false\\n    }\\n    return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2135721,
                "title": "c-0-ms-o-n-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) \\n    {\\n        int cntA = 0, cntL = 0;\\n        \\n        for(int i=0; i<s.size(); i++)\\n        {\\n            cntA += s[i] == \\'A\\';\\n            cntL += s[i] == \\'L\\';\\n            \\n            if(cntA >= 2 || cntL >= 3)\\n                return false;\\n            \\n            if(s[i] != \\'L\\')\\n                cntL = 0;\\n        }\\n        \\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "Counting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) \\n    {\\n        int cntA = 0, cntL = 0;\\n        \\n        for(int i=0; i<s.size(); i++)\\n        {\\n            cntA += s[i] == \\'A\\';\\n            cntL += s[i] == \\'L\\';\\n            \\n            if(cntA >= 2 || cntL >= 3)\\n                return false;\\n            \\n            if(s[i] != \\'L\\')\\n                cntL = 0;\\n        }\\n        \\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2075068,
                "title": "easy-and-simple-solution-using-list-c-o-n",
                "content": "```\\npublic class Solution\\n{\\n    public bool CheckRecord(string s)\\n    {\\n        List<char> li = new List<char>();\\n        Boolean res = true;\\n        int ac = 0;\\n        for (int i = 0; i < s.Length; i++)\\n        {\\n            if (s[i] == \\'L\\')\\n            {\\n                if (li.Count == 0 || li.Last() == \\'L\\') li.Add(s[i]);\\n                else\\n                {\\n                    li.Clear();\\n                    li.Add(s[i]);\\n                }\\n                if (li.Count() == 3)\\n                {\\n                    res = false;\\n                    break;\\n                }\\n            }\\n            else\\n            {\\n                li.Add(s[i]);\\n                if (s[i] == \\'A\\')\\n                {\\n                    ac++;\\n                    if (ac == 2)\\n                    {\\n                        res = false;\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution\\n{\\n    public bool CheckRecord(string s)\\n    {\\n        List<char> li = new List<char>();\\n        Boolean res = true;\\n        int ac = 0;\\n        for (int i = 0; i < s.Length; i++)\\n        {\\n            if (s[i] == \\'L\\')\\n            {\\n                if (li.Count == 0 || li.Last() == \\'L\\') li.Add(s[i]);\\n                else\\n                {\\n                    li.Clear();\\n                    li.Add(s[i]);\\n                }\\n                if (li.Count() == 3)\\n                {\\n                    res = false;\\n                    break;\\n                }\\n            }\\n            else\\n            {\\n                li.Add(s[i]);\\n                if (s[i] == \\'A\\')\\n                {\\n                    ac++;\\n                    if (ac == 2)\\n                    {\\n                        res = false;\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2056679,
                "title": "python-o-n",
                "content": "```py\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        A, L, temp = 0, 0, 0\\n        for i in s:\\n            if i == \"P\":\\n                temp = 0\\n            elif i == \"A\":\\n                A += 1\\n                temp = 0\\n            elif i == \"L\":\\n                temp += 1\\n            L = max(L, temp)\\n        return A < 2 and L < 3\\n```",
                "solutionTags": [],
                "code": "```py\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        A, L, temp = 0, 0, 0\\n        for i in s:\\n            if i == \"P\":\\n                temp = 0\\n            elif i == \"A\":\\n                A += 1\\n                temp = 0\\n            elif i == \"L\":\\n                temp += 1\\n            L = max(L, temp)\\n        return A < 2 and L < 3\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2054034,
                "title": "simple-java-solution-with-o-n-complexity",
                "content": "\\n```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absent=0;\\n        int late=0;\\n        int n=s.length();\\n        for(int i=0;i<n;i++){\\n            if(s.charAt(i)==\\'P\\'){ late=0;};\\n            if(s.charAt(i)==\\'A\\'){ absent++; late=0;};\\n            if(s.charAt(i)==\\'L\\'){\\n                late++;\\n            }\\n            if(absent>=2) return false;\\n            if(late>=3) return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absent=0;\\n        int late=0;\\n        int n=s.length();\\n        for(int i=0;i<n;i++){\\n            if(s.charAt(i)==\\'P\\'){ late=0;};\\n            if(s.charAt(i)==\\'A\\'){ absent++; late=0;};\\n            if(s.charAt(i)==\\'L\\'){\\n                late++;\\n            }\\n            if(absent>=2) return false;\\n            if(late>=3) return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1991423,
                "title": "java-0ms",
                "content": "```\\n    public boolean checkRecord(String s) {\\n\\tint aCount = 0;\\n\\tint lCount = 0;\\n\\tchar prev = s.charAt(0);\\n\\tfor (char c : s.toCharArray()) {\\n\\t    if (c == \\'P\\') {\\n\\t\\tlCount = 0;\\n\\t\\tprev = c;\\n\\t\\tcontinue;\\n\\t    }\\n\\t    if (c == \\'A\\') {\\n\\t\\taCount++;\\n\\t\\tif (aCount > 1) {\\n\\t\\t    return false;\\n\\t\\t}\\n\\t\\tlCount = 0;\\n\\t\\tprev = c;\\n\\t    }\\n\\t    if (c == \\'L\\') {\\n\\t\\tlCount++;\\n\\t\\tif (prev == c && lCount > 2) {\\n\\t\\t    return false;\\n\\t\\t}\\n\\t\\tprev = c;\\n\\t    }\\n\\t}\\n\\treturn true;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public boolean checkRecord(String s) {\\n\\tint aCount = 0;\\n\\tint lCount = 0;\\n\\tchar prev = s.charAt(0);\\n\\tfor (char c : s.toCharArray()) {\\n\\t    if (c == \\'P\\') {\\n\\t\\tlCount = 0;\\n\\t\\tprev = c;\\n\\t\\tcontinue;\\n\\t    }\\n\\t    if (c == \\'A\\') {\\n\\t\\taCount++;\\n\\t\\tif (aCount > 1) {\\n\\t\\t    return false;\\n\\t\\t}\\n\\t\\tlCount = 0;\\n\\t\\tprev = c;\\n\\t    }\\n\\t    if (c == \\'L\\') {\\n\\t\\tlCount++;\\n\\t\\tif (prev == c && lCount > 2) {\\n\\t\\t    return false;\\n\\t\\t}\\n\\t\\tprev = c;\\n\\t    }\\n\\t}\\n\\treturn true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1898046,
                "title": "school-method",
                "content": "```\\npublic boolean checkRecord(String s) {\\n        int countA = 0;\\n        int countL = 0;\\n        \\n        for (char c : s.toCharArray()) {\\n            if (c == \\'A\\') {\\n                countA++;\\n                if (countA == 2) return false;\\n            }\\n            if (c == \\'L\\') {\\n                countL++;\\n                if (countL == 3) return false;\\n            } else {\\n                countL = 0;\\n            }\\n        }\\n        return true;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic boolean checkRecord(String s) {\\n        int countA = 0;\\n        int countL = 0;\\n        \\n        for (char c : s.toCharArray()) {\\n            if (c == \\'A\\') {\\n                countA++;\\n                if (countA == 2) return false;\\n            }\\n            if (c == \\'L\\') {\\n                countL++;\\n                if (countL == 3) return false;\\n            } else {\\n                countL = 0;\\n            }\\n        }\\n        return true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1886361,
                "title": "c-faster-than-98-60",
                "content": "Runtime: 64 ms, faster than 98.60% of C# online submissions for Student Attendance Record I.\\nMemory Usage: 37.9 MB, less than 23.78% of C# online submissions for Student Attendance Record I.\\n```\\n    public bool CheckRecord(string s) {\\n        int count = 0;\\n        bool isA = false;\\n        foreach(char c in s)\\n        {\\n            switch (c)\\n            {\\n                case \\'A\\':\\n                    if(isA)\\n                        return false;\\n                    isA=true;\\n                    count=0;\\n                    break;\\n                case \\'L\\':\\n                    count++;\\n                    break;\\n                case \\'P\\':\\n                    count=0;\\n                    break;\\n                default:\\n                    return false;\\n                    break;\\n            }\\n            \\n            if(count>2)\\n                return false;\\n        }\\n        \\n        return true;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public bool CheckRecord(string s) {\\n        int count = 0;\\n        bool isA = false;\\n        foreach(char c in s)\\n        {\\n            switch (c)\\n            {\\n                case \\'A\\':\\n                    if(isA)\\n                        return false;\\n                    isA=true;\\n                    count=0;\\n                    break;\\n                case \\'L\\':\\n                    count++;\\n                    break;\\n                case \\'P\\':\\n                    count=0;\\n                    break;\\n                default:\\n                    return false;\\n                    break;\\n            }\\n            \\n            if(count>2)\\n                return false;\\n        }\\n        \\n        return true;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1879937,
                "title": "c-simple-approach-100-faster",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a=0, l=0;\\n        for(int i=0;i<s.size();i++) {\\n            if(s[i]==\\'A\\') a++;\\n            if(s[i]==\\'L\\') l++;\\n            else l=0;\\n            if(a>=2||l>2) return false;\\n        }\\n        return true;\\n    }\\n};",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a=0, l=0;\\n        for(int i=0;i<s.size();i++) {\\n            if(s[i]==\\'A\\') a++;\\n            if(s[i]==\\'L\\') l++;\\n            else l=0;\\n            if(a>=2||l>2) return false;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1871979,
                "title": "java-solution-o-n-1-ms-solution",
                "content": "public boolean checkRecord(String s) {\\n        \\n        int late=0;\\n        int absent=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i)==\\'A\\')\\n            {\\n                absent++;\\n\\t\\t\\t\\tlate=0;  //Set Late to 0 again, because now its not consecutive.\\n                if(absent>=2)\\n                    return false;\\n            }\\n            else if(s.charAt(i)==\\'L\\')\\n            {\\n                late++;\\n                if(late>=3)\\n                    return false;\\n            }\\n            else\\n                late=0; //Set Late to 0 again, because now its not consecutive.\\n        }\\n",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "public boolean checkRecord(String s) {\\n        \\n        int late=0;\\n        int absent=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s.charAt(i)==\\'A\\')\\n            {\\n                absent++;\\n\\t\\t\\t\\tlate=0;  //Set Late to 0 again, because now its not consecutive.\\n                if(absent>=2)\\n                    return false;\\n            }\\n            else if(s.charAt(i)==\\'L\\')\\n            {\\n                late++;\\n                if(late>=3)\\n                    return false;\\n            }\\n            else\\n                late=0; //Set Late to 0 again, because now its not consecutive.\\n        }\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1849037,
                "title": "c-solution-faster-than-100-users",
                "content": "```Time complexity :- O(n)   ,  Space complexity :- O(1).```\\n```\\n    bool checkRecord(string s) {\\n        int n=s.length();\\n        int c=0,d=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(s[i]==\\'A\\')\\n            {\\n                 c+=1;\\n                 d=0;\\n            }\\n            else if(s[i]==\\'P\\')\\n                d=0;\\n            else if(s[i]==\\'L\\')\\n                d+=1;\\n            if(d>=3)\\n                return false;\\n        }\\n        if(c>=2)\\n            return false;\\n        else\\n            return true;\\n    }\\n```\\n``` If you like my approach then please upvote me.```",
                "solutionTags": [],
                "code": "```Time complexity :- O(n)   ,  Space complexity :- O(1).```\n```\\n    bool checkRecord(string s) {\\n        int n=s.length();\\n        int c=0,d=0;\\n        for(int i=0;i<n;i++)\\n        {\\n            if(s[i]==\\'A\\')\\n            {\\n                 c+=1;\\n                 d=0;\\n            }\\n            else if(s[i]==\\'P\\')\\n                d=0;\\n            else if(s[i]==\\'L\\')\\n                d+=1;\\n            if(d>=3)\\n                return false;\\n        }\\n        if(c>=2)\\n            return false;\\n        else\\n            return true;\\n    }\\n```\n``` If you like my approach then please upvote me.```",
                "codeTag": "Unknown"
            },
            {
                "id": 1800192,
                "title": "simple-easy-one-line-solution-by-python-3",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\\'A\\') < 2 and \\'LLL\\' not in s\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\\'A\\') < 2 and \\'LLL\\' not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1787305,
                "title": "easy-python-solution",
                "content": "```absent = 0\\n        if \\'LLL\\' in s:\\n            return False\\n        for i in s:\\n            if i == \\'A\\':\\n                absent += 1\\n                \\n            if absent >= 2:\\n                return False\\n        return True\\n```\\n \\n We can also do it by count method:\\n \\n ```\\n if \\'LLL\\' in s or s.count(\\'A\\') >= 2:\\n        return False\\n return True\\n```\\n\\t\\t\\nWe can also do it in single line: \\n```\\nreturn (\\'LLL\\' not in s and s.count(\\'A\\') < 2)\\n```",
                "solutionTags": [],
                "code": "```absent = 0\\n        if \\'LLL\\' in s:\\n            return False\\n        for i in s:\\n            if i == \\'A\\':\\n                absent += 1\\n                \\n            if absent >= 2:\\n                return False\\n        return True\\n```\n```\\n if \\'LLL\\' in s or s.count(\\'A\\') >= 2:\\n        return False\\n return True\\n```\n```\\nreturn (\\'LLL\\' not in s and s.count(\\'A\\') < 2)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1780974,
                "title": "rust-solution",
                "content": "```\\nimpl Solution {\\n    pub fn check_record(s: String) -> bool {\\n        let (mut absent, mut late) = (0, 0);\\n        let mut prev_c = \\' \\';\\n        for c in s.chars() {\\n            match c {\\n                \\'A\\' => absent += 1,\\n                \\'L\\' => late = if prev_c == c { late + 1 } else { 1 },\\n                _ => (),\\n            }\\n            if absent == 2 || late == 3 {\\n                return false;\\n            }\\n            prev_c = c;\\n        }\\n        true\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn check_record(s: String) -> bool {\\n        let (mut absent, mut late) = (0, 0);\\n        let mut prev_c = \\' \\';\\n        for c in s.chars() {\\n            match c {\\n                \\'A\\' => absent += 1,\\n                \\'L\\' => late = if prev_c == c { late + 1 } else { 1 },\\n                _ => (),\\n            }\\n            if absent == 2 || late == 3 {\\n                return false;\\n            }\\n            prev_c = c;\\n        }\\n        true\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1700160,
                "title": "easy-java-1ms-faster",
                "content": "\\'\\'\\'class Solution {\\n    public boolean checkRecord(String s) {\\n        int count1 = 0, count2 = 0;\\n        for(int i=0; i<s.length(); i++){\\n            if(s.charAt(i)==\\'A\\') {\\n                count2 = 0;\\n                count1++;\\n                if(count1==2) return false;\\n            }else if(s.charAt(i)==\\'L\\'){\\n                count2++;\\n                if(count2==3) return false;\\n            }else{\\n                count2 = 0;\\n            }\\n        }\\n        return true;\\n    }\\n}\\'\\'\\'",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public boolean checkRecord(String s) {\\n        int count1 = 0, count2 = 0;\\n        for(int i=0; i<s.length(); i++){\\n            if(s.charAt(i)==\\'A\\') {\\n                count2 = 0;\\n                count1++;\\n                if(count1==2) return false;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1626259,
                "title": "rust-fast-100",
                "content": "```\\n\\n\\nstruct Solution{}\\nimpl Solution {\\n    pub fn check_record(s: String) -> bool {\\n        let mut count = 0;\\n        if s.chars().filter(|x| *x == \\'A\\').count() > 1{\\n            return false;\\n        }\\n        for i in s.chars(){\\n            if i == \\'L\\'{\\n                count += 1;\\n                if count >= 3 {\\n                    return false;\\n                }\\n            }else{\\n                count = 0;\\n            }\\n        }\\n        true\\n    }\\n}\\n\\nfn main(){\\n    println!(\"{:?}\",Solution::check_record(\"PPALLP\".to_string())); \\n}\\n#[cfg(test)]\\nmod test{\\n    use crate::Solution;\\n\\n    #[test]\\n    fn main_test(){\\n        assert_eq!(Solution::check_record(\"PPALLP\".to_string()),true);\\n        assert_eq!(Solution::check_record(\"PPALLL\".to_string()),false);\\n    }    \\n}\\n\\n\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\n\\n\\nstruct Solution{}\\nimpl Solution {\\n    pub fn check_record(s: String) -> bool {\\n        let mut count = 0;\\n        if s.chars().filter(|x| *x == \\'A\\').count() > 1{\\n            return false;\\n        }\\n        for i in s.chars(){\\n            if i == \\'L\\'{\\n                count += 1;\\n                if count >= 3 {\\n                    return false;\\n                }\\n            }else{\\n                count = 0;\\n            }\\n        }\\n        true\\n    }\\n}\\n\\nfn main(){\\n    println!(\"{:?}\",Solution::check_record(\"PPALLP\".to_string())); \\n}\\n#[cfg(test)]\\nmod test{\\n    use crate::Solution;\\n\\n    #[test]\\n    fn main_test(){\\n        assert_eq!(Solution::check_record(\"PPALLP\".to_string()),true);\\n        assert_eq!(Solution::check_record(\"PPALLL\".to_string()),false);\\n    }    \\n}\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1589945,
                "title": "easy-python-solution",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        ab = 0\\n        l = 0\\n        ans = 0\\n        for s1 in s:\\n            if \\'A\\' == s1:\\n                ab+=1\\n        for s1 in s:\\n            if \\'L\\' == s1:\\n                l+=1\\n            else:\\n                l = 0\\n            ans = max(ans,l)\\n        if ab < 2 and ans < 3:\\n            return True\\n        return False\\n                \\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        ab = 0\\n        l = 0\\n        ans = 0\\n        for s1 in s:\\n            if \\'A\\' == s1:\\n                ab+=1\\n        for s1 in s:\\n            if \\'L\\' == s1:\\n                l+=1\\n            else:\\n                l = 0\\n            ans = max(ans,l)\\n        if ab < 2 and ans < 3:\\n            return True\\n        return False\\n                \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1575808,
                "title": "student-attendance-record-hashmap-soln-java",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int index = 0;\\n        if(s.charAt(0) == \\'A\\')\\n        {\\n            return true;\\n        }\\n        HashMap<Character, Integer> dp = new HashMap<Character, Integer>();\\n        for(int i =0;i<s.length();i++)\\n        {\\n            if(dp.containsKey(s.charAt(i)))\\n            {\\n                dp.put(s.charAt(i),dp.get(s.charAt(i)) + 1);\\n            }\\n            else{\\n                dp.put(s.charAt(i), 1);\\n                if(s.charAt(i) == \\'L\\'){\\n                    index = i;\\n                }\\n            }\\n        }\\n        \\n    int f1 = 0;\\n    int f2 = 0;\\n    for(Map.Entry m : dp.entrySet())\\n    {    \\n        int l = 2;\\n        int p = 3;\\n        int d = (int)m.getValue();\\n        \\n        if(m.getKey().equals(\\'A\\') && d < l)\\n        {\\n           f1 = 1;\\n        }\\n        if(m.getKey().equals(\\'L\\') && d <= p)\\n        {\\n            if(d >= 3 && s.charAt(index +1) == \\'L\\' && s.charAt(index + 2) == \\'L\\')\\n                f2 = 0;\\n            else\\n                f2 = 1;\\n        }\\n        // System.out.println(m.getKey()+\" -- \" + d);\\n            \\n    }  \\n    if( f1 == 1 && f2 == 1)\\n        return true;\\n        \\n    return false;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int index = 0;\\n        if(s.charAt(0) == \\'A\\')\\n        {\\n            return true;\\n        }\\n        HashMap<Character, Integer> dp = new HashMap<Character, Integer>();\\n        for(int i =0;i<s.length();i++)\\n        {\\n            if(dp.containsKey(s.charAt(i)))\\n            {\\n                dp.put(s.charAt(i),dp.get(s.charAt(i)) + 1);\\n            }\\n            else{\\n                dp.put(s.charAt(i), 1);\\n                if(s.charAt(i) == \\'L\\'){\\n                    index = i;\\n                }\\n            }\\n        }\\n        \\n    int f1 = 0;\\n    int f2 = 0;\\n    for(Map.Entry m : dp.entrySet())\\n    {    \\n        int l = 2;\\n        int p = 3;\\n        int d = (int)m.getValue();\\n        \\n        if(m.getKey().equals(\\'A\\') && d < l)\\n        {\\n           f1 = 1;\\n        }\\n        if(m.getKey().equals(\\'L\\') && d <= p)\\n        {\\n            if(d >= 3 && s.charAt(index +1) == \\'L\\' && s.charAt(index + 2) == \\'L\\')\\n                f2 = 0;\\n            else\\n                f2 = 1;\\n        }\\n        // System.out.println(m.getKey()+\" -- \" + d);\\n            \\n    }  \\n    if( f1 == 1 && f2 == 1)\\n        return true;\\n        \\n    return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1537799,
                "title": "python-solution",
                "content": "```\\nclass Solution(object):\\n    def checkRecord(self, s):\\n        \"\"\"\\n        :type s: str\\n        :rtype: bool\\n        \"\"\"\\n        countA = 0\\n        countL = 0\\n        for i in range(len(s)): \\n            if s[i] == \\'A\\':\\n                countA+=1\\n                if countA == 2: \\n                    return False\\n            if s[i] == \\'L\\': \\n                countL+=1\\n            if i < len(s) - 2 and s[i] == \\'L\\' and s[i+1] == \\'L\\' and s[i+2] == \\'L\\':\\n                return False\\n        return True",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def checkRecord(self, s):\\n        \"\"\"\\n        :type s: str\\n        :rtype: bool\\n        \"\"\"\\n        countA = 0\\n        countL = 0\\n        for i in range(len(s)): \\n            if s[i] == \\'A\\':\\n                countA+=1\\n                if countA == 2: \\n                    return False\\n            if s[i] == \\'L\\': \\n                countL+=1\\n            if i < len(s) - 2 and s[i] == \\'L\\' and s[i+1] == \\'L\\' and s[i+2] == \\'L\\':\\n                return False\\n        return True",
                "codeTag": "Java"
            },
            {
                "id": 1495083,
                "title": "c-solution-faster-than-100",
                "content": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n**\\n\\n\\'\\'\\'\\nbool checkRecord(string s) {\\n        int c=0;\\n       for(int i=0;i<s.length();i++)\\n       {\\n         if(s[i]==\\'A\\')\\n         {\\n           c++;\\n         }\\n           if(c>=2)\\n           {\\n               return false;\\n           }\\n            if(i<s.length()-2)\\n            {\\n            if(s[i]==\\'L\\'&&s[i+1]==\\'L\\'&&s[i+2]==\\'L\\')\\n                return false;\\n            }\\n       }  \\n           return true;\\n       \\n       \\'\\'\\'\\n**",
                "solutionTags": [],
                "code": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n**\\n\\n\\'\\'\\'\\nbool checkRecord(string s) {\\n        int c=0;\\n       for(int i=0;i<s.length();i++)\\n       {\\n         if(s[i]==\\'A\\')\\n         {\\n           c++;\\n         }\\n           if(c>=2)\\n           {\\n               return false;\\n           }\\n            if(i<s.length()-2)\\n            {\\n            if(s[i]==\\'L\\'&&s[i+1]==\\'L\\'&&s[i+2]==\\'L\\')\\n                return false;\\n            }\\n       }  \\n           return true;\\n       \\n       \\'\\'\\'\\n**",
                "codeTag": "Unknown"
            },
            {
                "id": 1490981,
                "title": "faster-than-100-c-solutions",
                "content": "```\\nclass Solution \\n{\\npublic:\\n    bool checkRecord(string s)\\n    {\\n        int absent=0,i=0;\\n        // First of all check for first criteria\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s[i]==\\'A\\')\\n            {\\n                absent++;\\n            }\\n            if(absent>=2)\\n            {\\n                return false;\\n            }\\n        }\\n        \\n        // Secondly check for conseuctive lates\\n        while(i<s.length())\\n        {\\n            int j=i;\\n            while(i<s.length() && s[j]==s[i])\\n            {\\n                i++;\\n            }\\n            if(i-j>=3 && s[j]==\\'L\\')\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```\\n***Please upvote if you have got any help from my code. Thank you.***",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    bool checkRecord(string s)\\n    {\\n        int absent=0,i=0;\\n        // First of all check for first criteria\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s[i]==\\'A\\')\\n            {\\n                absent++;\\n            }\\n            if(absent>=2)\\n            {\\n                return false;\\n            }\\n        }\\n        \\n        // Secondly check for conseuctive lates\\n        while(i<s.length())\\n        {\\n            int j=i;\\n            while(i<s.length() && s[j]==s[i])\\n            {\\n                i++;\\n            }\\n            if(i-j>=3 && s[j]==\\'L\\')\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1482879,
                "title": "java-solution-0ms-faster-than-100",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absentCount = 0;\\n        int i = 0;\\n        while(i < s.length()) {\\n            if(s.charAt(i) == \\'A\\')\\n                absentCount++;\\n            else if(s.charAt(i) == \\'L\\' && (i != 0 && i != s.length() - 1)) {\\n                char leftChar = s.charAt(i - 1);\\n                char rightChar = s.charAt(i + 1);\\n                if(leftChar == rightChar && (leftChar == \\'L\\' && rightChar == \\'L\\')) return false;\\n            }\\n            i++;\\n        }\\n        if(absentCount < 2) return true;\\n        else return false;\\n    }\\n}\\n```\\n\\n1. We check if the ```absentCount``` variable goes above 2. If it does, we return ```false```, otherwise we return ```true```.\\n\\n\\n2. To check if the student is late consecutively for 3 or more days, we check if the current character is \\'L\\' and also check for boundary conditions(i.e in the first or last index of the string) and check for the left and right character. If both the left and the right character are same AND we also check if both the letters are \\'L\\', then we return ```false```. This is because we just have to check for 3 or more consecutive days and by doing the aforementioned step we are checking if there exists a subsequence in which there are chararcters that are consecutively \\'L\\'.\\n\\n\\n3. For example, if s = \"PPALLL\", at index no.3 we get the first \\'L\\', But here the left and the right character to char at index 3 is not the same so we go to the next iteration. At index no.4 we get the second \\'L\\' and now if we check for the left and right character we see that it is both the same and also both the characters are \\'L\\'. Therefore, we have our 3 consecutive days. Hence, we can return ```false```.\\n\\nPLEASE LET ME KNOW IF THIS IS A GOOD APPROACH!!",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absentCount = 0;\\n        int i = 0;\\n        while(i < s.length()) {\\n            if(s.charAt(i) == \\'A\\')\\n                absentCount++;\\n            else if(s.charAt(i) == \\'L\\' && (i != 0 && i != s.length() - 1)) {\\n                char leftChar = s.charAt(i - 1);\\n                char rightChar = s.charAt(i + 1);\\n                if(leftChar == rightChar && (leftChar == \\'L\\' && rightChar == \\'L\\')) return false;\\n            }\\n            i++;\\n        }\\n        if(absentCount < 2) return true;\\n        else return false;\\n    }\\n}\\n```\n```absentCount```\n```false```\n```true```\n```false```\n```false```",
                "codeTag": "Java"
            },
            {
                "id": 1466932,
                "title": "c-easy-solution-faster-than-100",
                "content": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s[i]==\\'A\\')\\n                a++;\\n            if(a>1)\\n                return false;\\n           if(i<s.length()-2)\\n           {\\n               if(s[i]==\\'L\\'&&s[i+1]==\\'L\\'&&s[i+2]==\\'L\\')\\n                   return false;\\n           }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int a=0;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            if(s[i]==\\'A\\')\\n                a++;\\n            if(a>1)\\n                return false;\\n           if(i<s.length()-2)\\n           {\\n               if(s[i]==\\'L\\'&&s[i+1]==\\'L\\'&&s[i+2]==\\'L\\')\\n                   return false;\\n           }\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1465654,
                "title": "python-solutin",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n           if s.count(\\'A\\')>=2:\\n                return False\\n           if s.find(\\'LLL\\')>-1:\\n                return False\\n           return True\\n\\t\\t   ```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n           if s.count(\\'A\\')>=2:\\n                return False\\n           if s.find(\\'LLL\\')>-1:\\n                return False\\n           return True\\n\\t\\t   ```",
                "codeTag": "Java"
            },
            {
                "id": 1373363,
                "title": "python-beats-99-2",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        eligible = True\\n        if s.count(\\'A\\') >= 2:\\n            eligible = False\\n        elif \\'LLL\\' in s:\\n            eligible = False\\n        return eligible\\n```\\n\\n**PROOF:**\\n![image](https://assets.leetcode.com/users/images/7e28bd60-c6b6-4a09-828e-ce8c62bb2e10_1627692861.0526073.png)\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        eligible = True\\n        if s.count(\\'A\\') >= 2:\\n            eligible = False\\n        elif \\'LLL\\' in s:\\n            eligible = False\\n        return eligible\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1343566,
                "title": "java-100-faster",
                "content": "```\\npublic boolean checkRecord(String s) {\\n        int absentCounter = 0;\\n        int consecutiveLateCounter = 1;\\n        char[] chars = s.toCharArray();\\n        boolean result = true;\\n        char prev = \\'D\\';      // any character would be used except A,L,P\\n\\t\\t\\n        for(char ch : chars){\\n            if(ch == \\'A\\'){\\n                absentCounter++;\\n                if(absentCounter >= 2){\\n                    result = false;\\n                    break;\\n                }\\n            } else if(ch == \\'L\\'){\\n                if(prev == ch){\\n                    consecutiveLateCounter++;\\n                    if(consecutiveLateCounter >= 3){\\n                        result = false;\\n                        break;\\n                    }\\n                } else {\\n                    consecutiveLateCounter = 1;\\n                }\\n            }\\n            prev = ch;\\n        }\\n        return result;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic boolean checkRecord(String s) {\\n        int absentCounter = 0;\\n        int consecutiveLateCounter = 1;\\n        char[] chars = s.toCharArray();\\n        boolean result = true;\\n        char prev = \\'D\\';      // any character would be used except A,L,P\\n\\t\\t\\n        for(char ch : chars){\\n            if(ch == \\'A\\'){\\n                absentCounter++;\\n                if(absentCounter >= 2){\\n                    result = false;\\n                    break;\\n                }\\n            } else if(ch == \\'L\\'){\\n                if(prev == ch){\\n                    consecutiveLateCounter++;\\n                    if(consecutiveLateCounter >= 3){\\n                        result = false;\\n                        break;\\n                    }\\n                } else {\\n                    consecutiveLateCounter = 1;\\n                }\\n            }\\n            prev = ch;\\n        }\\n        return result;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1314930,
                "title": "simple-2-line-c-solution-beats-100",
                "content": "Two line check solution based on built-in functions\\n```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        \\n        if ((s.find(\"LLL\")!=string::npos) || (count(s.begin(),s.end(),\\'A\\')>1))  return false;\\n        \\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        \\n        if ((s.find(\"LLL\")!=string::npos) || (count(s.begin(),s.end(),\\'A\\')>1))  return false;\\n        \\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1290958,
                "title": "python3-greedy",
                "content": "\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        absent = late = 0 \\n        for i, ch in enumerate(s): \\n            if ch == \"A\": absent += 1\\n            elif ch == \"L\": \\n                if i == 0 or s[i-1] != \"L\": cnt = 0 \\n                cnt += 1\\n                late = max(late, cnt)\\n        return absent < 2 and late < 3\\n```\\n\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\"A\") < 2 and \"LLL\" not in s\\n```\\n\\nRelated problems \\n[552. Student Attendance Record II](https://leetcode.com/problems/student-attendance-record-ii/discuss/1290973/Python3-top-down-dp)",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        absent = late = 0 \\n        for i, ch in enumerate(s): \\n            if ch == \"A\": absent += 1\\n            elif ch == \"L\": \\n                if i == 0 or s[i-1] != \"L\": cnt = 0 \\n                cnt += 1\\n                late = max(late, cnt)\\n        return absent < 2 and late < 3\\n```\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\"A\") < 2 and \"LLL\" not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1277016,
                "title": "python-1-liner",
                "content": "```\\nclass Solution(object):\\n    def checkRecord(self, s):\\n        return False if \"LLL\" in s or s.count(\"A\")>=2 else True\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def checkRecord(self, s):\\n        return False if \"LLL\" in s or s.count(\"A\")>=2 else True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1271622,
                "title": "easy-100-faster-c",
                "content": "``` \\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int countA=0,countL=0;\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'A\\')\\n                countA++;\\n            if(s[i] == \\'L\\' && i < s.size() -2 )\\n            {\\n                if(s[i+1] == \\'L\\' && s[i+2] == \\'L\\') \\n                    countL++;\\n            }\\n        }\\n        if(countA>=2 || countL!=0)\\n            return false;\\n        return true;\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int countA=0,countL=0;\\n        for(int i=0;i<s.size();i++){\\n            if(s[i]==\\'A\\')\\n                countA++;\\n            if(s[i] == \\'L\\' && i < s.size() -2 )\\n            {\\n                if(s[i+1] == \\'L\\' && s[i+2] == \\'L\\') \\n                    countL++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1257089,
                "title": "very-easy-java-solution",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s)\\n    {\\n        int a = 0;\\n        int flag = 0;\\n        \\n        \\n        for(int i=0; i<s.length(); i++)\\n        {\\n            if(s.charAt(i) == \\'A\\')\\n                a++;\\n            \\n            else if(i<=s.length()-3 && s.charAt(i)==\\'L\\' && s.charAt(i+1)==\\'L\\' && s.charAt(i+2)==\\'L\\')\\n            {\\n                flag =1;\\n            }\\n            else\\n                continue;\\n        }\\n        return flag == 0 && a < 2;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s)\\n    {\\n        int a = 0;\\n        int flag = 0;\\n        \\n        \\n        for(int i=0; i<s.length(); i++)\\n        {\\n            if(s.charAt(i) == \\'A\\')\\n                a++;\\n            \\n            else if(i<=s.length()-3 && s.charAt(i)==\\'L\\' && s.charAt(i+1)==\\'L\\' && s.charAt(i+2)==\\'L\\')\\n            {\\n                flag =1;\\n            }\\n            else\\n                continue;\\n        }\\n        return flag == 0 && a < 2;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1236515,
                "title": "python3-simple-solution-one-liner-beats-95-users",
                "content": "![image](https://assets.leetcode.com/users/images/8a1cdf2f-83d7-407c-bcf6-9077893bd34d_1622215609.8157291.png)\\n\\n```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\\'A\\') < 2 and \\'LLL\\' not in s\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        return s.count(\\'A\\') < 2 and \\'LLL\\' not in s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1195863,
                "title": "java-better-than-100",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absent = 0;\\n        int late = 0;\\n        for(int i = 0; i < s.length(); i++) {\\n            if(s.charAt(i) == \\'A\\') {\\n                absent++;\\n                late = 0;\\n            }\\n            else if(s.charAt(i) == \\'L\\') {\\n                late++;\\n            }\\n            else {\\n                late = 0;\\n            }\\n            \\n            if(absent >= 2 || late >= 3) {\\n                return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absent = 0;\\n        int late = 0;\\n        for(int i = 0; i < s.length(); i++) {\\n            if(s.charAt(i) == \\'A\\') {\\n                absent++;\\n                late = 0;\\n            }\\n            else if(s.charAt(i) == \\'L\\') {\\n                late++;\\n            }\\n            else {\\n                late = 0;\\n            }\\n            \\n            if(absent >= 2 || late >= 3) {\\n                return false;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1194384,
                "title": "python-simple-solution",
                "content": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if \"LLL\" in s:\\n            return False\\n        if s.count(\\'A\\')>=2: \\n            return False\\n        return True\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def checkRecord(self, s: str) -> bool:\\n        if \"LLL\" in s:\\n            return False\\n        if s.count(\\'A\\')>=2: \\n            return False\\n        return True\\n",
                "codeTag": "Java"
            },
            {
                "id": 1184844,
                "title": "faster-than-100-c-submissions-very-simple-solution",
                "content": "Runtime: 0 ms, faster than 100.00% of C++ online submissions for Student Attendance Record I.\\nMemory Usage: 6.1 MB, less than 89.41% of C++ online submissions for Student Attendance Record I.\\n```\\nclass Solution \\n{\\npublic:\\n    bool checkRecord(string s) \\n    {\\n        string sl=\"LLL\";\\n        int countA = count(s.begin(),s.end(),\\'A\\');\\n        if(countA>1)\\n            return false;\\n        if(s.find(sl)!=string::npos)\\n            return false;       \\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    bool checkRecord(string s) \\n    {\\n        string sl=\"LLL\";\\n        int countA = count(s.begin(),s.end(),\\'A\\');\\n        if(countA>1)\\n            return false;\\n        if(s.find(sl)!=string::npos)\\n            return false;       \\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1182069,
                "title": "c-fastest-and-small-code",
                "content": "class Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        \\n        if(count(s.begin(),s.end(),\\'A\\') >= 2)\\n            return false;\\n        \\n        size_t found = s.find(\"LLL\");\\n        if (found != string::npos)\\n            return false;\\n        \\n        return true;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        \\n        if(count(s.begin(),s.end(),\\'A\\') >= 2)\\n            return false;\\n        \\n        size_t found = s.find(\"LLL\");\\n        if (found != string::npos)\\n            return false;\\n        \\n        return true;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 1166375,
                "title": "java-0-ms-very-straightforward-faster-than-100-memory-usage-98",
                "content": "\\tclass Solution {\\n    public boolean checkRecord(String s) {\\n        int absent = 0;           \\n        for (int i = 0; i < s.length(); i++) {\\n            if (s.charAt(i)==\\'A\\') absent++;\\n        }\\n        if (absent>=2 ||s.contains(\"LLL\")) {\\n            return false;\\n        }\\n       return true;\\n    }\\n\\t}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public boolean checkRecord(String s) {\\n        int absent = 0;           \\n        for (int i = 0; i < s.length(); i++) {\\n            if (s.charAt(i)==\\'A\\') absent++;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1157130,
                "title": "simple-python-solution",
                "content": "\\t\\tcount_a=0\\n\\n        for i in s:\\n            if i==\\'A\\':\\n                count_a+=1\\n        if count_a>1 or \\'LLL\\' in s:\\n            return False\\n        else:\\n            return True",
                "solutionTags": [],
                "code": "\\t\\tcount_a=0\\n\\n        for i in s:\\n            if i==\\'A\\':\\n                count_a+=1\\n        if count_a>1 or \\'LLL\\' in s:\\n            return False\\n        else:\\n            return True",
                "codeTag": "Unknown"
            },
            {
                "id": 1153117,
                "title": "java-solution-0-ms-faster-than-100",
                "content": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n      char[] arr=s.toCharArray();\\n       int count_A=0;\\n        int cons_L=0;\\n        \\n        for(int i=0;i<arr.length;i++){\\n            char ch=arr[i];\\n            if(ch==\\'A\\'){\\n                count_A++;\\n                if(count_A==2)\\n                    return false;\\n                cons_L=0;\\n            }\\n            else if(ch==\\'L\\'){\\n                cons_L++;\\n                if(cons_L==3)\\n                    return false;\\n            }\\n            else{\\n                cons_L=0;\\n                \\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean checkRecord(String s) {\\n      char[] arr=s.toCharArray();\\n       int count_A=0;\\n        int cons_L=0;\\n        \\n        for(int i=0;i<arr.length;i++){\\n            char ch=arr[i];\\n            if(ch==\\'A\\'){\\n                count_A++;\\n                if(count_A==2)\\n                    return false;\\n                cons_L=0;\\n            }\\n            else if(ch==\\'L\\'){\\n                cons_L++;\\n                if(cons_L==3)\\n                    return false;\\n            }\\n            else{\\n                cons_L=0;\\n                \\n            }\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1569489,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1574607,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1844146,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1574174,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1572082,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1999243,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1957907,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1950305,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1938232,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1729520,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1569489,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1574607,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1844146,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1574174,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1572082,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1999243,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1957907,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1950305,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1938232,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            },
            {
                "id": 1729520,
                "content": [
                    {
                        "username": "chiranjivee",
                        "content": "return !(s.indexOf(\"LLL\") >= 0 || s.indexOf(\"A\") >= 0 && s.indexOf(\"A\", s.indexOf(\"A\") + 1) >= 0);"
                    },
                    {
                        "username": "saisathwik1999",
                        "content": "return True if s.count(\\'A\\')<2 and \\'LLL\\' not in s else False"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "It is not clear from the problem definition that having an absence in the middle of 3 late presents is okay to give the award."
                    },
                    {
                        "username": "Igor_Victor",
                        "content": "return (s.indexOf(\\'A\\') == s.lastIndexOf(\\'A\\')) && !s.contains(\"LLL\");"
                    },
                    {
                        "username": "vunguyen1990",
                        "content": "return s.find(\"LLL\") == SIZE_MAX && s.find_first_of(\\'A\\') == s.find_last_of(\\'A\\');\\n"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Itertaive $$O(N)$$ Logic, with Detailed explanation:\\nhttps://leetcode.com/problems/student-attendance-record-i/solutions/3860789/simple-iterative-approach-o-n-with-detailed-explanation/"
                    },
                    {
                        "username": "Ankitoli",
                        "content": "can anyone please tell, for input \"LALL\".how it should be true as Late >=3?.thank you in advance."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "The student is only disqualified if the three L's are consecutive - Three L's in a row. So ALLL would disqualify them but LALL does not."
                    },
                    {
                        "username": "jackere1",
                        "content": "PPLLALLP and student is still awarded. What an logic"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "how about LLALL"
                    },
                    {
                        "username": "rebirthfox333",
                        "content": "Why not ; ) ?"
                    },
                    {
                        "username": "Vectorido",
                        "content": "It\\'s really funny, but if you late 2 times, then absent, then again late 2 times - you\\'ll be eligible for attendance. However this is even worse than LLLP, for example."
                    },
                    {
                        "username": "harshkumar123",
                        "content": "My code beats 100%\\nask in comment if you get any doubt will help surely\\nclass Solution {\\npublic:\\n    bool checkRecord(string s) {\\n        int count=0;\\n        int counter=0;\\n        for(int i=0;i<s.size();i++){\\n            if( s[i]==\\'L\\'){\\n\\n              counter++;\\n              if(counter==3) return false;\\n            }\\n            \\n            else{\\n            \\n                counter=0;\\n            }\\n            if(s[i]==\\'A\\'){\\n                count++;\\n                if(count==2) return false;\\n            }\\n\\n        }\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "Keshav_tandon",
                        "content": "[@amaan7](/amaan7) its c++ bro not c\\n"
                    },
                    {
                        "username": "amaan7",
                        "content": "i have a doubt as we have string so in if condition we have to take s.charAt(i) right ?? so why you are taking s[i] here , and also in for loop we have to go till s.length(), why you are going till s.size()  ??"
                    }
                ]
            }
        ]
    }
]