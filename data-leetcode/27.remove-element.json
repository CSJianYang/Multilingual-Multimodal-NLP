[
    {
        "title": "Remove Element",
        "question_content": "Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.\nConsider the number of elements in nums which are not equal to val be k, to get accepted, you need to do the following things:\n\n\tChange the array nums such that the first k elements of nums contain the elements which are not equal to val. The remaining elements of nums are not important as well as the size of nums.\n\tReturn k.\n\nCustom Judge:\nThe judge will test your solution with the following code:\n\nint[] nums = [...]; // Input array\nint val = ...; // Value to remove\nint[] expectedNums = [...]; // The expected answer with correct length.\n                            // It is sorted with no values equaling val.\nint k = removeElement(nums, val); // Calls your implementation\nassert k == expectedNums.length;\nsort(nums, 0, k); // Sort the first k elements of nums\nfor (int i = 0; i < actualLength; i++) {\n    assert nums[i] == expectedNums[i];\n}\n\nIf all assertions pass, then your solution will be accepted.\n&nbsp;\nExample 1:\n\nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2,_,_]\nExplanation: Your function should return k = 2, with the first two elements of nums being 2.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\nExample 2:\n\nInput: nums = [0,1,2,2,3,0,4,2], val = 2\nOutput: 5, nums = [0,1,4,0,3,_,_,_]\nExplanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.\nNote that the five elements can be returned in any order.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\n&nbsp;\nConstraints:\n\n\t0 <= nums.length <= 100\n\t0 <= nums[i] <= 50\n\t0 <= val <= 100",
        "solutions": [
            {
                "id": 3670940,
                "title": "best-100-c-java-python-beginner-friendly",
                "content": "# Intuition\\r\\n<!-- Describe your first thoughts on how to solve this problem. -->\\r\\nThe intuition behind this solution is to iterate through the array and keep track of two pointers: `index` and `i`. The `index` pointer represents the position where the next non-target element should be placed, while the `i` pointer iterates through the array elements. By overwriting the target elements with non-target elements, the solution effectively removes all occurrences of the target value from the array.\\r\\n# Approach\\r\\n<!-- Describe your approach to solving the problem. -->\\r\\n1. Initialize `index` to 0, which represents the current position for the next non-target element.\\r\\n2. Iterate through each element of the input array using the `i` pointer.\\r\\n3. For each element `nums[i]`, check if it is equal to the target value.\\r\\n    - If `nums[i]` is not equal to `val`, it means it is a non-target element.\\r\\n    - Set `nums[index]` to `nums[i]` to store the non-target element at the current `index` position.\\r\\n    - Increment `index` by 1 to move to the next position for the next non-target element.\\r\\n4. Continue this process until all elements in the array have been processed.\\r\\n5. Finally, return the value of `index`, which represents the length of the modified array.\\r\\n\\r\\n# Complexity\\r\\n- Time complexity:\\r\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\r\\n$$ O(n) $$\\r\\n- Space complexity:\\r\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\r\\n$$ O(1) $$\\r\\n\\r\\n# Code\\r\\n```C++ []\\r\\nclass Solution {\\r\\npublic:\\r\\n    int removeElement(vector<int>& nums, int val) {\\r\\n        int index = 0;\\r\\n        for(int i = 0; i< nums.size(); i++){\\r\\n            if(nums[i] != val){\\r\\n                nums[index] = nums[i];\\r\\n                index++;\\r\\n            }\\r\\n        }\\r\\n        return index;\\r\\n    }\\r\\n};\\r\\n```\\r\\n```Java []\\r\\nclass Solution {\\r\\n    public int removeElement(int[] nums, int val) {\\r\\n        int index = 0;\\r\\n        for (int i = 0; i < nums.length; i++) {\\r\\n            if (nums[i] != val) {\\r\\n                nums[index] = nums[i];\\r\\n                index++;\\r\\n            }\\r\\n        }\\r\\n        return index;\\r\\n    }\\r\\n}\\r\\n```\\r\\n```Python3 []\\r\\nclass Solution:\\r\\n    def removeElement(self, nums: List[int], val: int) -> int:\\r\\n        index = 0\\r\\n        for i in range(len(nums)):\\r\\n            if nums[i] != val:\\r\\n                nums[index] = nums[i]\\r\\n                index += 1\\r\\n        return index\\r\\n```\\r\\n\\r\\n![CUTE_CAT.png](https://assets.leetcode.com/users/images/f1c3c890-6ac9-41a0-8a97-b0bae10570c2_1687458739.4610858.png)\\r\\n\\r\\n\\r\\n**If you are a beginner solve these problems which makes concepts clear for future coding:**\\r\\n1. [Two Sum](https://leetcode.com/problems/two-sum/solutions/3619262/3-method-s-c-java-python-beginner-friendly/)\\r\\n2. [Roman to Integer](https://leetcode.com/problems/roman-to-integer/solutions/3651672/best-method-c-java-python-beginner-friendly/)\\r\\n3. [Palindrome Number](https://leetcode.com/problems/palindrome-number/solutions/3651712/2-method-s-c-java-python-beginner-friendly/)\\r\\n4. [Maximum Subarray](https://leetcode.com/problems/maximum-subarray/solutions/3666304/beats-100-c-java-python-beginner-friendly/)\\r\\n5. [Remove Element](https://leetcode.com/problems/remove-element/solutions/3670940/best-100-c-java-python-beginner-friendly/)\\r\\n6. [Contains Duplicate](https://leetcode.com/problems/contains-duplicate/solutions/3672475/4-method-s-c-java-python-beginner-friendly/)\\r\\n7. [Add Two Numbers](https://leetcode.com/problems/add-two-numbers/solutions/3675747/beats-100-c-java-python-beginner-friendly/)\\r\\n8. [Majority Element](https://leetcode.com/problems/majority-element/solutions/3676530/3-methods-beats-100-c-java-python-beginner-friendly/)\\r\\n9. [Remove Duplicates from Sorted Array](https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3676877/best-method-100-c-java-python-beginner-friendly/)\\r\\n10. **Practice them in a row for better understanding and please Upvote for more questions.**\\r\\n\\r\\n\\r\\n**If you found my solution helpful, I would greatly appreciate your upvote, as it would motivate me to continue sharing more solutions.**\\r\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```C++ []\\r\\nclass Solution {\\r\\npublic:\\r\\n    int removeElement(vector<int>& nums, int val) {\\r\\n        int index = 0;\\r\\n        for(int i = 0; i< nums.size(); i++){\\r\\n            if(nums[i] != val){\\r\\n                nums[index] = nums[i];\\r\\n                index++;\\r\\n            }\\r\\n        }\\r\\n        return index;\\r\\n    }\\r\\n};\\r\\n```\n```Java []\\r\\nclass Solution {\\r\\n    public int removeElement(int[] nums, int val) {\\r\\n        int index = 0;\\r\\n        for (int i = 0; i < nums.length; i++) {\\r\\n            if (nums[i] != val) {\\r\\n                nums[index] = nums[i];\\r\\n                index++;\\r\\n            }\\r\\n        }\\r\\n        return index;\\r\\n    }\\r\\n}\\r\\n```\n```Python3 []\\r\\nclass Solution:\\r\\n    def removeElement(self, nums: List[int], val: int) -> int:\\r\\n        index = 0\\r\\n        for i in range(len(nums)):\\r\\n            if nums[i] != val:\\r\\n                nums[index] = nums[i]\\r\\n                index += 1\\r\\n        return index\\r\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3102906,
                "title": "java-best-solution-o-n-time-complexity",
                "content": "# Approach\\n- I am using Two pointers method\\n- After shifting the val to the right side of the array.\\n- Just return the value of k which is length of array excluding val.\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                int temp = nums[i];\\n                nums[i] = nums[j];\\n                nums[j] = temp;\\n                i++;\\n            }\\n        }\\n        return i;\\n    }\\n}\\n```\\n![please-upvote-and.jpg](https://assets.leetcode.com/users/images/e78315ef-8a9d-492b-9908-e3917f23eb31_1674946036.087042.jpeg)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                int temp = nums[i];\\n                nums[i] = nums[j];\\n                nums[j] = temp;\\n                i++;\\n            }\\n        }\\n        return i;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12584,
                "title": "6-line-python-solution-48-ms",
                "content": "    def removeElement(self, nums, val):\\n        i = 0\\n        for x in nums:\\n            if x != val:\\n                nums[i] = x\\n                i += 1\\n        return i",
                "solutionTags": [
                    "Python"
                ],
                "code": "    def removeElement(self, nums, val):\\n        i = 0\\n        for x in nums:\\n            if x != val:\\n                nums[i] = x\\n                i += 1\\n        return i",
                "codeTag": "Python3"
            },
            {
                "id": 12289,
                "title": "my-solution-for-your-reference",
                "content": "    int removeElement(int A[], int n, int elem) {\\n        int begin=0;\\n        for(int i=0;i<n;i++) if(A[i]!=elem) A[begin++]=A[i];\\n        return begin;\\n    }",
                "solutionTags": [],
                "code": "    int removeElement(int A[], int n, int elem) {\\n        int begin=0;\\n        for(int i=0;i<n;i++) if(A[i]!=elem) A[begin++]=A[i];\\n        return begin;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 12286,
                "title": "accepted-java-solution",
                "content": "public class Solution {\\n\\n    public int removeElement(int[] A, int elem) {\\n       int m = 0;    \\n       for(int i = 0; i < A.length; i++){\\n           \\n           if(A[i] != elem){\\n               A[m] = A[i];\\n               m++;\\n           }\\n       }\\n       \\n       return m;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n\\n    public int removeElement(int[] A, int elem) {\\n       int m = 0;    \\n       for(int i = 0; i < A.length; i++){\\n           \\n           if(A[i] != elem){\\n               A[m] = A[i];\\n               m++;\\n           }",
                "codeTag": "Java"
            },
            {
                "id": 12306,
                "title": "simple-python-o-n-two-pointer-in-place-solution",
                "content": "Starting from the left every time we find a value that is the target value we swap it out with an item starting from the right.  We decrement end each time as we know that the final item is the target value and only increment start once we know the value is ok.  Once start reaches end we know all items after that point are the target value so we can stop there.\\n\\n\\n      def removeElement(self, nums, val):\\n        start, end = 0, len(nums) - 1\\n        while start <= end:\\n            if nums[start] == val:\\n                nums[start], nums[end], end = nums[end], nums[start], end - 1\\n            else:\\n                start +=1\\n        return start",
                "solutionTags": [
                    "Python"
                ],
                "code": "Starting from the left every time we find a value that is the target value we swap it out with an item starting from the right.  We decrement end each time as we know that the final item is the target value and only increment start once we know the value is ok.  Once start reaches end we know all items after that point are the target value so we can stop there.\\n\\n\\n      def removeElement(self, nums, val):\\n        start, end = 0, len(nums) - 1\\n        while start <= end:\\n            if nums[start] == val:\\n                nums[start], nums[end], end = nums[end], nums[start], end - 1\\n            else:\\n                start +=1\\n        return start",
                "codeTag": "Python3"
            },
            {
                "id": 12299,
                "title": "very-simple-and-optimal-c-solution",
                "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        for(int i = 0 ; i < nums.size() ; ++i) {\\n            if(nums[i] == val)\\n                cnt++;\\n            else\\n                nums[i-cnt] = nums[i];\\n        }\\n        return nums.size()-cnt;\\n    }",
                "solutionTags": [],
                "code": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        for(int i = 0 ; i < nums.size() ; ++i) {\\n            if(nums[i] == val)\\n                cnt++;\\n            else\\n                nums[i-cnt] = nums[i];\\n        }\\n        return nums.size()-cnt;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2785400,
                "title": "c-faster-than-100-two-pointer-simple-code",
                "content": "# Complexity\\n- Time complexity: O(N)\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j=0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                nums[j++]=nums[i];\\n            }\\n        }\\n        return j;        \\n    }\\n};\\n```\\n\\n**<--Upvote If Helpful!!!!!-->**",
                "solutionTags": [
                    "C++",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j=0;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                nums[j++]=nums[i];\\n            }\\n        }\\n        return j;        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3263550,
                "title": "2-lines-of-code-python3",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n#please upvote me it would encourage me alot\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n#please upvote me it would encourage me alot\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 791353,
                "title": "python-3-one-liner",
                "content": "Runtime: 32 ms, faster than 80.15% of Python3 online submissions for Remove Element.\\nMemory Usage: 13.7 MB, less than 85.60% of Python3 online submissions for Remove Element.\\n\\n```python\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums: nums.remove(val)\\n```\\n\\nIf you like this solution, please, upvote so that others can see it too. Thanks!",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```python\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums: nums.remove(val)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2814712,
                "title": "simple-java-solution-1ms",
                "content": "upvote if it works\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        \\n        int c = 0;\\n        for(int i = 0; i < nums.length; i++){\\n            if(nums[i] != val){\\n                nums[c] = nums[i];\\n                c++;\\n                \\n            }\\n            \\n        }\\n        \\n        return c;\\n    }\\n    \\n\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        \\n        int c = 0;\\n        for(int i = 0; i < nums.length; i++){\\n            if(nums[i] != val){\\n                nums[c] = nums[i];\\n                c++;\\n                \\n            }\\n            \\n        }\\n        \\n        return c;\\n    }\\n    \\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 430881,
                "title": "this-is-how-you-solve-all-in-place-questions-simple-easy-to-understand-js-solution",
                "content": "I have been stuck on \"in place\" problems for too long..  \\n1. if index[i] == val. zeroStartIdx ++, then you get your number! \\n\\n```\\nvar removeElement = function(nums, val) {\\n    var zeroStartIdx = 0;\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i]!==val){\\n            nums[zeroStartIdx]=nums[i];\\n            zeroStartIdx++\\n        }\\n    }\\n    return zeroStartIdx; \\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar removeElement = function(nums, val) {\\n    var zeroStartIdx = 0;\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i]!==val){\\n            nums[zeroStartIdx]=nums[i];\\n            zeroStartIdx++\\n        }\\n    }\\n    return zeroStartIdx; \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12282,
                "title": "fast-short-java-solution",
                "content": "    public int removeElement(int[] A, int elem) {\\n        int l = A.length;\\n        for (int i=0; i<l; i++) {\\n            if (A[i] == elem) {\\n                A[i--] = A[l-- -1];\\n            }\\n        }\\n        return l;\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "    public int removeElement(int[] A, int elem) {\\n        int l = A.length;\\n        for (int i=0; i<l; i++) {\\n            if (A[i] == elem) {\\n                A[i--] = A[l-- -1];\\n            }\\n        }\\n        return l;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1189866,
                "title": "javascript-solution-two-pointers",
                "content": "```\\nvar removeElement = function(nums, val) {\\n    let left = 0;\\n    let right = nums.length - 1;\\n    \\n    while (left <= right) {\\n        if (nums[left] === val) {\\n            nums[left] = nums[right];\\n            right--;\\n        }\\n        else {\\n            left++;\\n        }\\n    }\\n    \\n    return left;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Two Pointers"
                ],
                "code": "```\\nvar removeElement = function(nums, val) {\\n    let left = 0;\\n    let right = nums.length - 1;\\n    \\n    while (left <= right) {\\n        if (nums[left] === val) {\\n            nums[left] = nums[right];\\n            right--;\\n        }\\n        else {\\n            left++;\\n        }\\n    }\\n    \\n    return left;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12405,
                "title": "9-line-java-solution",
                "content": "The basic idea is when elem is found at index i, let A[i] = the last element in the modifying array, then repeat searching until elem is not found.\\n\\n\\n    public int removeElement(int[] A, int elem) {\\n        int len = A.length;\\n        for (int i = 0 ; i< len; ++i){\\n            while (A[i]==elem && i< len) {\\n                A[i]=A[--len];\\n            }\\n        }\\n        return len;\\n    }",
                "solutionTags": [],
                "code": "The basic idea is when elem is found at index i, let A[i] = the last element in the modifying array, then repeat searching until elem is not found.\\n\\n\\n    public int removeElement(int[] A, int elem) {\\n        int len = A.length;\\n        for (int i = 0 ; i< len; ++i){\\n            while (A[i]==elem && i< len) {\\n                A[i]=A[--len];\\n            }\\n        }\\n        return len;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3416598,
                "title": "c-java-python-js-fully-explained-easy-to-understand",
                "content": "# Intuition:\\nThe problem requires removing all occurrences of a given value val from a given integer array nums and returning the new length of the resulting array after the removal.\\n\\n# Approach:\\nThe approach taken here is to keep a counter variable count for keeping track of elements other than val and then loop through all the elements of the array. For each element, if it\\'s not equal to val, it is placed at index count of the array, and count is incremented.\\n\\nFinally, the length of the new array is equal to count. This approach modifies the input array in-place without using any additional space.\\n\\n# Complexity:\\n- Time Complexity: The time complexity of this approach is O(n) since we are traversing the entire array once.\\n- Space Complexity: The space complexity of this approach is O(1) since we are not using any additional space.\\n\\n# C++\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n         // Counter for keeping track of elements other than val\\n        int count = 0;\\n        // Loop through all the elements of the array\\n        for (int i = 0; i < nums.size(); i++) {\\n            // If the element is not val\\n            if (nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n        return count;\\n    }\\n};\\n\\n```\\n# JAVASCRIPT\\n```\\nfunction removeElement(nums, val) {\\n    // Counter for keeping track of elements other than val\\n    let count = 0;\\n    // Loop through all the elements of the array\\n    for (let i = 0; i < nums.length; i++) {\\n        // If the element is not val\\n        if (nums[i] !== val) {\\n            nums[count++] = nums[i];\\n        }\\n    }\\n    return count;\\n}\\n\\n```\\n# JAVA\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        // Counter for keeping track of elements other than val\\n        int count = 0;\\n        // Loop through all the elements of the array\\n        for (int i = 0; i < nums.length; i++) {\\n            // If the element is not val\\n            if (nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n        return count;\\n    }\\n}\\n\\n```\\n# Python\\n```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        # Counter for keeping track of elements other than val\\n        count = 0\\n        # Loop through all the elements of the array\\n        for i in range(len(nums)):\\n            # If the element is not val\\n            if nums[i] != val:\\n                nums[count] = nums[i]\\n                count += 1\\n        return count\\n\\n```\\n\\n***THANK YOU***",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "JavaScript",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n         // Counter for keeping track of elements other than val\\n        int count = 0;\\n        // Loop through all the elements of the array\\n        for (int i = 0; i < nums.size(); i++) {\\n            // If the element is not val\\n            if (nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n        return count;\\n    }\\n};\\n\\n```\n```\\nfunction removeElement(nums, val) {\\n    // Counter for keeping track of elements other than val\\n    let count = 0;\\n    // Loop through all the elements of the array\\n    for (let i = 0; i < nums.length; i++) {\\n        // If the element is not val\\n        if (nums[i] !== val) {\\n            nums[count++] = nums[i];\\n        }\\n    }\\n    return count;\\n}\\n\\n```\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        // Counter for keeping track of elements other than val\\n        int count = 0;\\n        // Loop through all the elements of the array\\n        for (int i = 0; i < nums.length; i++) {\\n            // If the element is not val\\n            if (nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n        return count;\\n    }\\n}\\n\\n```\n```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        # Counter for keeping track of elements other than val\\n        count = 0\\n        # Loop through all the elements of the array\\n        for i in range(len(nums)):\\n            # If the element is not val\\n            if nums[i] != val:\\n                nums[count] = nums[i]\\n                count += 1\\n        return count\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1048331,
                "title": "c-c-0-ms-faster-than-100-00-cool-clear-easy-solution",
                "content": "\\tclass Solution {\\n\\tpublic:\\n\\t\\tint removeElement(vector<int>& nums, int val) {\\n\\t\\t\\tint length = nums.size(), index = 0;\\n\\t\\t\\twhile ( index < length )\\n\\t\\t\\t{\\n\\t\\t\\t\\t if ( nums[index] == val )\\n\\t\\t\\t\\t {\\n\\t\\t\\t\\t\\t nums[index] = nums[length - 1];\\n\\t\\t\\t\\t\\t -- length;\\n\\t\\t\\t\\t }\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\telse ++index;\\n\\t\\t\\t}\\n\\t\\t\\t return length;  \\n\\t\\t}\\n\\t};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tint removeElement(vector<int>& nums, int val) {\\n\\t\\t\\tint length = nums.size(), index = 0;\\n\\t\\t\\twhile ( index < length )\\n\\t\\t\\t{\\n\\t\\t\\t\\t if ( nums[index] == val )\\n\\t\\t\\t\\t {\\n\\t\\t\\t\\t\\t nums[index] = nums[length - 1];\\n\\t\\t\\t\\t\\t -- length;\\n\\t\\t\\t\\t }",
                "codeTag": "Java"
            },
            {
                "id": 12662,
                "title": "java-short-and-clean",
                "content": "    public class Solution {\\n\\tpublic int removeElement(int[] nums, int val) {\\n\\t\\tint i = 0;\\n\\t\\tfor (int n : nums)\\n\\t\\t\\tif (n != val)\\n\\t\\t\\t\\tnums[i++] = n;\\n\\t\\treturn i;\\n\\t} }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n\\tpublic int removeElement(int[] nums, int val) {\\n\\t\\tint i = 0;\\n\\t\\tfor (int n : nums)\\n\\t\\t\\tif (n != val)\\n\\t\\t\\t\\tnums[i++] = n;\\n\\t\\treturn i;\\n\\t}",
                "codeTag": "Java"
            },
            {
                "id": 1656827,
                "title": "solution-swift-remove-element-test-cases",
                "content": "```swift\\nclass Solution {\\n    func removeElement(_ nums: inout [Int], _ val: Int) -> Int {\\n        nums = nums.filter { $0 != val }\\n        return nums.count\\n    }\\n}\\n```\\n\\n---\\n\\n<details>\\n<summary>\\n<img src=\"https://git.io/JDblm\" height=\"24\">\\n<b>TEST CASES</b>\\n</summary>\\n\\n<pre>\\n<b>Result:</b> Executed 2 tests, with 0 failures (0 unexpected) in 0.005 (0.007) seconds\\n</pre>\\n\\n```swift\\nimport XCTest\\n\\nclass Tests: XCTestCase {\\n    \\n    private let solution = Solution()\\n    \\n\\t/// Your function should return k = 2, with the first two elements of nums being 2.\\n    /// It does not matter what you leave beyond the returned k (hence they are underscores).\\n    func test0() {\\n        var array = [3,2,2,3]\\n        solution.removeElement(&array, 3)\\n        XCTAssertEqual(array, [2,2])\\n    }\\n    \\n    /// Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.\\n    /// Note that the five elements can be returned in any order.\\n    /// It does not matter what you leave beyond the returned k (hence they are underscores).\\n    func test1() {\\n        var array = [0,1,2,2,3,0,4,2]\\n        solution.removeElement(&array, 2)\\n        XCTAssertEqual(array, [0,1,3,0,4])\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```\\n</details>",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```swift\\nclass Solution {\\n    func removeElement(_ nums: inout [Int], _ val: Int) -> Int {\\n        nums = nums.filter { $0 != val }\\n        return nums.count\\n    }\\n}\\n```\n```swift\\nimport XCTest\\n\\nclass Tests: XCTestCase {\\n    \\n    private let solution = Solution()\\n    \\n\\t/// Your function should return k = 2, with the first two elements of nums being 2.\\n    /// It does not matter what you leave beyond the returned k (hence they are underscores).\\n    func test0() {\\n        var array = [3,2,2,3]\\n        solution.removeElement(&array, 3)\\n        XCTAssertEqual(array, [2,2])\\n    }\\n    \\n    /// Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.\\n    /// Note that the five elements can be returned in any order.\\n    /// It does not matter what you leave beyond the returned k (hence they are underscores).\\n    func test1() {\\n        var array = [0,1,2,2,3,0,4,2]\\n        solution.removeElement(&array, 2)\\n        XCTAssertEqual(array, [0,1,3,0,4])\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1327006,
                "title": "c-simple-and-clean-4-line-solution-0ms-faster-than-100",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int ptr = 0;\\n        \\n        for (int i = 0; i < nums.size(); i++)\\n            if (nums[i] != val) nums[ptr++] = nums[i];\\n        \\n        return ptr;\\n    }\\n};\\n```\\n**Like it? please upvote!**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int ptr = 0;\\n        \\n        for (int i = 0; i < nums.size(); i++)\\n            if (nums[i] != val) nums[ptr++] = nums[i];\\n        \\n        return ptr;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 363153,
                "title": "python-simple-solution",
                "content": "```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        while val in nums:\\n            nums.remove(val)\\n        return len(nums)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        while val in nums:\\n            nums.remove(val)\\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12757,
                "title": "6-lines-of-c-solution",
                "content": "    int removeElement(int a[], int n, int elem) {\\n            int count = 0;\\n            for (int i = 0; i < n; ++i) {\\n                if (a[i] != elem) {\\n                    a[count++] = a[i];\\n                }\\n            }\\n            return count;\\n        }",
                "solutionTags": [],
                "code": "    int removeElement(int a[], int n, int elem) {\\n            int count = 0;\\n            for (int i = 0; i < n; ++i) {\\n                if (a[i] != elem) {\\n                    a[count++] = a[i];\\n                }\\n            }\\n            return count;\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 3300181,
                "title": "clear-c-solution-let-s-find-best-solution-together",
                "content": "**`If you have any thought feel free leave a comment below...`** \\n```\\nint removeElement(int *nums, int numsSize, int val) {\\n    int count = 0;\\n\\n    for (int i = 0; i < numsSize; i++)\\n        if (nums[i] == val) \\n            count++;\\n        else \\n            nums[i - count] = nums[i];\\n    return (numsSize - count);\\n}\\n\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint removeElement(int *nums, int numsSize, int val) {\\n    int count = 0;\\n\\n    for (int i = 0; i < numsSize; i++)\\n        if (nums[i] == val) \\n            count++;\\n        else \\n            nums[i - count] = nums[i];\\n    return (numsSize - count);\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2664999,
                "title": "python-easy-solution-in-7-lines-faster-than-92-35-users",
                "content": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k=0\\n        for i in range(len(nums)):\\n            if nums[i]==val:\\n                continue\\n            nums[k]=nums[i]\\n            k+=1\\n        return k\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k=0\\n        for i in range(len(nums)):\\n            if nums[i]==val:\\n                continue\\n            nums[k]=nums[i]\\n            k+=1\\n        return k\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1902470,
                "title": "100-fastest-swift-solution-time-o-n-space-o-1",
                "content": "```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(n), where n is the length of the nums.\\n    //   - space: O(1), only constant space is used.\\n\\n    func removeElement(_ nums: inout [Int], _ val: Int) -> Int {\\n        guard !nums.isEmpty else { return 0 }\\n        var i = 0\\n\\n        for num in nums {\\n            guard num != val else { continue }\\n            nums[i] = num\\n            i += 1\\n        }\\n\\n        return i\\n    }\\n\\n}\\n```\\n\\nLet me know in comments if you have any doubts. I will be happy to answer.\\n\\nPlease upvote if you found the solution useful.",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(n), where n is the length of the nums.\\n    //   - space: O(1), only constant space is used.\\n\\n    func removeElement(_ nums: inout [Int], _ val: Int) -> Int {\\n        guard !nums.isEmpty else { return 0 }\\n        var i = 0\\n\\n        for num in nums {\\n            guard num != val else { continue }\\n            nums[i] = num\\n            i += 1\\n        }\\n\\n        return i\\n    }\\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1753281,
                "title": "c-easy-approach",
                "content": "Kindly **upvote** if you find it helpful **: )**\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        for(int i = 0; i < nums.size(); i++){\\n            if(nums[i]==val){\\n                c++;\\n                nums[i]=51; // as constraints mention: 0 <= nums[i] <= 50 \\n            }\\n        }\\n        sort(nums.begin(), nums.end()); // sorting array\\n        nums.erase(nums.end()-c, nums.end()); // erasing 51 values\\n        return nums.size();\\n    }\\n};\\n```\\nLet me know in the comments if you have any different approach...",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        for(int i = 0; i < nums.size(); i++){\\n            if(nums[i]==val){\\n                c++;\\n                nums[i]=51; // as constraints mention: 0 <= nums[i] <= 50 \\n            }\\n        }\\n        sort(nums.begin(), nums.end()); // sorting array\\n        nums.erase(nums.end()-c, nums.end()); // erasing 51 values\\n        return nums.size();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2762818,
                "title": "python-no-built-ins-pure-logic",
                "content": "```\\ndef removeElement(self, nums, val):\\n    i = 0\\n    for x in nums:\\n        if x != val:\\n            nums[i] = x\\n            i += 1\\n    return i\\n```",
                "solutionTags": [],
                "code": "```\\ndef removeElement(self, nums, val):\\n    i = 0\\n    for x in nums:\\n        if x != val:\\n            nums[i] = x\\n            i += 1\\n    return i\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 222376,
                "title": "javascript",
                "content": "```\\nvar removeElement = function(nums, val) {\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] === val) {\\n      nums.splice(i, 1);\\n      i--;\\n    }\\n  }\\n  return nums.length;\\n};\\n```\\n\\n```\\nvar removeElement = function(nums, val) {\\n  let i = 0;\\n  for (let j = 0; j < nums.length; j++) {\\n    if (nums[j] !== val) {\\n      nums[i] = nums[j];\\n      i++;\\n    }\\n  }\\n  return i;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar removeElement = function(nums, val) {\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] === val) {\\n      nums.splice(i, 1);\\n      i--;\\n    }\\n  }\\n  return nums.length;\\n};\\n```\n```\\nvar removeElement = function(nums, val) {\\n  let i = 0;\\n  for (let j = 0; j < nums.length; j++) {\\n    if (nums[j] !== val) {\\n      nums[i] = nums[j];\\n      i++;\\n    }\\n  }\\n  return i;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2602507,
                "title": "python3-fastest-and-easiest-faster-than-95-solutions",
                "content": "```\\nwhile val in nums :\\n\\t        nums.remove(val)\\n```\\nDo upvote if its helpful,Thanks.",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nwhile val in nums :\\n\\t        nums.remove(val)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1283692,
                "title": "simple-python-o-n-solution",
                "content": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        \\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        \\n        return k\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        \\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        \\n        return k\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12680,
                "title": "a-simple-c-solution",
                "content": "    int removeElement(vector<int>& nums, int val) {\\n        int idx=0;\\n        for(int i=0;i<nums.size();i++) {\\n            if(nums[i]!=val) {\\n                nums[idx] = nums[i];\\n                idx ++;\\n            }\\n        }\\n        return idx;\\n    }",
                "solutionTags": [
                    "C++"
                ],
                "code": "    int removeElement(vector<int>& nums, int val) {\\n        int idx=0;\\n        for(int i=0;i<nums.size();i++) {\\n            if(nums[i]!=val) {\\n                nums[idx] = nums[i];\\n                idx ++;\\n            }\\n        }\\n        return idx;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3250750,
                "title": "java-script-3-line-solution-beats-99",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    while(nums.indexOf(val) !== -1) {\\n        nums.splice(nums.indexOf(val), 1)\\n    }\\n    return nums.length;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    while(nums.indexOf(val) !== -1) {\\n        nums.splice(nums.indexOf(val), 1)\\n    }\\n    return nums.length;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1389895,
                "title": "go-simple-solution",
                "content": "iterate through nums keeping a separate pointer to our insert location.  If the value in nums isn\\'t the val we\\'re removing, then insert it at the insert location and increment the insert location.  Since the insert location is always the next available spot, it is also keeping the length of the returned array.\\n```\\nfunc removeElement(nums []int, val int) int {\\n    i := 0\\n    for _, v := range nums {\\n        if v != val {\\n            nums[i] = v\\n            i++\\n        }\\n    }\\n    return i\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc removeElement(nums []int, val int) int {\\n    i := 0\\n    for _, v := range nums {\\n        if v != val {\\n            nums[i] = v\\n            i++\\n        }\\n    }\\n    return i\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4001449,
                "title": "java-runtime-0ms-beats-100-00",
                "content": "# Intuition\\nThe problem at hand requires the removal of all instances of a specified value, `val`, from an integer array `nums`. My initial thoughts gravitate towards a straightforward approach that effectively eliminates the target value while maintaining the relative order of the remaining elements.\\n\\n# Approach\\nThe chosen approach relies on a two-pointer technique to efficiently handle the task of removing elements equal to `val` from the array `nums`. The two pointers, `i` and `newLength`, serve the following purposes:\\n- `i` traverses through the array to identify elements equal to `val`.\\n- `newLength` keeps track of the length of the modified array, excluding elements equal to `val`.\\n\\nThe algorithm unfolds as follows:\\n1. Initialize `newLength` to 0, indicating the initial length of the modified array.\\n2. Iterate through the `nums` array with the pointer `i`:\\n   - If `nums[i]` is not equal to the target value `val`, it implies a non-target element:\\n     - Assign `nums[i]` to `nums[newLength]`, effectively overwriting any potential `val` occurrence with the non-target value.\\n     - Increment `newLength` to reflect the modified array\\'s length.\\n3. After the iteration concludes, `newLength` holds the length of the modified array with the target values removed.\\n\\nThe algorithm excels at efficiently removing all instances of the specified value while preserving the original relative order of the remaining elements.\\n\\n# Complexity\\n- Time complexity: O(n)\\n  The algorithm traverses through the `nums` array once, performing constant-time operations at each step.\\n\\n- Space complexity: O(1)\\n  The algorithm utilizes a fixed amount of additional memory space for variables, ensuring a constant space complexity.\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        \\n        int newLength = 0 ; \\n\\n         for (int i = 0; i < nums.length; i++) {\\n           \\n            if (nums[i] != val) {\\n                nums[newLength] = nums[i];\\n                newLength++;\\n            }\\n        }\\n\\n        return newLength;\\n        \\n    }\\n}\\n```\\n\\n![c0504eaf-5fb8-4a1d-a769-833262d1b86e_1674433591.3836212.webp](https://assets.leetcode.com/users/images/6b19a218-ec92-4be8-8cd9-ab9268421080_1693835202.9284575.webp)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        \\n        int newLength = 0 ; \\n\\n         for (int i = 0; i < nums.length; i++) {\\n           \\n            if (nums[i] != val) {\\n                nums[newLength] = nums[i];\\n                newLength++;\\n            }\\n        }\\n\\n        return newLength;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2682609,
                "title": "faster-than-100-memory-usage-less-than-94-submissions",
                "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            (nums[i]==val)?count++:nums[i-count]=nums[i];\\n        }\\n        return nums.size()-count;\\n    }\\n};\\n**UPVOTE IF U FOUND IT HELPFUL**",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            (nums[i]==val)?count++:nums[i-count]=nums[i];\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1424545,
                "title": "easiest-one-liner-c-solution",
                "content": "Simple STL solution. Sometimes, one-liners also need to be appreciated....! Please upvote, if you learned something from it.\\n\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {                \\n        nums.erase(remove(nums.begin(), nums.end(), val), nums.end());        \\n        //This has to be done to remove all the occurences.\\n        return nums.size();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {                \\n        nums.erase(remove(nums.begin(), nums.end(), val), nums.end());        \\n        //This has to be done to remove all the occurences.\\n        return nums.size();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 947483,
                "title": "python-simple-solutions",
                "content": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        for n in nums:\\n            if n!=val:\\n                nums[i]=n\\n                i+=1\\n        return i\\n```\\n\\n```\\n    \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n        return len(nums)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        for n in nums:\\n            if n!=val:\\n                nums[i]=n\\n                i+=1\\n        return i\\n```\n```\\n    \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 500524,
                "title": "rust-0ms",
                "content": "```\\nimpl Solution {\\n    pub fn remove_element(nums: &mut Vec<i32>, val: i32) -> i32 {\\n        nums.retain(|&x| x != val);\\n        return nums.len() as i32;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn remove_element(nums: &mut Vec<i32>, val: i32) -> i32 {\\n        nums.retain(|&x| x != val);\\n        return nums.len() as i32;\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1974530,
                "title": "super-easy-c-o-n",
                "content": "***DO UPVOTE, IF IT HELPS !!!***\\n\\n\\tint removeElement(vector<int>& nums, int val) {\\n        \\n        int j=0;\\n        \\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                nums[j]=nums[i];\\n                j++;\\n            }\\n        }\\n        return j;\\n    }",
                "solutionTags": [
                    "C",
                    "Array"
                ],
                "code": "***DO UPVOTE, IF IT HELPS !!!***\\n\\n\\tint removeElement(vector<int>& nums, int val) {\\n        \\n        int j=0;\\n        \\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                nums[j]=nums[i];\\n                j++;\\n            }\\n        }\\n        return j;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 12677,
                "title": "really-concise-one-pass-java-code",
                "content": "    public int removeElement(int[] A, int elem) {\\n        int next = 0;\\n        for(int i = 0; i < A.length; i++) {\\n            if(A[i] != elem) {\\n                A[next++] = A[i];\\n            }\\n        }\\n        return next;\\n    }\\n\\nI use \"next\" to track the position to put the next \"non-elem\" integer.",
                "solutionTags": [],
                "code": "    public int removeElement(int[] A, int elem) {\\n        int next = 0;\\n        for(int i = 0; i < A.length; i++) {\\n            if(A[i] != elem) {\\n                A[next++] = A[i];\\n            }\\n        }\\n        return next;\\n    }\\n\\nI use \"next\" to track the position to put the next \"non-elem\" integer.",
                "codeTag": "Unknown"
            },
            {
                "id": 1890581,
                "title": "100-fastest-typescript-solution",
                "content": "```\\nfunction removeElement(nums: number[], val: number): number {\\n  for (let i = 0; i < nums.length; i++) {\\n       if (nums[i] === val) { nums.splice(i, 1); i-- }\\n  }\\n\\n  return nums.length\\n}\\n```\\n\\nLet me know in comments if you have any doubts. I will be happy to answer.\\n\\nPlease upvote if you found the solution useful.",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nfunction removeElement(nums: number[], val: number): number {\\n  for (let i = 0; i < nums.length; i++) {\\n       if (nums[i] === val) { nums.splice(i, 1); i-- }\\n  }\\n\\n  return nums.length\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1529351,
                "title": "java-tc-o-n-sc-o-1-optimized-two-pointers-solution-followup",
                "content": "**Using Two Pointers**\\n\\n```java\\n/**\\n * Using Two Pointers. Output array maintains the order of the input array.\\n *\\n * Time Complexity: O(N)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Length of input array.\\n */\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        if (nums == null) {\\n            throw new IllegalArgumentException(\"Input array is null\");\\n        }\\n\\n        int len = nums.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n\\n        int insertPos = -1;\\n        for (int n : nums) {\\n            if (n != val) {\\n                nums[++insertPos] = n;\\n            }\\n        }\\n        return insertPos + 1;\\n    }\\n}\\n```\\n\\n---\\n**Follow Up: When elements to remove are rare**\\n\\n```java\\n/**\\n * Using Two Pointers - when elements to remove are rare.\\n *\\n * Here whenever we find val, we replace it with num at len-1 and reduce the\\n * length of the array by one. Total number of assignment operations required\\n * are less.\\n *\\n * Time Complexity: O(N)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Length of input array.\\n */\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        if (nums == null) {\\n            throw new IllegalArgumentException(\"Input array is null\");\\n        }\\n\\n        int len = nums.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n\\n        int i = 0;\\n        while (i < len) {\\n            if (nums[i] == val) {\\n                nums[i] = nums[len - 1];\\n                // Reduce Array length by one\\n                len--;\\n            } else {\\n                i++;\\n            }\\n        }\\n        return len;\\n    }\\n}\\n```\\n\\n---\\n\\nSolutions to other Remove Element questions on LeetCode:\\n- [26. Remove Duplicates from Sorted Array](https://leetcode.com/problems/remove-duplicates-from-sorted-array/discuss/1529341/Java-or-TC:-O(N)-or-SC:-O(1)-or-Optimized-Two-Pointers-solution)\\n- [80. Remove Duplicates from Sorted Array II + Follow Up](https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/discuss/1529357/Java-or-TC:-O(N)-or-SC:-O(1)-or-Optimized-Two-Pointers-solution-and-FollowUp)\\n",
                "solutionTags": [
                    "Java",
                    "Two Pointers"
                ],
                "code": "```java\\n/**\\n * Using Two Pointers. Output array maintains the order of the input array.\\n *\\n * Time Complexity: O(N)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Length of input array.\\n */\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        if (nums == null) {\\n            throw new IllegalArgumentException(\"Input array is null\");\\n        }\\n\\n        int len = nums.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n\\n        int insertPos = -1;\\n        for (int n : nums) {\\n            if (n != val) {\\n                nums[++insertPos] = n;\\n            }\\n        }\\n        return insertPos + 1;\\n    }\\n}\\n```\n```java\\n/**\\n * Using Two Pointers - when elements to remove are rare.\\n *\\n * Here whenever we find val, we replace it with num at len-1 and reduce the\\n * length of the array by one. Total number of assignment operations required\\n * are less.\\n *\\n * Time Complexity: O(N)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Length of input array.\\n */\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        if (nums == null) {\\n            throw new IllegalArgumentException(\"Input array is null\");\\n        }\\n\\n        int len = nums.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n\\n        int i = 0;\\n        while (i < len) {\\n            if (nums[i] == val) {\\n                nums[i] = nums[len - 1];\\n                // Reduce Array length by one\\n                len--;\\n            } else {\\n                i++;\\n            }\\n        }\\n        return len;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12578,
                "title": "7-lines-java-solution",
                "content": "    public class Solution {\\n        public int removeElement(int[] nums, int val) {\\n            int idx = 0;\\n            for (int i = 0; i < nums.length; i++){\\n                if (nums[i] != val){\\n                    nums[idx++] = nums[i]; \\n                }\\n            }\\n            return idx;\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public int removeElement(int[] nums, int val) {\\n            int idx = 0;\\n            for (int i = 0; i < nums.length; i++){\\n                if (nums[i] != val){\\n                    nums[idx++] = nums[i]; \\n                }",
                "codeTag": "Java"
            },
            {
                "id": 12582,
                "title": "share-my-3-lines-c-code",
                "content": "        int removeElement(int A[], int n, int elem) {\\n                int i=0;\\n                while(i<n)A[i]==elem?A[i]=A[--n]:i++;\\n                return n;\\n        }",
                "solutionTags": [],
                "code": "        int removeElement(int A[], int n, int elem) {\\n                int i=0;\\n                while(i<n)A[i]==elem?A[i]=A[--n]:i++;\\n                return n;\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 2674727,
                "title": "c-two-pointer-approach-beginner-friendly-faster-then-100",
                "content": "```\\n\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n            int n = nums.size();\\n            int j = 0;\\n            for(int i = 0; i<n; i++){\\n                    if(nums[i]!= val){\\n                        nums[j] = nums[i];\\n                            j++;\\n                    }\\n                   \\n            }\\n            return j;\\n        \\n    }\\n1. };``",
                "solutionTags": [
                    "Array"
                ],
                "code": "```\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1041826,
                "title": "kotlin-simple",
                "content": "```\\n    fun removeElement(nums: IntArray, num: Int): Int {\\n        var counter = 0\\n        nums.forEach { if (it != num) nums[counter++] = it }\\n\\n        return counter\\n    }\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\n    fun removeElement(nums: IntArray, num: Int): Int {\\n        var counter = 0\\n        nums.forEach { if (it != num) nums[counter++] = it }\\n\\n        return counter\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 328306,
                "title": "javascript-36ms-100-97-34",
                "content": "var removeElement = function(nums, val) {\\n    while(nums.indexOf(val,0) >= 0) {\\n        nums.splice(nums.indexOf(val,0), 1);\\n    }\\n    return nums.length;\\n};",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "var removeElement = function(nums, val) {\\n    while(nums.indexOf(val,0) >= 0) {\\n        nums.splice(nums.indexOf(val,0), 1);\\n    }\\n    return nums.length;\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 12377,
                "title": "short-python-solution",
                "content": "    def removeElement(self, nums, val):\\n        try:\\n            while True:\\n                nums.remove(val)\\n        except:\\n            return len(nums)",
                "solutionTags": [],
                "code": "    def removeElement(self, nums, val):\\n        try:\\n            while True:\\n                nums.remove(val)\\n        except:\\n            return len(nums)",
                "codeTag": "Python3"
            },
            {
                "id": 3691033,
                "title": "3-lines-of-optimized-code-detailed-explanation",
                "content": "# Intuition\\nThe intuition behind this approach is to iterate through the array and keep track of two pointers: j and n. The pointer j represents the index of the current element we want to keep in the modified array, and the pointer n iterates through the original array elements.\\n\\n# Approach\\nThe approach involves iterating through each element of the array nums. If the current element n is not equal to the target value val, we update the element at index j in the array to be the current element n, and then increment j by 1. By doing this, we effectively remove any occurrences of val from the array and compact the elements towards the beginning.\\n\\n# Complexity\\n- Time complexity: The time complexity of this approach is O(n), where n is the length of the input array nums. We need to iterate through each element of the array once.\\n- Space complexity: The space complexity is O(1) since we are modifying the input array in place and not using any additional space that scales with the input size.\\n\\n# Code\\n```\\nfunction removeElement(nums: number[], val: number): number {\\n    let j = 0;\\n    for( let n of nums )if( n !== val ) nums[j++] = n\\n    return j\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript",
                    "Array"
                ],
                "code": "```\\nfunction removeElement(nums: number[], val: number): number {\\n    let j = 0;\\n    for( let n of nums )if( n !== val ) nums[j++] = n\\n    return j\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3516083,
                "title": "java-best-intuition-o-n-time-and-space-complexity",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nInitially question is little confusing. But idea is simple remove the element asked in variable `val` and place another varible suppose `k` which is not equal to `val` i.e. `k != val` in it\\'s position and return the count of k in array.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nOnce you understand the question, approach become simple \\nJust take any variable to count all `k` in array. Then one by iterate through each element of array and skip the element equal to `val` and place the element `!= val` in it\\'s place and increase the count. Finally return the count.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int l = nums.length;\\n        for(int a=0;a<l;a++){\\n            if(nums[a]==val){\\n                continue;\\n            }\\n            nums[i] = nums[a];\\n            i++;\\n        }\\n\\n        return i;\\n    }\\n}\\n```\\n# \\n\\n---\\n\\nPlease do upvote, It keeps me motivated to upload many problem optimal code solutions. Do comment if you need solution in any other language.\\nThank you...**",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int l = nums.length;\\n        for(int a=0;a<l;a++){\\n            if(nums[a]==val){\\n                continue;\\n            }\\n            nums[i] = nums[a];\\n            i++;\\n        }\\n\\n        return i;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3410533,
                "title": "best-solution-in-java-runtime-0-ms-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n          int k = 0;\\n        for (int i = 0; i < nums.length ; i++) {\\n            if (nums[i] != val) {\\n                nums[k] = nums[i];\\n                k++;\\n            }\\n        }\\n\\n        return k;\\n    }\\n}\\n```\\n\\n\\n![image.png](https://assets.leetcode.com/users/images/21bed395-f430-44c2-a88d-9a5f0f1345ee_1681339826.985599.png)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n          int k = 0;\\n        for (int i = 0; i < nums.length ; i++) {\\n            if (nums[i] != val) {\\n                nums[k] = nums[i];\\n                k++;\\n            }\\n        }\\n\\n        return k;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3226460,
                "title": "beginner-friendly-0ms-solution-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nA simple, two pointer method approach will do the need. You can take a look at this problem before solving this for better understanding,  [Move Zeros](https://leetcode.com/problems/move-zeroes/). \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nStep 1: Declare a second variable, that will help to shift value(val) to the end. \\n\\nStep 2: Just after shifting the values to the end, you can compare return the size of array that excludes shifted value.\\n\\nStep 3: Upvote this solution.\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) \\n    {\\n        int count = 0, res = 0;\\n        int n = nums.size();\\n        for(int i = 0; i<n; i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                swap(nums[i],nums[res]);\\n                res++;\\n            }\\n            else if(nums[i]==val)\\n            count++;\\n        }\\n        return n-count;\\n\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) \\n    {\\n        int count = 0, res = 0;\\n        int n = nums.size();\\n        for(int i = 0; i<n; i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                swap(nums[i],nums[res]);\\n                res++;\\n            }\\n            else if(nums[i]==val)\\n            count++;\\n        }\\n        return n-count;\\n\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2750567,
                "title": "simple-java-solution",
                "content": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            if (nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n        return count;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            if (nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1646997,
                "title": "100-faster-c-solution-beat-100-solutions",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j = 0;\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i]!=val){\\n                nums[j]=nums[i];\\n                j++;\\n            }\\n        }\\n        return j;\\n    }\\n};\\n```\\nPlease Upvote If you find this solution helpful",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j = 0;\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i]!=val){\\n                nums[j]=nums[i];\\n                j++;\\n            }\\n        }\\n        return j;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1326109,
                "title": "c-solution",
                "content": "```csharp\\npublic int RemoveElement(int[] nums, int val)\\n{\\n\\tint res = 0;\\n\\n\\tfor (int i = 0; i < nums.Length; i++)\\n\\t{\\n\\t\\tif (nums[i] != val)\\n\\t\\t{\\n\\t\\t\\tnums[res] = nums[i];\\n\\t\\t\\tres++;\\n\\t\\t}\\n\\t}\\n\\n\\treturn res;\\n}\\n```\\n\\nAdvice from **Malurth**, shorter writing.\\n\\n```csharp\\npublic int RemoveElement(int[] nums, int val)\\n{\\n    int res = 0;\\n\\n    for (int i = 0; i < nums.Length; i++)\\n        if (nums[i] != val)\\n            nums[res++] = nums[i];\\n\\n    return res;\\n}\\n```\\n",
                "solutionTags": [
                    "C#"
                ],
                "code": "```csharp\\npublic int RemoveElement(int[] nums, int val)\\n{\\n\\tint res = 0;\\n\\n\\tfor (int i = 0; i < nums.Length; i++)\\n\\t{\\n\\t\\tif (nums[i] != val)\\n\\t\\t{\\n\\t\\t\\tnums[res] = nums[i];\\n\\t\\t\\tres++;\\n\\t\\t}\\n\\t}\\n\\n\\treturn res;\\n}\\n```\n```csharp\\npublic int RemoveElement(int[] nums, int val)\\n{\\n    int res = 0;\\n\\n    for (int i = 0; i < nums.Length; i++)\\n        if (nums[i] != val)\\n            nums[res++] = nums[i];\\n\\n    return res;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2976242,
                "title": "o-n-time-very-simple-java-sol",
                "content": "# Intuition\\nWe are given an array and need to remove given value fro the array. After eliminating every occurrence of the given value, we must return the length of the items that remain.<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nWe will take a variable count, it will count the elements except given value. We will iterate through array and check if element match with given value and add the next element at that place which is not equal to value.<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            if (nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            if (nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2497134,
                "title": "easy-c-solution-simple-to-understand",
                "content": "\\tclass Solution {\\n\\tpublic:\\n\\t\\tint removeElement(vector<int>& nums, int val) {\\n\\n\\t\\t\\tint idx = 0;\\n\\n\\t\\t\\tfor(int i=0 ; i<nums.size() ; i++){\\n\\t\\t\\t\\tif(nums[i] != val){\\n\\t\\t\\t\\t\\tnums[idx++] = nums[i];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn idx;\\n\\t\\t}\\n\\t}\\nI hope that you\\'ve found the solution useful.\\nIn that case, please do upvote. Happy Coding :)",
                "solutionTags": [
                    "C++",
                    "C",
                    "Array",
                    "Two Pointers"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tint removeElement(vector<int>& nums, int val) {\\n\\n\\t\\t\\tint idx = 0;\\n\\n\\t\\t\\tfor(int i=0 ; i<nums.size() ; i++){\\n\\t\\t\\t\\tif(nums[i] != val){\\n\\t\\t\\t\\t\\tnums[idx++] = nums[i];\\n\\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 1507118,
                "title": "c-faster-than-100-00",
                "content": "Runtime: 128 ms, faster than 100.00% of C# online submissions for Remove Element.\\nMemory Usage: 40.7 MB, less than 6.17% of C# online submissions for Remove Element.\\n\\n```\\n    public int RemoveElement(int[] nums, int val) {\\n        int j = 0;\\n        \\n        for(int i = 0; i< nums.Length; i++)\\n        {\\n            if(nums[i] != val)\\n            {\\n                nums[j] = nums[i];\\n                j++;\\n            }\\n        }\\n                \\n        return j;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\n    public int RemoveElement(int[] nums, int val) {\\n        int j = 0;\\n        \\n        for(int i = 0; i< nums.Length; i++)\\n        {\\n            if(nums[i] != val)\\n            {\\n                nums[j] = nums[i];\\n                j++;\\n            }\\n        }\\n                \\n        return j;\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3410532,
                "title": "best-solution-in-java-runtime-0-ms-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n          int k = 0;\\n        for (int i = 0; i < nums.length ; i++) {\\n            if (nums[i] != val) {\\n                nums[k++] = nums[i];\\n            }\\n        }\\n\\n        return k;\\n    }\\n}\\n```\\n\\n\\n![image.png](https://assets.leetcode.com/users/images/21bed395-f430-44c2-a88d-9a5f0f1345ee_1681339826.985599.png)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n          int k = 0;\\n        for (int i = 0; i < nums.length ; i++) {\\n            if (nums[i] != val) {\\n                nums[k++] = nums[i];\\n            }\\n        }\\n\\n        return k;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2765338,
                "title": "one-liner",
                "content": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums: nums.remove(val)\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums: nums.remove(val)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2312664,
                "title": "100-java-c-c-python-js-python3-fully-explained-with-comments-very-very-easy-code",
                "content": "# **Java Solution:**\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        // Initialize a variable c which will count the number of elements except val...\\n        int c = 0;\\n        // Loop through all the elements of the array from left to right...\\n        for(int i = 0; i < nums.length; i++) {\\n            // If the element is not val...\\n            if(nums[i] != val) {\\n                nums[c++] = nums[i];     // Add that element to the place of c..\\n            }        \\n        }\\n        return c;    // Return the number...\\n    }\\n}\\n```\\n\\n# **C++ Solution:**\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        // Initialize a variable c which will count the number of elements except val...\\n        int c = 0;\\n        // Loop through all the elements of the array from left to right...\\n        for(int i = 0; i < nums.size(); i++) {\\n            // If the element is not val...\\n            if(nums[i] != val) {\\n                nums[c++] = nums[i];     // Add that element to the place of c..\\n            }        \\n        }\\n        return c;    // Return the number...\\n    }\\n};\\n```\\n\\n# **C Language:**\\n```\\nint removeElement(int* nums, int numsSize, int val){\\n    // Initialize a variable c which will count the number of elements except val...\\n    int c = 0;\\n    // Loop through all the elements of the array from left to right...\\n    for(int i = 0; i < numsSize; i++) {\\n        // If the element is not val...\\n        if(nums[i] != val) {\\n            nums[c++] = nums[i];     // Add that element to the place of c..\\n        }        \\n    }\\n    return c;    // Return the number...\\n}\\n```\\n\\n# **Python Solution:**\\n```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        # Initialize a variable c which will count the number of elements except val...\\n        c = 0\\n        # Loop through all the elements of the array from left to right...\\n        for i in range(len(nums)):\\n            # If the element is not val...\\n            if(nums[i] != val):\\n                # Add that element to the place of c..\\n                nums[c] = nums[i]\\n                c += 1\\n        return c    # Return the number...\\n```\\n\\n# **JavaScript Solution:**\\n```\\nvar removeElement = function(nums, val) {\\n    // Initialize a variable c which will count the number of elements except val...\\n    let c = 0;\\n    // Loop through all the elements of the array from left to right...\\n    for(let i = 0; i < nums.length; i++) {\\n        // If the element is not val...\\n        if(nums[i] != val) {\\n            nums[c++] = nums[i];     // Add that element to the place of c..\\n        }        \\n    }\\n    return c;    // Return the number...\\n};\\n```\\n\\n# **Python3 Solution:**\\n```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        # Initialize a variable c which will count the number of elements except val...\\n        c = 0\\n        # Loop through all the elements of the array from left to right...\\n        for i in range(len(nums)):\\n            # If the element is not val...\\n            if(nums[i] != val):\\n                # Add that element to the place of c..\\n                nums[c] = nums[i]\\n                c += 1\\n        return c    # Return the number...\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        // Initialize a variable c which will count the number of elements except val...\\n        int c = 0;\\n        // Loop through all the elements of the array from left to right...\\n        for(int i = 0; i < nums.length; i++) {\\n            // If the element is not val...\\n            if(nums[i] != val) {\\n                nums[c++] = nums[i];     // Add that element to the place of c..\\n            }        \\n        }\\n        return c;    // Return the number...\\n    }\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        // Initialize a variable c which will count the number of elements except val...\\n        int c = 0;\\n        // Loop through all the elements of the array from left to right...\\n        for(int i = 0; i < nums.size(); i++) {\\n            // If the element is not val...\\n            if(nums[i] != val) {\\n                nums[c++] = nums[i];     // Add that element to the place of c..\\n            }        \\n        }\\n        return c;    // Return the number...\\n    }\\n};\\n```\n```\\nint removeElement(int* nums, int numsSize, int val){\\n    // Initialize a variable c which will count the number of elements except val...\\n    int c = 0;\\n    // Loop through all the elements of the array from left to right...\\n    for(int i = 0; i < numsSize; i++) {\\n        // If the element is not val...\\n        if(nums[i] != val) {\\n            nums[c++] = nums[i];     // Add that element to the place of c..\\n        }        \\n    }\\n    return c;    // Return the number...\\n}\\n```\n```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        # Initialize a variable c which will count the number of elements except val...\\n        c = 0\\n        # Loop through all the elements of the array from left to right...\\n        for i in range(len(nums)):\\n            # If the element is not val...\\n            if(nums[i] != val):\\n                # Add that element to the place of c..\\n                nums[c] = nums[i]\\n                c += 1\\n        return c    # Return the number...\\n```\n```\\nvar removeElement = function(nums, val) {\\n    // Initialize a variable c which will count the number of elements except val...\\n    let c = 0;\\n    // Loop through all the elements of the array from left to right...\\n    for(let i = 0; i < nums.length; i++) {\\n        // If the element is not val...\\n        if(nums[i] != val) {\\n            nums[c++] = nums[i];     // Add that element to the place of c..\\n        }        \\n    }\\n    return c;    // Return the number...\\n};\\n```\n```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        # Initialize a variable c which will count the number of elements except val...\\n        c = 0\\n        # Loop through all the elements of the array from left to right...\\n        for i in range(len(nums)):\\n            # If the element is not val...\\n            if(nums[i] != val):\\n                # Add that element to the place of c..\\n                nums[c] = nums[i]\\n                c += 1\\n        return c    # Return the number...\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12545,
                "title": "accepted-java-solution",
                "content": "    public int removeElement(int[] nums, int val) {\\n        int start = 0, end = nums.length-1;\\n        while(start<=end){\\n            if(nums[start] == val){\\n                if(nums[end] == val)\\n                    end--;    \\n                else{\\n                    nums[start] = nums[end];\\n                    start++; end --;\\n                }\\n            }else{\\n                start++;\\n            }\\n        }\\n        return start;\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "    public int removeElement(int[] nums, int val) {\\n        int start = 0, end = nums.length-1;\\n        while(start<=end){\\n            if(nums[start] == val){\\n                if(nums[end] == val)\\n                    end--;    \\n                else{\\n                    nums[start] = nums[end];\\n                    start++; end --;\\n                }\\n            }else{\\n                start++;\\n            }\\n        }\\n        return start;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 12790,
                "title": "my-o-n-solution",
                "content": "    class Solution {\\n    public:\\n        int removeElement(int A[], int n, int elem) {\\n            int index = 0;\\n            int tail = n - 1;\\n            \\n            while(index <= tail){\\n                if(A[index] == elem){\\n                    A[index] = A[tail];\\n                    tail -= 1;\\n                }else{\\n                    index++;\\n                }     \\n            }\\n            \\n            return tail + 1;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        int removeElement(int A[], int n, int elem) {\\n            int index = 0;\\n            int tail = n - 1;\\n            \\n            while(index <= tail){\\n                if(A[index] == elem){\\n                    A[index] = A[tail];\\n                    tail -= 1;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 3345323,
                "title": "python-two-pointer-beats-99",
                "content": "```\\nGiven : val = 2\\n1 2 2 2 5 2 5 \\ni           j\\nFirst Start from the far end \\n1 2 2 2 5 2 5 \\n  i         j\\nwhen nums[i] == val , nums[i] = nums[j]\\n1 2 2 2 5 2 5 \\n    i     j \\nif(num[j]) is also val then move it left till its not\\n1 5 5 2 2 2 5 \\n    i   j  \\nwhen i==j.. stop\\n1 5 5  2  2 2 5 \\n      i,j\\nyou see that i can still be val, \\nso we check before returning the answer  \\n\\n\\n\\n```\\n\\n\\n```\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n\\n        i,j=0,len(nums)-1;\\n        if(j==-1): return 0\\n        while(i<j):\\n            if(nums[i]==val):\\n                while(i<j and nums[j]==val): \\n                    j-=1\\n                nums[i]=nums[j];\\n                j-=1\\n                continue;\\n            i+=1\\n        return i+1 if nums[i]!=val else i\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nGiven : val = 2\\n1 2 2 2 5 2 5 \\ni           j\\nFirst Start from the far end \\n1 2 2 2 5 2 5 \\n  i         j\\nwhen nums[i] == val , nums[i] = nums[j]\\n1 2 2 2 5 2 5 \\n    i     j \\nif(num[j]) is also val then move it left till its not\\n1 5 5 2 2 2 5 \\n    i   j  \\nwhen i==j.. stop\\n1 5 5  2  2 2 5 \\n      i,j\\nyou see that i can still be val, \\nso we check before returning the answer  \\n\\n\\n\\n```\n```\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n\\n        i,j=0,len(nums)-1;\\n        if(j==-1): return 0\\n        while(i<j):\\n            if(nums[i]==val):\\n                while(i<j and nums[j]==val): \\n                    j-=1\\n                nums[i]=nums[j];\\n                j-=1\\n                continue;\\n            i+=1\\n        return i+1 if nums[i]!=val else i\\n\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3323084,
                "title": "c-best-100-solution-remove-with-in-place-o-1",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1) Find the first value in the sequence\\n2) Remember it index\\n3) Start with it index, insert all not equal vaue elements \\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nint removeElement(int* nums, int numsSize, int val){\\n    \\n    int appendIndex = 0;\\n    bool find = false;\\n    int k = 0;\\n\\n    for (int i = 0; i < numsSize; i++) {\\n        if (nums[i] == val && !find) {\\n            appendIndex = i;\\n            find = true;\\n        }\\n        if (nums[i] != val) {\\n            nums[appendIndex] = nums[i];\\n            appendIndex++;\\n            k++;\\n        }\\n    }\\n\\n    return k;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint removeElement(int* nums, int numsSize, int val){\\n    \\n    int appendIndex = 0;\\n    bool find = false;\\n    int k = 0;\\n\\n    for (int i = 0; i < numsSize; i++) {\\n        if (nums[i] == val && !find) {\\n            appendIndex = i;\\n            find = true;\\n        }\\n        if (nums[i] != val) {\\n            nums[appendIndex] = nums[i];\\n            appendIndex++;\\n            k++;\\n        }\\n    }\\n\\n    return k;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2716210,
                "title": "java-100-straight-forward",
                "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        \\n        int nextPosition = 0;\\n        \\n        for(int i=0; i<nums.length; i++) {\\n            if(nums[i] != val) {\\n                nums[nextPosition] = nums[i];\\n                nextPosition++;\\n            }\\n        }\\n        return nextPosition;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        \\n        int nextPosition = 0;\\n        \\n        for(int i=0; i<nums.length; i++) {\\n            if(nums[i] != val) {\\n                nums[nextPosition] = nums[i];\\n                nextPosition++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2323444,
                "title": "c-java-python3-javascript-solution-faster-than-90-100",
                "content": "\\nSee the code : **\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-from-sorted-array-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-from-sorted-array-solution-and-explanation-en/)\\u2B50**\\n\\n**Submissioon detail**\\n![image](https://assets.leetcode.com/users/images/6597b2b3-0b26-474c-bab7-3d32f2966e9e_1658281607.6561923.png)\\n![image](https://assets.leetcode.com/users/images/1051fb48-dc5e-41f1-9037-90054323227b_1658281610.4712868.png)\\n![image](https://assets.leetcode.com/users/images/b0f22bbe-8ebb-4602-8047-35d71f2d2185_1658281612.8284416.png)\\n![image](https://assets.leetcode.com/users/images/a217d9dc-486e-4993-a2c3-ad0756c1f1a3_1658392948.3180606.png)\\n\\n**\\uD83E\\uDDE1See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "JavaScript"
                ],
                "code": "\\nSee the code : **\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-from-sorted-array-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-from-sorted-array-solution-and-explanation-en/)\\u2B50**\\n\\n**Submissioon detail**\\n![image](https://assets.leetcode.com/users/images/6597b2b3-0b26-474c-bab7-3d32f2966e9e_1658281607.6561923.png)\\n![image](https://assets.leetcode.com/users/images/1051fb48-dc5e-41f1-9037-90054323227b_1658281610.4712868.png)\\n![image](https://assets.leetcode.com/users/images/b0f22bbe-8ebb-4602-8047-35d71f2d2185_1658281612.8284416.png)\\n![image](https://assets.leetcode.com/users/images/a217d9dc-486e-4993-a2c3-ad0756c1f1a3_1658392948.3180606.png)\\n\\n**\\uD83E\\uDDE1See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**",
                "codeTag": "Unknown"
            },
            {
                "id": 1787879,
                "title": "javascript-solution-using-filter",
                "content": "\\n```\\nvar removeElement = function(nums, val) {\\n    newNums = nums.filter(x=> x!=val)\\n    for(i = 0; i<newNums.length; i++){\\n        nums[i] = newNums[i]\\n    }\\n    \\n    return newNums.length\\n}\\n```\\nSince JavaScript is a pass by value language just saying: \\n\\n```\\nnums = nums.filter(x => x!=val)\\n```\\n\\nwill not work. But you can still change the references of specific members of objects in javascript and have these peresist outside the function. So this solution simply reassigns the first values of nums to the values of the filtered array.\\n\\nHope this helps anyone that tried to use the \"filter\" function in their solution.",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar removeElement = function(nums, val) {\\n    newNums = nums.filter(x=> x!=val)\\n    for(i = 0; i<newNums.length; i++){\\n        nums[i] = newNums[i]\\n    }\\n    \\n    return newNums.length\\n}\\n```\n```\\nnums = nums.filter(x => x!=val)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 150204,
                "title": "python-solution-beats-100",
                "content": "Python solution beats 100%.Since the modification is inplace, we only need to rearrange the elements `in place` .We keep two pointers `j` and `i` .So everytime we get an element which is not equal to the val, we just add it at the least possible index.\\n```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        j = 0\\n        \\n        for i in nums:\\n            if i !=val:\\n                nums[j] = i\\n                j+=1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        j = 0\\n        \\n        for i in nums:\\n            if i !=val:\\n                nums[j] = i\\n                j+=1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t```",
                "codeTag": "Java"
            },
            {
                "id": 12279,
                "title": "my-easy-python-solution",
                "content": "```\\nwhile val in nums:\\n    nums.remove(val)\\nreturn len(nums)\\n```",
                "solutionTags": [],
                "code": "```\\nwhile val in nums:\\n    nums.remove(val)\\nreturn len(nums)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12592,
                "title": "6lines-java-solution",
                "content": "    \\n    public class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int len = 0;\\n        for(int num: nums) {\\n            if(num != val) {\\n                nums[len] = num;\\n                len++;\\n            }\\n        }\\n        return len;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int len = 0;\\n        for(int num: nums) {\\n            if(num != val) {\\n                nums[len] = num;\\n                len++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 12621,
                "title": "0ms-and-clean-java-solution",
                "content": "    public class Solution {\\n        public int removeElement(int[] nums, int val) {\\n            int lastIndex = nums.length - 1;\\n            \\n            for (int i = 0; i < lastIndex + 1; i++)\\n            {\\n                if (nums[i] == val)\\n                {\\n                    nums[i] = nums[lastIndex];\\n                    lastIndex--;\\n                    i--;\\n                }\\n            }\\n            \\n            return lastIndex + 1;\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public int removeElement(int[] nums, int val) {\\n            int lastIndex = nums.length - 1;\\n            \\n            for (int i = 0; i < lastIndex + 1; i++)\\n            {\\n                if (nums[i] == val)\\n                {\\n                    nums[i] = nums[lastIndex];\\n                    lastIndex--;\\n                    i--;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 12644,
                "title": "4ms-c-solution",
                "content": "    int removeElement(vector<int>& nums, int val) {\\n        int i=0;\\n        \\n        for (int j=0; j<nums.size(); j++){\\n            \\n            if (nums[j]!=val) nums[i++]=nums[j];\\n        }\\n     return i;   \\n    }",
                "solutionTags": [],
                "code": "    int removeElement(vector<int>& nums, int val) {\\n        int i=0;\\n        \\n        for (int j=0; j<nums.size(); j++){\\n            \\n            if (nums[j]!=val) nums[i++]=nums[j];\\n        }\\n     return i;   \\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 12307,
                "title": "beat-90-fast-java-simple-solution-with-explanation",
                "content": "The basic idea is to use two pointers, one left and one right. Left pointer starts from the beginning and right pointer starts from ending. While right pointer is pointing to the target value, move it to left until it is not pointing the target value or meets the left pointer. If the left pointer is pointing to the target value, change the value to what the right pointer is pointing, and move right pointer one step to left. Then move left pointer to right. Repeat that process until the two pointers meet.\\n\\n    if (nums.length < 1)\\n\\t\\t\\treturn 0;\\n\\t\\tint left = 0, right = nums.length - 1;\\n\\n\\t\\twhile (left <= right) {\\n\\n\\t\\t\\twhile (right > left && nums[right] == val)\\n\\t\\t\\t\\tright--;\\n\\t\\t\\tif (nums[left] == val) {\\n\\t\\t\\t\\tnums[left] = nums[right];\\n\\t\\t\\t\\tright--;\\n\\t\\t\\t}\\n\\t\\t\\tleft++;\\n\\t\\t}\\n\\n\\t\\treturn right + 1;",
                "solutionTags": [],
                "code": "The basic idea is to use two pointers, one left and one right. Left pointer starts from the beginning and right pointer starts from ending. While right pointer is pointing to the target value, move it to left until it is not pointing the target value or meets the left pointer. If the left pointer is pointing to the target value, change the value to what the right pointer is pointing, and move right pointer one step to left. Then move left pointer to right. Repeat that process until the two pointers meet.\\n\\n    if (nums.length < 1)\\n\\t\\t\\treturn 0;\\n\\t\\tint left = 0, right = nums.length - 1;\\n\\n\\t\\twhile (left <= right) {\\n\\n\\t\\t\\twhile (right > left && nums[right] == val)\\n\\t\\t\\t\\tright--;\\n\\t\\t\\tif (nums[left] == val) {\\n\\t\\t\\t\\tnums[left] = nums[right];\\n\\t\\t\\t\\tright--;\\n\\t\\t\\t}\\n\\t\\t\\tleft++;\\n\\t\\t}\\n\\n\\t\\treturn right + 1;",
                "codeTag": "Unknown"
            },
            {
                "id": 3913495,
                "title": "c-java-solution-with-easy-explanation-beats-90-in-runtime",
                "content": "\\n# Approach\\nApply a two-pointer technique for efficient element removal. Use `result` to track the index of non-equal elements. Iterate through the array with `item`. If `item` is not equal to `val`, update `nums[result]` and increment result.\\n\\n# Intuition\\n\\nThis technique efficiently separates non-equal from `val` elements while maintaining element order. `result` index represents the count of non-equal elements, which is returned as the final result.\\n\\n\\n\\n\\n# Complexity\\n![image.png](https://assets.leetcode.com/users/images/887039c8-4b63-4bbe-bf4f-82653b1deb65_1692103659.4461107.png)\\n\\n\\n# Code\\n```\\npublic class Solution {\\n    public int RemoveElement(int[] nums, int val) {\\n        int result = 0;\\n        foreach (var item in nums)\\n        {\\n            if(item != val)\\n            {\\n                nums[result] = item;\\n                result++;\\n            }\\n        }   \\n\\n        return result;\\n    }\\n}\\n```\\n\\n## If you found my solution helpful, please consider giving it an upvote. Happy coding!",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int RemoveElement(int[] nums, int val) {\\n        int result = 0;\\n        foreach (var item in nums)\\n        {\\n            if(item != val)\\n            {\\n                nums[result] = item;\\n                result++;\\n            }\\n        }   \\n\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3873873,
                "title": "beat-100-python-one-line-most-pythonic-and-list-comprehension-no-while-loops",
                "content": "# Intuition\\nSeems like any other pythonic list comprehension problem. Only hurdle is that it has to be in place\\n# Approach\\nBy using nums[:] you can make it in place\\n# Complexity\\n- Time complexity:\\n\\n- Space complexity:\\n\\n# Code\\n```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n\\n        nums[:] = [num for num in nums if num != val]\\n        \\n        return len(nums)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n\\n        nums[:] = [num for num in nums if num != val]\\n        \\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3417841,
                "title": "python-beginner-simple-explanation",
                "content": "# Explanation\\n1. A variable i is initialized to 0. This variable will be used to keep track of the current position where elements not equal to val should be placed in the nums list.\\n2. The for loop iterates over each element x in the nums list.\\n3. For each element x, the if statement checks whether it is equal to val.\\n4. If x is not equal to val, then it is assigned to the ith position in the nums list using nums[i] = x. The variable i is then incremented by 1 using i += 1.\\n5. This process continues for all elements in the nums list, effectively removing all occurrences of val.\\n6. Finally, the method returns the new length of the nums list after removing all occurrences of val. This value is equal to the value of i.\\n\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        i = 0\\n        for x in nums:\\n            if x != val:\\n                nums[i] = x\\n                i += 1\\n        return i\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        i = 0\\n        for x in nums:\\n            if x != val:\\n                nums[i] = x\\n                i += 1\\n        return i\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3224789,
                "title": "simplest-one-liner-python",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums: nums.remove(val)\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums: nums.remove(val)\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3067546,
                "title": "simple-logic-code-3-lines-o-n-with-commets",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n- O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        // taking a variable for count how many elements are not equal to given value\\n        int k = 0; \\n        // simple for loop for traversal in the array\\n        for (int i = 0; i< nums.length ;i++){\\n            // condition for if element of the array is not equal to the val put value in the array and k increase\\n            if (nums[i] != val){\\n                nums[k] = nums[i];\\n                k++;\\n            }\\n        }\\n        // return the final remaining value in the array\\n        return k;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        // taking a variable for count how many elements are not equal to given value\\n        int k = 0; \\n        // simple for loop for traversal in the array\\n        for (int i = 0; i< nums.length ;i++){\\n            // condition for if element of the array is not equal to the val put value in the array and k increase\\n            if (nums[i] != val){\\n                nums[k] = nums[i];\\n                k++;\\n            }\\n        }\\n        // return the final remaining value in the array\\n        return k;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2780422,
                "title": "java-solution-faster-than-100-of-java-submissions",
                "content": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int prevIndex = 0;\\n        for (int index = 0; index < nums.length; index++){\\n            if (nums[index] == val)\\n                continue;\\n            nums[prevIndex++] = nums[index];\\n        }\\n        return prevIndex;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int prevIndex = 0;\\n        for (int index = 0; index < nums.length; index++){\\n            if (nums[index] == val)\\n                continue;\\n            nums[prevIndex++] = nums[index];\\n        }\\n        return prevIndex;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2768731,
                "title": "c-simple-removal",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j = 0;\\n        for(auto& num: nums){\\n            if (num != val){\\n                nums[j++] = num;\\n            }\\n        }\\n        return j;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j = 0;\\n        for(auto& num: nums){\\n            if (num != val){\\n                nums[j++] = num;\\n            }\\n        }\\n        return j;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2601833,
                "title": "python-easy-solution",
                "content": "```\\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2114966,
                "title": "0-ms-faster-than-100-00-of-java-online-submissions-for-remove-element",
                "content": "```\\n        int count = 0;\\n        for(int i = 0 ; i < nums.length ; i++)\\n        {\\n            if(nums[i] != val)\\n            {\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\n        int count = 0;\\n        for(int i = 0 ; i < nums.length ; i++)\\n        {\\n            if(nums[i] != val)\\n            {\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;",
                "codeTag": "Unknown"
            },
            {
                "id": 2036101,
                "title": "typescript-javascript-solution",
                "content": "```\\nfunction removeElement(nums: number[], val: number): number {\\n    let k = 0;\\n    for(let i = 0 ; i < nums.length; i++){\\n        if(nums[i] !== val)\\n        {\\n            nums[k] = nums[i];\\n            k++;        \\n        }\\n    }\\n    return k;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript",
                    "Two Pointers"
                ],
                "code": "```\\nfunction removeElement(nums: number[], val: number): number {\\n    let k = 0;\\n    for(let i = 0 ; i < nums.length; i++){\\n        if(nums[i] !== val)\\n        {\\n            nums[k] = nums[i];\\n            k++;        \\n        }\\n    }\\n    return k;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1985818,
                "title": "python-solution-very-simple",
                "content": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.pop(i)\\n                i-=1\\n            i+=1\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.pop(i)\\n                i-=1\\n            i+=1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1707903,
                "title": "simple-c-solution-faster-than-100-4-lines",
                "content": "```c\\nint removeElement(int* nums, int numsSize, int val) {\\n    int count = 0;\\n    for (int i=0; i < numsSize; i++)\\n        if (nums[i] == val) count++;\\n        else nums[i-count] = nums[i];\\n    return numsSize-count;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```c\\nint removeElement(int* nums, int numsSize, int val) {\\n    int count = 0;\\n    for (int i=0; i < numsSize; i++)\\n        if (nums[i] == val) count++;\\n        else nums[i-count] = nums[i];\\n    return numsSize-count;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1048319,
                "title": "python-o-n-cool-easy-clear-solution",
                "content": "\\tclass Solution:\\n\\t\\tdef removeElement(self, nums: List[int], val: int) -> int:\\n\\t\\t\\tlength = len(nums)\\n\\t\\t\\tindex = 0\\n\\t\\t\\twhile index < length:\\n\\t\\t\\t\\tif nums[index] == val:\\n\\t\\t\\t\\t\\tnums[index] = nums[length - 1]\\n\\t\\t\\t\\t\\tlength -= 1\\n\\t\\t\\t\\telse: index += 1\\n\\t\\t\\treturn length",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "\\tclass Solution:\\n\\t\\tdef removeElement(self, nums: List[int], val: int) -> int:\\n\\t\\t\\tlength = len(nums)\\n\\t\\t\\tindex = 0\\n\\t\\t\\twhile index < length:\\n\\t\\t\\t\\tif nums[index] == val:\\n\\t\\t\\t\\t\\tnums[index] = nums[length - 1]\\n\\t\\t\\t\\t\\tlength -= 1\\n\\t\\t\\t\\telse: index += 1\\n\\t\\t\\treturn length",
                "codeTag": "Java"
            },
            {
                "id": 12297,
                "title": "javascript-very-simple-solution-beats-100",
                "content": "```\\nvar removeElement = function(nums, val) {\\n    for(var i = nums.length - 1; i >= 0; i--){\\n        if(nums[i] === val){\\n            nums.splice(i, 1);\\n        }\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar removeElement = function(nums, val) {\\n    for(var i = nums.length - 1; i >= 0; i--){\\n        if(nums[i] === val){\\n            nums.splice(i, 1);\\n        }\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12391,
                "title": "5-lines-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i = 0, j = 0;\\n        while(j != nums.size())\\n            if(nums[j] == val) j++;\\n            else nums[i++] = nums[j++];\\n        return i;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i = 0, j = 0;\\n        while(j != nums.size())\\n            if(nums[j] == val) j++;\\n            else nums[i++] = nums[j++];\\n        return i;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12583,
                "title": "0ms-4-lines-c-code",
                "content": "    int removeElement(int* nums, int numsSize, int val) {\\n        int i, j;\\n        for(i = j = numsSize - 1; i >= 0; i--)\\n            if(nums[i] == val && i != j--) nums[i] = nums[j+1] ;\\n        return j+1;\\n    }",
                "solutionTags": [],
                "code": "    int removeElement(int* nums, int numsSize, int val) {\\n        int i, j;\\n        for(i = j = numsSize - 1; i >= 0; i--)\\n            if(nums[i] == val && i != j--) nums[i] = nums[j+1] ;\\n        return j+1;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 4041857,
                "title": "video-clear-visualization-of-o-n-solution",
                "content": "https://youtu.be/pGKDzt0gk-A\\n\\nOne way to do this is to check every element of `nums`, and if an element is equal to `val`, then we use the pop method to pop it off. This works, but the problem is that the pop method is very inefficient because if we pop an element near the start of the array, all the other elements have to be shifted back one spot.  Each shift runs in O(n) time, and in the worst case, we\\'d have to do n shifts, so this algorithm ends up running in O(n<sup>2</sup>) time.\\n\\nInstead, we can use a two pointer approach that overwrites the first `k` elements of the array, where `k` is the number of elements that are not equal to `val`.  The index variable `i` keeps track of the next spot to overwrite in the array, and we use `x` to check the value of each element and compare it to `val`.\\n\\nIf an element is equal to `val`, we just move on and don\\'t do anything.  Basically, we keep searching until we find an element that is not equal to `val`.  Once we do find an element not equal to `val`, we write it to the array at index `i`, then increment `i` so that it\\'s ready to write at the next spot.\\n\\nAt the end, we can just return `i` since it has been incremented exactly once for each element found that is not equal to `val`.\\n\\n```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        i = 0\\n        for x in nums:\\n            if x != val:\\n                nums[i] = x\\n                i += 1\\n        return i\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        i = 0\\n        for x in nums:\\n            if x != val:\\n                nums[i] = x\\n                i += 1\\n        return i\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3740600,
                "title": "solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size(); // Get the size of the input vector\\n        int j = 0; // Initialize a pointer to keep track of the modified array\\n\\n        for(int i = 0; i < n; i++) {\\n            if(nums[i] == val) // If the current element is equal to the target value\\n                continue; // Skip this element and move to the next iteration\\n\\n            nums[j++] = nums[i]; // Copy the non-target element to the modified array and increment the pointer\\n        }\\n\\n        return j; // Return the length of the modified array\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size(); // Get the size of the input vector\\n        int j = 0; // Initialize a pointer to keep track of the modified array\\n\\n        for(int i = 0; i < n; i++) {\\n            if(nums[i] == val) // If the current element is equal to the target value\\n                continue; // Skip this element and move to the next iteration\\n\\n            nums[j++] = nums[i]; // Copy the non-target element to the modified array and increment the pointer\\n        }\\n\\n        return j; // Return the length of the modified array\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3567590,
                "title": "remove-element-by-in-place-modification",
                "content": "# Intuition\\nThis one was very simple, my first thought was to just walk through the array and when we found the value just remove it. Not the most efficient, but I think it\\'s okay as it\\'s still stupidly quick on big arrays. This can be improved with an approach I had taken in the 26th problem.\\n\\n# Approach\\n1. Start iterating over the elements of **nums** using the index variable **i** from 0 to **nums.size()**.\\n2. Check if the current element **nums[i]** is equal to the target value **val**.\\n3. If **nums[i]** is equal to **val**, it indicates an element that needs to be removed.\\n4. Use the **erase** function to remove the element at index **i** from the **nums** vector.\\n5. Decrement **i** by 1 to account for the shifted indices after the removal.\\n6. Repeat steps 2-5 for the remaining elements in the vector.\\n7. After the loop, return the updated size of the vector **nums**.\\n\\nThis approach removes all occurrences of **val** from the vector by modifying it in-place.\\n\\n# Complexity\\n- Time complexity:\\n$$O(n^2)$$, where n is the size of the input vector **nums**\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```c++\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++) {\\n            if (nums[i] == val) {\\n                nums.erase(nums.begin() + i);\\n                i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```c++\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++) {\\n            if (nums[i] == val) {\\n                nums.erase(nums.begin() + i);\\n                i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3470745,
                "title": "100-simple-code-for-beginner",
                "content": "# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count = 0;\\n        for(int i = 0; i < nums.length; i++) {\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count = 0;\\n        for(int i = 0; i < nums.length; i++) {\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3075910,
                "title": "c-easy-solution",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int index=0,i;\\n        for(i=0;i<n;i++){\\n            if(nums[i]!=val){\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n        return index;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int index=0,i;\\n        for(i=0;i<n;i++){\\n            if(nums[i]!=val){\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n        return index;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3038657,
                "title": "100-faster-and-easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count = 0, e = nums.length;\\n        for(int i = 0; i < e; i++) {\\n            if(nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n    return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count = 0, e = nums.length;\\n        for(int i = 0; i < e; i++) {\\n            if(nums[i] != val) {\\n                nums[count++] = nums[i];\\n            }\\n        }\\n    return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2811097,
                "title": "c-java-python3-javascript-solutions-faster-than-90-100",
                "content": "We can solve this problem with a easy loop iteration\\n\\n**\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-solution-and-explanation-en/)\\u2B50**\\n\\u2B06To see other languages please click the link above\\u2B06\\n\\n#### Example : JavaScript Code \\n```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    var j = 0;\\n    for(var i=0;i<nums.length;i++)\\n    {\\n        if(nums[i]!=val)\\n        {\\n            nums[j++] = nums[i];\\n        }\\n    }\\n    return j;\\n};\\n```\\n\\n#### C# Code \\n```\\npublic class Solution {\\n    public int RemoveElement(int[] nums, int val) {\\n\\n        int j = 0;\\n        foreach(int i in nums)\\n        {\\n            if(i!=val)\\n            {\\n                nums[j++] = i;\\n            }\\n        }\\n        \\n        return j;\\n    }\\n}\\n```\\n\\nCongratulations! You have finished the first problem on LeetCode.\\n\\n**Now, why just try next problem immediately!**\\n**\\u2B50[Zyrastory - LeetCode#28 Find the Index of the First Occurrence in a String (Medium)](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-28-find-the-index-of-the-first-occurrence-in-a-string-solution-and-explanation-en/)\\u2B50**\\n\\n\\nIf you got any problem about the explanation or you need other programming language solution, please feel free to leave your comment.\\n\\n\\uD83E\\uDDE1See more problems solutions - **[Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\nThanks!\\n\\n",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "C#",
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    var j = 0;\\n    for(var i=0;i<nums.length;i++)\\n    {\\n        if(nums[i]!=val)\\n        {\\n            nums[j++] = nums[i];\\n        }\\n    }\\n    return j;\\n};\\n```\n```\\npublic class Solution {\\n    public int RemoveElement(int[] nums, int val) {\\n\\n        int j = 0;\\n        foreach(int i in nums)\\n        {\\n            if(i!=val)\\n            {\\n                nums[j++] = i;\\n            }\\n        }\\n        \\n        return j;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2661084,
                "title": "python",
                "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n        return len(nums)\\n",
                "solutionTags": [],
                "code": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n        return len(nums)\\n",
                "codeTag": "Java"
            },
            {
                "id": 2592824,
                "title": "c-easy-and-fast-solution-o-n",
                "content": "***The approach for solving this question is very simple, We are creating a vector array and then storing all non-val elements into it, then we are storing them back in main array.***\\n\\n\\t\\tvector<int>vec;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n             if(nums[i]!=val)\\n             {\\n                vec.push_back(nums[i]);\\n             }\\n        }\\n        for(int i=0;i<vec.size();i++)\\n        {\\n            nums[i]=vec[i];\\n        }\\n        return vec.size();\\n\\t\\t\\n***If you find it helpful, please consider upvoting!!***",
                "solutionTags": [
                    "C"
                ],
                "code": "***The approach for solving this question is very simple, We are creating a vector array and then storing all non-val elements into it, then we are storing them back in main array.***\\n\\n\\t\\tvector<int>vec;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n             if(nums[i]!=val)\\n             {\\n                vec.push_back(nums[i]);\\n             }\\n        }\\n        for(int i=0;i<vec.size();i++)\\n        {\\n            nums[i]=vec[i];\\n        }\\n        return vec.size();\\n\\t\\t\\n***If you find it helpful, please consider upvoting!!***",
                "codeTag": "Unknown"
            },
            {
                "id": 1554453,
                "title": "0-ms-very-easy-c",
                "content": "```\\n\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size()==0) return 0;\\n       int write=0;\\n        for(int read=0;read<nums.size();read++)\\n        {\\n            if(nums[read]!=val)\\n            {\\n                nums[write]=nums[read];\\n                    write++;\\n            }\\n        }\\n        return write;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1429199,
                "title": "remove-element-java-0ms-runtime-100-faster-than-online-submissions",
                "content": "```\\nclass Solution {\\n    public int removeElement(int[] A, int elem) {\\n        int m = 0;\\n        for(int i = 0; i < A.length; i++){   \\n            if(A[i] != elem){\\n                A[m++] = A[i];\\n            }\\n        }\\n        return m;\\n    }\\n}\\n```\\n\\nIf it helped, please UPVOTE. Happy Coding and keep up the good work.\\nFeel free to give your suggestions or correct me in the comments.\\nThanks for reading.\\uD83D\\uDE43",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] A, int elem) {\\n        int m = 0;\\n        for(int i = 0; i < A.length; i++){   \\n            if(A[i] != elem){\\n                A[m++] = A[i];\\n            }\\n        }\\n        return m;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1348020,
                "title": "my-c-code",
                "content": "Runtime: 0 ms, faster than 100.00% of C online submissions for Remove Element.\\nMemory Usage: 6.3 MB, less than 13.20% of C online submissions for Remove Element.\\nthis might not be the best one though...\\n\\n```\\nint removeElement(int* nums, int numsSize, int val){\\n    int validIndex=0,i;\\n    for(i=0;i<numsSize;i++){\\n        if(nums[i]!=val){\\n            nums[validIndex]=nums[i];\\n            validIndex++;\\n        }\\n    }\\n    return validIndex;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nint removeElement(int* nums, int numsSize, int val){\\n    int validIndex=0,i;\\n    for(i=0;i<numsSize;i++){\\n        if(nums[i]!=val){\\n            nums[validIndex]=nums[i];\\n            validIndex++;\\n        }\\n    }\\n    return validIndex;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1282520,
                "title": "fast-and-o-n-solution-c",
                "content": "```\\n  int removeElement(vector<int>& nums, int val) {\\n        \\n        int i=0,n=nums.size();\\n        \\n        for(i=n-1;i>=0;i--)\\n        {\\n            if(nums[i]==val)\\n            {\\n                nums.erase(nums.begin()+i);\\n            }\\n        }\\n        return nums.size();\\n    }\\n```\\n\\n\\nWe are just erasing the element whose value is equal to `val` . I am moving backwards because after deleting the element from behind we don\\'t need to worry about the change in index. As if we have started deleting  from the start then after each deletion the whole array indexes would decrease by -1. But in for loop we are going forward without taking this in consideration. So deleting from the end of the array is better.",
                "solutionTags": [
                    "C",
                    "Array"
                ],
                "code": "```\\n  int removeElement(vector<int>& nums, int val) {\\n        \\n        int i=0,n=nums.size();\\n        \\n        for(i=n-1;i>=0;i--)\\n        {\\n            if(nums[i]==val)\\n            {\\n                nums.erase(nums.begin()+i);\\n            }\\n        }\\n        return nums.size();\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 956147,
                "title": "javascript-solution-o-n-runtime-76-ms-faster-than-85-28",
                "content": "```\\n/**\\n * https://leetcode.com/problems/remove-element/\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n * Time O(n) - n is the no. of items in nums\\n * Space O(1)\\n * Optimized run time\\n */\\nvar removeElement = function(nums, val) {\\n\\tif (!nums.length) {\\n\\t\\t// when there is no nums in the array return 0\\n\\t\\treturn 0;\\n\\t}\\n\\t\\n\\tif (val === undefined) {\\n\\t\\tthrow new Error(\\'argument val cannot be undefined for removeElement function\\');\\n\\t}\\n\\t\\n\\tlet index = 0;\\n\\t\\n\\t/* for each items in the given array, check if the val is not equivalent to the val to the removed\\n\\t * if yes, then copy that value to the index which we are having as a pointer\\n\\t * and then increment the index by 1\\n\\t * finally return the index which should hold the number is items in the given array which is not === val\\n\\t*/\\n\\tfor (let i = 0; i < nums.length; i++) {\\n\\t\\tif (nums[i] !== val) {\\n\\t\\t\\tnums[index] = nums[i];\\n\\t\\t\\tindex++;\\n\\t\\t}\\n\\t}\\n\\t\\n\\treturn index;\\n};",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * https://leetcode.com/problems/remove-element/\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n * Time O(n) - n is the no. of items in nums\\n * Space O(1)\\n * Optimized run time\\n */\\nvar removeElement = function(nums, val) {\\n\\tif (!nums.length) {\\n\\t\\t// when there is no nums in the array return 0\\n\\t\\treturn 0;\\n\\t}\\n\\t\\n\\tif (val === undefined) {\\n\\t\\tthrow new Error(\\'argument val cannot be undefined for removeElement function\\');\\n\\t}\\n\\t\\n\\tlet index = 0;\\n\\t\\n\\t/* for each items in the given array, check if the val is not equivalent to the val to the removed\\n\\t * if yes, then copy that value to the index which we are having as a pointer\\n\\t * and then increment the index by 1\\n\\t * finally return the index which should hold the number is items in the given array which is not === val\\n\\t*/\\n\\tfor (let i = 0; i < nums.length; i++) {\\n\\t\\tif (nums[i] !== val) {\\n\\t\\t\\tnums[index] = nums[i];\\n\\t\\t\\tindex++;\\n\\t\\t}\\n\\t}\\n\\t\\n\\treturn index;\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 302034,
                "title": "python-solution",
                "content": "If the element is **not equal to val**, just copy it to its corresponding index and keep incrementing the index.\\n```\\nx = 0\\nfor i in range(len(nums)):\\n\\tif(nums[i]!=val):\\n\\t\\tnums[x] = nums[i]\\n\\t\\tx+=1\\nreturn(x)\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nx = 0\\nfor i in range(len(nums)):\\n\\tif(nums[i]!=val):\\n\\t\\tnums[x] = nums[i]\\n\\t\\tx+=1\\nreturn(x)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 283062,
                "title": "javascript-solution-60ms",
                "content": "```\\nvar removeElement = function(nums, val) {\\n    let newLen = 0;\\n    for (let i=0; i<nums.length; i++) {\\n        if (nums[i] == val) {\\n            continue;\\n        }\\n        nums[newLen] = nums[i]; \\n        newLen++;\\n    }\\n    return newLen;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar removeElement = function(nums, val) {\\n    let newLen = 0;\\n    for (let i=0; i<nums.length; i++) {\\n        if (nums[i] == val) {\\n            continue;\\n        }\\n        nums[newLen] = nums[i]; \\n        newLen++;\\n    }\\n    return newLen;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12598,
                "title": "1-ms-java-solution-with-3-lines-of-code",
                "content": "        public int removeElement(int[] nums, int val) {\\n            int index = 0;\\n            for(int i : nums) if(i != val) nums[index++] = i;\\n            return index;\\n        }\\n\\nI saw a lot of really too complicated solutions.. don't complicate things.",
                "solutionTags": [],
                "code": "        public int removeElement(int[] nums, int val) {\\n            int index = 0;\\n            for(int i : nums) if(i != val) nums[index++] = i;\\n            return index;\\n        }\\n\\nI saw a lot of really too complicated solutions.. don't complicate things.",
                "codeTag": "Unknown"
            },
            {
                "id": 3732387,
                "title": "5-lines-of-code-beats-100",
                "content": "# Please Upvote if you feel it easy \\uD83D\\uDE0A   \\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int cnt=0;\\n        for(int i=0;i<nums.length;i++) {\\n            if(nums[i] != val) {\\n                nums[cnt++] = nums[i];\\n            }\\n        }return cnt;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int cnt=0;\\n        for(int i=0;i<nums.length;i++) {\\n            if(nums[i] != val) {\\n                nums[cnt++] = nums[i];\\n            }\\n        }return cnt;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3676786,
                "title": "o-n-python-solution-with-clear-logic-and-explanation-easy-understanding",
                "content": "# Key Points\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n- Use to pointers ***i*** and ***j*** to point at the **start** and the **end** of the input list.\\n- Three cases in total:\\n    1. i points to a number==val but j is not:\\n        - **switch** the numbers stored in i and j\\n    2. j points to a number==val but i is not:\\n        - **Move j forward**, points to the prior element (j --)\\n    3. neither of them points to a number==val:\\n        - **Move i backward**, points to the next element (i ++)\\n\\n# Complexity\\n- Time complexity:  O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i, j = 0, len(nums)-1\\n        while i <= j:\\n            if nums[i] == val and nums[j] != val:\\n                nums[i] = nums[j]\\n                i += 1\\n                j -= 1\\n            elif nums[j] == val:\\n                j -= 1\\n            else:\\n                i += 1\\n        return i\\n```\\n\\n# Some Notes\\n- Don\\'t have to use two pointers, only one end-of-list pointer j can work as well. It\\'s just that this way makes the coding logic clearer.\\n\\n\\n***Hope that this post could help you on your leetcode journay. It\\'s not easy, as we all know it. Please leave a upvote if you find it helpful, and I hope I could see you under other questions\\' discussions.***\\n\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i, j = 0, len(nums)-1\\n        while i <= j:\\n            if nums[i] == val and nums[j] != val:\\n                nums[i] = nums[j]\\n                i += 1\\n                j -= 1\\n            elif nums[j] == val:\\n                j -= 1\\n            else:\\n                i += 1\\n        return i\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3637318,
                "title": "c-simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\ncomplexity is O(n). Only one loop is used.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public int RemoveElement(int[] nums, int val) {\\n          int current = 0;\\n\\n            for (int i = 0; i < nums.Length; i++)\\n            {\\n                if (nums[i]!=val)\\n                {\\n                    nums[current] = nums[i];\\n                    current++;\\n                }\\n            }\\n            return current;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#",
                    "Array"
                ],
                "code": "```\\npublic class Solution {\\n    public int RemoveElement(int[] nums, int val) {\\n          int current = 0;\\n\\n            for (int i = 0; i < nums.Length; i++)\\n            {\\n                if (nums[i]!=val)\\n                {\\n                    nums[current] = nums[i];\\n                    current++;\\n                }\\n            }\\n            return current;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3358452,
                "title": "easy-solution-3-line-of-code-python",
                "content": "# Steps\\n<!-- Describe your approach to solving the problem. -->\\n1. makes a while loop that checks if `nums` still has `val` inside it\\n2. removes `val` from `nums` if found in the while loop\\n3. usually you would do `return nums`but in this question, it wants you to return the length of nums (idk why) but still, it works. I also got really confused here but just remember to don\\'t do this in normal python.\\n# Code\\n```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while nums.__contains__(val):\\n            nums.remove(val)\\n        return len(nums)\\n```\\nplease upvote!",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        while nums.__contains__(val):\\n            nums.remove(val)\\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3337824,
                "title": "91-beats-for-memory",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    let k = 0;  // initialize the index of the next valid element\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] !== val) {  // if the current element is not equal to val\\n            nums[k] = nums[i];  // copy the current element to the next valid position\\n            k++;  // increment the index of the next valid position\\n        }\\n    }\\n    return k;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    let k = 0;  // initialize the index of the next valid element\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] !== val) {  // if the current element is not equal to val\\n            nums[k] = nums[i];  // copy the current element to the next valid position\\n            k++;  // increment the index of the next valid position\\n        }\\n    }\\n    return k;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2987663,
                "title": "simple-java-0ms-beats-100-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe can use the fact that the resultant array of size k (where k is the returned value) can be of **ANY ORDER**.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n    We will use two pointer approach.\\n    One will point to 1st.\\n    Other will point to last.\\n    If start pointer points to target,\\n    then replace it with end pointer value.\\n\\nApart from these steps, we need to check some **BASE CONDITIONS**. (All these are mentioned in the comment part of the code.\\nEventually, you will get the answer.\\n\\n              **If this solution helped you, give it an up-vote to help others**\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n//      We will check a base condition that if the array is empty\\n\\n        if(nums.length == 0) return 0;\\n\\n\\n//      initialize i from 0 and j from last index.\\n        int i = 0;\\n        int j = nums.length-1;\\n\\n\\n        while(i < j)            // loop will break when i and j crosses each other.\\n        {\\n            if(nums[i] == val)\\n            // if ith element points to target.\\n            {\\n                // it will be replaced with jth element.\\n                nums[i] = nums[j];\\n\\n                // we will then decrement j.\\n                j--;\\n\\n                // We will NOT increment i because we never know that the\\n                // replaced element is not the target.\\n                // if jth element is also target, then we will repeat the steps.\\n            }\\n            else\\n            {\\n                // We will approach the next index.\\n                i++;\\n            }\\n        }\\n\\n        // Now we need to check one base condition.\\n\\n        // If the element at ith index is target then return i;\\n        if(nums[i] == val) return i;\\n\\n\\n        // Finally, We have to return position so will add 1 to index value i.\\n        return i+1;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n//      We will check a base condition that if the array is empty\\n\\n        if(nums.length == 0) return 0;\\n\\n\\n//      initialize i from 0 and j from last index.\\n        int i = 0;\\n        int j = nums.length-1;\\n\\n\\n        while(i < j)            // loop will break when i and j crosses each other.\\n        {\\n            if(nums[i] == val)\\n            // if ith element points to target.\\n            {\\n                // it will be replaced with jth element.\\n                nums[i] = nums[j];\\n\\n                // we will then decrement j.\\n                j--;\\n\\n                // We will NOT increment i because we never know that the\\n                // replaced element is not the target.\\n                // if jth element is also target, then we will repeat the steps.\\n            }\\n            else\\n            {\\n                // We will approach the next index.\\n                i++;\\n            }\\n        }\\n\\n        // Now we need to check one base condition.\\n\\n        // If the element at ith index is target then return i;\\n        if(nums[i] == val) return i;\\n\\n\\n        // Finally, We have to return position so will add 1 to index value i.\\n        return i+1;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2891162,
                "title": "using-pivot-element",
                "content": "# Intuition\\nRemember the Quick sort Pavot Concept, Allowing all the target values to wordes left rest will stays towords right.\\n\\n# Approach\\nJust use the Concept of Pavot element concept.\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n- Space complexity:\\nO(1) \\n> It will take only the pivot element space.\\n\\n# Code\\n```\\n# /27. Remove Element\\n# Using Quick Sort paviot element All left side elements will be of one type\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        pi = 0\\n        for eleIdx in range(len(nums)):\\n            if nums[eleIdx] != val:\\n                nums[pi],nums[eleIdx] = nums[eleIdx],nums[pi]\\n                pi += 1\\n\\n        return pi\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\n# /27. Remove Element\\n# Using Quick Sort paviot element All left side elements will be of one type\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        pi = 0\\n        for eleIdx in range(len(nums)):\\n            if nums[eleIdx] != val:\\n                nums[pi],nums[eleIdx] = nums[eleIdx],nums[pi]\\n                pi += 1\\n\\n        return pi\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2748305,
                "title": "python-straightorward",
                "content": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k=0\\n        for i in range(len(nums)):\\n            if nums[i]==val:\\n                continue\\n            nums[k]=nums[i]\\n            k+=1\\n        return k\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k=0\\n        for i in range(len(nums)):\\n            if nums[i]==val:\\n                continue\\n            nums[k]=nums[i]\\n            k+=1\\n        return k\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2597831,
                "title": "c-easy-solution-easy-to-understand-o-n",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0; i<nums.size(); i++){\\n            auto it = nums.begin() + i ;\\n            if(nums[i]==val){\\n                nums.erase(it);\\n                i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0; i<nums.size(); i++){\\n            auto it = nums.begin() + i ;\\n            if(nums[i]==val){\\n                nums.erase(it);\\n                i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2222194,
                "title": "simple-php-solution-6-ms",
                "content": "```\\nclass Solution {\\n\\n    /**\\n     * @param Integer[] $nums\\n     * @param Integer $val\\n     * @return Integer\\n     */\\n    function removeElement(&$nums, $val) {\\n        $nums = array_diff($nums, [$val]);\\n        return count($nums);\\n    }\\n}\\n```",
                "solutionTags": [
                    "PHP"
                ],
                "code": "```\\nclass Solution {\\n\\n    /**\\n     * @param Integer[] $nums\\n     * @param Integer $val\\n     * @return Integer\\n     */\\n    function removeElement(&$nums, $val) {\\n        $nums = array_diff($nums, [$val]);\\n        return count($nums);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1979588,
                "title": "java-c-python-javascript-kotlin-o-n-time-beats-99-97-memory-speed-0ms-april-2022",
                "content": "***C++***\\n```\\nclass Solution {\\npublic:\\n\\tint removeElement(vector<int>& nums, int val) {\\n\\t\\tint length = nums.size(), index = 0;\\n\\t\\twhile ( index < length )\\n\\t\\t{\\n\\t\\t\\t if ( nums[index] == val )\\n\\t\\t\\t {\\n\\t\\t\\t\\t nums[index] = nums[length - 1];\\n\\t\\t\\t\\t -- length;\\n\\t\\t\\t }\\n\\t\\t\\t\\t\\n\\t\\t\\telse ++index;\\n\\t\\t}\\n\\t\\t return length;  \\n\\t}\\n};\\n```\\n\\n***Java***\\n```\\npublic int removeElement(int[] A, int elem) {\\n    int l = A.length;\\n    for (int i=0; i<l; i++) {\\n        if (A[i] == elem) {\\n            A[i--] = A[l-- -1];\\n        }\\n    }\\n    return l;\\n}\\n```\\n\\n***Python***\\n```\\ndef removeElement(self, nums, val):\\n    i = 0\\n    for x in nums:\\n        if x != val:\\n            nums[i] = x\\n            i += 1\\n    return i\\n```\\n\\n***JavaScript***\\n```\\n var removeElement = function(nums, val) {\\n    for(let i = 0; i < nums.length; i++) {\\n        if(nums[i] == val) {\\n            nums.splice(i, 1);\\n            i -= 1\\n        }\\n    }\\n    return nums.length;\\n}\\n```\\n\\n***Kotlin***\\n```\\nclass Solution {\\n    fun removeElement(nums: IntArray, num: Int): Int {\\n        var counter = 0\\n        nums.forEach { if (it != num) nums[counter++] = it }\\n\\n        return counter\\n    }\\n}\\n```\\n\\n***Consider upvote if useful!***",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "C",
                    "JavaScript",
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n\\tint removeElement(vector<int>& nums, int val) {\\n\\t\\tint length = nums.size(), index = 0;\\n\\t\\twhile ( index < length )\\n\\t\\t{\\n\\t\\t\\t if ( nums[index] == val )\\n\\t\\t\\t {\\n\\t\\t\\t\\t nums[index] = nums[length - 1];\\n\\t\\t\\t\\t -- length;\\n\\t\\t\\t }\\n\\t\\t\\t\\t\\n\\t\\t\\telse ++index;\\n\\t\\t}\\n\\t\\t return length;  \\n\\t}\\n};\\n```\n```\\npublic int removeElement(int[] A, int elem) {\\n    int l = A.length;\\n    for (int i=0; i<l; i++) {\\n        if (A[i] == elem) {\\n            A[i--] = A[l-- -1];\\n        }\\n    }\\n    return l;\\n}\\n```\n```\\ndef removeElement(self, nums, val):\\n    i = 0\\n    for x in nums:\\n        if x != val:\\n            nums[i] = x\\n            i += 1\\n    return i\\n```\n```\\n var removeElement = function(nums, val) {\\n    for(let i = 0; i < nums.length; i++) {\\n        if(nums[i] == val) {\\n            nums.splice(i, 1);\\n            i -= 1\\n        }\\n    }\\n    return nums.length;\\n}\\n```\n```\\nclass Solution {\\n    fun removeElement(nums: IntArray, num: Int): Int {\\n        var counter = 0\\n        nums.forEach { if (it != num) nums[counter++] = it }\\n\\n        return counter\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1452426,
                "title": "c-faster-than-100-0ms",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0;\\n        int j=0;\\n        while(j<nums.size()){\\n            if(nums[j]!=val){\\n                nums[i]=nums[j];\\n                i++;\\n                j++;\\n\\n            }\\n            else {\\n                j++;\\n            }\\n        }return i;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0;\\n        int j=0;\\n        while(j<nums.size()){\\n            if(nums[j]!=val){\\n                nums[i]=nums[j];\\n                i++;\\n                j++;\\n\\n            }\\n            else {\\n                j++;\\n            }\\n        }return i;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1389132,
                "title": "simple-two-pointers-approach-faster-than-100-00",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int left=0;\\n        for(int right=0;right<nums.size();right++){\\n            if(nums[right]==val){\\n                count++;\\n            }else{\\n                nums[left]=nums[right];\\n                left++;\\n            }\\n        }\\n        return nums.size()-count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int left=0;\\n        for(int right=0;right<nums.size();right++){\\n            if(nums[right]==val){\\n                count++;\\n            }else{\\n                nums[left]=nums[right];\\n                left++;\\n            }\\n        }\\n        return nums.size()-count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1183128,
                "title": "rust-o-n-time-o-1-space-solution",
                "content": "```rust\\nimpl Solution {\\n    pub fn remove_element(nums: &mut Vec<i32>, val: i32) -> i32 {\\n        let (mut len, mut i) = (nums.len(), 0);\\n        while i < len {\\n            if nums[i] == val {\\n                nums.swap(i, len - 1);\\n                len -= 1;\\n            } else {\\n                i += 1;\\n            }\\n        } \\n        len as _\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```rust\\nimpl Solution {\\n    pub fn remove_element(nums: &mut Vec<i32>, val: i32) -> i32 {\\n        let (mut len, mut i) = (nums.len(), 0);\\n        while i < len {\\n            if nums[i] == val {\\n                nums.swap(i, len - 1);\\n                len -= 1;\\n            } else {\\n                i += 1;\\n            }\\n        } \\n        len as _\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1103565,
                "title": "simple-efficient-python-solution",
                "content": "```\\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        \\n        count = 0 \\n        for i in range(len(nums)):\\n            if nums[i] != val:\\n                nums[count] = nums[i]\\n                count += 1\\n                \\n        return count \\n```",
                "solutionTags": [],
                "code": "```\\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        \\n        count = 0 \\n        for i in range(len(nums)):\\n            if nums[i] != val:\\n                nums[count] = nums[i]\\n                count += 1\\n                \\n        return count \\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1078376,
                "title": "c-standard-library-one-liners",
                "content": "Not necessarily the fastest and it mixes up the order, but it is short and hard to get wrong:\\n\\n```cpp\\nstatic int removeElement(vector<int>& n, const int v) {\\n    return std::partition(begin(n), end(n), [v](auto e){ return e != v; }) - begin(n);\\n}\\n```\\n\\nThe most exact match in the standard algorithms:\\n\\n```cpp\\nstatic int removeElement(vector<int>& n, const int v) {\\n    return std::remove(begin(n), end(n), v) - begin(n);\\n}\\n```\\n\\nOf course your interviewer wants you to write out the algorithm so make sure you can produce a tight version of that and scrawl this in an afterthought as \"what I\\'d actually use in production code\". Here is one simple, non-generic, example:\\nhttps://leetcode.com/problems/remove-element/discuss/1078348\\n",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```cpp\\nstatic int removeElement(vector<int>& n, const int v) {\\n    return std::partition(begin(n), end(n), [v](auto e){ return e != v; }) - begin(n);\\n}\\n```\n```cpp\\nstatic int removeElement(vector<int>& n, const int v) {\\n    return std::remove(begin(n), end(n), v) - begin(n);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 873229,
                "title": "faster-than-100-easy-understanding-c",
                "content": "**1.[Runtime: 0 ms, faster than 100%]**\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j=0;\\n\\t\\t//As long as nums[i]!=val we copy nums[i] to nums[j] and increment j\\n        //nums[i] equals to the given value,skip this element\\n        for(int i=0;i<nums.size();i++)\\n            if(nums[i]!=val) nums[j]=nums[i],j++;\\n        return j;\\n    }\\n};\\n```\\n**2.[Runtime: 0 ms, faster than 100%]**\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,n=nums.size();\\n\\t\\t//When nums[i]=val, we swap the current element with the last element and remove the last one so reduces the array\\'s size by 1.\\n        while (i < n) {\\n            if (nums[i] == val) nums[i] = nums[n-1],n--;\\n            else i++;\\n        }\\n        return n;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j=0;\\n\\t\\t//As long as nums[i]!=val we copy nums[i] to nums[j] and increment j\\n        //nums[i] equals to the given value,skip this element\\n        for(int i=0;i<nums.size();i++)\\n            if(nums[i]!=val) nums[j]=nums[i],j++;\\n        return j;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,n=nums.size();\\n\\t\\t//When nums[i]=val, we swap the current element with the last element and remove the last one so reduces the array\\'s size by 1.\\n        while (i < n) {\\n            if (nums[i] == val) nums[i] = nums[n-1],n--;\\n            else i++;\\n        }\\n        return n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 599188,
                "title": "easy-go-solution",
                "content": "```go\\nfunc removeElement(nums []int, val int) int {\\n    count := 0\\n    for i, num := range nums {\\n        nums[i - count] = nums[i]\\n        if num == val {\\n            count += 1\\n        }\\n    }\\n    return len(nums) - count\\n}\\n```",
                "solutionTags": [],
                "code": "```go\\nfunc removeElement(nums []int, val int) int {\\n    count := 0\\n    for i, num := range nums {\\n        nums[i - count] = nums[i]\\n        if num == val {\\n            count += 1\\n        }\\n    }\\n    return len(nums) - count\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 376418,
                "title": "python3-swap",
                "content": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        \"\"\"\\n        [3,2,2,3],val = 3\\n        \\n        [2,2,3,3]\\n        \"\"\"\\n        e = 0\\n        for i in range(len(nums)):\\n            if nums[i] != val:\\n                nums[e], nums[i] = nums[i],nums[e]\\n                e += 1\\n        return e \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        \"\"\"\\n        [3,2,2,3],val = 3\\n        \\n        [2,2,3,3]\\n        \"\"\"\\n        e = 0\\n        for i in range(len(nums)):\\n            if nums[i] != val:\\n                nums[e], nums[i] = nums[i],nums[e]\\n                e += 1\\n        return e \\n```",
                "codeTag": "Java"
            },
            {
                "id": 325013,
                "title": "scala-using-foldleft",
                "content": "```\\ndef removeElement(nums: Array[Int], v: Int): Int = {\\n\\tnums.foldLeft(0)((index, vv) => {\\n\\t\\t(vv == v) match {\\n\\t\\t\\tcase true => index\\n\\t\\t\\tcase false => {\\n\\t\\t\\t\\tnums(index) = vv\\n\\t\\t\\t\\tindex + 1\\n\\t\\t\\t}\\n\\t\\t}\\n\\t})\\n}\\n```",
                "solutionTags": [],
                "code": "```\\ndef removeElement(nums: Array[Int], v: Int): Int = {\\n\\tnums.foldLeft(0)((index, vv) => {\\n\\t\\t(vv == v) match {\\n\\t\\t\\tcase true => index\\n\\t\\t\\tcase false => {\\n\\t\\t\\t\\tnums(index) = vv\\n\\t\\t\\t\\tindex + 1\\n\\t\\t\\t}\\n\\t\\t}\\n\\t})\\n}\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 282492,
                "title": "rust-0ms-2-lines-boilerplate",
                "content": "```\\nimpl Solution {\\n    pub fn remove_element(nums: &mut Vec<i32>, val: i32) -> i32 {\\n        nums.retain(|&x| x != val);\\n        nums.len() as i32\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nimpl Solution {\\n    pub fn remove_element(nums: &mut Vec<i32>, val: i32) -> i32 {\\n        nums.retain(|&x| x != val);\\n        nums.len() as i32\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 239612,
                "title": "rust-0ms",
                "content": "```rust\\nimpl Solution {\\n    pub fn remove_element(nums: &mut Vec<i32>, val: i32) -> i32 {\\n        let mut current = 0;\\n        for i in 0..nums.len() {\\n            if nums[i] != val {\\n                nums[current] = nums[i];\\n                current += 1\\n            }\\n        }\\n\\n        current as i32\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```rust\\nimpl Solution {\\n    pub fn remove_element(nums: &mut Vec<i32>, val: i32) -> i32 {\\n        let mut current = 0;\\n        for i in 0..nums.len() {\\n            if nums[i] != val {\\n                nums[current] = nums[i];\\n                current += 1\\n            }\\n        }\\n\\n        current as i32\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12374,
                "title": "swift-solution-two-pointers",
                "content": "```\\nclass Solution {\\n    func removeElement(_ nums: inout [Int], _ val: Int) -> Int {\\n        var count = 0\\n        \\n        for i in 0..<nums.count {\\n            if nums[i] != val {\\n                nums[count] = nums[i]\\n                count += 1\\n            }\\n        }\\n        \\n        return count\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\n    func removeElement(_ nums: inout [Int], _ val: Int) -> Int {\\n        var count = 0\\n        \\n        for i in 0..<nums.count {\\n            if nums[i] != val {\\n                nums[count] = nums[i]\\n                count += 1\\n            }\\n        }\\n        \\n        return count\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12390,
                "title": "c-solution",
                "content": "Two pointers, O(n), No extra space\\n\\n```\\n    public int RemoveElement(int[] nums, int val) {\\n        if (nums == null || nums.Length == 0)\\n            return 0;\\n        \\n        int slowIndex = 0, fastIndex = 0;\\n        \\n        while (slowIndex <= nums.Length - 1 && fastIndex <= nums.Length - 1)\\n        {\\n            if (nums[fastIndex] != val)\\n            {\\n                nums[slowIndex] = nums[fastIndex];\\n                slowIndex++;\\n                fastIndex++;\\n            }\\n            else\\n                fastIndex++;\\n        }\\n        \\n        return slowIndex;\\n    }",
                "solutionTags": [],
                "code": "Two pointers, O(n), No extra space\\n\\n```\\n    public int RemoveElement(int[] nums, int val) {\\n        if (nums == null || nums.Length == 0)\\n            return 0;\\n        \\n        int slowIndex = 0, fastIndex = 0;\\n        \\n        while (slowIndex <= nums.Length - 1 && fastIndex <= nums.Length - 1)\\n        {\\n            if (nums[fastIndex] != val)\\n            {\\n                nums[slowIndex] = nums[fastIndex];\\n                slowIndex++;\\n                fastIndex++;\\n            }\\n            else\\n                fastIndex++;\\n        }\\n        \\n        return slowIndex;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 12475,
                "title": "7-lines-java-solution",
                "content": "```\\npublic class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int index = 0;\\n        for (int i = 0; i < nums.length; i++) if (nums[i] != val) nums[index++] = nums[i];  \\n        return index;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int index = 0;\\n        for (int i = 0; i < nums.length; i++) if (nums[i] != val) nums[index++] = nums[i];  \\n        return index;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12610,
                "title": "4ms-of-c-solution",
                "content": "    class Solution {\\n    public:\\n        int removeElement(vector<int>& nums, int val) {\\n            int l=nums.size();\\n            int k=0;\\n            for(int i=0;i<l;i++)\\n            {\\n                if(nums[i]!=val)\\n                {\\n                    nums[k]=nums[i];\\n                    k++;\\n                }\\n            }\\n            return k;\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        int removeElement(vector<int>& nums, int val) {\\n            int l=nums.size();\\n            int k=0;\\n            for(int i=0;i<l;i++)\\n            {\\n                if(nums[i]!=val)\\n                {\\n                    nums[k]=nums[i];\\n                    k++;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 12470,
                "title": "my-python-solution",
                "content": "    class Solution(object):\\n        def removeElement(self, nums, val):\\n            for x in nums[:]:\\n                if x == val:\\n                    nums.remove(val)\\n            return len(nums)",
                "solutionTags": [
                    "Python"
                ],
                "code": "    class Solution(object):\\n        def removeElement(self, nums, val):\\n            for x in nums[:]:\\n                if x == val:\\n                    nums.remove(val)\\n            return len(nums)",
                "codeTag": "Java"
            },
            {
                "id": 12664,
                "title": "my-accepted-java-solution",
                "content": "    public int removeElement(int[] nums, int val) {\\n        int i=0, j=0;\\n        \\n        for (i=0;i<nums.length; i++) {\\n            if(nums[i]!=val)\\n                nums[j++] = nums[i];\\n        }\\n        \\n        return j;\\n    }",
                "solutionTags": [],
                "code": "    public int removeElement(int[] nums, int val) {\\n        int i=0, j=0;\\n        \\n        for (i=0;i<nums.length; i++) {\\n            if(nums[i]!=val)\\n                nums[j++] = nums[i];\\n        }\\n        \\n        return j;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 12678,
                "title": "2-lines-this-is-why-i-love-python",
                "content": "    def removeElement(self, nums, val):\\n            nums[:] = [x for x in nums if x!=val]\\n            return len(nums)",
                "solutionTags": [],
                "code": "    def removeElement(self, nums, val):\\n            nums[:] = [x for x in nums if x!=val]\\n            return len(nums)",
                "codeTag": "Python3"
            },
            {
                "id": 12747,
                "title": "5ms-6-lines-c-solution",
                "content": "\\n\\n    class Solution {\\n    public:\\n        int removeElement(int A[], int n, int e) {\\n            for(int i=0; i<n; i++){\\n                if(A[i] == e){\\n                    A[i] = A[n-1];\\n                    n--;\\n                    i--;\\n                }\\n            }\\n            \\n            return n;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        int removeElement(int A[], int n, int e) {\\n            for(int i=0; i<n; i++){\\n                if(A[i] == e){\\n                    A[i] = A[n-1];\\n                    n--;\\n                    i--;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 3917831,
                "title": "replacing-the-position-of-array",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWhen you understand the question properly:\\n![image.png](https://assets.leetcode.com/users/images/34ab0276-90d4-4e2c-a1dc-d650dc5a1592_1692187618.331171.png)\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]!=val){\\n                nums[count]=nums[i];\\n        \\n                count++;\\n            }\\n        \\n        }\\n        return count;\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int count=0;\\n        for(int i=0;i<nums.length;i++){\\n            if(nums[i]!=val){\\n                nums[count]=nums[i];\\n        \\n                count++;\\n            }\\n        \\n        }\\n        return count;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3680270,
                "title": "java-solution-simple-to-understand",
                "content": "\\nTime complexity: \\nO(n)\\nSpace complexity:\\nO(1)\\n\\n\\n\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int index = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            if (nums[i] != val) {\\n                nums[index] = nums[i];\\n                index++;\\n            }\\n        }\\n        return index;\\n    }\\n}\\n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int index = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            if (nums[i] != val) {\\n                nums[index] = nums[i];\\n                index++;\\n            }\\n        }\\n        return index;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3615938,
                "title": "c-java-javascript-solutions-faster-than-90-100",
                "content": "We can solve this problem with a easy loop iteration\\n\\n**\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-solution-and-explanation-en/)\\u2B50**\\n\\u2B06To see other languages please click the link above\\u2B06\\n\\n#### Example : JavaScript Code \\n```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    var j = 0;\\n    for(var i=0;i<nums.length;i++)\\n    {\\n        if(nums[i]!=val)\\n        {\\n            nums[j++] = nums[i];\\n        }\\n    }\\n    return j;\\n};\\n```\\n\\n---\\n\\n\\n#### C# Code \\n```\\npublic class Solution {\\n    public int RemoveElement(int[] nums, int val) {\\n\\n        int j = 0;\\n        foreach(int i in nums)\\n        {\\n            if(i!=val)\\n            {\\n                nums[j++] = i;\\n            }\\n        }\\n        \\n        return j;\\n    }\\n}\\n```\\n\\n---\\n\\n### Java\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        \\n        int j = 0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[j++] = nums[i];\\n            }\\n        }\\n        return j;\\n    }\\n}\\n```\\n---\\n\\n\\n**Now, try next problem immediately!**\\n**\\u2B50[Zyrastory - LeetCode#28 Find the Index of the First Occurrence in a String (Medium)](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-28-find-the-index-of-the-first-occurrence-in-a-string-solution-and-explanation-en/)**\\n\\n\\nIf you got any problem about the explanation or you need other programming language solution, please feel free to leave your comment.\\n\\n\\uD83E\\uDDE1See more problems solutions - **[Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n## Thanks!\\n\\n",
                "solutionTags": [
                    "Java",
                    "C#",
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    var j = 0;\\n    for(var i=0;i<nums.length;i++)\\n    {\\n        if(nums[i]!=val)\\n        {\\n            nums[j++] = nums[i];\\n        }\\n    }\\n    return j;\\n};\\n```\n```\\npublic class Solution {\\n    public int RemoveElement(int[] nums, int val) {\\n\\n        int j = 0;\\n        foreach(int i in nums)\\n        {\\n            if(i!=val)\\n            {\\n                nums[j++] = i;\\n            }\\n        }\\n        \\n        return j;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        \\n        int j = 0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[j++] = nums[i];\\n            }\\n        }\\n        return j;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3525894,
                "title": "q-27-c-solution-super-easy-study-from-this",
                "content": "\\n# Complexity\\nTime: O(n)\\nSpace: O(1)\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                int temp = nums[i];\\n                nums[i] = nums[j];\\n                nums[j] = temp;\\n                i++;\\n            }\\n        }\\n        return i;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                int temp = nums[i];\\n                nums[i] = nums[j];\\n                nums[j] = temp;\\n                i++;\\n            }\\n        }\\n        return i;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3428240,
                "title": "two-step-using-list-comprehension-python",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n\\nUsing list comprehension (Default method)\\n\\n# Complexity\\n- Time complexity: O(n)\\n\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        nums [:]= [i for i in nums if i != val]\\n        return len(nums)\\n        \\n\\n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def removeElement(self, nums, val):\\n        nums [:]= [i for i in nums if i != val]\\n        return len(nums)\\n        \\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3172103,
                "title": "efficient-in-place-element-removal-from-a-list-using-two-pointers-python",
                "content": "\\n\\n# Intuition:\\nThe idea behind this approach is to use two pointers, k and single. The variable k keeps track of the position of the current non-target element, while single iterates through the entire list.\\n\\n# Approach:\\nThe code iterates through the list, and for each element, if it\\'s not equal to the target value, the current element is copied to the k-th position. k is then incremented, and the next iteration proceeds.\\n\\n# Complexity:\\n\\n- Time complexity: O(n)\\n\\n  The solution iterates through the entire list once, so its time complexity is linear with respect to the size of the list.\\n\\n-  Space complexity: O(1)\\n   This solution does not require any additional memory allocation, since it only uses a constant amount of extra memory for the two pointers.\\n\\nOverall, this is an efficient solution to the problem of removing elements from a list in-place.\\n# Code\\n```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        \\n        k = 0  \\n        \\n        for single in range(len(nums)):\\n\\n            if nums[single] != val:\\n                nums[ k ] = nums[ single ]\\n                k += 1\\n        return k   \\n        \\n\\n\\n\\n\\n\\n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        \\n        k = 0  \\n        \\n        for single in range(len(nums)):\\n\\n            if nums[single] != val:\\n                nums[ k ] = nums[ single ]\\n                k += 1\\n        return k   \\n        \\n\\n\\n\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3151247,
                "title": "java-solution-100-faster",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int n=nums.length;\\n        int ans=0;\\n        for(int i=0;i<n;i++){\\n            if(nums[i]!=val) ans++;\\n            else{\\n            for(int j=i;j<n;j++){\\n                if(j!=n-1)\\n                nums[j]=nums[j+1];\\n            }\\n            n--;\\n            i--;\\n        }\\n        }\\n        \\n        return n;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int n=nums.length;\\n        int ans=0;\\n        for(int i=0;i<n;i++){\\n            if(nums[i]!=val) ans++;\\n            else{\\n            for(int j=i;j<n;j++){\\n                if(j!=n-1)\\n                nums[j]=nums[j+1];\\n            }\\n            n--;\\n            i--;\\n        }\\n        }\\n        \\n        return n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3070256,
                "title": "easiest-solution-c-with-0ms-beats-100-of-solutions",
                "content": "# Approach\\nThe loop goes through the vector checking each value against the restricted value `val`, for each value that is not `val` it will be set to the seperate index k which starts at the beginning of the vector overwriting the already checked values.\\n\\n# Complexity\\n- Time complexity:\\n$O(n)$\\n\\n- Space complexity:\\n$O(1)$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int k {};\\n        for(int i {}; i<nums.size();i++){\\n                (nums[i]!=val) ? nums[k++]=nums[i]:NULL;\\n        }\\n        return k;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Java"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int k {};\\n        for(int i {}; i<nums.size();i++){\\n                (nums[i]!=val) ? nums[k++]=nums[i]:NULL;\\n        }\\n        return k;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2945604,
                "title": "very-easy-solution-to-understand-with-comments",
                "content": "Used .filter method, rest in comments\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    // create array with content of nums but without val items\\n    let arr = nums.filter(num => num !== val);\\n    // set nums length to zero\\n    nums.length = 0;\\n    // push content of arr to num\\n    nums.push(...arr);\\n    //return length of nums\\n    return nums.length;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    // create array with content of nums but without val items\\n    let arr = nums.filter(num => num !== val);\\n    // set nums length to zero\\n    nums.length = 0;\\n    // push content of arr to num\\n    nums.push(...arr);\\n    //return length of nums\\n    return nums.length;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2863900,
                "title": "cpp-solution-using-swap-function-only",
                "content": "# Complexity\\n- Time complexity: O(n), 3ms 70.15% better than Online Cpp Submissions\\n\\n- Space complexity: O(1), 8.6 mb 92.8% better than Online Cpp Submissions\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& n, int val) {\\n        int i=0,j=n.size()-1,k=0;\\n        while(i<=j)\\n        {\\n            if(n[i]==val && n[j]!=val)\\n            {\\n                swap(n[i],n[j]);\\n                k++;\\n                i++;\\n                continue;\\n            }\\n            if(n[i]!=val)\\n             {\\n                k++;\\n                i++;\\n             }\\n            if(n[j]==val)\\n             j--;\\n        }\\n  return k;  }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& n, int val) {\\n        int i=0,j=n.size()-1,k=0;\\n        while(i<=j)\\n        {\\n            if(n[i]==val && n[j]!=val)\\n            {\\n                swap(n[i],n[j]);\\n                k++;\\n                i++;\\n                continue;\\n            }\\n            if(n[i]!=val)\\n             {\\n                k++;\\n                i++;\\n             }\\n            if(n[j]==val)\\n             j--;\\n        }\\n  return k;  }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2765130,
                "title": "as-simple-as-that-python",
                "content": "```\\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n```",
                "solutionTags": [],
                "code": "```\\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        while val in nums:\\n            nums.remove(val)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2745845,
                "title": "c-multiple-approaches-two-pointer-linear-search-faster-than-100",
                "content": "Pls upvote if you like the solution\\n\\nApproach 1:\\n***Check for the elements which are not \\'val\\' in the vector nums and push them to another vector \\' vec \\'\\nreturn the size of new vector \\'vec\\', as it has only elements which are not \\'val**\\' *\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n    vector<int>vec;\\n    for(int i=0;i<nums.size();i++)\\n    {\\n         if(nums[i]!=val)\\n         {\\n            vec.push_back(nums[i]);\\n         }\\n    }\\n    for(int i=0;i<vec.size();i++)\\n    {\\n        nums[i]=vec[i];\\n    }\\n    return vec.size();\\n    }\\n};\\n```\\n\\n**Approach 2: Two pointer **\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int j = 0;\\n            for(int i = 0; i<nums.size(); i++){\\n                    if(nums[i]!= val){\\n                        nums[j] = nums[i];\\n                        j++;\\n                }   \\n            }\\n            return j;\\n    }\\n };\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n    vector<int>vec;\\n    for(int i=0;i<nums.size();i++)\\n    {\\n         if(nums[i]!=val)\\n         {\\n            vec.push_back(nums[i]);\\n         }\\n    }\\n    for(int i=0;i<vec.size();i++)\\n    {\\n        nums[i]=vec[i];\\n    }\\n    return vec.size();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2562453,
                "title": "java-simple-solution-0ms-100-faster",
                "content": "class Solution {\\n\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        for(int j=0; j<nums.length; j++){\\n            if(nums[j] != val){\\n                nums[i] = nums[j];\\n                i++;\\n            }\\n        }\\n        return i;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        for(int j=0; j<nums.length; j++){\\n            if(nums[j] != val){\\n                nums[i] = nums[j];\\n                i++;\\n            }",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1567813,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1761692,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1697251,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1576937,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1898202,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1746065,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1571069,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1567347,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1796007,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1566738,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1567813,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1761692,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1697251,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1576937,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1898202,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1746065,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1571069,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1567347,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1796007,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1566738,
                "content": [
                    {
                        "username": "HiCode",
                        "content": "For this input it is giving output as wrong answer.\\n[3,2,2,3] and val=3\\nMy answer is 2\\nIt is saying expected answer is [2,2].\\nNow I am confused that I have to return and array or the count of elements (i. e. and integer)."
                    },
                    {
                        "username": "GauravPandey999",
                        "content": "you have to return the no of elements not equal to given key, but you are returning no of elements equal to key\\n"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "You Just need to Count the elements "
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Try Running this one!\\nint removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "vishuraj2427",
                        "content": "You have to return the total number of elements present in the final array but keep one thing in mind array should be in-place"
                    },
                    {
                        "username": "awoldt",
                        "content": "exactly what i was thinking"
                    },
                    {
                        "username": "jeffala",
                        "content": "[@SanskarBabel](/SanskarBabel) this makes sense, the output has to match the exact numbers not just be the correct count. They should do a better job explaining that the actual return val is just the count though. Then again I am not paying for this service so.... "
                    },
                    {
                        "username": "Sanyum_Manhas",
                        "content": "You have to return the count of elements without the val in array"
                    },
                    {
                        "username": "bdedic",
                        "content": "You are returning count but you have to modify an array provided to you so it contains expected result. "
                    },
                    {
                        "username": "Spydermanno",
                        "content": "make an array but return an integer "
                    },
                    {
                        "username": "SanskarBabel",
                        "content": "You have to count the elements but there is a checker in the code that is checking for the array also so you have to modify the array also "
                    },
                    {
                        "username": "Code_Surgeon",
                        "content": "LeetCode: It does not matter what you leave beyond the returned K\\nAlso LeetCode :\\noutput [2, 2, 3]\\nexpected [2, 2]"
                    },
                    {
                        "username": "faye231019",
                        "content": "Because nums its already a list so you have to specify to insert the values "
                    },
                    {
                        "username": "Tejbad",
                        "content": "please check what you are returning, you should return the size of output array, this issue might be because you returned 3, which should be 2 in this case."
                    },
                    {
                        "username": "aosswal2",
                        "content": "i have the same problem."
                    },
                    {
                        "username": "SleakEffect",
                        "content": "if the val = 3, then it shouldn\\'t be part of the output if you return k "
                    },
                    {
                        "username": "Rishi-jain",
                        "content": "i think it because you returned 3 from the function hence it is printing 3 elements instead of 2\\n"
                    },
                    {
                        "username": "steve1031",
                        "content": "Answer does not seem to be correct for this case.\\n\\nInput\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "you need to return the number of elements which are not equal to val (i.e., you need to return 8-3 = 5)"
                    },
                    {
                        "username": "DraconisRaveusRex",
                        "content": "The complier will say that the expected answer is an array, (due  to the weird way leetcode\\'s compiler works). The description is incorrectly and it means to say: consider the number of elements in nums which are not equal to val \"as\" k, to get accepted, you need to do the following things. So the return value is supposed to be the number of items in the array that aren\\'t val. Unfortunately LeetCode and HackerRank sometimes forget to spellcheck these questions..."
                    },
                    {
                        "username": "ahmadfaiz8720",
                        "content": "just return the index value "
                    },
                    {
                        "username": "narekpetrosyan",
                        "content": "Its definitely not correct, faced the same issue. "
                    },
                    {
                        "username": "datsenkoboos",
                        "content": "[@bdedic](/bdedic) thank you!"
                    },
                    {
                        "username": "bdedic",
                        "content": "If the 3 is your return int as result that is why your answer is not correct. Check description of problem. K or returned int is the numer of elements in an array after the specific value is removed. In your case it should be 5."
                    },
                    {
                        "username": "MichaelMcG5100",
                        "content": "Order of output doesn\\u2019t matter"
                    },
                    {
                        "username": "ishbar",
                        "content": "I really dislike whoever made this, and the other similar problems.\\n\\n`nums[:] = [x for x in nums if x != val]` works, but (for whatever reason) `nums = [x for x in nums if x != val]` does not. \\n\\nThis is really confusing to me when the problem description states \\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@dkochetov](/dkochetov) I still dont get it "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "[@kbventures](/kbventures) These String manipulations are not easy."
                    },
                    {
                        "username": "ricflairdrip",
                        "content": "This is because when you slice a list it creates a new list object that references the original list\\'s elements. The second method creates an entirely new list object with new elements. Shallow vs deep. The question specifies that it must be in-place (return the same list)."
                    },
                    {
                        "username": "dkochetov",
                        "content": "This is really important for beginner to understand the difference between passing by value and passing by reference. Which types can be modified in-place, which can not. Pure functions and other theoretical knowledge that will greatly benefit you in your work.\\n\\nEspecially in python, that implicitly works with pointers. If you don\\'t have any experience with C, it can be hard to comprehend."
                    },
                    {
                        "username": "vetor",
                        "content": "[@Lexi36871](/Lexi36871) brecause strings are immutable in python without [:] this u are just creating a new string with different location thats the reason why its not working :)"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "This problem is related with the way the question is judged rather than the way it\\'s phrased. The idea of doing something in-place implies moving the elements around in the original array, not allocating a new array and then assigning it to the old one.  The for-comprehensions are not in-place solutions and are not O(1) in memory, even though the nums[:] syntax replaces the elements of the old array with the elements of the new array, therefore passing the tests."
                    },
                    {
                        "username": "kbventures",
                        "content": "[@jimmyhodl](/jimmyhodl) This problem is very very very poorly explained. "
                    },
                    {
                        "username": "seal_here",
                        "content": "only way to check if array is modified inplace in python is to check the variable\\'s storage location (which stores reference to the memory address of variable) which is not modified in the first case while second one modifies it."
                    },
                    {
                        "username": "LCPaily",
                        "content": "Yeah the output is just straight up wrong for the latter. This is a bad problem for anyone using Python"
                    },
                    {
                        "username": "Lexi36871",
                        "content": "[@jimmyhodl](/jimmyhodl) I have the same problem... Any idea why without [:] won\\'t work?"
                    },
                    {
                        "username": "manicko",
                        "content": "Thank you!!! I\\'ve spent a whole day to find why this approach does not accepted"
                    },
                    {
                        "username": "jimmyhodl",
                        "content": "Exactly. My first thought. Spent almost an hour figuring why this comprehension isn\\'t accepted here while it prints correct values on my IDE. Filling list with numbers to preserve the lenght doesn\\'t help either. It appears you don\\'t have to keep all the initial elements in list. This code with [:] works great"
                    },
                    {
                        "username": "niamlaylor",
                        "content": "This is a vert poorly written question. Clarity is key in coding. Bad requests get bad code!"
                    },
                    {
                        "username": "rwatso",
                        "content": "It\\'s because English is not the first language of the site itself and I think most of the people here. And programmers like to over-complicate things in general. Not a good combination when you\\'re trying to learn a complex discipline. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "I want to comment this on half of Leetcode\\'s challenges - Clarity is severely lacking on this site"
                    },
                    {
                        "username": "centroid",
                        "content": "[python]\\n\"Case2\" IS WRONG!\\n========\\nnums = [0,1,2,2,3,0,4,2]\\nval = 2\\nOutput = [0,1,3]      # stop checking elements after getting 3 instead of 4\\nExpected = [0,1,4,0,3]\\n=========\\nCorrect expected nums is [0,1,3,0,4]! so testcase2 is incorrect! "
                    },
                    {
                        "username": "mochiball",
                        "content": "[@Maheshwar_Bhat](/Maheshwar_Bhat) You can return in any order. Its not wrong "
                    },
                    {
                        "username": "here_we_stand",
                        "content": "bruh, check the description. It\\'s said that you can change the order of elements, so both [0,1,4,0,3] and [0,1,3,0,4] are correct. Also it seems that you equated k to the number of values equal to val, instead of number of values NOT equal to val"
                    },
                    {
                        "username": "Mahzarasua",
                        "content": "I thought the testcase was incorrect and for some reason it didn\\'t make any sense. However if you iterate through the array and the first val you find you replace it with the number iterating through the array in reverse order you will get the testcase2 output. Think about it, you find the first 2 and then you go in reverse order through the array, the last number is another 2 so you skip it and then you got it."
                    },
                    {
                        "username": "Maheshwar_Bhat",
                        "content": "Absolutely true. This test case is incorrect."
                    },
                    {
                        "username": "samsonzijian",
                        "content": "Input:\\t[3,3], 5\\n\\nOutput:\\t[3,3,0]\\n\\nExpected:\\t[3,3]\\n\\nSo I don't understand, what does this mean..."
                    },
                    {
                        "username": "mskamel",
                        "content": "It mean that the number of elements not equal to val that you return from your removeElement() function is incorrect. This is means that the value you return from your function might be greater or less than the value that you returned from your function."
                    },
                    {
                        "username": "StefanelStan",
                        "content": "It expects to return 2: an array of size 2, not size 3. \\nIf your input is [3,3,3], val = 3, it expects 0."
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "I think you need to decrease the size of the array when you removing a number."
                    },
                    {
                        "username": "jas688",
                        "content": "There seems to be significant variance in excution time for the same submitted code. I wonder if this is correlated with server load?"
                    },
                    {
                        "username": "Benties",
                        "content": "delete this one"
                    },
                    {
                        "username": "mochiball",
                        "content": "Its not that bad lol "
                    },
                    {
                        "username": "oscarbatori",
                        "content": "Was just working through some basic algorithms in JavaScript to get to know the language, and began working on [Remove Element][1], which seems to be a very popular one.\\n\\nThe question doessn't seem to make sense: \"Given an array and a value, remove all instances of that value in place and return the new length. The order of elements can be changed. It doesn't matter what you leave beyond the new length.\"\\n\\nThis seems to imply the question merely requires counting the remaining elements, which is trivial. Yet the submission seems to want the array with the remaining elements. The parameters seem to agree with the way the question was posed:\\n\\n    /**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\n\\n\\n  [1]: https://leetcode.com/problemset/algorithms/?cong=true"
                    }
                ]
            },
            {
                "id": 1967481,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1568088,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1920625,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1808506,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1957683,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1883960,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1844325,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1763219,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1576385,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 2031025,
                "content": [
                    {
                        "username": "tristancrudge",
                        "content": "One of the worst questions on the platform hands down. \\n\\nSays: Return k\\nI: Return k\\n\\nResult: Error expected an array\\nI: Change to an array\\n\\nResult: VALUE NOT EXPECTED\\n\\n\\nGet out"
                    },
                    {
                        "username": "phigh",
                        "content": "I am curious, right now there are 3 times more likes than likes. Strange"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is really strange."
                    },
                    {
                        "username": "YadavVicky",
                        "content": "For all those who are confused. Question is just asking one thing.\\nYou have return the index not count (as I am seeing here in discussion) but the index.\\nFor Eg:- nums = [13,11,11,13], val = 13, by removing the value they mean it to be still in the array but at the end so in case it will be [11,11,13,13], now you have return the index after which the val in this case it is 13 will start to occur in the array. So in this case it is index 2. Because after index 2 which is index 3 and 4, we have 13.\\n"
                    },
                    {
                        "username": "bullis",
                        "content": "I think the indices you reference are off by 1. Index 3 is the last element in the array and index 4 is out of bounds past the end of the array; the array has only 4 elements total (indices 0 - 3)."
                    },
                    {
                        "username": "almostcolin",
                        "content": "Okay... But in the first test case nums=[3,2,2,3] and val=3. I can hard code it to return 2 and I get the output [3,2]..."
                    },
                    {
                        "username": "vishyarjun1991",
                        "content": "has anyone felt that this problem is bit annoying for a Easy? I feel this is slightly above easy, could have been a medium."
                    },
                    {
                        "username": "bubbakill7",
                        "content": "The wording is confusing, but mediums are much harder. "
                    },
                    {
                        "username": "charlescolfer",
                        "content": "Incredibly confusing and unhelpful description, like most of Leetcode unfortunately... no quality control... \\n\\nAll you need to do is return the number of \"Nums\" (Count, Answer, whatever Int variable you want to name it as) that aren\\'t included in your import. A one line loop can do it. \\n\\nExample 1:\\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nLOOP THROUGH NUMS, check for 3\\n\\nLogic: is val nums[i]? If NOT, increase Count by 1. Return Count. \\n\\nIs Val (3) === nums[i](3)? yes? next\\nIs Val (3) === nums[i](2)? no? Count += 1\\netc. \\n\\nExtremely easy problem that is complicated infinitely by the terrible description."
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the two pointer approach running in O(n) time:\nhttps://www.youtube.com/watch?v=pGKDzt0gk-A\n"
                    },
                    {
                        "username": "user7903L",
                        "content": "Seems like this problem is not property set up and also is completely broken. At least for typescript. \\n\\nFirst of all by default the function is defined to return a `number.` But when you run the test the output expected is an array of numbers `number[]`.\\n\\nSecond something is completely broken making this unsolvable (for typescript at least that is). When running test case one the expected output is `[2,2]`. Even if I hardcode the function to return `[2,2]` the output of my function ends up being an empty array. I tried multiple time."
                    },
                    {
                        "username": "iota_by_0",
                        "content": "My code is running perfecty in vsCode but in leetcode it is showing me runtime error....\\nwhy ?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for (int i = 0; i < nums.size(); i++)\\n    {\\n        int ele = nums[i];\\n        if (val == ele)\\n        {\\n            for (int j = i+1; j < nums.size(); j++)\\n            {\\n                if (nums[j] != val)\\n                {\\n                    swap(nums[j], nums[i]);\\n                }\\n            }\\n        }\\n    }\\n    for (int i = nums.size(); i >= 0; i--)\\n    {\\n        if (nums[i] == val)\\n        {\\n            nums[i] = -1;\\n        }\\n    }\\n    int count = 0;\\n    for (int i = 0; nums[i] != -1; i++)\\n    {\\n        count++;\\n    }\\n    return count;\\n    }\\n};"
                    },
                    {
                        "username": "Rajneeshyadavg",
                        "content": "it\\'s taking too much time. "
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/af85056a-5109-4f6b-84df-f45b39145912_1644805304.85511.jpeg)\\n"
                    },
                    {
                        "username": "2020B0101194",
                        "content": "nums.erase(remove(nums.begin(),nums.end(),val),nums.end());\\njust one line code......."
                    },
                    {
                        "username": "DyuldinKS",
                        "content": "The most unclear description I\\'ve ever seen on leetcode. Especially for an easy task. Wasted time."
                    }
                ]
            },
            {
                "id": 1858171,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 1697305,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 1898633,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 1997392,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 1791526,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 1737034,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 1574657,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 1569471,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 2045634,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 2044368,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\nHere is two ways to solve this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "kswa",
                        "content": "\\nwhy my cod does not work ?\\nvar removeElement = function(nums, val) {\\n    let newnums =[]\\n    nums.forEach(item =>{if(item !==val){\\n        newnums.push(item)\\n    }})\\n    return newnums.length;\\n};"
                    },
                    {
                        "username": "nafajardo637",
                        "content": "Have you tried putting it in a fish tank."
                    },
                    {
                        "username": "RuslanZinovyev",
                        "content": "Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "mr_president",
                        "content": "dunno why this is downvoted so much, just read the question properly. "
                    },
                    {
                        "username": "dimfu",
                        "content": "This problem sucks ass"
                    },
                    {
                        "username": "icy93770",
                        "content": "\\uC544\\uB2C8 \\uC774\\uAC70\\uB97C \\uC815\\uB2F5\\uC744 \\uBC30\\uC5F4\\uB85C \\uD558\\uBA74\\uC740 \\uD1A0\\uC885 \\uD55C\\uAD6D\\uC740 \\uC54C\\uACA0\\uB0D0\\uACE0\\uC694!!!! "
                    },
                    {
                        "username": "sanjay_bhat",
                        "content": "After submitting the code, I was looking in the chart for the code with least runtime...\\nHow is a code that has nested for loops be the best performing code? When my solution and different variants which do the same with just a single iteration be slower than nested for loops?\\n\\nI am really confused, Is the time distribution chart on Leetcode flawed or am I missing something fundamental?\\n"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "[@KovDimaY](/KovDimaY)  It isn\\'t completely random though"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Do not mind that chart, it makes no sense. I also had the same concern after 1 or 2 first submissions and then I realised that the statistics that they provide is just a random numbers generator. You can check it submitting the same code several times in a row. Sometimes when I did it 5 times, the results told me that my code is better than 99% of the submissions and then the same code was better than 5% in another try. Is just super misleading and stupid. So just focus on solving problems and check other solutions just for getting some new ideas of how to solve them. Do not compare metrics, they just make no sense."
                    },
                    {
                        "username": "perekhodovalexey",
                        "content": "Obvoiusly there is a typo in the description:\\n\\nif you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\\n\\nSince 3 is the number to remove [2, 2, 0, 0] can be accepted, not [2, 3, 0, 0]"
                    },
                    {
                        "username": "big_big_orange",
                        "content": "![image](https://assets.leetcode.com/users/big_big_orange/image_1554384065.png)\\n"
                    },
                    {
                        "username": "ccristiany339",
                        "content": "i think people forget THIS GOES INTO THE SOLUTIONS TAB"
                    },
                    {
                        "username": "nagyabonyigergo",
                        "content": "Hello!\\n\\nUnfortunately, I don\\'t see the error, what am I doing wrong? I also printed the array because I couldn\\'t see where the error was! Thank you for your help!\\n\\n`func removeElement(numbers []int, flag int) int {\\ncount := 0\\nresultArray := []int{}\\n\\nfor index := 0; index < len(numbers); index++ {\\n\\tif numbers[index] != flag {\\n\\t\\tresultArray = append(resultArray, numbers[index])\\n\\t\\tcount++\\n\\t}\\n}\\n\\nfmt.Println(resultArray)\\nreturn count\\n}`\\n\\nStdout: [2 2] <-- This is what I got in PrintlN\\nOutput: [3,2] <-- LeetCode result\\nExpected: [2,2]"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You have to modify the original arrray in place. Not creating a new one."
                    },
                    {
                        "username": "LeetCoder-1711",
                        "content": "I wrote the code and ran the same in VS Code using nodejs, gets expected answer; while leetcode says Wrong answer."
                    }
                ]
            },
            {
                "id": 2029085,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 2026183,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 2013012,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 1965900,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 1956657,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 1949255,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 1802824,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 1710050,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 1700128,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 1576295,
                "content": [
                    {
                        "username": "cblakely",
                        "content": "This question is retarded and I\\'m skipping it."
                    },
                    {
                        "username": "mutongzi",
                        "content": "the description is terrible. it should just say\nmove all  values  not equal to val to the front of the array\ndone!"
                    },
                    {
                        "username": "GMatorin",
                        "content": "Whoever wrote the description can\\'t write in a clear way. The description doesn\\'t make sense."
                    },
                    {
                        "username": "mochiball",
                        "content": "I agree it is a bit vague. However, take your time reading it and you\\'ll understand the problem "
                    },
                    {
                        "username": "hurrycaner",
                        "content": "This question is totally broken for go"
                    },
                    {
                        "username": "mochiball",
                        "content": "Amazingly annoying question "
                    },
                    {
                        "username": "TrangBui-1999",
                        "content": "Be ware to use Javascript any array.prototype because it may not worked. I need to bulid from scratch with loop for()"
                    },
                    {
                        "username": "nroscillada",
                        "content": "[@thos25](/thos25) this does not work as well:\\n\\nnums = nums.filter((n) => {\\n    return n !== val;\\n  });\\n  return nums.length;"
                    },
                    {
                        "username": "thos25",
                        "content": "I think this might be an issue. I solved it using .map and it rejected it. \\n\\nconst removeElement = (nums, val) => {\\nlet k = nums.length\\nnum = nums.map(x => x === val ? k-- : null)\\nreturn k\\n}\\n\\nso then I was wondering if maybe the array has to be modified to remove/alter the elements that match val. So I did this and even tried a forEach to mix it up...but it also fails. \\n\\nconst removeElement = (nums, val) => {\\n    let k = nums.length\\n    nums = nums.map(x => x === val ? x = \"_\" : x = x).sort()\\n    nums.forEach(num => num == \"_\" ? k-- : null)\\n    console.log(k, `nums = ${nums}`)\\n    return k\\n}\\n\\nmeanwhile I did it in a for loop that does the exact same thing and it passed. So I think you might be right about it failing array prototype methods. "
                    },
                    {
                        "username": "user0291CQ",
                        "content": "This is the 3rd problem in a row with confusing directions. Someone mentioned Hackerrank. I think I\\'ll give that a try as well. I want to solve problems, not battle the directions. At the very least, I\\'ll be skipping all problems with significant dislikes."
                    },
                    {
                        "username": "JamesMEvansMBA",
                        "content": "This should work, but it doesn\\'t.  Why?\\nnums =Arrays.stream(nums)\\n            .filter(i -> i != val)\\n            .toArray();"
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "you must make update on the nums itselft"
                    },
                    {
                        "username": "barrettev",
                        "content": "\"nums\" is a reference to a mutable array allocated elsewhere in the program.  You can modify its content (nums[a] = b) and that will be reflected  by all references to the array.\n\nArrays.stream is creating a new array, and you're nums = Arrays.stream(...).toArray() is updating the local reference called nums to a new array rather than modifying the original array.\n\nYou can accomplish what you're trying to do by updating the content of the original nums reference with a forEach like this:\n\nArrays.stream(nums).filter(n->n!=val).forEach(n->{nums[k++]=n;});\n"
                    },
                    {
                        "username": "msss",
                        "content": "Your are creating a new array, that was not allowed.\\n"
                    },
                    {
                        "username": "apiwut_t",
                        "content": "why output different from my local machine\\ngolang\\n\\n `func removeElement(nums []int, val int) int {\\n    var ans [] int\\n    for i:=0;i<len(nums);i++{\\n        if nums[i] != val{\\n            ans = append(ans, nums[i])\\n        }\\n    }\\n    return len(ans)\\n}`\\n\\nresult on test case 1 \\ninput\\n`nums = [3,2,2,3]` `val=3`\\noutput `[3,2]`\\nit should be `[2,2]` like i run this code on my computer"
                    },
                    {
                        "username": "pranaseptia21",
                        "content": "![image](https://assets.leetcode.com/users/images/f7db61c6-5a6f-4924-80aa-3cd3647f0564_1643191666.3219159.png)\\n"
                    }
                ]
            },
            {
                "id": 1575931,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 1573810,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 1572969,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 1576433,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 2076013,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 2074561,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 2069922,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 2068456,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 2068008,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 2067563,
                "content": [
                    {
                        "username": "Dark007",
                        "content": "I solved the move zeros question and this popped up as the follow up question. It has an ashtonishing like:dislike ratio. Is it because of the custom testcase? or does the problem seem repetitive."
                    },
                    {
                        "username": "RAMSWARUP-KULHARY",
                        "content": "\\treturn distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));"
                    },
                    {
                        "username": "linziin7748",
                        "content": "Testcase:\\n[3,3,2,2,3,2,1]\\n3\\n\\nThe expected shows [1,2,2,2].\\n\\n"
                    },
                    {
                        "username": "Lunazhang",
                        "content": "If  we only need count the number of unpicked value, why cannot use this solution:\\n\\nreturn len([x for x in nums if x != val])"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "[@cswartzell](/cswartzell) sometimes it\\u2019s better to make operations in place, so you don\\u2019t need to use additional memory."
                    },
                    {
                        "username": "cswartzell",
                        "content": "You are only RETURNING the value, it still asked you to modify the array in place. Not a great practice, asking for a side effect to be the intended goal of a function, but thats what the problem wants., "
                    },
                    {
                        "username": "Patricklmm7",
                        "content": "For the input is [3,2,2,3] val = 3, the output should be [2,2] and nums.length = 2, but the system said it is wrong answer..."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "nums.length is 4\\nreturn k = 2"
                    },
                    {
                        "username": "Hamii",
                        "content": "Yet another broken problem. I just came back from a similar one. You can\\'t be asking for us to return K, yet not check for K at all. Also, the second testcase is wrong. I really expected more from leetcode, given how big of a name they are. "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "It is not broken. 2.2 milion answers have been submitted successfully. The order of the elements in the array does not matter."
                    },
                    {
                        "username": "Halvess",
                        "content": "This question is not right (at least the judging part). \nFor testing purposes I did the following code:\n```\nnums=[2], val = 3\nvar removeElement = function(nums, val){\n if (nums.length == 0 && nums[0] !== val) return 0\n}\n```\nI got this:\n```\nOutput: []\nExpected: [2]\n```\n\nI didn't even touch the array, wtf"
                    },
                    {
                        "username": "yashwantraokoyeri",
                        "content": "You are supposed to return the length of the array, if you return 1, you will get the expected output."
                    },
                    {
                        "username": "user1815P",
                        "content": "it was really easy!\\n:)"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "I think it is medium."
                    },
                    {
                        "username": "maxvdsluis",
                        "content": "Outlined description exclaims you have to return k.\\nI\\'ve found I could simply skip this and still get 100% test passing."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "No that gives an error. \\nWhich programming language would that be?"
                    },
                    {
                        "username": "_thomash_",
                        "content": "The question needs reworking as it doesn\\'t take into consideration the answers that have the first k elements in a different order (which should be admissable looking at the description of the question)."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is not sorted."
                    }
                ]
            },
            {
                "id": 2057405,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2057396,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2052347,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2050695,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2050478,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2050406,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2049267,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2048241,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2048140,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2047705,
                "content": [
                    {
                        "username": "vtu13227",
                        "content": "Why below code is not working if iam getting the output as expected\\n\\nvar removeElement = function(nums, val) {\\n  for(let i=0;i<nums.length;i++){\\n      if(nums[i]===val){\\n          nums.splice(i,1)\\n      }\\n  }\\n  return nums\\n};"
                    },
                    {
                        "username": "isydor",
                        "content": "you need to return k - number of elements that are not equal to val, not nums itself."
                    },
                    {
                        "username": "vtu13227",
                        "content": "Why the below code is giving me the wrong output. When i debugged through VS code it is working as expected\\n\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n    const filteredArray = nums.filter(num=>num!==val)\\n    return filteredArray\\n};"
                    },
                    {
                        "username": "Krishna-anil",
                        "content": "can anyone tell me why it is showing runtime error\\n\\n\\nint removeElement(int* nums, int numsSize, int val)\\n{\\n    int i,k=0;\\n    for(i=0;i<numsSize;i++)\\n    {\\n        if(nums[i]==val)\\n        {\\n            for(int j=i;j<numsSize;j++)\\n            {\\n                int temp=nums[j];\\n                nums[j]=nums[j+1];\\n                nums[j+1]=temp;\\n            }\\n            numsSize--;\\n            i--;\\n        }\\n        else\\n        {\\n            k++;\\n        }\\n    }\\n    return k;\\n}\\n\\n"
                    },
                    {
                        "username": "isydor",
                        "content": "maybe because you have three inputs (int* nums, int numsSize, int val) not two (int[] nums, int val)?"
                    },
                    {
                        "username": "myCatsName",
                        "content": "The description is problematic and unclear. And the expected return WRT the nums array is really too hard to understand from what is written. Further, the \"Output\" when running tests is clear as mud. Return an int length and Output sees an array, nothing matches what we do in IDE. Ultimately needed to \"cheat\" just to understand what is required."
                    },
                    {
                        "username": "ersurajaky",
                        "content": "My code is given expected output. But here it is showing wrong code."
                    },
                    {
                        "username": "DiPipero",
                        "content": "wtf is:\n `assert k == expectedNums.length;`\n\nit shouldn't be here. it isn't common of all languages. \nThis is the worst written problem in all leetcode"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "That is Java code. It checks your solution, if k has the correct value."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "assert is checking the boolean condition and is throwing an exception if it is false."
                    },
                    {
                        "username": "Aditya_Gupta11",
                        "content": "nums =\\n[2]\\nval =\\n3\\n\\nUse Testcase\\nOutput\\n[]\\nExpected\\n[2] can anyone tell me where is problem\\n"
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "You shall remove 3 from the array, there is none, so you return the array with the 2."
                    },
                    {
                        "username": "kothariayush025",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int[] ans = new int[nums.length];\\n        int count =0;\\n        int k =0;\\n        for(int i =0; i<nums.length;i++){\\n            if(nums[i]==val){\\n                count = count+1;\\n                continue;\\n            }\\n            else{\\n            ans[k] = nums[i];\\n            k++;\\n            }\\n        \\n        }\\n         System.out.println(nums.length-count);\\n        System.out.println(Arrays.toString(ans));\\n        return nums.length-count;\\n    }\\n}\\n\\nI am getting the output as [2,2,0,0] and count matches 2, Why does it show the output as [3,2]? Can anyone explain\\n"
                    },
                    {
                        "username": "Saalim_k",
                        "content": "can someone help me understand what im doing wrong here?\\n\\nit says my output is [] but when i run the script on chrome console i get the correct output.\\n\\nvar removeElement = function(nums, val) {\\n\\n    var i = 0;\\n    var j = nums.length-1;\\n    var k = 0;\\n    while(i <= j)\\n        if(nums[i] == val){\\n            while(nums[j] == val){\\n                j--;\\n            }\\n            var temp = nums[j];\\n            nums[j] = nums[i];\\n            nums[i] = temp;\\n            j--;\\n            i++;\\n            k++;\\n        }\\n        else{\\n            i++;\\n        }\\n    return nums\\n};"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You should return k instead of nums. There are other errors too, for example what happens if the array is all val?"
                    },
                    {
                        "username": "ZubriQ",
                        "content": "OMG. this \\'problem\\' is so bad. Don\\'t waste your time here."
                    }
                ]
            },
            {
                "id": 2043174,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2039902,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2037585,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2036912,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2035772,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2030691,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2027004,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2026058,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2021521,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2017533,
                "content": [
                    {
                        "username": "adamstrejcovsky",
                        "content": "It does not matter what you leave beyond the returned k (hence they are underscores). - this is not true."
                    },
                    {
                        "username": "SomtoJF",
                        "content": "Do they expect to mutate the original array? My value for k seems to be correct but it is checking against the input array even after I reassign nums to the array I created to solve the problem."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "Yes, modify the input array in place, without using a second array."
                    },
                    {
                        "username": "Naad420",
                        "content": "## Leetcode Python3 Compiler is bugged, I tried running the same code in Pycharm and it works like a charm(pun intended)."
                    },
                    {
                        "username": "overflow0x",
                        "content": "Poorly written, wrong return type, incorrect test case."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "What?"
                    },
                    {
                        "username": "ebarcly",
                        "content": "All they are really asking is to return the size of the modified array, not the modified array itself. Using a pointer to keep track of the `val` at index in `nums` should be enough to count up to the size of the mod array. "
                    },
                    {
                        "username": "ebarcly",
                        "content": "[@Tom_Dev](/Tom_Dev) correct, where that reference counts up to k."
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "The array is modified in place through the reference parameter."
                    },
                    {
                        "username": "mmsarkar621",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        \\n        int count = 0;\\n\\n        for(int i=0; i<nums.size(); i++){\\n            if(nums[i] != val){\\n                nums[count] = nums[i];\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "MOVAPS",
                        "content": "This problem marked my 200th leetcode solution."
                    },
                    {
                        "username": "bobspace",
                        "content": "The description is misleading. The solution tester looks for the elements in a specific order so the passage that says: \"The order of the elements may be changed.\" is inaccurate.\\n\\nI can log out my `nums` array and it has the correct elements, but in a different order, but the \"output\" of my testcase is just an array that contains the correct elements until the checker found a value not in its prescribed results array."
                    },
                    {
                        "username": "Bl4kcrow",
                        "content": "Using Dart language, I have tested a couple of solutions in the DartPad and they work well, but the same code doesn\\'t work here "
                    },
                    {
                        "username": "Francof",
                        "content": "var removeElement = function(nums,val) {\\n     for(let i = 0; i < nums.length; i++ ){\\n       if(nums[i] == val){\\n         nums[i] = null\\n       }\\n       \\n    }\\n  nums = nums.join(\\'\\').split(\"\")\\n  return nums\\n};\\n\\n\\nCan someone tell me why this isn\\'t working? "
                    },
                    {
                        "username": "Tom_Dev",
                        "content": "null is the end of the string. You have to copy the next element in place."
                    }
                ]
            },
            {
                "id": 2011244,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 2009276,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 2007542,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 2001885,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 2001838,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 2000701,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 1997374,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 1996039,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 1994561,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 1993254,
                "content": [
                    {
                        "username": "shivx_444",
                        "content": "\\n1. Initialize two pointers, `i` and `j`, both set to 0.\\n2. Iterate through the array using pointer `i`:\\n   - If `nums[i]` is not equal to `val`, assign `nums[j] = nums[i]` and increment both `i` and `j`.\\n3. After the loop, return the value of pointer `j`, which represents the length of the modified array.\\n\\nThis algorithm efficiently removes all occurrences of the specified value `val` from the array while maintaining the relative order of other elements."
                    },
                    {
                        "username": "hoodiCS",
                        "content": "Input\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\n\\nMy output: \\n[0,1,4,0,3,2]\\n\\nim using print(nums[:x])   here x is len(nums)-k\\nbut when is used  nums[:] = [x for x in nums if x != val] and printed nums it worked why is that"
                    },
                    {
                        "username": "priyakhandelwal65",
                        "content": "It seems mentioned case is wrong. \"sort(nums, 0, k); // Sort the first k elements of nums \" It is sorting the given array not the  expected array and then comparing it which is incorrect way to compare. "
                    },
                    {
                        "username": "cabouey",
                        "content": "Can anyone help me identify why this is failing tests? The output is not correct:\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i = 0\\n        count = 0\\n        while i < len(nums):\\n            if nums[i] == val:\\n                count += 1\\n                if i == len(nums)-1:\\n                    nums = nums[:i]\\n                else:\\n                    nums = nums[:i] + nums[i+1:]\\n            else:\\n                i += 1\\n            \\n        print(f\\'final: {nums}\\')\\n        return len(nums)"
                    },
                    {
                        "username": "Nitaydas",
                        "content": "simple rules to understand:\\n\\n1. iterate a loop for the size of nums.\\n2. remove all elements from the nums that are equal to the val or store all elements in another vector that are      not equal to val.\\n3. assign nums=vector(v) that was created for storing elements not equal to the val.\\n4. return the number of element that are not equal to the val or simply return the v.size(). \\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "That\\'s not in place as the question requests, and in many languages (and in c depending of the actual function signature), reassigning nums won\\'t actually modify the original nums "
                    },
                    {
                        "username": "AnkitModak",
                        "content": "I am a beginner and I was curious to know the same, why [:] this works and another doesn't. After doing some search on google and gpt, what I learnt was when you go through the second approach, the code is going through the same elements twice, also making a copy of nums which causes extra memory consumption (I believe the main reason for second approach not satisfying leetcode testcases). Also, when we use [:], the original memory location of the elements of nums is changing which in result of [3, 2, 2, 3] we get nums in the memory as [2, 2] which satisfies the leetcode testcase. \n\nYet to understand the time complexity of this solution!\n\nIt will be great if someone can give me a glimpse of it. Thank you in advance!\n"
                    },
                    {
                        "username": "PelegBN",
                        "content": "Does using built-in JS functions (like \\'splice\\' and \\'indexOf\\') allowed?\\nThe platform accepts the answer but will the interviewers?"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "It would depend on how you are using it. I think most of the algorithms for this problem that use indexOf do NOT have linear time complexity, which is a requirement in the question"
                    },
                    {
                        "username": "Parth7199",
                        "content": "Can someone spot what mistake I am making here? \\n  \\nint removeElement(vector<int>& nums, int val) {\\n        int k = 0; \\n        for (int i = 0; i < nums.size(); i++)  {\\n            if (nums[i] == val) \\n                nums.erase(nums.begin() + i);            \\n            else \\n                k++;\\n        }\\n        return k;\\n}\\n\\nThanks in advance."
                    },
                    {
                        "username": "Parth7199",
                        "content": "[@aryan_mittal](/aryan_mittal) Hi thanks for the reply and for sharing the code. Your code is very understandable and I see this was much simpler than what I made to be.\n\nSo, what I was trying to do was that I was removing the elements equal to val using the erase function, and keeping count of elements not equal to val in k. Then, after the for loop is terminated, I would have the count of elements not equal to val in k and I would have removed all elements equal to val. I am not 100% sure why it didn't work, but my guess is it has something to do with erase function's implementation. Regardless, I'll look into this and thank you!"
                    },
                    {
                        "username": "aryan_mittal",
                        "content": "actually I  didn't get what r u trying to do on ur program but according to the question u have put the element in the array removing the given val element \nhere is my code hope u find it understandable\n\nint size = nums.size();\n        int k = 0;\n        for(int i =0 ; i < size ; i++){\n            if(nums[i] != val){\n                nums[k++] = nums[i]; \n            }\n        }\nreturn k;"
                    },
                    {
                        "username": "madhura--03",
                        "content": "the question is too confusing."
                    },
                    {
                        "username": "dipesh1203",
                        "content": "This code running very well in my vs code but not passing test cases in  leet code and my all test cases are passing in vscode with same code what can i do?? please help.\\n"
                    }
                ]
            },
            {
                "id": 1987405,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1979805,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1979221,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1978573,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1977924,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1974642,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1974191,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1968896,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1962176,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1961921,
                "content": [
                    {
                        "username": "emilija-99",
                        "content": "For the same code, my machine is displaying me a correct value, but when i paste that code in this editor, doesn\\'t return same result . Can someone help me? "
                    },
                    {
                        "username": "Chenbao2021",
                        "content": "Can someone tell me why me code doesn\\'t work well ? \\nvar removeElement = function(nums, val) {\\n\\tnums = nums.filter((e) => e!== val).concat(nums.filter((e) => e=== val));\\n\\treturn nums.filter((e) => e!== val).length;\\n};"
                    },
                    {
                        "username": "ybbyun93",
                        "content": "I tried a following code below.\n\n        index = 0\n        for i in range(len(nums)):\n            if nums[i] == val: \n                nums[i] = nums[i+1]\n                index += 1 \n        return index\n\nand I got an IndexError in this line: nums[i] = nums[i+1]\n\nDoes anyone know why? Is because 'i' in for statement just gets itself in every loops by any chance?"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "in your code once you reach to the end its looking to add num[i+1] which doesn\\'t exists. try this code -     int ctr = 0;\\n        for (int i=0;i<nums.length;i++){\\n                if(nums[i]!=val){\\n                    nums[ctr] = nums[i]; \\n                    ctr++;\\n                }\\n\\n        }\\n        return ctr;"
                    },
                    {
                        "username": "mohitbharti",
                        "content": "Why this solution is not working on your portal -  \\n    List<Integer> list =  Arrays.stream(nums).boxed().collect(Collectors.toList());\\n         list.removeAll(Arrays.asList(val));\\n      return list.size();"
                    },
                    {
                        "username": "tsafackghokeng",
                        "content": "The description of this problem is very poor. In really don\\'t get what shall be done here"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Check hints to the problem.\nThey could help you."
                    },
                    {
                        "username": "kallask",
                        "content": "Testcase2 has an error. It returns output: [0,1,4] expected: [0,1,4,0,3]. I put my solution into both PyCharm debugger and Python Tutor Visualizer (just to make sure) - the output for nums should not be throwing an error. \\n\\nI am wondering if your testcase2 is accidentally reading to length of k? It seems to stop reading nums at index 2 which would correspond to this error. "
                    },
                    {
                        "username": "anarbaev_u",
                        "content": "Expected output in testcase 1: [2,2]\\nMy output: [2,2] and k = 2\\n\\nHowever,\\nTypeError: [2, 2] is not valid value for the expected return type integer[]\\n\\nI dont understand. I am returning answer as list with int values but it says invalid type???"
                    },
                    {
                        "username": "katariachirag14",
                        "content": "Can somebody please tell me, what is wrong with this code:-\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        l=0\\n        n=len(nums)\\n        for i in range(0,n):\\n            if nums[i]==val:\\n                nums.pop(i)\\n            else:\\n                l+=1\\n        return l\\n\\nNote:- For me it is giving the following error:\\nIndexError: list index out of range\\n    if nums[i]==val:\\nLine 6 in removeElement (Solution.py)\\n    ret = Solution().removeElement(param_1, param_2)\\nLine 35 in _driver (Solution.py)\\n    _driver()\\nLine 47 in <module> (Solution.py)\\n\\nAccording to my understanding, this should be within range of index."
                    },
                    {
                        "username": "alejandrorm",
                        "content": "You are iterating between [0,n) but also removing elements from the list, so the list won\\'t actually have length n while you go through it"
                    },
                    {
                        "username": "utkarshsingh2012",
                        "content": "Do use the condition that the numbers beyond k (number of elements which are not equal to val) can be have any value and the proceed."
                    },
                    {
                        "username": "giannismel",
                        "content": "Confusing. Not clear description or test cases"
                    }
                ]
            },
            {
                "id": 1956128,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1955578,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1954230,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1951370,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1950656,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1950241,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1948121,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1946997,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1945944,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1941489,
                "content": [
                    {
                        "username": "CORVUS047",
                        "content": "case 1 and case 2 are wrong for js"
                    },
                    {
                        "username": "KevJ123",
                        "content": "Wait, so when they ask us to \"remove all occurrences of val\" they don\\'t really mean to \"remove\" them? Who even made this problem? This is very, VERY poorly worded. \\n\\nFrom the hint given: \"We don\\'t technically need to REMOVE that element per-say, right?\"\\n\\nFirst of all, it\\'s per-se, not \"per-say\". Secondly, the problem does NOT \"clearly ask us\" to modify the array in-place. \"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place.\"\\n\\nDictionary definition of \"remove\":\\nverb.\\n1. take (something) away or off from the position occupied.\\n2. eliminate or get rid of.\\n\\nDictionary definition of \"modify\":\\nverb.\\n1. make partial or minor changes to (something), typically so as to improve it or to make it less extreme."
                    },
                    {
                        "username": "abhijeetkarmakar150",
                        "content": "If run my run code in Replit. I am getting the correct output but here is showing wrong output. I am not sure what\\'s wrong."
                    },
                    {
                        "username": "poorvi-vaish",
                        "content": " `[0,1,3,0,4,2]` is my output and the expected output is `[0,1,4,0,3]` and this is giving me wrong answer? Can anyone explain why?"
                    },
                    {
                        "username": "vaibh_1406",
                        "content": "AASAN Solution in PYTHON..!!!! \\nl = 0\\n        r = len(nums)-1\\n\\n        while l <= r:\\n            if nums[l] == val:\\n                del nums[l]\\n                l-=1\\n                r-=1\\n            l+=1\\n        return len(nums)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "bhowmicktanmoy999",
                        "content": "in the problem statement it is given that we can \" return the number of elements in nums which are not equal to val.\"\\nin my solution i have just counted no of non - target elements , so my solution is wrong . Can someone explain"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The problem asks to modify the input array in place to actually remove the target element, not just return the number of non target elements"
                    },
                    {
                        "username": "khalilkhedhri39",
                        "content": "i didnt understand it :/ \n// my try\n var removeElement = function(nums, val) {\n   while(nums.includes(val)){\n       nums.splice(nums.indexOf(val),1);\n   }\n   return nums.length;\n}; \ni didnt find other answer with less time complexity :/ i saw someone's solution but whene i turned it in my head it doesnt remove all the occurance of the val  , maybe iam idiot :/"
                    },
                    {
                        "username": "angelicawu",
                        "content": "For testcase nums=[2], val = 2, why [3] is not accepted as an answer?\\nIt seems that only empty list [] is accepted. \\nBut in this case, it should not care what the list is, but only check the first k=0 element in the list...\\nAm I understanding the question wrong...?"
                    },
                    {
                        "username": "vrishab",
                        "content": "Case 2 seems to be wierd: \\nmy code output: [\\n  0, 1,   4,   0,\\n  3, \\'_\\', \\'_\\', \\'_\\'\\n]\\n\\nexpected output: [0,1,4,0,3].\\nWhy did the test fail ?"
                    },
                    {
                        "username": "Jeffery_SLC",
                        "content": "The acceptance rate is around 50%. So, is that really easy level?\\n"
                    }
                ]
            },
            {
                "id": 1940891,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1940884,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1940830,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1937284,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1936399,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1935745,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1933546,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1932801,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1931734,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1927137,
                "content": [
                    {
                        "username": "a_sJoshi",
                        "content": "Dont worry about returning the array elements, just return the array size or no of elements in array.. the output expexted is tricky"
                    },
                    {
                        "username": "indraw705",
                        "content": "My output\\n3, [0, 1, 3, 0, 4] but expected answer is [0, 1, 4, 0, 3]\\n\\nwhy the order is changed ??"
                    },
                    {
                        "username": "javen09",
                        "content": "i test this in vsc and it gives the expected results but why does this not work in leetcode \\n\\n\\n\\nclass Solution:\\n    def removeElement(self, nums, val):\\n        integer_list = []\\n        underscore_list = []\\n        ans = []\\n        for i in nums:\\n            if i == val:\\n                underscore_list.append(\"_\")\\n            else:\\n                integer_list.append(i)\\n        \\n        my_list = integer_list + underscore_list\\n        print(my_list)\\n        \\n\\n        for j in my_list:\\n            if isinstance(j, (int,str)):\\n                if type(j) is int:\\n                    ans.append(j)\\n                else:\\n                    continue\\n\\n        k = len(ans)\\n        print(k)\\n        return k\\n\\n\\nsoln = Solution()\\nsoln.removeElement([1,7,3,4,5,3,3,2,2], 3)\\n\\n\\n"
                    },
                    {
                        "username": "SYED_HAMMAD",
                        "content": "class Solution {\npublic:\n    int removeElement(vector<int>& nums, int val) {\n        int count=0,a=0;\n        a=nums.size();\n        for (int j =0;j<a;)\n        { \n            if(nums[j]== val)\n            {\n              nums.erase(nums.begin() + j);    \n             count++;\n              a--;\n            }\n          else{\n              j++;\n          }\n        }\n       return count;       \n    }\n};                                                                                                                                                                                                                                                                                                                                                            this code is showing error for [0,1,2,2,3,0,4,2] case my output is [0,1,3] but it should be [0,1,4,0,3]  can anyone explain what is wrong with this code ?"
                    },
                    {
                        "username": "Priyansh1909",
                        "content": "Question is Correct here! is the right Code\\n int removeElement(vector<int>& nums, int val) {\\n       int i=0;\\n       int j=0; \\n       while(j<nums.size())\\n        {  if(nums[j]!=val){\\n            swap(nums[i],nums[j]);\\n            i++;\\n           }\\n           j++;\\n        }    \\nint k=i-1;\\nint counter=0;\\nfor(int i=0;i<=k;i++){\\n  counter=counter+1;\\n}\\n   return counter;\\n"
                    },
                    {
                        "username": "voskrebentsev",
                        "content": "It\\'s really strange. \\nIn my local vscode I got this: \\n[0, 1, 4, 0, 3, \\'_\\', \\'_\\', \\'_\\']  \\nand leetcode test shows me this:\\n[0,1,4] as my output \\nI pretty sure test is incorrect. Is it problem with python only?"
                    },
                    {
                        "username": "Richa_Chanpuriya",
                        "content": "testcase output does not seems correct as the it does not count left values but expecting it into output?\\ncorrect output=[2]\\nexpected output leetcode=[2,2]"
                    },
                    {
                        "username": "darsh297",
                        "content": "class Solution {\\n    public int removeElement(int[] nums, int val) {\\n    int i=0;\\n    for(int j=0;j<nums.length;j++)\\n    {\\n        if(nums[j] != val)\\n        {\\n         nums[i]=nums[j];\\n        i++;\\n        }\\n       \\n    }    \\n    return i;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you!\\nBut have you seen rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "maanyagarg",
                        "content": "I think there is some problem with this question, I tried to submit it for first time it didn\\'t work and showed Runtime Error, but then for the same solution it did."
                    },
                    {
                        "username": "Shi-Yueyang",
                        "content": "this problem sucks"
                    }
                ]
            },
            {
                "id": 1925160,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1920219,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1919178,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1914416,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1914321,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1911214,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1909197,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1908070,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1906530,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1903897,
                "content": [
                    {
                        "username": "yamunaanand2210",
                        "content": "According to the question , they said after the k elements whatever be the order of the elements, it doesn\\'t matter whatever is left behind. My answer is [0 , 1, 4, 0,3 ,0,4, 3]  and k=5 and it judges my answer to be wrong."
                    },
                    {
                        "username": "JuanSobalvarro",
                        "content": "This problem is just a lot of text to confuse you, remember, you only need to keep all numbers that are different of val at first and the array does not have to have in any place the val number, thats all you need to know.\\n"
                    },
                    {
                        "username": "moshrraf",
                        "content": "Gy\\'s How can I understand the Problem and solve the questions"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "const removeElement = (nums, val) => {\\n   let array = []\\n   for(i = 0; i < nums.length; i++){\\n       if(nums[i] != val){\\n           array.push(nums[i])\\n           array.sort()\\n       }\\n   }\\n   return array \\n\\n};\\n\\ncan somebody tell me why my output keeps returning empty but when I run it in VS Code it return the correct value"
                    },
                    {
                        "username": "EdwinCodes9",
                        "content": "Never mind I now understand that we weren\\'t suppose to create a new array "
                    },
                    {
                        "username": "91nunocosta",
                        "content": "The code presented in _Custom Judge_ section has an imprecision:\\n `for (int i = 0; i < actualLength; i++) {`\\n\\n`actualLength` isn\\'t defined. Also, the actual length of `nums` is greater than the number of elements to consider, _k_.\\n\\nShould the line be replaced by following?\\n `for (int i = 0; i < k; i++) {`"
                    },
                    {
                        "username": "245321733303",
                        "content": "can i get a brief explanation on this"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "So you should remove all elements in the list, wich euqals val and replace these with \"_\". In the end, you have to return the len of the list without \"_\" (For example: [8,9,1,\"_\",\"_\") len = 3) and the entire list. For example: \\nInput:\\nnums = [1,2,2,5,7,1,2]  val = 2 \\nOutput: \\n4, nums = [1,5,7,1,\"_\",\"_\",\"_\"]\\n"
                    },
                    {
                        "username": "shawnby222",
                        "content": "Don\\'t understand why this does not work. In javascript I just grab nums.length before modifying it with filter() to remove the val. After the filter I grab nums.length again and just subtract the before length with the after length to get k. It modifies the nums array correctly and returns k correctly why is it the \"wrong answer\"????\\n"
                    },
                    {
                        "username": "lightNight88",
                        "content": "I was having issues with it saying something like \"output: [2, 2, 3]    expected: [2, 2]\" but I realized that my return value was too large. Even though it doesn\\'t say it clearly, the return value must be correct for it to count your code as correct"
                    },
                    {
                        "username": "erikjm",
                        "content": "Why doesn\\'t this work? I\\'m totally stumped.\\n\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums = hi + bye\\n        return len(hi)"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code would work, but there is one  problem- it has to be \"nums[:]\". \\nThe corrected code is: \\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        hi = []\\n        bye = []\\n        for num in nums:\\n            if num != val:\\n                hi.append(num)\\n            else:\\n                bye.append(\"_\")\\n        nums[:] = hi + bye\\n        return len(hi)\\n"
                    },
                    {
                        "username": "Vikas_Chaudhary9966",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left=0;\\n        for(int right = 0;right<nums.size();right++)\\n        {\\n            if(nums[right]==val)\\n            continue;\\n            else\\n            nums[left++] = nums[right];\\n        }\\n        return left;\\n        \\n    }\\n};   Beats 100%"
                    }
                ]
            },
            {
                "id": 1899863,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1897091,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1896562,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1896021,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1895486,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1895433,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1891081,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1889949,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1889550,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1883690,
                "content": [
                    {
                        "username": "rayhanul17",
                        "content": "C#\n`nums = nums.Where( x => x != val).ToArray();\nreturn nums.Length;`\nThis code runs well in my PC & gives right answer. But wrong in leetcode. what is the issue?\nI had tried it instead of it\n`int c = 0;\n        for (int i = 0; i < nums.Length; i++)\n            if (nums[i] != val)\n                nums[c++] = nums[i];\nreturn c;`\n"
                    },
                    {
                        "username": "heyyyankit",
                        "content": "*don\\'t solve this*\\neven if code is correct, it gives wrong answer in some cases..\\nit also got more dislikes than likes"
                    },
                    {
                        "username": "NikGringo",
                        "content": "People! What\\'s wrong with this problem? \\nWhy this cod is not valid:\\nvar removeElement = function (nums, val) {\\n  return nums.filter(x => x !== val).length\\n};\\n\\nWHAAAAAAYYYYY !?!?!?!?!"
                    },
                    {
                        "username": "sohamkulkarni",
                        "content": "I passed case 1, having trouble with 2nd and beyond. Please help.\\n\\n\\n int i=0,j=nums.length-1,k=0;\\n        while(i<=j){\\n            while(nums[i] !=val){\\n                i++;\\n                k++;\\n            }\\n            while(nums[j]==val){\\n                j--;\\n            }\\n            if(i<j){\\n                nums[i++] = nums[j--];\\n                k++;\\n            }else{\\n                return i-1;\\n            }\\n                \\n        }\\n        return i-1;\\n        //return k;\\n"
                    },
                    {
                        "username": "flarpon",
                        "content": "I tested my answer with an IDE and its output is exactly the same as the test cases\\' expected outputs, yet when I run my solution here it\\'s saying my output is wrong. Are some of the test cases wrong for this one?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could you please provide your complete code? "
                    },
                    {
                        "username": "rora24",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> List[int]:\\n        nums = list(filter(lambda x: x!= val, nums))\\n        k = len(nums)\\n        return k\\n\\nWhy is my solution not working?"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, there are some issues with your code. In the core, you understood the problem and you approach seems correct. However, make sure that your code is equivalent to this scheme: \nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2, _ , _ ]\n\n--> you have to return the entire list, where every \"target value\" is replaced with \"_\" and \"_\" is at the end of the list and the len of the list without \"_\". Hope this helped. If there are any questions, feel free to ask me :)"
                    },
                    {
                        "username": "Danmw1211",
                        "content": "## The following code fails (Javascript) ?? \n\n `var removeElement = function(nums, val) {\n    while (nums.indexOf(val) !== -1) nums.splice(nums.indexOf(val), 1);\n    return nums\n};`\n\n## With input: [3,2,2,3] it returns output '[]' apparently, but when testing in VSCode the exact same function returns [2,2] (expected answer). Please could someone explain!?"
                    },
                    {
                        "username": "Virali_Thaker",
                        "content": "I tried this way but Leetcode is not accepting my answer\\nvar removeElement = function(nums, vl) {\\n    var test = nums.filter((num)=> num !== vl)\\n    return test\\n};\\nremoveElement([3,2,2,3],3);"
                    },
                    {
                        "username": "Laofeng",
                        "content": "Testcase 2 is evaluated wrong in c#\\n\\nmy array is filled as discribed in description.\\n\\nOutput\\n[0,1,3]\\nExpected\\n[0,1,4,0,3]\\n\\nIn reality its: \\n[0,1,3,0,4,0,4,2] (last 3 are irrelevant)"
                    },
                    {
                        "username": "Rangaraaja",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int start=0,end=nums.size()-1;\\n        int count=0;\\n        while(nums[end]==val){\\n            end--;\\n            count++;\\n        }\\n\\n        while(start<=end){\\n            if(nums[start]==val){\\n                count++;\\n                nums[start]=nums[end];\\n                nums[end]=val;\\n                end--;\\n            }\\n            start++;\\n        }\\n        return count;\\n    }\\n};\\n\\nWhat is wrong with this code why iam getting wrong"
                    }
                ]
            },
            {
                "id": 1879738,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1878307,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1869906,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1867507,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1858293,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1858253,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1857637,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1854656,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1851872,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1844666,
                "content": [
                    {
                        "username": "Asifa7",
                        "content": " for i in nums:\\n            if i==val:\\n                nums.remove(i)\\n\\nthis code is not running in case 2 can some one plz explain"
                    },
                    {
                        "username": "Ssekajja_Wavamuno_Isaac",
                        "content": "I just don\\'t know if its server issue but the logic is simply iterating through the array and check if the current position if NOT equal to val and then write that element to the current position. But i just don\\'t know why the test case of [3, 2, 2, 3] is a menace."
                    },
                    {
                        "username": "Irfan_7",
                        "content": "its a real tricky question but you should have a simple intution of  moving the elements ( which r equal to val ) , to the last of the array and simply get the track of yr 1st pointer & returns the number of times yr 1st pointer moved.\\nupvote me if it helped :>  "
                    },
                    {
                        "username": "Mshashikanth",
                        "content": "i\\'m a dummo took 3hr\\'s to solve this one "
                    },
                    {
                        "username": "paulon_z",
                        "content": "Im not sure why is this wrong, please clarify your description as it is soo confusing. please make clear the requirements and output, and if you need some output arrangement to be follow please indicated thoroughly. \n ` \nclass Solution(object): \n\n    def moveNumber(self, nums, index):\n        if index <= len(nums)-1:\n            if nums[index] == None:                \n                return self.moveNumber(nums, (index+1))\n            dummy = nums[index]\n            nums[index] = None\n            return dummy \n        else:\n            return None        \n\n    def removeElement(self, nums, val):\n        deletedNums = 0\n        size = len(nums)\n        for i,v in enumerate(nums):            \n            if nums[i] == val:                \n                nums[i] = None\n                deletedNums += 1        \n        for i,v in enumerate(nums):             \n            if nums[i] == None:\n                nums[i] = self.moveNumber(nums, (i+1))        \n        return (deletedNums - size)\n\n`\n"
                    },
                    {
                        "username": "shersingchouhan44",
                        "content": "Input\\nnums =\\n[3,2]\\nval =\\n3\\nOutput\\n[3]\\nExpected\\n[2]\\nSo, I don.t understand this types of output \\n... why?"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\n# class Solution(object):\\n#     def removeElement(self, list, val):\\n#         count = 0\\n#         for i in list:\\n#             if i == val:\\n#                 count += 1\\n#         for j in range(count):\\n#             list.remove(val)\\n```\\n```\\nclass Solution(object):\\n    def removeElement(self, list, val):\\n        while val in list:\\n            list.remove(val)\\n```\\nHere is two solutions of this problem\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "vaviditdoshi",
                        "content": "My answer in JavaScript. Why is this not working?\\n\\nvar removeElement = function(nums, val) {\\n    var newNums = [];\\n    //Solution loop\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            continue;;\\n        }\\n        else {\\n            newNums.push(nums[i]);\\n        }\\n    }\\n    return newNums;\\n};"
                    },
                    {
                        "username": "NANDINI-SINGHAL",
                        "content": "i\\'m not getting the mistake in my code\\n#include<stdio.h>\\nint removeElement();\\n int main(){\\n     int nums[]={2,4,5,2},val=2;\\n      removeElement(nums,val);\\n      return 0;\\n }\\n\\n\\n\\n\\nint removeElement(int* nums, int numsSize, int val){\\n    int i,count=0;\\n    for(i=0;i<=numsSize-1;i++){\\n        if(nums[i]!=val){\\n         nums[count]=nums[i];\\n         count=count++;\\n\\n        }\\n        else{\\n            count=count++;\\n        }\\n    }\\n \\n}"
                    },
                    {
                        "username": "ankush920",
                        "content": "Intuition\\npick and replace\\n\\nApproach\\ntraverse every element and do action on target element\\n\\nComplexity\\nTime complexity:\\nO(N)\\n\\nSpace complexity:\\no(1)\\n\\nCode\\n//find useful upvote it vro :)\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i =0 ;\\n        int n = nums.size();\\n        int j= n-1;\\n       int count =0;\\n\\n\\nfor( int i = 0 ; i<n ;i++)\\n{ \\n  if(nums[i]==INT_MAX)\\n  {\\n     continue;\\n  }\\n  if( nums[i]==val)\\n  {\\n   \\n     count++;\\n     nums[i] =nums[j];\\n     nums[j]=INT_MAX;\\n     j--;\\n     i--;\\n  }\\n}\\n\\n     \\nreturn (n-count);\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1841630,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1841546,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1841160,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1840560,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1840536,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1839864,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1839620,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1837864,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1835130,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1834836,
                "content": [
                    {
                        "username": "Yung_Shadi",
                        "content": "change your description, there is wrong information about what you need to return. To submit a decision you need to return length. WTF"
                    },
                    {
                        "username": "dnecklesportfolio",
                        "content": "This problem is verbose and there is so much upfront information. Maybe its my issue with reading word problems..The problem could be be even more direct, that even though you are removing the target number it\\'s okay if the final array still has the target number in it. Say that instead of \" It does not matter what you leave beyond the first k elements.\" It may be similar but one is tells the user what they could actually expect.\\n \\nAlso when I console log the final array it has more than what is in the output. Even though the test function is given, its so much details to keep track of in a rather simple question. It may be easier to display the entire result array in expected. I don\\'t know. This is just my opinion but they were so many times were I thought I had the wrong answer but no, I had to remember the 2 points made above."
                    },
                    {
                        "username": "rohantyagi6898",
                        "content": "not all the test cases are passing\\n/**\\n * @param {number[]} nums\\n * @param {number} val\\n * @return {number}\\n */\\nvar removeElement = function(nums, val) {\\n\\n    var cnt=0;\\n    var temp=0;\\n\\n    for (let i=0;i<nums.length-1;i++){\\n\\n        if(nums[i]!==val){\\n        \\n            nums[temp]=nums[i];\\n            temp++;\\n            cnt++\\n            \\n            \\n\\n        }\\n\\n    }\\n    return cnt;\\n}"
                    },
                    {
                        "username": "Almazino",
                        "content": "how to return 2 elements(;-;)?"
                    },
                    {
                        "username": "2003a54015",
                        "content": "int i = 0;\\n        for (int j = 0; j < nums.length; j++) {\\n            if (nums[j] != val) {\\n                nums[i] = nums[j];\\n                i++;"
                    },
                    {
                        "username": "manohardaram2128",
                        "content": "isnt this correct ?\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        #include<iostream>\\nusing namespace std;\\n\\nint arr[4],k,arr1[4],sum=0;\\ncout<<\"enter the value of k\";\\ncin>>k;\\ncout<<\"enter the elements\";\\nfor(int i=0;i<4;i++){\\ncin>>arr[i];\\n}\\nfor(int i=0;i<4;i++){\\n    if(arr[i]!=k){\\narr1[sum]=arr[i];\\nsum++;\\n}\\n}\\ncout<<\"the value is \"<<sum<<endl;\\nfor(int i=0;i<sum;i++){\\n    cout<<arr1[i];\\n}\\n\\nreturn 0;\\n\\n        \\n    }\\n};"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "By using this code, I can not pass the case 2.\nCan anyone help me plz?\nI have no idea. \nAll I want to know is just why it doesn't work.\n\n```python\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        [nums.remove(elem) if elem == val else None for elem in nums]\n        return len(nums)\n```"
                    },
                    {
                        "username": "wjleekr927",
                        "content": "I got it. Continuous elements are problem."
                    },
                    {
                        "username": "proalexv",
                        "content": "The question is here written wrong, what they want is an array without the said value while instead the question is asking for a single int with the number of values that remain... "
                    },
                    {
                        "username": "Ackbar90",
                        "content": "The question is not even clear"
                    },
                    {
                        "username": "user3515zv",
                        "content": "Output: 2, nums = [2,2,_,_]\\nWhy you guide us to output like this?\\nInnitially i code (in python3): return \\'{}, nums = {}\\'.format(len(nums), nums).\\nFor the one did not know: output only the number of elements left after remove \"val\"; which is len(nums)"
                    }
                ]
            },
            {
                "id": 1830715,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1826938,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1823804,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1820429,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1810396,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1809697,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1806990,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1806774,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1804414,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1799848,
                "content": [
                    {
                        "username": "ufve0704terry",
                        "content": "int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        for(int a=0;a<nums.size();a++){\\n            while(nums[a]==val&&a<nums.size()){\\n                count++;\\n                nums.erase(nums.begin()+a);\\n            }\\n        }\\n        return count;\\n    }\\n\\nCan someone tell me why the answer I have on the laptop and on the Leetcode are different?\\nMy program always get right on my laptop.\\n\\nnums =[0,1,2,2,3,0,4,2]\\nval =2\\nOutput:[0,1,3]\\nExpected:[0,1,4,0,3]\\n"
                    },
                    {
                        "username": "alejandrorm",
                        "content": "The reason is that you are returning \"count\", the number of elements removed, rather than the number of elements remaining after the removal of duplicates. Also note that this solution doesn\\'t satisfy the requirement of linear time complexity."
                    },
                    {
                        "username": "yewin",
                        "content": "does someone show correct return value? there are many problems like, \\nInput: nums = [3,2,2,3], val = 3\\nOutput: 2, nums = [2,2,_,_]\\n\\nExpected  [2,2]\\n\\nI try to return length of array or array like they said [2,2]. my answer is still wrong.\\n\\npls someone can advice if you get correct answer"
                    },
                    {
                        "username": "Alterra",
                        "content": "What the shit is this\\nWhen I run my code on VsCode it gives me the correct answer: [0, 1, 3, 0, 4]\\nBut on this page console: [0,1,3]"
                    },
                    {
                        "username": "Pallavite",
                        "content": "\\n        for(int i=0;i<nums.length-1;i++) {\\n            if(nums[i] == val) {\\n                for(int j=i;j<nums.length;j++)\\n                 {\\n                   nums[j] = nums[j+1];\\n\\n                 }\\n                 break;\\n            }\\n           }   for(int i =0;i<nums.length-1;i++)\\n        {\\n            System.out.println(nums[i]);\\n        }\\n    }\\nFrom this logic, I\\'m able to remove only 1 element. Pls someone help.\\n"
                    },
                    {
                        "username": "PERCY001",
                        "content": "class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        for(int i=0;i<=nums.size();i++)\\n        {\\n\\n            if(nums[i]==val)\\n            {  \\n               \\n                \\n                auto itr=nums.begin()+i;\\n                nums.erase(itr);\\n                 if(i>1)\\n                i=i-1;\\n          \\n\\n            }\\n           \\n        }\\n        return nums.size();\\n    }\\n};\\n\\n\\nits showing adress sanitizer as error why?"
                    },
                    {
                        "username": "Ashu07",
                        "content": "https://leetcode.com/problems/remove-element/submissions/902339232/"
                    },
                    {
                        "username": "ayush_mech",
                        "content": "I tried using arrayList but not working if value to be removed occurs simultaneously (like in second test case, 2 to be removed is coming twice). It removes only first occurence.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int k=0,j=0;\\n        ArrayList<Integer> a = new ArrayList<Integer>(); \\n        for(int i=0;i<nums.length;i++){\\n                 a.add(nums[i]);                       \\n            }\\n        \\n        for(int i=0;i<a.size();i++){\\n        if(a.get(i) == val){\\n                j+=1;\\n                a.remove(i);              \\n        }}\\n\\n        for(int i=0;i<a.size();i++){\\n                 nums[i] = a.get(i);                          \\n            }      \\n\\n        k = nums.length - j;\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "Airatff102",
                        "content": "Why does not the code below  work? \\n\\n`nums = ([n for n in nums if n!=val])` "
                    },
                    {
                        "username": "thishi2003",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int: \\n        i = 0\\n        j = len(nums)-1\\n        while(i<len(nums)):\\n            if(nums[i] == val):\\n                for k in range(i, len(nums)-1):\\n                    nums[k] = nums[k+1]\\n                nums[j] = \"_\"\\n                j -= 1\\n            else:\\n                i += 1\\n        return nums[0:j+1]\\n\\nCan someone pls help me out finding wats wrong with this solution?"
                    },
                    {
                        "username": "alishachhabra1111",
                        "content": "Can anyone please tell me ,what\\'s the problem with this solution?\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        vector<int>ans;\\n        int j;\\n        for(int i=0;i<nums.size();i++){\\n            if(nums[i]!=val){\\n                ans.push_back(nums[i]);\\n            }\\n        }\\n        j=ans.size();\\n        return j;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1793927,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1793317,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1793172,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1786696,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1783305,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1783163,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1782289,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1782107,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1782100,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1774048,
                "content": [
                    {
                        "username": "user3662q",
                        "content": "#Python3 Solution  @user3662q\\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        while(i<len(nums)):\\n            if(nums[i]==val):\\n                nums.remove(val)\\n            else:\\n                i+=1\\n        print(*nums)"
                    },
                    {
                        "username": "86joeyes",
                        "content": "    int removeElement(vector<int>& nums, int val) {\\n        int cnt = 0;\\n        sort(nums.begin(), nums.end());\\n        while (binary_search(nums.begin(), nums.end(), val)) {\\n            cnt++;\\n            auto it = lower_bound(nums.begin(), nums.end(), val); \\n            nums.erase(it);\\n        }\\n        return cnt;\\n    }\\n\\n100% correct function, but\\nnums =\\n[0,1,2,2,3,0,4,2]\\nval =\\n2\\nOutput\\n[0,0,1]\\nExpected\\n[0,1,4,0,3]"
                    },
                    {
                        "username": "pjr_2001",
                        "content": "very inaccurate info provided\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int p=nums.length;\n\n        for(int i=0;i<nums.length;i++){\n            if(nums[i]==val){\n                nums[i]='_';\n                p--;\n            }\n        }\n        Arrays.sort(nums);\n        return p;\n        \n    }\n}`"
                    },
                    {
                        "username": "sigurdblueface",
                        "content": "my code works perfectly fine in my local IDE, but fails completely here in leetcode, lol\\n"
                    },
                    {
                        "username": "Evil_123",
                        "content": "//100% beatable answer please like if you appriciated it\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size(),k,countr=0;\\n      for(int i=0;i<n;i++){\\n          if(nums[i]==val){\\n             countr++;\\n             nums[i]=52;\\n          }\\n      }\\n      sort(nums.begin(),nums.end());\\n      k=n-countr;\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "aditya3492gupta",
                        "content": "declare a variable and initialize it with 0 example` count=0.`\niterate a loop from 0 till n-1.\nif the ith element is equal to val then skip the loop\nelse using `count` as index in-place the element in the array and increment `count` by one. \nat the end return` count`"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "First time i beated 100% runtime\\n```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count = 0;\\n        for (int i=0; i<nums.size() ; i++){\\n            if(nums[i]==val){count++;nums[i] = 100;}\\n        }\\n        sort(nums.begin(),nums.end());\\n        return nums.size() - count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "developerkaran025",
                        "content": "first time ever \\ni beats 100% of solution in runtime  \\n=   =   =   =   = \\nclass Solution {    \\npublic:      \\n    int removeElement(vector<int>& nums, int val) {    \\n        int count = 0;     \\n        for (int i=0; i<nums.size() ; i++){    \\n            if(nums[i]==val){count++;nums[i] = 100;}    \\n        }    \\n        sort(nums.begin(),nums.end());    \\n        return nums.size() - count;    \\n    }    \\n};    \\n=    =    =    ="
                    },
                    {
                        "username": "abdumajidabdullatipov1",
                        "content": "    public int removeElement(int[] nums, int val) {\n        int countVal = 0;\n\n        for (int i = 0, count = 0; count < nums.length; i++, count++) {\n            if (nums[i] == val) {\n                move(i, nums, countVal);\n                countVal++;\n                i--;\n            }\n        }\n\n        return nums.length - countVal;\n    }\n\n    private void move(int index, int[] nums, int countVal) {\n        for (int i = index; i < nums.length - 1 - countVal; i++) {\n            nums[i] = nums[i + 1];\n        }\n    }"
                    }
                ]
            },
            {
                "id": 1773640,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1773602,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1773063,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1770145,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1767458,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1766707,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1766515,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1764666,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1763472,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1761898,
                "content": [
                    {
                        "username": "dienazty",
                        "content": "A bit confused as the code that I wrote works in vscode with the same variables that the test cases supposedly use.  Can someone help me understand why this code isn't being accepted?\n\nIn JavaScript\n\n```\nvar removeElement = function(nums, val) {\n    console.log(nums.filter(x => x != val))\n}\n```\n\nIf I set `nums = [3,2,2,3]` and `val = 3` and run removeElement(nums, val), the output in vscode is [2,2] but result in leetcode shows [3,2,2,3]."
                    },
                    {
                        "username": "Front5105",
                        "content": "Your filter function creates a (shallow) copy of the nums array. You are supposed to use the same array and do your operations in-place.\\nnums.filter() returns a different/second array"
                    },
                    {
                        "username": "shamilrasheed131",
                        "content": "Simple Typescript Solution\\n\\n`const removeElement = (nums: number[], val: number): void => {\\n    const end = nums.length - 1;\\n\\n    for(let i = 0; i<=end; i++){\\n        let end = nums.length - 1;\\n        if(nums[i] === val){\\n            const temp = nums[i];\\n            nums[i] = nums[end];\\n            nums.pop()\\n            --end;\\n            --i;\\n        }\\n    }\\n};\\n`"
                    },
                    {
                        "username": "mask73",
                        "content": "is anyone stuck at testcase nums = [4,5] val = 5\\nthe expected output is [4]\\nbut my output is [ ].\\nmy code is running fine for most case, but why is it wrong for this case? i don\\'t know\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int j = n-1,i=0;\\n        while(i<=j ){\\n            while(  j>=0  && nums[i]==val ){\\n                swap(nums[i],nums[j--]);\\n            }\\n                i++;\\n        }\\n        return ++j;\\n    }\\n};\\n"
                    },
                    {
                        "username": "HimanshuRathore_7784",
                        "content": "Just try to do it from the end of the array it will work better"
                    },
                    {
                        "username": "Avadhesh-1636",
                        "content": "Very Easy || O(n) time complexity || Java \\n\\n==========code============\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n     int count =0; // intialise count =0;\\n     for(int i=0;i<nums.length;i++){   //moving to length of the nums\\n         if(nums[i] != val){    //checking if val is  not matching then will store value in count \\n             nums[count]=nums[i];  //value storing in count\\n             count++;   // \\n         }\\n     }\\n    return count;\\n\\n\\n    }\\n}\\n==========end============"
                    },
                    {
                        "username": "aar66",
                        "content": "I changed nums inplace and still got wrong solution...\\nprinting nums right before returning gives me the same answer as the expected one."
                    },
                    {
                        "username": "darpandaswani04",
                        "content": "here the code:  \\n`your inline code...\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n = nums.size();\\n        int i =0  , j = n-1;\\n        int count = 0 ;\\n        while(i<n && j>=i){\\n            if(nums[i] == val){\\n                nums[i] = nums[j];\\n                j--;\\n            }\\n            else{\\n                i++;\\n                count ++;\\n            }\\n        }\\n        return count;\\n    }\\n};your inline code...`\\n\\nI am new here , so please help if you find anything to improve\\nopen to all suggestions."
                    },
                    {
                        "username": "dhanjitthakur0",
                        "content": "I have solved this question using Two Pointers Technique. \\n\\n1st Pointer  will point at starting index of array  and 2nd Pointer will be pointing to end/last index of array. \\n\\nLet say 1st pointer as  \"start\" and 2nd pointer as \"end\".\\na) If start is pointing the element is equal to the Val, then swap the start and end elements and then decrement the end.\\nb) If start is pointing the element is not equal to the Val, then just increment the start.\\nc) while condition for this iteration would be       while(start < end)\\n\\nAfter this iteration all the Val elements will be placed at the last and another elements are place in starting of the array.\\n\\nNow just iterate through the array element and count till you find the Val. If you find the Val then return count else keep incrementing the count.\\n\\nYou can refer my code from the below link\\n\\n[leetcode]\\n(https://leetcode.com/problems/remove-element/submissions/881048437/)\\n   "
                    },
                    {
                        "username": "akashmaurya78",
                        "content": "Python Solution \\n\\nclass Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        i=0\\n        j=len(nums)\\n        while(i<j) :\\n            if nums[i] == val :\\n                nums.pop(i)\\n                j=j-1\\n            else :\\n                i=i+1\\n        \\n        return j\\n"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "The second question I found with more number of dislikes as compared to likes."
                    }
                ]
            },
            {
                "id": 1761608,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1761101,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1760918,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1759281,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1758897,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1757707,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1755313,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1755106,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1754540,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1753514,
                "content": [
                    {
                        "username": "Sang-96",
                        "content": "I am confused with return type. plzz help me configure out what i have to return as output"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We have to return a number, which is the length of the array after removing all the values that were asked to remove. The trick is that while removing the values, we have to modify the original array that was provided as input, solution consists in both these things: returning a correct number and correctly modifying the input array so the corresponding values are correctly removed. I hope this helps, good luck!"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Any reason it should not work in python?\n\n```\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        return [num for num in nums if num!=val ]\n```"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the input, not to create a new array. Also the return has to be a number, not array."
                    },
                    {
                        "username": "gersteni",
                        "content": "Is this problem broken for Racket? I wrote ...\\n\\n(define (remove-element nums val)\\n    (cond\\n      ((null? nums) \\'())\\n      ((eq? val (car nums)) (remove-element (cdr nums) val))\\n      (else (cons (car nums) (remove-element (cdr nums) val)))))\\n\\n... and this worked fine on my terminal, but gave a weird error when I ran it. "
                    },
                    {
                        "username": "FunctionallySane",
                        "content": "These kinds of problems forces you to mutate the passed value and I don\\'t even know if this should really go down on my portfolio, this is not a good practice, and I for one certainly don\\'t want that to be on display."
                    },
                    {
                        "username": "stepaniukoleksii",
                        "content": "In my solution the test case:\\nnums =[2]  val = 3 \\nfails like this:\\nOutput []\\nExpected [2]\\n\\nBut I do not modify array at all! Double checked it in my IDE with debugger and it shows that at the end of the function array has one element [2];\\n\\nIs anyone else have same issue? As I understand I cannot paste my solution here..."
                    },
                    {
                        "username": "MousePotatoa",
                        "content": "..Kind of.\nIn Eclipse I get [2,2,3,3] -which is correct, but on LeetCode I get [2] which isn't.\nNo idea why.\nEdit: \nOK. It clearly only checks your modified array up to the index of of your return. That's why. t_t;:\nSo it will cut off your array at nums[output-1];"
                    },
                    {
                        "username": "hazemyaheadev",
                        "content": " I Get Confused because we only return the length of array , not the new array .. so how the leetcode compiler know the new array ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "We need to modify the original array that is provided as input. Compiler will use that array to run the tests. The number that we return as the result of the function is used to know for the compiler when to stop comparing expected array with the one that we modified in our solution."
                    },
                    {
                        "username": "_ayush_kushwaha_0512",
                        "content": "In this problem we have not think about to delete or about to swap element.\\nwe have to just put not target element on target element position without putting target any other place  and return the value or limit of the array.\\n\\n\\nint count=0;\\nfor(int i = 0 ; i < nums.length ; i++){\\n      if(nums[i]!=val){\\n            nums[count]=nums[i];\\n            count++;\\n      }\\n}\\n        return count;"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "can anyone explain this? what's wrong in my code?\n \n112/113 test cases passed.\n\nfailed test case:  \nnums =   [3,1,3,3,3], val= 3,  I got output as [1, 3]\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        if len(set(nums))== 1 and val in nums:\n            return 0\n        for num in nums:    \n            if val in nums:\n                nums.remove(val)\n        return len(nums)"
                    },
                    {
                        "username": "tushargupta29430",
                        "content": "lass Solution(object):\\n    def removeElement(self, nums, val):\\n        \"\"\"\\n        :type nums: List[int]\\n        :type val: int\\n        :rtype: int\\n        \"\"\"\\n        while(nums.count(val)>=1):\\n            nums.remove(val)\\n        print(len(nums))"
                    },
                    {
                        "username": "prasannaprassu80",
                        "content": "What is wrong in my code? 112/ 113 test cases passed.\\n \\nbut this test case is failed:  \\nnums =  [3,1,3,3,3]    val= 3 \\n\\nif len(set(nums))== 1 and val in nums:\\n            return 0\\n       \\nfor num in nums:\\n            \\n      if val in nums:\\n            nums.remove(val)\\nreturn len(nums)\\n\\n"
                    }
                ]
            },
            {
                "id": 1753382,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1752595,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1748701,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1745947,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1743699,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1742546,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1741533,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1739427,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1738491,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1738416,
                "content": [
                    {
                        "username": "AbishekNanjappa",
                        "content": "How do i improve it from O(n^2) to a better efficiency class?\nI used bubble sort logic and moved the value to be removed to the end of the array."
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "deleted_user",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        k = 0\\n        for i in nums:\\n            if i != val:\\n                nums[k] = i\\n                k += 1\\n        return k"
                    },
                    {
                        "username": "kvkalyan1998",
                        "content": "[leetcode](https://leetcode.com)"
                    },
                    {
                        "username": "MMvKA",
                        "content": " `int cont = 0;\\n  for(int i = 0; i < nums.length; i++){\\n  if(nums[i] != val){\\n  nums[cont++] = nums[i];\\n  }\\n}\\n  I don\\'t understand why is cont++ and can\\'t be cont + 1. Someone can explain me that?"
                    },
                    {
                        "username": "CodeCanyon",
                        "content": "cont++ is the shorten form of count = count+1. You need to initialise new incremented value to count variable. "
                    },
                    {
                        "username": "belalmostafa1993",
                        "content": "nums.filter(item => item !== val)\\n this return empty array\\nbut in console in chrome return correct answer"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array that is provided as an input, not return a new one. And the return from the function should be a number (length of the \\'new\\' array without the requested value), is used as well in the tests. "
                    },
                    {
                        "username": "ranger45",
                        "content": "I returned the expected output which they asked it in the question and i wrote a two method which one of the method will return the expected output but  getting wrong case\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n         \\n\\t        int  k=nums.length-1,j=0;\\n\\t        int[] duplicate=new int[nums.length];\\n\\t        for(int i=0;i<nums.length;i++){\\n\\t         if(val==nums[i]){\\n\\t               duplicate[k--]=nums[i];}\\n\\t         else{\\n\\t               duplicate[j++]=nums[i];}\\n\\t        }\\n\\t       return count(duplicate,val); \\n\\t    }\\n\\t  public  int count(int duplicate[],int val) {\\n\\t\\t  int count=0;\\n\\t    \\tfor(int i=0;i<duplicate.length;i++) {\\n\\t    \\t\\tif(val==duplicate[i])\\n\\t    \\t\\t\\tcontinue;\\n\\t    \\t\\tcount++;\\n\\t    \\t}\\n\\t    \\treturn count;\\n\\t    }\\n\\n\\n\\n    }\\n"
                    },
                    {
                        "username": "nooruzbay",
                        "content": "Hi Guys, I have got a problem, whenever I am trying to run the same code and solution for this task my local python3 shows different result than Leetcode python3 or 2? Why is it so?"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 0ms || beats 100% || Easy to Understand.\\n\\nhttps://leetcode.com/problems/remove-element/solutions/2987663/simple-java-0ms-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": " We will use two pointer approach.\n         One will point to 1st index.\n         Other will point to last index.\n         If start pointer points to target, then replace it with end pointer value.\nThen according update the pointers.\n\nFinally, return start+1."
                    }
                ]
            },
            {
                "id": 1736499,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1735378,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1734926,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1734200,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1732923,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1731579,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1729149,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1728785,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1726109,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1725037,
                "content": [
                    {
                        "username": "juiprht",
                        "content": "JAVA SOlution with O(N) time and O(1) space complexity.\n\nclass Solution {\n    public int removeElement(int[] nums, int val) {\n        int i=0;\n        int j=0;\n        while(i<nums.length){\n            if(nums[i]!=val){\n                nums[j]=nums[i];\n                j++;\n            }\n            i++;\n        }\n        return j;\n    }\n}"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "MY C++ EASY Solution \\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int count=0;\\n        int k=0;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n          if(nums[i]!=val)\\n          {\\n              nums[k]=nums[i];\\n              k++;\\n          }\\n          else\\n          count++;\\n\\n        }\\n        return nums.size()-count;\\n    }\\n};"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "Are you supposed to modify the array you are given or can you return another array? Because whenever I try to return another array with the right elements in it, it gives the same output every single time."
                    },
                    {
                        "username": "pponsarandev",
                        "content": "[@Ismmoh101](/Ismmoh101) you shouldn't create any new arrays, you are expected to iterate through and modify the array that was received as a parameter"
                    },
                    {
                        "username": "Ismmoh101",
                        "content": "This is my code:\\npublic int removeElement(int[] nums, int val) \\n    {\\n        int[] numbers = new int[nums.length];\\n        int count = 0;\\n        for(int i=0; i<nums.length; i++)\\n        {\\n            int currNum = nums[i];\\n            if (currNum!=val)\\n            {\\n                numbers[count] = currNum;\\n                count++;\\n            }\\n        }\\n        return numbers.length;\\n    }"
                    },
                    {
                        "username": "ottomen",
                        "content": "Pretty obscure description without that doesn\\'t mention what should I return when no match happened at all. "
                    },
                    {
                        "username": "dev-ravikiran-rk",
                        "content": "Whats wrong with this code?\\n```class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        if(nums.size() == 0) return 0;\\n        \\n        for(int i = 0; i < nums.size(); i++){\\n            while(nums[nums.size() - 1]== val)\\n                nums.erase((nums.end()-1));\\n            if(nums.size() == 0) return 0;\\n            if(nums[i] == val)\\n            swap(nums[i], nums[nums.size() - 1]); \\n        }\\n        return nums.size();\\n    }\\n}\\n```"
                    },
                    {
                        "username": "matekopa",
                        "content": "public static int removeElement(int[] nums, int val) {\\n        List<Integer> list = new ArrayList<>();\\n        for (int num : nums) {\\n            list.add(num);\\n        }\\n        list = list.stream().filter(i->!i.equals(val)).collect(Collectors.toList());\\n        return list.size();\\n    }\\nthis code works perfectly on my computer but it doesn\\'t work on Leet code does anyone know why?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to modify the original array, the actual tests are using it to check if the elements were removed."
                    },
                    {
                        "username": "stackAndQueue",
                        "content": "can anybody throw light on what's wrong with my code?\n\n `       int count = 0;\n        for(auto it = nums.begin() ; it != nums.end(); it++){\n            if(*it == val)   nums.erase(it);\n            else count++;\n        }\n        return count;\n`"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/27_REMOVE_elements.cpp"
                    },
                    {
                        "username": "kevinttc93",
                        "content": "Hi there, can anyone help me take a look at why is my code returning illegalArgumentException? Thanks in advance!\n\n `class Solution {\n    public int removeElement(int[] nums, int val) {\n        int counter = 0;\n        int p = nums.length-1;\n        \n        for(int i =0; i < nums.length; i++){\n            if(nums[i] == val){\n                if(nums[p] == val){\n                    nums[i] = nums[p-1];\n                    nums[p-1] = val;\n                    counter++;\n                    p--;\n                }else{\n                    nums[i] = nums[p];\n                    nums[p] = val;\n                    p--;\n                    counter++;\n                }\n            }\n        }\n        return p - counter;\n    }\n}`"
                    },
                    {
                        "username": "bshowell",
                        "content": "Having trouble understanding why my C code doesn't work.\n\n`int removeElement(int* nums, int numsSize, int val)\n{`\n`    int i = 0;`\n`    while(i < numsSize)  // using while loop since numsSize is changing`\n`    {`\n`        if (nums[i] == val)  // if current number is equal to the value we're looking for`\n`        {`\n`            nums[i] = nums[numsSize - 1];  // set the current value at nums (the one we want to replace) equal to the last value in the array`\n`            numsSize--;  // decrement the size of the array, effectively deleting the last element we just moved`\n`        } else i++;  // if we don't have to get rid of a number, increment the counter as normal`\n`    }`\n`    return *nums;`\n`}`\n\nI am newish to using C in these types of scenarios, but for almost every test case, I'm getting an empty list returned. The things I'm not sure about is returning *nums, originally I was just returning nums but that was giving me weird errors. Would really appreciate some enlightenment on what I don't understand about C here. And sorry for the bad formatting. Thanks!"
                    }
                ]
            },
            {
                "id": 1723896,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1722967,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1721766,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1720947,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1719131,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1718329,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1709974,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1709753,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1708413,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1704543,
                "content": [
                    {
                        "username": "xherdon",
                        "content": "What the heck is the problem with my code. It has to be correct this way:\n\n class Solution {\n    public int removeElement(int[] nums, int val) {\n        List<Integer> sortedList =  Arrays.stream(nums).boxed().collect(Collectors.toList());\n    \tsortedList.removeIf(Predicate.isEqual(val));\n    \tnums = sortedList.stream().mapToInt(Integer::intValue).toArray();\n\t\treturn sortedList.size();\n    }\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "Pinho1",
                        "content": "Could anybody help me? \n\nI can't understand why my code isn't working, when given the array [3,2,2,3] with val=3, it is returning the array [3,2], not [2,2], but testing in others compilers, it returns [2,2]\n\nPython:\nclass Solution(object):\n    def removeElement(self, nums, val):\n        nums = list(filter(lambda x : x != val,nums))\n        return len(nums)"
                    },
                    {
                        "username": "alekhyaakella",
                        "content": "Can someone please tell me whats wrong with my code?\\n\\nMy approach:\\n\\nIf we take array as [0,1,2,2,3,0,4,2], after iteratiion is completed the list I will get is [0, 1, 3, 0, 4]\\n\\nimport java.util.*;\\nclass Solution {\\npublic int removeElement(int[] nums, int val) {\\nList li = new ArrayList();\\nfor (int i = 0; i < nums.length; i++){\\nli.add(nums[i]);\\n}\\nIterator itr = li.iterator();\\nwhile(itr.hasNext()){\\nif(itr.next()==val){\\nitr.remove();\\n}\\n}\\nreturn li.size();\\n}\\n}"
                    },
                    {
                        "username": "msss",
                        "content": "You are creating a new array. That was not allowed. \"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n"
                    },
                    {
                        "username": "arbaja",
                        "content": "My code produces the expected results in command prompt but will not accept here for some reason."
                    },
                    {
                        "username": "Rakesh2004",
                        "content": "i understand the whole concept and implementation but dont know in which step element deleted,someone please explain.\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int start=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[start]=nums[i];\\n                start++;   \\n            } \\n        }\\n        return start;\\n\\n    }\\n}"
                    },
                    {
                        "username": "amandafribo",
                        "content": "Does anyone know why i can make the output correct in my consol in VS, but it gives me an empty output in the console in here?\\nvar removeElement = function(nums, val) {\\n    const duplicant = [];\\n    \\n    //Looks for the duplicants\\n    for (let i = 0; i < nums.length; i++) {\\n        if (nums[i] === val) {\\n            duplicant.push(nums[i]);\\n            //If found rename to NaN\\n            nums[i] = NaN;\\n        } \\n    }\\n\\n    //Calculates the amount of dupes\\n    k = duplicant.length\\n    return nums\\n};"
                    },
                    {
                        "username": "Virus_23",
                        "content": "We will follow below steps \\u2014\\n\\nTake a variable count. This will count the number of elements except val.\\nScan the array left to right.\\nIf the current element is not equal to val, we will add that element to the place of count.\\nTime Complexity\\nSince there is a single scan of the array, the time complexity will be O(n).\\n\\nSpace Complexity\\nWe are not using any data structure for internal computations, hence the space complexity will be O(1)."
                    },
                    {
                        "username": "verma15ayush",
                        "content": "Should not be categorized as easy question for sure.\\nBut once you get the concept right you can do that easily.\\nI have solved medium questions that were easier than this. \\n"
                    },
                    {
                        "username": "ZenMasterV",
                        "content": "I find that, depending on the weak spots of the engineer, easy problems may seem hard and some mediums may seem easy. It\\'s all relative and every problem that gets you stuck is revealing a weak spot in your game"
                    },
                    {
                        "username": "satyam_botadara",
                        "content": "simple java solution\\n\\n\\nclass Solution {\\n    public int removeElement(int[] nums, int val) {\\n\\n        int index=0;\\n        for(int i=0;i<nums.length;i++)\\n        {\\n            if(nums[i]!=val)\\n            {\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n        \\n    }\\n} "
                    },
                    {
                        "username": "Sibajyoti2001",
                        "content": " `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int n=nums.size();\\n        int i;\\n        for(i=0;i<n;i++)\\n        {\\n            if(val==nums[i])\\n            {\\n                for(int k=i;k<n-1;k++)\\n                {\\n                    nums[k]=nums[k+1];\\n                }\\n                n=n-1;\\n               i=i-1;\\n            }\\n        }\\n        return n;\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1703539,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1703457,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1703240,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1702610,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1700850,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1697611,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1695075,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1694608,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1686215,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1686157,
                "content": [
                    {
                        "username": "aarushiksk",
                        "content": "It\\'s weird, it says the return type of the answer should be integer but it\\'s giving me the expected output as an array. For the first test case it says the expected output is [2,2] but the return should be an integer."
                    },
                    {
                        "username": "msauer22",
                        "content": "Thats because you have to modify the array so that the first k values hold the solution.\\nHowever you return k."
                    },
                    {
                        "username": "spaceMatcha",
                        "content": "Is this problem asking for an array to be returned that does not contain `val` but also does not modify the array in place.  For instance, it does not allow you to use Javascript array methods like `splice`.  I use a separate IDE and can get the correct answer there, but here on LC I\\'ve tried several solutions and it does not recognize my result.\\n\\nThis seems to be an issue with this and several other problems on LC.  Is there something that I\\'m missing?"
                    },
                    {
                        "username": "msauer22",
                        "content": "You have to return an int k where k are the first k elements in the array that is provided.\nThis array has to be modified in place so that the first k elements do not contain the given val."
                    },
                    {
                        "username": "sheenlenny123",
                        "content": "C `your inline code...your inline code...`"
                    },
                    {
                        "username": "LucasKoc",
                        "content": "The wording is not very clear. I thought I had to return the count and a string of the form \\'nums=\\'+string(nums+[,_]*(n-count))."
                    },
                    {
                        "username": "Akash_Aryan",
                        "content": "easy peasy c++ solution `class Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int i=0,j=nums.size()-1,temp;\\n        for(int i=0;i<nums.size();i++)\\n        {\\n            if(nums[i]==val)\\n            {\\n            temp=nums[i];\\n            nums[i]=nums[j];\\n            nums[j]=temp;\\n            nums.pop_back();\\n            j=nums.size()-1;\\n            i--;\\n            }\\n        }\\n        return nums.size();\\n    }\\n};`"
                    },
                    {
                        "username": "skaran007",
                        "content": "Solved in 2 pointer Approach:-\\n\\n`class Solution {\\n    public int removeElement(int[] arr, int val) {\\n     int size = arr.length;\\n     int start = 0, end = size -1;\\n\\n     while(start <= end) {\\n         if(arr[start] == val && arr[end] != val) {\\n             int temp = arr[start];\\n             arr[start] = arr[end];\\n             arr[end] = temp;\\n         }\\n\\n         if(arr[start] != val) {\\n             start++;\\n         }\\n         if(arr[end] == val) {\\n             end--;\\n         }\\n     }\\n     return start;\\n    }\\n}`"
                    },
                    {
                        "username": "Niteesh_Sai",
                        "content": "can any one tell why my code is not working for the second test case\\nfor i in range(len(nums)-1):\\n    if nums[i] == val:\\n        nums.pop(i)\\nreturn len(nums)"
                    },
                    {
                        "username": "bdedic",
                        "content": "range(x)\\xA0will generate numbers from 0 to x-1. range(10)\\xA0will generate numbers from 0 to 9 (10 numbers).\\nI guess your loop is not defined correctly. "
                    },
                    {
                        "username": "surajtiwari4970",
                        "content": "one thing I m not understanding ..Can anyone tell me whats the difference between them [2,2] and [2, 2]\\n"
                    },
                    {
                        "username": "Kcoder_01",
                        "content": " `your inline code...your inline code...`\\nMy Java Solution \\n`class Solution {\\n    public int removeElement(int[] nums, int val) {\\n        int i=0;\\n        int j=nums.length-1;\\n\\n        while(i<=j){\\n            while(nums[i]==val && i<=j){\\n                int temp=nums[i];\\n                nums[i]=nums[j];\\n                nums[j]=temp;\\n                j--;\\n            }\\n            i++;\\n        }\\n        return j+1;\\n    }\\n}`"
                    },
                    {
                        "username": "naiveperson",
                        "content": "```\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int left = 0;\\n        int right = nums.size() - 1;\\n        int count = 0;\\n        while (left <= right) {\\n            if (nums[left] == val) {\\n                while (nums[right] == val && left <= right) {\\n                    right--;\\n                    count++;\\n                }\\n\\n                if (left <= right) {\\n                    //swap(nums[left], nums[right]);\\n                    int t = nums[left];\\n                    nums[left] = nums[right];\\n                    nums[right] = t; \\n                    right--;\\n                    count++;\\n                }\\n            }\\n\\n            left++;\\n        }\\n\\n        return nums.size() - count;\\n    }\\n};\\n```\\nCan anyone tell me what the problem is in this code?   "
                    }
                ]
            },
            {
                "id": 1685437,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1679980,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1679818,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1679326,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1671287,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1669672,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1650002,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1648669,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1646377,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            },
            {
                "id": 1640580,
                "content": [
                    {
                        "username": "Kamikotosss",
                        "content": "JS one:\\nlet removeElement = function(nums, val) {\\n    let slice = 0 ;\\n    let index = 0; \\n    for(let i =0 ; i < nums.length ; i++){\\n        if(nums[i] === val ){\\n            if(!!nums[i+1]) nums[i] = nums[i+1]\\n            index = i;\\n            slice++;\\n        }\\n    }\\n    nums.length = nums.length - slice;\\n    return nums\\n};\\nIt is strange because I got correct answer with the same code in VScode\\nInput\\nnums =\\n[3,2,2,3]\\nval =\\n3\\nOutput\\n[]\\nExpected\\n[2,2]"
                    },
                    {
                        "username": "arurahul16",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        count=0\\n        nums=[101 if num==val else num for num in nums]\\n        nums.sort()\\n        count=nums.count(101)\\n        count=len(nums)-count\\n        return count\\n\\nThis is not working i don\\'t know where I am going wrong .Please help me"
                    },
                    {
                        "username": "adaptive-alexander",
                        "content": "I\\'m new here, maybe I\\'m missing something.\\n\\nMy code is the exact same as the fastest solution, but I\\'m bechmarked quite a bit slower (0 vs 2 ms). Is there anything I can do to improve the benchmarking time, or is it kinda just how busy the server was at the minute?"
                    },
                    {
                        "username": "GouravKamboj",
                        "content": "Simple || C++ || Normal Approach || O(n)\\n\\n\\nclass Solution {\\npublic:\\n    int removeElement(vector<int>& nums, int val) {\\n        int c = 0;\\n        int n = nums.size();\\n        if(n == 0)\\n        {\\n            return 0;\\n        }\\n        else\\n        {\\n            for(int i = 0; i<n; i++)\\n            {\\n                if(nums[i] != val)\\n                {\\n                    nums[c] = nums[i];\\n                    c++;\\n                }\\n            }\\n            return c;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-element-problem-solution.html)"
                    },
                    {
                        "username": "bhuvanpolimera1998",
                        "content": "class Solution:\\n    def removeElement(self, nums: List[int], val: int) -> int:\\n        for i in range(len(nums)):\\n            if val in nums:\\n                nums.remove(val)\\n        return len(nums)"
                    },
                    {
                        "username": "Raushan_Ranjan",
                        "content": "I am confused with return type. plzz  help me configure out what i have to return as output"
                    },
                    {
                        "username": "Bhautikbhalala123",
                        "content": "https://zeroplusfour.com/remove-element-leetcode-solution/\\n\\nFull OPTIMAL solution in Java , Python , C++ , C \\n\\nGet all the solution here at :\\nhttps://zeroplusfour.com/leetcode-all-array-solution-list-all-in-one-place/\\n"
                    },
                    {
                        "username": "hebeying0711",
                        "content": "Inspired by Partition from Quicksort, we could revise Partition to start from right side to solve this problem.    \\ndef removeElement(self, nums: List[int], val: int) -> int:\\n        j=len(nums)-1\\n        i=j+1\\n        while j>=0:\\n            if nums[j]==val:\\n                i -= 1\\n                nums[i],nums[j]=nums[j],nums[i]\\n            j-=1\\n            print(nums,i,j)\\n        return i"
                    },
                    {
                        "username": "Omar211",
                        "content": "what is wrong here??\n\n class Solution {\n    public int removeElement(int[] nums, int val) { \n        int result =0;\n        int j=0;\n      for (int i = 0; i < nums.length; i++) {\n        if (nums[i] != val) {\n            nums[j] = nums[i];\n            j++;\n        }\n        else\n        result++;\n      }\n      return result;\n    }\n    }"
                    }
                ]
            }
        ]
    }
]