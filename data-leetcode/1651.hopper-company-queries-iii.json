[
    {
        "title": "Hopper Company Queries III",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1895455,
                "content": [
                    {
                        "username": "ashleyattard",
                        "content": "The description of this problem is worded somewhat vaguely in two ways:\\n1. The question asks for average ride duration/distance, however it is actually expecting **average MONTHLY ride duration/distance** (i.e. total duration/distance per month, averaged for a 3 month period)\\n2. It\\'s not very clear (especially with the use of **\"By the end of January\"** in the explanation, but this question wants you to return a rolling average of a **given month and the following two months** (i.e. report an average of Jan-Feb-Mar for Jan). By stating \"By the end of January,\" it appears that we may wish to take an average of Nov-Dec-Jan for Jan, but that\\'s not the case.\\n\\nJust a few things to watch out for when tackling this problem."
                    },
                    {
                        "username": "user4202R",
                        "content": "-- This is used to create all month from 1 to 12\\nwith recursive all_months as (\\nSELECT 1 as n\\nUNION \\nSELECT n+1 FROM all_months\\nWHERE n<12),\\n\\n-- Joining both the tables and filtering out relavant entries for year 2020, also aggregating if there are more then 2 entries for certain month\\ntbl1 as\\n(SELECT MONTH(r.requested_at) as \\'mnt\\', SUM(a.ride_distance) as \\'ride_distance\\', SUM(a.ride_duration) as \\'ride_duration\\'\\nFROM Rides as r\\nJOIN AcceptedRides as a\\nON r.ride_id = a.ride_id\\nWHERE YEAR(r.requested_at) = 2020\\nGROUP BY MONTH(r.requested_at)\\nORDER BY 1),\\n\\n-- Joining all_months table and above table \\ntbl2 as\\n(SELECT all_months.n, ifnull(tbl1.ride_distance,0) as \\'ride_distance\\', \\n ifnull(tbl1.ride_duration,0) as \\'ride_duration\\'\\nFROM all_months\\nLEFT JOIN tbl1\\nON all_months.n = tbl1.mnt)\\n\\n-- calculating 3 month moving average and removing last 2 months\\nSELECT month, ROUND(average_ride_distance,2) as \\'average_ride_distance\\', \\nROUND(average_ride_duration,2) as \\'average_ride_duration\\'\\nFROM\\n(SELECT n as \\'month\\', \\nAVG(ride_distance) OVER(ORDER BY n ASC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) as \\'average_ride_distance\\',\\nAVG(ride_duration) OVER(ORDER BY n ASC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) as \\'average_ride_duration\\'\\nFROM tbl2) as x\\nWHERE x.month NOT IN (11,12)\\n\\n"
                    }
                ]
            },
            {
                "id": 1575886,
                "content": [
                    {
                        "username": "ashleyattard",
                        "content": "The description of this problem is worded somewhat vaguely in two ways:\\n1. The question asks for average ride duration/distance, however it is actually expecting **average MONTHLY ride duration/distance** (i.e. total duration/distance per month, averaged for a 3 month period)\\n2. It\\'s not very clear (especially with the use of **\"By the end of January\"** in the explanation, but this question wants you to return a rolling average of a **given month and the following two months** (i.e. report an average of Jan-Feb-Mar for Jan). By stating \"By the end of January,\" it appears that we may wish to take an average of Nov-Dec-Jan for Jan, but that\\'s not the case.\\n\\nJust a few things to watch out for when tackling this problem."
                    },
                    {
                        "username": "user4202R",
                        "content": "-- This is used to create all month from 1 to 12\\nwith recursive all_months as (\\nSELECT 1 as n\\nUNION \\nSELECT n+1 FROM all_months\\nWHERE n<12),\\n\\n-- Joining both the tables and filtering out relavant entries for year 2020, also aggregating if there are more then 2 entries for certain month\\ntbl1 as\\n(SELECT MONTH(r.requested_at) as \\'mnt\\', SUM(a.ride_distance) as \\'ride_distance\\', SUM(a.ride_duration) as \\'ride_duration\\'\\nFROM Rides as r\\nJOIN AcceptedRides as a\\nON r.ride_id = a.ride_id\\nWHERE YEAR(r.requested_at) = 2020\\nGROUP BY MONTH(r.requested_at)\\nORDER BY 1),\\n\\n-- Joining all_months table and above table \\ntbl2 as\\n(SELECT all_months.n, ifnull(tbl1.ride_distance,0) as \\'ride_distance\\', \\n ifnull(tbl1.ride_duration,0) as \\'ride_duration\\'\\nFROM all_months\\nLEFT JOIN tbl1\\nON all_months.n = tbl1.mnt)\\n\\n-- calculating 3 month moving average and removing last 2 months\\nSELECT month, ROUND(average_ride_distance,2) as \\'average_ride_distance\\', \\nROUND(average_ride_duration,2) as \\'average_ride_duration\\'\\nFROM\\n(SELECT n as \\'month\\', \\nAVG(ride_distance) OVER(ORDER BY n ASC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) as \\'average_ride_distance\\',\\nAVG(ride_duration) OVER(ORDER BY n ASC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) as \\'average_ride_duration\\'\\nFROM tbl2) as x\\nWHERE x.month NOT IN (11,12)\\n\\n"
                    }
                ]
            }
        ]
    }
]