[
    {
        "title": "The Number of Passengers in Each Bus I",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1568738,
                "content": [
                    {
                        "username": "JanineR",
                        "content": "#please note that you need to order by arrival_time first\\nSELECT b.bus_id,\\n       COUNT(p.arrival_time) AS passengers_cnt\\n  FROM (SELECT bus_id, arrival_time, IFNULL(LAG(arrival_time) OVER (),0) AS previous_time FROM (SELECT * FROM Buses ORDER BY arrival_time)a) b\\nLEFT JOIN Passengers p \\n    ON b.arrival_time >= p.arrival_time\\n   AND p.arrival_time > b.previous_time\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "pengrunan",
                        "content": "WITH tmp as (SELECT *, IFNULL(LAG(arrival_time) OVER(ORDER BY arrival_time), 0) as previous\\n             FROM Buses\\n)\\nSELECT bus_id, SUM(CASE WHEN t.arrival_time >= P.arrival_time AND P.arrival_time > t.previous THEN 1 ELSE 0 END) as passengers_cnt\\nFROM tmp t, Passengers P\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "Srilekha13",
                        "content": "\\'\\'\\'\\n-- To check, if a bus arrives at the station at a time tbus and a passenger arrived at a time tpassenger where tpassenger <= tbus\\n\\nwith cte as(\\nselect p.passenger_id\\n       ,min(b.arrival_time) min_arrival_time\\nfrom buses b \\ninner join passengers p on p.arrival_time <= b.arrival_time\\ngroup by p.passenger_id)\\n\\n-- To take count of passengers who boards the bus as their arrival time matches the bus arrival time and Returns the result table ordered by bus_id in ascending order\\n\\n\\nselect b.bus_id\\n       ,count(c.passenger_id) passengers_cnt\\nfrom buses b\\nleft outer join cte c on b.arrival_time = min_arrival_time\\ngroup by b.bus_id\\norder by b.bus_id \\n\\'\\'\\'"
                    },
                    {
                        "username": "bsofcs",
                        "content": "WITH BUSES_REFINE as (select BUS_ID, ARRIVAL_TIME, LAG(ARRIVAL_TIME,1,0) OVER (ORDER BY ARRIVAL_TIME) as LAST_BUS_ARRIVAL_TIME from BUSES),\\n\\nRAW_DATA as (select BUS_ID, count(PASSENGER_ID) as PASSENGER_CNT from (\\nselect B.BUS_ID,P.PASSENGER_ID from BUSES_REFINE B INNER JOIN PASSENGERS P on P.ARRIVAL_TIME>B.LAST_BUS_ARRIVAL_TIME and P.ARRIVAL_TIME<=B.ARRIVAL_TIME)\\ngroup by BUS_ID)\\n\\nselect B.BUS_ID as \"bus_id\", NVL(R.PASSENGER_CNT,0) as \"passengers_cnt\" from BUSES B LEFT OUTER JOIN RAW_DATA R\\non B.BUS_ID=R.BUS_ID order by 1;"
                    },
                    {
                        "username": "TarunGrover6995",
                        "content": "WITH cte AS\\n(SELECT B.bus_id bus_id, P.passenger_id passenger_id, RANK() OVER(PARTITION BY \\nP.passenger_id ORDER BY B.arrival_time) Rank FROM Buses B JOIN Passengers P ON \\n(P.arrival_time <= B.arrival_time))\\n\\nSELECT bus_id, NVL(passengers_cnt,0) passengers_cnt FROM Buses NATURAL LEFT JOIN \\n(SELECT bus_id, COUNT(passenger_id) passengers_cnt FROM cte WHERE Rank = 1 GROUP \\nBY bus_id) ORDER BY 1"
                    }
                ]
            },
            {
                "id": 1570834,
                "content": [
                    {
                        "username": "JanineR",
                        "content": "#please note that you need to order by arrival_time first\\nSELECT b.bus_id,\\n       COUNT(p.arrival_time) AS passengers_cnt\\n  FROM (SELECT bus_id, arrival_time, IFNULL(LAG(arrival_time) OVER (),0) AS previous_time FROM (SELECT * FROM Buses ORDER BY arrival_time)a) b\\nLEFT JOIN Passengers p \\n    ON b.arrival_time >= p.arrival_time\\n   AND p.arrival_time > b.previous_time\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "pengrunan",
                        "content": "WITH tmp as (SELECT *, IFNULL(LAG(arrival_time) OVER(ORDER BY arrival_time), 0) as previous\\n             FROM Buses\\n)\\nSELECT bus_id, SUM(CASE WHEN t.arrival_time >= P.arrival_time AND P.arrival_time > t.previous THEN 1 ELSE 0 END) as passengers_cnt\\nFROM tmp t, Passengers P\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "Srilekha13",
                        "content": "\\'\\'\\'\\n-- To check, if a bus arrives at the station at a time tbus and a passenger arrived at a time tpassenger where tpassenger <= tbus\\n\\nwith cte as(\\nselect p.passenger_id\\n       ,min(b.arrival_time) min_arrival_time\\nfrom buses b \\ninner join passengers p on p.arrival_time <= b.arrival_time\\ngroup by p.passenger_id)\\n\\n-- To take count of passengers who boards the bus as their arrival time matches the bus arrival time and Returns the result table ordered by bus_id in ascending order\\n\\n\\nselect b.bus_id\\n       ,count(c.passenger_id) passengers_cnt\\nfrom buses b\\nleft outer join cte c on b.arrival_time = min_arrival_time\\ngroup by b.bus_id\\norder by b.bus_id \\n\\'\\'\\'"
                    },
                    {
                        "username": "bsofcs",
                        "content": "WITH BUSES_REFINE as (select BUS_ID, ARRIVAL_TIME, LAG(ARRIVAL_TIME,1,0) OVER (ORDER BY ARRIVAL_TIME) as LAST_BUS_ARRIVAL_TIME from BUSES),\\n\\nRAW_DATA as (select BUS_ID, count(PASSENGER_ID) as PASSENGER_CNT from (\\nselect B.BUS_ID,P.PASSENGER_ID from BUSES_REFINE B INNER JOIN PASSENGERS P on P.ARRIVAL_TIME>B.LAST_BUS_ARRIVAL_TIME and P.ARRIVAL_TIME<=B.ARRIVAL_TIME)\\ngroup by BUS_ID)\\n\\nselect B.BUS_ID as \"bus_id\", NVL(R.PASSENGER_CNT,0) as \"passengers_cnt\" from BUSES B LEFT OUTER JOIN RAW_DATA R\\non B.BUS_ID=R.BUS_ID order by 1;"
                    },
                    {
                        "username": "TarunGrover6995",
                        "content": "WITH cte AS\\n(SELECT B.bus_id bus_id, P.passenger_id passenger_id, RANK() OVER(PARTITION BY \\nP.passenger_id ORDER BY B.arrival_time) Rank FROM Buses B JOIN Passengers P ON \\n(P.arrival_time <= B.arrival_time))\\n\\nSELECT bus_id, NVL(passengers_cnt,0) passengers_cnt FROM Buses NATURAL LEFT JOIN \\n(SELECT bus_id, COUNT(passenger_id) passengers_cnt FROM cte WHERE Rank = 1 GROUP \\nBY bus_id) ORDER BY 1"
                    }
                ]
            },
            {
                "id": 1576268,
                "content": [
                    {
                        "username": "JanineR",
                        "content": "#please note that you need to order by arrival_time first\\nSELECT b.bus_id,\\n       COUNT(p.arrival_time) AS passengers_cnt\\n  FROM (SELECT bus_id, arrival_time, IFNULL(LAG(arrival_time) OVER (),0) AS previous_time FROM (SELECT * FROM Buses ORDER BY arrival_time)a) b\\nLEFT JOIN Passengers p \\n    ON b.arrival_time >= p.arrival_time\\n   AND p.arrival_time > b.previous_time\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "pengrunan",
                        "content": "WITH tmp as (SELECT *, IFNULL(LAG(arrival_time) OVER(ORDER BY arrival_time), 0) as previous\\n             FROM Buses\\n)\\nSELECT bus_id, SUM(CASE WHEN t.arrival_time >= P.arrival_time AND P.arrival_time > t.previous THEN 1 ELSE 0 END) as passengers_cnt\\nFROM tmp t, Passengers P\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "Srilekha13",
                        "content": "\\'\\'\\'\\n-- To check, if a bus arrives at the station at a time tbus and a passenger arrived at a time tpassenger where tpassenger <= tbus\\n\\nwith cte as(\\nselect p.passenger_id\\n       ,min(b.arrival_time) min_arrival_time\\nfrom buses b \\ninner join passengers p on p.arrival_time <= b.arrival_time\\ngroup by p.passenger_id)\\n\\n-- To take count of passengers who boards the bus as their arrival time matches the bus arrival time and Returns the result table ordered by bus_id in ascending order\\n\\n\\nselect b.bus_id\\n       ,count(c.passenger_id) passengers_cnt\\nfrom buses b\\nleft outer join cte c on b.arrival_time = min_arrival_time\\ngroup by b.bus_id\\norder by b.bus_id \\n\\'\\'\\'"
                    },
                    {
                        "username": "bsofcs",
                        "content": "WITH BUSES_REFINE as (select BUS_ID, ARRIVAL_TIME, LAG(ARRIVAL_TIME,1,0) OVER (ORDER BY ARRIVAL_TIME) as LAST_BUS_ARRIVAL_TIME from BUSES),\\n\\nRAW_DATA as (select BUS_ID, count(PASSENGER_ID) as PASSENGER_CNT from (\\nselect B.BUS_ID,P.PASSENGER_ID from BUSES_REFINE B INNER JOIN PASSENGERS P on P.ARRIVAL_TIME>B.LAST_BUS_ARRIVAL_TIME and P.ARRIVAL_TIME<=B.ARRIVAL_TIME)\\ngroup by BUS_ID)\\n\\nselect B.BUS_ID as \"bus_id\", NVL(R.PASSENGER_CNT,0) as \"passengers_cnt\" from BUSES B LEFT OUTER JOIN RAW_DATA R\\non B.BUS_ID=R.BUS_ID order by 1;"
                    },
                    {
                        "username": "TarunGrover6995",
                        "content": "WITH cte AS\\n(SELECT B.bus_id bus_id, P.passenger_id passenger_id, RANK() OVER(PARTITION BY \\nP.passenger_id ORDER BY B.arrival_time) Rank FROM Buses B JOIN Passengers P ON \\n(P.arrival_time <= B.arrival_time))\\n\\nSELECT bus_id, NVL(passengers_cnt,0) passengers_cnt FROM Buses NATURAL LEFT JOIN \\n(SELECT bus_id, COUNT(passenger_id) passengers_cnt FROM cte WHERE Rank = 1 GROUP \\nBY bus_id) ORDER BY 1"
                    }
                ]
            },
            {
                "id": 1576254,
                "content": [
                    {
                        "username": "JanineR",
                        "content": "#please note that you need to order by arrival_time first\\nSELECT b.bus_id,\\n       COUNT(p.arrival_time) AS passengers_cnt\\n  FROM (SELECT bus_id, arrival_time, IFNULL(LAG(arrival_time) OVER (),0) AS previous_time FROM (SELECT * FROM Buses ORDER BY arrival_time)a) b\\nLEFT JOIN Passengers p \\n    ON b.arrival_time >= p.arrival_time\\n   AND p.arrival_time > b.previous_time\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "pengrunan",
                        "content": "WITH tmp as (SELECT *, IFNULL(LAG(arrival_time) OVER(ORDER BY arrival_time), 0) as previous\\n             FROM Buses\\n)\\nSELECT bus_id, SUM(CASE WHEN t.arrival_time >= P.arrival_time AND P.arrival_time > t.previous THEN 1 ELSE 0 END) as passengers_cnt\\nFROM tmp t, Passengers P\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "Srilekha13",
                        "content": "\\'\\'\\'\\n-- To check, if a bus arrives at the station at a time tbus and a passenger arrived at a time tpassenger where tpassenger <= tbus\\n\\nwith cte as(\\nselect p.passenger_id\\n       ,min(b.arrival_time) min_arrival_time\\nfrom buses b \\ninner join passengers p on p.arrival_time <= b.arrival_time\\ngroup by p.passenger_id)\\n\\n-- To take count of passengers who boards the bus as their arrival time matches the bus arrival time and Returns the result table ordered by bus_id in ascending order\\n\\n\\nselect b.bus_id\\n       ,count(c.passenger_id) passengers_cnt\\nfrom buses b\\nleft outer join cte c on b.arrival_time = min_arrival_time\\ngroup by b.bus_id\\norder by b.bus_id \\n\\'\\'\\'"
                    },
                    {
                        "username": "bsofcs",
                        "content": "WITH BUSES_REFINE as (select BUS_ID, ARRIVAL_TIME, LAG(ARRIVAL_TIME,1,0) OVER (ORDER BY ARRIVAL_TIME) as LAST_BUS_ARRIVAL_TIME from BUSES),\\n\\nRAW_DATA as (select BUS_ID, count(PASSENGER_ID) as PASSENGER_CNT from (\\nselect B.BUS_ID,P.PASSENGER_ID from BUSES_REFINE B INNER JOIN PASSENGERS P on P.ARRIVAL_TIME>B.LAST_BUS_ARRIVAL_TIME and P.ARRIVAL_TIME<=B.ARRIVAL_TIME)\\ngroup by BUS_ID)\\n\\nselect B.BUS_ID as \"bus_id\", NVL(R.PASSENGER_CNT,0) as \"passengers_cnt\" from BUSES B LEFT OUTER JOIN RAW_DATA R\\non B.BUS_ID=R.BUS_ID order by 1;"
                    },
                    {
                        "username": "TarunGrover6995",
                        "content": "WITH cte AS\\n(SELECT B.bus_id bus_id, P.passenger_id passenger_id, RANK() OVER(PARTITION BY \\nP.passenger_id ORDER BY B.arrival_time) Rank FROM Buses B JOIN Passengers P ON \\n(P.arrival_time <= B.arrival_time))\\n\\nSELECT bus_id, NVL(passengers_cnt,0) passengers_cnt FROM Buses NATURAL LEFT JOIN \\n(SELECT bus_id, COUNT(passenger_id) passengers_cnt FROM cte WHERE Rank = 1 GROUP \\nBY bus_id) ORDER BY 1"
                    }
                ]
            },
            {
                "id": 1576464,
                "content": [
                    {
                        "username": "JanineR",
                        "content": "#please note that you need to order by arrival_time first\\nSELECT b.bus_id,\\n       COUNT(p.arrival_time) AS passengers_cnt\\n  FROM (SELECT bus_id, arrival_time, IFNULL(LAG(arrival_time) OVER (),0) AS previous_time FROM (SELECT * FROM Buses ORDER BY arrival_time)a) b\\nLEFT JOIN Passengers p \\n    ON b.arrival_time >= p.arrival_time\\n   AND p.arrival_time > b.previous_time\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "pengrunan",
                        "content": "WITH tmp as (SELECT *, IFNULL(LAG(arrival_time) OVER(ORDER BY arrival_time), 0) as previous\\n             FROM Buses\\n)\\nSELECT bus_id, SUM(CASE WHEN t.arrival_time >= P.arrival_time AND P.arrival_time > t.previous THEN 1 ELSE 0 END) as passengers_cnt\\nFROM tmp t, Passengers P\\nGROUP BY 1\\nORDER BY 1"
                    },
                    {
                        "username": "Srilekha13",
                        "content": "\\'\\'\\'\\n-- To check, if a bus arrives at the station at a time tbus and a passenger arrived at a time tpassenger where tpassenger <= tbus\\n\\nwith cte as(\\nselect p.passenger_id\\n       ,min(b.arrival_time) min_arrival_time\\nfrom buses b \\ninner join passengers p on p.arrival_time <= b.arrival_time\\ngroup by p.passenger_id)\\n\\n-- To take count of passengers who boards the bus as their arrival time matches the bus arrival time and Returns the result table ordered by bus_id in ascending order\\n\\n\\nselect b.bus_id\\n       ,count(c.passenger_id) passengers_cnt\\nfrom buses b\\nleft outer join cte c on b.arrival_time = min_arrival_time\\ngroup by b.bus_id\\norder by b.bus_id \\n\\'\\'\\'"
                    },
                    {
                        "username": "bsofcs",
                        "content": "WITH BUSES_REFINE as (select BUS_ID, ARRIVAL_TIME, LAG(ARRIVAL_TIME,1,0) OVER (ORDER BY ARRIVAL_TIME) as LAST_BUS_ARRIVAL_TIME from BUSES),\\n\\nRAW_DATA as (select BUS_ID, count(PASSENGER_ID) as PASSENGER_CNT from (\\nselect B.BUS_ID,P.PASSENGER_ID from BUSES_REFINE B INNER JOIN PASSENGERS P on P.ARRIVAL_TIME>B.LAST_BUS_ARRIVAL_TIME and P.ARRIVAL_TIME<=B.ARRIVAL_TIME)\\ngroup by BUS_ID)\\n\\nselect B.BUS_ID as \"bus_id\", NVL(R.PASSENGER_CNT,0) as \"passengers_cnt\" from BUSES B LEFT OUTER JOIN RAW_DATA R\\non B.BUS_ID=R.BUS_ID order by 1;"
                    },
                    {
                        "username": "TarunGrover6995",
                        "content": "WITH cte AS\\n(SELECT B.bus_id bus_id, P.passenger_id passenger_id, RANK() OVER(PARTITION BY \\nP.passenger_id ORDER BY B.arrival_time) Rank FROM Buses B JOIN Passengers P ON \\n(P.arrival_time <= B.arrival_time))\\n\\nSELECT bus_id, NVL(passengers_cnt,0) passengers_cnt FROM Buses NATURAL LEFT JOIN \\n(SELECT bus_id, COUNT(passenger_id) passengers_cnt FROM cte WHERE Rank = 1 GROUP \\nBY bus_id) ORDER BY 1"
                    }
                ]
            }
        ]
    }
]