[
    {
        "title": "Max Consecutive Ones II",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1574238,
                "content": [
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/bba4aef1-ab65-4f06-9c34-0dbff0ad790e_1597769028.6330585.png)\\n\\n![image](https://assets.leetcode.com/users/images/f4caee6f-2702-4ec9-ab68-3453070f15ce_1597769032.9166074.png)\\n"
                    },
                    {
                        "username": "bingo888",
                        "content": "Whenever 0 is encountered, you should be interested in only string of 1\\'s before and after it. So, add count of 1\\'s before 0 to count of 1\\'s after 0 (also add 1 to count for 0 being replaced). This gives current max and compare it with previous max.\\n\\n![image](https://s3-lc-upload.s3.amazonaws.com/users/dingo555/image_1527843457.png)\\n"
                    },
                    {
                        "username": "user2418Bg",
                        "content": "This problem has a bad description. What the problem is really asking is: `Given a binary string of 1s and 0s, what is the longest subsequence of 1s that you can make by flipping at most 1 zero within the binary string?`. It is NOT asking: `Given a binary string, what is the longest sequence of 1s you can make by flipping at most one 0.` The sample test case `[1,0,1,1,0]`\n is almost worthless because it seems like it fits into the second question (it does but will deceive you because the second question is not what this question is asking) - it will tell you the longest sequence is 4. The question may not become clear until you're given an array of 10^5 elements and spend too much time trying to figure out why the result is what it is. To help you see the picture, try testing with the test case `[1,0,1,1,0,0,1,1,1,1,1]` - this will return 6 and you might be left scratching your head as to why (it's because you're allowed to flip 1 zero at most 1 time in *any* given subsequence in nums therefore the longest sequence possible is `[1,0,1,1,0,1,1,1,1,1,1]` from `[1,0,1,1,0,0,1,1,1,1,1]` - nums[5] was changed to a 1 creating the longest subsequence of 6).\n\n**TLDR - The question is really asking `What is the longest sequence of 1s that will contain all 1s after changing 1 zero to a 1 in the sequence?`. You can make the sequence all 1s by converting 1 zero to a 1 and there may be multiple sequences of 1s in nums**\n\nHopefully this saves the next person some time. \n"
                    },
                    {
                        "username": "aditya9219",
                        "content": "Here is my code below to this problem, could anyone please tell me any testcase which will result in incorrect output.?\\n\\nclass Solution {\\n    public int findMaxConsecutiveOnes(int[] nums) {\\n        int l = 0;\\n        int r = 0;\\n        int max_length = 0;\\n        int last_zero = -1;\\n        while(r < nums.length) {\\n            if (nums[r] == 0) {\\n                if (last_zero == -1) last_zero = r;\\n                else if (last_zero >= 0) {\\n                    while(last_zero < nums.length && nums[last_zero] == 0) {\\n                        last_zero++;\\n                    } \\n                    l = last_zero;\\n                    last_zero = -1;\\n                }\\n            }\\n            r++;\\n            max_length = Math.max(max_length, r - l);\\n        }\\n        return max_length;\\n    }\\n}"
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Looks similar to [1493. Longest Subarray of 1\\'s After Deleting One Element](https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description/)"
                    }
                ]
            },
            {
                "id": 1571960,
                "content": [
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/bba4aef1-ab65-4f06-9c34-0dbff0ad790e_1597769028.6330585.png)\\n\\n![image](https://assets.leetcode.com/users/images/f4caee6f-2702-4ec9-ab68-3453070f15ce_1597769032.9166074.png)\\n"
                    },
                    {
                        "username": "bingo888",
                        "content": "Whenever 0 is encountered, you should be interested in only string of 1\\'s before and after it. So, add count of 1\\'s before 0 to count of 1\\'s after 0 (also add 1 to count for 0 being replaced). This gives current max and compare it with previous max.\\n\\n![image](https://s3-lc-upload.s3.amazonaws.com/users/dingo555/image_1527843457.png)\\n"
                    },
                    {
                        "username": "user2418Bg",
                        "content": "This problem has a bad description. What the problem is really asking is: `Given a binary string of 1s and 0s, what is the longest subsequence of 1s that you can make by flipping at most 1 zero within the binary string?`. It is NOT asking: `Given a binary string, what is the longest sequence of 1s you can make by flipping at most one 0.` The sample test case `[1,0,1,1,0]`\n is almost worthless because it seems like it fits into the second question (it does but will deceive you because the second question is not what this question is asking) - it will tell you the longest sequence is 4. The question may not become clear until you're given an array of 10^5 elements and spend too much time trying to figure out why the result is what it is. To help you see the picture, try testing with the test case `[1,0,1,1,0,0,1,1,1,1,1]` - this will return 6 and you might be left scratching your head as to why (it's because you're allowed to flip 1 zero at most 1 time in *any* given subsequence in nums therefore the longest sequence possible is `[1,0,1,1,0,1,1,1,1,1,1]` from `[1,0,1,1,0,0,1,1,1,1,1]` - nums[5] was changed to a 1 creating the longest subsequence of 6).\n\n**TLDR - The question is really asking `What is the longest sequence of 1s that will contain all 1s after changing 1 zero to a 1 in the sequence?`. You can make the sequence all 1s by converting 1 zero to a 1 and there may be multiple sequences of 1s in nums**\n\nHopefully this saves the next person some time. \n"
                    },
                    {
                        "username": "aditya9219",
                        "content": "Here is my code below to this problem, could anyone please tell me any testcase which will result in incorrect output.?\\n\\nclass Solution {\\n    public int findMaxConsecutiveOnes(int[] nums) {\\n        int l = 0;\\n        int r = 0;\\n        int max_length = 0;\\n        int last_zero = -1;\\n        while(r < nums.length) {\\n            if (nums[r] == 0) {\\n                if (last_zero == -1) last_zero = r;\\n                else if (last_zero >= 0) {\\n                    while(last_zero < nums.length && nums[last_zero] == 0) {\\n                        last_zero++;\\n                    } \\n                    l = last_zero;\\n                    last_zero = -1;\\n                }\\n            }\\n            r++;\\n            max_length = Math.max(max_length, r - l);\\n        }\\n        return max_length;\\n    }\\n}"
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Looks similar to [1493. Longest Subarray of 1\\'s After Deleting One Element](https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description/)"
                    }
                ]
            },
            {
                "id": 1949446,
                "content": [
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/bba4aef1-ab65-4f06-9c34-0dbff0ad790e_1597769028.6330585.png)\\n\\n![image](https://assets.leetcode.com/users/images/f4caee6f-2702-4ec9-ab68-3453070f15ce_1597769032.9166074.png)\\n"
                    },
                    {
                        "username": "bingo888",
                        "content": "Whenever 0 is encountered, you should be interested in only string of 1\\'s before and after it. So, add count of 1\\'s before 0 to count of 1\\'s after 0 (also add 1 to count for 0 being replaced). This gives current max and compare it with previous max.\\n\\n![image](https://s3-lc-upload.s3.amazonaws.com/users/dingo555/image_1527843457.png)\\n"
                    },
                    {
                        "username": "user2418Bg",
                        "content": "This problem has a bad description. What the problem is really asking is: `Given a binary string of 1s and 0s, what is the longest subsequence of 1s that you can make by flipping at most 1 zero within the binary string?`. It is NOT asking: `Given a binary string, what is the longest sequence of 1s you can make by flipping at most one 0.` The sample test case `[1,0,1,1,0]`\n is almost worthless because it seems like it fits into the second question (it does but will deceive you because the second question is not what this question is asking) - it will tell you the longest sequence is 4. The question may not become clear until you're given an array of 10^5 elements and spend too much time trying to figure out why the result is what it is. To help you see the picture, try testing with the test case `[1,0,1,1,0,0,1,1,1,1,1]` - this will return 6 and you might be left scratching your head as to why (it's because you're allowed to flip 1 zero at most 1 time in *any* given subsequence in nums therefore the longest sequence possible is `[1,0,1,1,0,1,1,1,1,1,1]` from `[1,0,1,1,0,0,1,1,1,1,1]` - nums[5] was changed to a 1 creating the longest subsequence of 6).\n\n**TLDR - The question is really asking `What is the longest sequence of 1s that will contain all 1s after changing 1 zero to a 1 in the sequence?`. You can make the sequence all 1s by converting 1 zero to a 1 and there may be multiple sequences of 1s in nums**\n\nHopefully this saves the next person some time. \n"
                    },
                    {
                        "username": "aditya9219",
                        "content": "Here is my code below to this problem, could anyone please tell me any testcase which will result in incorrect output.?\\n\\nclass Solution {\\n    public int findMaxConsecutiveOnes(int[] nums) {\\n        int l = 0;\\n        int r = 0;\\n        int max_length = 0;\\n        int last_zero = -1;\\n        while(r < nums.length) {\\n            if (nums[r] == 0) {\\n                if (last_zero == -1) last_zero = r;\\n                else if (last_zero >= 0) {\\n                    while(last_zero < nums.length && nums[last_zero] == 0) {\\n                        last_zero++;\\n                    } \\n                    l = last_zero;\\n                    last_zero = -1;\\n                }\\n            }\\n            r++;\\n            max_length = Math.max(max_length, r - l);\\n        }\\n        return max_length;\\n    }\\n}"
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Looks similar to [1493. Longest Subarray of 1\\'s After Deleting One Element](https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description/)"
                    }
                ]
            },
            {
                "id": 1906945,
                "content": [
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/bba4aef1-ab65-4f06-9c34-0dbff0ad790e_1597769028.6330585.png)\\n\\n![image](https://assets.leetcode.com/users/images/f4caee6f-2702-4ec9-ab68-3453070f15ce_1597769032.9166074.png)\\n"
                    },
                    {
                        "username": "bingo888",
                        "content": "Whenever 0 is encountered, you should be interested in only string of 1\\'s before and after it. So, add count of 1\\'s before 0 to count of 1\\'s after 0 (also add 1 to count for 0 being replaced). This gives current max and compare it with previous max.\\n\\n![image](https://s3-lc-upload.s3.amazonaws.com/users/dingo555/image_1527843457.png)\\n"
                    },
                    {
                        "username": "user2418Bg",
                        "content": "This problem has a bad description. What the problem is really asking is: `Given a binary string of 1s and 0s, what is the longest subsequence of 1s that you can make by flipping at most 1 zero within the binary string?`. It is NOT asking: `Given a binary string, what is the longest sequence of 1s you can make by flipping at most one 0.` The sample test case `[1,0,1,1,0]`\n is almost worthless because it seems like it fits into the second question (it does but will deceive you because the second question is not what this question is asking) - it will tell you the longest sequence is 4. The question may not become clear until you're given an array of 10^5 elements and spend too much time trying to figure out why the result is what it is. To help you see the picture, try testing with the test case `[1,0,1,1,0,0,1,1,1,1,1]` - this will return 6 and you might be left scratching your head as to why (it's because you're allowed to flip 1 zero at most 1 time in *any* given subsequence in nums therefore the longest sequence possible is `[1,0,1,1,0,1,1,1,1,1,1]` from `[1,0,1,1,0,0,1,1,1,1,1]` - nums[5] was changed to a 1 creating the longest subsequence of 6).\n\n**TLDR - The question is really asking `What is the longest sequence of 1s that will contain all 1s after changing 1 zero to a 1 in the sequence?`. You can make the sequence all 1s by converting 1 zero to a 1 and there may be multiple sequences of 1s in nums**\n\nHopefully this saves the next person some time. \n"
                    },
                    {
                        "username": "aditya9219",
                        "content": "Here is my code below to this problem, could anyone please tell me any testcase which will result in incorrect output.?\\n\\nclass Solution {\\n    public int findMaxConsecutiveOnes(int[] nums) {\\n        int l = 0;\\n        int r = 0;\\n        int max_length = 0;\\n        int last_zero = -1;\\n        while(r < nums.length) {\\n            if (nums[r] == 0) {\\n                if (last_zero == -1) last_zero = r;\\n                else if (last_zero >= 0) {\\n                    while(last_zero < nums.length && nums[last_zero] == 0) {\\n                        last_zero++;\\n                    } \\n                    l = last_zero;\\n                    last_zero = -1;\\n                }\\n            }\\n            r++;\\n            max_length = Math.max(max_length, r - l);\\n        }\\n        return max_length;\\n    }\\n}"
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Looks similar to [1493. Longest Subarray of 1\\'s After Deleting One Element](https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description/)"
                    }
                ]
            },
            {
                "id": 1722822,
                "content": [
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/bba4aef1-ab65-4f06-9c34-0dbff0ad790e_1597769028.6330585.png)\\n\\n![image](https://assets.leetcode.com/users/images/f4caee6f-2702-4ec9-ab68-3453070f15ce_1597769032.9166074.png)\\n"
                    },
                    {
                        "username": "bingo888",
                        "content": "Whenever 0 is encountered, you should be interested in only string of 1\\'s before and after it. So, add count of 1\\'s before 0 to count of 1\\'s after 0 (also add 1 to count for 0 being replaced). This gives current max and compare it with previous max.\\n\\n![image](https://s3-lc-upload.s3.amazonaws.com/users/dingo555/image_1527843457.png)\\n"
                    },
                    {
                        "username": "user2418Bg",
                        "content": "This problem has a bad description. What the problem is really asking is: `Given a binary string of 1s and 0s, what is the longest subsequence of 1s that you can make by flipping at most 1 zero within the binary string?`. It is NOT asking: `Given a binary string, what is the longest sequence of 1s you can make by flipping at most one 0.` The sample test case `[1,0,1,1,0]`\n is almost worthless because it seems like it fits into the second question (it does but will deceive you because the second question is not what this question is asking) - it will tell you the longest sequence is 4. The question may not become clear until you're given an array of 10^5 elements and spend too much time trying to figure out why the result is what it is. To help you see the picture, try testing with the test case `[1,0,1,1,0,0,1,1,1,1,1]` - this will return 6 and you might be left scratching your head as to why (it's because you're allowed to flip 1 zero at most 1 time in *any* given subsequence in nums therefore the longest sequence possible is `[1,0,1,1,0,1,1,1,1,1,1]` from `[1,0,1,1,0,0,1,1,1,1,1]` - nums[5] was changed to a 1 creating the longest subsequence of 6).\n\n**TLDR - The question is really asking `What is the longest sequence of 1s that will contain all 1s after changing 1 zero to a 1 in the sequence?`. You can make the sequence all 1s by converting 1 zero to a 1 and there may be multiple sequences of 1s in nums**\n\nHopefully this saves the next person some time. \n"
                    },
                    {
                        "username": "aditya9219",
                        "content": "Here is my code below to this problem, could anyone please tell me any testcase which will result in incorrect output.?\\n\\nclass Solution {\\n    public int findMaxConsecutiveOnes(int[] nums) {\\n        int l = 0;\\n        int r = 0;\\n        int max_length = 0;\\n        int last_zero = -1;\\n        while(r < nums.length) {\\n            if (nums[r] == 0) {\\n                if (last_zero == -1) last_zero = r;\\n                else if (last_zero >= 0) {\\n                    while(last_zero < nums.length && nums[last_zero] == 0) {\\n                        last_zero++;\\n                    } \\n                    l = last_zero;\\n                    last_zero = -1;\\n                }\\n            }\\n            r++;\\n            max_length = Math.max(max_length, r - l);\\n        }\\n        return max_length;\\n    }\\n}"
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Looks similar to [1493. Longest Subarray of 1\\'s After Deleting One Element](https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description/)"
                    }
                ]
            }
        ]
    }
]