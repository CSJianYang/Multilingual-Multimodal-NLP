[
    {
        "title": "Nth Highest Salary",
        "question_content": "Table: Employee\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| id          | int  |\n| salary      | int  |\n+-------------+------+\nid is the primary key (column with unique values) for this table.\nEach row of this table contains information about the salary of an employee.\n\n&nbsp;\nWrite a solution to find the nth highest salary from the Employee table. If there is no nth highest salary, return&nbsp;null.\nThe result format is in the following example.\n&nbsp;\nExample 1:\n\nInput: \nEmployee table:\n+----+--------+\n| id | salary |\n+----+--------+\n| 1  | 100    |\n| 2  | 200    |\n| 3  | 300    |\n+----+--------+\nn = 2\nOutput: \n+------------------------+\n| getNthHighestSalary(2) |\n+------------------------+\n| 200                    |\n+------------------------+\n\nExample 2:\n\nInput: \nEmployee table:\n+----+--------+\n| id | salary |\n+----+--------+\n| 1  | 100    |\n+----+--------+\nn = 2\nOutput: \n+------------------------+\n| getNthHighestSalary(2) |\n+------------------------+\n| null                   |\n+------------------------+",
        "solutions": [
            {
                "id": 53041,
                "title": "accpted-solution-for-the-nth-highest-salary",
                "content": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n    DECLARE M INT;\\n    SET M=N-1;\\n      RETURN (\\n          # Write your MySQL query statement below.\\n          SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\\n      );\\n    END",
                "solutionTags": [],
                "code": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n    DECLARE M INT;\\n    SET M=N-1;\\n      RETURN (\\n          # Write your MySQL query statement below.\\n          SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\\n      );\\n    END",
                "codeTag": "Unknown"
            },
            {
                "id": 1803647,
                "title": "best-simplest-mysql-solution-177-nth-highest-salary",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT(salary) from Employee order by salary DESC\\n      LIMIT 1 OFFSET N\\n      \\n  );\\nEND\\n\\n#pls upvote if you find solution easy to undestand....!! Thanks..!!!\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT(salary) from Employee order by salary DESC\\n      LIMIT 1 OFFSET N\\n      \\n  );\\nEND\\n\\n#pls upvote if you find solution easy to undestand....!! Thanks..!!!\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3858402,
                "title": "very-simple-and-clean-pandas-with-comments",
                "content": "\\n# Approach\\n- Drop any duplicate salary values: Use the drop_duplicates() function on the \\'salary\\' column to remove any duplicate salary values, if present. This step is essential to avoid counting duplicates as separate salary ranks.\\n\\n- Sort the unique salaries: Use the sort_values() function on the unique salary values to sort them in descending order.\\n\\n- Check if N is within the valid range: Verify if the desired Nth highest salary is within the range of unique salary values available in the DataFrame. If N exceeds the number of unique salaries, there is no Nth highest salary, and we return \\'None\\'.\\n\\n- Get the Nth highest salary: Use iloc[N - 1] to access the Nth highest salary from the sorted salaries. Subtract 1 from N because Python uses zero-based indexing\\n# Code\\n```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    # Drop any duplicate salary values to avoid counting duplicates as separate salary ranks\\n    unique_salaries = employee[\\'salary\\'].drop_duplicates()\\n\\n    # Sort the unique salaries in descending order and get the Nth highest salary\\n    sorted_salaries = unique_salaries.sort_values(ascending=False)\\n\\n    # If N exceeds the number of unique salaries, return None\\n    if N > len(sorted_salaries):\\n        return pd.DataFrame({\\'Nth Highest Salary\\': [None]})\\n    \\n    # Get the Nth highest salary from the sorted salaries\\n    nth_highest = sorted_salaries.iloc[N - 1]\\n    \\n    return pd.DataFrame({\\'Nth Highest Salary\\': [nth_highest]})\\n```\\n![upvote img.jpg](https://assets.leetcode.com/users/images/22d7c772-e447-4bec-a23a-69a2c2f5f1e0_1691069745.712749.jpeg)\\n",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    # Drop any duplicate salary values to avoid counting duplicates as separate salary ranks\\n    unique_salaries = employee[\\'salary\\'].drop_duplicates()\\n\\n    # Sort the unique salaries in descending order and get the Nth highest salary\\n    sorted_salaries = unique_salaries.sort_values(ascending=False)\\n\\n    # If N exceeds the number of unique salaries, return None\\n    if N > len(sorted_salaries):\\n        return pd.DataFrame({\\'Nth Highest Salary\\': [None]})\\n    \\n    # Get the Nth highest salary from the sorted salaries\\n    nth_highest = sorted_salaries.iloc[N - 1]\\n    \\n    return pd.DataFrame({\\'Nth Highest Salary\\': [nth_highest]})\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 53062,
                "title": "no-variable-no-limit-x-1-just-one-query-808ms",
                "content": "        CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n        \\n      RETURN (\\n          # Write your MySQL query statement below.\\n          \\n        \\n          SELECT e1.Salary\\n          FROM (SELECT DISTINCT Salary FROM Employee) e1\\n          WHERE (SELECT COUNT(*) FROM (SELECT DISTINCT Salary FROM Employee) e2 WHERE e2.Salary > e1.Salary) = N - 1      \\n          \\n          LIMIT 1\\n          \\n          \\n          \\n          \\n      );\\n    END",
                "solutionTags": [],
                "code": "        CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n        \\n      RETURN (\\n          # Write your MySQL query statement below.\\n          \\n        \\n          SELECT e1.Salary\\n          FROM (SELECT DISTINCT Salary FROM Employee) e1\\n          WHERE (SELECT COUNT(*) FROM (SELECT DISTINCT Salary FROM Employee) e2 WHERE e2.Salary > e1.Salary) = N - 1      \\n          \\n          LIMIT 1\\n          \\n          \\n          \\n          \\n      );\\n    END",
                "codeTag": "Unknown"
            },
            {
                "id": 2448941,
                "title": "solution-with-detail-explanation-easy-to-understand",
                "content": "**Please upvote to motivate me ^ Thanks**\\n\\nHERE  if  N=2  THEN Second Highest salary will be Displayed\\n\\nFirst Select Column  by SELECT salary \\nNow SELECT DISTINCT salary because we don\\'t want repeating value.\\nArrange Salary in descending Order So we have Higest salary at TOP\\nNow we Only one row as output SO  LIMIT 1\\nNow  OFFSET it display N+1 row  Example. if n=2  then it will show Third Highest Salary Therefore N=N-1 is used.\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\nSET N=N-1;\\n\\n  RETURN (\\n      SELECT DISTINCT salary FROM Employee ORDER BY salary DESC \\n      LIMIT 1 OFFSET N      \\n  );\\nEND\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\nSET N=N-1;\\n\\n  RETURN (\\n      SELECT DISTINCT salary FROM Employee ORDER BY salary DESC \\n      LIMIT 1 OFFSET N      \\n  );\\nEND\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53071,
                "title": "my-accepted-simply-solution-any-advising",
                "content": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n        set N=N-1;\\n      RETURN (\\n          select distinct Salary from Employee order by Salary desc limit N,1\\n      );\\n    END",
                "solutionTags": [],
                "code": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n        set N=N-1;\\n      RETURN (\\n          select distinct Salary from Employee order by Salary desc limit N,1\\n      );\\n    END",
                "codeTag": "Unknown"
            },
            {
                "id": 53036,
                "title": "why-using-limit-n-1-1-will-cause-error",
                "content": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n    RETURN (\\n          # Write your MySQL query statement below.\\n          SELECT IFNULL((SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N-1 ,1), NULL)  \\n      );\\n    END\\n\\nThis was my code for the problem, but it seems there's an error near LIMIT N-1,1. Anyone has any idea why?",
                "solutionTags": [],
                "code": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n    RETURN (\\n          # Write your MySQL query statement below.\\n          SELECT IFNULL((SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N-1 ,1), NULL)  \\n      );\\n    END\\n\\nThis was my code for the problem, but it seems there's an error near LIMIT N-1,1. Anyone has any idea why?",
                "codeTag": "Unknown"
            },
            {
                "id": 498281,
                "title": "mysql-offset-by-n-1",
                "content": "The general solution which should be working for all SQL (574ms, 35.61%): \\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    # Write your MySQL query statement below.\\n    SELECT DISTINCT Salary\\n    FROM Employee e1\\n    WHERE N-1 = (SELECT COUNT(DISTINCT Salary) FROM Employee e2 WHERE e1.Salary < e2.Salary)\\n  );\\nEND\\n```\\n\\nUsing `OFFSET` in MySQL (182ms, 99.01%): \\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT; \\nSET M=N-1;\\n  RETURN (\\n    # Write your MySQL query statement below.\\n    SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M\\n  );\\nEND\\n```\\n\\nComment: Per MySQL documentation, `OFFSET` can only take numeric contants, i.e. not `N-1`.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    # Write your MySQL query statement below.\\n    SELECT DISTINCT Salary\\n    FROM Employee e1\\n    WHERE N-1 = (SELECT COUNT(DISTINCT Salary) FROM Employee e2 WHERE e1.Salary < e2.Salary)\\n  );\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT; \\nSET M=N-1;\\n  RETURN (\\n    # Write your MySQL query statement below.\\n    SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET M\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3212934,
                "title": "177-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nThis creates a function getNthHighestSalary that takes an integer n and returns the nth highest salary in the Employee table.\\n\\nThe function works by first subtracting 1 from the input n to account for the fact that the LIMIT clause in SQL is 0-indexed.\\n\\nIt then uses a subquery to select the DISTINCT Salary values from the Employee table, orders them in descending order using ORDER BY Salary DESC, skips the first n results using OFFSET n, and returns the first result using LIMIT 1.\\n\\nIf there are fewer than n distinct salaries in the table, the function will return NULL.\\n\\nYou can call the function by executing:\\n```\\nSELECT getNthHighestSalary(n);\\n\\n```\\nwhere n is the integer input to the function.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(n INT) RETURNS INT\\nBEGIN\\n    SET n = n-1;\\n    RETURN (\\n        SELECT DISTINCT Salary FROM Employee\\n        ORDER BY Salary DESC\\n        LIMIT 1 OFFSET n\\n    );\\nEND\\n\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\nSELECT getNthHighestSalary(n);\\n\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(n INT) RETURNS INT\\nBEGIN\\n    SET n = n-1;\\n    RETURN (\\n        SELECT DISTINCT Salary FROM Employee\\n        ORDER BY Salary DESC\\n        LIMIT 1 OFFSET n\\n    );\\nEND\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 872818,
                "title": "using-rank",
                "content": "Here is my solution using dense_rank\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary\\n      from \\n      (select DENSE_RANK() over (order by Salary desc) as r, Salary\\n        from Employee\\n       ) as t\\n      where r =N\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary\\n      from \\n      (select DENSE_RANK() over (order by Salary desc) as r, Salary\\n        from Employee\\n       ) as t\\n      where r =N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 185368,
                "title": "fast-and-easy-to-understand-mysql-solution",
                "content": "```\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  SET N=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT Salary\n      FROM Employee\n      GROUP BY Salary\n      ORDER BY Salary DESC\n      LIMIT 1 OFFSET N\n      \n  );\nEND\n```",
                "solutionTags": [],
                "code": "```\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  SET N=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT Salary\n      FROM Employee\n      GROUP BY Salary\n      ORDER BY Salary DESC\n      LIMIT 1 OFFSET N\n      \n  );\nEND\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3867257,
                "title": "pandas-vs-sql-elegant-short-all-30-days-of-pandas-solutions",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n- Space complexity: $$O(n)$$\\n\\n# Code\\n```Python []\\ndef nth_highest_salary(employee: pd.DataFrame, n: int) -> pd.DataFrame:\\n    return employee.sort_values(\\n        by=\\'salary\\',\\n        ascending=False,\\n    ).drop_duplicates(\\n        subset=[\\'salary\\'],\\n    ).iloc[n - 1:n][[\\'salary\\']]\\n```\\n```SQL []\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    SET N = N - 1;\\n    RETURN (\\n        SELECT DISTINCT(salary)\\n          FROM Employee\\n         ORDER BY salary DESC\\n         LIMIT 1\\n        OFFSET N\\n  );\\nEND\\n```\\n\\n# Important!\\n###### If you like the solution or find it useful, feel free to **upvote** for it, it will support me in creating high quality solutions)\\n\\n# 30 Days of Pandas solutions\\n\\n### Data Filtering \\u2705\\n- [Big Countries](https://leetcode.com/problems/big-countries/solutions/3848474/pandas-elegant-short-1-line/)\\n- [Recyclable and Low Fat Products](https://leetcode.com/problems/recyclable-and-low-fat-products/solutions/3848500/pandas-elegant-short-1-line/)\\n- [Customers Who Never Order](https://leetcode.com/problems/customers-who-never-order/solutions/3848527/pandas-elegant-short-1-line/)\\n- [Article Views I](https://leetcode.com/problems/article-views-i/solutions/3867192/pandas-elegant-short-1-line/)\\n\\n\\n### String Methods \\u2705\\n- [Invalid Tweets](https://leetcode.com/problems/invalid-tweets/solutions/3849121/pandas-elegant-short-1-line/)\\n- [Calculate Special Bonus](https://leetcode.com/problems/calculate-special-bonus/solutions/3867209/pandas-elegant-short-1-line/)\\n- [Fix Names in a Table](https://leetcode.com/problems/fix-names-in-a-table/solutions/3849167/pandas-elegant-short-1-line/)\\n- [Find Users With Valid E-Mails](https://leetcode.com/problems/find-users-with-valid-e-mails/solutions/3849177/pandas-elegant-short-1-line/)\\n- [Patients With a Condition](https://leetcode.com/problems/patients-with-a-condition/solutions/3849196/pandas-elegant-short-1-line-regex/)\\n\\n\\n### Data Manipulation \\u2705\\n- [Nth Highest Salary](https://leetcode.com/problems/nth-highest-salary/solutions/3867257/pandas-elegant-short-1-line/)\\n- [Second Highest Salary](https://leetcode.com/problems/second-highest-salary/solutions/3867278/pandas-elegant-short/)\\n- [Department Highest Salary](https://leetcode.com/problems/department-highest-salary/solutions/3867312/pandas-elegant-short-1-line/)\\n- [Rank Scores](https://leetcode.com/problems/rank-scores/solutions/3872817/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Delete Duplicate Emails](https://leetcode.com/problems/delete-duplicate-emails/solutions/3849211/pandas-elegant-short/)\\n- [Rearrange Products Table](https://leetcode.com/problems/rearrange-products-table/solutions/3849226/pandas-elegant-short-1-line/)\\n\\n\\n### Statistics \\u2705\\n- [The Number of Rich Customers](https://leetcode.com/problems/the-number-of-rich-customers/solutions/3849251/pandas-elegant-short-1-line/)\\n- [Immediate Food Delivery I](https://leetcode.com/problems/immediate-food-delivery-i/solutions/3872719/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Count Salary Categories](https://leetcode.com/problems/count-salary-categories/solutions/3872801/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n\\n\\n### Data Aggregation \\u2705\\n- [Find Total Time Spent by Each Employee](https://leetcode.com/problems/find-total-time-spent-by-each-employee/solutions/3872715/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Game Play Analysis I](https://leetcode.com/problems/game-play-analysis-i/solutions/3863223/pandas-elegant-short-1-line/)\\n- [Number of Unique Subjects Taught by Each Teacher](https://leetcode.com/problems/number-of-unique-subjects-taught-by-each-teacher/solutions/3863239/pandas-elegant-short-1-line/)\\n- [Classes More Than 5 Students](https://leetcode.com/problems/classes-more-than-5-students/solutions/3863249/pandas-elegant-short/)\\n- [Customer Placing the Largest Number of Orders](https://leetcode.com/problems/customer-placing-the-largest-number-of-orders/solutions/3863257/pandas-elegant-short-1-line/)\\n- [Group Sold Products By The Date](https://leetcode.com/problems/group-sold-products-by-the-date/solutions/3863267/pandas-elegant-short-1-line/)\\n- [Daily Leads and Partners](https://leetcode.com/problems/daily-leads-and-partners/solutions/3863279/pandas-elegant-short-1-line/)\\n\\n\\n### Data Aggregation \\u2705\\n- [Actors and Directors Who Cooperated At Least Three Times](https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times/solutions/3863309/pandas-elegant-short/)\\n- [Replace Employee ID With The Unique Identifier](https://leetcode.com/problems/replace-employee-id-with-the-unique-identifier/solutions/3872822/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Students and Examinations](https://leetcode.com/problems/students-and-examinations/solutions/3872699/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Managers with at Least 5 Direct Reports](https://leetcode.com/problems/managers-with-at-least-5-direct-reports/solutions/3872861/pandas-elegant-short/)\\n- [Sales Person](https://leetcode.com/problems/sales-person/solutions/3872712/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Pandas"
                ],
                "code": "```Python []\\ndef nth_highest_salary(employee: pd.DataFrame, n: int) -> pd.DataFrame:\\n    return employee.sort_values(\\n        by=\\'salary\\',\\n        ascending=False,\\n    ).drop_duplicates(\\n        subset=[\\'salary\\'],\\n    ).iloc[n - 1:n][[\\'salary\\']]\\n```\n```SQL []\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    SET N = N - 1;\\n    RETURN (\\n        SELECT DISTINCT(salary)\\n          FROM Employee\\n         ORDER BY salary DESC\\n         LIMIT 1\\n        OFFSET N\\n  );\\nEND\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2433787,
                "title": "5-different-ways-detailed-explanation",
                "content": "**Finding the highest salary**\\n```\\nselect MAX(Salary) from Employee;\\nfinding the 2nd highest salary\\n```\\n\\n**Query-1**\\n\\n```\\nSELECT MAX(Salary) FROM Employee\\nWHERE Salary NOT IN (SELECT MAX(Salary) FROM Employee);\\n```\\n\\n**Query-2**\\n```\\nselect MAX(Salary) from Employee\\nWHERE Salary <> (select MAX(Salary) from Employee )\\n```\\n---\\n**Finding the Nth highest salary**\\n\\n**Query-1**\\n```\\nSELECT * /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( /* Subquery starts here */\\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n```\\n\\n**Query-2**\\n```\\nSELECT *\\nFROM Employee Emp1\\nWHERE (1) = (\\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n```\\n---\\n\\n**Nth highest salary in *MySQL***\\n```\\nSELECT Salary FROM Employee \\nORDER BY Salary DESC LIMIT n-1,1\\n```\\n---\\n\\n**Nth highest salary using the *TOP keyword in SQL Server***\\n```\\nSELECT TOP 1 Salary\\nFROM (\\n      SELECT DISTINCT TOP N Salary\\n      FROM Employee\\n      ORDER BY Salary DESC\\n      ) AS Emp\\nORDER BY Salary\\n```\\n\\n**Nth highest salary in *SQL Server***\\n\\n```\\nSELECT Salary FROM Employee \\nORDER BY Salary DESC OFFSET N-1 ROW(S) \\nFETCH FIRST ROW ONLY\\n```\\n---\\n\\n**Nth highest salary in Oracle using *rownum***\\n```\\nselect * from (\\n  select Emp.*, \\nrow_number() over (order by Salary DESC) rownumb \\nfrom Employee Emp\\n)\\nwhere rownumb = n;  /*n is nth highest salary*/\\n```\\n\\n**Nth highest salary in *Oracle using RANK***\\n```\\nselect * FROM (\\nselect EmployeeID, Salary\\n,rank() over (order by Salary DESC) ranking\\nfrom Employee\\n)\\nWHERE ranking = N;\\n```\\n\\n\\n*Note:* **If you like the content please upvote for further such explanation \\uD83D\\uDE4F**",
                "solutionTags": [
                    "MySQL",
                    "Oracle"
                ],
                "code": "```\\nselect MAX(Salary) from Employee;\\nfinding the 2nd highest salary\\n```\n```\\nSELECT MAX(Salary) FROM Employee\\nWHERE Salary NOT IN (SELECT MAX(Salary) FROM Employee);\\n```\n```\\nselect MAX(Salary) from Employee\\nWHERE Salary <> (select MAX(Salary) from Employee )\\n```\n```\\nSELECT * /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( /* Subquery starts here */\\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n```\n```\\nSELECT *\\nFROM Employee Emp1\\nWHERE (1) = (\\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n```\n```\\nSELECT Salary FROM Employee \\nORDER BY Salary DESC LIMIT n-1,1\\n```\n```\\nSELECT TOP 1 Salary\\nFROM (\\n      SELECT DISTINCT TOP N Salary\\n      FROM Employee\\n      ORDER BY Salary DESC\\n      ) AS Emp\\nORDER BY Salary\\n```\n```\\nSELECT Salary FROM Employee \\nORDER BY Salary DESC OFFSET N-1 ROW(S) \\nFETCH FIRST ROW ONLY\\n```\n```\\nselect * from (\\n  select Emp.*, \\nrow_number() over (order by Salary DESC) rownumb \\nfrom Employee Emp\\n)\\nwhere rownumb = n;  /*n is nth highest salary*/\\n```\n```\\nselect * FROM (\\nselect EmployeeID, Salary\\n,rank() over (order by Salary DESC) ranking\\nfrom Employee\\n)\\nWHERE ranking = N;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2170019,
                "title": "3-solutions-dense-rank-limit-comparison",
                "content": "**1st Approach**\\n\\n**Limit**\\n\\nSort the salary in descending order apply the limit N-1,1(where N-1 from where to select the salary and 1 represent to select one Salary.\\n\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      SELECT DISTINCT SALARY FROM EMPLOYEE ORDER BY SALARY DESC LIMIT N, 1\\n      \\n  );\\nEND\\n```\\n\\n\\n**2nd Approach**\\n\\n**Dense Rank**\\n\\nDense Rank is used for give priority to salary, we will give highest priority to highest salary and select *Nth* highest priority will be our *Nth* highest salary.\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  # SET N = N - 1;\\n  RETURN (\\n      select distinct(salary) from (select salary,dense_rank() over (order by salary desc) as ds from employee) as temp where ds=N\\n      \\n  );\\nEND\\n```\\n\\n**3rd Approach**\\n\\n**Compare table data with its own duplicate**\\n\\nwe will take one salary and compare it with all the salary if there will be N-1 salary which are greater than selected salary then that will be our *Nth* highest salary.\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct(e1.salary) from employee e1 where N-1=(select count(distinct salary) from employee e2 where e2.salary>e1.salary)\\n  );\\nEND\\n```\\n\\n\\n**NOTE :- Salary will be return null itself if there will be no Nth highest Salary.**",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      SELECT DISTINCT SALARY FROM EMPLOYEE ORDER BY SALARY DESC LIMIT N, 1\\n      \\n  );\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  # SET N = N - 1;\\n  RETURN (\\n      select distinct(salary) from (select salary,dense_rank() over (order by salary desc) as ds from employee) as temp where ds=N\\n      \\n  );\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct(e1.salary) from employee e1 where N-1=(select count(distinct salary) from employee e2 where e2.salary>e1.salary)\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53072,
                "title": "my-simple-solution-with-order-by-and-limit",
                "content": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n      RETURN (\\n          # Write your MySQL query statement below.\\n          select if(count(*)<N,null,min(s.Salary))\\n          from \\n          (select distinct Salary\\n          from Employee\\n          order by Salary DESC\\n          limit 0,N) s\\n      );\\n    END",
                "solutionTags": [],
                "code": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n      RETURN (\\n          # Write your MySQL query statement below.\\n          select if(count(*)<N,null,min(s.Salary))\\n          from \\n          (select distinct Salary\\n          from Employee\\n          order by Salary DESC\\n          limit 0,N) s\\n      );\\n    END",
                "codeTag": "Unknown"
            },
            {
                "id": 2420827,
                "title": "mysql-easy-understanding-one-line-solution",
                "content": "***Please upvote to motivate me in my quest of documenting all leetcode solutions. HAPPY CODING:)\\nAny suggestions and improvements are always welcome.***\\n____________________________________________________________________________________________________________________________\\n\\u2705 **MySQL Code :**\\nOne line MySQL code:\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\nRETURN(  # Write your MySQL query statement below.\\n\\t\\tSELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\\n\\t  );\\nEND\\n```\\n____________________________________________________________________________________________________________________________\\nIf you like the solution, please upvote \\uD83D\\uDD3C\\nFor any questions, or discussions, comment below. \\uD83D\\uDC47\\uFE0F",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\nRETURN(  # Write your MySQL query statement below.\\n\\t\\tSELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\\n\\t  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53078,
                "title": "accepted-solution-of-nth-highest-salary",
                "content": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n    DECLARE M INT;\\n    SET M=N-1;\\n      RETURN (\\n        # Write your MySQL query statement below.\\n        SELECT IFNULL((SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M ,1), NULL)\\n      );\\n    END",
                "solutionTags": [],
                "code": "    CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n    BEGIN\\n    DECLARE M INT;\\n    SET M=N-1;\\n      RETURN (\\n        # Write your MySQL query statement below.\\n        SELECT IFNULL((SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M ,1), NULL)\\n      );\\n    END",
                "codeTag": "Unknown"
            },
            {
                "id": 1095294,
                "title": "mysql-simple-solution-using-only-limit-offset",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N -1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary AS \\'getNthHighestSalary\\'\\n      FROM Employee\\n      ORDER BY Salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N -1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary AS \\'getNthHighestSalary\\'\\n      FROM Employee\\n      ORDER BY Salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 3848432,
                "title": "pandas-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\nSort table by salary in descending order. Drop duplicated salaries.\\n\\n`.iloc[N - 1:N]` returns Nth salary if `len(table) < N`, else `null`\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    employee = employee.sort_values(\\'salary\\', ascending=False).drop_duplicates(subset=[\\'salary\\'])\\n    employee = employee.iloc[N - 1:N]\\n    return employee[[\\'salary\\']]\\n    \\n    \\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    employee = employee.sort_values(\\'salary\\', ascending=False).drop_duplicates(subset=[\\'salary\\'])\\n    employee = employee.iloc[N - 1:N]\\n    return employee[[\\'salary\\']]\\n    \\n    \\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3682411,
                "title": "easy-solution-with-two-liner-code",
                "content": "## ***Please Upvote my solution, if you find it helpful ;)***\\n\\n# Intuition\\nThe intuition behind the approach is to retrieve the Nth highest salary from the \"Employee\" table. To achieve this, we first subtract 1 from N to adjust it to the correct index. Then, we query the distinct salaries from the \"Employee\" table, order them in descending order, and use the LIMIT and OFFSET clauses to select the Nth highest salary. This approach ensures that we retrieve the desired result efficiently.\\n\\n# Approach\\n1. We start by subtracting 1 from the given input N. This is because the problem assumes 1-based indexing, but SQL uses 0-based indexing.\\n\\n1. Next, we write a MySQL query using the SELECT statement to retrieve distinct salaries from the Employee table. The DISTINCT keyword ensures that each salary value is considered only once.\\n\\n1. We order the salaries in descending order using the ORDER BY clause. This means that the highest salary will appear first in the result set.\\n\\n1. Finally, we use the LIMIT clause to restrict the result to only the Nth row, starting from the 0-based index N. Since we subtracted 1 from N earlier, this will give us the Nth highest salary.\\n# Complexity\\n- Time complexity:\\nThe time complexity of your solution depends on the efficiency of executing the SQL query. The query retrieves distinct salaries and sorts them, which typically has a time complexity of $$O(n log n)$$, where n is the number of rows in the Employee table.\\n\\n- Space complexity:\\nThe space complexity of your solution is determined by the size of the result set. Since you are retrieving a single salary, the space complexity is $$O(1)$$ or constant.\\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n        SELECT DISTINCT(salary) from Employee order by salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```\\n## ***Please Upvote my solution, if you find it helpful ;)***\\n![6a87bc25-d70b-424f-9e60-7da6f345b82a_1673875931.8933976.jpeg](https://assets.leetcode.com/users/images/546be381-7a0d-415f-9815-dc4523f5a8a4_1687718638.7967603.jpeg)\\n",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n        SELECT DISTINCT(salary) from Employee order by salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1069551,
                "title": "nice-clear-solution-memory-0b-less-than-100-00",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      select DISTINCT Salary\\n      from Employee\\n      order by Salary desc\\n      limit M, 1\\n      \\n  );\\nEND",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      select DISTINCT Salary\\n      from Employee\\n      order by Salary desc\\n      limit M, 1\\n      \\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1025487,
                "title": "simple-and-easy-to-understand-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT Salary\\n      FROM EMPLOYEE\\n      ORDER BY Salary Desc\\n      LIMIT 1 OFFSET N\\n      \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT Salary\\n      FROM EMPLOYEE\\n      ORDER BY Salary Desc\\n      LIMIT 1 OFFSET N\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 370799,
                "title": "my-accepted-solution",
                "content": "My first solution was with CTE query, but it gave me error - I guess it\\'s not supported on LeetCode.\\nSo, I modified it to subquery and that gave me 1807 ms since I used GROUP BY. After adding additional subquery I was able to speed up it to 686ms and that was faster than ~79%.\\n\\nHere is the solution:\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT Salary FROM \\n        (\\n            SELECT\\n                row_number() OVER (ORDER BY salary DESC) AS row_num,            \\n                emp.salary\\n            FROM (SELECT DISTINCT Salary FROM Employee) emp\\n        ) result\\n        WHERE row_num = @N        \\n    );\\nEND\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT Salary FROM \\n        (\\n            SELECT\\n                row_number() OVER (ORDER BY salary DESC) AS row_num,            \\n                emp.salary\\n            FROM (SELECT DISTINCT Salary FROM Employee) emp\\n        ) result\\n        WHERE row_num = @N        \\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2607377,
                "title": "177-nth-highest-salary",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\nSET N = N-1;\\n\\n  RETURN ( SELECT DISTINCT Salary \\n           FROM Employee \\n           ORDER BY Salary DESC LIMIT N, 1);\\n  \\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\nSET N = N-1;\\n\\n  RETURN ( SELECT DISTINCT Salary \\n           FROM Employee \\n           ORDER BY Salary DESC LIMIT N, 1);\\n  \\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2551284,
                "title": "177-nth-highest-salary",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\nSET N = N-1;\\n\\n  RETURN ( SELECT DISTINCT Salary \\n           FROM Employee \\n           ORDER BY Salary DESC LIMIT N, 1);\\n  \\nEND",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\nSET N = N-1;\\n\\n  RETURN ( SELECT DISTINCT Salary \\n           FROM Employee \\n           ORDER BY Salary DESC LIMIT N, 1);\\n  \\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1878593,
                "title": "my-sql-simple-solution",
                "content": "Please upvote if you got any perspective from the solution. Thanks in advance. Happy Leetcoding!\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary from Employee e where N - 1 = (\\n        select count(distinct salary) from Employee e1 where e1.salary > e.salary\\n      )\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary from Employee e where N - 1 = (\\n        select count(distinct salary) from Employee e1 where e1.salary > e.salary\\n      )\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 784487,
                "title": "ms-sql-server",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM Employee\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM Employee\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 343689,
                "title": "mysql-easy-to-understand-beats-99-time",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      select distinct(salary) from employee order by salary desc LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      select distinct(salary) from employee order by salary desc LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2585924,
                "title": "mysql-solution-using-order-by-limit-easy-step-by-step-explanation",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT M,1\\n\\n\\n);\\nEND\\n```\\n\\n**Explanation:**\\n```\\nSELECT DISTINCT salary FROM Employee\\n```\\n* First I have selected **DISTINCT salary** from **Employee** table. \\n\\n```\\nORDER BY salary DESC\\nLIMIT M,1\\n```\\n* After that I have used **ORDER BY** on **salary** in **DESCENDING ORDER**.\\n* Then I have used **LIMIT** to show only the **Nth Highest Salary** using **M variable**\\n\\n\\n```\\nDECLARE M INT;\\nSET M=N-1;\\n```\\n* Here I have declared a new integer **M**, that will be used in **the LIMIT clause** for returning the nth highest salary.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT M,1\\n\\n\\n);\\nEND\\n```\n```\\nSELECT DISTINCT salary FROM Employee\\n```\n```\\nORDER BY salary DESC\\nLIMIT M,1\\n```\n```\\nDECLARE M INT;\\nSET M=N-1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1428784,
                "title": "177-nth-highest-salary-96-faster-solution-with-comments",
                "content": "\\'\\'\\'\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\n  SET N= N-1; # change N to N-1 because in OFFSET (check query) calculation is not allowed \\n\\n  RETURN (\\n      \\n      SELECT DISTINCT Salary # TAKE distinct becuase people can have same salary\\n      FROM Employee\\n      ORDER BY Salary DESC \\n      LIMIT 1 OFFSET N       \\n  );\\nEND\\n\\'\\'\\'",
                "solutionTags": [],
                "code": "\\'\\'\\'\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\n  SET N= N-1; # change N to N-1 because in OFFSET (check query) calculation is not allowed \\n\\n  RETURN (\\n      \\n      SELECT DISTINCT Salary # TAKE distinct becuase people can have same salary\\n      FROM Employee\\n      ORDER BY Salary DESC \\n      LIMIT 1 OFFSET N       \\n  );\\nEND\\n\\'\\'\\'",
                "codeTag": "Unknown"
            },
            {
                "id": 1339995,
                "title": "sql-mysql-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N - 1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary\\n      FROM Employee\\n      ORDER BY Salary DESC\\n      LIMIT N, 1\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N - 1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary\\n      FROM Employee\\n      ORDER BY Salary DESC\\n      LIMIT N, 1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 742686,
                "title": "n-1-approach",
                "content": "```\\nselect max(Salary) from Employee e1 where N-1 = (select count(distinct Salary) from Employee e2 where e2.Salary > e1.Salary)\\n\\n```",
                "solutionTags": [],
                "code": "```\\nselect max(Salary) from Employee e1 where N-1 = (select count(distinct Salary) from Employee e2 where e2.Salary > e1.Salary)\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 376369,
                "title": "postgresql-window-function-one-liner",
                "content": "```\\nselect distinct nth_value(salary, 2) over (order by salary desc rows between unbounded preceding and unbounded following) from employee;\\n```",
                "solutionTags": [],
                "code": "```\\nselect distinct nth_value(salary, 2) over (order by salary desc rows between unbounded preceding and unbounded following) from employee;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 137017,
                "title": "oracle-solution",
                "content": "```\\nselect salary into result from (\\n        select salary,rownum r1 from\\n            (select distinct salary from Employee order by salary desc)\\n        )\\n    where r1 = n;\\n```\\nUse \"rownum\" in subqueries.\\n1st query: order of salary in desc,\\n2nd query: get rownum as r1 of ordered table in 1st query;\\n3rd query: make r1 fixed.\\nNote: use \"distinct\" to output null value.\\n",
                "solutionTags": [],
                "code": "```\\nselect salary into result from (\\n        select salary,rownum r1 from\\n            (select distinct salary from Employee order by salary desc)\\n        )\\n    where r1 = n;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3850655,
                "title": "best-solutions-mysql-pandas-beats-100",
                "content": "# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT(salary) from Employee order by salary DESC\\n      LIMIT 1 OFFSET N \\n  );\\nEND\\n```\\n```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    unique_salaries = employee.salary.unique()\\n    if len(unique_salaries) < N:\\n        return pd.DataFrame([np.NaN], columns=[f\\'getMthHighestSalary({N})\\'])\\n    else:\\n        salary = sorted(unique_salaries, reverse=True)[N-1]\\n        return pd.DataFrame([salary], columns=[f\\'getMthHighestSalary({N})\\'])\\n```",
                "solutionTags": [
                    "MySQL",
                    "Pandas"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT(salary) from Employee order by salary DESC\\n      LIMIT 1 OFFSET N \\n  );\\nEND\\n```\n```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    unique_salaries = employee.salary.unique()\\n    if len(unique_salaries) < N:\\n        return pd.DataFrame([np.NaN], columns=[f\\'getMthHighestSalary({N})\\'])\\n    else:\\n        salary = sorted(unique_salaries, reverse=True)[N-1]\\n        return pd.DataFrame([salary], columns=[f\\'getMthHighestSalary({N})\\'])\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2340388,
                "title": "using-limit-and-offset",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT(salary) \\n      FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT(salary) \\n      FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 2274283,
                "title": "using-cte-and-dense-rank-beats-95-288ms-with-explanation",
                "content": "* The **DENSE_RANK()** is a window function that assigns ranks to rows in partitions with no gaps in the ranking values.\\n\\n* If two or more rows in each partition have the same values, they receive the same rank. The next row has the rank increased by one.\\n\\n* Different from the RANK() function, the DENSE_RANK() function always generates consecutive rank values.\\n\\n**DENSE_RANK() OVER(PARTITION BY.... ORDER BY....) works like this**\\n\\n* First, the PARTITION BY clause divides the result set produced by the FROM clause into partitions.\\n* Then, The ORDER BY specifies the order of rows in each partition.\\n* Finally, the DENSE_RANK() function is applied to the rows in the specified order of each partition. It resets the rank when the partition boundary is crossed.\\n \\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      \\n      WITH CTE AS\\n        (\\n            SELECT DISTINCT salary,\\n            DENSE_RANK() OVER(ORDER BY salary DESC) AS dr\\n            FROM Employee\\n        )\\n        \\n        SELECT salary \\n        FROM CTE\\n        WHERE dr = N\\n        \\n      \\n      \\n  );\\nEND\\n```\\n\\n* Here I didn\\'t Use **PARTITION BY** because there was no need to assign rank to salaries on the basis of some partition so the **DENSE_RANK()** function treated the whole result set as a single Partition\\n \\n*  The **ORDER BY** clause sorted the salaries in descending order. Then, the DENSE_RANK() \\nfunction assigned a rank to each employee by his/her salary amount.\\n\\n* and, Finally in Where clause **[ dr = N ]** , it will match the rank with number **N** and will return the salary accordingly \\n\\n* if there **Nth** same salaries, even then this code will work because i am using Dense rank which will assign same rank to same values / salaries \\n\\nIf there is any Improvement that can be done or if there is any optimised way of doing it then feel free to comment and Discuss\\n\\nThanks for Visiting, I hope my Solution solved your Problem :)",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      \\n      WITH CTE AS\\n        (\\n            SELECT DISTINCT salary,\\n            DENSE_RANK() OVER(ORDER BY salary DESC) AS dr\\n            FROM Employee\\n        )\\n        \\n        SELECT salary \\n        FROM CTE\\n        WHERE dr = N\\n        \\n      \\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1981339,
                "title": "mysql-solution",
                "content": "# Solution\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n     SELECT distinct salary\\n     FROM (\\n         SELECT salary, DENSE_RANK() OVER(ORDER BY salary DESC) as rn\\n         FROM Employee\\n     ) as sub_select\\n     WHERE rn = N\\n  );\\nEND\\n```\\nThe **DENSE_RANK()** is a window function that assigns a rank to each row within a partition of a result set. Unlike the **RANK()** function, the **DENSE_RANK()** function returns consecutive rank values. Rows in each partition receive the same ranks if they have the same values.\\nIf you find this **solution** and **explanation** helpful, please **upvote** it for others people.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n     SELECT distinct salary\\n     FROM (\\n         SELECT salary, DENSE_RANK() OVER(ORDER BY salary DESC) as rn\\n         FROM Employee\\n     ) as sub_select\\n     WHERE rn = N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1779118,
                "title": "mysql-solution-featuring-the-distinct-keyword",
                "content": "Solution is as follows:\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET n = N-1;\\n  RETURN (\\n    SELECT MAX(salary) FROM ( SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT 1 OFFSET n ) AS max_filtered_salary\\n  );\\nEND\\n```\\nThis solution composes of 2 main parts, being just setting a variable and a return query utilizing that variable to select one value from a modified ```Employee``` list. ```n``` is set to be equal to ```N-1``` to be used as an offset when selecting one ```salary``` value from the modified ```Employee``` table, which only contains entries that have a unique ```salary``` and which has its entries sorted by their ```salary``` in descending order. Modifying this list as such and selecting a single offset value yields the N\\'th maximum value in the table ```Employee```. Using ```N``` as it is without setting a variable that\\'s one less causes the selected value to always be one after the correct answer due to offsetting starting at 0 and ```N``` starting at 1.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET n = N-1;\\n  RETURN (\\n    SELECT MAX(salary) FROM ( SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT 1 OFFSET n ) AS max_filtered_salary\\n  );\\nEND\\n```\n```Employee```\n```n```\n```N-1```\n```salary```\n```Employee```\n```salary```\n```salary```\n```Employee```\n```N```\n```N```",
                "codeTag": "Unknown"
            },
            {
                "id": 1115785,
                "title": "mysql-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE IND INT;\\n  SET IND = N - 1;\\n  RETURN (\\n    # Write your MySQL query statement below.\\n    SELECT DISTINCT salary\\n    FROM employee\\n    ORDER BY salary DESC\\n    LIMIT IND, 1\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE IND INT;\\n  SET IND = N - 1;\\n  RETURN (\\n    # Write your MySQL query statement below.\\n    SELECT DISTINCT salary\\n    FROM employee\\n    ORDER BY salary DESC\\n    LIMIT IND, 1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 762752,
                "title": "simple-solution-using-cursor-and-loop",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nx Employee.salary%TYPE;\\nCURSOR cur IS SELECT DISTINCT(salary) FROM Employee ORDER BY salary DESC;\\nBEGIN\\n    OPEN cur;\\n    LOOP\\n        FETCH cur INTO x;\\n        EXIT WHEN cur%ROWCOUNT>=N OR cur%NOTFOUND;\\n    END LOOP;\\n    IF cur%ROWCOUNT=N THEN\\n        RETURN x;\\n    END IF;\\n    CLOSE cur;\\n    RETURN NULL;\\nEND;\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nx Employee.salary%TYPE;\\nCURSOR cur IS SELECT DISTINCT(salary) FROM Employee ORDER BY salary DESC;\\nBEGIN\\n    OPEN cur;\\n    LOOP\\n        FETCH cur INTO x;\\n        EXIT WHEN cur%ROWCOUNT>=N OR cur%NOTFOUND;\\n    END LOOP;\\n    IF cur%ROWCOUNT=N THEN\\n        RETURN x;\\n    END IF;\\n    CLOSE cur;\\n    RETURN NULL;\\nEND;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 476084,
                "title": "nth-max-easy-solution",
                "content": "```\\nselect(select distinct salary from Employee order by Salary Desc limit 1 offset 1)  as SecondHighestSalary;\\n```\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select(select distinct salary from Employee order by Salary Desc limit 1 offset N)  as SecondHighestSalary\\n      \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect(select distinct salary from Employee order by Salary Desc limit 1 offset 1)  as SecondHighestSalary;\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select(select distinct salary from Employee order by Salary Desc limit 1 offset N)  as SecondHighestSalary\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 310127,
                "title": "mysql-192-ms",
                "content": "First of all, this problem is why we can\\'t have nice things. This is all about dealing with f----d up edge cases that are not adequately described in the problem statement. For instance, when the description says \"if there is no nth salary\" what they mean is \"if there is no nth unique salary\". \\n\\nSecond, this problem is all about the edge cases and the improper wording on the problem. Dealing with this nonsense takes up all the time complexity AND developer time. So really, dealing with the edge case IS ACTUALLY THE PROBLEM. \\n\\nThe rest is just a side-show, whether you\\'re taking a limit of a limit, or using an offset, or a subquery of some kind, or a window function if you\\'re not on MySql (memo to leetcode: MySql supports window functions now).\\n\\nAnyway, the lion\\'s share of the problem is just understanding that the author meant to say that salaries have to be unique and if N is greater than the number of unique salaries or otherwise invalid, then return NULL. \\n\\nFor extra points, also figure out how to take the Nth unique result. Normally you can just use a common table expression and/or window function - `select salary, rank() over (order by salary desc) ...` - but if you\\'re still using a MySql version that\\'s older than Brittany Spears, here\\'s one way you can do it:\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    DECLARE results INT DEFAULT 0;\\n    SET results = (select count(distinct(salary)) from Employee);\\n    IF results = 0 OR N > results THEN \\n       return NULL;\\n    ELSE\\n      SET N = N -1;\\n      RETURN (\\n          select distinct salary \\n            from Employee\\n            order by salary desc\\n            limit 1 offset N\\n      );\\n    END IF; \\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    DECLARE results INT DEFAULT 0;\\n    SET results = (select count(distinct(salary)) from Employee);\\n    IF results = 0 OR N > results THEN \\n       return NULL;\\n    ELSE\\n      SET N = N -1;\\n      RETURN (\\n          select distinct salary \\n            from Employee\\n            order by salary desc\\n            limit 1 offset N\\n      );\\n    END IF; \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3824433,
                "title": "100-easy-fast-clean-solution",
                "content": "IF THIS WILL BE HELPFUL TO YOU, PLEASE UPVOTE !\\n\\n# Code\\n```\\n/* Write your PL/SQL query statement below */\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\nSELECT  DISTINCT salary  INTO result FROM \\n(SELECT salary,DENSE_RANK() OVER (ORDER BY salary DESC) R \\nFROM  Employee) WHERE R = N;\\nRETURN result;\\nEXCEPTION\\nWHEN NO_DATA_FOUND THEN\\nRETURN NULL;\\nEND;\\n```\\n![5kej8w.jpg](https://assets.leetcode.com/users/images/7933690f-2a91-46ea-a242-bd59a8412075_1690471570.3773673.jpeg)\\n",
                "solutionTags": [
                    "Oracle",
                    "Database"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\nSELECT  DISTINCT salary  INTO result FROM \\n(SELECT salary,DENSE_RANK() OVER (ORDER BY salary DESC) R \\nFROM  Employee) WHERE R = N;\\nRETURN result;\\nEXCEPTION\\nWHEN NO_DATA_FOUND THEN\\nRETURN NULL;\\nEND;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2553483,
                "title": "mysql-2-approaches",
                "content": "Do Upvote, if it Helped :)\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      # Method 1:\\n      \\n      select distinct salary \\n      from employee e1\\n      where N = (select count(distinct(e2.salary)) from employee e2 where e2.salary >= e1.salary)\\n      \\n      # Method 2:\\n      \\n      select distinct res.salary from (\\n          select salary, DENSE_RANK() OVER (ORDER BY salary DESC) as sal_rank from employee \\n      ) res \\n      where N = res.sal_rank \\n      \\n      \\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      # Method 1:\\n      \\n      select distinct salary \\n      from employee e1\\n      where N = (select count(distinct(e2.salary)) from employee e2 where e2.salary >= e1.salary)\\n      \\n      # Method 2:\\n      \\n      select distinct res.salary from (\\n          select salary, DENSE_RANK() OVER (ORDER BY salary DESC) as sal_rank from employee \\n      ) res \\n      where N = res.sal_rank \\n      \\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2524485,
                "title": "mysql-simple-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare M int;\\nset M = N - 1;\\n  RETURN (\\n    select distinct salary from employee order by salary desc limit M, 1\\n  );\\nEND\\n``",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare M int;\\nset M = N - 1;\\n  RETURN (\\n    select distinct salary from employee order by salary desc limit M, 1\\n  );\\nEND\\n``",
                "codeTag": "Unknown"
            },
            {
                "id": 2123342,
                "title": "two-easy-sollutions",
                "content": "**Upvote if this finds helpful to you!**\\n\\n 1.\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       select distinct salary from Employee order by salary desc limit 1 offset M\\n);\\nEND\\n```\\n2.\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\nselect  case \\n           when (select count(distinct salary) from Employee)>N-1 then salary\\n           else null\\n        end\\nfrom (\\n       select salary from Employee\\n       group by salary\\n       order by salary desc\\n       limit N\\n)  \\nas sub\\norder by salary asc \\nlimit 1 \\n);\\nEND\\n\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       select distinct salary from Employee order by salary desc limit 1 offset M\\n);\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\nselect  case \\n           when (select count(distinct salary) from Employee)>N-1 then salary\\n           else null\\n        end\\nfrom (\\n       select salary from Employee\\n       group by salary\\n       order by salary desc\\n       limit N\\n)  \\nas sub\\norder by salary asc \\nlimit 1 \\n);\\nEND\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1893876,
                "title": "mysql-faster-than-79-80-elegant-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    DECLARE total INT;\\n    SET total = N - 1;\\n    RETURN (\\n        SELECT IFNULL(\\n            (\\n                SELECT DISTINCT salary FROM Employee \\n                ORDER BY salary DESC \\n                LIMIT 1 \\n                OFFSET total\\n            ), \\n            NULL\\n        )\\n    );\\nEND\\n```\\n\\n![image](https://assets.leetcode.com/users/images/5025a67a-aa61-4aec-b74f-9c6ebc0dbb58_1648542410.3723059.png)\\n",
                "solutionTags": [
                    "Ordered Set"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    DECLARE total INT;\\n    SET total = N - 1;\\n    RETURN (\\n        SELECT IFNULL(\\n            (\\n                SELECT DISTINCT salary FROM Employee \\n                ORDER BY salary DESC \\n                LIMIT 1 \\n                OFFSET total\\n            ), \\n            NULL\\n        )\\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1387878,
                "title": "offset-limit",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE X INT;\\n  SET X=N-1;\\n  \\n  RETURN (\\n      SELECT Salary\\n      FROM Employee\\n      GROUP BY Salary\\n      ORDER BY Salary DESC\\n      LIMIT 1\\n      OFFSET X\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE X INT;\\n  SET X=N-1;\\n  \\n  RETURN (\\n      SELECT Salary\\n      FROM Employee\\n      GROUP BY Salary\\n      ORDER BY Salary DESC\\n      LIMIT 1\\n      OFFSET X\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 910051,
                "title": "nth-highest-salary",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n    SELECT DISTINCT e.salary\\n      FROM Employee e\\n      ORDER BY e.salary DESC\\n      limit N, 1\\n  );\\n  \\n  \\n  \\n  CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n    SELECT DISTINCT salary\\n      FROM Employee \\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n    SELECT DISTINCT e.salary\\n      FROM Employee e\\n      ORDER BY e.salary DESC\\n      limit N, 1\\n  );\\n  \\n  \\n  \\n  CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n    SELECT DISTINCT salary\\n      FROM Employee \\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 905399,
                "title": "mysql-use-limit",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary from Employee order by salary DESC limit 1 OFFSET M\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary from Employee order by salary DESC limit 1 OFFSET M\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 843586,
                "title": "limit-offset",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      SELECT DISTINCT Salary \\n\\t  FROM Employee \\n\\t  ORDER BY Salary DESC \\n\\t  LIMIT 1 OFFSET M\\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      SELECT DISTINCT Salary \\n\\t  FROM Employee \\n\\t  ORDER BY Salary DESC \\n\\t  LIMIT 1 OFFSET M\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 623299,
                "title": "mysql-with-dense-rank",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    select salary from (\\n        select distinct salary, \\n              DENSE_RANK() over (order by salary desc) as row_num\\n        from Employee) temp\\n    where row_num=N\\n  );\\nEND```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    select salary from (\\n        select distinct salary, \\n              DENSE_RANK() over (order by salary desc) as row_num\\n        from Employee) temp\\n    where row_num=N\\n  );\\nEND```",
                "codeTag": "Unknown"
            },
            {
                "id": 235106,
                "title": "simple-mysql-180ms",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      SELECT Salary\\n      FROM Employee     \\n      GROUP BY Salary \\n      ORDER BY Salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      SELECT Salary\\n      FROM Employee     \\n      GROUP BY Salary \\n      ORDER BY Salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 126179,
                "title": "accepted-sql-server-solution",
                "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT distinct top 1 Salary from Employee where Salary not in\\n        (SELECT distinct top ((@N) - 1) Salary from Employee order by Salary desc) ORDER BY Salary DESC\\n    );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT distinct top 1 Salary from Employee where Salary not in\\n        (SELECT distinct top ((@N) - 1) Salary from Employee order by Salary desc) ORDER BY Salary DESC\\n    );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 53081,
                "title": "my-accepted-solution-813ms",
                "content": "    select  IF(count(*) >= N, Min(rank.Salary), NULL) salary\\n    from (select distinct salary\\n          from Employee     \\n          order by salary desc\\n          limit N\\n     ) rank",
                "solutionTags": [],
                "code": "    select  IF(count(*) >= N, Min(rank.Salary), NULL) salary\\n    from (select distinct salary\\n          from Employee     \\n          order by salary desc\\n          limit N\\n     ) rank",
                "codeTag": "Unknown"
            },
            {
                "id": 3523697,
                "title": "mysql-solution-for-nth-highest-salary-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe goal of this MySQL function is to retrieve the Nth highest salary from the Employee table.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Declare a variable M and set it to N - 1. This is because the LIMIT clause uses a zero-based index, so the Nth highest salary corresponds to the (N-1)th row in the result set.\\n2. Use a subquery to select the distinct salaries from the Employee table, ordered in descending order.\\n3. Use the LIMIT clause to limit the result set to one row, starting from the (N-1)th row (i.e., offset M).\\n4. Return the result of the subquery as the output of the function.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of this function depends on the size of the Employee table and the value of the input parameter N. In general, the time complexity of a subquery with an ORDER BY clause is O(n * log n), where n is the number of rows in the table. The LIMIT clause reduces the number of rows returned by the subquery, so the actual time complexity may be less than O(n * log n). However, the function must be called once for each value of N, so the overall time complexity is O(k * n * log n), where k is the number of times the function is called.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity of this function depends on the size of the result set and the size of the columns being selected. In this case, the result set will have at most one row and one column (Salary). Therefore, the space complexity is O(1). The space used by the variable M is also constant, so it does not affect the overall space complexity\\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    declare M INT;\\n    set M = N - 1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary from Employee order by Salary desc limit 1 offset M\\n      \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    declare M INT;\\n    set M = N - 1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary from Employee order by Salary desc limit 1 offset M\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3371415,
                "title": "using-ifnull-and-limit",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M =N-1;\\n  RETURN (\\n   \\n      IFNULL((SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT M, 1),NULL)\\n      \\n       );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M =N-1;\\n  RETURN (\\n   \\n      IFNULL((SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT M, 1),NULL)\\n      \\n       );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3218633,
                "title": "81-with-row-number-sql-server",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n-- CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\n-- BEGIN\\n--     RETURN (\\n        \\n--         SELECT\\n-- \\t\\t\\tDISTINCT E.Salary\\n-- \\t\\tFROM\\n-- \\t\\t\\tEmployee E\\n-- \\t\\tWHERE\\n-- \\t\\t\\t@N = (\\n-- \\t\\t\\t\\tSELECT\\n-- \\t\\t\\t\\t\\tCOUNT(DISTINCT Salary) FROM Employee E2\\n-- \\t\\t\\t\\t\\tWHERE\\n-- \\t\\t\\t\\t\\t\\tE.Salary <= E2.Salary\\n-- \\t\\t\\t)\\n        \\n        \\n--     );\\n-- END\\n\\n\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n \\n\\tDECLARE @RESULT INT = 0\\n\\t;WITH CTE AS (SELECT\\n\\t\\t\\tDISTINCT Salary\\n\\t\\tFROM\\n\\t\\t\\tEmployee\\n\\t\\t\\t),\\n\\t\\tCTE2 AS (SELECT\\n\\t\\t\\tSalary,\\n\\t\\t\\tROW_NUMBER() OVER(ORDER BY Salary DESC) RANKED\\n\\t\\tFROM\\n\\t\\t\\tCTE\\n\\t\\t)\\n\\t\\tSELECT  @RESULT = ISNULL((SELECT\\n\\t\\t\\tSalary\\n\\t\\tFROM\\t\\n\\t\\t\\tCTE2\\n\\t\\tWHERE \\n\\t\\t\\tRANKED = @N),NULL) \\n        \\n\\t\\tRETURN @RESULT\\nEND\\n\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n-- CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\n-- BEGIN\\n--     RETURN (\\n        \\n--         SELECT\\n-- \\t\\t\\tDISTINCT E.Salary\\n-- \\t\\tFROM\\n-- \\t\\t\\tEmployee E\\n-- \\t\\tWHERE\\n-- \\t\\t\\t@N = (\\n-- \\t\\t\\t\\tSELECT\\n-- \\t\\t\\t\\t\\tCOUNT(DISTINCT Salary) FROM Employee E2\\n-- \\t\\t\\t\\t\\tWHERE\\n-- \\t\\t\\t\\t\\t\\tE.Salary <= E2.Salary\\n-- \\t\\t\\t)\\n        \\n        \\n--     );\\n-- END\\n\\n\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n \\n\\tDECLARE @RESULT INT = 0\\n\\t;WITH CTE AS (SELECT\\n\\t\\t\\tDISTINCT Salary\\n\\t\\tFROM\\n\\t\\t\\tEmployee\\n\\t\\t\\t),\\n\\t\\tCTE2 AS (SELECT\\n\\t\\t\\tSalary,\\n\\t\\t\\tROW_NUMBER() OVER(ORDER BY Salary DESC) RANKED\\n\\t\\tFROM\\n\\t\\t\\tCTE\\n\\t\\t)\\n\\t\\tSELECT  @RESULT = ISNULL((SELECT\\n\\t\\t\\tSalary\\n\\t\\tFROM\\t\\n\\t\\t\\tCTE2\\n\\t\\tWHERE \\n\\t\\t\\tRANKED = @N),NULL) \\n        \\n\\t\\tRETURN @RESULT\\nEND\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3171311,
                "title": "mysql-easy-approach",
                "content": "Here is my MYSQL code for this problem.\\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare x int;\\nset x=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from Employee group by salary order by salary desc limit x,1\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare x int;\\nset x=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from Employee group by salary order by salary desc limit x,1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2680604,
                "title": "mysql-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    SET N = N - 1;\\n  RETURN (\\n      SELECT DISTINCT salary\\n      FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n      \\n  );\\nEND\\n```\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    SET N = N - 1;\\n  RETURN (\\n      SELECT DISTINCT salary\\n      FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2341775,
                "title": "2-mysql-sols-dense-rank-limit-offset",
                "content": "### 1. Using `DENSE_RANK() OVER`\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary\\n      FROM (\\n            SELECT \\n                salary,\\n                DENSE_RANK() OVER (ORDER BY salary DESC) AS \\'index_no\\'\\n            FROM Employee) e\\n      WHERE index_no = N\\n  );\\nEND\\n```\\n\\n### 2. Using `LIMIT` & `OFFSET`\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT(salary)\\n      FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET M  \\n  );\\nEND\\n```\\n\\n\\n##### Further Readings:\\n* [RANK() vs DENSE_RANK() vs ROW_NUMBER() - StackOverFlow](https://stackoverflow.com/a/22081083)\\n\\nThanks for reading!\\nIf there\\'s any error or doubt, do comment. Feedbacks are always appreciated!!",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary\\n      FROM (\\n            SELECT \\n                salary,\\n                DENSE_RANK() OVER (ORDER BY salary DESC) AS \\'index_no\\'\\n            FROM Employee) e\\n      WHERE index_no = N\\n  );\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT(salary)\\n      FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET M  \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2225324,
                "title": "mysql-simple-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN\\nSET\\n    N = N -1;\\n\\nRETURN (\\n    SELECT\\n        DISTINCT salary\\n    FROM\\n        employee\\n    ORDER BY\\n        salary DESC\\n    LIMIT\\n        1 OFFSET N\\n);\\n\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN\\nSET\\n    N = N -1;\\n\\nRETURN (\\n    SELECT\\n        DISTINCT salary\\n    FROM\\n        employee\\n    ORDER BY\\n        salary DESC\\n    LIMIT\\n        1 OFFSET N\\n);\\n\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2135131,
                "title": "mysql-limit-offset",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE K INT;\\nSET K = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT (\\n      SELECT DISTINCT SALARY \\n      FROM EMPLOYEE\\n      ORDER BY SALARY DESC\\n      LIMIT 1 OFFSET K) AS getNthHighestSalary\\n      \\n      \\n  );\\nEND\\n```\\nPLEASE **UPVOTE**.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE K INT;\\nSET K = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT (\\n      SELECT DISTINCT SALARY \\n      FROM EMPLOYEE\\n      ORDER BY SALARY DESC\\n      LIMIT 1 OFFSET K) AS getNthHighestSalary\\n      \\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2045879,
                "title": "solution-with-group-by",
                "content": "```CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT salary FROM Employee\\n      GROUP BY salary\\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  ); \\nEND\\n```",
                "solutionTags": [],
                "code": "```CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT salary FROM Employee\\n      GROUP BY salary\\n      ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  ); \\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1924936,
                "title": "mysql-solution-for-nth-highest-salary",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT m.salary\\n    FROM\\n        (\\n            SELECT salary, DENSE_RANK() OVER (ORDER BY salary DESC) \\'rank\\' \\n            FROM Employee\\n        ) m\\n    WHERE m.rank=N limit 1\\n  );\\nEND\\n```\\n",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT m.salary\\n    FROM\\n        (\\n            SELECT salary, DENSE_RANK() OVER (ORDER BY salary DESC) \\'rank\\' \\n            FROM Employee\\n        ) m\\n    WHERE m.rank=N limit 1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1852002,
                "title": "mysql-using-limit-and-offset-faster-than-100",
                "content": "Order the records by salary in desc order\\nLimit results to 1 row\\nOffset N-1. (Skip all the rows before the intended row)\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT DEFAULT 0;\\nSET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select (select distinct salary from Employee order by salary desc limit 1 offset M)\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT DEFAULT 0;\\nSET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select (select distinct salary from Employee order by salary desc limit 1 offset M)\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1793875,
                "title": "oracle-dense-rank-exception",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n   \\n    select distinct salary\\n      into result\\n      from (select salary\\n                 , dense_rank() over (order by salary desc) rn\\n              from Employee)\\n     where rn = n; \\n     \\n        return result;\\nexception \\n    when no_data_found then\\n        return null;\\n    \\nEND;\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n   \\n    select distinct salary\\n      into result\\n      from (select salary\\n                 , dense_rank() over (order by salary desc) rn\\n              from Employee)\\n     where rn = n; \\n     \\n        return result;\\nexception \\n    when no_data_found then\\n        return null;\\n    \\nEND;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1664144,
                "title": "simplest-ms-sql-server-solution-using-dense-rank",
                "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n\\t\\t//we are using top 1 beacuse in case of multiple records with same salary we just want to return single salary\\n        select top 1 salary AS getNthHighestSalary from \\n        (select id,salary,DENSE_RANK() over (order by salary desc)AS ranking from  Employee)temp\\n        where temp.ranking= @N\\n      );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n\\t\\t//we are using top 1 beacuse in case of multiple records with same salary we just want to return single salary\\n        select top 1 salary AS getNthHighestSalary from \\n        (select id,salary,DENSE_RANK() over (order by salary desc)AS ranking from  Employee)temp\\n        where temp.ranking= @N\\n      );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1656862,
                "title": "accepted-281ms-solution-just-add-one-variable-term-n-n-1",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      # select   avg(salary) from employee try and error method \\n        select distinct salary from employee order by salary desc\\n        limit 1 offset n\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      # select   avg(salary) from employee try and error method \\n        select distinct salary from employee order by salary desc\\n        limit 1 offset n\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1652756,
                "title": "nth-highest-salary-using-limit-and-ifnull",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(n INT) RETURNS INT\\nBEGIN\\n\\n  DECLARE _offset int ;\\n  SET _offset = n-1;\\n  \\n  RETURN (\\n      \\n        select ifnull( \\n            \\n            (select distinct(salary) from Employee order by salary desc limit 1 offset _offset )\\n            , null)  \\n      \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(n INT) RETURNS INT\\nBEGIN\\n\\n  DECLARE _offset int ;\\n  SET _offset = n-1;\\n  \\n  RETURN (\\n      \\n        select ifnull( \\n            \\n            (select distinct(salary) from Employee order by salary desc limit 1 offset _offset )\\n            , null)  \\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1374596,
                "title": "dense-rank",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n      select distinct salary from\\n      (select salary,dense_rank() over (order by salary desc) salaryrank from employee)t\\n      where t.salaryrank=N\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n      select distinct salary from\\n      (select salary,dense_rank() over (order by salary desc) salaryrank from employee)t\\n      where t.salaryrank=N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1128521,
                "title": "ms-sql-solution-row-number-and-max-for-null",
                "content": "Using Row_Number to create the rank. Rank and Dense_Rank also work as well.  Using Max to return NULL if there is no # highest salary.\\n\\nThis also works with #176 \"Second Highest Salary\".\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n\\nSELECT salary = MAX(salary) FROM (\\n    SELECT  ROW_NUMBER() OVER(ORDER BY salary DESC) AS ranking, salary FROM\\n    (\\n        SELECT DISTINCT Salary FROM Employee) A\\n    ) B\\nWHERE ranking =  @N\\n        \\n    );\\nEND",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "Using Row_Number to create the rank. Rank and Dense_Rank also work as well.  Using Max to return NULL if there is no # highest salary.\\n\\nThis also works with #176 \"Second Highest Salary\".\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n\\nSELECT salary = MAX(salary) FROM (\\n    SELECT  ROW_NUMBER() OVER(ORDER BY salary DESC) AS ranking, salary FROM\\n    (\\n        SELECT DISTINCT Salary FROM Employee) A\\n    ) B\\nWHERE ranking =  @N\\n        \\n    );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1092098,
                "title": "mysql-very-easy-to-understand",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      SELECT DISTINCT Salary\\n      FROM\\n          (SELECT\\n            Salary,\\n            DENSE_RANK() OVER (ORDER BY SALARY DESC) AS \\'Rank\\'\\n          FROM Employee) T1\\n      WHERE T1.Rank = N\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      SELECT DISTINCT Salary\\n      FROM\\n          (SELECT\\n            Salary,\\n            DENSE_RANK() OVER (ORDER BY SALARY DESC) AS \\'Rank\\'\\n          FROM Employee) T1\\n      WHERE T1.Rank = N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1051200,
                "title": "3-solutions-for-oracle-mysql-and-sql-server",
                "content": "ORACLE\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(Salary) INTO result\\n    FROM (\\n        SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS RK\\n        FROM Employee\\n     ) T\\n     WHERE RK = N;\\n    \\n    RETURN result;\\nEND;\\n```\\n\\nMySQL\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      SELECT DISTINCT Salary\\n      FROM (\\n        SELECT \\n          Salary,\\n          DENSE_RANK() OVER(ORDER BY Salary DESC) AS RK\\n        FROM Employee\\n            ) T\\n      WHERE RK = N\\n  );\\nEND\\n```\\n\\nSQL Server\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM (\\n        SELECT \\n          Salary,\\n          DENSE_RANK() OVER(ORDER BY Salary DESC) AS RK\\n        FROM Employee\\n            ) T\\n        WHERE RK = @N\\n        \\n    );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(Salary) INTO result\\n    FROM (\\n        SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS RK\\n        FROM Employee\\n     ) T\\n     WHERE RK = N;\\n    \\n    RETURN result;\\nEND;\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      SELECT DISTINCT Salary\\n      FROM (\\n        SELECT \\n          Salary,\\n          DENSE_RANK() OVER(ORDER BY Salary DESC) AS RK\\n        FROM Employee\\n            ) T\\n      WHERE RK = N\\n  );\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM (\\n        SELECT \\n          Salary,\\n          DENSE_RANK() OVER(ORDER BY Salary DESC) AS RK\\n        FROM Employee\\n            ) T\\n        WHERE RK = @N\\n        \\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1005765,
                "title": "mysql-solution",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select max(Salary) from\\n      (select Salary,\\n      dense_rank() over(order by Salary desc) as rnk\\n      from Employee) sub\\n      where rnk = N\\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select max(Salary) from\\n      (select Salary,\\n      dense_rank() over(order by Salary desc) as rnk\\n      from Employee) sub\\n      where rnk = N\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 797377,
                "title": "simple-mysql-solution-accepted-using-order-by-limit-offset",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary \\n        from Employee\\n        order by Salary DESC\\n        LIMIT 1 OFFSET N\\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary \\n        from Employee\\n        order by Salary DESC\\n        LIMIT 1 OFFSET N\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 694577,
                "title": "super-simple-solution-with-mysql-does-not-involve-dense-rank",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set N = N - 1;\\n  RETURN (\\n      Select Salary from Employee group by Salary order by Salary DESC limit 1 offset N\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set N = N - 1;\\n  RETURN (\\n      Select Salary from Employee group by Salary order by Salary DESC limit 1 offset N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 570982,
                "title": "oracle-dense-rank-select-into",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n    select max(Salary) into result\\n    from\\n        (select Salary, dense_rank() over(order by Salary desc) as rank\\n        from Employee) tb1 \\n    where tb1.rank = N;\\n    RETURN result;\\nEND;\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n    select max(Salary) into result\\n    from\\n        (select Salary, dense_rank() over(order by Salary desc) as rank\\n        from Employee) tb1 \\n    where tb1.rank = N;\\n    RETURN result;\\nEND;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 542447,
                "title": "ms-sql-faster-than-98-39-easy-to-understand",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC OFFSET @N-1 ROWS FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC OFFSET @N-1 ROWS FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 348158,
                "title": "mssql-offset-fetch",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT(Salary) \\n        FROM Employee  \\n        ORDER BY Salary DESC\\n        OFFSET @N - 1 ROWS FETCH FIRST 1 ROW ONLY \\n    );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT(Salary) \\n        FROM Employee  \\n        ORDER BY Salary DESC\\n        OFFSET @N - 1 ROWS FETCH FIRST 1 ROW ONLY \\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 238265,
                "title": "accepted-solution-in-mysql-ms-sql-and-oracle",
                "content": "--challenge 177: Using MySQL\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n DECLARE M INT;\\n SET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.      \\n      select distinct Salary\\n      from Employee\\n      order by Salary desc\\n      LIMIT M,1\\n  );\\nEND\\n```\\n\\n--challenge 177: Using MS SQL\\n```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        \\n          select distinct Salary\\n          from \\n           (select dense_rank() over (order by salary desc) as Ranks, ID, Salary\\n            from Employee) as a\\n            where a.Ranks = @N\\n    );\\nEND\\n```\\n\\n--challenge 177: Using Oracle\\n\\n```\\n\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n        \\n    select distinct Salary into result\\n    from \\n        (select dense_rank() over (order by salary desc) as Ranks, ID, Salary\\n         from Employee) a\\n         where a.Ranks = N;\\n        \\nRETURN result;\\nEND\\n```\\n",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n DECLARE M INT;\\n SET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.      \\n      select distinct Salary\\n      from Employee\\n      order by Salary desc\\n      LIMIT M,1\\n  );\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        \\n          select distinct Salary\\n          from \\n           (select dense_rank() over (order by salary desc) as Ranks, ID, Salary\\n            from Employee) as a\\n            where a.Ranks = @N\\n    );\\nEND\\n```\n```\\n\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n        \\n    select distinct Salary into result\\n    from \\n        (select dense_rank() over (order by salary desc) as Ranks, ID, Salary\\n         from Employee) a\\n         where a.Ranks = N;\\n        \\nRETURN result;\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 218619,
                "title": "easy-sql",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary AS getNthHighestSalary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary AS getNthHighestSalary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 180302,
                "title": "limit-and-offset-used",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    set N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary from Employee order by Salary desc limit 1 offset N\\n      \\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    set N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary from Employee order by Salary desc limit 1 offset N\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3913723,
                "title": "pandas-solution",
                "content": "# Code\\n```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    sorted_salary = employee[\\'salary\\'].sort_values(ascending=False).drop_duplicates()\\n    if N > len(sorted_salary):\\n        return pd.DataFrame({f\\'getNthHighestSalary({N})\\': [None]})\\n    nth_highest = sorted_salary.iloc[N-1]\\n    return pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nth_highest]})\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    sorted_salary = employee[\\'salary\\'].sort_values(ascending=False).drop_duplicates()\\n    if N > len(sorted_salary):\\n        return pd.DataFrame({f\\'getNthHighestSalary({N})\\': [None]})\\n    nth_highest = sorted_salary.iloc[N-1]\\n    return pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nth_highest]})\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3911452,
                "title": "pandas-clean-code-solution-for-beginners",
                "content": "**\\uD83D\\uDD3C IF YOU FIND THIS POST HELPFUL PLEASE UPVOTE \\uD83D\\uDC4D**\\n```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    df = employee[\\'salary\\'].drop_duplicates().sort_values(ascending=False)\\n    \\n    if len(df) < N:\\n        return pd.DataFrame([], columns=[\"getNthHighestSalary({})\".format(N)])\\n    \\n    max_value = df.iloc[N-1]\\n    \\n    result = pd.DataFrame([max_value], columns=[\"getNthHighestSalary({})\".format(N)])\\n    \\n    return result\\n```\\n**Thank you for reading! \\uD83D\\uDE04 Comment if you have any questions or feedback.**",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    df = employee[\\'salary\\'].drop_duplicates().sort_values(ascending=False)\\n    \\n    if len(df) < N:\\n        return pd.DataFrame([], columns=[\"getNthHighestSalary({})\".format(N)])\\n    \\n    max_value = df.iloc[N-1]\\n    \\n    result = pd.DataFrame([max_value], columns=[\"getNthHighestSalary({})\".format(N)])\\n    \\n    return result\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3323063,
                "title": "mysql-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    SET N=N-1;\\n  RETURN (\\n      SELECT DISTINCT(salary) FROM Employee order by salary DESC \\n      LIMIT 1 OFFSET N\\n      \\n  );\\nEND\\n```\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    SET N=N-1;\\n  RETURN (\\n      SELECT DISTINCT(salary) FROM Employee order by salary DESC \\n      LIMIT 1 OFFSET N\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2866120,
                "title": "100-space-optimized-mysql-correlated-queries-without-limit-without-dense-rank",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(n INT) RETURNS INT\\nBEGIN\\n    RETURN (\\n        SELECT distinct salary FROM Employee e1 WHERE n-1 = (SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e2.salary > e1.salary)\\n \\n    );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(n INT) RETURNS INT\\nBEGIN\\n    RETURN (\\n        SELECT distinct salary FROM Employee e1 WHERE n-1 = (SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e2.salary > e1.salary)\\n \\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2670045,
                "title": "mssql-dense-rank",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select max(a.salary) from \\n(select salary, dense_rank() over (order by salary desc) as rn\\nfrom Employee ) a\\nwhere a.rn = @N\\n    );\\nEND\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select max(a.salary) from \\n(select salary, dense_rank() over (order by salary desc) as rn\\nfrom Employee ) a\\nwhere a.rn = @N\\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2557321,
                "title": "without-offset",
                "content": "`If count of all distinct salary is less than N then Nth highest salary doesn\\'t exist else \\nfirst select N highest salary then return minumum of it.`\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN ( \\n     case \\n      when (select count(distinct (salary)) from Employee)<N then null \\n      else(\\n      select salary from \\n      (select distinct(salary) from Employee order by salary desc\\n      limit N) as Emp \\n      order by salary \\n      limit 1)\\n      end\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN ( \\n     case \\n      when (select count(distinct (salary)) from Employee)<N then null \\n      else(\\n      select salary from \\n      (select distinct(salary) from Employee order by salary desc\\n      limit N) as Emp \\n      order by salary \\n      limit 1)\\n      end\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2467558,
                "title": "nth-highest-salary",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n     with res as\\n      (select *, DENSE_RANK() over(order by salary DESC) as sal_rank from employee)\\n        select distinct(salary) from res where sal_rank = N  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n     with res as\\n      (select *, DENSE_RANK() over(order by salary DESC) as sal_rank from employee)\\n        select distinct(salary) from res where sal_rank = N  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 2366323,
                "title": "easy-solution-mysql",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      \\n      select max(salary) from employee e1 where N-1=\\n      (select count(distinct salary) from employee e2 where e2.salary>e1.salary)\\n      \\n  );\\nEND\\n``` Please \\uD83D\\uDC46 vote.",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      \\n      select max(salary) from employee e1 where N-1=\\n      (select count(distinct salary) from employee e2 where e2.salary>e1.salary)\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2321336,
                "title": "my-sql-simple-solution-offset-limit-easy-to-read",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    DECLARE newNum INT; \\n    SET newNum = N - 1;\\n    \\n    RETURN (      \\n        SELECT DISTINCT salary\\n        FROM Employee\\n        ORDER BY salary DESC\\n        LIMIT 1\\n        OFFSET newNum\\n  );\\nEND\\n```\\n#### **uP  votE  iF  yoU  likE  thE  solutioN. **",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    DECLARE newNum INT; \\n    SET newNum = N - 1;\\n    \\n    RETURN (      \\n        SELECT DISTINCT salary\\n        FROM Employee\\n        ORDER BY salary DESC\\n        LIMIT 1\\n        OFFSET newNum\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2247973,
                "title": "sql-ms-sql-server-and-oracle-solutions-using-dense-rank-function",
                "content": "Please Feel free to give other suggestions which are faster than these solutions. Also upvote if you are finding these solutions helpful.\\n\\nSQL Solution - \\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) \\nRETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT \\n        SALARY\\n      FROM\\n        (SELECT\\n            SALARY, \\n            DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RNK\\n         FROM\\n            EMPLOYEE) AS T\\n      WHERE\\n        T.RNK = N \\n      LIMIT 0, 1\\n  );\\nEND\\n```\\n\\nMS SQL Server Solution - \\n\\n```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n      SELECT \\n         TOP 1 SALARY\\n      FROM\\n        (SELECT\\n            SALARY, \\n            DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RNK\\n         FROM\\n            EMPLOYEE) AS T\\n      WHERE\\n        T.RNK = @N  \\n    );\\nEND\\n```\\n\\nOracle Solution - \\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n   \\n    SELECT \\n         SALARY INTO result\\n      FROM\\n        (SELECT\\n            SALARY, \\n            DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RNK\\n         FROM\\n            EMPLOYEE)\\n      WHERE\\n        RNK = N\\n      AND\\n        ROWNUM = 1;  \\n    RETURN result;\\nEND;\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server",
                    "Oracle"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) \\nRETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT \\n        SALARY\\n      FROM\\n        (SELECT\\n            SALARY, \\n            DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RNK\\n         FROM\\n            EMPLOYEE) AS T\\n      WHERE\\n        T.RNK = N \\n      LIMIT 0, 1\\n  );\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n      SELECT \\n         TOP 1 SALARY\\n      FROM\\n        (SELECT\\n            SALARY, \\n            DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RNK\\n         FROM\\n            EMPLOYEE) AS T\\n      WHERE\\n        T.RNK = @N  \\n    );\\nEND\\n```\n```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n   \\n    SELECT \\n         SALARY INTO result\\n      FROM\\n        (SELECT\\n            SALARY, \\n            DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RNK\\n         FROM\\n            EMPLOYEE)\\n      WHERE\\n        RNK = N\\n      AND\\n        ROWNUM = 1;  \\n    RETURN result;\\nEND;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1948144,
                "title": "mysql-query-76-59-time-100-0-space-limit-offset-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE OFFSET_VAR INT DEFAULT N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select DISTINCT salary from Employee order by salary DESC limit 1 OFFSET OFFSET_VAR\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE OFFSET_VAR INT DEFAULT N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select DISTINCT salary from Employee order by salary DESC limit 1 OFFSET OFFSET_VAR\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1888990,
                "title": "ms-sql-server-dense-rank-82-58-faster",
                "content": "select distinct salary\\nfrom\\n(\\nselect salary\\n,\\ndense_rank() over (order by salary desc) as dr\\nfrom Employee\\n)\\nas source\\nwhere dr=@N",
                "solutionTags": [],
                "code": "select distinct salary\\nfrom\\n(\\nselect salary\\n,\\ndense_rank() over (order by salary desc) as dr\\nfrom Employee\\n)\\nas source\\nwhere dr=@N",
                "codeTag": "Unknown"
            },
            {
                "id": 1743141,
                "title": "mysql-ifnull-distinct-orderby-limit",
                "content": "### \\n\\n```SQL\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      \\n      SELECT IFNULL(\\n      (\\n          SELECT DISTINCT salary FROM Employee\\n          ORDER BY salary DESC\\n          LIMIT N,1\\n      ) , null)\\n      \\n      \\n  );\\nEND\\n```\\n\\n### Notes:\\n\\n- `IFNULL(expression, alt_value)` returns a specified value if the expression is NULL.\\n- Use `LIMIT` to choose the specific value(s).\\n- Use `SET` to update the variable - `LIMIT` in SQL is 0-based, so `N` needs to be subtracted 1 off, and it needs to happen before `RETURN`.\\n\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```SQL\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      \\n      SELECT IFNULL(\\n      (\\n          SELECT DISTINCT salary FROM Employee\\n          ORDER BY salary DESC\\n          LIMIT N,1\\n      ) , null)\\n      \\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1725554,
                "title": "mysql-solution",
                "content": "```\\n######################################################\\n\\n#   Runtime: 292ms   -   80.97%\\n#   Memory: 0B  -   100.00%\\n\\n######################################################\\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  # We set N to N - 1 here because, LIMIT is 0 based. So LIMIT N, 1 will give us\\n  # (N+1)st largest salary instead of Nth largest. We can\\'t give LIMIT N-1,1 in the\\n  # query. So we are creating this here\\n  SET N = N - 1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      # Since we need Nth unique largest salary, we added DISTINCT\\n      SELECT DISTINCT salary \\n      FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT N, 1\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n######################################################\\n\\n#   Runtime: 292ms   -   80.97%\\n#   Memory: 0B  -   100.00%\\n\\n######################################################\\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  # We set N to N - 1 here because, LIMIT is 0 based. So LIMIT N, 1 will give us\\n  # (N+1)st largest salary instead of Nth largest. We can\\'t give LIMIT N-1,1 in the\\n  # query. So we are creating this here\\n  SET N = N - 1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      # Since we need Nth unique largest salary, we added DISTINCT\\n      SELECT DISTINCT salary \\n      FROM Employee\\n      ORDER BY salary DESC\\n      LIMIT N, 1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1628527,
                "title": "mysql-solution",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare a int;\\nset a=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     SELECT  distinct salary \\n     FROM employee\\n     order by salary DESC limit a,1\\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare a int;\\nset a=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     SELECT  distinct salary \\n     FROM employee\\n     order by salary DESC limit a,1\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1580358,
                "title": "simple-solution-using-dense-rank",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\nWITH CTE AS\\n\\t\\t\\t(SELECT Salary, DENSE_RANK () OVER (ORDER BY Salary desc) AS RANK_desc\\n\\t\\t\\t   FROM Employee)\\nSELECT MAX(salary) AS SecondHighestSalary\\n  FROM CTE\\n WHERE RANK_desc = N\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\nWITH CTE AS\\n\\t\\t\\t(SELECT Salary, DENSE_RANK () OVER (ORDER BY Salary desc) AS RANK_desc\\n\\t\\t\\t   FROM Employee)\\nSELECT MAX(salary) AS SecondHighestSalary\\n  FROM CTE\\n WHERE RANK_desc = N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1520597,
                "title": "mysql-simple-window-function-with-dense-rank",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from\\n      (select salary, dense_rank() over (order by salary desc) as rk\\n      from employee)temp1\\n      where rk = N\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from\\n      (select salary, dense_rank() over (order by salary desc) as rk\\n      from employee)temp1\\n      where rk = N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1423687,
                "title": "better-solution-easy-to-understand",
                "content": "\"\"\"\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      SELECT DISTINCT Salary AS getNthHighestSalary \\n      FROM Employee ORDER BY Salary DESC\\n      Limit M,1\\n  );\\nEND****`****\\n\"\"\"",
                "solutionTags": [],
                "code": "\"\"\"\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M=N-1;\\n  RETURN (\\n      SELECT DISTINCT Salary AS getNthHighestSalary \\n      FROM Employee ORDER BY Salary DESC\\n      Limit M,1\\n  );\\nEND****`****\\n\"\"\"",
                "codeTag": "Unknown"
            },
            {
                "id": 1399102,
                "title": "mysql",
                "content": "\\tCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n\\t\\n\\tBEGIN\\n\\n\\tSET N=N-1;\\n  \\n\\t RETURN (\\n      \\n      SELECT DISTINCT Salary \\n      FROM Employee \\n      order by Salary DESC\\n      LIMIT 1 OFFSET N\\n      #after leaving first (n-1) distinct salaries arranged in descending order display the nth salary \\n  );\\nEND",
                "solutionTags": [],
                "code": "\\tCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n\\t\\n\\tBEGIN\\n\\n\\tSET N=N-1;\\n  \\n\\t RETURN (\\n      \\n      SELECT DISTINCT Salary \\n      FROM Employee \\n      order by Salary DESC\\n      LIMIT 1 OFFSET N\\n      #after leaving first (n-1) distinct salaries arranged in descending order display the nth salary \\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1308526,
                "title": "sql",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare a INT ;\\nset a= N-1  ;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct(salary) from employee order by salary desc limit 1 offset a\\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare a INT ;\\nset a= N-1  ;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct(salary) from employee order by salary desc limit 1 offset a\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1209708,
                "title": "using-ifnull-and-dense-rank",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT IFNULL((SELECT Distinct Salary FROM (SELECT *, DENSE_RANK() OVER(ORDER BY Salary DESC) as rnk FROM Employee) as a WHERE a.rnk=N), NULL) as SecondHighestSalary\\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT IFNULL((SELECT Distinct Salary FROM (SELECT *, DENSE_RANK() OVER(ORDER BY Salary DESC) as rnk FROM Employee) as a WHERE a.rnk=N), NULL) as SecondHighestSalary\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1196040,
                "title": "mysql-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    DECLARE targetRow INT;\\n    SET targetRow = N-1;\\n  RETURN (\\n      select e.salary\\n      from Employee e\\n\\t  # Grouping makes salaries distinct\\n      group by e.salary\\n      order by e.salary desc\\n      limit targetRow,1\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    DECLARE targetRow INT;\\n    SET targetRow = N-1;\\n  RETURN (\\n      select e.salary\\n      from Employee e\\n\\t  # Grouping makes salaries distinct\\n      group by e.salary\\n      order by e.salary desc\\n      limit targetRow,1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1175849,
                "title": "nth-highest-the-commonest-way",
                "content": "SELECT DISTINCT Salary\\n      FROM(\\n        SELECT *,DENSE_RANK() OVER(ORDER BY Salary DESC) AS s_rank\\n        FROM Employee) AS Salary_Ranked\\n      WHERE s_rank = N\\n\\t  \\n\\t # this is the commonest way to solve this kind of problem.\\n\\t",
                "solutionTags": [
                    "Sliding Window"
                ],
                "code": "SELECT DISTINCT Salary\\n      FROM(\\n        SELECT *,DENSE_RANK() OVER(ORDER BY Salary DESC) AS s_rank\\n        FROM Employee) AS Salary_Ranked\\n      WHERE s_rank = N\\n\\t  \\n\\t # this is the commonest way to solve this kind of problem.\\n\\t",
                "codeTag": "Unknown"
            },
            {
                "id": 1163452,
                "title": "a-solution-using-rank",
                "content": "\\n```\\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n\\t  # -- get distinct salaries\\n      WITH distinct_salaries as (\\n          SELECT distinct salary from Employee\\n      ), \\n\\t  # -- RANK window function to rank distinct salaries\\n\\t  agg_cte as (\\n          SELECT\\n            salary,\\n            RANK() OVER(ORDER BY salary desc) as nth_salary\\n          FROM distinct_salaries\\n      ) SELECT salary from agg_cte where nth_salary = N ORDER by salary desc\\n  );\\nEND\\n```\\n",
                "solutionTags": [],
                "code": "```\\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n\\t  # -- get distinct salaries\\n      WITH distinct_salaries as (\\n          SELECT distinct salary from Employee\\n      ), \\n\\t  # -- RANK window function to rank distinct salaries\\n\\t  agg_cte as (\\n          SELECT\\n            salary,\\n            RANK() OVER(ORDER BY salary desc) as nth_salary\\n          FROM distinct_salaries\\n      ) SELECT salary from agg_cte where nth_salary = N ORDER by salary desc\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1076070,
                "title": "window-function-mysql",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      WITH emp AS(\\n      SELECT Salary,\\n      DENSE_RANK() OVER(ORDER BY Salary DESC) AS \\'rank\\'\\n      FROM Employee)\\n      SELECT DISTINCT Salary\\n      FROM emp\\n      WHERE emp.rank=N\\n      \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      WITH emp AS(\\n      SELECT Salary,\\n      DENSE_RANK() OVER(ORDER BY Salary DESC) AS \\'rank\\'\\n      FROM Employee)\\n      SELECT DISTINCT Salary\\n      FROM emp\\n      WHERE emp.rank=N\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1044987,
                "title": "nth-highest-salary",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N \\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET N \\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1037061,
                "title": "my-simple-mysql-solution-pass-all-test-cases",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select\\n      ifnull((select distinct(Salary) from Employee order by Salary desc limit 1 offset N),null)\\n      \\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select\\n      ifnull((select distinct(Salary) from Employee order by Salary desc limit 1 offset N),null)\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1013080,
                "title": "mysql-order-by-limit",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n\\nBEGIN\\n    SET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary from employee order by Salary DESC limit N,1\\n  );\\nEND",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\n\\nBEGIN\\n    SET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary from employee order by Salary DESC limit N,1\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 934217,
                "title": "faster-than-97-58-mysql",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\n  RETURN (\\n     select salary as getNthHighestSalary from employee group by salary order by salary desc limit  N,1\\n); \\nEND",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\n  RETURN (\\n     select salary as getNthHighestSalary from employee group by salary order by salary desc limit  N,1\\n); \\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 927408,
                "title": "faster-than-95-44-accepted-mysql-simple-solution-using-dense-rank-266-ms",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      SELECT DISTINCT Salary \\n      FROM \\n      (\\n      SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS ranking\\n      FROM Employee) t\\n      WHERE ranking = N\\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      SELECT DISTINCT Salary \\n      FROM \\n      (\\n      SELECT Salary, DENSE_RANK() OVER(ORDER BY Salary DESC) AS ranking\\n      FROM Employee) t\\n      WHERE ranking = N\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 883267,
                "title": "not-the-shortest-code-but-more-readable",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your code here\\n      SELECT DISTINCT Salary \\n      FROM Employee \\n      ORDER BY Salary DESC \\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```\\n\\nNote that if you are using MySQL, you can use the shorter form of the `LIMIT` `OFFSET` clauses with `LIMIT N , 1`\\n\\nThe `SELECT DISTINCT` syntax is used to return only distinct (unique) values from the `Salary` column.",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your code here\\n      SELECT DISTINCT Salary \\n      FROM Employee \\n      ORDER BY Salary DESC \\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 872726,
                "title": "faster-than-99-1-with-offset",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN \\ndeclare off int;\\nset off = N - 1;\\n  RETURN (\\n      select (select distinct Salary from Employee order by Salary desc limit 1 offset off)\\n  );\\nEND\\n``",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN \\ndeclare off int;\\nset off = N - 1;\\n  RETURN (\\n      select (select distinct Salary from Employee order by Salary desc limit 1 offset off)\\n  );\\nEND\\n``",
                "codeTag": "Unknown"
            },
            {
                "id": 761017,
                "title": "accepted-solution-with-simple-query",
                "content": "```\\nBEGIN\\n    SET  N = N-1;\\n  RETURN (        \\n  SELECT Distinct Salary\\n   from Employee\\n      \\tUNION ALL (SELECT null AS Salary)\\n\\t order by Salary desc \\n\\t limit 1 offset N     \\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nBEGIN\\n    SET  N = N-1;\\n  RETURN (        \\n  SELECT Distinct Salary\\n   from Employee\\n      \\tUNION ALL (SELECT null AS Salary)\\n\\t order by Salary desc \\n\\t limit 1 offset N     \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 634862,
                "title": "using-sub-query-accepted-solution-with-proper-explanation",
                "content": "The idea here is to scan every row in the employee table, and\\nIn each row, we make a sub-query which returns the count of the number of rows which has salary greater than the salary of the row we were current checking for(in the outer query). If this count is N-1, this means the row we are operating on has Nth highest salary. Thus, we return that salary. \\n\\nNote: We are using a couple of sub-queries (`select distinct salary from employee`) for handling duplicate salaries. \\n\\nThe sql query is as below \\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n              Select e1.salary\\n            from (select distinct salary from employee) e1 where N-1 =\\n                (select count(*) from (select distinct salary from employee) e2 where e2.salary > e1.salary)\\n  );\\nEND\\n```\\n",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n              Select e1.salary\\n            from (select distinct salary from employee) e1 where N-1 =\\n                (select count(*) from (select distinct salary from employee) e2 where e2.salary > e1.salary)\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 599281,
                "title": "simple-mysql-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      Select DISTINCT Salary from Employee Order By Salary DESC LIMIT M, 1\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      Select DISTINCT Salary from Employee Order By Salary DESC LIMIT M, 1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 566864,
                "title": "nth-highest-salary-mysql",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary as getNthHighestSalary\\n      from Employee E\\n      where N-1=(select count(distinct salary) from Employee E2 where E2.Salary > E.Salary)\\n      \\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary as getNthHighestSalary\\n      from Employee E\\n      where N-1=(select count(distinct salary) from Employee E2 where E2.Salary > E.Salary)\\n      \\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 383304,
                "title": "why-don-t-we-need-an-ifnull",
                "content": "In the problem of finding the SecondHighestSalary, I used IFNULL to output NULL if the second highest value did not exist. Why do I not need to do that in this problem where my code is below? Any feedback would be appreciated! I\\'m new to SQL but trying to prepare for an interview. \\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT Salary \\n      FROM Employee\\n      ORDER BY Salary DESC\\n      LIMIT 1 \\n      OFFSET N\\n      \\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT Salary \\n      FROM Employee\\n      ORDER BY Salary DESC\\n      LIMIT 1 \\n      OFFSET N\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 341255,
                "title": "my-mssql-solution-since-there-wasn-t-one-posted",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        Select  \\n            Case \\n                WHEN @N > (Select count(Salary) FROM (Select Distinct Salary FROM Employee) as S) then null\\n                ELSE\\n                    (     \\n                        Select TOP 1 Salary\\n                        FROM (Select TOP (@N) Salary\\n                               FROM (Select Distinct Salary FROM Employee) as S\\n                               Order BY Salary DESC) as df\\n                        Order BY Salary ASC\\n                    )\\n            END\\n    );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        Select  \\n            Case \\n                WHEN @N > (Select count(Salary) FROM (Select Distinct Salary FROM Employee) as S) then null\\n                ELSE\\n                    (     \\n                        Select TOP 1 Salary\\n                        FROM (Select TOP (@N) Salary\\n                               FROM (Select Distinct Salary FROM Employee) as S\\n                               Order BY Salary DESC) as df\\n                        Order BY Salary ASC\\n                    )\\n            END\\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 255397,
                "title": "oracle-sql-accepted",
                "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n    \\n    select distinct salary into result from\\n    (select salary,dense_rank() over (order by salary desc) rn from employee)\\n    where rn=N;\\n    \\n    RETURN result;\\nEND;",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n    \\n    select distinct salary into result from\\n    (select salary,dense_rank() over (order by salary desc) rn from employee)\\n    where rn=N;\\n    \\n    RETURN result;\\nEND;",
                "codeTag": "Unknown"
            },
            {
                "id": 177434,
                "title": "my-accepted-solution",
                "content": "```CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set N = N-1;\\n  RETURN (\\n   \\n      # Write your MySQL query statement below.\\n      ifnull((select distinct Salary from Employee\\n      order by Salary desc\\n      limit N,1),Null)\\n      \\n  );\\nEND```\\n\\n# distinct plays the trick here, if there are 2 same salaries",
                "solutionTags": [],
                "code": "```CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set N = N-1;\\n  RETURN (\\n   \\n      # Write your MySQL query statement below.\\n      ifnull((select distinct Salary from Employee\\n      order by Salary desc\\n      limit N,1),Null)\\n      \\n  );\\nEND```",
                "codeTag": "Unknown"
            },
            {
                "id": 53046,
                "title": "my-accepted-easy-to-understand-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare M int;\\nSET M=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary from Employee order by Salary desc limit 1 offset M\\n      \\n  );\\nEND\\n\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare M int;\\nSET M=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary from Employee order by Salary desc limit 1 offset M\\n      \\n  );\\nEND\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53080,
                "title": "fastest-solution-without-using-order-by-or-declaring-variables",
                "content": "Often this question would be followed by solving the same problem without order by, rank, or declaring variables. Below are two accepted solutions for that problem. However, both of them are a lot slower than other accepted answers for this question, I think because the faster questions use order by -- what is the fastest way to write this query without order by?\\n\\nsolution 1, correlated subquery, 1311 ms:\\n\\n    select distinct Salary from Employee e1 \\n        where N = (select count(distinct Salary)\\n        from Employee e2\\n        where e1.Salary <= e2.Salary)\\n\\nsolution 2, self join - 1329 ms:\\n\\n         select salary from\\n          ((select N as rank) rank\\n          left join\\n          (select a.salary, count(distinct b.salary) as rank\\n          from Employee a\\n          join Employee b\\n          where a.salary <= b.salary\\n          group by a.salary) salary_rank\\n          on rank.rank = salary_rank.rank)",
                "solutionTags": [],
                "code": "Often this question would be followed by solving the same problem without order by, rank, or declaring variables. Below are two accepted solutions for that problem. However, both of them are a lot slower than other accepted answers for this question, I think because the faster questions use order by -- what is the fastest way to write this query without order by?\\n\\nsolution 1, correlated subquery, 1311 ms:\\n\\n    select distinct Salary from Employee e1 \\n        where N = (select count(distinct Salary)\\n        from Employee e2\\n        where e1.Salary <= e2.Salary)\\n\\nsolution 2, self join - 1329 ms:\\n\\n         select salary from\\n          ((select N as rank) rank\\n          left join\\n          (select a.salary, count(distinct b.salary) as rank\\n          from Employee a\\n          join Employee b\\n          where a.salary <= b.salary\\n          group by a.salary) salary_rank\\n          on rank.rank = salary_rank.rank)",
                "codeTag": "Unknown"
            },
            {
                "id": 3868769,
                "title": "mysql-eassy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT(salary) from Employee order by salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT(salary) from Employee order by salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3809172,
                "title": "mysql-solution-using-window-functions-dense-rank",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      SELECT DISTINCT salary\\n      FROM\\n      (\\n      SELECT salary,\\n        DENSE_RANK() OVER(ORDER BY salary DESC) AS drk\\n      FROM Employee \\n      ORDER BY salary DESC\\n      ) AS t\\n      WHERE drk = N\\n  );\\nEND",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      SELECT DISTINCT salary\\n      FROM\\n      (\\n      SELECT salary,\\n        DENSE_RANK() OVER(ORDER BY salary DESC) AS drk\\n      FROM Employee \\n      ORDER BY salary DESC\\n      ) AS t\\n      WHERE drk = N\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 3221381,
                "title": "hight-salary",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary from Employee order by Salary desc limit N, 1\\n      \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct Salary from Employee order by Salary desc limit N, 1\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3147270,
                "title": "solution-for-nth-salary",
                "content": "\\n# Approach\\nFirst assign a rank to all the salaries in descending order and then select the Nth ranked distinct salary. \\n\\n# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    select distinct Tablex.value from\\n    (SELECT salary,DENSE_RANK() OVER (ORDER BY salary desc) as \\'rank\\'  \\n    FROM Employee) as Tablex(value,ranking) where Tablex.ranking=N\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    select distinct Tablex.value from\\n    (SELECT salary,DENSE_RANK() OVER (ORDER BY salary desc) as \\'rank\\'  \\n    FROM Employee) as Tablex(value,ranking) where Tablex.ranking=N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2863129,
                "title": "beginner-method-on-how-to-write-function-using-mysql",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nUsing limit offset and passing n = n-1 to find the nthhighest salary\\n# Code\\n```\\n# Write your MySQL query statement below.\\nCREATE FUNCTION getNthHighestSalary ( n INT ) RETURNS INT\\n\\nBEGIN\\n\\n   SET n = n-1;\\n\\n    return( \\n        select distinct(salary) from employee order by salary desc limit 1 offset n\\n        );\\n\\nEND;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below.\\nCREATE FUNCTION getNthHighestSalary ( n INT ) RETURNS INT\\n\\nBEGIN\\n\\n   SET n = n-1;\\n\\n    return( \\n        select distinct(salary) from employee order by salary desc limit 1 offset n\\n        );\\n\\nEND;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2807066,
                "title": "mysql-solution",
                "content": "# Code\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    set N = N - 1;\\n    RETURN (\\n        # Write your MySQL query statement below.\\n        select distinct salary from Employee order by salary desc limit N, 1\\n    );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    set N = N - 1;\\n    RETURN (\\n        # Write your MySQL query statement below.\\n        select distinct salary from Employee order by salary desc limit N, 1\\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2673560,
                "title": "simple-solution-using-dense-rank",
                "content": "```\\n# Code Author Naveen Kumar Vadlamudi\\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN \\n  (\\n            SELECT DISTINCT\\n            CASE WHEN SALARY IS NULL THEN NULL\\n                 ELSE SALARY\\n            END AS getNthHighestSalary\\n            FROM \\n            (\\n\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\tSALARY,\\n\\t\\t\\t\\tDENSE_RANK() OVER(ORDER BY SALARY DESC) AS  CRANK  \\n\\t\\t\\t\\tFROM EMPLOYEE \\n            ) AS A\\n            WHERE A.CRANK = N\\n              \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Code Author Naveen Kumar Vadlamudi\\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN \\n  (\\n            SELECT DISTINCT\\n            CASE WHEN SALARY IS NULL THEN NULL\\n                 ELSE SALARY\\n            END AS getNthHighestSalary\\n            FROM \\n            (\\n\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\tSALARY,\\n\\t\\t\\t\\tDENSE_RANK() OVER(ORDER BY SALARY DESC) AS  CRANK  \\n\\t\\t\\t\\tFROM EMPLOYEE \\n            ) AS A\\n            WHERE A.CRANK = N\\n              \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2584401,
                "title": "mysql-solution",
                "content": "```\\nSELECT MAX(salary)\\n      FROM Employee e1\\n      WHERE N - 1 = ( \\n                        SELECT COUNT(DISTINCT salary)\\n                        FROM Employee e2\\n                        WHERE e2.salary > e1.salary\\n                    )\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT MAX(salary)\\n      FROM Employee e1\\n      WHERE N - 1 = ( \\n                        SELECT COUNT(DISTINCT salary)\\n                        FROM Employee e2\\n                        WHERE e2.salary > e1.salary\\n                    )\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2547550,
                "title": "simple-using-limit-mysql",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE var INT;\\nSET var = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary from employee order by salary desc limit var,1\\n  );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE var INT;\\nSET var = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary from employee order by salary desc limit var,1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2502086,
                "title": "mysql-solution-using-limit-and-offset",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from Employee \\n      order by salary desc\\n      limit 1 offset N\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from Employee \\n      order by salary desc\\n      limit 1 offset N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2419179,
                "title": "asked-in-interviews-accepted",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare m INT;\\nset m = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from Employee\\n      order by salary desc\\n      limit m,1\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare m INT;\\nset m = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from Employee\\n      order by salary desc\\n      limit m,1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2306632,
                "title": "ms-sql-solution-by-row-number",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n            \\n        select salary from \\n        (\\n            select \\n                salary,\\n                ROW_NUMBER() over(order by salary desc) as b from Employee e\\n\\t\\t\\t\\tgroup by salary \\n\\t\\t\\t\\thaving count(salary)>0) as p\\n\\t\\t\\t\\twhere p.b = @N\\n        \\n\\t\\t);\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n            \\n        select salary from \\n        (\\n            select \\n                salary,\\n                ROW_NUMBER() over(order by salary desc) as b from Employee e\\n\\t\\t\\t\\tgroup by salary \\n\\t\\t\\t\\thaving count(salary)>0) as p\\n\\t\\t\\t\\twhere p.b = @N\\n        \\n\\t\\t);\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2282444,
                "title": "2-approaches",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    # SET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      \\n      # Select distinct salary from employee order by salary desc limit N,1\\n      \\n      Select max(salary) from employee e1 where n-1=(Select count(distinct salary) from employee e2 where e2.salary>e1.salary)\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n    # SET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      \\n      # Select distinct salary from employee order by salary desc limit N,1\\n      \\n      Select max(salary) from employee e1 where n-1=(Select count(distinct salary) from employee e2 where e2.salary>e1.salary)\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2274184,
                "title": "faster-than-100-of-the-submissions-easy",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select distinct salary from employee\\n        order by salary desc offset @N-1 rows fetch next 1 rows only\\n    );\\nEND\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select distinct salary from employee\\n        order by salary desc offset @N-1 rows fetch next 1 rows only\\n    );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2239097,
                "title": "fastest-solution-with-answer-to-common-doubt",
                "content": ":)\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare x int;\\nset x = N-1;\\n  RETURN (\\n      \\n      # Write your MySQL query statement below.\\n      select distinct salary from Employee order by salary desc limit x,1\\n  );\\nEND\\n```\\nwhy cant we put directly use N-1 in the return statement? \\nans: limit can\\'t handle arithmetic expression therefore we initialize x beforehand.\\nhttps://stackoverflow.com/questions/59255433/select-one-before-last-in-mysql-custom-function",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\ndeclare x int;\\nset x = N-1;\\n  RETURN (\\n      \\n      # Write your MySQL query statement below.\\n      select distinct salary from Employee order by salary desc limit x,1\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2237207,
                "title": "simplest-dynamic-oracle-solution",
                "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n    select  max(SecondHighestSalary) into result   from(\\nselect salary as SecondHighestSalary,dense_rank() over(order by salary desc) as rank from Employee\\norder by salary desc\\n    )\\n    where rank=N;\\n    RETURN result;\\nEND;",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n    select  max(SecondHighestSalary) into result   from(\\nselect salary as SecondHighestSalary,dense_rank() over(order by salary desc) as rank from Employee\\norder by salary desc\\n    )\\n    where rank=N;\\n    RETURN result;\\nEND;",
                "codeTag": "Unknown"
            },
            {
                "id": 2162528,
                "title": "straightforward-mysql-approach",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      SELECT DISTINCT SALARY FROM EMPLOYEE ORDER BY SALARY DESC LIMIT N, 1\\n      \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  SET N = N - 1;\\n  RETURN (\\n      SELECT DISTINCT SALARY FROM EMPLOYEE ORDER BY SALARY DESC LIMIT N, 1\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2091948,
                "title": "memory-usage-0b-less-than-100-00-of-mysql-online-submissions-for-nth-highest-salary",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE L int Default N-1;\\n  RETURN (\\n      SELECT distinct salary FROM Employee ORDER BY salary DESC LIMIT L,1 \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE L int Default N-1;\\n  RETURN (\\n      SELECT distinct salary FROM Employee ORDER BY salary DESC LIMIT L,1 \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2041092,
                "title": "ms-sql-solution-faster-than-96-27",
                "content": "![image](https://assets.leetcode.com/users/images/86aaf6c0-19a5-4b9d-8ddb-2e04499d168f_1652604761.5106602.png)\\n```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select (\\n                select distinct salary\\n                from Employee\\n                order by salary desc\\n                offset @N-1 rows\\n                fetch next 1 rows only\\n                ) m\\n            );\\nEND\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select (\\n                select distinct salary\\n                from Employee\\n                order by salary desc\\n                offset @N-1 rows\\n                fetch next 1 rows only\\n                ) m\\n            );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1885232,
                "title": "mysql-solution-use-limit-offset",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE var_off_set INT DEFAULT (N - 1);\\n  RETURN (\\n        SELECT IFNULL(\\n            (\\n\\t\\t\\t\\tSELECT DISTINCT `Employee`.`salary`\\n\\t\\t\\t\\tFROM `Employee`\\n\\t\\t\\t\\tORDER BY `salary` DESC\\n\\t\\t\\t\\tLIMIT 1 OFFSET var_off_set\\n\\t\\t\\t)\\n            , null\\n        )\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  DECLARE var_off_set INT DEFAULT (N - 1);\\n  RETURN (\\n        SELECT IFNULL(\\n            (\\n\\t\\t\\t\\tSELECT DISTINCT `Employee`.`salary`\\n\\t\\t\\t\\tFROM `Employee`\\n\\t\\t\\t\\tORDER BY `salary` DESC\\n\\t\\t\\t\\tLIMIT 1 OFFSET var_off_set\\n\\t\\t\\t)\\n            , null\\n        )\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1866155,
                "title": "solution-with-description",
                "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT salary FROM Employee\\n      ORDER BY salary DESC LIMIT N,1\\n  );\\nEND\\n\\n**Here We SET N = N-1; Beacuse in LIMIT , we can\\'t pass N-1;**\\n\\n# We can also use this query\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n      ORDER BY salary DESC LIMIT 1 OFFSET M\\n  );\\nEND\\n# Using IFNULL\\nAgain we can use IFNULL Function. IFNULL function take two parameteres, one is expression and another is default value. If the value is null then it returns the set value. Otherwise , it returns the expression executed  value. The MySQL query is given below :\\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\n      SELECT IFNULL((SELECT DISTINCT salary FROM Employee\\n      ORDER BY salary DESC LIMIT M,1),NULL)\\n  );\\nEND",
                "solutionTags": [],
                "code": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N = N-1;\\n  RETURN (\\n      SELECT DISTINCT salary FROM Employee\\n      ORDER BY salary DESC LIMIT N,1\\n  );\\nEND\\n\\n**Here We SET N = N-1; Beacuse in LIMIT , we can\\'t pass N-1;**\\n\\n# We can also use this query\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n      ORDER BY salary DESC LIMIT 1 OFFSET M\\n  );\\nEND\\n# Using IFNULL\\nAgain we can use IFNULL Function. IFNULL function take two parameteres, one is expression and another is default value. If the value is null then it returns the set value. Otherwise , it returns the expression executed  value. The MySQL query is given below :\\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\n      SELECT IFNULL((SELECT DISTINCT salary FROM Employee\\n      ORDER BY salary DESC LIMIT M,1),NULL)\\n  );\\nEND",
                "codeTag": "Unknown"
            },
            {
                "id": 1828851,
                "title": "my-sql-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      FROM (\\n      select salary, DENSE_RANK() OVER (Order BY salary DESC) AS rank_salary\\n      FROM Employee\\n      ) as Employee_Details\\n      Where rank_salary = N\\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      FROM (\\n      select salary, DENSE_RANK() OVER (Order BY salary DESC) AS rank_salary\\n      FROM Employee\\n      ) as Employee_Details\\n      Where rank_salary = N\\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1796789,
                "title": "oracle-solution-without-window-function-and-limit-clause",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n    select distinct salary into result\\n    from employee e1\\n    where n-1 = (select count(distinct e2.salary)\\n                 from employee e2\\n                 where e1.salary < e2.salary);  \\n    RETURN result;\\nEND;\\n```",
                "solutionTags": [],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n    select distinct salary into result\\n    from employee e1\\n    where n-1 = (select count(distinct e2.salary)\\n                 from employee e2\\n                 where e1.salary < e2.salary);  \\n    RETURN result;\\nEND;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1734688,
                "title": "mysql-solution",
                "content": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select q.salary from (select *,dense_rank() over(order by salary desc) as rnk from Employee)q\\n      where case when\\n      N in (select dense_rank() over(order by salary desc) as rnk from Employee) then \\n      q.rnk = N \\n      else \\n      NULL\\n      End\\n      limit 1\\n      \\n  );\\nEND\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select q.salary from (select *,dense_rank() over(order by salary desc) as rnk from Employee)q\\n      where case when\\n      N in (select dense_rank() over(order by salary desc) as rnk from Employee) then \\n      q.rnk = N \\n      else \\n      NULL\\n      End\\n      limit 1\\n      \\n  );\\nEND\\n```",
                "codeTag": "Unknown"
            }
        ],
        "discussions": [
            {
                "id": 1633103,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1565858,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1627860,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1679464,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1566590,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1739036,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1567671,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1570272,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1567003,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1570223,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1633103,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1565858,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1627860,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1679464,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1566590,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1739036,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1567671,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1570272,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1567003,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 1570223,
                "content": [
                    {
                        "username": "user6793r",
                        "content": "None of the solutions working. It just throws Runtime error. I have tried solutions from discussions as well. Throws Runtime Error even though there is no mistake in the query. SOme leetcode bug."
                    },
                    {
                        "username": "mr-xed",
                        "content": "I take it back, For those looking for the solution make sure to put a semicolon at the end of the set expression, like this: `SET N=N-1;` sounds ridiculous, but that what worked for me."
                    },
                    {
                        "username": "mr-xed",
                        "content": "Great exercise, except it doesn\\'t work. Always runtime error for some reason."
                    },
                    {
                        "username": "noahsheldon",
                        "content": "Runtime Error\\nKeyError: \\'columns\\'\\n    json_file[\\'headers\\'] = json_file.pop(\\'columns\\')\\nLine 50 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "Jeff_Huang_1106",
                        "content": "It\\'s happening today again."
                    },
                    {
                        "username": "dinesh_bommisetty",
                        "content": "[@IliaOzhmegov](/IliaOzhmegov) still not working. same runtime error"
                    },
                    {
                        "username": "smuvva",
                        "content": "Yes, it\\'s still not working but if you try using submit button it will tell you whether your answer is accepting or not, my solution is accepted but when i run the code it shows ERROR"
                    },
                    {
                        "username": "JHarrisJoshua",
                        "content": "This bug still exists for a few problems... Submitting works, just not running. The way I have been testing these is by running them in db-fiddle.com"
                    },
                    {
                        "username": "viru_viral",
                        "content": "Yes, still happening with me too. "
                    },
                    {
                        "username": "ela4490",
                        "content": "[@sumithababu99](/sumithababu99) No, it still not working for MySQL"
                    },
                    {
                        "username": "IliaOzhmegov",
                        "content": "It still does, thou in old version it works fine"
                    },
                    {
                        "username": "keepintine",
                        "content": "Runtime Error even when returning 0 without any modifications. Submitting in older version changes nothing."
                    },
                    {
                        "username": "sumithababu99",
                        "content": "Try submitting in older version. It works. "
                    },
                    {
                        "username": "kmdude1000",
                        "content": "Is this still occurring? I hope this is the case. Spent a long time reviewing my statement"
                    },
                    {
                        "username": "wlichanchan",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nset N=N-1;\n  RETURN (\n      ifnull((select distinct Salary from Employee\n          order by Salary desc\n          limit 1 offset N),null)\n  );\nEND"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "why do we need to set N=N-1 if sql does not use zero-based indexing like Python?\\n"
                    },
                    {
                        "username": "Morgan-Sell",
                        "content": "Someone should remove these discussion.\\n\\nAlso, why do I receive a runtime error when I comment everything out and run the following code?\\n\\nSELECT * FROM Employee\\n\\nWhere can I learn about MySQL functions?"
                    },
                    {
                        "username": "vvaannddaannaa",
                        "content": "it gives runtime error, no matter whatever code you will run. I tried : select * from Employee. this also gives same error.\\n\\n "
                    },
                    {
                        "username": "pr0pr0gram",
                        "content": "I am also getting error. I even tried a query that matches the return type (select * won\\'t work, function needs to return int)"
                    },
                    {
                        "username": "HongdiZhao",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT N, 1\\n  );\\nEND"
                    },
                    {
                        "username": "Haidram",
                        "content": "runtime error"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# The Problem has a bug. Always gives RUNTIME ERROR⚠️\n\n\n# But There are 2 possible solutions :-\n# SOLUTION-1)\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\nDECLARE M INT;\nSET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT M, 1\n  );\nEND\n\n# SOLUTION-2)\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n\n  RETURN (\n      # Write your MySQL query statement below.\n      SELECT DISTINCT Salary FROM Employee e1 WHERE N>=(SELECT COUNT(DISTINCT salary) FROM Employee e2 WHERE e1.salary<=e2.salary) ORDER BY e1.salary DESC\n  );\nEND"
                    },
                    {
                        "username": "RamiRami",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSet N = N-1;\\nRETURN (\\nSelect IFNULL ((select distinct salary from employee order by salary desc limit 1 offset N), NULL)\\n);\\nEND"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "shouhm",
                        "content": "why there was no one complaining the problem definition is a piece of ** that the n-th salary is defined based on unique values?\\n"
                    },
                    {
                        "username": "arowell",
                        "content": "It took me quite a bit of trial-and-error to figure out you\\'re picking the Nth highest **unique** salary value."
                    },
                    {
                        "username": "akhand17",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nSELECT Emp1.Salary /*This is the outer query part */\\nFROM Employee Emp1\\nWHERE (N-1) = ( \\nSELECT COUNT(DISTINCT(Emp2.Salary))\\nFROM Employee Emp2\\nWHERE Emp2.Salary > Emp1.Salary)\\n);\\nEND\\n\\n\\nOne of the test case is failing for N=1"
                    }
                ]
            },
            {
                "id": 2013264,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1569821,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1566389,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1738525,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1706220,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1575269,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1573331,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 2010111,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1677468,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1576701,
                "content": [
                    {
                        "username": "amartins90",
                        "content": "For Pandas users: if there is no nth salary return a data frame containing None value instead of a string \\'null\\'. "
                    },
                    {
                        "username": "ClariePreston",
                        "content": "Thanks for the help"
                    },
                    {
                        "username": "micahma2016",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nDECLARE M INT;\\nSET M = N-1;\\n  RETURN (\\nSELECT IFNULL ((SELECT DISTINCT Salary FROM Employee order by Salary desc limit M,1), null)\\n      as getNthHighestSalary\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "dattasagnik47",
                        "content": "Folks , In this case I have used Dense_Rank .\\n\\nBut suppose rank becomes similar , then in that case Subset returns more than 1 row.\\nHave anyone used TOP(1)  to bypass that or used HAVING (COUNT) here ?\\n\\nWhich one will be good and efficient?\\n\\n\\n\\n"
                    },
                    {
                        "username": "rohankolhatkar",
                        "content": "Why is it giving a runtime error?Has everyone faced this exact issue?"
                    },
                    {
                        "username": "deepsgupta_16",
                        "content": "Getting runtiime error in every possible solution, even if the solution is correct. There is a bug in leetcode, No code from solution and discussions are working. "
                    },
                    {
                        "username": "gocoder1",
                        "content": "set @n=10;\\nselect salary from\\nsalaries\\norder by salary desc\\nlimit  @n,1 ;\\n\\n//what is wrong here. I get 1064 error in mysql"
                    },
                    {
                        "username": "amsavchuk",
                        "content": "Why is it needed to take into account only distinct salaries? For example, if table `Employee` has `salaries = [100, 100]` and `N = 2` the expected answer is `null` instead of `100`. It would be better to have information about that in task description."
                    },
                    {
                        "username": "edithi",
                        "content": "\\nTo find the Nth highest salary from a pandas DataFrame, sort the \\'salary\\' column in descending order, drop duplicates, and retrieve the Nth value if it exists, else return None. This approach uses pandas\\' sorting and indexing capabilities to efficiently solve the problem."
                    },
                    {
                        "username": "midnitte",
                        "content": "I\\'m not sure if you are the one commenting all of these abstract solutions, but as an in progress student, thank you!"
                    },
                    {
                        "username": "Pavani25",
                        "content": "Is there a Leet Code Bug ? As I am able to submit a solution in FEB but I am trying to submit every solution possible today again and it is not submitting throwing Run time Error"
                    },
                    {
                        "username": "priyanshgandhi",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N = N - 1;\\nRETURN (\\n# Write your MySQL query statement below.\\nselect distinct salary from Employee\\norder by salary desc limit N, 1\\n\\n);\\nEND"
                    }
                ]
            },
            {
                "id": 1575177,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 1574408,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 1574303,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 1573476,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 1572924,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 1571385,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 1570585,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 1571865,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 2077217,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 2064369,
                "content": [
                    {
                        "username": "CoderSoni",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    /* Write your PL/SQL query statement below */\\n\\nselect salary into  result from (\\nselect salary , dense_rank() over (partition by null order by salary desc ) rn  from employee\\n)\\nwhere rn = n\\nand rownum = 1;\\n    \\n    RETURN result;\\nEND;"
                    },
                    {
                        "username": "Vibhanshu2020",
                        "content": "Below query is working fine but considered as wrong answers any suggestions\\n\\'\\'\\'select a.salary as SecondHighestSalary from employee a \\nwhere N =(select count(b.salary) from employee b where b.salary >=a.salary)\\'\\'\\'"
                    },
                    {
                        "username": "ksaif78900",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      (select Salary from Employee e1 where N-1=(select count(distinct(Salary)) from Employee e2 where    e1.Salary < e2.salary) LIMIT 1)\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "xiaodi980714",
                        "content": "RETURN (select distinct Salary from Employee order by Salary desc\\n          limit N-1,1\\n       \\n  );"
                    },
                    {
                        "username": "wwy_resp",
                        "content": "![image](https://assets.leetcode.com/users/wwy_resp/image_1565763393.png)\\n"
                    },
                    {
                        "username": "symplecticgeometry",
                        "content": "I find this question very unclear. What is the N-th Highest salary? \\nSay N = 3, what should be the results of the following cases:\\ncase 1: (1,100), (2,100), (3,100)\\ncase 2: (1,110), (2,100), (3, 100), (4, 90)"
                    },
                    {
                        "username": "yogeshthakur84",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\nselect distinct salary FROM (\\nselect Salary\\n,dense_rank() over (order by Salary DESC) ranking\\nfrom Employee\\n) t\\nWHERE ranking = @N\\n    );\\nEND\\n"
                    },
                    {
                        "username": "w22we33",
                        "content": "I find an article explaining this question, looks good.\n[Find Nth Highest Salary - SQL](https://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/)"
                    },
                    {
                        "username": "KarinaMS",
                        "content": "Using Pandas, how can I add (2) in the end of the name of the series? \\n `def nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    N = N - 1  # Adjust N to be 0-based\\n    sorted_salaries = employee[\\'salary\\'].sort_values(ascending=False)\\n    try:\\n        nth_highest_salary = sorted_salaries.iloc[N]\\n        result_df = pd.DataFrame({\\'getNthHighestSalary\\': [nth_highest_salary]})\\n        return result_df\\n    except IndexError:\\n        return pd.DataFrame({\\'getNthHighestSalary\\': [None]})`"
                    },
                    {
                        "username": "albucurus",
                        "content": "Leetcode don\\'t know Oracle. In Oracle exist pseudocolumn ROWNUM, which helps to resolve much sampler this problem,\\n\\nselect x.salary into result from \\n      (select distinct salary from employee order by salary desc) x\\n      where ROWNUM = N\\n"
                    }
                ]
            },
            {
                "id": 2058538,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2047608,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2046244,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2033129,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2030077,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2029551,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2028560,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2026139,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2019392,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2018426,
                "content": [
                    {
                        "username": "mdascoder",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset n=n-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n       SELECT DISTINCT Salary\\n    FROM Employee\\n    ORDER BY Salary DESC\\n    limit 1 offset N\\n  );\\nEND"
                    },
                    {
                        "username": "swamykumar851",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nset N=N-1;\\nRETURN (\\nSELECT DISTINCT\\n    (SELECT DISTINCT salary\\n     FROM Employee\\n     ORDER BY salary DESC\\n     LIMIT N, 1) AS nth_highest_salary\\nFROM Employee\\n\\n);\\nEND"
                    },
                    {
                        "username": "geetika_shekhawat",
                        "content": "AVOID RUNTIME ERROR by removing the \"-\" sign from the beginning of every row.\\n\\nplease upvote if it works.\\n"
                    },
                    {
                        "username": "Saramago92",
                        "content": "Is the solution wrong?\\n\\nEmployee =\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nargment = 1\\n\\nOutput\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nExpected\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "gurjaspreet",
                        "content": "I have written the following code, but it is not optimal. Can anyone shed some light?\n\n import pandas as pd\n\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\n    employee = employee.sort_values('salary', ascending = False)\n    colName = 'getNthHighestSalary(' + str(N) + ')'\n    try:\n        df = employee['salary'].drop_duplicates()\n        nth = df.iloc[N-1]\n        return pd.DataFrame({f'{colName}': [nth]})\n    except:\n        return pd.DataFrame({f'{colName}': [None]})"
                    },
                    {
                        "username": "m_karthik_7",
                        "content": "AttributeError: \\'numpy.int64\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)  whats this error how to resolve this kind of errors my code was \\n\\n ` import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n    my_max =  employee.iloc[0:N][\\'salary\\'].max()\\n    return my_max   `"
                    },
                    {
                        "username": "KalledaDinesh",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT (\\n      CASE WHEN (SELECT COUNT(DISTINCT salary) FROM Employee) > N\\n        THEN ( WITH CTE AS (SELECT SALARY, DENSE_RANK() OVER(ORDER BY SALARY DESC) \\n           AS DENSERANK FROM EMPLOYEE) \\n            SELECT SALARY FROM CTE WHERE DENSERANK = N\\n        )\\n        ELSE NULL\\n      END\\n    )\\n  );\\nEND;\\n\\nWhile test run this code gives all testcases passed however submitting it is giving 10/14 test cases are passing.\\n"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "for this testcase \\n```\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 100    |\\n\\nargument=2\\n```\\nI return 100 but it expects null. Can anyone explain why?"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "You need to drop duplicates first. There is no second highest salary in this df because only salary range is 100. So you should return null."
                    },
                    {
                        "username": "mr-xed",
                        "content": "If you would share your solution I might be able to figure out why\\n"
                    },
                    {
                        "username": "oguzhekim",
                        "content": "My output is the same as expected output but it still fails the testcase. Here is the code:\n\n    temp_df = employee.drop_duplicates(subset=[\"salary\"]).sort_values(by=\"salary\", ascending=False)[[\"salary\"]]\n    nth_highest = temp_df.iloc[N-1] if len(temp_df)>=N else None\n    return pd.DataFrame({f\"getNthHighestSalary({N})\": [nth_highest]})\n\nAnd here is the outputs:\nOutput: \n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n\nExpected:\n| getNthHighestSalary(2) |\n| ---------------------- |\n| 200                    |\n"
                    },
                    {
                        "username": "padmavathidevi71625",
                        "content": "1.) Don't forget to drop duplicates\n2.) Instead of 'null' use None"
                    }
                ]
            },
            {
                "id": 2018201,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 2016349,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 2015244,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 2013570,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 2011006,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 2003920,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 1998188,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 1997447,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 1995903,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 1994413,
                "content": [
                    {
                        "username": "dwaipayan649",
                        "content": "Used pandas but solution is not working everytime giving runtime error. But works in local environment.\\nHere is the code snippet.\\n\\n  import pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df2=employee[\"salary\"].sort_values()\\n    list1=list(df2)\\n    new_index=[i for i in range(1,len(df2)+1)]\\n    df3=pd.DataFrame(data=list1,columns=[\"getNthHighestsalary\"],index=new_index)\\n    result=df3.loc[N][0]\\n    return result\\n\\nP.S. - Its just a rough snippet which explains how the base problem can be solved.\\n"
                    },
                    {
                        "username": "user7938G",
                        "content": "Why I am getting this error? while running this code. In my local machine this code is working and getting the result as required. \\n    unique_data = employee[\\'salary\\'].unique()\\n    return unique_data\\nError: \\nAttributeError: \\'numpy.ndarray\\' object has no attribute \\'to_json\\'\\n    json_file = simplejson.loads(result_table.to_json(orient=\\'split\\'))\\nLine 47 in main (_driver.py)\\n    main()\\nLine 65 in <module> (_driver.py)"
                    },
                    {
                        "username": "midnitte",
                        "content": "Interestingly seems like something is borked with the provided `employee` dataframe - if I merely return the dataframe, it has column names of `| getNthHighestSalary(2) |     |`. Seems like it was somehow overwritten despite resetting code"
                    },
                    {
                        "username": "Anubhavkumarraj",
                        "content": "what is the nth salary means?"
                    },
                    {
                        "username": "codenameStarmunch",
                        "content": "'N' is a number chosen by someone else, it's basically a placeholder for any number of another user's choosing.  You'll see it in the function parameters when you select 'Pandas' from the dropdown box in the code window right after '(employee: pd.DataFrame'.... You'll have to build you code snippet based on the assumption that the number isn't hard-coded / can be any number input by the grading system, or by a person in the real world, so if you're using Pandas, you will have to put {N} using an f-string in whichever part of your code you'd ordinarily place the number (that would be the number 2 for the 'Second-highest salary' challenge).  "
                    },
                    {
                        "username": "hannahli123",
                        "content": "Does anyone know why this is not working with test case 1? The result looks the same:\\n\\nimport pandas as pd\\n\\ndef nth_highest_salary(employee: pd.DataFrame, N: int) -> pd.DataFrame:\\n\\n    df = employee.sort_values(\\'salary\\', ascending=False)[[\\'salary\\']]\\n    #df = df[\\'salary\\'].drop_duplicates()\\n\\n    if N > len(df):\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [nan]})\\n    else:\\n        value = df.iloc[N-1]\\n        df = pd.DataFrame({f\\'getNthHighestSalary({N})\\': [value]})\\n    return df"
                    },
                    {
                        "username": "Leaderboard",
                        "content": "https://leetcode.com/problems/nth-highest-salary/description/comments/2013264 helped me with a similar issue."
                    },
                    {
                        "username": "Turonio",
                        "content": "Am I missing something? How did they get the value if its id is greater then N?\\nThe input:\\n| id | salary |\\n| -- | ------ |\\n| 1  | 100    |\\n| 2  | 200    |\\n| 3  | 300    |\\n\\nN=1\\n\\nMy output:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 100                    |\\n\\nCorrect answer:\\n| getNthHighestSalary(1) |\\n| ---------------------- |\\n| 300                    |"
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "Basically id column is unique identifier for rows in table. Don\\'t focus on values of id column. If N is greater than number of rows ,answer will be null. For e.g.\\n\\n1st highest salary will be 300\\n2nd highest salary will be 200\\n3rd highest salary will be 100\\n4th highest salary onwards the answer will be null.\\n\\nI hope this clarifies your doubt."
                    },
                    {
                        "username": "dhruvbakshi20",
                        "content": "#pandas\\nI am trying to sort the dataframe and then using iloc to get relevant value . After that I am creating required dataframe output and returning it. \\nThe code is giving result in my local ide but failing 3 testcases in leetcode\\'s console. \\nCan anyone suggest where am I going wrong?\\n"
                    },
                    {
                        "username": "ara_",
                        "content": "what is N supposed to represent? "
                    },
                    {
                        "username": "kom-senapati",
                        "content": "Why there\\'s an error in driver code ??"
                    },
                    {
                        "username": "tajuddin_107",
                        "content": "just for feedback I\\'m not sure whether right or wrong..but\\nNo, their is not any bug related to the given question I think actually when we write the query to find nth highest from employee table we must take care about the some edge cases or corner situation for ex: suppose in employee table their is column like {id, emp, salary, ...} if the salary of more than one employee having the same salary then in that cases there is a chance to return a wrong nth salary. that\\'s why may be you face this issue. I\\'m also face first time this problem before including  the distinct keyword.\\n\\nso, the required query to resolve runtime error including all cases...\\n\\n      select distinct(salary) as getNthHighestSalary from employee as e1 \\n      where N - 1 = (select  count(distinct(salary)) from employee e2 where\\n      e2.salary > e1.salary)\\n\\nhope it will works without any error..."
                    }
                ]
            },
            {
                "id": 1989128,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1985819,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1966527,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1953393,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1935970,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1935969,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1935433,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1899326,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1885010,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1868410,
                "content": [
                    {
                        "username": "shouvik32",
                        "content": "BEST SOLUTION YOU WILL SEE : \\n\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      \\n      #common table create\\nwith cte as(\\nselect \\ndense_rank() over(order by salary desc) as \"rnk\",\\nsalary\\nfrom employee \\n)\\n\\n# you can fetch nth number of salary by putting rnk=n\\'th\\nselect max(case when rnk=N then salary else null end) as \"SecondHighestSalary\"\\nfrom cte\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "kirankumar99399",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select salary from(\\n            select distinct salary, dense_rank() \\n            over(order by salary desc) as salaryRanking\\n            from employee)x\\n            where salaryRanking = N\\n    );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\nselect Nth_value(salary,N) over(order by salary desc) as Salary\\nfrom Employee limit 1 offset N\\n     \\n  );\\nEND"
                    },
                    {
                        "username": "calderon-lyre",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n    SELECT CASE WHEN N = 1 THEN (SELECT MAX(salary) FROM Employee)\\n        WHEN N > 1 THEN (SELECT e1.salary\\n        FROM Employee AS e1\\n        WHERE N-1 = (SELECT COUNT(DISTINCT (e2.salary)) \\n        FROM Employee AS e2\\n        WHERE e2.salary > e1.salary)\\n        ORDER BY 1 DESC\\n        LIMIT 1)\\n      END\\n  );\\nEND"
                    },
                    {
                        "username": "District_12",
                        "content": "testcase 13 is failing with a value 510. Anyone else have this problem?"
                    },
                    {
                        "username": "District_12",
                        "content": "How should I debug this shit?"
                    },
                    {
                        "username": "UmeshSPatil",
                        "content": "Correct Ans:\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  set n = n - 1;   // \\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT Salary\\n        FROM Employee\\n        ORDER BY Salary desc\\n        Limit n, 1\\n  );\\nEND;"
                    },
                    {
                        "username": "pmorris95",
                        "content": "Is there an error with test case 13 (out of 14) ? It states that, with argument 88, the output should be 455, but I imported the data in my IDE and ordered by rank desc, and the 88th row is 510, whereas the 90th row is 455."
                    },
                    {
                        "username": "user8428J",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct e.salary as getNthHighestSalary\\n      from\\n      (select id, salary,dense_rank() over(order by salary desc) as \\'Rank\\'\\n      from employee) as e\\n      where e.Rank=n      \\n  );\\nEND"
                    },
                    {
                        "username": "MaheshBabuMummalaneni",
                        "content": "Query is running fine and showing as Accepted but while submitting it is throwing error and showing incorrect error descriptions or outputs. This is happening for most of the queries."
                    },
                    {
                        "username": "shivamj11",
                        "content": "Please mention your query. \\n"
                    }
                ]
            },
            {
                "id": 1866905,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1866874,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1862125,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1841300,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1802710,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1795705,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1791956,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1789025,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1786204,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1781746,
                "content": [
                    {
                        "username": "shivamj11",
                        "content": "Don\\'t use ifnull. Just select distinct salary with limit 1 and offset n-1. You have to set n value to n-1 beforehand."
                    },
                    {
                        "username": "shivamj11",
                        "content": "APPROACH \\n1. We need to use offset with limit.\\n2. If n is given then we need to offset n-1 rows before that to reach nth rank. So set n = n-1, before return .\\n3. We have to ignore duplicates salary. So you know what to use.\\n4. Use if null function incase of null. "
                    },
                    {
                        "username": "divyadikshantkumar",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n     \\n\\nSELECT salary FROM(\\nSELECT distinct salary, DENSE_RANK() \\nover(ORDER BY salary DESC) AS ranking FROM employee) as k\\nWHERE ranking=N\\n      \\n  );\\nEND"
                    },
                    {
                        "username": "Manbir7",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n\\nselect salary from (select distinct salary, row_number() over (order by salary desc) sal1 from Employee) A\\n\\nwhere A.sal1= N\\n\\n      \\n  );\\nEND\\n\\nworking solution"
                    },
                    {
                        "username": "Nishantvohra",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n       select Distinct Salary from (select salary,dense_rank() over(order by Salary Desc) as d_rank from employee) temp where d_rank=@N \\n    );\\nEND"
                    },
                    {
                        "username": "duttak",
                        "content": "It has a bug. LeetCode team, please sort it. Thank you."
                    },
                    {
                        "username": "het_CE",
                        "content": "Hello Friends, Can someone give me reason why this SQL Query Passes 13 test cases out of 14 and Fail on last one.\n\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n    DECLARE M INT;\n    SET M=N-1;\n  RETURN (\n      # Write your MySQL query statement below.\n        SELECT MAX(salary) FROM Employee\n        WHERE salary NOT IN ( SELECT * FROM (\n          SELECT salary FROM Employee\n          ORDER BY salary DESC\n          LIMIT M\n          ) as t1\n        )\n  );\nEND"
                    },
                    {
                        "username": "sany2k8dev",
                        "content": "Why my submission every time ended with Runtime Error?\\n\\n```\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      SELECT DISTINCT salary FROM Employee\\n       ORDER BY salary DESC\\n      LIMIT 1 OFFSET N\\n  );\\nEND\\n```"
                    },
                    {
                        "username": "uni691125",
                        "content": "Always runtime error. System bug?\\n"
                    },
                    {
                        "username": "ro219",
                        "content": "CREATE FUNCTION getNthHighestSalary(N IN NUMBER) RETURN NUMBER IS\\nresult NUMBER;\\nBEGIN\\n    SELECT MAX(salary) INTO result\\n    FROM employee;\\n    WHILE(N>1)\\n    LOOP\\n        SELECT MAX(salary) INTO result\\n        FROM employee WHERE salary<result;\\n        N:=N-1;\\n    END LOOP;\\n    RETURN result;\\nEND;\\n\\nThis is my code and I am getting runtime error. Can anyone explain why?"
                    }
                ]
            },
            {
                "id": 1778807,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1776935,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1774746,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1773421,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1771148,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1770948,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1768508,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1766106,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1765585,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1762804,
                "content": [
                    {
                        "username": "dangquoctienvktl",
                        "content": "My MSSQL solution\\n\\n```\\nCREATE OR ALTER FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\tSet @N = @N-1\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT \\n\\t\\t\\tdistinct \\n\\t\\t\\tSalary\\n\\t\\tfrom Employee\\n\\t\\torder by salary desc Offset @N rows FETCH next 1 row only\\n    );\\nEND\\n```"
                    },
                    {
                        "username": "andrewlawrenceevans",
                        "content": "As a temporary workaround, just run your code in \"Second Highest Salary\" if you are getting the Runtime error. :("
                    },
                    {
                        "username": "SDhana",
                        "content": "it throws runtime error"
                    },
                    {
                        "username": "shashankaero",
                        "content": "My solution works in the sql developer plus but not in the console here. Not sure why it always returns runtime error. Any suggestions?"
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Runtime Error * Infinity :\n Since Jan 23, 2023"
                    },
                    {
                        "username": "siddhantdube",
                        "content": "Runtime Error, please fix this."
                    },
                    {
                        "username": "shang_shang_",
                        "content": "`CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select distinct salary\\n      from \\n        (select salary, \\n                dense_rank() over (order by salary desc) as sal_rank\\n        from Employee) t\\n      where t.sal_rank = N\\n  );\\nEND`\\n\\nThe solution above shows Runtime Error. Can anyone pls help me understand why and how to correct it?"
                    },
                    {
                        "username": "bluff_god",
                        "content": "Result always returning RUNTIME ERROR , But the possible solution would be \n\n `CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\nBEGIN\n  RETURN (\n    select salary from (select salary from Employee order by salary desc limit N) emp order by salary limit 1\n  );\nEND`"
                    },
                    {
                        "username": "hero4future",
                        "content": "run doesn\\'t work but submit work, very underwhelming experience"
                    },
                    {
                        "username": "girishrawat0097",
                        "content": "The Problem doesn\\'t have any Bug as i have submitted the solution. I have also receievd the Runtime Error at First Time Becuase it was checking for Duplicate Salary also which i have not handled at first time (because not mentioned the the case scenerior) . Once handled it worked like a charm. Hope this helps..."
                    }
                ]
            },
            {
                "id": 1754716,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1744525,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1741880,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1741322,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1739586,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1735223,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1733986,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1733475,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1733427,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1732911,
                "content": [
                    {
                        "username": "Bhushan_Waingankar",
                        "content": "If you are getting runtime error on running code directly Submit the code"
                    },
                    {
                        "username": "guptaparas1995",
                        "content": "for every solution it is runtime error"
                    },
                    {
                        "username": "user5014jA",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "Isshh",
                        "content": "What is the error?\\nCREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\n  RETURN (\\n      # Write your MySQL query statement below.\\n      select ifnull(salary,null) as getNthHighestSalary(2)\\n      from employee\\n      where id=n\\n      order by salary desc\\n  );\\nEND"
                    },
                    {
                        "username": "batul02",
                        "content": "CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT\\nBEGIN\\nSET N=N-1;\\n  RETURN (\\n      select distinct salary FROM Employee order by salary desc \\n      limit 1 offset N\\n      \\n  );\\nEND\\n\\nI think the logic for this query is right but it\\'s still showing runtime error. Any query doesn\\'t work. tried queries from discussion as well."
                    },
                    {
                        "username": "nandkumar87",
                        "content": "100% working in sql\\n--run this in ms sql server\\nalter FUNCTION getNthHighestSalary(@N int) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        SELECT DISTINCT Salary\\n        FROM employee_salary\\n        ORDER BY Salary DESC\\n        OFFSET @N-1 ROWS\\n        FETCH NEXT 1 ROWS ONLY\\n    );\\nEND\\nand then call function---\\nselect dbo.getNthHighestSalary(1)"
                    },
                    {
                        "username": "nandkumar87",
                        "content": "so many types i tried but all the times gives me runtime error"
                    },
                    {
                        "username": "Albert950207",
                        "content": "Runtime Error always, skip this question guys "
                    },
                    {
                        "username": "Vaibhav_Khaitan",
                        "content": "It\\'s giving runtime error no matter what you do. I am using Oracle."
                    },
                    {
                        "username": "nirmalkumarr",
                        "content": "select salary from\\n      (select salary, dense_rank() over(order by salary desc) as rankvalue from Employee) where rankvalue = &N\\n  "
                    }
                ]
            },
            {
                "id": 1729800,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1729365,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1728349,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1726918,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1722609,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1720696,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1714143,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1700111,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1689314,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            },
            {
                "id": 1688208,
                "content": [
                    {
                        "username": "misterabdul",
                        "content": "I tried so many times running my solution, it always throws `Runtime Error`. I thought my solution have some syntax error, then I tried running other people\\'s solution out of desperation, it still throws `Runtime Error`.\\nAfter that, I just submit my solution, and it worked fine & accepted.\\nDear LeetCode, please fix this issue."
                    },
                    {
                        "username": "shashwat_chawla",
                        "content": "\\nWhy this is giving run time error ?\\n `select salary from Employee e1 where N-1=(select count(distinct salary ) from Employee e2 where e2.salary > e1.salary)\\n`"
                    },
                    {
                        "username": "alexey0206",
                        "content": "Definitely, there is a bug, run throws runtime error and submission works... Magic!"
                    },
                    {
                        "username": "riteshbansal1709",
                        "content": "Why for most of the solutions, it is giving run time error?\\nIs dense rank method necessary for this solution?\\n"
                    },
                    {
                        "username": "impradeep27",
                        "content": "Why I'm getting error with below query:\nNote: Writing query in ms sql server\nCREATE FUNCTION getNthHighestSalary(@N INT) \nRETURNS INT AS\nBEGIN\n    RETURN (\n        /* Write your T-SQL query statement below. */\n        with cte as\n        (\n        select *, dense_rank() over (order by salary) as rnk\n        from Employee)\n\n        select distinct IFNULL(salary,null)\n        from cte\n        where rnk=@n;\n    );\nEND\nError:\n[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'with'. (156) (SQLExecDirectW)"
                    },
                    {
                        "username": "pulkitrajpal",
                        "content": "wth ! I resubmitted multiple times thinking I was doing but it\\'s throwing timeouts does not matter what the statement is . Lol"
                    },
                    {
                        "username": "suyalmukesh",
                        "content": "Runtime Error"
                    },
                    {
                        "username": "arjunallakote",
                        "content": "Hey guys,\\n\\nCREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        select top 1 isnull(salary,null) from(\\n        select top @n salary from Employee order by salary desc) as emp order by salary  \\n    );\\nEND\\n\\nCan I know why I am getting error like this,\\n\\n\\'[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near \\'@a\\'. (102) (SQLExecDirectW)\\'"
                    },
                    {
                        "username": "downvoteit",
                        "content": "Just doesn\\'t work with any solution and any vendor\\n\\nPress Run/Submit gets you a Runtime Error"
                    },
                    {
                        "username": "lamlegend108",
                        "content": "CREATE FUNCTION getNthHighestSalary(@N INT) RETURNS INT AS\\nBEGIN\\n    RETURN (\\n        /* Write your T-SQL query statement below. */\\n        SELECT us.salary as getNthHighestSalary\\nFROM (SELECT distinct ROW_NUMBER() OVER (ORDER BY salary) AS rnum, salary\\n     FROM Employee ) as us \\nWHERE us.rnum = @N   \\n    );\\nEND"
                    }
                ]
            }
        ]
    }
]