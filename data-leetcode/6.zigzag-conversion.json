[
    {
        "title": "Zigzag Conversion",
        "question_content": "The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\nP   A   H   N\nA P L S I I G\nY   I   R\n\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\nWrite the code that will take a string and make this conversion given a number of rows:\n\nstring convert(string s, int numRows);\n\n&nbsp;\nExample 1:\n\nInput: s = \"PAYPALISHIRING\", numRows = 3\nOutput: \"PAHNAPLSIIGYIR\"\n\nExample 2:\n\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n\nExample 3:\n\nInput: s = \"A\", numRows = 1\nOutput: \"A\"\n\n&nbsp;\nConstraints:\n\n\t1 <= s.length <= 1000\n\ts consists of English letters (lower-case and upper-case), ',' and '.'.\n\t1 <= numRows <= 1000",
        "solutions": [
            {
                "id": 3403,
                "title": "easy-to-understand-java-solution",
                "content": "Create nRows StringBuffers, and keep collecting characters from original string to corresponding StringBuffer. Just take care of your index to keep them in bound.\\n\\n    public String convert(String s, int nRows) {\\n        char[] c = s.toCharArray();\\n        int len = c.length;\\n        StringBuffer[] sb = new StringBuffer[nRows];\\n        for (int i = 0; i < sb.length; i++) sb[i] = new StringBuffer();\\n        \\n        int i = 0;\\n        while (i < len) {\\n            for (int idx = 0; idx < nRows && i < len; idx++) // vertically down\\n                sb[idx].append(c[i++]);\\n            for (int idx = nRows-2; idx >= 1 && i < len; idx--) // obliquely up\\n                sb[idx].append(c[i++]);\\n        }\\n        for (int idx = 1; idx < sb.length; idx++)\\n            sb[0].append(sb[idx]);\\n        return sb[0].toString();\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "Create nRows StringBuffers, and keep collecting characters from original string to corresponding StringBuffer. Just take care of your index to keep them in bound.\\n\\n    public String convert(String s, int nRows) {\\n        char[] c = s.toCharArray();\\n        int len = c.length;\\n        StringBuffer[] sb = new StringBuffer[nRows];\\n        for (int i = 0; i < sb.length; i++) sb[i] = new StringBuffer();\\n        \\n        int i = 0;\\n        while (i < len) {\\n            for (int idx = 0; idx < nRows && i < len; idx++) // vertically down\\n                sb[idx].append(c[i++]);\\n            for (int idx = nRows-2; idx >= 1 && i < len; idx--) // obliquely up\\n                sb[idx].append(c[i++]);\\n        }\\n        for (int idx = 1; idx < sb.length; idx++)\\n            sb[0].append(sb[idx]);\\n        return sb[0].toString();\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3404,
                "title": "python-o-n-solution-in-96ms-99-43",
                "content": "    class Solution(object):\\n        def convert(self, s, numRows):\\n            \"\"\"\\n            :type s: str\\n            :type numRows: int\\n            :rtype: str\\n            \"\"\"\\n            if numRows == 1 or numRows >= len(s):\\n                return s\\n    \\n            L = [''] * numRows\\n            index, step = 0, 1\\n    \\n            for x in s:\\n                L[index] += x\\n                if index == 0:\\n                    step = 1\\n                elif index == numRows -1:\\n                    step = -1\\n                index += step\\n    \\n            return ''.join(L)",
                "solutionTags": [
                    "Python"
                ],
                "code": "    class Solution(object):\\n        def convert(self, s, numRows):\\n            \"\"\"\\n            :type s: str\\n            :type numRows: int\\n            :rtype: str\\n            \"\"\"\\n            if numRows == 1 or numRows >= len(s):\\n                return s\\n    \\n            L = [''] * numRows\\n            index, step = 0, 1\\n    \\n            for x in s:\\n                L[index] += x\\n                if index == 0:\\n                    step = 1\\n                elif index == numRows -1:\\n                    step = -1\\n                index += step\\n    \\n            return ''.join(L)",
                "codeTag": "Java"
            },
            {
                "id": 3435,
                "title": "if-you-are-confused-with-zigzag-pattern-come-and-see",
                "content": "    /*n=numRows\\n    \\u0394=2n-2    1                           2n-1                         4n-3\\n    \\u0394=        2                     2n-2  2n                    4n-4   4n-2\\n    \\u0394=        3               2n-3        2n+1              4n-5       .\\n    \\u0394=        .           .               .               .            .\\n    \\u0394=        .       n+2                 .           3n               .\\n    \\u0394=        n-1 n+1                     3n-3    3n-1                 5n-5\\n    \\u0394=2n-2    n                           3n-2                         5n-4\\n    */\\nthat's the zigzag pattern the question asked!\\nBe careful with nR=1 && nR=2\\n\\n----------\\n\\n\\n----------\\n\\n\\n----------\\n\\n\\n----------\\n\\n\\n----------\\n\\n\\n----------\\n\\n\\n----------\\n\\n\\n----------\\n\\n\\nmy 16ms code in c++:\\n\\n    class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            string result=\"\";\\n            if(numRows==1)\\n    \\t\\t\\treturn s;\\n            int step1,step2;\\n            int len=s.size();\\n            for(int i=0;i<numRows;++i){\\n                step1=(numRows-i-1)*2;\\n                step2=(i)*2;\\n                int pos=i;\\n                if(pos<len)\\n                    result+=s.at(pos);\\n                while(1){\\n                    pos+=step1;\\n                    if(pos>=len)\\n                        break;\\n    \\t\\t\\t\\tif(step1)\\n    \\t\\t\\t\\t\\tresult+=s.at(pos);\\n                    pos+=step2;\\n                    if(pos>=len)\\n                        break;\\n    \\t\\t\\t\\tif(step2)\\n    \\t\\t\\t\\t\\tresult+=s.at(pos);\\n                }\\n            }\\n            return result;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            string result=\"\";\\n            if(numRows==1)\\n    \\t\\t\\treturn s;\\n            int step1,step2;\\n            int len=s.size();\\n            for(int i=0;i<numRows;++i){\\n                step1=(numRows-i-1)*2;\\n                step2=(i)*2;\\n                int pos=i;\\n                if(pos<len)\\n                    result+=s.at(pos);\\n                while(1){\\n                    pos+=step1;\\n                    if(pos>=len)\\n                        break;\\n    \\t\\t\\t\\tif(step1)\\n    \\t\\t\\t\\t\\tresult+=s.at(pos);\\n                    pos+=step2;\\n                    if(pos>=len)\\n                        break;\\n    \\t\\t\\t\\tif(step2)\\n    \\t\\t\\t\\t\\tresult+=s.at(pos);\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 3134053,
                "title": "c-faster-than-95-easy-understanding-clean-concise-code",
                "content": "\\n\\n\\n\\n**PLEASE DO UPVOTE!!!!!**\\n\\n**Connect with Me on Linkedin -> https://www.linkedin.com/in/md-kamran-55b98521a/**\\n# Code\\n```\\n\\n\\nclass Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n    \\n    if(numRows <= 1) return s;\\n\\n    vector<string>v(numRows, \"\"); \\n\\n    int j = 0, dir = -1;\\n\\n    for(int i = 0; i < s.length(); i++)\\n    {\\n\\n        if(j == numRows - 1 || j == 0) dir *= (-1); \\n\\t\\t \\n        v[j] += s[i];\\n\\n        if(dir == 1) j++;\\n\\n        else j--;\\n    }\\n\\n    string res;\\n\\n    for(auto &it : v) res += it; \\n\\n    return res;\\n\\n    }\\n};\\n\\n\\n```\\n![b62ab1be-232a-438f-9524-7d8ca4dbd5fe_1675328166.1161866.png](https://assets.leetcode.com/users/images/8d5343b1-0eb4-4111-a914-40ce968fd034_1675389764.2273676.png)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\n\\n\\nclass Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n    \\n    if(numRows <= 1) return s;\\n\\n    vector<string>v(numRows, \"\"); \\n\\n    int j = 0, dir = -1;\\n\\n    for(int i = 0; i < s.length(); i++)\\n    {\\n\\n        if(j == numRows - 1 || j == 0) dir *= (-1); \\n\\t\\t \\n        v[j] += s[i];\\n\\n        if(dir == 1) j++;\\n\\n        else j--;\\n    }\\n\\n    string res;\\n\\n    for(auto &it : v) res += it; \\n\\n    return res;\\n\\n    }\\n};\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3465,
                "title": "share-simple-c-solution",
                "content": "The problem statement itself is unclear for many. Especially for 2-row case. \"ABCD\", 2 --> \"ACBD\". The confusion most likely is from the character placement. I would like to extend it a little bit to make ZigZag easy understood.\\n\\nThe example can be written as follow:\\n\\n1. P.......A........H.......N\\n2. ..A..P....L..S....I...I....G\\n3. ....Y.........I........R\\n\\nTherefore, <ABCD, 2> can be arranged as:\\n\\n 1. A....C\\n 2. ...B....D\\n\\nMy simple accepted code:\\n\\n    string convert(string s, int nRows) {\\n        \\n        if (nRows <= 1)\\n            return s;\\n    \\n        const int len = (int)s.length();\\n        string *str = new string[nRows];\\n    \\n        int row = 0, step = 1;\\n        for (int i = 0; i < len; ++i)\\n        {\\n            str[row].push_back(s[i]);\\n    \\n            if (row == 0)\\n                step = 1;\\n            else if (row == nRows - 1)\\n                step = -1;\\n    \\n            row += step;\\n        }\\n    \\n        s.clear();\\n        for (int j = 0; j < nRows; ++j)\\n        {\\n            s.append(str[j]);\\n        }\\n    \\n        delete[] str;\\n        return s;\\n    }",
                "solutionTags": [],
                "code": "The problem statement itself is unclear for many. Especially for 2-row case. \"ABCD\", 2 --> \"ACBD\". The confusion most likely is from the character placement. I would like to extend it a little bit to make ZigZag easy understood.\\n\\nThe example can be written as follow:\\n\\n1. P.......A........H.......N\\n2. ..A..P....L..S....I...I....G\\n3. ....Y.........I........R\\n\\nTherefore, <ABCD, 2> can be arranged as:\\n\\n 1. A....C\\n 2. ...B....D\\n\\nMy simple accepted code:\\n\\n    string convert(string s, int nRows) {\\n        \\n        if (nRows <= 1)\\n            return s;\\n    \\n        const int len = (int)s.length();\\n        string *str = new string[nRows];\\n    \\n        int row = 0, step = 1;\\n        for (int i = 0; i < len; ++i)\\n        {\\n            str[row].push_back(s[i]);\\n    \\n            if (row == 0)\\n                step = 1;\\n            else if (row == nRows - 1)\\n                step = -1;\\n    \\n            row += step;\\n        }\\n    \\n        s.clear();\\n        for (int j = 0; j < nRows; ++j)\\n        {\\n            s.append(str[j]);\\n        }\\n    \\n        delete[] str;\\n        return s;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 817306,
                "title": "very-simple-and-intuitive-o-n-python-solution-with-explanation",
                "content": "In this question the most important thing is getting the pattern correct. It is very easy to go down the wrong path and spend 10 minutes trying to figure out how to make a complicated algorithm work when a very easy one would suffice.\\n\\n> Thinking process\\n\\n1. First I looked at the problem and thought about how the printed pattern looked like it would be mapped out on a matrix. I wrote out the number of \"main\" columns and then the number of \"middle\" columns\\n    ```\\n    P           I         N\\n    A      L    S     I   G\\n    Y    A      H    R\\n    P           I\\n    ------------------------\\n    4     2     4     2   2(*)\\n    ``` \\n    The last line is 2 only because the word ends, but we can see that the pattern is `4-2-4-2-4-...`. When drawing it out for `numRows = 3`, the pattern became \\n\\n     ```\\n    P         A         H         N\\n    A    P    L    S    I    I    G\\n    Y         I         R\\n    ---------------------------------\\n    3    1    3    1    3    1    2(*)\\n    ``` \\n    Again we can see the pattern is `3-1-3-1-3-...`\\n\\n    So the pattern of \"main\" rows to \"mid\" rows is `n, n-2, n, n-2, ...`\\n\\n    When I tried to build an algorithm for this pattern I got stuck. How would I make the index move up `n`, then down `n-2` without confusing myself or missing edge cases?\\n2. Next I tried to write out the row of each letter in the string. For numRows = 4, it became:\\n   ```\\n   P  A  Y  P  A  L  I  S  H  I  R  I  N  G\\n   -----------------------------------------\\n   1  2  3  4  3  2  1  2  3  4  3  2  1  2\\n   ```\\n   For numRows = 3, it became:\\n    ```\\n   P  A  Y  P  A  L  I  S  H  I  R  I  N  G\\n   -----------------------------------------\\n   1  2  3  2  1  2  3  2  1  2  3  2  1  2\\n   ```\\n\\n   This is where I found the correct pattern. Basically instead of worrying about \"main\" rows vs. \"mid\" rows, it easily maps into moving the index from 1 -> numRows, and then from numRows -> 1. We don\\'t even need to think about a matrix and worrying about rows vs. columns.\\n\\n> Algorithm\\n\\nAt first I thought about how to make the different rows as strings. How would I make `row1`, `row2`, `row3`? Sure if there were only a few rows I could hardcode them, but then how would I be able to add the character to each row easily? It is too difficult, so I thought using an array would be much better. \\n\\nThen I thought how would we make sure that we are going up and down in the correct pattern? The easiest way was to use a `going_up` flag to make sure to switch the direction of the index.\\n\\nLastly the only thing to check was edge cases, which by this point was pretty easy with a simple run through of the algorithm.\\n\\n> Code:\\n\\n```py\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1:\\n            return s\\n            \\n        row_arr = [\"\"] * numRows\\n        row_idx = 1\\n        going_up = True\\n\\n        for ch in s:\\n            row_arr[row_idx-1] += ch\\n            if row_idx == numRows:\\n                going_up = False\\n            elif row_idx == 1:\\n                going_up = True\\n            \\n            if going_up:\\n                row_idx += 1\\n            else:\\n                row_idx -= 1\\n        \\n        return \"\".join(row_arr)\\n```\\n\\n> Time & Space Complexity\\n\\nTime: `O(n)`\\n- We run through the whole string once: `O(n)`\\n  - everything we do inside the for loop: `O(1)`\\n- Finally we join the whole array int a string: `O(n)`\\n\\nSpace: `O(n)`\\n- We are creating a new array: `O(n)`\\n- We are using join to put it back into a string: `O(n)`",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\n    P           I         N\\n    A      L    S     I   G\\n    Y    A      H    R\\n    P           I\\n    ------------------------\\n    4     2     4     2   2(*)\\n    ```\n```\\n    P         A         H         N\\n    A    P    L    S    I    I    G\\n    Y         I         R\\n    ---------------------------------\\n    3    1    3    1    3    1    2(*)\\n    ```\n```\\n   P  A  Y  P  A  L  I  S  H  I  R  I  N  G\\n   -----------------------------------------\\n   1  2  3  4  3  2  1  2  3  4  3  2  1  2\\n   ```\n```\\n   P  A  Y  P  A  L  I  S  H  I  R  I  N  G\\n   -----------------------------------------\\n   1  2  3  2  1  2  3  2  1  2  3  2  1  2\\n   ```\n```py\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1:\\n            return s\\n            \\n        row_arr = [\"\"] * numRows\\n        row_idx = 1\\n        going_up = True\\n\\n        for ch in s:\\n            row_arr[row_idx-1] += ch\\n            if row_idx == numRows:\\n                going_up = False\\n            elif row_idx == 1:\\n                going_up = True\\n            \\n            if going_up:\\n                row_idx += 1\\n            else:\\n                row_idx -= 1\\n        \\n        return \"\".join(row_arr)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3453,
                "title": "java-solution-easy-and-clear-interesting-approach",
                "content": "    public class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows<=1)return s;\\n        StringBuilder[] sb=new StringBuilder[numRows];\\n        for(int i=0;i<sb.length;i++){\\n            sb[i]=new StringBuilder(\"\");   //init every sb element **important step!!!!\\n        }\\n        int incre=1;\\n        int index=0;\\n        for(int i=0;i<s.length();i++){\\n            sb[index].append(s.charAt(i));\\n            if(index==0){incre=1;}\\n            if(index==numRows-1){incre=-1;}\\n            index+=incre;\\n        }\\n        String re=\"\";\\n        for(int i=0;i<sb.length;i++){\\n            re+=sb[i];\\n        }\\n        return re.toString();\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows<=1)return s;\\n        StringBuilder[] sb=new StringBuilder[numRows];\\n        for(int i=0;i<sb.length;i++){\\n            sb[i]=new StringBuilder(\"\");   //init every sb element **important step!!!!\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 3417,
                "title": "a-10-lines-one-pass-o-n-time-o-1-space-accepted-solution-with-detailed-explantation",
                "content": " The distribution of the elements is period. \\n\\n    P   A   H   N\\n    A P L S I I G\\n    Y   I   R\\nFor example, the following has 4 periods(cycles):\\n\\n    P   | A   | H   | N\\n    A P | L S | I I | G\\n    Y   | I   | R   |\\n\\nThe size of every period is defined as \"cycle\"\\n\\n    cycle = (2*nRows - 2), except nRows == 1.\\n\\nIn this example,  (2*nRows - 2) = 4. \\n\\nIn every period, every row has 2 elements, except the first row and the last row.\\n\\nSuppose the current row is i, the index of the first element is j:\\n\\n    j = i + cycle*k, k = 0, 1, 2, ...\\n\\nThe index of the second element is secondJ:\\n\\n    secondJ = (j - i) + cycle - i\\n\\n (j-i) is the start of current period, (j-i) + cycle is the start of next period.\\n\\n\\n    string convert(string s, int nRows) {\\n            if(nRows <= 1) return s;\\n            string result = \"\";\\n            //the size of a cycle(period)\\n            int cycle = 2 * nRows - 2;\\n            for(int i = 0; i < nRows; ++i)\\n            {\\n                for(int j = i; j < s.length(); j = j + cycle){\\n                   result = result + s[j];\\n                   int secondJ = (j - i) + cycle - i;\\n                   if(i != 0 && i != nRows-1 && secondJ < s.length())\\n                       result = result + s[secondJ];\\n                }\\n            }\\n            return result;\\n        }",
                "solutionTags": [
                    "C++",
                    "Python"
                ],
                "code": " The distribution of the elements is period. \\n\\n    P   A   H   N\\n    A P L S I I G\\n    Y   I   R\\nFor example, the following has 4 periods(cycles):\\n\\n    P   | A   | H   | N\\n    A P | L S | I I | G\\n    Y   | I   | R   |\\n\\nThe size of every period is defined as \"cycle\"\\n\\n    cycle = (2*nRows - 2), except nRows == 1.\\n\\nIn this example,  (2*nRows - 2) = 4. \\n\\nIn every period, every row has 2 elements, except the first row and the last row.\\n\\nSuppose the current row is i, the index of the first element is j:\\n\\n    j = i + cycle*k, k = 0, 1, 2, ...\\n\\nThe index of the second element is secondJ:\\n\\n    secondJ = (j - i) + cycle - i\\n\\n (j-i) is the start of current period, (j-i) + cycle is the start of next period.\\n\\n\\n    string convert(string s, int nRows) {\\n            if(nRows <= 1) return s;\\n            string result = \"\";\\n            //the size of a cycle(period)\\n            int cycle = 2 * nRows - 2;\\n            for(int i = 0; i < nRows; ++i)\\n            {\\n                for(int j = i; j < s.length(); j = j + cycle){\\n                   result = result + s[j];\\n                   int secondJ = (j - i) + cycle - i;\\n                   if(i != 0 && i != nRows-1 && secondJ < s.length())\\n                       result = result + s[secondJ];\\n                }\\n            }\\n            return result;\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 3133966,
                "title": "easy-explanation-with-pics-and-video-java-c-python",
                "content": "![image](https://assets.leetcode.com/users/images/fdf22375-8354-4cb7-adb0-cef316e39a2d_1675385332.2793877.png)\\n\\n\\nThings become clear with the above image.\\n\\n# Intuition:\\n1. Just look at the top row what is the difference b/w each char i.e A and I and I and Q = 8\\n            5*2-2 == numberOf rows *2 - 2 (The corner elements are excluded).\\nSimilarly for each row i.e B and J the diff is 8, C and K is 8\\n2. The interesting part comes when the char in the diagnoal has to be added, but even this has a pattern\\n\\t\\n\\tThere will be no char in between for row 0 and row n.\\n\\tThere can be only one diagonal char and the diagonal diff is original diff -2 at each step or diff - (rowNumber*2);\\n\\n# Approach\\n\\n1. Create an empty StringBuilder which is our ans.\\n2.  Calculate the diff = numRows*2 -2;\\n3. Iterate over 0 to rowNumber in a for loop  \\nThe first char will be row number or i (append to String)\\n4. Write a while loop in the above for loop :\\n5. The first char will be row number or i (append to String)\\n6. Calculate the diagonalDiff if any and append to the String.\\n7. Increase the index by diff and return ans.\\n\\n\\nhttps://youtu.be/YwU8pENP-vw\\n# If you find this useful\\n![image](https://assets.leetcode.com/users/images/2ffb3a66-a5d4-4df4-b5d2-d87bb7059594_1675386290.4900236.jpeg)\\n\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        \\n        StringBuilder answer = new StringBuilder();\\n        int n = s.length();\\n        int diff = 2 * (numRows - 1);\\n        int diagonalDiff = diff;\\n        int secondIndex;\\n        int index;\\n        for (int i = 0; i < numRows; i++) {\\n            index = i;\\n\\n            while (index < n) {\\n                answer.append(s.charAt(index));\\n                if (i != 0 && i != numRows - 1) {\\n                    diagonalDiff = diff-2*i;\\n                    secondIndex = index + diagonalDiff;\\n                    \\n                    if (secondIndex < n) {\\n                        answer.append(s.charAt(secondIndex));\\n                    }\\n                }\\n                index += diff;\\n            }\\n        }\\n        \\n        return answer.toString();\\n    }\\n}\\n```\\n\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        \\n        stringstream answer;\\n        int n = s.length();\\n        int diff = 2 * (numRows - 1);\\n        int diagonalDiff = diff;\\n        int secondIndex;\\n        int index;\\n        for (int i = 0; i < numRows; i++) {\\n            index = i;\\n\\n            while (index < n) {\\n                answer << s[index];\\n                if (i != 0 && i != numRows - 1) {\\n                    diagonalDiff = diff-2*i;\\n                    secondIndex = index + diagonalDiff;\\n                    \\n                    if (secondIndex < n) {\\n                        answer << s[secondIndex];\\n                    }\\n                }\\n                index += diff;\\n            }\\n        }\\n        \\n        return answer.str();\\n    }\\n};\\n\\n```\\n\\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1:\\n            return s\\n        answer = \\'\\'\\n        n = len(s)\\n        diff = 2 * (numRows - 1)\\n        diagonal_diff = diff\\n        second_index = 0\\n        index = 0\\n        for i in range(numRows):\\n            index = i\\n            while index < n:\\n                answer += s[index]\\n                if i != 0 and i != numRows - 1:\\n                    diagonal_diff = diff - 2 * i\\n                    second_index = index + diagonal_diff\\n                    if second_index < n:\\n                        answer += s[second_index]\\n                index += diff\\n        return answer\\n```\\n",
                "solutionTags": [
                    "Java",
                    "Python",
                    "Python3",
                    "C"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        \\n        StringBuilder answer = new StringBuilder();\\n        int n = s.length();\\n        int diff = 2 * (numRows - 1);\\n        int diagonalDiff = diff;\\n        int secondIndex;\\n        int index;\\n        for (int i = 0; i < numRows; i++) {\\n            index = i;\\n\\n            while (index < n) {\\n                answer.append(s.charAt(index));\\n                if (i != 0 && i != numRows - 1) {\\n                    diagonalDiff = diff-2*i;\\n                    secondIndex = index + diagonalDiff;\\n                    \\n                    if (secondIndex < n) {\\n                        answer.append(s.charAt(secondIndex));\\n                    }\\n                }\\n                index += diff;\\n            }\\n        }\\n        \\n        return answer.toString();\\n    }\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        \\n        stringstream answer;\\n        int n = s.length();\\n        int diff = 2 * (numRows - 1);\\n        int diagonalDiff = diff;\\n        int secondIndex;\\n        int index;\\n        for (int i = 0; i < numRows; i++) {\\n            index = i;\\n\\n            while (index < n) {\\n                answer << s[index];\\n                if (i != 0 && i != numRows - 1) {\\n                    diagonalDiff = diff-2*i;\\n                    secondIndex = index + diagonalDiff;\\n                    \\n                    if (secondIndex < n) {\\n                        answer << s[secondIndex];\\n                    }\\n                }\\n                index += diff;\\n            }\\n        }\\n        \\n        return answer.str();\\n    }\\n};\\n\\n```\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1:\\n            return s\\n        answer = \\'\\'\\n        n = len(s)\\n        diff = 2 * (numRows - 1)\\n        diagonal_diff = diff\\n        second_index = 0\\n        index = 0\\n        for i in range(numRows):\\n            index = i\\n            while index < n:\\n                answer += s[index]\\n                if i != 0 and i != numRows - 1:\\n                    diagonal_diff = diff - 2 * i\\n                    second_index = index + diagonal_diff\\n                    if second_index < n:\\n                        answer += s[second_index]\\n                index += diff\\n        return answer\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2628318,
                "title": "python-solution-template-method-with-explanation",
                "content": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        template = list(range(numRows)) + list(range(numRows - 2, 0, -1))\\n\\n        result = [\\'\\'] * numRows\\n        for i, char in enumerate(s):\\n            result[template[i % len(template)]] += char\\n        return \\'\\'.join(result)\\n```\\n![image](https://assets.leetcode.com/users/images/f9b864b4-59fe-452a-83cc-57ae58c1dc74_1664383447.7802014.png)",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        template = list(range(numRows)) + list(range(numRows - 2, 0, -1))\\n\\n        result = [\\'\\'] * numRows\\n        for i, char in enumerate(s):\\n            result[template[i % len(template)]] += char\\n        return \\'\\'.join(result)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2837185,
                "title": "100-solution-explained-with-visualization-to-the-code",
                "content": "[https://youtu.be/EWZWiG750FI]()",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "JavaScript"
                ],
                "code": "[https://youtu.be/EWZWiG750FI]()",
                "codeTag": "Unknown"
            },
            {
                "id": 920510,
                "title": "c-8ms-90-very-easy-for-understand-with-commentaries",
                "content": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans;\\n        vector <string> tmp(numRows);                                                         //create strings for each row\\n        int i=0, n=s.size();\\n        while(i<n){                                      \\n            for(int j=0;j<numRows && i<n; j++, i++) tmp[j] += s[i];               //add for our strings character when we move down\\n            for(int j=numRows - 2;j>0 && i<n; j--, i++) tmp[j] += s[i];            //add for our strings character when we move up exept first and last string\\n        }\\n        for(int j=0;j<numRows; j++) ans += tmp[j];                                       //combain together our strings\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans;\\n        vector <string> tmp(numRows);                                                         //create strings for each row\\n        int i=0, n=s.size();\\n        while(i<n){                                      \\n            for(int j=0;j<numRows && i<n; j++, i++) tmp[j] += s[i];               //add for our strings character when we move down\\n            for(int j=numRows - 2;j>0 && i<n; j--, i++) tmp[j] += s[i];            //add for our strings character when we move up exept first and last string\\n        }\\n        for(int j=0;j<numRows; j++) ans += tmp[j];                                       //combain together our strings\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 124059,
                "title": "thinking-process-java-python",
                "content": "> characters in s are put zigzag in order\\n> ->  characters in a row maintain their relative order in s\\n> -> for each character in s, we figure out its row number and append to corresponding row data structure\\n\\n\\n>We start at row 0, move down until we hit row numRows - 1\\n>the move up until we hit row 0.\\n> `diff` helps manage increment and decrement of `curRow`.\\n\\n****\\n> Java\\n```\\n    public String convert(String s, int numRows) {\\n        if (numRows <= 1) return s;\\n        \\n        // Each element in rows represent a row.\\n        StringBuilder[] rows = new StringBuilder[numRows];\\n        for (int i = 0; i < numRows; i++)\\n            rows[i] = new StringBuilder();\\n        \\n        int curRow = 0; // Current row number.\\n        int diff = 1; // 1 downwards, -1 upwards.\\n        \\n        for (char ch : s.toCharArray()) {\\n            rows[curRow].append(ch);\\n            // Opposite moving direction.\\n            if (curRow == numRows - 1 ) diff = -1;\\n            else if (curRow == 0) diff = 1;\\n        \\n            curRow += diff;\\n        }\\n        \\n        // Format result.\\n        StringBuilder result = new StringBuilder();\\n        for (StringBuilder row : rows) {\\n            result.append(row);\\n        } \\n        \\n        return result.toString();\\n    }\\n```\\n> Python\\n```\\n  def convert(self, s, numRows):\\n    if numRows == 1:\\n      return s\\n    \\n    curRow, step = 0, 1\\n    rows = [\\'\\'] * numRows\\n      \\n    for ch in s:\\n      rows[curRow] += ch\\n      if curRow == numRows - 1:\\n        step = -1\\n      elif curRow == 0:\\n        step = 1\\n      curRow += step\\n\\n    return \\'\\'.join(rows)\\n```\\n**(\\u4EBA \\u2022\\u0348\\u1D17\\u2022\\u0348)** Thanks for voting!",
                "solutionTags": [],
                "code": "```\\n    public String convert(String s, int numRows) {\\n        if (numRows <= 1) return s;\\n        \\n        // Each element in rows represent a row.\\n        StringBuilder[] rows = new StringBuilder[numRows];\\n        for (int i = 0; i < numRows; i++)\\n            rows[i] = new StringBuilder();\\n        \\n        int curRow = 0; // Current row number.\\n        int diff = 1; // 1 downwards, -1 upwards.\\n        \\n        for (char ch : s.toCharArray()) {\\n            rows[curRow].append(ch);\\n            // Opposite moving direction.\\n            if (curRow == numRows - 1 ) diff = -1;\\n            else if (curRow == 0) diff = 1;\\n        \\n            curRow += diff;\\n        }\\n        \\n        // Format result.\\n        StringBuilder result = new StringBuilder();\\n        for (StringBuilder row : rows) {\\n            result.append(row);\\n        } \\n        \\n        return result.toString();\\n    }\\n```\n```\\n  def convert(self, s, numRows):\\n    if numRows == 1:\\n      return s\\n    \\n    curRow, step = 0, 1\\n    rows = [\\'\\'] * numRows\\n      \\n    for ch in s:\\n      rows[curRow] += ch\\n      if curRow == numRows - 1:\\n        step = -1\\n      elif curRow == 0:\\n        step = 1\\n      curRow += step\\n\\n    return \\'\\'.join(rows)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3980,
                "title": "c-code-the-problem-is-solved-very-easy",
                "content": "class Solution {\\npublic:\\n    string convert(string s, int nRows) {\\n        \\n\\n\\n        if(nRows==1)\\n            return s;\\n        \\n        int y=0;\\n        bool flag= true;\\n        string sArray[nRows];\\n        for(int i=0;i<nRows;i++)\\n            sArray[i]=\"\";\\n        \\n        for(int i=0;i<s.length();i++){\\n            \\n            sArray[y]+=s[i];\\n            \\n            if(y==0){\\n                flag=true;\\n            }\\n            if(y==nRows-1){\\n                flag=false;\\n            }\\n            \\n            if(flag==true){\\n                y++;\\n            }else{\\n                y--;\\n            }\\n            \\n\\n        }\\n\\n        string ret=\"\";\\n        \\n        for(int i=0;i<nRows;i++){\\n            ret+=sArray[i];\\n        }\\n        \\n        return ret;\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    string convert(string s, int nRows) {\\n        \\n\\n\\n        if(nRows==1)\\n            return s;\\n        \\n        int y=0;\\n        bool flag= true;\\n        string sArray[nRows];\\n        for(int i=0;i<nRows;i++)\\n            sArray[i]=\"\";\\n        \\n        for(int i=0;i<s.length();i++){\\n            \\n            sArray[y]+=s[i];\\n            \\n            if(y==0){\\n                flag=true;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3522,
                "title": "intuitive-javascript-solution",
                "content": "\\nIt's easier to look at the problem with visualizations. What we need to do here is to break down the input string in zigzag fashion and recompose row by row. \\n- ```convert('ABCDEF', 2)``` returns ```'ACEBDF'```\\n```\\n    Row 1 ->  A   C   E\\n    Row 2 ->    B   D   F\\n```\\n- ```convert('ABCDEF', 3)``` returns ```'AEBDFC'```\\n```\\n    Row 1 ->  A       E\\n    Row 2 ->    B   D   F\\n    Row 3 ->      C\\n```\\n- ```convert('ABCDEF', 4)``` returns ```'ABFCED'```\\n```\\n    Row 1 ->  A\\n    Row 2 ->    B       F\\n    Row 3 ->      C   E\\n    Row 4 ->        D\\n```\\n```\\nvar convert = function(s, numRows) {\\n    // return original string if can't zigzag\\n    if (numRows === 1 || s.length < numRows) return s;\\n\\n    let rows = []\\n    let converted = '';\\n    let reverse = false;\\n    let count = 0\\n\\n    // prepare rows\\n    for (let i = 0; i < numRows; i++) rows[i] = [];\\n    // reverse the push flow when reaching turning points\\n    for (let i = 0; i < s.length; i++) {\\n        rows[count].push(s[i]);\\n        reverse ? count-- : count++;\\n        if (count === numRows - 1 || count === 0) reverse = !reverse;\\n    }\\n    // put together converted string\\n    return rows.reduce((converted, cur) => converted + cur.join(''), '');\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```convert('ABCDEF', 2)```\n```'ACEBDF'```\n```\\n    Row 1 ->  A   C   E\\n    Row 2 ->    B   D   F\\n```\n```convert('ABCDEF', 3)```\n```'AEBDFC'```\n```\\n    Row 1 ->  A       E\\n    Row 2 ->    B   D   F\\n    Row 3 ->      C\\n```\n```convert('ABCDEF', 4)```\n```'ABFCED'```\n```\\n    Row 1 ->  A\\n    Row 2 ->    B       F\\n    Row 3 ->      C   E\\n    Row 4 ->        D\\n```\n```\\nvar convert = function(s, numRows) {\\n    // return original string if can't zigzag\\n    if (numRows === 1 || s.length < numRows) return s;\\n\\n    let rows = []\\n    let converted = '';\\n    let reverse = false;\\n    let count = 0\\n\\n    // prepare rows\\n    for (let i = 0; i < numRows; i++) rows[i] = [];\\n    // reverse the push flow when reaching turning points\\n    for (let i = 0; i < s.length; i++) {\\n        rows[count].push(s[i]);\\n        reverse ? count-- : count++;\\n        if (count === numRows - 1 || count === 0) reverse = !reverse;\\n    }\\n    // put together converted string\\n    return rows.reduce((converted, cur) => converted + cur.join(''), '');\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1597244,
                "title": "accepted-solution-for-swift",
                "content": "<blockquote>\\n<b>Disclaimer:</b> By using any content from this post or thread, you release the author(s) from all liability and warranty of any kind. You are free to use the content freely and as you see fit. Any suggestions for improvement are welcome and greatly appreciated! Happy coding!\\n</blockquote>\\n\\n```swift\\nclass Solution {\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        guard s.count > 1 && numRows > 1 else { return s }\\n        \\n        var lines = [[Character]](repeating: [], count: numRows)\\n        var idx = 0\\n        var flag = false\\n        \\n        for ch in s {\\n            lines[idx].append(ch)\\n            idx += flag ? -1 : 1\\n            guard idx == -1 || idx == numRows else { continue }\\n            idx += flag ? 2 : -2\\n            flag.toggle()\\n        }\\n        return lines.map { String($0) }.joined()\\n    }\\n}\\n```\\n\\n---\\n\\n<p>\\n<details>\\n<summary>\\n<img src=\"https://git.io/JDblm\" height=\"24\">\\n<b>TEST CASES</b>\\n</summary>\\n\\n<p><pre>\\n<b>Result:</b> Executed 3 tests, with 0 failures (0 unexpected) in 0.005 (0.007) seconds\\n</pre></p>\\n\\n```swift\\nimport XCTest\\n\\nclass Tests: XCTestCase {\\n    \\n    private let solution = Solution()\\n    \\n    func test0() {\\n        let value = solution.convert(\"PAYPALISHIRING\", 3)\\n        XCTAssertEqual(value, \"PAHNAPLSIIGYIR\")\\n    }\\n    \\n    // P     I    N\\n    // A   L S  I G\\n    // Y A   H R\\n    // P     I\\n    func test1() {\\n        let value = solution.convert(\"PAYPALISHIRING\", 4)\\n        XCTAssertEqual(value, \"PINALSIGYAHRPI\")\\n    }\\n    \\n    func test2() {\\n        let value = solution.convert(\"A\", 1)\\n        XCTAssertEqual(value, \"A\")\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```\\n\\n</details>\\n</p>",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```swift\\nclass Solution {\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        guard s.count > 1 && numRows > 1 else { return s }\\n        \\n        var lines = [[Character]](repeating: [], count: numRows)\\n        var idx = 0\\n        var flag = false\\n        \\n        for ch in s {\\n            lines[idx].append(ch)\\n            idx += flag ? -1 : 1\\n            guard idx == -1 || idx == numRows else { continue }\\n            idx += flag ? 2 : -2\\n            flag.toggle()\\n        }\\n        return lines.map { String($0) }.joined()\\n    }\\n}\\n```\n```swift\\nimport XCTest\\n\\nclass Tests: XCTestCase {\\n    \\n    private let solution = Solution()\\n    \\n    func test0() {\\n        let value = solution.convert(\"PAYPALISHIRING\", 3)\\n        XCTAssertEqual(value, \"PAHNAPLSIIGYIR\")\\n    }\\n    \\n    // P     I    N\\n    // A   L S  I G\\n    // Y A   H R\\n    // P     I\\n    func test1() {\\n        let value = solution.convert(\"PAYPALISHIRING\", 4)\\n        XCTAssertEqual(value, \"PINALSIGYAHRPI\")\\n    }\\n    \\n    func test2() {\\n        let value = solution.convert(\"A\", 1)\\n        XCTAssertEqual(value, \"A\")\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3134126,
                "title": "leetcode-the-hard-way-explained-line-by-line",
                "content": "\\uD83D\\uDD34 Check out [LeetCode The Hard Way](https://wingkwong.github.io/leetcode-the-hard-way/) for more solution explanations and tutorials. \\n\\uD83D\\uDFE0 Check out our [Discord Study Group](https://discord.gg/Nqm4jJcyBf) for live discussion.\\n\\uD83D\\uDFE2 Give a star on [Github Repository](https://github.com/wingkwong/leetcode-the-hard-way) and upvote this post if you like it.\\n\\uD83D\\uDD35 Check out [Screencast](https://www.youtube.com/watch?v=4D_2z5oCqEc&list=PLBu4Bche1aEU-8z7xl3-B9lfw_DJtT_xs&index=3) if you are interested.\\n\\n**Python**\\n\\n```py\\n# simulate and add each character to the corresponding row\\n# go down -> reach bottom -> go up -> reach top -> go down ...\\nclass Solution:\\n    def convert(self, s: str, n: int) -> str:\\n        # edge case\\n        if n == 1: return s\\n        rows = [\\'\\' for _ in range(n)]\\n        # j is the index to track which rows a character should be added to\\n        # d is the direction: -1 means go up, 1 means go down\\n        j, d = 0, 1\\n        for i in range(len(s)):\\n            # add the current character to corresponding row\\n            rows[j] += s[i]\\n            # if it reaches to the last row, we need to go up\\n            if j == n - 1: d = -1\\n            # if it reaches to the first row, we need to go down\\n            elif j == 0: d = 1\\n            # move j pointer\\n            j += d;\\n        # rows would look like below in the first example\\n        # [\\'PAHN\\', \\'APLSIIG\\', \\'YIR\\']\\n        # we use join to build the final answer\\n        return \\'\\'.join(rows)\\n```\\n\\n**C++ (Modified from Dev_1)**\\n\\n```cpp\\n// simulate and add each character to the corresponding row\\n// go down -> reach bottom -> go up -> reach top -> go down ...\\nclass Solution {\\npublic:\\n    string convert(string s, int n) {\\n        // edge case\\n        if (n == 1) return s;\\n        vector<string> rows(n);\\n        // j is the index to track which rows a character should be added to\\n        // d is the direction: -1 means go up, 1 means go down\\n        int j = 0, d = 1;\\n        for (int i = 0; i < s.size(); i++) {\\n            // add the current character to corresponding row\\n            rows[j] += s[i];\\n            // if it reaches to the last row, we need to go up\\n            if(j == n - 1) d = -1;\\n            // if it reaches to the first row, we need to go down\\n            else if(j == 0) d = 1;\\n            // move j pointer\\n            j += d;\\n        }\\n        // rows would look like below in the first example\\n        // [\\'PAHN\\', \\'APLSIIG\\', \\'YIR\\']\\n        // we use `accumulate` to build the final answer (in C++ 20, it takes O(n) only)\\n        return accumulate(rows.begin(), rows.end(), string{});\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Python"
                ],
                "code": "```py\\n# simulate and add each character to the corresponding row\\n# go down -> reach bottom -> go up -> reach top -> go down ...\\nclass Solution:\\n    def convert(self, s: str, n: int) -> str:\\n        # edge case\\n        if n == 1: return s\\n        rows = [\\'\\' for _ in range(n)]\\n        # j is the index to track which rows a character should be added to\\n        # d is the direction: -1 means go up, 1 means go down\\n        j, d = 0, 1\\n        for i in range(len(s)):\\n            # add the current character to corresponding row\\n            rows[j] += s[i]\\n            # if it reaches to the last row, we need to go up\\n            if j == n - 1: d = -1\\n            # if it reaches to the first row, we need to go down\\n            elif j == 0: d = 1\\n            # move j pointer\\n            j += d;\\n        # rows would look like below in the first example\\n        # [\\'PAHN\\', \\'APLSIIG\\', \\'YIR\\']\\n        # we use join to build the final answer\\n        return \\'\\'.join(rows)\\n```\n```cpp\\n// simulate and add each character to the corresponding row\\n// go down -> reach bottom -> go up -> reach top -> go down ...\\nclass Solution {\\npublic:\\n    string convert(string s, int n) {\\n        // edge case\\n        if (n == 1) return s;\\n        vector<string> rows(n);\\n        // j is the index to track which rows a character should be added to\\n        // d is the direction: -1 means go up, 1 means go down\\n        int j = 0, d = 1;\\n        for (int i = 0; i < s.size(); i++) {\\n            // add the current character to corresponding row\\n            rows[j] += s[i];\\n            // if it reaches to the last row, we need to go up\\n            if(j == n - 1) d = -1;\\n            // if it reaches to the first row, we need to go down\\n            else if(j == 0) d = 1;\\n            // move j pointer\\n            j += d;\\n        }\\n        // rows would look like below in the first example\\n        // [\\'PAHN\\', \\'APLSIIG\\', \\'YIR\\']\\n        // we use `accumulate` to build the final answer (in C++ 20, it takes O(n) only)\\n        return accumulate(rows.begin(), rows.end(), string{});\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 333761,
                "title": "rust-0ms-4ms",
                "content": "![image](https://assets.leetcode.com/users/obliquemotion/image_1563649130.png)\\n\\n\\n```rust\\nimpl Solution {\\n    pub fn convert(s: String, num_rows: i32) -> String {\\n        let mut zigzags: Vec<_> = (0..num_rows)\\n            .chain((1..num_rows-1).rev())\\n            .cycle()\\n            .zip(s.chars())\\n            .collect();\\n        zigzags.sort_by_key(|&(row, _)| row);\\n        zigzags.into_iter()\\n            .map(|(_, c)| c)\\n            .collect()\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```rust\\nimpl Solution {\\n    pub fn convert(s: String, num_rows: i32) -> String {\\n        let mut zigzags: Vec<_> = (0..num_rows)\\n            .chain((1..num_rows-1).rev())\\n            .cycle()\\n            .zip(s.chars())\\n            .collect();\\n        zigzags.sort_by_key(|&(row, _)| row);\\n        zigzags.into_iter()\\n            .map(|(_, c)| c)\\n            .collect()\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3819,
                "title": "two-ways-of-o-n-solutions-one-follows-the-order-of-input-string-and-other-follows-the-order-of-output-string",
                "content": "Both the algorithms are of O(n) time complexity as every character in the input string is **traversed only once**.\\nIn the first version of algorithm, the output string's string buffer get populated based on the output string order i.e, **string builder gets populated incrementally from 0 to size-1**.\\n\\n    0             6            12             18\\n\\n    1       5     7      11    13       17    19\\n \\n    2    4        8  10        14  16         20\\n\\n    3             9            15             21 \\n\\n\\nIn the above sample case the number of rows is 4, when the first iteration is completed the locations **0,1,2,3 of the string builder gets filled with the locations 0,6,12,18 of the input string** it goes on further for other three rows.\\n\\n    public class Solution {\\n        public String convert(String s, int nRows) {\\n            if (nRows == 1)\\n                return s;\\n            StringBuilder strBuilder = new StringBuilder();\\n            int borderRowStep = 2 * nRows - 2;\\n            for (int i = 0; i < nRows; i++) {\\n                if (i == 0 || i == nRows - 1) {\\n                    for (int j = i; j < s.length(); j = j + borderRowStep) {\\n                        strBuilder.append(s.charAt(j));\\n                    }\\n                } else {\\n                    int j = i;\\n                    boolean flag = true;\\n                    int insideRowLargeStep = 2 * (nRows - 1 - i);\\n                    int insideRowSmallStep = borderRowStep - insideRowLargeStep;\\n                    while (j < s.length()) {\\n                       strBuilder.append(s.charAt(j));\\n                        if (flag)\\n                            j = j + insideRowLargeStep;\\n                        else\\n                            j = j + insideRowSmallStep;\\n                        flag = !flag;\\n                    }\\n                }\\n            }\\n            return strBuilder.toString();\\n        \\n    }\\n    }\\n\\nIn the second version of algorithm string buffer is filled in the order of input string  i.e, the **string buffer gets filled in the zig zag order**, when the first iteration of the outer while loop completes the locations **0,5,11,17 in string builder gets filled with the locations 0,1,2,3, from the input string**\\n\\n    class Solution{\\n    public String convert(String s, int nRows) {\\n        char[] c = s.toCharArray();\\n        int len = c.length;\\n        StringBuffer[] sb = new StringBuffer[nRows];\\n        for (int z=0; z < sb.length; z++) sb[z] = new StringBuffer();\\n        int k=0;\\n        while (k < len) {\\n            for (int zigZagIndex = 0; zigZagIndex < nRows && k < len; zigZagIndex++) // vertically down\\n                sb[zigZagIndex].append(c[k++]);\\n            for (int zigZagIndex = nRows-2; zigZagIndex >= 1 && k < len; zigZagIndex--) // obliquely up\\n                sb[zigZagIndex].append(c[k++]);\\n        }\\n        for (int index = 1; index < sb.length; index++)\\n            sb[0].append(sb[index]);\\n        return sb[0].toString();\\n    }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public String convert(String s, int nRows) {\\n            if (nRows == 1)\\n                return s;\\n            StringBuilder strBuilder = new StringBuilder();\\n            int borderRowStep = 2 * nRows - 2;\\n            for (int i = 0; i < nRows; i++) {\\n                if (i == 0 || i == nRows - 1) {\\n                    for (int j = i; j < s.length(); j = j + borderRowStep) {\\n                        strBuilder.append(s.charAt(j));\\n                    }",
                "codeTag": "Java"
            },
            {
                "id": 791453,
                "title": "90-faster-and-90-less-space-explanation",
                "content": "The idea is to go up and down the zigzag\\n\\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows < 2:\\n            return s\\n        i = 0\\n        res = [\"\"]*numRows      # We will fill in each line in the zigzag\\n        for letter in s:\\n            if i == numRows-1:  # If this is the last line in the zigzag we go up\\n                grow = False\\n            elif i == 0:        #Otherwise we go down\\n                grow = True \\n            res[i] += letter    #Add the letter to its row\\n            i = (i+1) if grow else i-1  # We increment (add 1) if grow is True, \\n\\t\\t\\t                            # and decrement otherwise\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n        return \"\".join(res)     # return the joined rows\\n```\\n\\nDo you like my solution?",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows < 2:\\n            return s\\n        i = 0\\n        res = [\"\"]*numRows      # We will fill in each line in the zigzag\\n        for letter in s:\\n            if i == numRows-1:  # If this is the last line in the zigzag we go up\\n                grow = False\\n            elif i == 0:        #Otherwise we go down\\n                grow = True \\n            res[i] += letter    #Add the letter to its row\\n            i = (i+1) if grow else i-1  # We increment (add 1) if grow is True, \\n\\t\\t\\t                            # and decrement otherwise\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n        return \"\".join(res)     # return the joined rows\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3830,
                "title": "what-does-zigzag-means",
                "content": "The case that provided is a special case which we can easily handle.\\n\\nWhen there are more than 3 rows, what does zigzag mean?\\n\\n    A        F\\n\\n    B  E   G\\n\\n    C       H\\n\\n    D       I",
                "solutionTags": [],
                "code": "",
                "codeTag": "Unknown"
            },
            {
                "id": 231612,
                "title": "java-solution-beats-94",
                "content": "The idea is simple:\\nI\\'ve calculated the formula that identifies the order of characters in zigzag.\\nHere is an example for numRows = 4 (just contiguous numbers instead letters):\\n![image](https://assets.leetcode.com/users/olsh/image_1549226655.png)\\n\\n1st row : 1,7,13  (or  1, 1+2*(4-1), 1+2*(4-1)+2*(4-1) = **1+k*2(n-1)**)\\n2nd row: 2,6,8,12,14 (or 2, 2+2*(4-2), 2+2*(4-2)+2*(2-1),2+2*(4-2)+2*(2-1)+2*(4-2), .... **2+2(n-2) + 2(2-1)**)\\n3th row:3,5,9,11,15 (or 3, 3+2(n-3), 3+2(n-3)+2*(3-1), ... **3+2(n-3) + 2(3-1)**)\\n4th row:4,10,16 (or 4, 4+2(4-1), 4+2(4-1)+2(4-1), ... **4+k*2(4-1)**)\\nSo general formula will look like this:\\n![image](https://assets.leetcode.com/users/olsh/image_1549228342.png)\\n\\nThe whole code snippet:\\n**ind** - means what character (at what position in input string) we append to builder at current iteration.\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows==1)return s;\\n        StringBuilder builder = new StringBuilder();\\n        for (int i=1;i<=numRows;i++){\\n            int ind = i-1;\\n            boolean up = true;\\n            while (ind < s.length()){\\n                builder.append(s.charAt(ind));\\n                if (i==1){\\n                    ind += 2*(numRows-i);\\n                } else if (i==numRows){\\n                    ind += 2*(i-1);\\n                } else {\\n                    ind += up ? 2*(numRows-i) : 2*(i-1);\\n                    up=!up;\\n                }\\n            }\\n        }\\n        return builder.toString();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows==1)return s;\\n        StringBuilder builder = new StringBuilder();\\n        for (int i=1;i<=numRows;i++){\\n            int ind = i-1;\\n            boolean up = true;\\n            while (ind < s.length()){\\n                builder.append(s.charAt(ind));\\n                if (i==1){\\n                    ind += 2*(numRows-i);\\n                } else if (i==numRows){\\n                    ind += 2*(i-1);\\n                } else {\\n                    ind += up ? 2*(numRows-i) : 2*(i-1);\\n                    up=!up;\\n                }\\n            }\\n        }\\n        return builder.toString();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3744,
                "title": "a-simple-python-solution-97ms-8-lines",
                "content": "    def convert(self, s, nRows):\\n        if nRows==1:\\n            return s\\n        period= 2*(nRows -1)\\n        lines=[\"\" for i in range(nRows)]\\n        d={} # dict remainder:line\\n        for i in xrange(period):\\n            if i<nRows:\\n                d[i]=i\\n            else:\\n    \\t        d[i]=period-i\\n\\n        for i in xrange(len(s)):\\n            lines[ d[i%period] ] +=s[i]\\n    \\n        return \"\".join(lines)\\n\\nThe idea is to use the remainder (index%period) to determine which line the character at the given index will be. The period is calculated first based on nRows. A dictionary with remainder:line as key:value is then created (this can also be done with a list or a tuple). Once these are done, we simply go through s, assign each character to its new line, and then combine these lines to get the converted string.\\n\\nThe code can be further shortened to 8 lines by using dict comprehension:  \\n\\n       d={i:i if i<nRows else (period-i) for i in xrange(period)}\\n\\n<br>\\n\\n    def convert(self, s, nRows):\\n        if nRows==1:\\n            return s\\n        period= 2*(nRows -1)\\n        lines=[\"\" for i in range(nRows)]\\n        d={i:i if i<nRows else (period-i) for i in xrange(period)}\\n\\n        for i in xrange(len(s)):\\n            lines[ d[i%period] ] +=s[i]\\n    \\n        return \"\".join(lines)",
                "solutionTags": [
                    "Python"
                ],
                "code": "    def convert(self, s, nRows):\\n        if nRows==1:\\n            return s\\n        period= 2*(nRows -1)\\n        lines=[\"\" for i in range(nRows)]\\n        d={} # dict remainder:line\\n        for i in xrange(period):\\n            if i<nRows:\\n                d[i]=i\\n            else:\\n    \\t        d[i]=period-i\\n\\n        for i in xrange(len(s)):\\n            lines[ d[i%period] ] +=s[i]\\n    \\n        return \"\".join(lines)\\n\\nThe idea is to use the remainder (index%period) to determine which line the character at the given index will be. The period is calculated first based on nRows. A dictionary with remainder:line as key:value is then created (this can also be done with a list or a tuple). Once these are done, we simply go through s, assign each character to its new line, and then combine these lines to get the converted string.\\n\\nThe code can be further shortened to 8 lines by using dict comprehension:  \\n\\n       d={i:i if i<nRows else (period-i) for i in xrange(period)}\\n\\n<br>\\n\\n    def convert(self, s, nRows):\\n        if nRows==1:\\n            return s\\n        period= 2*(nRows -1)\\n        lines=[\"\" for i in range(nRows)]\\n        d={i:i if i<nRows else (period-i) for i in xrange(period)}\\n\\n        for i in xrange(len(s)):\\n            lines[ d[i%period] ] +=s[i]\\n    \\n        return \"\".join(lines)",
                "codeTag": "Python3"
            },
            {
                "id": 416860,
                "title": "6-5-line-javascript-solution",
                "content": "## Understand The Problem\\n\\nFirst we look at the example with 4 rows and notice the order in which the rows are populated, particularly the way it goes down and then up again.\\n\\n|              | c0       | c1  | c2  |\\n| -----------: | -------- | --- | --- |\\n| \\uD83D\\uDC49 **row 0** | **P** \\uD83D\\uDC48 |     |     |\\n|        row 1 |          |     |     |\\n|        row 2 |          |     |     |\\n|        row 3 |          |     |     |\\n\\nRows: `0`\\n\\n|              | c0       | c1  | c2  |\\n| -----------: | -------- | --- | --- |\\n|        row 0 | P        |     |     |\\n| \\uD83D\\uDC49 **row 1** | **A** \\uD83D\\uDC48 |     |     |\\n|        row 2 |          |     |     |\\n|        row 3 |          |     |     |\\n\\nRows: `0, 1`\\n\\n|              | c0       | c1  | c2  |\\n| -----------: | -------- | --- | --- |\\n|        row 0 | P        |     |     |\\n|        row 1 | A        |     |     |\\n| \\uD83D\\uDC49 **row 2** | **Y** \\uD83D\\uDC48 |     |     |\\n|        row 3 |          |     |     |\\n\\nRows: `0, 1, 2`\\n\\n|              | c0       | c1  | c2  |\\n| -----------: | -------- | --- | --- |\\n|        row 0 | P        |     |     |\\n|        row 1 | A        |     |     |\\n|        row 2 | Y        |     |     |\\n| \\uD83D\\uDC49 **row 3** | **P** \\uD83D\\uDC48 |     |     |\\n\\nRows: `0, 1, 2, 3`\\n\\n|              | c0  | c1       | c2  |\\n| -----------: | --- | -------- | --- |\\n|        row 0 | P   |          |     |\\n|        row 1 | A   |          |     |\\n| \\uD83D\\uDC49 **row 2** | Y   | **A** \\uD83D\\uDC48 |     |\\n|        row 3 | P   |          |     |\\n\\nRows: `0, 1, 2, 3, 2`\\n\\n|              | c0  | c1  | c2       |\\n| -----------: | --- | --- | -------- |\\n|        row 0 | P   |     |          |\\n| \\uD83D\\uDC49 **row 1** | A   |     | **L** \\uD83D\\uDC48 |\\n|        row 2 | Y   | A   |          |\\n|        row 3 | P   |     |          |\\n\\nRows: `0, 1, 2, 3, 2, 1`\\n\\nAnd then, if we kept going, we\\'d see that the sequence of rows repeats at this point.\\n\\n## Make a Plan\\n\\nLoop through the given string and store each letter in a separate sequece for each row, as determined by the zigzag sequence. Then combine those row sequences together into a new string.\\n\\n## Pseudocode It\\n\\n1. Make an array with the zigzag sequence\\n2. Make an array with as many strings as we need rows\\n3. Append the characters to the row strings in zigzag sequence\\n4. Join the row strings in the array together\\n\\n## Code It\\n\\nThe 4 lines of pseudocode we wrote above become 5 lines of actual code below, but it all still makes sense\\n\\n> Runtime: **88 ms**, faster than _98.05%_ of JavaScript online submissions\\n> Memory Usage: **48.4 MB**, less than _13.00%_ of JavaScript online submissions\\n\\n```javascript\\n/**\\n * @param {string} s\\n * @param {number} numRows\\n * @return {string}\\n */\\nconst convert = (s, numRows) => {\\n  // 1. Make an array with the zigzag sequence\\n  const zigzag = [...new Array(numRows).keys()];\\n  zigzag.push(...zigzag.slice(1, -1).reverse());\\n  // 2. Make an array with as many strings as we need rows\\n  const rows = new Array(numRows).fill(\\'\\');\\n  // 3. Append the characters to the row strings in zigzag sequence\\n  [...s].forEach((c, i) => (rows[zigzag[i % zigzag.length]] += c));\\n  // 4. Join the row strings in the array together\\n  return rows.join(\\'\\');\\n};\\n```\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```javascript\\n/**\\n * @param {string} s\\n * @param {number} numRows\\n * @return {string}\\n */\\nconst convert = (s, numRows) => {\\n  // 1. Make an array with the zigzag sequence\\n  const zigzag = [...new Array(numRows).keys()];\\n  zigzag.push(...zigzag.slice(1, -1).reverse());\\n  // 2. Make an array with as many strings as we need rows\\n  const rows = new Array(numRows).fill(\\'\\');\\n  // 3. Append the characters to the row strings in zigzag sequence\\n  [...s].forEach((c, i) => (rows[zigzag[i % zigzag.length]] += c));\\n  // 4. Join the row strings in the array together\\n  return rows.join(\\'\\');\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1332885,
                "title": "c-simple-and-clean-solution-10-short-lines",
                "content": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1) return s;\\n        \\n        vector<string> v(min(numRows, int(s.size())), \"\");\\n        // direction -1 is down, 1 is up\\n        int direction = -1, idx = 0;\\n        \\n        for (int i = 0; i < s.size(); i++) {\\n            v[idx] += s[i];\\n            idx += direction == -1 ? 1 : -1;\\n            if (idx == 0 || idx == numRows - 1) direction = -direction;\\n        }\\n        \\n        string res = \"\";\\n        for (auto a : v) res += a;\\n        \\n        return res;\\n    }\\n};\\n```\\n**Like it? please upvote!**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1) return s;\\n        \\n        vector<string> v(min(numRows, int(s.size())), \"\");\\n        // direction -1 is down, 1 is up\\n        int direction = -1, idx = 0;\\n        \\n        for (int i = 0; i < s.size(); i++) {\\n            v[idx] += s[i];\\n            idx += direction == -1 ? 1 : -1;\\n            if (idx == 0 || idx == numRows - 1) direction = -direction;\\n        }\\n        \\n        string res = \"\";\\n        for (auto a : v) res += a;\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3707,
                "title": "8ms-c-solution-easy-to-understand",
                "content": "    char* convert(char* s, int numRows) {\\n    int n=strlen(s);\\n    char* a;\\n    int k=0;\\n    if(numRows==1 || n<=numRows)return s;\\n    for(int i=0;i<numRows;i++)\\n    {\\n        for(int j=i;j<n;j+=2*(numRows-1))\\n        {\\n            a[k++]=s[j];\\n            if(i!=0 && i!=numRows-1)\\n            {\\n              int t=j+2*(numRows-1)-2*i;\\n              if(t<n)\\n              a[k++]=s[t];\\n            }\\n        }\\n    }\\n    a[k]='\\\\0';\\n       return a;\\n}",
                "solutionTags": [],
                "code": "    char* convert(char* s, int numRows) {\\n    int n=strlen(s);\\n    char* a;\\n    int k=0;\\n    if(numRows==1 || n<=numRows)return s;\\n    for(int i=0;i<numRows;i++)\\n    {\\n        for(int j=i;j<n;j+=2*(numRows-1))\\n        {\\n            a[k++]=s[j];\\n            if(i!=0 && i!=numRows-1)\\n            {\\n              int t=j+2*(numRows-1)-2*i;\\n              if(t<n)\\n              a[k++]=s[t];\\n            }\\n        }\\n    }\\n    a[k]='\\\\0';\\n       return a;\\n}",
                "codeTag": "Unknown"
            },
            {
                "id": 3489525,
                "title": "c-java-python-javascript-easy-to-understand-solution-with-explanation",
                "content": "\\n# Intuition:\\nThe problem asks to convert a given string into a zigzag pattern with a given number of rows, and then read the converted string row by row. One way to approach the problem is to simulate the process of converting the given string into the zigzag pattern by iterating over the string and filling each row in the pattern.\\n\\n# Approach:\\nWe can use two nested loops, one for iterating over the rows, and one for iterating over the characters in each row. We can also use a variable to keep track of the length of each cycle, which is 2 * numRows - 2 in this case. In each iteration, we can add the character to the corresponding row in the pattern, and also add the corresponding character in the next cycle if it exists.\\n\\n- For each row, we need to skip characters for the first and last row, as there is no corresponding character in the next cycle.\\n- For the rows in between, we need to add the corresponding character in the next cycle.\\n- We can use a string variable to store the converted string, and return it at the end.\\n# Complexity:\\n\\n- Time Complexity: O(n), where n is the length of the input string. We iterate over each character in the string once.\\n- Space Complexity: O(n), where n is the length of the input string. We use a string variable to store the converted string, which takes O(n) space.\\n\\n# C++\\n```\\nclass Solution {\\npublic:\\n   string convert(string s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        string result;\\n        int n = s.length();\\n        int cycleLen = 2 * numRows - 2;\\n        for (int i = 0; i < numRows; i++) {\\n            for (int j = 0; j + i < n; j += cycleLen) {\\n                result += s[j + i];\\n                if (i != 0 && i != numRows - 1 && j + cycleLen - i < n) {\\n                    result += s[j + cycleLen - i];\\n                }\\n            }\\n        }\\n        return result;\\n    }       \\n};\\n```\\n\\n---\\n# Java\\n```\\npublic class Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        StringBuilder result = new StringBuilder();\\n        int n = s.length();\\n        int cycleLen = 2 * numRows - 2;\\n        for (int i = 0; i < numRows; i++) {\\n            for (int j = 0; j + i < n; j += cycleLen) {\\n                result.append(s.charAt(j + i));\\n                if (i != 0 && i != numRows - 1 && j + cycleLen - i < n) {\\n                    result.append(s.charAt(j + cycleLen - i));\\n                }\\n            }\\n        }\\n        return result.toString();\\n    }\\n}\\n\\n```\\n\\n---\\n# Python\\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        if numRows == 1:\\n            return s\\n        result = \\'\\'\\n        n = len(s)\\n        cycleLen = 2 * numRows - 2\\n        for i in range(numRows):\\n            for j in range(0, n - i, cycleLen):\\n                result += s[j + i]\\n                if i != 0 and i != numRows - 1 and j + cycleLen - i < n:\\n                    result += s[j + cycleLen - i]\\n        return result\\n\\n```\\n---\\n# JavaScript\\n```\\nvar convert = function(s, numRows) {\\n    if (numRows === 1) {\\n        return s;\\n    }\\n    let result = \\'\\';\\n    const n = s.length;\\n    const cycleLen = 2 * numRows - 2;\\n    for (let i = 0; i < numRows; i++) {\\n        for (let j = 0; j + i < n; j += cycleLen) {\\n            result += s[j + i];\\n            if (i !== 0 && i !== numRows - 1 && j + cycleLen - i < n) {\\n                result += s[j + cycleLen - i];\\n            }\\n        }\\n    }\\n    return result;\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "JavaScript",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n   string convert(string s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        string result;\\n        int n = s.length();\\n        int cycleLen = 2 * numRows - 2;\\n        for (int i = 0; i < numRows; i++) {\\n            for (int j = 0; j + i < n; j += cycleLen) {\\n                result += s[j + i];\\n                if (i != 0 && i != numRows - 1 && j + cycleLen - i < n) {\\n                    result += s[j + cycleLen - i];\\n                }\\n            }\\n        }\\n        return result;\\n    }       \\n};\\n```\n```\\npublic class Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        StringBuilder result = new StringBuilder();\\n        int n = s.length();\\n        int cycleLen = 2 * numRows - 2;\\n        for (int i = 0; i < numRows; i++) {\\n            for (int j = 0; j + i < n; j += cycleLen) {\\n                result.append(s.charAt(j + i));\\n                if (i != 0 && i != numRows - 1 && j + cycleLen - i < n) {\\n                    result.append(s.charAt(j + cycleLen - i));\\n                }\\n            }\\n        }\\n        return result.toString();\\n    }\\n}\\n\\n```\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        if numRows == 1:\\n            return s\\n        result = \\'\\'\\n        n = len(s)\\n        cycleLen = 2 * numRows - 2\\n        for i in range(numRows):\\n            for j in range(0, n - i, cycleLen):\\n                result += s[j + i]\\n                if i != 0 and i != numRows - 1 and j + cycleLen - i < n:\\n                    result += s[j + cycleLen - i]\\n        return result\\n\\n```\n```\\nvar convert = function(s, numRows) {\\n    if (numRows === 1) {\\n        return s;\\n    }\\n    let result = \\'\\';\\n    const n = s.length;\\n    const cycleLen = 2 * numRows - 2;\\n    for (let i = 0; i < numRows; i++) {\\n        for (let j = 0; j + i < n; j += cycleLen) {\\n            result += s[j + i];\\n            if (i !== 0 && i !== numRows - 1 && j + cycleLen - i < n) {\\n                result += s[j + cycleLen - i];\\n            }\\n        }\\n    }\\n    return result;\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3135411,
                "title": "c-easy-explanation-in-hindi",
                "content": "[https://youtu.be/EhhKnzTRDoI](Watch)\\n**Watch this video for the better explanation of the code.**\\n\\n\\nAlso you can **SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81** this channel for the daily leetcode challange solution.\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\nIf you find my solution helpful please upvote it.\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows<2) return s;\\n       int t[numRows][s.size()];\\n       memset(t,-1, sizeof(t));\\n        string ans;\\n\\n        for(int i=0, changer=1, row=0; i<s.size(); i++){\\n            \\n            t[row][i]= s[i];\\n            if(row==numRows-1) changer =-1;\\n            if(row==0) changer=1;\\n            row= row+ changer;\\n\\n        }\\n\\n       for(int i=0; i<numRows; i++){\\n           for(int j=0; j<s.size();j++){\\n               if(t[i][j]!=-1)ans.push_back(t[i][j]);\\n           }\\n       }\\n\\n    return ans;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows<2) return s;\\n       int t[numRows][s.size()];\\n       memset(t,-1, sizeof(t));\\n        string ans;\\n\\n        for(int i=0, changer=1, row=0; i<s.size(); i++){\\n            \\n            t[row][i]= s[i];\\n            if(row==numRows-1) changer =-1;\\n            if(row==0) changer=1;\\n            row= row+ changer;\\n\\n        }\\n\\n       for(int i=0; i<numRows; i++){\\n           for(int j=0; j<s.size();j++){\\n               if(t[i][j]!=-1)ans.push_back(t[i][j]);\\n           }\\n       }\\n\\n    return ans;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3736,
                "title": "my-easy-read-python-solution",
                "content": "Consume the numRows is 5,we see the zigzag pattern like this:\\n\\n    0        8\\n    1     7  9\\n    2   6   10\\n    3 5     11\\n    4       12...\\n\\nwe can see the numbers 0~7 is a small pattern in here,if we divide 8 we can get same number in other small patterns.like \\n0%8 = 0; 8%8 = 0  \\n1%8 = 1; 9%8 = 1\\nso we can use this feature and filter them into rows we store.and this is my code:\\n\\n    class Solution(object):\\n        def convert(self, s, numRows):\\n            \"\"\"\\n            :type s: str\\n            :type numRows: int\\n            :rtype: str\\n            \"\"\"\\n            if numRows == 1: return s\\n            rows = [''] * numRows\\n            num = (numRows-1)*2\\n            for i, item in enumerate(s):\\n                if i % num >= numRows:\\n                    rows[(num - i % num) % numRows] += item\\n                else:\\n                    rows[i % num] += item\\n            return ''.join(rows)",
                "solutionTags": [],
                "code": "Consume the numRows is 5,we see the zigzag pattern like this:\\n\\n    0        8\\n    1     7  9\\n    2   6   10\\n    3 5     11\\n    4       12...\\n\\nwe can see the numbers 0~7 is a small pattern in here,if we divide 8 we can get same number in other small patterns.like \\n0%8 = 0; 8%8 = 0  \\n1%8 = 1; 9%8 = 1\\nso we can use this feature and filter them into rows we store.and this is my code:\\n\\n    class Solution(object):\\n        def convert(self, s, numRows):\\n            \"\"\"\\n            :type s: str\\n            :type numRows: int\\n            :rtype: str\\n            \"\"\"\\n            if numRows == 1: return s\\n            rows = [''] * numRows\\n            num = (numRows-1)*2\\n            for i, item in enumerate(s):\\n                if i % num >= numRows:\\n                    rows[(num - i % num) % numRows] += item\\n                else:\\n                    rows[i % num] += item\\n            return ''.join(rows)",
                "codeTag": "Java"
            },
            {
                "id": 2419775,
                "title": "python-c-java-simple-solution-beginner-level-solution-faster-than-100-memory-usage-less",
                "content": "*Please upvote to motivate me in my quest of documenting all leetcode solutions. HAPPY CODING:)\\nAny suggestions and improvements are always welcome.*\\n________________________________________________________________________________________________________________________\\n________________________________________________________________________________________________________________________\\n\\n**Q6. The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)**\\n    \\n\\t\\n1.First I looked at the problem and thought about how the printed pattern looked like it would be mapped out on a matrix. I wrote out the number of \"main\" columns and then the number of \"middle\" columns.\\n```\\nP           I         N\\nA      L    S     I   G\\nY    A      H    R\\nP           I\\n------------------------\\n4     2     4     2   2(*)\\n```\\nThe last line is 2 only because the word ends, but we can see that the pattern is 4-2-4-2-4-.... When drawing it out for numRows = 3, the pattern became\\n\\n```\\nP         A         H         N\\nA    P    L    S    I    I    G\\nY         I         R\\n---------------------------------\\n3    1    3    1    3    1    2(*)\\n```\\nAgain we can see the pattern is 3-1-3-1-3-...\\n\\nSo the pattern of \"main\" rows to \"mid\" rows is n, n-2, n, n-2, ...\\n\\nWhen I tried to build an algorithm for this pattern I got stuck. How would I make the index move up n, then down n-2 without confusing myself or missing edge cases.\\n\\n**CODE:**\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\u2705 **Java Code** :\\n**Runtime:**  2 ms, faster than 100.00% of Java online submissions for Zigzag Conversion.\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n    if(numRows==1) return s;\\n    int x = 2 * (numRows-1); \\n    int len = s.length();\\n    char[] c = new char[len];\\n    int k =0;\\n    for(int i=0; i < numRows; i++)\\n    {\\n        for(int j=i;j<len;j=j+x)\\n        {\\n            c[k++] = s.charAt(j);\\n            if(i>0 && i<numRows-1 && j+x-2*i < len)\\n            {\\n                   c[k++] = s.charAt(j+x-2*i); \\n            }\\n        }\\n    }\\n    return new String(c);\\n}\\n}\\n\\n```\\n**Runtime:**  2ms\\n**Memory Usage:**  42.4MB\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\n\\u2705 **Python  Code** :\\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        curr=(2*numRows)-2\\n        res=\"\"\\n        for i in range(numRows):\\n            j=0\\n            while i+j<len(s):   \\n                res+=s[j+i]\\n                sec=(j-i)+curr\\n                if i!=0 and i!=numRows-1 and sec<len(s):\\n                    res+=s[sec]\\n                j+=curr\\n        return res\\n```\\n**Runtime:**  125 ms\\n**Memory Usage:**  14.2 MB\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\u2705 **C++  Code** :\\n\\n```\\nlass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string res = \"\";\\n        if(numRows == 1) return s;\\n        for(int i = 0; i < numRows; i++){\\n            bool step = true;\\n            for(int j = i; j < s.length();){\\n                res += s[j];\\n                if (i == 0 || i == numRows - 1){\\n                    j += 2*(numRows - 1);\\n                    continue;\\n                }\\n                j += step ? 2*(numRows - i - 1) : 2 * i; \\n                step = !step;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n**Runtime:**  12ms\\n**Memory Usage:**  8.3 MB\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\nIf you like the solution, please upvote \\uD83D\\uDD3C\\nFor any questions, or discussions, comment below. \\uD83D\\uDC47\\uFE0F",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C"
                ],
                "code": "```\\nP           I         N\\nA      L    S     I   G\\nY    A      H    R\\nP           I\\n------------------------\\n4     2     4     2   2(*)\\n```\n```\\nP         A         H         N\\nA    P    L    S    I    I    G\\nY         I         R\\n---------------------------------\\n3    1    3    1    3    1    2(*)\\n```\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n    if(numRows==1) return s;\\n    int x = 2 * (numRows-1); \\n    int len = s.length();\\n    char[] c = new char[len];\\n    int k =0;\\n    for(int i=0; i < numRows; i++)\\n    {\\n        for(int j=i;j<len;j=j+x)\\n        {\\n            c[k++] = s.charAt(j);\\n            if(i>0 && i<numRows-1 && j+x-2*i < len)\\n            {\\n                   c[k++] = s.charAt(j+x-2*i); \\n            }\\n        }\\n    }\\n    return new String(c);\\n}\\n}\\n\\n```\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        curr=(2*numRows)-2\\n        res=\"\"\\n        for i in range(numRows):\\n            j=0\\n            while i+j<len(s):   \\n                res+=s[j+i]\\n                sec=(j-i)+curr\\n                if i!=0 and i!=numRows-1 and sec<len(s):\\n                    res+=s[sec]\\n                j+=curr\\n        return res\\n```\n```\\nlass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string res = \"\";\\n        if(numRows == 1) return s;\\n        for(int i = 0; i < numRows; i++){\\n            bool step = true;\\n            for(int j = i; j < s.length();){\\n                res += s[j];\\n                if (i == 0 || i == numRows - 1){\\n                    j += 2*(numRows - 1);\\n                    continue;\\n                }\\n                j += step ? 2*(numRows - i - 1) : 2 * i; \\n                step = !step;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3566,
                "title": "a-fast-javascript-implementation",
                "content": "``` javascript\\nvar convert = function(s, numRows) {\\n    var result = [];\\n    var step = 1, index = 0;\\n    for(var i = 0; i < s.length; i++){\\n        if(result[index] === undefined){//'undefined' will be put into string without this\\n            result[index] = '';\\n        }\\n        result[index] += s[i];\\n        if(index === 0){\\n            step = 1;\\n        }else if(index === numRows - 1){\\n            step = -1;\\n        }\\n        index += step;\\n    }\\n    return result.join('');\\n};",
                "solutionTags": [],
                "code": "``` javascript\\nvar convert = function(s, numRows) {\\n    var result = [];\\n    var step = 1, index = 0;\\n    for(var i = 0; i < s.length; i++){\\n        if(result[index] === undefined){//'undefined' will be put into string without this\\n            result[index] = '';\\n        }\\n        result[index] += s[i];\\n        if(index === 0){\\n            step = 1;\\n        }else if(index === numRows - 1){\\n            step = -1;\\n        }\\n        index += step;\\n    }\\n    return result.join('');\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 3134883,
                "title": "python3-68ms",
                "content": "\\n![image.png](https://assets.leetcode.com/users/images/7355fe80-b411-48ef-8793-ad7991645e93_1675406149.6565611.png)\\nPlease UPVOTE if it helps \\u2764\\uFE0F\\uD83D\\uDE0A\\nThank You and Happy To Help You!!\\n# Code\\n```\\nclass Solution:\\n    def convert(self, s: str, n: int) -> str:\\n        if(n==1):\\n            return s\\n        ans=[\"\" for i in range(n)]\\n        x=0\\n        bl=True\\n        for i in range(len(s)):\\n            if(bl and x==n):\\n                bl=False\\n                x-=1\\n            if(not bl and x==0):\\n                x+=1\\n                bl=True\\n            if(bl):\\n                ans[x]+=s[i]\\n                x+=1\\n            else:\\n                x-=1\\n                ans[x]+=s[i]\\n        s=\"\"\\n        for i in ans:\\n            s+=i\\n        return s\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, n: int) -> str:\\n        if(n==1):\\n            return s\\n        ans=[\"\" for i in range(n)]\\n        x=0\\n        bl=True\\n        for i in range(len(s)):\\n            if(bl and x==n):\\n                bl=False\\n                x-=1\\n            if(not bl and x==0):\\n                x+=1\\n                bl=True\\n            if(bl):\\n                ans[x]+=s[i]\\n                x+=1\\n            else:\\n                x-=1\\n                ans[x]+=s[i]\\n        s=\"\"\\n        for i in ans:\\n            s+=i\\n        return s\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1539220,
                "title": "java-tc-o-n-sc-o-n-optimized-row-by-row-solution",
                "content": "**Creating result string Row-by-Row**\\n```java\\n/**\\n * Visit Row by Row\\n *\\n * Time Complexity: O(2 * N) = O(N)\\n *\\n * Space Complexity: O(N)\\n *\\n * R = Number of rows. N = Length of input string\\n */\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (s == null || numRows <= 0) {\\n            throw new IllegalArgumentException(\"Input is invalid\");\\n        }\\n\\n        int len = s.length();\\n        if (numRows == 1 || len <= numRows) {\\n            return s;\\n        }\\n\\n        StringBuilder sb = new StringBuilder();\\n        int cycleLen = 2 * numRows - 2;\\n\\n        /**\\n         * First Row:   0,      2N-2,               4N-4,               ...\\n         * Last Row:    N-1,    2N-2+(N-1),         5N-5+(N-1),         ...\\n         * ith Row:     i,      2N-2-i, 2N-2+i,     4N-4-i, 4N-4+i,     ...\\n         */\\n\\n        for (int j = 0; j < numRows; j++) {\\n            for (int i = 0; i + j < len; i += cycleLen) {\\n                sb.append(s.charAt(i + j));\\n                if (j != 0 && j != numRows - 1 && i + cycleLen - j < len) {\\n                    sb.append(s.charAt(i + cycleLen - j));\\n                }\\n            }\\n        }\\n\\n        return sb.toString();\\n    }\\n}\\n```\\n\\n---\\n**Using string buffer for each row. Simulating ZigZag Traversal**\\n\\n```java\\n/**\\n * Using string buffer for each row. Simulating ZigZag Traversal\\n *\\n * Time Complexity: O(R + 3*N) = O(R+N)\\n *\\n * Space Complexity: O(R + N)\\n *\\n * R = Number of rows. N = Length of input string\\n */\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (s == null || numRows <= 0) {\\n            throw new IllegalArgumentException(\"Input is invalid\");\\n        }\\n\\n        int len = s.length();\\n        if (numRows == 1 || len <= numRows) {\\n            return s;\\n        }\\n\\n        StringBuilder[] sbs = new StringBuilder[numRows];\\n        for (int j = 0; j < numRows; j++) {\\n            sbs[j] = new StringBuilder();\\n        }\\n\\n        int i = 0;\\n        while (i < len) {\\n            for (int j = 0; j < numRows && i < len; j++) {\\n                sbs[j].append(s.charAt(i++));\\n            }\\n            for (int j = numRows - 2; j >= 1 & i < len; j--) {\\n                sbs[j].append(s.charAt(i++));\\n            }\\n        }\\n\\n        for (int j = 1; j < numRows; j++) {\\n            sbs[0].append(sbs[j]);\\n        }\\n\\n        return sbs[0].toString();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```java\\n/**\\n * Visit Row by Row\\n *\\n * Time Complexity: O(2 * N) = O(N)\\n *\\n * Space Complexity: O(N)\\n *\\n * R = Number of rows. N = Length of input string\\n */\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (s == null || numRows <= 0) {\\n            throw new IllegalArgumentException(\"Input is invalid\");\\n        }\\n\\n        int len = s.length();\\n        if (numRows == 1 || len <= numRows) {\\n            return s;\\n        }\\n\\n        StringBuilder sb = new StringBuilder();\\n        int cycleLen = 2 * numRows - 2;\\n\\n        /**\\n         * First Row:   0,      2N-2,               4N-4,               ...\\n         * Last Row:    N-1,    2N-2+(N-1),         5N-5+(N-1),         ...\\n         * ith Row:     i,      2N-2-i, 2N-2+i,     4N-4-i, 4N-4+i,     ...\\n         */\\n\\n        for (int j = 0; j < numRows; j++) {\\n            for (int i = 0; i + j < len; i += cycleLen) {\\n                sb.append(s.charAt(i + j));\\n                if (j != 0 && j != numRows - 1 && i + cycleLen - j < len) {\\n                    sb.append(s.charAt(i + cycleLen - j));\\n                }\\n            }\\n        }\\n\\n        return sb.toString();\\n    }\\n}\\n```\n```java\\n/**\\n * Using string buffer for each row. Simulating ZigZag Traversal\\n *\\n * Time Complexity: O(R + 3*N) = O(R+N)\\n *\\n * Space Complexity: O(R + N)\\n *\\n * R = Number of rows. N = Length of input string\\n */\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (s == null || numRows <= 0) {\\n            throw new IllegalArgumentException(\"Input is invalid\");\\n        }\\n\\n        int len = s.length();\\n        if (numRows == 1 || len <= numRows) {\\n            return s;\\n        }\\n\\n        StringBuilder[] sbs = new StringBuilder[numRows];\\n        for (int j = 0; j < numRows; j++) {\\n            sbs[j] = new StringBuilder();\\n        }\\n\\n        int i = 0;\\n        while (i < len) {\\n            for (int j = 0; j < numRows && i < len; j++) {\\n                sbs[j].append(s.charAt(i++));\\n            }\\n            for (int j = numRows - 2; j >= 1 & i < len; j--) {\\n                sbs[j].append(s.charAt(i++));\\n            }\\n        }\\n\\n        for (int j = 1; j < numRows; j++) {\\n            sbs[0].append(sbs[j]);\\n        }\\n\\n        return sbs[0].toString();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1328613,
                "title": "c-solution-time-o-n",
                "content": "**The example can be written as follow:**\\n\\n**1.P.......A........H.......N\\n2..A..P....L..S....I...I....G\\n3....Y.........I........R**\\n\\nIterate through ss from left to right, appending each character to the appropriate row. The appropriate row can be tracked using two variables: the current row and the current direction.\\n\\nThe current direction changes only when we moved up to the topmost row or moved down to the bottommost row.\\n\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int row) {\\n        if(row==1){\\n            return s;\\n        }\\n        vector<string>nums(row);\\n        bool down= false;\\n        int j=0;\\n        for(int i=0;i<s.size();i++){\\n            nums[j].push_back(s[i]);\\n            if(j==row-1){\\n                down=false;\\n            }\\n            else if(j==0){\\n                down=true;\\n            }\\n            if(down==true){\\n                j++;\\n            }\\n            else j--;\\n        }\\n    string ans=\"\";\\n    for(auto i:nums){\\n        ans+=i;\\n    }\\n        return ans;\\n}\\n};\\n```\\nIf you like the solution upvote it and encourage me.",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int row) {\\n        if(row==1){\\n            return s;\\n        }\\n        vector<string>nums(row);\\n        bool down= false;\\n        int j=0;\\n        for(int i=0;i<s.size();i++){\\n            nums[j].push_back(s[i]);\\n            if(j==row-1){\\n                down=false;\\n            }\\n            else if(j==0){\\n                down=true;\\n            }\\n            if(down==true){\\n                j++;\\n            }\\n            else j--;\\n        }\\n    string ans=\"\";\\n    for(auto i:nums){\\n        ans+=i;\\n    }\\n        return ans;\\n}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2557400,
                "title": "easy-solution-with-explanation-hand-written",
                "content": "**Explanation :**\\n* As you can see in this picture we have to convert given string into a ZigZag form with the given row.\\n* Starting index is always 0 so i have taken ```startIndex``` variable and initialize with zero.\\n* And Created  ```idx``` variable to get current index characher in ```ans``` string.\\n* As you can observe in the given row the next index is always comes at ```idx += row + (row - 2)``` , so i used this formula. when ```startIndex = 0 or startIndex = row - 1``` then we don\\'t need to take between character\\'s.\\n* and for when ```startIndex is between 1 and row-2``` we have to take between character\\'s.\\n* and you can observe there is a difference between middle character and next columns character is two and  it by two always by row wise. So i have taken ```count``` variable to count their difference.\\n* For the first time we have to always take columns characher an then middle character so for this condition i have used ```flag``` logic.\\n* if our curret index ie. ```idx``` is reached out off index then i just increased ```startIndex``` by 1 and ```idx = startIndex``` and also increase ```count``` variable by 2\\n\\n\\nI hope you understand my explanation.\\nIf any Doubts or Suggestions Put in Comments..\\n\\nPlease **UpVote**, if it helps a little to you **:)**\\n![image](https://assets.leetcode.com/users/images/ae428ffd-34ec-40b3-837a-b09c9aeb528a_1662804646.7966483.jpeg)\\n\\n**Solution :**\\n```\\n    def convert(self, s, row):\\n        n = len(s)\\n        if n <= row:   #this is base contions if row is greater than the length of string. so just return string\\n            return s\\n        ans, startIndex, idx, flag, count = \\'\\', 0, 0, 0, 2\\n        for i in range(n):\\n            if startIndex == 0 or startIndex == row-1:\\n                ans += s[idx]\\n                idx += row + (row - 2)\\n                if i == n-1: break\\n                if idx > n - 1 or idx <= 0:  #this another or condition is for when we have given two length string and row is 1 \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t#then for the second time that idx value goes to -ve that\\'s why it is written\\n                    startIndex += 1\\n                    idx = startIndex\\n            else:\\n                if flag == 0:\\n                    ans += s[idx]\\n                    flag = 1\\n                    idx += row + (row - 2) - count\\n                else:\\n                    ans += s[idx]\\n                    idx += count\\n                    flag = 0\\n                if idx > n-1 or idx <= 0:\\n                    startIndex += 1\\n                    idx, flag = startIndex, 0\\n                    count += 2\\n        return ans\\n```\\n**UpVote :)**",
                "solutionTags": [
                    "Python"
                ],
                "code": "```startIndex```\n```idx```\n```ans```\n```idx += row + (row - 2)```\n```startIndex = 0 or startIndex = row - 1```\n```startIndex is between 1 and row-2```\n```count```\n```flag```\n```idx```\n```startIndex```\n```idx = startIndex```\n```count```\n```\\n    def convert(self, s, row):\\n        n = len(s)\\n        if n <= row:   #this is base contions if row is greater than the length of string. so just return string\\n            return s\\n        ans, startIndex, idx, flag, count = \\'\\', 0, 0, 0, 2\\n        for i in range(n):\\n            if startIndex == 0 or startIndex == row-1:\\n                ans += s[idx]\\n                idx += row + (row - 2)\\n                if i == n-1: break\\n                if idx > n - 1 or idx <= 0:  #this another or condition is for when we have given two length string and row is 1 \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t#then for the second time that idx value goes to -ve that\\'s why it is written\\n                    startIndex += 1\\n                    idx = startIndex\\n            else:\\n                if flag == 0:\\n                    ans += s[idx]\\n                    flag = 1\\n                    idx += row + (row - 2) - count\\n                else:\\n                    ans += s[idx]\\n                    idx += count\\n                    flag = 0\\n                if idx > n-1 or idx <= 0:\\n                    startIndex += 1\\n                    idx, flag = startIndex, 0\\n                    count += 2\\n        return ans\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1492755,
                "title": "c-easy-to-understand-with-explanation-clean-code",
                "content": "**Algorithm:**\\n\\n1) Create a vector of n strings, initialise all strings with \"\".\\n\\n2) Initialize direction as +1 (\"down\") and row as 0. The \\n   direction indicates whether we need to move up or \\n   down in rows. \\n   \\n3) Traverse the input string, do following for every\\n   character.\\n   \\n   a) Push current character to string of current row.\\n   b) If row number is n-1, then change direction to -1 (\\'up\\')\\n   c) If row number is 0, then change direction to +1 (\\'down\\')\\n   d) Update row by adding direction to it.\\n   \\n4. Create a string to store the final answer, initialise it with \"\", \\n\\ttraverse the vector of strings and concatenate all the strings. \\n\\n5. Return this concatenated string.\\n\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        \\n        vector <string> temp(numRows, \"\");\\n        int row = 0, direction = 1;\\n        string ans = \"\";\\n        \\n        if(numRows == 1)\\n            return s;\\n        \\n        for(int i = 0; i < s.size(); i++)\\n        {\\n            temp[row] += s[i];\\n            \\n            if(row == numRows - 1)\\n                direction = -1;\\n            if(row == 0)\\n                direction = 1;\\n            \\n            row += direction;\\n            \\n        }     \\n        \\n        for(int i = 0; i < numRows; i++)\\n        {\\n            ans += temp[i];\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        \\n        vector <string> temp(numRows, \"\");\\n        int row = 0, direction = 1;\\n        string ans = \"\";\\n        \\n        if(numRows == 1)\\n            return s;\\n        \\n        for(int i = 0; i < s.size(); i++)\\n        {\\n            temp[row] += s[i];\\n            \\n            if(row == numRows - 1)\\n                direction = -1;\\n            if(row == 0)\\n                direction = 1;\\n            \\n            row += direction;\\n            \\n        }     \\n        \\n        for(int i = 0; i < numRows; i++)\\n        {\\n            ans += temp[i];\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 150628,
                "title": "11-line-easy-to-understand-c-solution-with-explanation",
                "content": "```C++\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows <= 1) return s;\\n        vector<string> db (numRows, \"\");\\n        for(int i = 0,row = 0,step = 1;i < s.size();i++){\\n            db[row] += s[i];\\n            if(row == 0) step = 1;\\n            if(row == numRows - 1) step = -1;\\n            row += step;\\n        }\\n        string ret;\\n        for(auto d:db) ret+=d;\\n        return ret;\\n    }\\n};\\n```\\nThe idea is taken from this [post](https://leetcode.com/problems/zigzag-conversion/discuss/3465/Share-simple-C++-solution).\\nWe re-construct the zigzag pattern into a string vector `db` by omitting all the spaces. For example,\\n```C++\\nP   A   H   N                                               db[0] PAHN\\nA P L S I I G   (omit all the spaces)---->                  db[1] APLSIIG\\nY   I   R                                                   db[2] YIG\\n```\\nThus, after converting the zigzag pattern into a simpler form, the only issue remainning is which row `s[i]` should lie in . We set `step` to do this.",
                "solutionTags": [],
                "code": "```C++\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows <= 1) return s;\\n        vector<string> db (numRows, \"\");\\n        for(int i = 0,row = 0,step = 1;i < s.size();i++){\\n            db[row] += s[i];\\n            if(row == 0) step = 1;\\n            if(row == numRows - 1) step = -1;\\n            row += step;\\n        }\\n        string ret;\\n        for(auto d:db) ret+=d;\\n        return ret;\\n    }\\n};\\n```\n```C++\\nP   A   H   N                                               db[0] PAHN\\nA P L S I I G   (omit all the spaces)---->                  db[1] APLSIIG\\nY   I   R                                                   db[2] YIG\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3869,
                "title": "12ms-c-solution-in-o-1-space-with-detailed-explanation",
                "content": "    class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            string result = \"\";\\n            \\n            // simple cases that could be inferred easily\\n            if (s.size() <= numRows || numRows == 1) return s;\\n            \\n            // colIndex represents the \"straight column\" index (PAY or ALI in the example)\\n            int colIndex = 0;\\n            \\n            // append result row by row\\n            for (int i = 0; i < numRows; i++) {\\n                \\n                // for each row, the first character is in the ith position of s;\\n                result += s[i];\\n                \\n                // 2*numRows - 2 is the increment amount between two straight columns\\n                // i is the current location in this column\\n                // so colIndex is now the position of character of the same position in the next \"straight column\"\\n                colIndex = i + 2*numRows - 2;\\n                \\n                // 2*numRows - 2 - i is the position of the character in the \"tilted column\" (P or S or I in the example)\\n                // use colIndex - 2 * i (same value) because we need to increment this value every time\\n                // while there is still character in the \"tilted column\":\\n                while (colIndex - 2 * i < s.size()) {\\n                    \\n                    // if it is the first or the last row, tilted column overlaps the straight column, ignore!\\n                    if (i != 0 && i != numRows - 1) {\\n                        // first: append the character in the tilted column\\n                        result += s[colIndex - 2 * i];\\n                    }\\n                    \\n                    // second: append the character in the straight column in the same row only if this position exists\\n                    if (colIndex < s.size()) {\\n                        result += s[colIndex];\\n                    }\\n                    \\n                    // increment colIndex to the next column\\n                    colIndex += 2*numRows - 2;\\n                }\\n            }\\n            return result;\\n        }\\n     };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            string result = \"\";\\n            \\n            // simple cases that could be inferred easily\\n            if (s.size() <= numRows || numRows == 1) return s;\\n            \\n            // colIndex represents the \"straight column\" index (PAY or ALI in the example)\\n            int colIndex = 0;\\n            \\n            // append result row by row\\n            for (int i = 0; i < numRows; i++) {\\n                \\n                // for each row, the first character is in the ith position of s;\\n                result += s[i];\\n                \\n                // 2*numRows - 2 is the increment amount between two straight columns\\n                // i is the current location in this column\\n                // so colIndex is now the position of character of the same position in the next \"straight column\"\\n                colIndex = i + 2*numRows - 2;\\n                \\n                // 2*numRows - 2 - i is the position of the character in the \"tilted column\" (P or S or I in the example)\\n                // use colIndex - 2 * i (same value) because we need to increment this value every time\\n                // while there is still character in the \"tilted column\":\\n                while (colIndex - 2 * i < s.size()) {\\n                    \\n                    // if it is the first or the last row, tilted column overlaps the straight column, ignore!\\n                    if (i != 0 && i != numRows - 1) {\\n                        // first: append the character in the tilted column\\n                        result += s[colIndex - 2 * i];\\n                    }",
                "codeTag": "Java"
            },
            {
                "id": 3769,
                "title": "o-n-clean-java-solution-with-explaination",
                "content": "The solution computes the next element in each row one by one. Take 4 rows for example. In the first row, the gap between each \"column\" element is (4-1)*2 = 6. In the second row, there is another element between each pair of \"column\" elements and it separate the gap to two parts. A variable offset is used to track the position of the separator.  \\n\\nIn the second row, initially offset equals gap - row_index*2 = 6-1*2 = 4. The first element in the second row is s[1], the second one is s[1+offset] = s[5]. Then offset becomes gap-offset = 6-4 = 2. So the third element is s[5+offset] = s[7]. In fact, the offset for the next element is always equal to the gap - offset of the previous element.\\n\\nUsing the method we could get the elements of each row. Be careful that in the first and the last row, there is no element between the \"column\" elements so we need to avoid inserting duplicate elements (when offset is 0).\\n\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        int gap = (numRows-1)<<1;\\n        StringBuilder result = new StringBuilder();\\n        for(int i=0; i<numRows; i++) {\\n            int current = i;\\n            int offset = gap - (i<<1);\\n            while(current<s.length()) {\\n                if( offset != 0 ) { \\n                    // avoid inserting duplicate elements\\n                    // in the first and the last row\\n                    result.append(s.charAt(current));\\n\\n                    current += offset;\\n                }\\n                offset = gap-offset;\\n            }\\n        }\\n        \\n        return result.toString();\\n    }",
                "solutionTags": [],
                "code": "The solution computes the next element in each row one by one. Take 4 rows for example. In the first row, the gap between each \"column\" element is (4-1)*2 = 6. In the second row, there is another element between each pair of \"column\" elements and it separate the gap to two parts. A variable offset is used to track the position of the separator.  \\n\\nIn the second row, initially offset equals gap - row_index*2 = 6-1*2 = 4. The first element in the second row is s[1], the second one is s[1+offset] = s[5]. Then offset becomes gap-offset = 6-4 = 2. So the third element is s[5+offset] = s[7]. In fact, the offset for the next element is always equal to the gap - offset of the previous element.\\n\\nUsing the method we could get the elements of each row. Be careful that in the first and the last row, there is no element between the \"column\" elements so we need to avoid inserting duplicate elements (when offset is 0).\\n\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        int gap = (numRows-1)<<1;\\n        StringBuilder result = new StringBuilder();\\n        for(int i=0; i<numRows; i++) {\\n            int current = i;\\n            int offset = gap - (i<<1);\\n            while(current<s.length()) {\\n                if( offset != 0 ) { \\n                    // avoid inserting duplicate elements\\n                    // in the first and the last row\\n                    result.append(s.charAt(current));\\n\\n                    current += offset;\\n                }\\n                offset = gap-offset;\\n            }\\n        }\\n        \\n        return result.toString();\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 354390,
                "title": "python3-mod-to-calculate-the-pattern-with-explanation",
                "content": "```\\ns = \"PAYPALISHIRING\"\\nnumRow = 3\\n        \"\"\"\\n        p (0)      a(4)      h(8)         n(12)\\n        a (1) p(3) l(5) s(7) i(9) i(11)  g(13)\\n        y (2)      i(6)      r(10)\\n        \"\"\"\\n# There is a pattern consists 4 elements as below:\\n\\t\\t\"\"\"\\n        p (0)     \\n        a (1)  p(3) \\n        y (2)     \\n        \"\"\"\\n# The ith element can be mapping into this pattern by i%pattern_length:\\nThe first line: 0 % 4 = 4 % 4 = 8 % 4 = 12 % 4 =0\\n\"\"\"\\n p (0)      a(4)      h(8)         n(12)\\n\"\"\"\\nThe second line: there is 2 type pattern:\\na: 1 % 4 = 5 % 4 = 9 % 4 = 13 % 4 = 1\\nb: 3 % 4 = 7 % 4 = 11 % 4 = 3\\nSo here we need an extra mapping to deal with these 2 situations.\\n1 = 4 - 3 is key to combine these two situation into one.\\n d={i:i if i<numRows else (period-i) for i in range(period)}\\n\"\"\"\\na (1) p(3) l(5) s(7) i(9) i(11)  g(13)\\n\"\"\"\\nThe third line:\\n2 % 4 = 6 % 4 = 10  % 4 = 2\\n\"\"\"\\n y (2)      i(6)      r(10)\\n\"\"\"\\n```\\n\\n```\\nPeriod 4\\nd =  {0: 0, 1: 1, 2: 2, 3: 1}\\ni =  0   i%period =  0\\nlines: [\\'P\\', \\'\\', \\'\\']\\ni =  1   i%period =  1\\nlines: [\\'P\\', \\'A\\', \\'\\']\\ni =  2   i%period =  2\\nlines: [\\'P\\', \\'A\\', \\'Y\\']\\ni =  3   i%period =  3\\nlines: [\\'P\\', \\'AP\\', \\'Y\\']\\ni =  4   i%period =  0\\nlines: [\\'PA\\', \\'AP\\', \\'Y\\']\\ni =  5   i%period =  1\\nlines: [\\'PA\\', \\'APL\\', \\'Y\\']\\ni =  6   i%period =  2\\nlines: [\\'PA\\', \\'APL\\', \\'YI\\']\\ni =  7   i%period =  3\\nlines: [\\'PA\\', \\'APLS\\', \\'YI\\']\\ni =  8   i%period =  0\\nlines: [\\'PAH\\', \\'APLS\\', \\'YI\\']\\ni =  9   i%period =  1\\nlines: [\\'PAH\\', \\'APLSI\\', \\'YI\\']\\ni =  10   i%period =  2\\nlines: [\\'PAH\\', \\'APLSI\\', \\'YIR\\']\\ni =  11   i%period =  3\\nlines: [\\'PAH\\', \\'APLSII\\', \\'YIR\\']\\ni =  12   i%period =  0\\nlines: [\\'PAHN\\', \\'APLSII\\', \\'YIR\\']\\ni =  13   i%period =  1\\nlines: [\\'PAHN\\', \\'APLSIIG\\', \\'YIR\\']\\n```\\n\\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        \"\"\"\\n        p (0)      a(4)      h(9)         n(13)\\n        a (1) p(3) l(6) s(8) i(10) i(12)  g(14)\\n        y (2)      i(7)      r(11)\\n        \"\"\"\\n        if numRows==1:return s\\n        period= 2*(numRows -1)\\n        d={i:i if i<numRows else (period-i) for i in range(period)}\\n        lines=[\"\" for i in range(numRows)]\\n        for i in range(len(s)):\\n            lines[d[i%period]] +=s[i]\\n        return \"\".join(lines)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ns = \"PAYPALISHIRING\"\\nnumRow = 3\\n        \"\"\"\\n        p (0)      a(4)      h(8)         n(12)\\n        a (1) p(3) l(5) s(7) i(9) i(11)  g(13)\\n        y (2)      i(6)      r(10)\\n        \"\"\"\\n# There is a pattern consists 4 elements as below:\\n\\t\\t\"\"\"\\n        p (0)     \\n        a (1)  p(3) \\n        y (2)     \\n        \"\"\"\\n# The ith element can be mapping into this pattern by i%pattern_length:\\nThe first line: 0 % 4 = 4 % 4 = 8 % 4 = 12 % 4 =0\\n\"\"\"\\n p (0)      a(4)      h(8)         n(12)\\n\"\"\"\\nThe second line: there is 2 type pattern:\\na: 1 % 4 = 5 % 4 = 9 % 4 = 13 % 4 = 1\\nb: 3 % 4 = 7 % 4 = 11 % 4 = 3\\nSo here we need an extra mapping to deal with these 2 situations.\\n1 = 4 - 3 is key to combine these two situation into one.\\n d={i:i if i<numRows else (period-i) for i in range(period)}\\n\"\"\"\\na (1) p(3) l(5) s(7) i(9) i(11)  g(13)\\n\"\"\"\\nThe third line:\\n2 % 4 = 6 % 4 = 10  % 4 = 2\\n\"\"\"\\n y (2)      i(6)      r(10)\\n\"\"\"\\n```\n```\\nPeriod 4\\nd =  {0: 0, 1: 1, 2: 2, 3: 1}\\ni =  0   i%period =  0\\nlines: [\\'P\\', \\'\\', \\'\\']\\ni =  1   i%period =  1\\nlines: [\\'P\\', \\'A\\', \\'\\']\\ni =  2   i%period =  2\\nlines: [\\'P\\', \\'A\\', \\'Y\\']\\ni =  3   i%period =  3\\nlines: [\\'P\\', \\'AP\\', \\'Y\\']\\ni =  4   i%period =  0\\nlines: [\\'PA\\', \\'AP\\', \\'Y\\']\\ni =  5   i%period =  1\\nlines: [\\'PA\\', \\'APL\\', \\'Y\\']\\ni =  6   i%period =  2\\nlines: [\\'PA\\', \\'APL\\', \\'YI\\']\\ni =  7   i%period =  3\\nlines: [\\'PA\\', \\'APLS\\', \\'YI\\']\\ni =  8   i%period =  0\\nlines: [\\'PAH\\', \\'APLS\\', \\'YI\\']\\ni =  9   i%period =  1\\nlines: [\\'PAH\\', \\'APLSI\\', \\'YI\\']\\ni =  10   i%period =  2\\nlines: [\\'PAH\\', \\'APLSI\\', \\'YIR\\']\\ni =  11   i%period =  3\\nlines: [\\'PAH\\', \\'APLSII\\', \\'YIR\\']\\ni =  12   i%period =  0\\nlines: [\\'PAHN\\', \\'APLSII\\', \\'YIR\\']\\ni =  13   i%period =  1\\nlines: [\\'PAHN\\', \\'APLSIIG\\', \\'YIR\\']\\n```\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        \"\"\"\\n        p (0)      a(4)      h(9)         n(13)\\n        a (1) p(3) l(6) s(8) i(10) i(12)  g(14)\\n        y (2)      i(7)      r(11)\\n        \"\"\"\\n        if numRows==1:return s\\n        period= 2*(numRows -1)\\n        d={i:i if i<numRows else (period-i) for i in range(period)}\\n        lines=[\"\" for i in range(numRows)]\\n        for i in range(len(s)):\\n            lines[d[i%period]] +=s[i]\\n        return \"\".join(lines)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3544,
                "title": "my-ez-understanding-c-solution",
                "content": "    string convert(string s, int numRows) \\n    {\\n        if(numRows==1)return s;\\n        string t;\\n        vector<string> vec(numRows,\"\");\\n        int i=0,j=0;\\n        while(i<s.length())\\n        {\\n            while(j<numRows-1&&i<s.length())\\n            {\\n                vec[j++] += s[i++];\\n            }\\n            while(j>0&&i<s.length())\\n            {\\n                vec[j--] += s[i++];\\n            }\\n        }\\n        for(auto i=vec.begin();i!=vec.end();i++)\\n        {\\n            t += *i;\\n        }\\n        return t;\\n    }",
                "solutionTags": [],
                "code": "    string convert(string s, int numRows) \\n    {\\n        if(numRows==1)return s;\\n        string t;\\n        vector<string> vec(numRows,\"\");\\n        int i=0,j=0;\\n        while(i<s.length())\\n        {\\n            while(j<numRows-1&&i<s.length())\\n            {\\n                vec[j++] += s[i++];\\n            }\\n            while(j>0&&i<s.length())\\n            {\\n                vec[j--] += s[i++];\\n            }\\n        }\\n        for(auto i=vec.begin();i!=vec.end();i++)\\n        {\\n            t += *i;\\n        }\\n        return t;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3134436,
                "title": "c-easy-solution-no-extra-space-approach-heavily-commented",
                "content": "## **\\u2705\\u2705C++ || No Extra Space Solution || \\uD83D\\uDCAF\\uD83D\\uDCAFGCD Approach || Heavily Commented**\\n# **Please Upvote as it really motivates me**\\n<iframe src=\"https://leetcode.com/playground/BynVKvLt/shared\" frameBorder=\"0\" width=\"800\" height=\"660\"></iframe>\\n\\n\\n![image](https://assets.leetcode.com/users/images/7a02f26e-85ff-49b8-a932-503cce48097c_1674184823.1043508.png)\\n\\n\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "## **\\u2705\\u2705C++ || No Extra Space Solution || \\uD83D\\uDCAF\\uD83D\\uDCAFGCD Approach || Heavily Commented**\\n# **Please Upvote as it really motivates me**\\n<iframe src=\"https://leetcode.com/playground/BynVKvLt/shared\" frameBorder=\"0\" width=\"800\" height=\"660\"></iframe>\\n\\n\\n![image](https://assets.leetcode.com/users/images/7a02f26e-85ff-49b8-a932-503cce48097c_1674184823.1043508.png)\\n\\n\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 473034,
                "title": "analytical-js-solution-peaks-at-68ms-99-85-and-38mb-94-4",
                "content": "Looking at the case of input\\n**String: \"PAYPALISHIRING\"**\\n**numRows: 4**\\n```\\n// P     I    N\\n// A   L S  I G\\n// Y A   H R\\n// P     I\\n```\\nObservation:\\n- Looking at just the first group (\"PIN\"), the difference in values between the letter index is 6.\\n- Looking at the second group (\"ALSIG\"), however, the difference is a pattern of 4, then 2 (a total of 6)\\n- The third (\"YAHR\") is the opposite pattern of 2, then 4 (also a total of 6)\\n- The last group (\"PI\") is again just a difference of 6 like the first group.\\n\\nGeneralizing these values, we get a pair of \\'differences\\'\\nGroup 1: [6, 0]\\nGroup 2: [4, 2]\\nGroup 3: [2, 4]\\nGroup 4: [0, 6]\\n\\nMy approach then is to iterate through **s** (\"PAYPALISHIRING\") *numRows* (4) times, capturing each letter according to the pattern of the given group.\\n```\\nGroup 1:\\n1     1     1\\nPAYPALISHIRING\\n// result: \"PIN\"\\n\\nGroup 2:\\n 2   2 2   2 2\\nPAYPALISHIRING\\n// result: \"PINALSIG\"\\n\\nGroup 3:\\n  3 3   3 3\\nPAYPALISHIRING\\n// result: \"PINALSIGYAHR\"\\nGroup 4:\\n   4     4\\nPAYPALISHIRING\\n// result: \"PINALSIGYAHRPI\"\\n```\\n\\nMany have already noted that the numRows and the frequency period have the relationship of:\\nperiod = (numRows * 2) - 2\\n\\nAnother note is that the difference pairs are diametrically opposed and **change in value by 2** as the pairs progress.  So for the case of input\\n**String: \"PAYPALISHIRING\"**\\n**numRows: 5**\\n```\\n// P       H\\n// A     S I\\n// Y   I   R\\n// P L     I G\\n// A       N\\n```\\nPeriod = (numRows * 2) - 2 => (5 * 2) - 2 => 10 - 2 => 8\\nThe difference pairs would look like:\\nGroup 1: [8, 0]\\nGroup 2: [6, 2]\\nGroup 3: [4, 4]\\nGroup 4: [2, 6]\\nGroup 5: [0, 8]\\n\\nIn the cases of the **first** and **last** groups, a letter should not be added to the result if they are the points in the string that **zig** or **zag**, i.e. don\\'t add a letter to the result string if a difference is value 0 such as [8, 0] or [0, 8].\\n\\nCode Implementation:\\n```\\n// \\nvar convert = function(s, numRows) {\\n  /* base case since 1 * 2 - 2 = 0 */\\n  if (numRows === 1) return s\\n  \\n  let result = \"\"\\n  let period = numRows * 2 - 2\\n  let diff1 = period, diff2 = 0\\n\\n  for (let i = 0; i < numRows; i++) {\\n\\t/* every group begins at the ith letter of \\'s\\' */\\n    let currStrIdx = i\\n\\t\\n\\t/* Used a flag to signify which of the diff pair should increment the index (defaulted to first) */\\n    let useFirst = true\\n\\t\\n\\t/* handles each group */\\n\\twhile (currStrIdx < s.length) {\\n\\t\\n\\t  /* If diff1 is 0, stay as diff 2, or if diff2 is 0, stay as diff1, otherwise no change */\\n\\t  useFirst = diff2 === 0 ? true : diff1 === 0 ? false : useFirst\\n\\t  \\n\\t  /* add current letter to result string */\\n      result += s[currStrIdx]\\n\\t  \\n\\t  /* increment the index to the next position in \\'s\\' based on diff pair pattern */\\n      useFirst ? currStrIdx += diff1 : currStrIdx += diff2\\n\\t  \\n\\t  /* switch between first or second of diff pairs */\\n      useFirst = !useFirst\\n    }\\n    \\n\\t/* after each pass, decrement diff1 by 2 and increment diff2 by 2 */\\n    diff1 -= 2\\n    diff2 += 2\\n  }\\n  \\n  return result\\n}\\n```\\n\\nTime Complexity: O(n)\\nSince the function iterates through each letter of the given string only once (albeit in different groups), it makes a single pass and is linear to size of the input.\\n\\nSpace Complexity: O(n)\\nSince the Result string ultimately is the same size as the input, the space used grows with the size of the input linearly.\\n\\nThanks for reading.",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n// P     I    N\\n// A   L S  I G\\n// Y A   H R\\n// P     I\\n```\n```\\nGroup 1:\\n1     1     1\\nPAYPALISHIRING\\n// result: \"PIN\"\\n\\nGroup 2:\\n 2   2 2   2 2\\nPAYPALISHIRING\\n// result: \"PINALSIG\"\\n\\nGroup 3:\\n  3 3   3 3\\nPAYPALISHIRING\\n// result: \"PINALSIGYAHR\"\\nGroup 4:\\n   4     4\\nPAYPALISHIRING\\n// result: \"PINALSIGYAHRPI\"\\n```\n```\\n// P       H\\n// A     S I\\n// Y   I   R\\n// P L     I G\\n// A       N\\n```\n```\\n// \\nvar convert = function(s, numRows) {\\n  /* base case since 1 * 2 - 2 = 0 */\\n  if (numRows === 1) return s\\n  \\n  let result = \"\"\\n  let period = numRows * 2 - 2\\n  let diff1 = period, diff2 = 0\\n\\n  for (let i = 0; i < numRows; i++) {\\n\\t/* every group begins at the ith letter of \\'s\\' */\\n    let currStrIdx = i\\n\\t\\n\\t/* Used a flag to signify which of the diff pair should increment the index (defaulted to first) */\\n    let useFirst = true\\n\\t\\n\\t/* handles each group */\\n\\twhile (currStrIdx < s.length) {\\n\\t\\n\\t  /* If diff1 is 0, stay as diff 2, or if diff2 is 0, stay as diff1, otherwise no change */\\n\\t  useFirst = diff2 === 0 ? true : diff1 === 0 ? false : useFirst\\n\\t  \\n\\t  /* add current letter to result string */\\n      result += s[currStrIdx]\\n\\t  \\n\\t  /* increment the index to the next position in \\'s\\' based on diff pair pattern */\\n      useFirst ? currStrIdx += diff1 : currStrIdx += diff2\\n\\t  \\n\\t  /* switch between first or second of diff pairs */\\n      useFirst = !useFirst\\n    }\\n    \\n\\t/* after each pass, decrement diff1 by 2 and increment diff2 by 2 */\\n    diff1 -= 2\\n    diff2 += 2\\n  }\\n  \\n  return result\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3134579,
                "title": "c-beats-99-easy-understanding-with-explanation",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- calculate how many increments you have to do to get to the next row element \\n- after calculating we found that no of jumps for rows other than the top and bottom rows is diffrent \\n- So use the diffrent formula for middle rows \\n- Rest is easy just keep check if the incements are in range\\n\\n# :) up-Vote if it Helps\\n# Complexity\\n- Time complexity:  O(n^2)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1) return s;\\n        string ans = \"\";\\n        for (int i = 0; i < numRows; i++) {\\n            int jumps = 2 * (numRows - 1);  //no of jumps to do for reaching the next element of row\\n            for (int j = i; j < s.length(); j += jumps) {   // increment j always by jumps\\n                ans += s[j];\\n                int midJumps = j + jumps - 2 * i;   // jumps for middle rows \\n                if (i > 0 && i < numRows - 1 && midJumps < s.length())  // check if middle jumps are in range\\n                    ans += s[midJumps];\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1) return s;\\n        string ans = \"\";\\n        for (int i = 0; i < numRows; i++) {\\n            int jumps = 2 * (numRows - 1);  //no of jumps to do for reaching the next element of row\\n            for (int j = i; j < s.length(); j += jumps) {   // increment j always by jumps\\n                ans += s[j];\\n                int midJumps = j + jumps - 2 * i;   // jumps for middle rows \\n                if (i > 0 && i < numRows - 1 && midJumps < s.length())  // check if middle jumps are in range\\n                    ans += s[midJumps];\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2765121,
                "title": "python-zigzag",
                "content": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        curr=(2*numRows)-2\\n        res=\"\"\\n        for i in range(numRows):\\n            j=0\\n            while i+j<len(s):   \\n                res+=s[j+i]\\n                sec=(j-i)+curr\\n                if i!=0 and i!=numRows-1 and sec<len(s):\\n                    res+=s[sec]\\n                j+=curr\\n        return res\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        curr=(2*numRows)-2\\n        res=\"\"\\n        for i in range(numRows):\\n            j=0\\n            while i+j<len(s):   \\n                res+=s[j+i]\\n                sec=(j-i)+curr\\n                if i!=0 and i!=numRows-1 and sec<len(s):\\n                    res+=s[sec]\\n                j+=curr\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3266353,
                "title": "runtime-beats-95-70-memory-beats-92-43-explained-js-solution",
                "content": "# Intuition\\nRepeating patterns are mostly related to modulo operation.\\n\\n# Approach\\nLet\\'s work on the string \"representation\" using 4 rows.\\n\\n```\\nR        E        O   \\nE     S  N     I  N\\nP  E     T  T \\nR        A\\n```\\n\\nLet\\'s say we have *n = 4* rows.\\n\\n- The first row includes the characters R, E and O which have the indexes 0, 6 and 12 respectively. \\n- The second row includes the characters E, S, N, I and N which have the indexes 1, 5, 7, 11 and 13 respectively.\\n- The third row includes the characters P, E, T and T which have the indexes 2, 4, 8 and 12 respectively.\\n- Finally, the last row includes the characters R and A which have the indexes 3 and 9 respectively.\\n\\nAfter looking at the first row, it can be seen that the reminder is 0 when we divide each number by 6. This means that, we can divide the string into pieces of 6 and each piece will have a common pattern.\\n\\n\\n---\\n\\n\\n\\n```\\n// Piece 1\\n\\nR           \\nE     S  \\nP  E      \\nR       \\n```\\n```\\n// Piece 2\\n\\nE           \\nN     I  \\nT  T \\nA  \\n```\\n\\n```\\n// Piece 3\\n\\nO\\nN\\n\\n \\n```\\n\\n\\n---\\n\\n\\n\\nNow, let\\'s work on the first piece only.\\n\\n```\\n// Piece 1\\n\\nR           \\nE     S  \\nP  E      \\nR       \\n```\\n\\n- Indexes of the first row: [0] -> 0 % 6 = 0\\n- Indexes of the second row: [1,5] -> 1 % 6 = 1, 5 % 6 = 5\\n- Indexes of the third row: [2,4] -> 2 % 6 = 2, 4 % 6 = 4\\n- Indexes of the last row: [3] -> 3 % 6 = 3\\n\\n\\n---\\n\\n\\n\\n# **The final rule** \\n\\nLet *x* be the index of a character at row of index *y*. \\nLet *z* be the length of the repeating piece. \\n\\nFor all x, x % z is either y or (z-y).\\nWhich also means y is either x % z or (z - (x % y)).\\n\\n---\\n\\n# Validation\\n\\nNow, let\\'s look at the big picture again where z = 6.\\n\\n-- FIRST ROW --\\n\\nz = 6\\ny = 0\\nCharacter indexes: [0,6,12]\\n\\nfor x = 0, 0 % 6 = 0 where y = 0\\nfor x = 6, 6 % 6 = 0 where y = 0\\nfor x = 12, 12 % 6 = 0 where y = 0\\n\\n\\n-- SECOND ROW --\\n\\nz = 6\\ny = 1\\nCharacter indexes: [1,5,7,11,13]\\n\\nfor x = 1, 1 % 6 = 1 where y = 1\\nfor x = 5, 5 % 6 = 5 where (z - y) = 5\\nfor x = 7, 7 % 6 = 1 where y = 1\\nfor x = 11, 11 % 6 = 5 where (z - y) = 5\\nfor x = 13, 13 % 6 = 1 where y = 1\\n\\n.\\n.\\n.\\n\\n\\n# Complexity\\n- Time complexity:\\nRuntime 72 ms **Beats 95.70%** \\n\\n- Space complexity:\\nMemory 45.3 MB **Beats 92.43%**\\n\\n# Code\\n```\\n/**\\n * @param {string} s\\n * @param {number} numRows\\n * @return {string}\\n */\\nvar convert = function(s, numRows) {\\n    if(numRows < 2){\\n        return s;\\n    }\\n\\n    const divisor = (numRows - 1) * 2;\\n    const rows = Array(numRows).fill(\"\");\\n\\n    for(let dividend = 0; dividend < s.length; dividend++){\\n        const mod =  dividend % divisor;\\n        const rowIndex = mod < numRows ? mod : divisor - mod;\\n\\n        rows[rowIndex] += s[dividend];\\n    }\\n\\n    return rows.join(\\'\\');\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nR        E        O   \\nE     S  N     I  N\\nP  E     T  T \\nR        A\\n```\n```\\n// Piece 1\\n\\nR           \\nE     S  \\nP  E      \\nR       \\n```\n```\\n// Piece 2\\n\\nE           \\nN     I  \\nT  T \\nA  \\n```\n```\\n// Piece 3\\n\\nO\\nN\\n\\n \\n```\n```\\n// Piece 1\\n\\nR           \\nE     S  \\nP  E      \\nR       \\n```\n```\\n/**\\n * @param {string} s\\n * @param {number} numRows\\n * @return {string}\\n */\\nvar convert = function(s, numRows) {\\n    if(numRows < 2){\\n        return s;\\n    }\\n\\n    const divisor = (numRows - 1) * 2;\\n    const rows = Array(numRows).fill(\"\");\\n\\n    for(let dividend = 0; dividend < s.length; dividend++){\\n        const mod =  dividend % divisor;\\n        const rowIndex = mod < numRows ? mod : divisor - mod;\\n\\n        rows[rowIndex] += s[dividend];\\n    }\\n\\n    return rows.join(\\'\\');\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3133851,
                "title": "94-javascript-fast-very-very-easy-to-understand-solution-with-video-explanation-en-kr",
                "content": "If you like my video and explanation, Subscribe please!!! Thank you!!\\n\\nEnglish video!\\n\\nhttps://youtu.be/9vEjTg1d6NE\\n\\nKorean video!\\n\\nhttps://youtu.be/VSRxC8MPc20\\n\\n# Code\\n```\\n/**\\n * @param {string} s\\n * @param {number} numRows\\n * @return {string}\\n */\\nvar convert = function(s, numRows) {\\n    let res = [];\\n    let count = 0;\\n    let up = true;\\n    for(let i =0; i<s.length;i++){\\n\\n        if(!res[count]) res[count] = []\\n        res[count].push(s[i])\\n\\n        count = up ? count+1 : count-1\\n        \\n        if(count+1 == numRows) up = false;\\n        else if(count == 0) up = true;\\n    }\\n    let result = \\'\\'\\n    for(let i of res){\\n        result += i.join(\\'\\')\\n    }\\n    return result;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} s\\n * @param {number} numRows\\n * @return {string}\\n */\\nvar convert = function(s, numRows) {\\n    let res = [];\\n    let count = 0;\\n    let up = true;\\n    for(let i =0; i<s.length;i++){\\n\\n        if(!res[count]) res[count] = []\\n        res[count].push(s[i])\\n\\n        count = up ? count+1 : count-1\\n        \\n        if(count+1 == numRows) up = false;\\n        else if(count == 0) up = true;\\n    }\\n    let result = \\'\\'\\n    for(let i of res){\\n        result += i.join(\\'\\')\\n    }\\n    return result;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2981941,
                "title": "simple-o-n-solution-in-typescript-98-89-99-33",
                "content": "# Intuition\\nThe result is a merge of k strings, where k = numRows.\\nWe are making those strings by oscilating from the top to the bottom and extending them with consecutive string element.\\n\\n# Example\\nnumRows = 3, string = PAYPALISHIRING\\n\\nStep1: Create an array of size 3 with empty strings. `rows = [\\'\\', \\'\\', \\'\\'];`The functon result will be the merge of those array items.\\n\\nStep2: Iterate and extend those strings in oscilating order with consecutive string element.\\n\\nWe will be extending strings using indexes: `0,1,2,1,0,1,2,1,0,1...` \\n\\n```\\n1) rows = [\\'P\\', \\'\\', \\'\\'];\\n2) rows = [\\'P\\', \\'A\\', \\'\\'];\\n3) rows = [\\'P\\', \\'A\\', \\'Y\\'];\\n4) rows = [\\'P\\', \\'AP\\', \\'Y\\'];\\n5) rows = [\\'PA\\', \\'AP\\', \\'Y\\'];\\n6) rows = [\\'PA\\', \\'APL\\', \\'Y\\'];\\n7) rows = [\\'PA\\', \\'APL\\', \\'YI\\'];\\n8) rows = [\\'PA\\', \\'APLS\\', \\'YI\\'];\\n9) rows = [\\'PAH\\', \\'APLS\\', \\'YI\\'];\\n10) rows = [\\'PAH\\', \\'APLSI\\', \\'YI\\'];\\n11) rows = [\\'PAH\\', \\'APLSI\\', \\'YIR\\'];\\n12) rows = [\\'PAH\\', \\'APLSII\\', \\'YIR\\'];\\n13) rows = [\\'PAHN\\', \\'APLSII\\', \\'YIR\\'];\\n14) rows = [\\'PAHN\\', \\'APLSIIG\\', \\'YIR\\'];\\n```\\n\\nStep 3: Return joined array elements - `PAHNAPLSIIGYIR`\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(n)\\n\\n# Code\\n```\\nfunction convert(s: string, numRows: number): string {\\n    if (numRows === 1) return s;\\n\\n    const rows = new Array(numRows).fill(\\'\\');\\n\\n    let currRow = -1;\\n    let ascending = true;\\n\\n    for (let i = 0; i < s.length; i++) {\\n        currRow += ascending ? 1 : -1;\\n        rows[currRow] += s[i];\\n\\n        if (currRow === numRows - 1) {\\n            ascending = false;\\n        } else if (currRow === 0) {\\n            ascending = true;\\n        }\\n    }\\n\\n    return rows.join(\\'\\');\\n};\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\n1) rows = [\\'P\\', \\'\\', \\'\\'];\\n2) rows = [\\'P\\', \\'A\\', \\'\\'];\\n3) rows = [\\'P\\', \\'A\\', \\'Y\\'];\\n4) rows = [\\'P\\', \\'AP\\', \\'Y\\'];\\n5) rows = [\\'PA\\', \\'AP\\', \\'Y\\'];\\n6) rows = [\\'PA\\', \\'APL\\', \\'Y\\'];\\n7) rows = [\\'PA\\', \\'APL\\', \\'YI\\'];\\n8) rows = [\\'PA\\', \\'APLS\\', \\'YI\\'];\\n9) rows = [\\'PAH\\', \\'APLS\\', \\'YI\\'];\\n10) rows = [\\'PAH\\', \\'APLSI\\', \\'YI\\'];\\n11) rows = [\\'PAH\\', \\'APLSI\\', \\'YIR\\'];\\n12) rows = [\\'PAH\\', \\'APLSII\\', \\'YIR\\'];\\n13) rows = [\\'PAHN\\', \\'APLSII\\', \\'YIR\\'];\\n14) rows = [\\'PAHN\\', \\'APLSIIG\\', \\'YIR\\'];\\n```\n```\\nfunction convert(s: string, numRows: number): string {\\n    if (numRows === 1) return s;\\n\\n    const rows = new Array(numRows).fill(\\'\\');\\n\\n    let currRow = -1;\\n    let ascending = true;\\n\\n    for (let i = 0; i < s.length; i++) {\\n        currRow += ascending ? 1 : -1;\\n        rows[currRow] += s[i];\\n\\n        if (currRow === numRows - 1) {\\n            ascending = false;\\n        } else if (currRow === 0) {\\n            ascending = true;\\n        }\\n    }\\n\\n    return rows.join(\\'\\');\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1734210,
                "title": "c-solution-with-explanation",
                "content": "> **If you\\u2019re interested in coding you can join my Discord Server, link in the comment section. Also if you find any mistake please let me know. Thank you!\\u2764\\uFE0F**\\n> \\n\\n---\\n\\n## Explanation:\\n\\n### Solution 01\\n\\n- If numRow=1 then we\\u2019ll return the original string.\\n- Else we\\u2019ll count a step variable for the first and last row. These 2 will only have one direction.\\n    \\n    ```\\n    P   | A   | H   | N\\n    A P | L S | I I | G\\n    Y   | I   | R   |\\n    ```\\n    \\n- For `s[0]=P` & `s[2]=Y` , first & last row elements we need to iterate `2 * numRows - 2` times to get the next element of this row.\\n- Ans for any other row we have to go `down \\u2192 top` & `top \\u2192 down`, s[1] to s[3] & s[3] to s[5].\\n- For this, we are taking a bool variable flag to access if it\\u2019s a top iteration or down.\\n- **Time complexity:** O(n^2).\\n\\n---\\n\\n## Code:\\n\\n```cpp\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans;\\n        if (numRows == 1) return s;\\n        \\n        int step = 2 * numRows - 2;\\n        \\n        for(int i=0; i<numRows; i++){\\n            if(i==0 || i==numRows-1){\\n                for(int j=i; j<s.size(); j+=step){\\n                     ans.push_back(s[j]);\\n                }\\n            }\\n            \\n            else{\\n                int j = i;\\n                bool flag = true;\\n                int step1 = 2 * (numRows - 1 - i);\\n                int step2 = step - step1;\\n\\n                while (j < s.length()) {\\n                    ans.push_back(s[j]);\\n                    if (flag)\\n                        j = j + step1;\\n                    else\\n                        j = j + step2;\\n                    flag = !flag;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n---\\n\\n> **Please upvote this solution**\\n>",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\n    P   | A   | H   | N\\n    A P | L S | I I | G\\n    Y   | I   | R   |\\n    ```\n```cpp\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans;\\n        if (numRows == 1) return s;\\n        \\n        int step = 2 * numRows - 2;\\n        \\n        for(int i=0; i<numRows; i++){\\n            if(i==0 || i==numRows-1){\\n                for(int j=i; j<s.size(); j+=step){\\n                     ans.push_back(s[j]);\\n                }\\n            }\\n            \\n            else{\\n                int j = i;\\n                bool flag = true;\\n                int step1 = 2 * (numRows - 1 - i);\\n                int step2 = step - step1;\\n\\n                while (j < s.length()) {\\n                    ans.push_back(s[j]);\\n                    if (flag)\\n                        j = j + step1;\\n                    else\\n                        j = j + step2;\\n                    flag = !flag;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3667,
                "title": "better-than-97-88-o-n-java-solution-easy-to-understand",
                "content": "    public String convert(String s, int numRows) {\\n        if(numRows==1) return s;\\n        int x = 2 * (numRows-1); // distance between pipes |/|/|...\\n        int len = s.length();\\n        char[] c = new char[len];\\n        int k =0;\\n        for(int i=0; i < numRows; i++)\\n        {\\n            for(int j=i;j<len;j=j+x)\\n            {\\n                c[k++] = s.charAt(j);\\n                if(i>0 && i<numRows-1 && j+x-2*i < len)\\n                {\\n                       c[k++] = s.charAt(j+x-2*i); // extra character between pipes\\n                }\\n            }\\n        }\\n        return new String(c);\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "    public String convert(String s, int numRows) {\\n        if(numRows==1) return s;\\n        int x = 2 * (numRows-1); // distance between pipes |/|/|...\\n        int len = s.length();\\n        char[] c = new char[len];\\n        int k =0;\\n        for(int i=0; i < numRows; i++)\\n        {\\n            for(int j=i;j<len;j=j+x)\\n            {\\n                c[k++] = s.charAt(j);\\n                if(i>0 && i<numRows-1 && j+x-2*i < len)\\n                {\\n                       c[k++] = s.charAt(j+x-2*i); // extra character between pipes\\n                }\\n            }\\n        }\\n        return new String(c);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3733,
                "title": "cleanest-c-code-until-now-in-5-lines",
                "content": "    string convert(string s, int numRows) {\\n            if(numRows==1) return s;\\n            vector<string> p(numRows,\"\");\\n            int size=2*numRows-2;\\n            for(int i=0;i<s.size();i++) p[abs(numRows-1-i%size)]+=s[i];\\n            return accumulate( p.rbegin(), p.rend(), string(\"\") );\\n        }",
                "solutionTags": [],
                "code": "    string convert(string s, int numRows) {\\n            if(numRows==1) return s;\\n            vector<string> p(numRows,\"\");\\n            int size=2*numRows-2;\\n            for(int i=0;i<s.size();i++) p[abs(numRows-1-i%size)]+=s[i];\\n            return accumulate( p.rbegin(), p.rend(), string(\"\") );\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 3683,
                "title": "almost-most-simple-and-intuitive-solution-c-with-clear-algo-description",
                "content": "    case 1: if(numRows==1 || s.size()<=numRows) return s;\\n    case 2: generate numRows sequences, join them sequentially, all indices less than s.size().\\n    \\tstepcount=(numRows-1)*2, for i= 0 to numRows-1, the ith sequence, first is s[i], \\n    \\t2a. for 0th and n-1 th sequence, the step equal to stepcount\\n    \\t2b. for other, sum of two successive step equal to stepcount,\\n    \\t\\tthe odd one is stepcount-(i*2), the even one is (i*2)\\n\\n// below code essentially follows the above algo.\\n\\n    class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            if(numRows<2 || s.size()<=numRows) return s;\\n            string res(s.size(),0);\\n            char *p=&res[0];\\n            for(int i=0, j,k, step=(numRows-1)*2;i<numRows;++i) {\\n                if(i==0 || i==numRows-1) \\n                    for(j=i;j<s.size();j+=step) *p++=s[j];\\n                else\\n                    for(j=i, k=i<<1;j<s.size();k=step-k,j+=k) *p++=s[j];\\n            }\\n            return res;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            if(numRows<2 || s.size()<=numRows) return s;\\n            string res(s.size(),0);\\n            char *p=&res[0];\\n            for(int i=0, j,k, step=(numRows-1)*2;i<numRows;++i) {\\n                if(i==0 || i==numRows-1) \\n                    for(j=i;j<s.size();j+=step) *p++=s[j];\\n                else\\n                    for(j=i, k=i<<1;j<s.size();k=step-k,j+=k) *p++=s[j];\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3918,
                "title": "solution-sharing-c-23ms",
                "content": "        class Solution {\\n    public:\\n        string convert(string s, int nRows) {\\n        //Analysis: the problem is convert a serial string to a Zig-Zag pattern\\n        //[0,1,2,3,4,5,6,7,8,9,...,N] with row m;\\n        //0                 2m-2                4m-4\\n        //1            2m-3 2m-1           4m-3\\n        //...      ...      ...      ...\\n        //m-2   m           3m-4  3m-2\\n        //m-1               3m-3\\n        //so the algorithm is basically an algebra converting of the indexes.\\n        //[s.length/(2m-2)]\\n        //[0,2m-2,4m-4,...,1,2m-3,2m-1]\\n        string result;\\n        int i,j;\\n        int len=s.length();\\n        if (nRows==1) return s;\\n        for (i=0;i<nRows;i++){\\n            //for each row in the Zig-Zag graph\\n            //for the first and last row:\\n            //[0,2m-2,4m-4,6m-6.....,]\\n            //[m-1,3m-3,5m-5]\\n            //for the middle rows\\n            //[i,2m-2-i,2m-2+i,4m-4-i,4m-4+i....]\\n            j=0;\\n            while (j<len+i){\\n                if (i<nRows-1 && i>0 && j>i){\\n                    result+=s.at(j-i);\\n                }\\n                if ((i+j)<len){\\n                    result+=s.at(j+i);\\n                }\\n                j+=2*nRows-2;\\n            }\\n        }\\n        return result;\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        string convert(string s, int nRows) {\\n        //Analysis: the problem is convert a serial string to a Zig-Zag pattern\\n        //[0,1,2,3,4,5,6,7,8,9,...,N] with row m;\\n        //0                 2m-2                4m-4\\n        //1            2m-3 2m-1           4m-3\\n        //...      ...      ...      ...\\n        //m-2   m           3m-4  3m-2\\n        //m-1               3m-3\\n        //so the algorithm is basically an algebra converting of the indexes.\\n        //[s.length/(2m-2)]\\n        //[0,2m-2,4m-4,...,1,2m-3,2m-1]\\n        string result;\\n        int i,j;\\n        int len=s.length();\\n        if (nRows==1) return s;\\n        for (i=0;i<nRows;i++){\\n            //for each row in the Zig-Zag graph\\n            //for the first and last row:\\n            //[0,2m-2,4m-4,6m-6.....,]\\n            //[m-1,3m-3,5m-5]\\n            //for the middle rows\\n            //[i,2m-2-i,2m-2+i,4m-4-i,4m-4+i....]\\n            j=0;\\n            while (j<len+i){\\n                if (i<nRows-1 && i>0 && j>i){\\n                    result+=s.at(j-i);\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 3963,
                "title": "two-python-code-straight-forward-use-slice-and-neat-use-itertools",
                "content": "    class Solution:\\n    # @return a string\\n    def convert(self, s, n):\\n        res = [[] for _ in range(n)]\\n        i = 0\\n        try:\\n            while True:\\n                for r in res:\\n                    r.append(s[i])\\n                    i += 1\\n                for r in res[-2:0:-1]:\\n                    r.append(s[i])\\n                    i += 1\\n        except IndexError:\\n            return ''.join(''.join(r) for r in res)\\n\\nHere's a neat one\\n\\n    class Solution:\\n    # @return a string\\n    def convert(self, s, n):\\n        idx = itertools.chain(range(n), range(n-2, 0, -1))\\n        res = [[] for _ in range(n)]\\n        for char, i in zip(s, itertools.cycle(idx)):\\n            res[i].append(char)\\n        return ''.join(''.join(r) for r in res)",
                "solutionTags": [],
                "code": "    class Solution:\\n    # @return a string\\n    def convert(self, s, n):\\n        res = [[] for _ in range(n)]\\n        i = 0\\n        try:\\n            while True:\\n                for r in res:\\n                    r.append(s[i])\\n                    i += 1\\n                for r in res[-2:0:-1]:\\n                    r.append(s[i])\\n                    i += 1\\n        except IndexError:\\n            return ''.join(''.join(r) for r in res)\\n\\nHere's a neat one\\n\\n    class Solution:\\n    # @return a string\\n    def convert(self, s, n):\\n        idx = itertools.chain(range(n), range(n-2, 0, -1))\\n        res = [[] for _ in range(n)]\\n        for char, i in zip(s, itertools.cycle(idx)):\\n            res[i].append(char)\\n        return ''.join(''.join(r) for r in res)",
                "codeTag": "Java"
            },
            {
                "id": 3531,
                "title": "share-my-java-solution-with-comments",
                "content": "    public String convert(String s, int nRows) {\\n        int len = s.length();\\n        if(len<=nRows||nRows<=1) return s; //such condition can't form the zigzag route.\\n        \\n        StringBuilder[] result = new StringBuilder[nRows]; //string buffer array to hold each row's result\\n        \\n        //initialize the string buffer\\n        for(int i = 0; i < result.length; i++){\\n            result[i] = new StringBuilder();\\n        }\\n        \\n        //divide the groups into chunks with size (nRows*2-2).\\n        int chunk = nRows*2-2; //3->4, 4->6, 5->7, etc.\\n        \\n        for(int i = 0; i < len; i++){\\n            int group = i%chunk; //get the index of the element in the chunk\\n            \\n            //if they are less then nRows, this element is vertically aligned from top to buttom\\n            if(group<nRows){\\n                result[group].append(s.charAt(i));\\n            }\\n            //otherwise, it falls onto the slope in reversed direction\\n            else{\\n                result[chunk-group].append(s.charAt(i));\\n            }\\n        }\\n        \\n        //combine the groups into final array.\\n        StringBuilder sb = new StringBuilder();\\n        for(int i = 0; i < nRows; i++){\\n            sb.append(result[i].toString());\\n        }\\n        return sb.toString();\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "    public String convert(String s, int nRows) {\\n        int len = s.length();\\n        if(len<=nRows||nRows<=1) return s; //such condition can't form the zigzag route.\\n        \\n        StringBuilder[] result = new StringBuilder[nRows]; //string buffer array to hold each row's result\\n        \\n        //initialize the string buffer\\n        for(int i = 0; i < result.length; i++){\\n            result[i] = new StringBuilder();\\n        }\\n        \\n        //divide the groups into chunks with size (nRows*2-2).\\n        int chunk = nRows*2-2; //3->4, 4->6, 5->7, etc.\\n        \\n        for(int i = 0; i < len; i++){\\n            int group = i%chunk; //get the index of the element in the chunk\\n            \\n            //if they are less then nRows, this element is vertically aligned from top to buttom\\n            if(group<nRows){\\n                result[group].append(s.charAt(i));\\n            }\\n            //otherwise, it falls onto the slope in reversed direction\\n            else{\\n                result[chunk-group].append(s.charAt(i));\\n            }\\n        }\\n        \\n        //combine the groups into final array.\\n        StringBuilder sb = new StringBuilder();\\n        for(int i = 0; i < nRows; i++){\\n            sb.append(result[i].toString());\\n        }\\n        return sb.toString();\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3134729,
                "title": "putta-easy-solution-c-faster-than-100-nothing-else",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows == 1) return s;\\n        string ans= \"\";\\n        for(int i=0;i<numRows;i++){\\n            int nextindex = (numRows-1)*2;\\n            for(int j=i;j<s.size();j += nextindex){\\n                ans += s[j];\\n                int temp = j+nextindex-2*i;\\n                if( i != 0 && i!= numRows-1 && temp < s.size()){\\n                    ans += s[temp]; \\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows == 1) return s;\\n        string ans= \"\";\\n        for(int i=0;i<numRows;i++){\\n            int nextindex = (numRows-1)*2;\\n            for(int j=i;j<s.size();j += nextindex){\\n                ans += s[j];\\n                int temp = j+nextindex-2*i;\\n                if( i != 0 && i!= numRows-1 && temp < s.size()){\\n                    ans += s[temp]; \\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3109167,
                "title": "easily-understandable-solution-beats-99-30",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows==1) return s;\\n        bool down=true;\\n        string arr[numRows];\\n        int row=0;\\n        for(int i=0; i<s.size(); i++) {\\n            arr[row].push_back(s[i]);\\n            if(row==numRows-1) down=false;\\n            else if (row==0) down=true;\\n            if(down) row++;\\n            else row--;\\n        }\\n        string res=\"\";\\n        for(int i=0; i<numRows; i++) {\\n            res += arr[i];\\n        }\\n        return res;\\n    }\\n};\\n```\\nPlease upvote to motivate me to write more solutions",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows==1) return s;\\n        bool down=true;\\n        string arr[numRows];\\n        int row=0;\\n        for(int i=0; i<s.size(); i++) {\\n            arr[row].push_back(s[i]);\\n            if(row==numRows-1) down=false;\\n            else if (row==0) down=true;\\n            if(down) row++;\\n            else row--;\\n        }\\n        string res=\"\";\\n        for(int i=0; i<numRows; i++) {\\n            res += arr[i];\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2780150,
                "title": "javascript-solution-faster-than-91-90-of-javascript-submissions",
                "content": "```\\n/**\\n * @param {string} s\\n * @param {number} numRows\\n * @return {string}\\n */\\nvar convert = function(s, numRows) {\\n    if (numRows === 1) return s;\\n    const arraySolution = new Array(numRows).fill(\"\");\\n    let row = 0, step;\\n    for (let index = 0; index < s.length; index++){\\n        arraySolution[row] += s[index];\\n        if (row === 0) step = 1;\\n        if (row === numRows - 1) step = -1;\\n        row += step;\\n    }\\n    return arraySolution.join(\"\");\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "String"
                ],
                "code": "```\\n/**\\n * @param {string} s\\n * @param {number} numRows\\n * @return {string}\\n */\\nvar convert = function(s, numRows) {\\n    if (numRows === 1) return s;\\n    const arraySolution = new Array(numRows).fill(\"\");\\n    let row = 0, step;\\n    for (let index = 0; index < s.length; index++){\\n        arraySolution[row] += s[index];\\n        if (row === 0) step = 1;\\n        if (row === numRows - 1) step = -1;\\n        row += step;\\n    }\\n    return arraySolution.join(\"\");\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2648498,
                "title": "java-solution",
                "content": "```\\n public String convert(String s, int numRows) {\\n        \\n        if(numRows == 1 || s.length() <= numRows ) return s;\\n\\n\\t\\tString result = \"\";\\n\\n\\t\\tfor (int i = 1; i <= numRows; i++) {\\n\\t\\t\\t// first row\\n\\n\\t\\t\\tif (i == 1) {\\n\\t\\t\\t\\tint jump = 0;\\n\\n\\t\\t\\t\\twhile (jump < s.length()) {\\n\\t\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\t\\tint next = (numRows - 2) * 2 + 1;\\n\\t\\t\\t\\t\\tjump = jump + next + 1; // nextelement\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (i != numRows) {\\n\\n\\t\\t\\t\\tboolean isJump = true;\\n\\t\\t\\t\\tint jump = i - 1;\\n\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\twhile (jump < s.length()) {\\n\\t\\t\\t\\t\\tif (isJump) {\\n\\t\\t\\t\\t\\t\\tjump = jump + (numRows - i - 1) * 2 + 1 + 1;\\n\\n\\t\\t\\t\\t\\t\\tif (jump < s.length())\\n\\t\\t\\t\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\t\\t\\tisJump = false;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tjump = jump + (i - 1 - 1) * 2 + 1 + 1;\\n\\n\\t\\t\\t\\t\\t\\tif (jump < s.length())\\n\\t\\t\\t\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\t\\t\\tisJump = true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t// last row\\n\\t\\t\\telse {\\n\\t\\t\\t\\tint jump = i - 1;\\n\\t\\t\\t\\twhile (jump < s.length()) {\\n\\t\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\t\\tint next = (numRows - 2) * 2 + 1;\\n\\t\\t\\t\\t\\tjump = jump + next + 1; // nextelement\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\treturn result;\\n        \\n    }\\n    \\n```",
                "solutionTags": [
                    "Array"
                ],
                "code": "```\\n public String convert(String s, int numRows) {\\n        \\n        if(numRows == 1 || s.length() <= numRows ) return s;\\n\\n\\t\\tString result = \"\";\\n\\n\\t\\tfor (int i = 1; i <= numRows; i++) {\\n\\t\\t\\t// first row\\n\\n\\t\\t\\tif (i == 1) {\\n\\t\\t\\t\\tint jump = 0;\\n\\n\\t\\t\\t\\twhile (jump < s.length()) {\\n\\t\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\t\\tint next = (numRows - 2) * 2 + 1;\\n\\t\\t\\t\\t\\tjump = jump + next + 1; // nextelement\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (i != numRows) {\\n\\n\\t\\t\\t\\tboolean isJump = true;\\n\\t\\t\\t\\tint jump = i - 1;\\n\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\twhile (jump < s.length()) {\\n\\t\\t\\t\\t\\tif (isJump) {\\n\\t\\t\\t\\t\\t\\tjump = jump + (numRows - i - 1) * 2 + 1 + 1;\\n\\n\\t\\t\\t\\t\\t\\tif (jump < s.length())\\n\\t\\t\\t\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\t\\t\\tisJump = false;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tjump = jump + (i - 1 - 1) * 2 + 1 + 1;\\n\\n\\t\\t\\t\\t\\t\\tif (jump < s.length())\\n\\t\\t\\t\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\t\\t\\tisJump = true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t// last row\\n\\t\\t\\telse {\\n\\t\\t\\t\\tint jump = i - 1;\\n\\t\\t\\t\\twhile (jump < s.length()) {\\n\\t\\t\\t\\t\\tresult = result + s.charAt(jump);\\n\\t\\t\\t\\t\\tint next = (numRows - 2) * 2 + 1;\\n\\t\\t\\t\\t\\tjump = jump + next + 1; // nextelement\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\treturn result;\\n        \\n    }\\n    \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1737114,
                "title": "the-easiest-solution-with-only-three-variables-95",
                "content": "```\\nvar convert = function(s, numRows) {\\n    const rows = []; // where string in each row stored\\n    let row = 0, step = 1; \\n    \\n    for (let i = 0; i < s.length; i++) {\\n        rows[row] = rows[row] ? rows[row] + s[i] : s[i]; // add the char to current row string\\n        \\n        row += step;  // update the row\\n        if (row === numRows - 1 || row === 0) step *= -1; // if it hit the border, turn the direction\\n    }\\n    \\n    return rows.join(\\'\\') // join all the rows and return\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar convert = function(s, numRows) {\\n    const rows = []; // where string in each row stored\\n    let row = 0, step = 1; \\n    \\n    for (let i = 0; i < s.length; i++) {\\n        rows[row] = rows[row] ? rows[row] + s[i] : s[i]; // add the char to current row string\\n        \\n        row += step;  // update the row\\n        if (row === numRows - 1 || row === 0) step *= -1; // if it hit the border, turn the direction\\n    }\\n    \\n    return rows.join(\\'\\') // join all the rows and return\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 427621,
                "title": "python-solution-with-step-by-step-walk-through-beats-95",
                "content": "```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        if numRows == 1:\\n            return s\\n        \\n\\t\\t# Store all levels as arr inside a larger levels arr\\n        levels = []\\n        for n in range(numRows):\\n            levels.append([])\\n\\n        # Iterate through letters of the string\\n\\t\\t# For each letter, append it to the level that corresponds to the level variable below\\n\\t\\t# Add step to level to increase/decrease level\\n        level = 0\\n        step = 1\\n        \\n        for letter in s:\\n            levels[level].append(letter)\\n            level += step\\n            \\n\\t\\t\\t# Step turns negative when we reach the last level\\n\\t\\t\\t# Step turns positive when we reach the top level\\n            if level == 0 or level == numRows-1:\\n                step *= -1\\n        \\n\\t\\t# Convert the list of letter into strings\\n        for level, string in enumerate(levels):\\n            levels[level] = \\'\\'.join(string)\\n           \\n        return \\'\\'.join(levels)\\n```\\n\\n## Example: \\nstring = \\'hello\\' \\nnumRows = 3 \\n\\n**Iteration #1** \\n\\t- append current letter to current level\\n\\t- increment level by step\\n```\\n\\tlevel = 0 \\n\\tstep = 1\\n\\tstring = \\'(h)ello\\'\\n\\t\\n\\tlevels = [\\n\\t\\t\\t\\t[],    # Level One  <- current level\\n\\t\\t\\t\\t[],    # Level Two\\n\\t\\t\\t\\t[]     # Level Three\\n\\t\\t\\t]\\n```\\n**Iteration #2**\\n \\t- append current letter to current level\\n\\t- increment level by step\\n```  \\n\\t   level = 1\\n\\t   step = 1\\n\\t   string = \\'h(e)llo\\'\\n      \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\'],     # Level One \\n\\t\\t\\t\\t\\t[],        # Level Two <- current level\\n\\t\\t\\t\\t\\t[]         # Level Three\\n\\t\\t\\t\\t]\\n```\\n**Iteration #3**\\n\\t- append current letter to current level\\n\\t- increment level by step\\t\\n\\t- Current level is max level depth\\n\\t      -> So begin going up levels (step *= -1)\\n```\\n\\t   level = 2\\n\\t   step = 1\\n\\t\\t            \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\'],     # Level One \\n\\t\\t\\t\\t\\t[\\'e\\'],     # Level Two \\n\\t\\t\\t\\t\\t[]         # Level Three <- current level\\n\\t\\t\\t\\t]\\n\\t\\t\\n\\t\\tstring = \\'he(l)lo\\'\\n```\\n**Iteration #4**\\n\\t- append current letter to current level\\n\\t- increment level by step (-1)\\n```\\n\\t    level = 1\\n\\t    step = -1\\n\\t\\tstring = \\'hel(l)o\\'            \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\'],       # Level One \\n\\t\\t\\t\\t\\t[\\'e\\'],       # Level Two  <- current level\\n\\t\\t\\t\\t\\t[\\'l\\']        # Level Three \\n\\t\\t\\t\\t]\\n```\\n**Iteration #5**\\n\\t- append current letter to current level\\n\\t- increment level by step (-1)\\n```\\n\\t   level = 0\\n\\t   step = -1\\n\\t   string = \\'hell(o)\\'     \\n\\t   \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\'],         # Level One    <- current level\\n\\t\\t\\t\\t\\t[\\'e\\', \\'l\\'],    # Level Two\\n\\t\\t\\t\\t\\t[\\'l\\']          # Level Three \\n\\t\\t\\t\\t]\\n```\\n**Iteration #6**\\n\\t- append current letter to current level\\n\\t- increment level by step (-1)\\n```\\n\\t   level = 0\\n\\t   step = -1\\n\\t   string = \\'hello\\'\\n\\t            \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\', \\'o\\'],    # Level One    <- current level\\n\\t\\t\\t\\t\\t[\\'e\\', \\'l\\'],    # Level Two\\n\\t\\t\\t\\t\\t[\\'l\\']          # Level Three \\n\\t\\t\\t\\t]\\n\\t\\t\\n```\\n**Done with string iteration, time to create an answer**\\nFinal levels array looks like: \\n```\\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\', \\'o\\'],    # Level One\\n\\t\\t\\t\\t\\t[\\'e\\', \\'l\\'],    # Level Two\\n\\t\\t\\t\\t\\t[\\'l\\']          # Level Three \\n\\t\\t\\t\\t]\\n```\\nJoin letters inside each level together as a level string:\\n\\n\\t\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'ho\\'],    # Level One\\n\\t\\t\\t\\t\\t[\\'el\\'],    # Level Two\\n\\t\\t\\t\\t\\t[\\'l\\']      # Level Three \\n\\t\\t\\t\\t]\\n\\t\\t\\n\\t\\t\\nJoin all level strings together:\\n\\n\\t\\tanswer = \\'hoell\\'\\n\\t\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        if numRows == 1:\\n            return s\\n        \\n\\t\\t# Store all levels as arr inside a larger levels arr\\n        levels = []\\n        for n in range(numRows):\\n            levels.append([])\\n\\n        # Iterate through letters of the string\\n\\t\\t# For each letter, append it to the level that corresponds to the level variable below\\n\\t\\t# Add step to level to increase/decrease level\\n        level = 0\\n        step = 1\\n        \\n        for letter in s:\\n            levels[level].append(letter)\\n            level += step\\n            \\n\\t\\t\\t# Step turns negative when we reach the last level\\n\\t\\t\\t# Step turns positive when we reach the top level\\n            if level == 0 or level == numRows-1:\\n                step *= -1\\n        \\n\\t\\t# Convert the list of letter into strings\\n        for level, string in enumerate(levels):\\n            levels[level] = \\'\\'.join(string)\\n           \\n        return \\'\\'.join(levels)\\n```\n```\\n\\tlevel = 0 \\n\\tstep = 1\\n\\tstring = \\'(h)ello\\'\\n\\t\\n\\tlevels = [\\n\\t\\t\\t\\t[],    # Level One  <- current level\\n\\t\\t\\t\\t[],    # Level Two\\n\\t\\t\\t\\t[]     # Level Three\\n\\t\\t\\t]\\n```\n```  \\n\\t   level = 1\\n\\t   step = 1\\n\\t   string = \\'h(e)llo\\'\\n      \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\'],     # Level One \\n\\t\\t\\t\\t\\t[],        # Level Two <- current level\\n\\t\\t\\t\\t\\t[]         # Level Three\\n\\t\\t\\t\\t]\\n```\n```\\n\\t   level = 2\\n\\t   step = 1\\n\\t\\t            \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\'],     # Level One \\n\\t\\t\\t\\t\\t[\\'e\\'],     # Level Two \\n\\t\\t\\t\\t\\t[]         # Level Three <- current level\\n\\t\\t\\t\\t]\\n\\t\\t\\n\\t\\tstring = \\'he(l)lo\\'\\n```\n```\\n\\t    level = 1\\n\\t    step = -1\\n\\t\\tstring = \\'hel(l)o\\'            \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\'],       # Level One \\n\\t\\t\\t\\t\\t[\\'e\\'],       # Level Two  <- current level\\n\\t\\t\\t\\t\\t[\\'l\\']        # Level Three \\n\\t\\t\\t\\t]\\n```\n```\\n\\t   level = 0\\n\\t   step = -1\\n\\t   string = \\'hell(o)\\'     \\n\\t   \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\'],         # Level One    <- current level\\n\\t\\t\\t\\t\\t[\\'e\\', \\'l\\'],    # Level Two\\n\\t\\t\\t\\t\\t[\\'l\\']          # Level Three \\n\\t\\t\\t\\t]\\n```\n```\\n\\t   level = 0\\n\\t   step = -1\\n\\t   string = \\'hello\\'\\n\\t            \\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\', \\'o\\'],    # Level One    <- current level\\n\\t\\t\\t\\t\\t[\\'e\\', \\'l\\'],    # Level Two\\n\\t\\t\\t\\t\\t[\\'l\\']          # Level Three \\n\\t\\t\\t\\t]\\n\\t\\t\\n```\n```\\n\\t\\tlevels = [\\n\\t\\t\\t\\t\\t[\\'h\\', \\'o\\'],    # Level One\\n\\t\\t\\t\\t\\t[\\'e\\', \\'l\\'],    # Level Two\\n\\t\\t\\t\\t\\t[\\'l\\']          # Level Three \\n\\t\\t\\t\\t]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 421453,
                "title": "easy-to-understand-c-solution-8ms-beats-93",
                "content": "Runtime: 8 ms, faster than 93.78% of C++ online submissions for ZigZag Conversion.\\nMemory Usage: 12.7 MB, less than 46.29% of C++ online submissions for ZigZag Conversion.\\n\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        \\n        if(numRows <= 1)\\n            return s;\\n        \\n        string res = \"\";\\n        vector<string> pattern(numRows, \"\");\\n        int row = 0;\\n        int down = 1;\\n        \\n        for(int i=0; i<s.size(); i++)\\n        {\\n            pattern[row].push_back(s[i]);\\n            \\n            if(row == 0)\\n                down = 1;\\n            else if(row == numRows - 1)\\n                down = -1;\\n            \\n            row += down;\\n        }\\n        \\n        for(string row : pattern)\\n            res += row;\\n        return res; \\n    }\\n};",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        \\n        if(numRows <= 1)\\n            return s;\\n        \\n        string res = \"\";\\n        vector<string> pattern(numRows, \"\");\\n        int row = 0;\\n        int down = 1;\\n        \\n        for(int i=0; i<s.size(); i++)\\n        {\\n            pattern[row].push_back(s[i]);\\n            \\n            if(row == 0)\\n                down = 1;\\n            else if(row == numRows - 1)\\n                down = -1;\\n            \\n            row += down;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 213905,
                "title": "c-solution-with-12-ms-and-14-lines-strong-readability",
                "content": "**My thought:**\\n1.Create an vector to hold the string representing each line;\\n2.Create a cursor that can be moved up and down(like \\'W\\',down-up-down-up);\\n3.Inserts the letter into the string indicated by the cursor;\\n4.Concatenates all substrings into a single string.\\n\\n**Here is my code:**\\n```\\nstring convert(string s, int numRows) {\\n\\tif (numRows == 1)return s;\\n\\tvector<string> subStr(numRows);\\n\\tbool isDescending = false;\\n\\tint i = 0;\\n\\tfor (const auto e : s){\\n\\t\\tsubStr[i] += e;\\n\\t\\tif(i == 0 || i == numRows - 1) isDescending = !isDescending;\\n\\t\\tisDescending ? ++i : --i;\\n\\t}\\n\\tstring resStr;\\n\\tfor (const auto& str : subStr) resStr += str;\\n\\treturn resStr;\\n}\\n```\\n**Hope this helps.**",
                "solutionTags": [],
                "code": "```\\nstring convert(string s, int numRows) {\\n\\tif (numRows == 1)return s;\\n\\tvector<string> subStr(numRows);\\n\\tbool isDescending = false;\\n\\tint i = 0;\\n\\tfor (const auto e : s){\\n\\t\\tsubStr[i] += e;\\n\\t\\tif(i == 0 || i == numRows - 1) isDescending = !isDescending;\\n\\t\\tisDescending ? ++i : --i;\\n\\t}\\n\\tstring resStr;\\n\\tfor (const auto& str : subStr) resStr += str;\\n\\treturn resStr;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 207857,
                "title": "rust",
                "content": "```\\nfn convert(string: &str, num_rows: i32) -> String {\\n    let num_rows = num_rows as usize;\\n\\n    if num_rows < 2 {\\n        return string.into();\\n    }\\n\\n    let mut strings = vec![String::new(); num_rows];\\n\\n    let mut i = 0;\\n    let mut down = true;\\n\\n    for c in string.chars() {\\n        strings[i].push(c);\\n        i = if down { i + 1 } else { i - 1 };\\n        down = down == (i > 0 && i < num_rows - 1);\\n    }\\n\\n    strings.concat()\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nfn convert(string: &str, num_rows: i32) -> String {\\n    let num_rows = num_rows as usize;\\n\\n    if num_rows < 2 {\\n        return string.into();\\n    }\\n\\n    let mut strings = vec![String::new(); num_rows];\\n\\n    let mut i = 0;\\n    let mut down = true;\\n\\n    for c in string.chars() {\\n        strings[i].push(c);\\n        i = if down { i + 1 } else { i - 1 };\\n        down = down == (i > 0 && i < num_rows - 1);\\n    }\\n\\n    strings.concat()\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4075001,
                "title": "video-step-by-step-visualization-and-explanation",
                "content": "https://youtu.be/ytSl-K4xo3w\\n\\nThe key to solving this problem is to understand that we assign characters to rows by <i>oscillating</i> between the top and bottom rows.  In other words, if we traversed the string and looked at which row each character belonged to (let\\u2019s say numRows is 3), the pattern would be 1 2 3 2 1 2 3 2 1.. so the first character goes in row 1, the second character goes in rows 2, the third character goes in row 3 - which is the bottom row - so now you go back up to row 2, then row 1.\\n\\nTo represent the rows, we\\u2019ll use a 2D array named `rows`, where each inner list represents a row.  We then use a variable called `index` that will oscillate between the top and bottom rows and assign characters to rows.\\n\\nWe\\u2019ll control the direction that index moves by using a variable called `step`.  `step` will either be 1 or -1, where a value of 1 means we need to increment the index (so move DOWN a row) and a value of -1 means we need to decrement the index (move UP a row).  Whenever we reach either the first or last row, we\\'ll switch the direction to move `index` in the opposite direction.\\n\\nA common mistake I see is creating a 1D list and initializing an empty string for each row.  Then, instead of appending to a list, each character is added by using string concatenation.  While this works, this is not O(n) because strings are immutable.  In other words, string concatenation  allocates new memory and copies over each character from both strings to create an entirely new string.  That means that the string concatenation runs in O(n), so the overall algorithm runs in O(n<sup>2</sup>) time.\\n\\nInstead, by using lists (since lists are mutable), appending to a list runs in constant time - or more precisely, the amortized complexity of appending to a list is constant.  So that allows everything inside the loop to run in constant time, so the algorithm now runs in O(n) time.  \\n\\n# Code\\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        if numRows == 1 or numRows >= len(s):\\n            return s\\n        \\n        rows = [[] for row in range(numRows)]\\n        index = 0\\n        step = -1\\n        for char in s:\\n            rows[index].append(char)\\n            if index == 0:\\n                step = 1\\n            elif index == numRows - 1:\\n                step = -1\\n            index += step\\n\\n        for i in range(numRows):\\n            rows[i] = \\'\\'.join(rows[i])\\n        return \\'\\'.join(rows)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "String"
                ],
                "code": "```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        if numRows == 1 or numRows >= len(s):\\n            return s\\n        \\n        rows = [[] for row in range(numRows)]\\n        index = 0\\n        step = -1\\n        for char in s:\\n            rows[index].append(char)\\n            if index == 0:\\n                step = 1\\n            elif index == numRows - 1:\\n                step = -1\\n            index += step\\n\\n        for i in range(numRows):\\n            rows[i] = \\'\\'.join(rows[i])\\n        return \\'\\'.join(rows)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3135865,
                "title": "python3-49-ms-faster-than-95-18-of-python3",
                "content": "```\\ndef convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1:\\n            return s\\n        zigzag = [\\'\\' for _ in range(numRows)]\\n        row = 0\\n        step = 1\\n        for c in s:\\n            zigzag[row] += c\\n            if row == numRows-1:\\n                step = -1\\n            elif row == 0:\\n                step = 1\\n            row += step\\n        return \\'\\'.join(zigzag)\\n```\\nThe code implements a solution to the problem of converting a given string into a zigzag pattern using a specified number of rows. The steps involved are as follows:\\n\\n1. Check if the number of rows is 1. If so, return the input string as is, as there\\'s no zigzag pattern to be formed.\\n1. Initialize an empty list, called \"zigzag\", with \"numRows\" number of empty strings. This list will store the zigzag pattern of the input string.\\n1. Initialize two variables, \"row\" and \"step\", both set to 0. \"row\" will be used to keep track of the current row that we\\'re adding characters to, while \"step\" will determine the direction in which we\\'re adding characters.\\n1. Loop through each character in the input string \"s\".\\n1. Add the current character to the \"zigzag\" list, at the current row.\\n1. Update the value of \"step\" based on the current row. If \"row\" is equal to \"numRows - 1\", set \"step\" to -1, which will cause the next character to be added to the previous row. If \"row\" is equal to 0, set \"step\" to 1, which will cause the next character to be added to the next row.\\n1. Update the value of \"row\" by adding \"step\".\\n1. Repeat steps 5-7 for each character in the input string \"s\".\\n1. After the loop, join all the strings in the \"zigzag\" list together and return the result as the final zigzag pattern of the input string.",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "String"
                ],
                "code": "```\\ndef convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1:\\n            return s\\n        zigzag = [\\'\\' for _ in range(numRows)]\\n        row = 0\\n        step = 1\\n        for c in s:\\n            zigzag[row] += c\\n            if row == numRows-1:\\n                step = -1\\n            elif row == 0:\\n                step = 1\\n            row += step\\n        return \\'\\'.join(zigzag)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3133843,
                "title": "daily-leetcoding-challenge-february-day-3",
                "content": "This problem is the Daily LeetCoding Challenge for February, Day 3.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/zigzag-conversion/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain this 0 approach in the official solution</summary>\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
                "solutionTags": [],
                "code": "  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/zigzag-conversion/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />",
                "codeTag": "Unknown"
            },
            {
                "id": 2549281,
                "title": "c-simple-solution-easy-to-understand-codesoup",
                "content": "Here\\'s a full write up of the problem explained step by step\\nhttps://imsudip.hashnode.dev/leetcode-question-6\\n\\n> I recently started this blog where I will post writeup for daily leetcode problems.\\nsupport me by checking it out and share your views on it\\n\\n**Upvote if you want me to continue making this type of content for the coding community**\\n\\n## Solution: \\n### Approach: \\nAfter looking at the question, I thought of using a 2D array to store the characters in the zigzag pattern. But, I realized that it would be a waste of space. So, I thought of using a vector of strings to store the characters in the zigzag pattern. I used a boolean variable `goingDown` to keep track of the direction of the zigzag pattern. If `goingDown` is true, then I increment the row number. If `goingDown` is false, then I decrement the row number. I used a for loop to iterate through the string `s`. I used a if-else statement to check if the row number is `0` or `numRows - 1`. If it is, then I change the value of `goingDown`. I used a for loop to iterate through the vector of strings and append the characters to the string `ans`. I returned the string `ans`.\\n\\n<br>Now, we can write the code:\\n### Code:\\n```c\\n#include <bits/stdc++.h>\\nusing namespace std;\\n\\nclass Solution\\n{\\npublic:\\n    string convert(string s, int numRows)\\n    {\\n        if (numRows == 1)\\n        {\\n            return s;\\n        }\\n        vector<string> rows(min(numRows, int(s.size())));\\n        int curRow = 0;\\n        bool goingDown = false;\\n        for (char c : s)\\n        {\\n            rows[curRow] += c;\\n            if (curRow == 0 || curRow == numRows - 1)\\n            {\\n                goingDown = !goingDown;\\n            }\\n            curRow += goingDown ? 1 : -1;\\n        }\\n        string ans;\\n        for (string row : rows)\\n        {\\n            ans += row;\\n        }\\n        return ans;\\n    }\\n};\\n\\nint main()\\n{\\n    Solution s;\\n    cout << s.convert(\"PAYPALISHIRING\", 3) << endl;\\n    return 0;\\n}\\n```\\n\\n\\n### Complexity Analysis: <br> \\nTime Complexity: **O(n)**<br>\\nSpace Complexity:**O(n)**<br>\\n**Hope this helps!**",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```c\\n#include <bits/stdc++.h>\\nusing namespace std;\\n\\nclass Solution\\n{\\npublic:\\n    string convert(string s, int numRows)\\n    {\\n        if (numRows == 1)\\n        {\\n            return s;\\n        }\\n        vector<string> rows(min(numRows, int(s.size())));\\n        int curRow = 0;\\n        bool goingDown = false;\\n        for (char c : s)\\n        {\\n            rows[curRow] += c;\\n            if (curRow == 0 || curRow == numRows - 1)\\n            {\\n                goingDown = !goingDown;\\n            }\\n            curRow += goingDown ? 1 : -1;\\n        }\\n        string ans;\\n        for (string row : rows)\\n        {\\n            ans += row;\\n        }\\n        return ans;\\n    }\\n};\\n\\nint main()\\n{\\n    Solution s;\\n    cout << s.convert(\"PAYPALISHIRING\", 3) << endl;\\n    return 0;\\n}\\n```",
                "codeTag": "C++"
            },
            {
                "id": 1037294,
                "title": "c-very-easy-to-understand-solution",
                "content": "When we convert the string into ZigZag, we can divide each group of characters into periods, with size of `2 * numRows - 2`\\n```\\nPAYPALISHIRING\\nperiodSize = 4\\n\\nP   | A   | H   | N\\nA P | L S | I I | G\\nY   | I   | R   |\\n```\\n\\nIf we correspond each character from the ZigZag pattern to the characters in the original string, we can observe the following:\\n```\\nROW 1 OF ZIGZAG\\n\\nP A Y P A L I S H I R  I  N  G\\n^       ^       ^         ^\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13\\n\\nP   | A   | H   | N\\n```\\nThe corresponding characters of row 1 to the original string starts from `s[0]`, `s[4]`, `s[8]`... Meaning the increment is 4 for row 1, which is the `periodSize`. This happens in the last row as well.\\n\\n```\\nROW 2 OF ZIGZAG\\n\\nP A Y P A L I S H I R  I  N  G\\n  ^   ^   ^   ^   ^    ^     ^\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13\\n\\nA P | L S | I I | G\\n```\\nFor row 2, the characters are `s[1]`, `s[3]`, `s[5]`...\\nThe increment in row 2 is 2.\\n\\nWhat about other `numRows`? Let\\'s have look at what is the case with row 2 in `numRows = 4`.\\n```\\nnumRows = 4\\nperiodSize = 6\\n\\nP A Y P A L I S H I R  I  N  G\\n  ^       ^   ^        ^     ^\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13\\n\\n  P   | I   | N\\n> A L | S I | G\\n  Y A | H R |\\n  P   | I   |\\n```\\nYou can see that the **first and last row** has increment of `periodSize = 6`, \\nThe **second row** has two increments, which is **alternating between 4 and 2**.\\nThe **third row** also has two increments, which is **alternating between 2 and 4**.\\n\\nWe can draw the following conclusion: **there are two increments for each row `i`, such that**\\n```\\nint inc1 = periodSize - (i * 2);\\nint inc2 = periodSize - inc1;\\n```\\n\\nWith this in mind, we can now write the code. Below is my solution:\\n```cpp\\nstring convert(string s, int numRows) {\\n\\n\\tif (numRows == 1) {  // If numRows is 1, there is no change\\n\\t\\treturn s;\\n\\t}\\n\\n\\tstring ret;\\n\\tint periodSize = 2 * numRows - 2;\\n\\n\\tfor(int i = 0; i < numRows; i++) {  // Iterate row by row\\n\\t\\tint inc1 = periodSize - (i * 2);\\n\\t\\tint inc2 = periodSize - inc1;\\n\\t\\tint j = i;\\n\\n\\t\\twhile(j < s.length()) {\\n\\t\\t\\tif (inc1 != 0 && j < s.length()) { // Avoid adding repeated characters when inc1 is 0\\n\\t\\t\\t\\tret += s[j];\\n\\t\\t\\t\\tj += inc1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (inc2 != 0 && j < s.length()) {  // Avoid adding repeated characters when inc2 is 0\\n\\t\\t\\t\\tret += s[j];\\n\\t\\t\\t\\tj += inc2;\\n\\t\\t\\t}   \\n\\t\\t}\\n\\t}\\n\\n\\treturn ret;\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "```\\nPAYPALISHIRING\\nperiodSize = 4\\n\\nP   | A   | H   | N\\nA P | L S | I I | G\\nY   | I   | R   |\\n```\n```\\nROW 1 OF ZIGZAG\\n\\nP A Y P A L I S H I R  I  N  G\\n^       ^       ^         ^\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13\\n\\nP   | A   | H   | N\\n```\n```\\nROW 2 OF ZIGZAG\\n\\nP A Y P A L I S H I R  I  N  G\\n  ^   ^   ^   ^   ^    ^     ^\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13\\n\\nA P | L S | I I | G\\n```\n```\\nnumRows = 4\\nperiodSize = 6\\n\\nP A Y P A L I S H I R  I  N  G\\n  ^       ^   ^        ^     ^\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13\\n\\n  P   | I   | N\\n> A L | S I | G\\n  Y A | H R |\\n  P   | I   |\\n```\n```\\nint inc1 = periodSize - (i * 2);\\nint inc2 = periodSize - inc1;\\n```\n```cpp\\nstring convert(string s, int numRows) {\\n\\n\\tif (numRows == 1) {  // If numRows is 1, there is no change\\n\\t\\treturn s;\\n\\t}\\n\\n\\tstring ret;\\n\\tint periodSize = 2 * numRows - 2;\\n\\n\\tfor(int i = 0; i < numRows; i++) {  // Iterate row by row\\n\\t\\tint inc1 = periodSize - (i * 2);\\n\\t\\tint inc2 = periodSize - inc1;\\n\\t\\tint j = i;\\n\\n\\t\\twhile(j < s.length()) {\\n\\t\\t\\tif (inc1 != 0 && j < s.length()) { // Avoid adding repeated characters when inc1 is 0\\n\\t\\t\\t\\tret += s[j];\\n\\t\\t\\t\\tj += inc1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (inc2 != 0 && j < s.length()) {  // Avoid adding repeated characters when inc2 is 0\\n\\t\\t\\t\\tret += s[j];\\n\\t\\t\\t\\tj += inc2;\\n\\t\\t\\t}   \\n\\t\\t}\\n\\t}\\n\\n\\treturn ret;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3397,
                "title": "easy-to-understand-solution",
                "content": "For a moment ignore the case where there is just one row or where there is more rows than the length of the string.\\n\\nNow we can simply make a vector which will be initialized to the number of rows. We can traverse the string and add elements across this vector. When we are at the beginning or end of the vector, we simply change directions.\\n\\nWhen we are done traversing the entire string, we simply concatenate all of the strings in our vector.\\n\\nIn both of the edge cases, we just return the original string.\\n\\n```\\nstring convert(string s, int numRows) {\\n\\t\\n\\n\\tif (numRows > s.length() || numRows==1) { // handle edge cases\\n\\t\\treturn s;\\n\\t}\\n    \\n    vector<string> words(numRows);\\n\\tint i = 0;\\n\\tint d = -1;\\n\\tint j = 0;\\n\\n\\twhile (i < s.length()) {\\t\\t\\n\\t\\twords[j] += s[i];\\n\\t\\td = (j == 0 || j == (numRows - 1)) ? -d : d;\\n\\t\\tj += d;\\n\\t\\ti++;\\t\\t\\n\\t}\\n\\n\\tstring result=\"\";\\n\\tfor (string w : words) {\\n\\t\\tresult += w;\\n\\t}\\n\\n\\n\\n\\treturn result;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nstring convert(string s, int numRows) {\\n\\t\\n\\n\\tif (numRows > s.length() || numRows==1) { // handle edge cases\\n\\t\\treturn s;\\n\\t}\\n    \\n    vector<string> words(numRows);\\n\\tint i = 0;\\n\\tint d = -1;\\n\\tint j = 0;\\n\\n\\twhile (i < s.length()) {\\t\\t\\n\\t\\twords[j] += s[i];\\n\\t\\td = (j == 0 || j == (numRows - 1)) ? -d : d;\\n\\t\\tj += d;\\n\\t\\ti++;\\t\\t\\n\\t}\\n\\n\\tstring result=\"\";\\n\\tfor (string w : words) {\\n\\t\\tresult += w;\\n\\t}\\n\\n\\n\\n\\treturn result;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3476,
                "title": "c-13-lines",
                "content": "A shorter version of this [post](https://discuss.leetcode.com/topic/4502/share-simple-c-solution).\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows == 1) return s;\\n        vector<string>v(numRows, \"\");\\n        int d = 1;\\n        int row = 0;\\n        for(auto c: s){\\n            v[row].push_back(c);\\n            row += d;\\n            if(row == numRows - 1) d = -1;\\n            if(row == 0) d = 1;\\n        }\\n        string res;\\n        for(auto x: v) res.append(x);\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows == 1) return s;\\n        vector<string>v(numRows, \"\");\\n        int d = 1;\\n        int row = 0;\\n        for(auto c: s){\\n            v[row].push_back(c);\\n            row += d;\\n            if(row == numRows - 1) d = -1;\\n            if(row == 0) d = 1;\\n        }\\n        string res;\\n        for(auto x: v) res.append(x);\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3802,
                "title": "clean-ac-java-solution-very-short",
                "content": "    public class Solution {\\n        public String convert(String s, int numRows) {\\n            if (s == null || s.length() == 0 || s.length() <= numRows || numRows == 1) return s;\\n            List<List<Character>> resList = new ArrayList<List<Character>>();\\n            for (int i = 0; i < numRows; i++) {\\n                resList.add(new ArrayList<Character>());\\n            }\\n            for (int i = 0; i < s.length(); i++) {\\n                int indexInGroup = i % (2 * numRows - 2);\\n                int indexInList = indexInGroup < numRows ? indexInGroup : 2 * numRows - 2 - indexInGroup;\\n                resList.get(indexInList).add(s.charAt(i));\\n            }\\n            StringBuilder sb = new StringBuilder();\\n            for (List<Character> list : resList) {\\n                for (Character c : list) {\\n                    sb.append(c);\\n                }\\n            }\\n            return sb.toString();\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public String convert(String s, int numRows) {\\n            if (s == null || s.length() == 0 || s.length() <= numRows || numRows == 1) return s;\\n            List<List<Character>> resList = new ArrayList<List<Character>>();\\n            for (int i = 0; i < numRows; i++) {\\n                resList.add(new ArrayList<Character>());\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3928,
                "title": "my-simple-java-solution",
                "content": "    public class Solution {\\n        public String convert(String s, int nRows) {\\n            \\n            if(nRows <=1)\\n                return s;\\n           \\n           StringBuilder[] r = new StringBuilder[nRows];\\n           for( int i=0; i<nRows; i++ )\\n               r[i] = new StringBuilder();\\n           \\n            int base = nRows+nRows-2;\\n            char[] toks = s.toCharArray();\\n            for(int i = 0; i < toks.length; i++)\\n            {\\n                int t = i % base;\\n                if(t < nRows)\\n                {\\n                    r[t].append(toks[i]);\\n                }\\n                else\\n                {\\n                    r[base-t].append(toks[i]);\\n                }\\n            }\\n            \\n            for( int i = 1; i<nRows; i++ )\\n                r[0].append( r[i] );\\n            return r[0].toString();\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public String convert(String s, int nRows) {\\n            \\n            if(nRows <=1)\\n                return s;\\n           \\n           StringBuilder[] r = new StringBuilder[nRows];\\n           for( int i=0; i<nRows; i++ )\\n               r[i] = new StringBuilder();\\n           \\n            int base = nRows+nRows-2;\\n            char[] toks = s.toCharArray();\\n            for(int i = 0; i < toks.length; i++)\\n            {\\n                int t = i % base;\\n                if(t < nRows)\\n                {\\n                    r[t].append(toks[i]);\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 3137493,
                "title": "easy-to-unerstand-c-code-100-fast",
                "content": "# Intuition\\nJust create a vector of strings and make the zigzag patter in that vector, after doing that we just need to append those stings and return the ans.\\n\\n# Approach\\ncreate a vector of strings,use a while loop to iterate over the string\\nin first itteration just keep adding the character from the string to respective string in the vector i.e v[i].push_back(s[a]),a++ (where i is the number of rows in incresing order and a is the current character),\\nin the same while loop we itterate string again but from the back from\\nn-2 t0 1 (i--),and add this character to their respective string i.e \\nv[i].push_back(s[a]),a++ .on all these loops we add a condition on iterator over string to not go over s.lenth(),if iterator goes over s.length() we break the loop and return string ans. \\n\\n# Complexity\\n- Time complexity:\\no(n);\\n\\n- Space complexity:\\no(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        \\n     vector <string> v(numRows);\\n\\n    int n=s.length();\\n    int a=0;\\n    if(numRows==1){\\n        return s;\\n    }\\n    while(a<n){\\n    \\n    for(int i=0;i<numRows;i++){\\n        if(a<n){v[i].push_back(s[a]);\\n        a++;\\n        }else{\\n            break;\\n        }\\n    }\\n    for(int i=numRows-2;i>0;i--){\\n     if(a<n){\\n         v[i].push_back(s[a]);\\n     a++;\\n     }else{\\n         break;\\n     }\\n    }\\n    }\\n    string ans=\"\";\\n\\n    for(int i=0;i<v.size();i++){\\n        for(int j=0;j<v[i].size();j++){\\n            ans.push_back(v[i][j]);\\n        }\\n    }\\n    return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        \\n     vector <string> v(numRows);\\n\\n    int n=s.length();\\n    int a=0;\\n    if(numRows==1){\\n        return s;\\n    }\\n    while(a<n){\\n    \\n    for(int i=0;i<numRows;i++){\\n        if(a<n){v[i].push_back(s[a]);\\n        a++;\\n        }else{\\n            break;\\n        }\\n    }\\n    for(int i=numRows-2;i>0;i--){\\n     if(a<n){\\n         v[i].push_back(s[a]);\\n     a++;\\n     }else{\\n         break;\\n     }\\n    }\\n    }\\n    string ans=\"\";\\n\\n    for(int i=0;i<v.size();i++){\\n        for(int j=0;j<v[i].size();j++){\\n            ans.push_back(v[i][j]);\\n        }\\n    }\\n    return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3133953,
                "title": "c-video-solution",
                "content": "# Intuition & Approach\\nhttps://youtu.be/eulmedmDLGw\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1)\\n            return s;\\n        \\n        vector<string> rows(numRows);\\n        bool moveDown = true;\\n        int rowIdx = 0;\\n        \\n        for (auto &ch : s) {\\n            rows[rowIdx] += ch;\\n            \\n            if (rowIdx == numRows - 1)\\n                moveDown = false;\\n            else if (rowIdx == 0)\\n                moveDown = true;\\n\\n            rowIdx += (moveDown ? 1 : -1);\\n        }\\n\\n        string ret = \"\";\\n        for (int i = 0; i < numRows; ++i)\\n            ret += rows[i];\\n        \\n        return ret;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1)\\n            return s;\\n        \\n        vector<string> rows(numRows);\\n        bool moveDown = true;\\n        int rowIdx = 0;\\n        \\n        for (auto &ch : s) {\\n            rows[rowIdx] += ch;\\n            \\n            if (rowIdx == numRows - 1)\\n                moveDown = false;\\n            else if (rowIdx == 0)\\n                moveDown = true;\\n\\n            rowIdx += (moveDown ? 1 : -1);\\n        }\\n\\n        string ret = \"\";\\n        for (int i = 0; i < numRows; ++i)\\n            ret += rows[i];\\n        \\n        return ret;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3133912,
                "title": "python3-c-generate-row-pattern-and-merge-array",
                "content": "**Python3**\\n\\nGenerate the row number pattern for the string which is ... fwd, rev, fwd, etc\\n0,1,2...n, [n-1, ... 1],0,1,2,3  .. n\\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        rr = range(numRows)\\n        pattern = list(rr) + list(range(numRows-2, 0, -1))\\n        times = math.ceil(len(s)/len(pattern))\\n        patterns = pattern*times\\n        \\n        arr = [\"\" for _ in rr] \\n\\n        for a,b in zip(patterns, s):\\n            arr[a] += b\\n        \\n        return \"\".join(arr)\\n```\\n**C++**\\n\\nA slighly different solution but depending on the same logic of patterns fwd,rev, etc\\n\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int S = s.length(), index = 0, alen = S > numRows ? S : numRows, direction=1; \\n        string vs[alen+1], ans;\\n        \\n        for (int i = 0; i < S; i++) {\\n            vs[index] += s[i];\\n            if (index == numRows-1 || index == 0) {\\n                direction = 1 - direction;\\n            }\\n            if (!direction) {\\n                index += 1;\\n            } else { \\n                index -= 1;\\n            }\\n            \\n        }\\n        for (int i = 0; i <= alen; i++) {\\n            ans += vs[i];\\n        }\\n        \\n        return ans;\\n    }\\n};",
                "solutionTags": [
                    "Python3",
                    "C",
                    "Iterator"
                ],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        rr = range(numRows)\\n        pattern = list(rr) + list(range(numRows-2, 0, -1))\\n        times = math.ceil(len(s)/len(pattern))\\n        patterns = pattern*times\\n        \\n        arr = [\"\" for _ in rr] \\n\\n        for a,b in zip(patterns, s):\\n            arr[a] += b\\n        \\n        return \"\".join(arr)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1051666,
                "title": "easy-to-understand-just-do-zigzag-traversal-o-n-time",
                "content": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        StringBuilder[] sb = new StringBuilder[numRows];\\n        for(int i = 0; i < numRows; i++)\\n            sb[i] = new StringBuilder();\\n        \\n        int i = 0, n = s.length();\\n        while(i < n) {\\n            for(int j = 0; j < numRows && i < n; j++)\\n                sb[j].append(s.charAt(i++));\\n            for(int j = numRows - 2; j > 0 && i < n; j--)\\n                sb[j].append(s.charAt(i++));\\n        }\\n        \\n        return String.join(\"\", sb);\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        StringBuilder[] sb = new StringBuilder[numRows];\\n        for(int i = 0; i < numRows; i++)\\n            sb[i] = new StringBuilder();\\n        \\n        int i = 0, n = s.length();\\n        while(i < n) {\\n            for(int j = 0; j < numRows && i < n; j++)\\n                sb[j].append(s.charAt(i++));\\n            for(int j = numRows - 2; j > 0 && i < n; j--)\\n                sb[j].append(s.charAt(i++));\\n        }\\n        \\n        return String.join(\"\", sb);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1010621,
                "title": "normal-c-implementation",
                "content": "Video Link - https://youtu.be/l-IyeXhawUY\\n\\n```\\n/*n=numRows\\n\\u0394=2n-2    1                           2n-1                         4n-3\\n\\u0394=        2                     2n-2  2n                    4n-4   4n-2\\n\\u0394=        3               2n-3        2n+1              4n-5       .\\n\\u0394=        .           .               .               .            .\\n\\u0394=        .       n+2                 .           3n               .\\n\\u0394=        n-1 n+1                     3n-3    3n-1                 5n-5\\n\\u0394=2n-2    n                           3n-2                         5n-4\\n*/\\n```\\n\\n\\n\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<string> v(numRows, \"\");\\n        int i =0;\\n        int n = s.length();\\n        while(i<n){\\n            \\n            for(int j =0; j<numRows && i<n; j++ ){\\n                v[j].push_back(s[i++]);\\n            }\\n            \\n            for(int j =numRows-2; j>=1 && i<n; j--){\\n                v[j].push_back(s[i++]);\\n            }\\n        }\\n        \\n        string res =\"\";\\n        for(auto i : v){\\n            res+=i;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\n/*n=numRows\\n\\u0394=2n-2    1                           2n-1                         4n-3\\n\\u0394=        2                     2n-2  2n                    4n-4   4n-2\\n\\u0394=        3               2n-3        2n+1              4n-5       .\\n\\u0394=        .           .               .               .            .\\n\\u0394=        .       n+2                 .           3n               .\\n\\u0394=        n-1 n+1                     3n-3    3n-1                 5n-5\\n\\u0394=2n-2    n                           3n-2                         5n-4\\n*/\\n```\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<string> v(numRows, \"\");\\n        int i =0;\\n        int n = s.length();\\n        while(i<n){\\n            \\n            for(int j =0; j<numRows && i<n; j++ ){\\n                v[j].push_back(s[i++]);\\n            }\\n            \\n            for(int j =numRows-2; j>=1 && i<n; j--){\\n                v[j].push_back(s[i++]);\\n            }\\n        }\\n        \\n        string res =\"\";\\n        for(auto i : v){\\n            res+=i;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 936825,
                "title": "easy-o-n-js-solution",
                "content": "```\\nvar convert = function(s, numRows) {\\n    // We go down row by row and come back up row by row \\n    // We repeat this process until we have visited all letters\\n    let matrix = new Array(numRows).fill(\"\");\\n    let idx = 0;\\n    while (idx < s.length) {\\n        for (let i = 0; i < numRows; i++) { // appends the vertical letters\\n            if (idx >= s.length) break;\\n            matrix[i] += s[idx];\\n            idx++;\\n        }\\n        for (let i = numRows-2; i > 0; i--) { // append the letters in diagonal except the top and bottom (which have already been appended by the previous for loop)\\n            if (idx >= s.length) break;\\n            matrix[i] += s[idx];\\n            idx++;\\n        }       \\n    }\\n    return matrix.join(\"\");\\n    // Time Complexity: O(N), N = length of s\\n    // Space Complexity: O(N), matrix contains N elements\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar convert = function(s, numRows) {\\n    // We go down row by row and come back up row by row \\n    // We repeat this process until we have visited all letters\\n    let matrix = new Array(numRows).fill(\"\");\\n    let idx = 0;\\n    while (idx < s.length) {\\n        for (let i = 0; i < numRows; i++) { // appends the vertical letters\\n            if (idx >= s.length) break;\\n            matrix[i] += s[idx];\\n            idx++;\\n        }\\n        for (let i = numRows-2; i > 0; i--) { // append the letters in diagonal except the top and bottom (which have already been appended by the previous for loop)\\n            if (idx >= s.length) break;\\n            matrix[i] += s[idx];\\n            idx++;\\n        }       \\n    }\\n    return matrix.join(\"\");\\n    // Time Complexity: O(N), N = length of s\\n    // Space Complexity: O(N), matrix contains N elements\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 649837,
                "title": "java-solution-easy-to-understand",
                "content": "![image](https://assets.leetcode.com/users/chuanqiu/image_1590340999.png)\\n\\n```\\n/*\\nmain idea: build number = numRows array to store each line of s; then put them together.\\nkey : do \"Z\" type order; by set  a direction variable, when i is 0 or numRows-1 for array[i], change direction(-direction);\\n\\n*/\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if(s==null ||s.length()==0||numRows <2) return s;\\n        //store each row char\\n        StringBuilder[] array = new StringBuilder[numRows];\\n        for(int i = 0; i<array.length; i++){\\n            array[i] = new StringBuilder();            \\n        }\\n        \\n        //do z type order\\n        int direction = 1;//initial increase order\\n        int index = 0; //index of different arrays\\n        for(char ch : s.toCharArray()){//traverse each char of s\\n            array[index].append(ch);\\n            index += direction;\\n            if(index ==0 || index == numRows -1) direction = -direction;// if need to change dir\\n        }\\n        //connect in order \\n        StringBuilder res = new StringBuilder();\\n        for(int j =0 ;j< array.length;j++) res.append(array[j]);\\n        \\n        return res.toString() ;\\n        \\n    }\\n}\\n\\n```",
                "solutionTags": [],
                "code": "```\\n/*\\nmain idea: build number = numRows array to store each line of s; then put them together.\\nkey : do \"Z\" type order; by set  a direction variable, when i is 0 or numRows-1 for array[i], change direction(-direction);\\n\\n*/\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if(s==null ||s.length()==0||numRows <2) return s;\\n        //store each row char\\n        StringBuilder[] array = new StringBuilder[numRows];\\n        for(int i = 0; i<array.length; i++){\\n            array[i] = new StringBuilder();            \\n        }\\n        \\n        //do z type order\\n        int direction = 1;//initial increase order\\n        int index = 0; //index of different arrays\\n        for(char ch : s.toCharArray()){//traverse each char of s\\n            array[index].append(ch);\\n            index += direction;\\n            if(index ==0 || index == numRows -1) direction = -direction;// if need to change dir\\n        }\\n        //connect in order \\n        StringBuilder res = new StringBuilder();\\n        for(int j =0 ;j< array.length;j++) res.append(array[j]);\\n        \\n        return res.toString() ;\\n        \\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3753,
                "title": "12-lines-concise-and-easy-understand-c-solution",
                "content": "    class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            string strs[numRows];\\n            if(numRows <= 1) return s;\\n            int row = 0, step = 1;\\n            for(int i = 0 ; i < s.size(); i++){\\n                strs[row].push_back(s[i]);\\n                if(row == numRows - 1) step = -1;\\n                if(row == 0) step = 1;\\n                row += step;\\n            }\\n            string res = \"\";\\n            for(auto str : strs) res = res + str;\\n            return res;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            string strs[numRows];\\n            if(numRows <= 1) return s;\\n            int row = 0, step = 1;\\n            for(int i = 0 ; i < s.size(); i++){\\n                strs[row].push_back(s[i]);\\n                if(row == numRows - 1) step = -1;\\n                if(row == 0) step = 1;\\n                row += step;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3799,
                "title": "my-python-solution",
                "content": "    def convert(self, s, numRows):\\n        if numRows <= 1:\\n            return s\\n\\n        lines = [\"\" for i in range(numRows)]\\n        index, step = 0, 1\\n\\n        for i in s:\\n            lines[index] += i\\n            index += step\\n            if index == 0 or index == numRows - 1:\\n                step = -step\\n        \\n        return \"\".join(lines)",
                "solutionTags": [
                    "Python"
                ],
                "code": "    def convert(self, s, numRows):\\n        if numRows <= 1:\\n            return s\\n\\n        lines = [\"\" for i in range(numRows)]\\n        index, step = 0, 1\\n\\n        for i in s:\\n            lines[index] += i\\n            index += step\\n            if index == 0 or index == numRows - 1:\\n                step = -step\\n        \\n        return \"\".join(lines)",
                "codeTag": "Python3"
            },
            {
                "id": 3805,
                "title": "sharing-a-pretty-easy-java-solution",
                "content": "    public String convert(String s, int numRows) {\\n            StringBuilder res = new StringBuilder();\\n            StringBuilder[] sb = new StringBuilder[numRows];\\n            for(int i=0;i<sb.length;i++)    sb[i] = new StringBuilder();\\n            int i=0;\\n            while(i<s.length()){\\n                for(int n=0;n<numRows&&i<s.length();n++) sb[n].append(s.charAt(i++));\\n                for(int n=0;n<numRows-2&&i<s.length();n++)    sb[numRows-2-n].append(s.charAt(i++));\\n            }\\n            for(StringBuilder b: sb)    res.append(b);\\n            return res.toString();\\n        }\\nUnlike normal solution with i+=(numRows-i)*2-2 through line by line foreach i in numRows-1, but also with the last need to be the same gap as first line, this solution traverse as the order of input, and create a StringBuilder array for it.",
                "solutionTags": [
                    "Java"
                ],
                "code": "    public String convert(String s, int numRows) {\\n            StringBuilder res = new StringBuilder();\\n            StringBuilder[] sb = new StringBuilder[numRows];\\n            for(int i=0;i<sb.length;i++)    sb[i] = new StringBuilder();\\n            int i=0;\\n            while(i<s.length()){\\n                for(int n=0;n<numRows&&i<s.length();n++) sb[n].append(s.charAt(i++));\\n                for(int n=0;n<numRows-2&&i<s.length();n++)    sb[numRows-2-n].append(s.charAt(i++));\\n            }\\n            for(StringBuilder b: sb)    res.append(b);\\n            return res.toString();\\n        }\\nUnlike normal solution with i+=(numRows-i)*2-2 through line by line foreach i in numRows-1, but also with the last need to be the same gap as first line, this solution traverse as the order of input, and create a StringBuilder array for it.",
                "codeTag": "Unknown"
            },
            {
                "id": 3852,
                "title": "simpe-accepted-java-code",
                "content": "        public class Solution {\\n        public String convert(String s, int numRows) {\\n            String []lines=new String[numRows];\\n    \\t\\tfor (int i=0;i<numRows;i++){\\n    \\t\\t\\tlines[i]=\"\";\\n    \\t\\t}\\n    \\t\\tchar []a=s.toCharArray();\\n    \\t\\tint dir=-1;\\n    \\t\\tint row=0;\\n    \\t\\tfor (int i=0;i<a.length;i++){\\n    \\t\\t\\tlines[row]+=a[i];\\n    \\t\\t\\tif(row==0 || row==numRows-1)\\n    \\t\\t\\t\\tdir*=-1;\\n    \\t\\t\\trow+=dir;\\n    \\t\\t\\trow%=numRows;\\n    \\t\\t}\\n    \\t\\t\\t\\n    \\t\\tString res=\"\";\\n    \\t\\tfor (String line : lines)\\n    \\t\\t\\tres+=line;\\n    \\t\\treturn res;\\n    \\t\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public String convert(String s, int numRows) {\\n            String []lines=new String[numRows];\\n    \\t\\tfor (int i=0;i<numRows;i++){\\n    \\t\\t\\tlines[i]=\"\";\\n    \\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3882,
                "title": "simple-intuitive-c-code",
                "content": "the idea behind the code is very intuitive and easy to understand: store every character zigzagly in an array of strings which represent different rows. more importantly, you don't have to draw several cases to find the pattern. the down side is that it uses some extra space. but still O(n) space\\n\\n    class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            if (s == \"\" || numRows == 1) return s;\\n            vector<string> vecstr(numRows);\\n            string res;\\n            int bounce = 0, direct = 1;\\n            for (int i = 0; i<=s.size()-1; ++i) {\\n                vecstr[bounce].push_back(s[i]);\\n                if (bounce == numRows-1) direct = -1;\\n                else if (bounce == 0) direct = 1;\\n                bounce += direct;\\n            }\\n            for (int i = 0; i<=numRows-1; ++i) res += vecstr[i];\\n            return res;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        string convert(string s, int numRows) {\\n            if (s == \"\" || numRows == 1) return s;\\n            vector<string> vecstr(numRows);\\n            string res;\\n            int bounce = 0, direct = 1;\\n            for (int i = 0; i<=s.size()-1; ++i) {\\n                vecstr[bounce].push_back(s[i]);\\n                if (bounce == numRows-1) direct = -1;\\n                else if (bounce == 0) direct = 1;\\n                bounce += direct;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3881,
                "title": "fast-and-simple-solution-in-c-o-n-22ms",
                "content": "    ///nRows:2\\n    ///1,   3,  5   step: 2\\n    ///2,   4,  6   step: 2\\n    ///\\n    ///nRows:3\\n    ///1,       5,      9   step:   4\\n    ///2,   4,  6,  8,  10  step:2      2\\n    ///3,       7,      11  step:   4\\n    ///\\n    ///nRows:4\\n    ///1,           7,          13  step:   6\\n    ///2,       6,  8,      12, 14  step:4      2\\n    ///3,   5       9,  11,     15  step:2      4\\n    ///4,           10,         16  step:   6\\n    ///\\n    ///nRows:5\\n    ///1,               9,              17  step:   8\\n    ///2,           8,  10,         16, 18  step:6      2\\n    ///3,       7,      11,     15,     19  step:4      4\\n    ///4,   6,          12, 14,         20  step:2      6\\n    ///5,               13,             21  step:    8\\n    ///\\n    class Solution {\\n    public:\\n        string convert(string s, int nRows) {\\n            size_t len = s.size();\\n            if (nRows <= 1 || nRows >= len) { // Handle Special Case.\\n                return s;\\n            }\\n            const char* str = s.c_str();\\n            string* retval = new string();\\n            size_t maxStep = (nRows - 1) * 2;\\n            for (int r = 0; r < nRows; ++r) {\\n                size_t pos = r;\\n                if (0 == r || nRows - 1 == r) { // First Row And Last Row.\\n                    while (pos < len) {\\n                        retval->push_back(str[pos]);\\n                        pos += maxStep;\\n                    }\\n                } else { // Rows In The Middle.\\n                    size_t step = 2 * r;\\n                    while (pos < len) {\\n                        retval->push_back(str[pos]);\\n                        step = maxStep - step;\\n                        pos += step;\\n                    }\\n                }\\n            }\\n            return *retval;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        string convert(string s, int nRows) {\\n            size_t len = s.size();\\n            if (nRows <= 1 || nRows >= len) { // Handle Special Case.\\n                return s;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3734,
                "title": "c-solution-with-expl-on-memory-limit-exceeded-error-many-of-you-might-come-across",
                "content": " The cycle is 2*nRow -2.\\n Then from row to row, get the char with the cycle and also read the in-between char\\n\\n For example, ith row, the first value is s[i], the next should be s[i+cycle], then find the middle char, from the current index j,  j-i returns to the 0th row, and j-i +cycle get the next point at the 0th row, this value minus i will give the middle index,  so it is j+cycle -2*i\\n\\nNote: the memory limit exceeded error, is caused by the corner situation, where cycle=1. Pitch this out first.\\n\\n\\n\\n  \\n\\n     string convert(string s, int nRows) {\\n            \\n            int cycle=2*nRows -2;\\n            // pop the cycle=1 situation\\n            if(cycle<2)\\n            {\\n                return s;\\n            }\\n            string res;\\n            \\n            for(int i=0;i<nRows;++i)\\n            {\\n                for(int j=i;j<s.size();j+=cycle)\\n                {\\n                    res.push_back(s[j]);\\n                    \\n                    if(i>0 && i!=nRows-1 && (j+cycle-2*i <s.size()))\\n                    {\\n                        res.push_back(s[j+cycle-2*i]);\\n                    }\\n                }\\n                \\n            }\\n            \\n            return res;\\n            \\n        }",
                "solutionTags": [],
                "code": " The cycle is 2*nRow -2.\\n Then from row to row, get the char with the cycle and also read the in-between char\\n\\n For example, ith row, the first value is s[i], the next should be s[i+cycle], then find the middle char, from the current index j,  j-i returns to the 0th row, and j-i +cycle get the next point at the 0th row, this value minus i will give the middle index,  so it is j+cycle -2*i\\n\\nNote: the memory limit exceeded error, is caused by the corner situation, where cycle=1. Pitch this out first.\\n\\n\\n\\n  \\n\\n     string convert(string s, int nRows) {\\n            \\n            int cycle=2*nRows -2;\\n            // pop the cycle=1 situation\\n            if(cycle<2)\\n            {\\n                return s;\\n            }\\n            string res;\\n            \\n            for(int i=0;i<nRows;++i)\\n            {\\n                for(int j=i;j<s.size();j+=cycle)\\n                {\\n                    res.push_back(s[j]);\\n                    \\n                    if(i>0 && i!=nRows-1 && (j+cycle-2*i <s.size()))\\n                    {\\n                        res.push_back(s[j+cycle-2*i]);\\n                    }\\n                }\\n                \\n            }\\n            \\n            return res;\\n            \\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 4025,
                "title": "a-double-for-loop-code-with-o-n",
                "content": "seemd to be optimal, any comments?    \\n\\n\\n    public class Solution {\\n            public String convert(String s, int nRows) {\\n                int n = s.length();\\n                String str = new String();\\n                str=\"\";\\n                int space1 = 2*(nRows-1);\\n                int space2 =space1;\\n                if(nRows==1)\\n                return s;\\n                \\n                for(int i=0;i<nRows;i++){\\n                    for(int j=i;j<n;j=j+space1){\\n                        str+=s.charAt(j);\\n                        if(j+space2<n&&space2<space1&&space2>0)\\n                        str+=s.charAt(j+space2);\\n                    }\\n                    \\n                    space2-=2;\\n                    \\n                }\\n                \\n                return str;    \\n                    \\n                \\n                \\n            }\\n        }",
                "solutionTags": [],
                "code": "class Solution {\\n            public String convert(String s, int nRows) {\\n                int n = s.length();\\n                String str = new String();\\n                str=\"\";\\n                int space1 = 2*(nRows-1);\\n                int space2 =space1;\\n                if(nRows==1)\\n                return s;\\n                \\n                for(int i=0;i<nRows;i++){\\n                    for(int j=i;j<n;j=j+space1){\\n                        str+=s.charAt(j);\\n                        if(j+space2<n&&space2<space1&&space2>0)\\n                        str+=s.charAt(j+space2);\\n                    }",
                "codeTag": "Java"
            },
            {
                "id": 3994,
                "title": "expected-output-of-abcde-4",
                "content": "Hi,\\n   In the Zig Zag problem the expected output for ABCDE,4 is given as ABCED but I feel that it should be AEBCD. Could someone help me with this? Can someone clarify how to deal with even and odd number of rows? My Approach to the question is to make a matrix of the positions and then \"string\" them together.\\nSo for example if the input is `ABC,2` the matrix structure is expected to look like:\\n\\n     0  1\\n    0 A C\\n    1 B <blank>\\n\\nAlso in the example, `PAYPALISHIRING,3` stated in the problem itself, can be visualized as \\n\\n         0 1 2 3 4 5 6 \\n       0 P   A   H   N\\n       1 A P L S I I G\\n       2 Y   I   R\\n\\nMy question is in the even columns (0 ,2,4 etc) the number of entries is fixed by the second argument of the problem. Whereas the entries in the odd columns(1,3 etc) is ambiguous to me. In the above example the first P is placed at location (1,1) the other slots are blank.\\n\\nIf the same test case were to be modified as `PAYPALISHIRING,4` How would the matrix look like?\\n\\n         0 1 2 3 4 5 6 \\n       0 P ?  \\n       1 A ?\\n       2 Y ? \\n       3 P ?\\n\\nWhere would the next character come? Where would the blank spaces come? How is that decision made? Or is this a cumbersome approach?",
                "solutionTags": [],
                "code": "Hi,\\n   In the Zig Zag problem the expected output for ABCDE,4 is given as ABCED but I feel that it should be AEBCD. Could someone help me with this? Can someone clarify how to deal with even and odd number of rows? My Approach to the question is to make a matrix of the positions and then \"string\" them together.\\nSo for example if the input is `ABC,2` the matrix structure is expected to look like:\\n\\n     0  1\\n    0 A C\\n    1 B <blank>\\n\\nAlso in the example, `PAYPALISHIRING,3` stated in the problem itself, can be visualized as \\n\\n         0 1 2 3 4 5 6 \\n       0 P   A   H   N\\n       1 A P L S I I G\\n       2 Y   I   R\\n\\nMy question is in the even columns (0 ,2,4 etc) the number of entries is fixed by the second argument of the problem. Whereas the entries in the odd columns(1,3 etc) is ambiguous to me. In the above example the first P is placed at location (1,1) the other slots are blank.\\n\\nIf the same test case were to be modified as `PAYPALISHIRING,4` How would the matrix look like?\\n\\n         0 1 2 3 4 5 6 \\n       0 P ?  \\n       1 A ?\\n       2 Y ? \\n       3 P ?\\n\\nWhere would the next character come? Where would the blank spaces come? How is that decision made? Or is this a cumbersome approach?",
                "codeTag": "Unknown"
            },
            {
                "id": 4051564,
                "title": "simple-o-n-python-solution-for-zigzag-strings",
                "content": "# Intuition\\nThink of it like bouncing a ball: it goes down, hits the floor, and bounces back up. This is like our zigzag pattern with the string.\\n\\n# Approach\\n1. If we only have one row or more rows than letters, just give back the original word.\\n2. I used a jump thing to know if I should go up or down. If I\\'m at the top, I\\'ll go down. If I\\'m at the bottom, I\\'ll go up.\\n3. For each letter in the word, I put it in the right row and then decide if I should move up or down next.\\n4. After placing all the letters, I put all the rows together for the final word.\\n\\n# Complexity\\n- Time complexity:\\nIt\\'s pretty quick. It goes through the word once, so $$O(n)$$.\\n\\n- Space complexity:\\nI saved space. I only made room for the letters in the word, so $$O(n)$$ space.\\n\\n# Code\\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        if numRows == 1 or numRows >= len(s):\\n            return s\\n        result = [\\'\\'] * numRows\\n        row, jump = 0, 1\\n\\n        for char in s:\\n            result[row] += char\\n            if row == 0:\\n                jump = 1\\n            elif row == numRows - 1:\\n                jump = -1\\n            row += jump\\n        \\n        return \\'\\'.join(result)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        if numRows == 1 or numRows >= len(s):\\n            return s\\n        result = [\\'\\'] * numRows\\n        row, jump = 0, 1\\n\\n        for char in s:\\n            result[row] += char\\n            if row == 0:\\n                jump = 1\\n            elif row == numRows - 1:\\n                jump = -1\\n            row += jump\\n        \\n        return \\'\\'.join(result)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3136657,
                "title": "java-solution-simple-logic-runtime-7ms",
                "content": "# Approach\\nI follows simple logic to iterate over the string and store the characters in a ZigZag way. \\nMeaning : We will take an array of size `numRows` and we will store each characters in each of the array element by traversing the array in a top to down and vice-versa manner. \\n\\nExample : \\n\\n`string` : PAYPALISHIRING\\n`numRows` : 3\\n\\n\\nWe will store as :\\n`0th Index`:PAHN\\n`1st Index`:APLSIIG\\n`2nd Index`:YIR\\n\\nWe will iterate over the array as : 0,1,2,1,0,1,2,1,0,1,2,......\\n\\nThen by appending all the string elements, we\\'ll get our answer.\\nIn the program, I have used StringBuilder which is better than simple string concatenation.\\n\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        StringBuilder[] arr = new StringBuilder[numRows];\\n        int k = 0;\\n        boolean mode = true;\\n        for(int i = 0; i < numRows; i++){\\n            arr[i] = new StringBuilder(\"\");\\n        }\\n        for(int j = 0; j < s.length(); j++){\\n            if(mode){\\n                arr[k++].append(s.charAt(j));\\n            }\\n            else{\\n                arr[k--].append(s.charAt(j));\\n            }\\n            if(k == numRows){\\n                k = numRows - 2;\\n                mode = false;\\n            }\\n            if(k == -1){\\n                k = (k+2) % numRows;\\n                mode = true;\\n            }\\n        }\\n        StringBuilder ans = new StringBuilder(\"\");\\n        for(StringBuilder i : arr){\\n            ans.append(i.toString());\\n        }\\n        return ans.toString();\\n    }\\n}\\n\\n```\\n\\nI hope my approach is clear :)\\n\\nDo suggest me If any improvements or better approach is possible.\\n\\nThank You\\n\\n\\nPLEASE DO UPVOTE!! :)\\n",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        StringBuilder[] arr = new StringBuilder[numRows];\\n        int k = 0;\\n        boolean mode = true;\\n        for(int i = 0; i < numRows; i++){\\n            arr[i] = new StringBuilder(\"\");\\n        }\\n        for(int j = 0; j < s.length(); j++){\\n            if(mode){\\n                arr[k++].append(s.charAt(j));\\n            }\\n            else{\\n                arr[k--].append(s.charAt(j));\\n            }\\n            if(k == numRows){\\n                k = numRows - 2;\\n                mode = false;\\n            }\\n            if(k == -1){\\n                k = (k+2) % numRows;\\n                mode = true;\\n            }\\n        }\\n        StringBuilder ans = new StringBuilder(\"\");\\n        for(StringBuilder i : arr){\\n            ans.append(i.toString());\\n        }\\n        return ans.toString();\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3026668,
                "title": "readable-java-code",
                "content": "****Bold****# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\npublic String convert(String s, int numRows) {\\n    if(numRows<=1)return s;\\n    StringBuilder[] sb=new StringBuilder[numRows];\\n    for(int i=0;i<sb.length;i++){\\n        sb[i]=new StringBuilder(\"\");//init every sb element *important steps!!!\\n    }\\n    int incre=1;\\n    int index=0;\\n    for(int i=0;i<s.length();i++){\\n        sb[index].append(s.charAt(i));\\n        if(index==0){incre=1;}\\n        if(index==numRows-1){incre=-1;}\\n        index+=incre;\\n    }\\n    String re=\"\";\\n        for(int i=0;i<sb.length;i++){\\n            re+=sb[i];\\n         }\\n        return re.toString();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\npublic class Solution {\\npublic String convert(String s, int numRows) {\\n    if(numRows<=1)return s;\\n    StringBuilder[] sb=new StringBuilder[numRows];\\n    for(int i=0;i<sb.length;i++){\\n        sb[i]=new StringBuilder(\"\");//init every sb element *important steps!!!\\n    }\\n    int incre=1;\\n    int index=0;\\n    for(int i=0;i<s.length();i++){\\n        sb[index].append(s.charAt(i));\\n        if(index==0){incre=1;}\\n        if(index==numRows-1){incre=-1;}\\n        index+=incre;\\n    }\\n    String re=\"\";\\n        for(int i=0;i<sb.length;i++){\\n            re+=sb[i];\\n         }\\n        return re.toString();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2944737,
                "title": "simple-java-sol",
                "content": "\\n```\\nclass Solution {\\npublic String convert(String s, int numRows) {\\n    if(numRows==1) return s;\\n    int x = 2 * (numRows-1); // distance between pipes |/|/|...\\n    int len = s.length();\\n    char[] c = new char[len];\\n    int k =0;\\n    for(int i=0; i < numRows; i++)\\n    {\\n        for(int j=i;j<len;j=j+x)\\n        {\\n            c[k++] = s.charAt(j);\\n            if(i>0 && i<numRows-1 && j+x-2*i < len)\\n            {\\n                   c[k++] = s.charAt(j+x-2*i); // extra character between pipes\\n            }\\n        }\\n    }\\n    return new String(c);\\n}\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\npublic String convert(String s, int numRows) {\\n    if(numRows==1) return s;\\n    int x = 2 * (numRows-1); // distance between pipes |/|/|...\\n    int len = s.length();\\n    char[] c = new char[len];\\n    int k =0;\\n    for(int i=0; i < numRows; i++)\\n    {\\n        for(int j=i;j<len;j=j+x)\\n        {\\n            c[k++] = s.charAt(j);\\n            if(i>0 && i<numRows-1 && j+x-2*i < len)\\n            {\\n                   c[k++] = s.charAt(j+x-2*i); // extra character between pipes\\n            }\\n        }\\n    }\\n    return new String(c);\\n}\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2743573,
                "title": "java-solutions",
                "content": "public class Solution {\\n    public String convert(String s, int nRows) {\\n        String[] helper = new String[nRows];\\n        for (int i = 0; i < nRows; i ++){\\n            helper[i] = \"\";\\n        }\\n        int row = 0;\\n        int delta = 1;\\n        for (int i = 0; i < s.length(); i ++){\\n            char c = s.charAt(i);\\n            helper[row] += c;\\n            if (row == nRows - 1){\\n                delta = -1;\\n            }\\n            else if (row == 0){\\n                delta = 1;\\n            }\\n            row = row + delta;\\n            row = Math.max(0, row);\\n        }//for\\n        String result = \"\";\\n        for (int i = 0; i < nRows && s.length() > 0; i ++){\\n            result += helper[i];\\n        }\\n        return result;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public String convert(String s, int nRows) {\\n        String[] helper = new String[nRows];\\n        for (int i = 0; i < nRows; i ++){\\n            helper[i] = \"\";\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2401192,
                "title": "faster-easy-to-understand-c-code",
                "content": "* ***Approach 1 :- Brute Force, Using Array Of String***\\n\\n* ***Time Complexity :- O(N)***\\n\\n* ***Space Complexity :- O(N)***\\n\\n```\\nclass Solution {\\npublic:\\n    string convert(string str, int numRows) {\\n        \\n        int n = str.size();\\n        \\n        // edge case\\n        \\n        if(numRows == 1)\\n            return str;\\n      \\n        bool down = false;\\n        \\n        vector<string> arr(numRows, \"\");\\n        \\n        int curr_row = 0;\\n        \\n        for(int i = 0; i < n; i++)\\n        {\\n            // push into the corresponding row\\n            \\n            arr[curr_row].push_back(str[i]);\\n            \\n            // change the direction\\n            \\n            if(curr_row == 0 || curr_row == numRows - 1)\\n            {\\n                down = !down;\\n            }\\n            \\n            // if down == true, move downward\\n            \\n            if(down)\\n            {\\n                curr_row++;\\n            }\\n            \\n            // if down == false, move upward\\n            \\n            else\\n            {\\n                curr_row--;\\n            }     \\n        }\\n        \\n        // build the res\\n        \\n        string res = \"\";\\n        \\n        for(int i = 0; i < numRows; i++)\\n        {\\n            res += arr[i];\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string str, int numRows) {\\n        \\n        int n = str.size();\\n        \\n        // edge case\\n        \\n        if(numRows == 1)\\n            return str;\\n      \\n        bool down = false;\\n        \\n        vector<string> arr(numRows, \"\");\\n        \\n        int curr_row = 0;\\n        \\n        for(int i = 0; i < n; i++)\\n        {\\n            // push into the corresponding row\\n            \\n            arr[curr_row].push_back(str[i]);\\n            \\n            // change the direction\\n            \\n            if(curr_row == 0 || curr_row == numRows - 1)\\n            {\\n                down = !down;\\n            }\\n            \\n            // if down == true, move downward\\n            \\n            if(down)\\n            {\\n                curr_row++;\\n            }\\n            \\n            // if down == false, move upward\\n            \\n            else\\n            {\\n                curr_row--;\\n            }     \\n        }\\n        \\n        // build the res\\n        \\n        string res = \"\";\\n        \\n        for(int i = 0; i < numRows; i++)\\n        {\\n            res += arr[i];\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2348327,
                "title": "simple-c-python-java-javascript-here",
                "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "JavaScript"
                ],
                "code": "",
                "codeTag": "Unknown"
            },
            {
                "id": 2262823,
                "title": "rust-o-n-elevator-thinking-time-100-faster",
                "content": "Think this as an elevator and each row is the floor of a building. Whenever the elevator reaches the top floor or the ground floor, it will redirect. \\n```\\nimpl Solution {\\n pub fn convert(s: String, num_rows: i32) -> String {\\n  let mut floors: Vec<String> = vec![String::from(\"\"); num_rows as usize];\\n\\n  if num_rows < 2 {\\n   return s.into();\\n  }\\n\\n  let mut floor = 0;\\n  let mut down: bool = true;\\n\\n  for c in s.chars() {\\n   floors[floor as usize].push(c);\\n   floor += if down { 1 } else { -1 };\\n   down = down == (floor > 0 && floor < num_rows - 1);\\n  }\\n\\n  floors.concat()\\n }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n pub fn convert(s: String, num_rows: i32) -> String {\\n  let mut floors: Vec<String> = vec![String::from(\"\"); num_rows as usize];\\n\\n  if num_rows < 2 {\\n   return s.into();\\n  }\\n\\n  let mut floor = 0;\\n  let mut down: bool = true;\\n\\n  for c in s.chars() {\\n   floors[floor as usize].push(c);\\n   floor += if down { 1 } else { -1 };\\n   down = down == (floor > 0 && floor < num_rows - 1);\\n  }\\n\\n  floors.concat()\\n }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2082706,
                "title": "c-new-method-easy-to-follow",
                "content": "```\\nPLEASE UPVOTE IF THIS HELPED YOU : )\\n```\\nFor row 1 and row N,  elements are at a difference of 2*(n-1) in terms of index values from the original string.\\ne.g for  numRows = 4 \"PAYPALISHIRING\"\\n```\\n0          6          12\\n1      5   7      11  13\\n2  4       8  10\\n3          9 \\n```\\nAbove is a representation of zig zag pattern in terms of indexes in the provided string.\\n\\nThe difference between columns in a row which do not consist of diagonal elements form a series with a difference of **2*n-1** between each element in series.\\nin above example, the difference between columns which do not contain diagonal elements is:\\n2*(4-1) = 2*3 = 6,  e.g \\n**Row 1**    0,  6(0+6),  12(6+6)\\n**Row 2**   1,  7(1+6),  13(7+6)\\n**Row 3**   2,  8(2+6)\\n\\n\\t\\t \\nNow for diagonal elements, the difference between each diagonal element in a row is\\nalso the same as above , i.e 2*(n-1) \\ne.g For the following diagonal series :\\nIn **row 2** ( 5, 11 ) difference is 6.\\nIn **row 3**  ( 4, 10 ) difference is 6.\\n\\nNow we know that the difference is same for any two consecutive diagonal elements ( 5, 11 in row 2) or non-diagonal elements ( 6, 12 in row 1).\\n\\nThe only thing we need to calculate is the first non diagonal element (like 5 in row 2,  4 in row 3 etc.) This can be calculated by adding the following difference to the first non diagonal element in the row : \\n\\n**(The difference in Non diagonal series(i.e 0,6,12  or 1,7,13 or 2,8) ) - 2*(currentRow - 1)**\\n\\nso for diagonal series in row 1 (i.e 5,11) if we just initialize this row with the first element of this series and keep on adding the diagonal series difference, we will get this series.\\n\\n**So in conclusion what we have to do is :**\\n\\n1) For row 1 and row N, initialize the row with element at index [row-1]\\n2) For other rows , initialize the row with element at index [row -1] and  element at index    [ (row-1) + {(The difference in non diagonal series(i.e 0,6,12  or 1,7,13 or 2,8) ) - 2*(currentRow - 1)} ]\\n3) Now we find add the series difference (2*(n-1)) alternatively to the first(non-diagonal) element and second element\\ne.g for row 2, initialize it with  1 and 5\\n\\t\\t\\tKeep on adding the difference, i.e 6 , first to 1 then to 5\\n\\t\\t\\tWe get, 1,  5,  7(1+6), 11(5+6), 13(7+6)\\n\\n4) Make checks that index dont exceed (Total length - difference)\\n\\n**C++ CODE**\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int n) {\\n        if(n==1 || s.size()<=n || s.size()==1 || s.size()==2){\\n            return s;\\n        }\\n        int l = s.size();\\n        string ans = \"\";\\n        int diff = 2 * (n - 1);\\n\\n        // row loop\\n        for (int i = 1; i <= n; i++)\\n        {\\n            ans.push_back(s[i - 1]);\\n            if (i == 1 || i == n)\\n            {\\n                int x = i - 1;\\n                while (x < l - diff)\\n                {\\n                    x += diff;\\n                    ans.push_back(s[x]);\\n                }\\n            }\\n            else\\n            {\\n                int new_Diff = diff - 2 * (i - 1);\\n                int p1 = i - 1;\\n                int p2 = p1 + new_Diff;\\n                if (p1 > l - 1 || p2 > l - 1)\\n                {\\n                    continue;\\n                }\\n                ans.push_back(s[p2]);\\n                bool flag = true;\\n                while (p2 < l - diff || p1 < l - diff)\\n                {\\n                    if (p1 < l-diff && flag == true)\\n                    {\\n                        p1 += diff;\\n                        ans.push_back(s[p1]);\\n                        flag = false;\\n                    }\\n                    if (p2 < l-diff && flag == false)\\n                    {\\n                        p2 += diff;\\n                        ans.push_back(s[p2]);\\n                        flag = true;\\n                    }\\n                }\\n            }\\n        }\\n    \\n        return ans;\\n    }\\n};\\n```\\n\\n",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nPLEASE UPVOTE IF THIS HELPED YOU : )\\n```\n```\\n0          6          12\\n1      5   7      11  13\\n2  4       8  10\\n3          9 \\n```\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int n) {\\n        if(n==1 || s.size()<=n || s.size()==1 || s.size()==2){\\n            return s;\\n        }\\n        int l = s.size();\\n        string ans = \"\";\\n        int diff = 2 * (n - 1);\\n\\n        // row loop\\n        for (int i = 1; i <= n; i++)\\n        {\\n            ans.push_back(s[i - 1]);\\n            if (i == 1 || i == n)\\n            {\\n                int x = i - 1;\\n                while (x < l - diff)\\n                {\\n                    x += diff;\\n                    ans.push_back(s[x]);\\n                }\\n            }\\n            else\\n            {\\n                int new_Diff = diff - 2 * (i - 1);\\n                int p1 = i - 1;\\n                int p2 = p1 + new_Diff;\\n                if (p1 > l - 1 || p2 > l - 1)\\n                {\\n                    continue;\\n                }\\n                ans.push_back(s[p2]);\\n                bool flag = true;\\n                while (p2 < l - diff || p1 < l - diff)\\n                {\\n                    if (p1 < l-diff && flag == true)\\n                    {\\n                        p1 += diff;\\n                        ans.push_back(s[p1]);\\n                        flag = false;\\n                    }\\n                    if (p2 < l-diff && flag == false)\\n                    {\\n                        p2 += diff;\\n                        ans.push_back(s[p2]);\\n                        flag = true;\\n                    }\\n                }\\n            }\\n        }\\n    \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1980759,
                "title": "java-c-python-javascript-kotlin-o-n-time-beats-99-97-memory-speed-0ms-april-2022",
                "content": "***Java***\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows==1)return s;\\n        StringBuilder builder = new StringBuilder();\\n        for (int i=1;i<=numRows;i++){\\n            int ind = i-1;\\n            boolean up = true;\\n            while (ind < s.length()){\\n                builder.append(s.charAt(ind));\\n                if (i==1){\\n                    ind += 2*(numRows-i);\\n                } else if (i==numRows){\\n                    ind += 2*(i-1);\\n                } else {\\n                    ind += up ? 2*(numRows-i) : 2*(i-1);\\n                    up=!up;\\n                }\\n            }\\n        }\\n        return builder.toString();\\n    }\\n}\\n```\\n\\n***C++***\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans;\\n        vector <string> tmp(numRows);                                                         //create strings for each row\\n        int i=0, n=s.size();\\n        while(i<n){                                      \\n            for(int j=0;j<numRows && i<n; j++, i++) tmp[j] += s[i];               //add for our strings character when we move down\\n            for(int j=numRows - 2;j>0 && i<n; j--, i++) tmp[j] += s[i];            //add for our strings character when we move up exept first and last string\\n        }\\n        for(int j=0;j<numRows; j++) ans += tmp[j];                                       //combain together our strings\\n        return ans;\\n    }\\n};\\n```\\n\\n***Python***\\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        if numRows == 1 or numRows >= len(s):\\n            return s\\n\\n        L = [\\'\\'] * numRows\\n        index, step = 0, 1\\n\\n        for x in s:\\n            L[index] += x\\n            if index == 0:\\n                step = 1\\n            elif index == numRows -1:\\n                step = -1\\n            index += step\\n\\n        return \\'\\'.join(L)\\n```\\n\\n***JavaScript***\\n```\\nvar convert = function(s, numRows) {\\n  let result = [];\\n  let row = 0;\\n  let goingUp = false;\\n  for (let i = 0; i < s.length; i++) {\\n    result[row] = (result[row] || \\'\\') + s[i]; // append letter to active row\\n    if (goingUp) {\\n      row--;\\n      if (row === 0) goingUp = false; // reverse direction if goingUp and reaching top\\n    } else {\\n      row++;\\n      if (row === numRows - 1) goingUp = true; // reverse direction after reaching bottom\\n    }\\n    \\n  }\\n  return result.join(\\'\\');\\n};\\n```\\n\\n***Kotlin***\\n```\\nclass Solution {\\n    fun convert(s: String, numRows: Int): String {\\n    val rows = MutableList(numRows) { \"\" }\\n    var idx = 0\\n    first@ while (true) {\\n        for (iMod in 0 until numRows) {\\n            rows[iMod] = rows[iMod] + s[idx++]\\n            if (idx == s.length) break@first\\n        }\\n        for (iMod in numRows - 2  downTo  1) {\\n            rows[iMod] = rows[iMod] + s[idx++]\\n            if (idx == s.length) break@first\\n        }\\n    }\\n    return rows.joinToString(\"\")\\n}\\n}\\n```\\n\\n***Consider upvote if useful!***",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "C",
                    "JavaScript",
                    "Kotlin",
                    "Combinatorics"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows==1)return s;\\n        StringBuilder builder = new StringBuilder();\\n        for (int i=1;i<=numRows;i++){\\n            int ind = i-1;\\n            boolean up = true;\\n            while (ind < s.length()){\\n                builder.append(s.charAt(ind));\\n                if (i==1){\\n                    ind += 2*(numRows-i);\\n                } else if (i==numRows){\\n                    ind += 2*(i-1);\\n                } else {\\n                    ind += up ? 2*(numRows-i) : 2*(i-1);\\n                    up=!up;\\n                }\\n            }\\n        }\\n        return builder.toString();\\n    }\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans;\\n        vector <string> tmp(numRows);                                                         //create strings for each row\\n        int i=0, n=s.size();\\n        while(i<n){                                      \\n            for(int j=0;j<numRows && i<n; j++, i++) tmp[j] += s[i];               //add for our strings character when we move down\\n            for(int j=numRows - 2;j>0 && i<n; j--, i++) tmp[j] += s[i];            //add for our strings character when we move up exept first and last string\\n        }\\n        for(int j=0;j<numRows; j++) ans += tmp[j];                                       //combain together our strings\\n        return ans;\\n    }\\n};\\n```\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        if numRows == 1 or numRows >= len(s):\\n            return s\\n\\n        L = [\\'\\'] * numRows\\n        index, step = 0, 1\\n\\n        for x in s:\\n            L[index] += x\\n            if index == 0:\\n                step = 1\\n            elif index == numRows -1:\\n                step = -1\\n            index += step\\n\\n        return \\'\\'.join(L)\\n```\n```\\nvar convert = function(s, numRows) {\\n  let result = [];\\n  let row = 0;\\n  let goingUp = false;\\n  for (let i = 0; i < s.length; i++) {\\n    result[row] = (result[row] || \\'\\') + s[i]; // append letter to active row\\n    if (goingUp) {\\n      row--;\\n      if (row === 0) goingUp = false; // reverse direction if goingUp and reaching top\\n    } else {\\n      row++;\\n      if (row === numRows - 1) goingUp = true; // reverse direction after reaching bottom\\n    }\\n    \\n  }\\n  return result.join(\\'\\');\\n};\\n```\n```\\nclass Solution {\\n    fun convert(s: String, numRows: Int): String {\\n    val rows = MutableList(numRows) { \"\" }\\n    var idx = 0\\n    first@ while (true) {\\n        for (iMod in 0 until numRows) {\\n            rows[iMod] = rows[iMod] + s[idx++]\\n            if (idx == s.length) break@first\\n        }\\n        for (iMod in numRows - 2  downTo  1) {\\n            rows[iMod] = rows[iMod] + s[idx++]\\n            if (idx == s.length) break@first\\n        }\\n    }\\n    return rows.joinToString(\"\")\\n}\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1290602,
                "title": "simple-solution-using-math-observation",
                "content": "Solved using one simple observation about how index should be incremented\\nNo weird cases, no nested if statements, no boolean flags\\n```c++\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string result;\\n        if (numRows == 1){\\n            return s;\\n        }\\n        for (int row = 0; row < numRows; row++){\\n            int i = row;\\n            while (i < s.length()){\\n                result.push_back(s[i]);\\n                i += (numRows - i % (numRows - 1) - 1) * 2;\\n            }\\n        }\\n        return result;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```c++\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string result;\\n        if (numRows == 1){\\n            return s;\\n        }\\n        for (int row = 0; row < numRows; row++){\\n            int i = row;\\n            while (i < s.length()){\\n                result.push_back(s[i]);\\n                i += (numRows - i % (numRows - 1) - 1) * 2;\\n            }\\n        }\\n        return result;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 587347,
                "title": "golang-0ms-faster-than-100-of-submissions",
                "content": "\\n```\\nfunc convert(s string, numRows int) string {\\n\\tif numRows <= 1 {\\n\\t\\treturn s\\n\\t}\\n\\n\\t// character distance between columns\\n\\tcolStep := numRows + numRows - 2\\n\\n\\t// result\\n\\tss := make([]uint8, len(s), len(s))\\n\\t// fill result with dots to make debugging easier\\n\\t//for i := 0; i < len(ss); i++ {\\n\\t//\\tss[i] = \\'.\\'\\n\\t//}\\n\\n\\t// diagStep is distance from column to diagonal value.\\n\\t// Reduces by two for each row\\n\\tdiagStep := colStep - 2\\n\\n\\t// i = position to write to in ss\\n\\ti := 0\\n\\tfor row := 0; row < numRows; row = row + 1 {\\n\\t\\t// does this row have diagonal cells?\\n\\t\\tdiag := row > 0 && row < numRows-1\\n\\t\\tfor j := row; j < len(ss); j += colStep {\\n\\t\\t\\tss[i] = s[j] // column value\\n\\t\\t\\ti += 1\\n\\t\\t\\tif diag && j+diagStep < len(s) {\\n\\t\\t\\t\\tss[i] = s[j+diagStep] // diagonal value\\n\\t\\t\\t\\ti += 1\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif diag {\\n\\t\\t\\tdiagStep -= 2\\n\\t\\t}\\n\\t}\\n\\n\\treturn string(ss)\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc convert(s string, numRows int) string {\\n\\tif numRows <= 1 {\\n\\t\\treturn s\\n\\t}\\n\\n\\t// character distance between columns\\n\\tcolStep := numRows + numRows - 2\\n\\n\\t// result\\n\\tss := make([]uint8, len(s), len(s))\\n\\t// fill result with dots to make debugging easier\\n\\t//for i := 0; i < len(ss); i++ {\\n\\t//\\tss[i] = \\'.\\'\\n\\t//}\\n\\n\\t// diagStep is distance from column to diagonal value.\\n\\t// Reduces by two for each row\\n\\tdiagStep := colStep - 2\\n\\n\\t// i = position to write to in ss\\n\\ti := 0\\n\\tfor row := 0; row < numRows; row = row + 1 {\\n\\t\\t// does this row have diagonal cells?\\n\\t\\tdiag := row > 0 && row < numRows-1\\n\\t\\tfor j := row; j < len(ss); j += colStep {\\n\\t\\t\\tss[i] = s[j] // column value\\n\\t\\t\\ti += 1\\n\\t\\t\\tif diag && j+diagStep < len(s) {\\n\\t\\t\\t\\tss[i] = s[j+diagStep] // diagonal value\\n\\t\\t\\t\\ti += 1\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif diag {\\n\\t\\t\\tdiagStep -= 2\\n\\t\\t}\\n\\t}\\n\\n\\treturn string(ss)\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 451523,
                "title": "simple-functional-c-solution-with-explanation-o-n",
                "content": "**Code should be self-explanatory, further explanation is below**\\n```\\npublic class Solution {\\n\\n\\t///Generates an infinite sequence oscillating between two numbers\\n\\t///<example>(1,4): [1,2,3,4,3,2,1,2,3,4,...]</example>\\n\\tpublic static IEnumerable<int> InfiniteOscillator(int start, int end)\\n\\t{\\n\\t\\twhile (true)\\n\\t\\t{\\n\\t\\t\\tfor (int i = start; i <= end; i++)  yield return i;   //[start..end]\\n\\t\\t\\tfor (int i = end - 1; i > start; i--) yield return i; //[end-1..start-1], backwards excluding start and end\\n\\t\\t}\\n\\t}\\n\\t\\n\\t//The zigzag pattern moves down the rows to the bottom, then back up to the top and repeats\\n\\t//Capture the pattern for a given rowCount\\n\\tpublic static IEnumerable<int> ZigZagRowIndexGenerator(int rowCount) => InfiniteOscillator(1, rowCount);\\n\\n\\tpublic string Convert(string s, int numRows)\\n\\t{\\n\\t\\t//Generate an infinite sequence representing the row index in the zigzag seqeuence\\n\\t\\t//Example: numRows: 3 -> [1,2,3,2,1,2,3,...]\\n\\t\\tvar rowIndexGenerator = ZigZagRowIndexGenerator(numRows);\\n\\n\\t\\t//For each character, obtain the row index\\n\\t\\t//(\"SUPER\", count: 3) -> [(S,1) (U,2) (P,3) (E,2) (R,1)]\\n\\t\\tvar indexedByRow = s.Zip(rowIndexGenerator, Tuple.Create).ToList();\\n\\n\\t\\t//Bucket the input \\n\\t\\t//[(S,1) (U,2) (P,3) (E,2) (R,1)] -> { 1:[\\'S\\',\\'R\\'], 2:[\\'U\\',\\'E\\'], 3:[\\'P\\'] }\\n\\t\\tvar bucketedByRow = indexedByRow.ToLookup(x => x.Item2, x => x.Item1);\\n\\n\\t\\t//Loop through each of the buckets above and iterate the contents, providing the data in per-row order\\n\\t\\tStringBuilder ret = new StringBuilder();\\n\\t\\tfor(int row = 1; row <= numRows; row++)\\n\\t\\t{\\n\\t\\t    //The characters for the provided row index in original order (or empty if none exist)\\n\\t\\t    char[] charsForRow = bucketedByRow[row].ToArray();\\n\\t\\t\\tret.Append(charsForRow);\\n\\t\\t}\\n\\t\\treturn ret.ToString();\\n\\t\\t//OR:\\n\\t\\t//return new string(Enumerable.Range(1, numRows).SelectMany(x => bucketedByRow[x]).ToArray());\\n\\t}\\n}\\n```\\n\\n**ZigZag Structure**\\nA zigzag is a repeating pattern, its structure only depends on the numRows parameter:\\n\\n**numRows: 3**\\n```\\n1   1   1 \\n2 4 2 4   \\n3   3     \\n```\\n**numRows: 4**\\n```\\n1     1      1\\n2   6 2    6\\n3 5   3  5\\n4     4\\n```\\n----\\n\\nWe can break the pattern down further if we want to obtain the row index of the sequence. It turns out to oscillate from 1..numRows..2\\n\\n**numRows: 3**\\n```\\n1   1   1 \\n2 2 2 2   \\n3   3     \\n```\\n**Repeating: [1,2,3,2]**\\n\\n----\\n\\n**numRows: 4**\\n```\\n1     1      1\\n2   2 2    2\\n3 3   3  3\\n4     4\\n```\\n**Repeating: [1,2,3,4,3,2]**\\n\\n----\\n\\nAssume the sequence above is infinite, if we iterate this at the same time as the string, we get a list of tuples: **[(character, rowIndex)]**\\n\\n**[1,2,3,2,...] + \"SUPER\" -> [(S,1) (U,2) (P,3) (E,2) (R,1)]**\\n\\nNow we want to iterate this collection by the row index, then by the order in the collection to get from **[(S,1) (U,2) (P,3) (E,2) (R,1)]** to **\"SRUEP\"**\\n\\nWe need to perform a sort by row index on the above collection (and the sort must be stable). Comparison-based sorts are O(n log n), but as the number of buckets is small and known, we can use an O(numRows) bucket sort approximation:\\n\\n**[(S,1) (U,2) (P,3) (E,2) (R,1)] -> { 1:[\\'S\\',\\'R\\'], 2:[\\'U\\',\\'E\\'], 3:[\\'P\\'] }**\\n\\nAnd finally, by iterating the buckets in order and combining the results:\\n\\n**(1: \\'S\\' + \\'R\\') + (2: \\'U\\' +\\'E\\') + (3: \\'P\\') -> SRUEP**",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n\\n\\t///Generates an infinite sequence oscillating between two numbers\\n\\t///<example>(1,4): [1,2,3,4,3,2,1,2,3,4,...]</example>\\n\\tpublic static IEnumerable<int> InfiniteOscillator(int start, int end)\\n\\t{\\n\\t\\twhile (true)\\n\\t\\t{\\n\\t\\t\\tfor (int i = start; i <= end; i++)  yield return i;   //[start..end]\\n\\t\\t\\tfor (int i = end - 1; i > start; i--) yield return i; //[end-1..start-1], backwards excluding start and end\\n\\t\\t}\\n\\t}\\n\\t\\n\\t//The zigzag pattern moves down the rows to the bottom, then back up to the top and repeats\\n\\t//Capture the pattern for a given rowCount\\n\\tpublic static IEnumerable<int> ZigZagRowIndexGenerator(int rowCount) => InfiniteOscillator(1, rowCount);\\n\\n\\tpublic string Convert(string s, int numRows)\\n\\t{\\n\\t\\t//Generate an infinite sequence representing the row index in the zigzag seqeuence\\n\\t\\t//Example: numRows: 3 -> [1,2,3,2,1,2,3,...]\\n\\t\\tvar rowIndexGenerator = ZigZagRowIndexGenerator(numRows);\\n\\n\\t\\t//For each character, obtain the row index\\n\\t\\t//(\"SUPER\", count: 3) -> [(S,1) (U,2) (P,3) (E,2) (R,1)]\\n\\t\\tvar indexedByRow = s.Zip(rowIndexGenerator, Tuple.Create).ToList();\\n\\n\\t\\t//Bucket the input \\n\\t\\t//[(S,1) (U,2) (P,3) (E,2) (R,1)] -> { 1:[\\'S\\',\\'R\\'], 2:[\\'U\\',\\'E\\'], 3:[\\'P\\'] }\\n\\t\\tvar bucketedByRow = indexedByRow.ToLookup(x => x.Item2, x => x.Item1);\\n\\n\\t\\t//Loop through each of the buckets above and iterate the contents, providing the data in per-row order\\n\\t\\tStringBuilder ret = new StringBuilder();\\n\\t\\tfor(int row = 1; row <= numRows; row++)\\n\\t\\t{\\n\\t\\t    //The characters for the provided row index in original order (or empty if none exist)\\n\\t\\t    char[] charsForRow = bucketedByRow[row].ToArray();\\n\\t\\t\\tret.Append(charsForRow);\\n\\t\\t}\\n\\t\\treturn ret.ToString();\\n\\t\\t//OR:\\n\\t\\t//return new string(Enumerable.Range(1, numRows).SelectMany(x => bucketedByRow[x]).ToArray());\\n\\t}\\n}\\n```\n```\\n1   1   1 \\n2 4 2 4   \\n3   3     \\n```\n```\\n1     1      1\\n2   6 2    6\\n3 5   3  5\\n4     4\\n```\n```\\n1   1   1 \\n2 2 2 2   \\n3   3     \\n```\n```\\n1     1      1\\n2   2 2    2\\n3 3   3  3\\n4     4\\n```",
                "codeTag": "Java"
            },
            {
                "id": 209313,
                "title": "c-o-n-solution-16ms-very-concise",
                "content": "The zigzag print always goes down ```numRows-1``` times and then up ```numRows-1``` times. The next multiple of ```numRows-1``` is the next pivot, so starting from each row, add twice that distance to go to the next character in the row.\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1) return s;\\n        string ans = \"\";\\n        for (int i=0; i<numRows; i++) {\\n            int j=i;\\n            while (j < s.size()) {\\n                ans.push_back(s[j]);\\n                j += 2*(numRows-1 - (j % (numRows-1)));\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```numRows-1```\n```numRows-1```\n```numRows-1```\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if (numRows == 1) return s;\\n        string ans = \"\";\\n        for (int i=0; i<numRows; i++) {\\n            int j=i;\\n            while (j < s.size()) {\\n                ans.push_back(s[j]);\\n                j += 2*(numRows-1 - (j % (numRows-1)));\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3596,
                "title": "easy-understand-solution-by-python",
                "content": "my python solution\\nidea:\\n```\\n0 _ _ _ _ _ 6     => 6,6,6...\\n_ 1 _ _ _ 5 _ 7  => (6-2), (6-4), (6-2) ...\\n_ _ 2 _ 4 _ _ _ 8 => (6-4), (6-2), (6-4) ...\\n_ _ _ 3 _ _ _ _ _ 9 =>6,6,6,6\\n```\\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        strLen = len(s)\\n        if numRows == 1 or strLen == 1 or strLen == 0:\\n            return s\\n\\n        ans = ''\\n        l = 2 * (numRows - 1)\\n        for i in range(numRows):\\n            j = i\\n            r = i * 2\\n            while j < strLen:\\n                ans += s[j]\\n                # first and last\\n                if i == 0 or i == numRows - 1:\\n                    j += l\\n                else:\\n                    r = l - r\\n                    j += r\\n        return ans\\n```",
                "solutionTags": [],
                "code": "```\\n0 _ _ _ _ _ 6     => 6,6,6...\\n_ 1 _ _ _ 5 _ 7  => (6-2), (6-4), (6-2) ...\\n_ _ 2 _ 4 _ _ _ 8 => (6-4), (6-2), (6-4) ...\\n_ _ _ 3 _ _ _ _ _ 9 =>6,6,6,6\\n```\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        strLen = len(s)\\n        if numRows == 1 or strLen == 1 or strLen == 0:\\n            return s\\n\\n        ans = ''\\n        l = 2 * (numRows - 1)\\n        for i in range(numRows):\\n            j = i\\n            r = i * 2\\n            while j < strLen:\\n                ans += s[j]\\n                # first and last\\n                if i == 0 or i == numRows - 1:\\n                    j += l\\n                else:\\n                    r = l - r\\n                    j += r\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3623,
                "title": "python-solution-o-n-with-picture-to-understand",
                "content": "Hello guys,it's my first time to post my code and  I'd like do something helpful to you  :)\\n\\nAt first, we think about this question. If we paint the characters in our paper one by one, for a certain length and numrows.the showing just like a saw\\n![0_1470974866774_1 (2).png](/uploads/files/1470974871164-1-2.png) \\nIn this picture, every line means a word of output string. and the formulation is about the index and which word the character belongs to.\\n\\nSecondly, we serialize every word to the left and we can draw a saw like this.![0_1470974286263_2.png](/uploads/files/1470974290134-2.png) \\n\\n\\nThirdly,we map each character to wordlist[0->n-1], which means the character belongs to.\\nFor each s'index i, we can mod to (2n-2)  for getting his position to certatin the belonging word.\\n\\nTo certain which word one character belongs to,we should dicuss the different situtation. For the index i, when i<=(n-1), means the direction of i is up to down straightly. Oppositely, when i >(n-1), the i is down to up sideling. But, all we do is get the position of i , so we should do something to distinguish this.\\n\\nThe code like this:\\n```\\np = i%(2*n-2) \\nif p>(n-1): \\n\\tp=(2*n-2)-p                \\nelse: \\n\\tp=p \\n```\\n\\nLastly, we statistics the word list and just output the result is fine.\\nSo, the code will be like this \\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        if numRows==1:\\n    \\t\\treturn s\\n    \\tlength=len(s)\\n    \\twordlist=[\"\"]*numRows\\n    \\tcharclass=[0]*length\\n    \\tfor i in range(length):\\n    \\t\\tcharclass[i] = i%(2*numRows-2)\\n    \\t\\tif charclass[i] > numRows-1:\\n    \\t\\t\\tcharclass[i]=2*numRows-2-charclass[i] \\n    \\tfor i in range(length):\\n    \\t\\twordlist[charclass[i]]+=(s[i])\\n    \\treturn \"\".join(wordlist)\\n'''\\n```\\nIt costs some time to think about the arrangement of the characters. But for one thing important is that  when we get the length and numrows, the arrangement is settled.We just to find out the align and mapping information is fine.\\nThe algorithms time complexity is O(N)  and space complexity is O(N) too.",
                "solutionTags": [],
                "code": "```\\np = i%(2*n-2) \\nif p>(n-1): \\n\\tp=(2*n-2)-p                \\nelse: \\n\\tp=p \\n```\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        if numRows==1:\\n    \\t\\treturn s\\n    \\tlength=len(s)\\n    \\twordlist=[\"\"]*numRows\\n    \\tcharclass=[0]*length\\n    \\tfor i in range(length):\\n    \\t\\tcharclass[i] = i%(2*numRows-2)\\n    \\t\\tif charclass[i] > numRows-1:\\n    \\t\\t\\tcharclass[i]=2*numRows-2-charclass[i] \\n    \\tfor i in range(length):\\n    \\t\\twordlist[charclass[i]]+=(s[i])\\n    \\treturn \"\".join(wordlist)\\n'''\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3601,
                "title": "in-fact-this-is-a-math-problem-java-code",
                "content": "    public String convert(String s, int numRows) {\\n        if (numRows <= 1) {\\n            return s;\\n        }\\n        int n = s.length();\\n        int step = 2 * numRows - 2;\\n        StringBuilder sb = new StringBuilder();\\n        for (int i = 0; i < numRows; i++) {\\n            for (int j = i; j < n; j += step) {\\n                sb.append(s.charAt(j));\\n                if (i != 0 && i != numRows - 1 && j + step - 2 * i < n) {\\n                    sb.append(s.charAt(j + step - 2 * i));\\n                }\\n            }\\n        }\\n        return sb.toString();\\n    }",
                "solutionTags": [],
                "code": "    public String convert(String s, int numRows) {\\n        if (numRows <= 1) {\\n            return s;\\n        }\\n        int n = s.length();\\n        int step = 2 * numRows - 2;\\n        StringBuilder sb = new StringBuilder();\\n        for (int i = 0; i < numRows; i++) {\\n            for (int j = i; j < n; j += step) {\\n                sb.append(s.charAt(j));\\n                if (i != 0 && i != numRows - 1 && j + step - 2 * i < n) {\\n                    sb.append(s.charAt(j + step - 2 * i));\\n                }\\n            }\\n        }\\n        return sb.toString();\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3704,
                "title": "7ms-java-solution",
                "content": "    public class Solution {\\n        public String convert(String s, int numRows) {\\n            if (numRows == 1) {\\n                return s;\\n            }\\n            StringBuilder builder = new StringBuilder();\\n            int adder = 2*numRows-2;\\n            for (int i=0; i<s.length(); i+=adder) {\\n                builder.append(s.charAt(i));\\n            }\\n            for (int i=1; i<numRows-1; ++i) {\\n                int j=i;\\n                while(j<s.length()) {\\n                    builder.append(s.charAt(j));\\n                    int next = 2*numRows-2*i-2+j;\\n                    if (next < s.length())\\n                        builder.append(s.charAt(next));\\n                    else {\\n                        break;\\n                    }\\n                    j += adder;\\n                }\\n            }\\n            for (int i=numRows-1; i<s.length(); i+=adder) {\\n                builder.append(s.charAt(i));\\n            }\\n            return builder.toString();\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public String convert(String s, int numRows) {\\n            if (numRows == 1) {\\n                return s;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3785,
                "title": "my-16ms-c-solution",
                "content": "    string convert(string s, int numRows) {\\n    \\tif(numRows ==1 || numRows> s.size()) return s;\\n\\n    \\tint i=1,j=0,k=0,dis=(numRows-1)*2;\\n    \\tstring res=\"\";\\n    \\n    \\twhile(i<=numRows){\\n    \\t\\tj=i-1;\\n    \\t\\tif(i==numRows||i==1){\\n    \\t\\t\\twhile(j<s.size()){\\n    \\t\\t\\t\\tres += s[j];\\n    \\t\\t\\t\\tj+=dis;\\n    \\t\\t\\t}\\n    \\t\\t\\ti++;\\n    \\t\\t}else{ \\n    \\t\\t\\tk=(i-1)*2;\\n    \\t\\t\\twhile(j<s.size()){\\n    \\t\\t\\t\\tres += s[j];\\n    \\t\\t\\t\\tk = dis-k;\\n    \\t\\t\\t\\tj += k;\\n    \\t\\t\\t}\\n    \\t\\t\\ti++;\\n    \\t\\t}\\n    \\t}\\n    \\treturn res;\\n    }",
                "solutionTags": [],
                "code": "    string convert(string s, int numRows) {\\n    \\tif(numRows ==1 || numRows> s.size()) return s;\\n\\n    \\tint i=1,j=0,k=0,dis=(numRows-1)*2;\\n    \\tstring res=\"\";\\n    \\n    \\twhile(i<=numRows){\\n    \\t\\tj=i-1;\\n    \\t\\tif(i==numRows||i==1){\\n    \\t\\t\\twhile(j<s.size()){\\n    \\t\\t\\t\\tres += s[j];\\n    \\t\\t\\t\\tj+=dis;\\n    \\t\\t\\t}\\n    \\t\\t\\ti++;\\n    \\t\\t}else{ \\n    \\t\\t\\tk=(i-1)*2;\\n    \\t\\t\\twhile(j<s.size()){\\n    \\t\\t\\t\\tres += s[j];\\n    \\t\\t\\t\\tk = dis-k;\\n    \\t\\t\\t\\tj += k;\\n    \\t\\t\\t}\\n    \\t\\t\\ti++;\\n    \\t\\t}\\n    \\t}\\n    \\treturn res;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3867,
                "title": "12ms-c-solution-easy-to-understand",
                "content": "    string convert(string s, int numRows) {\\n        std::string ans(s.size(),'0');\\n        char* p = &ans[0];\\n        int part_len = 2*numRows - 2;\\n        if(numRows == 1 || s.size() == 0) return s;\\n        for(int i=0; i<numRows; ++i)\\n        {\\n            if(i == 0 || i == numRows -1)\\n                for(int j=i; j<s.size(); j+= part_len) *(p++) = s[j];\\n            else\\n            {\\n                int offset = 2 * i;\\n                for(int j=i; j<s.size(); offset=part_len-offset,j+= offset) *(p++) = s[j];\\n            }\\n        }\\n        return ans;\\n    }",
                "solutionTags": [
                    "C++"
                ],
                "code": "    string convert(string s, int numRows) {\\n        std::string ans(s.size(),'0');\\n        char* p = &ans[0];\\n        int part_len = 2*numRows - 2;\\n        if(numRows == 1 || s.size() == 0) return s;\\n        for(int i=0; i<numRows; ++i)\\n        {\\n            if(i == 0 || i == numRows -1)\\n                for(int j=i; j<s.size(); j+= part_len) *(p++) = s[j];\\n            else\\n            {\\n                int offset = 2 * i;\\n                for(int j=i; j<s.size(); offset=part_len-offset,j+= offset) *(p++) = s[j];\\n            }\\n        }\\n        return ans;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3922,
                "title": "my-simple-java-solution",
                "content": "    public class Solution {\\n    public String convert( String s, int nRows ){\\n        if( nRows == 1 )    return s;\\n\\t\\tStringBuilder[] res = new StringBuilder[nRows];\\n\\t\\tfor( int i=0; i<nRows; i++ )\\n\\t\\t\\tres[i] = new StringBuilder();\\n\\t\\tint loop = 2 * nRows-2;\\n\\t\\tint mid = nRows-1;\\n\\t\\tfor( int i=0; i<s.length(); i++ )\\n\\t\\t\\tres[ mid - Math.abs( i % loop - mid ) ].append(s.charAt(i));\\n\\t\\tfor( int i = 1; i<nRows; i++ )\\n\\t\\t\\tres[0].append( res[i] );\\n\\t\\treturn res[0].toString();\\n\\t}\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public String convert( String s, int nRows ){\\n        if( nRows == 1 )    return s;\\n\\t\\tStringBuilder[] res = new StringBuilder[nRows];\\n\\t\\tfor( int i=0; i<nRows; i++ )\\n\\t\\t\\tres[i] = new StringBuilder();\\n\\t\\tint loop = 2 * nRows-2;\\n\\t\\tint mid = nRows-1;\\n\\t\\tfor( int i=0; i<s.length(); i++ )\\n\\t\\t\\tres[ mid - Math.abs( i % loop - mid ) ].append(s.charAt(i));\\n\\t\\tfor( int i = 1; i<nRows; i++ )\\n\\t\\t\\tres[0].append( res[i] );\\n\\t\\treturn res[0].toString();\\n\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3991,
                "title": "a-straightforward-python-solution",
                "content": "    def convert(s, nRows):\\n        if nRows == 1:\\n            return s\\n        down = True\\n        strings = [\"\"] * nRows\\n        # go through the string and append letters one by one\\n        lpos = 0\\n        for letter in s:\\n            strings[lpos] += letter\\n            if lpos == nRows - 1:\\n                lpos -= 1\\n                down = False\\n            elif lpos == 0:\\n                lpos = 1\\n                down = True\\n            elif down:\\n                lpos += 1\\n            else:\\n                lpos -= 1\\n        return \"\".join(strings)\\n\\nThe idea is very simple: how do you as a human solve this problem? By going through the letters and following the zigzag pattern. So I'm keeping two extra variables: one boolean *down*, to see whether I'm going up or down, and one counter *lpos*, which I'm changing manually. Example: if *nRows = 5*, then *lpos* iterates through 0 1 2 3 4 3 2 1 0 1 2 3 4 3 2... etc. Like a zigzag!",
                "solutionTags": [
                    "Python"
                ],
                "code": "    def convert(s, nRows):\\n        if nRows == 1:\\n            return s\\n        down = True\\n        strings = [\"\"] * nRows\\n        # go through the string and append letters one by one\\n        lpos = 0\\n        for letter in s:\\n            strings[lpos] += letter\\n            if lpos == nRows - 1:\\n                lpos -= 1\\n                down = False\\n            elif lpos == 0:\\n                lpos = 1\\n                down = True\\n            elif down:\\n                lpos += 1\\n            else:\\n                lpos -= 1\\n        return \"\".join(strings)\\n\\nThe idea is very simple: how do you as a human solve this problem? By going through the letters and following the zigzag pattern. So I'm keeping two extra variables: one boolean *down*, to see whether I'm going up or down, and one counter *lpos*, which I'm changing manually. Example: if *nRows = 5*, then *lpos* iterates through 0 1 2 3 4 3 2 1 0 1 2 3 4 3 2... etc. Like a zigzag!",
                "codeTag": "Python3"
            },
            {
                "id": 4009709,
                "title": "beginner-friendly-and-easy-to-understand-approach-but-still-beats-78",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nWe can follow the array approach\\neg: PAYPALISHIRING\\nhere num of rows is 3, so we have 3 arrays\\narray1: pahn\\narray2:aplsiig\\narray3:yir\\n\\nso to divide this,i have used two variables j(acts as index to which array)\\nand direction(decides whether to move up or down)\\n\\n\\nnext step is to merge this array\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(n)\\n\\n# Code\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1 || numRows >= s.length()) {\\n            return s;\\n        }\\n        StringBuilder[] strings = new StringBuilder[numRows];\\n        for(int i=0;i<numRows;i++)\\n        {\\n            strings[i] = new StringBuilder();\\n        }\\n        int j =0;\\n        int direction =1;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            strings[j].append(s.charAt(i));\\n            if(j==0)\\n            {\\n                direction = 1;\\n            }\\n            if(j == numRows-1)\\n            {\\n                direction = -1;\\n            }\\n            j +=direction;\\n        }\\n        StringBuilder result = new StringBuilder();\\n        for (StringBuilder sb : strings) {\\n            result.append(sb);\\n        }\\n\\n        return result.toString();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1 || numRows >= s.length()) {\\n            return s;\\n        }\\n        StringBuilder[] strings = new StringBuilder[numRows];\\n        for(int i=0;i<numRows;i++)\\n        {\\n            strings[i] = new StringBuilder();\\n        }\\n        int j =0;\\n        int direction =1;\\n        for(int i=0;i<s.length();i++)\\n        {\\n            strings[j].append(s.charAt(i));\\n            if(j==0)\\n            {\\n                direction = 1;\\n            }\\n            if(j == numRows-1)\\n            {\\n                direction = -1;\\n            }\\n            j +=direction;\\n        }\\n        StringBuilder result = new StringBuilder();\\n        for (StringBuilder sb : strings) {\\n            result.append(sb);\\n        }\\n\\n        return result.toString();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3485845,
                "title": "java-solution-for-zig-zag-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe can observe that the resulting zig-zag pattern consists of numRows rows, and each row contains a certain number of characters from the given string s. The pattern starts with the first character of s in the top-left corner and moves diagonally down until it reaches the last row, and then it moves diagonally up towards the top-right corner. The process continues until all characters of s have been included in the zig-zag pattern.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- If the number of rows numRows is 1, return the string s as it is since there will be only one row in this case.\\n- Create a StringBuilder sb to store the resulting zig-zag pattern.\\n- Initialize the step variable to 2 * numRows - 2, which is the distance between two consecutive characters in the same row.\\n- For each row from 0 to numRows - 1:\\n1. If the row is the first or the last row, add characters to the StringBuilder by skipping characters in intervals of the step size.\\n2. If the row is not the first or the last row, add characters to the StringBuilder by alternating between two step sizes (one for moving up and the other for moving down) until the end of the string is reached.\\n- Return the resulting string from the StringBuilder.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of the given solution is O(n), where n is the length of the input string s. This is because we iterate over each character of s exactly once and perform constant time operations for each character.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity of the given solution is O(n), where n is the length of the input string s. This is because we create a StringBuilder sb of length n to store the resulting zig-zag pattern. The additional space used by other variables is constant and does not depend on the length of the input string.\\n\\n# Code\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1)\\n            return s;\\n        StringBuilder sb = new StringBuilder();\\n        // step\\n        int step = 2 * numRows - 2;\\n        for (int i = 0; i < numRows; i++)\\n        {\\n            //first & last rows\\n            if (i == 0 || i == numRows - 1) \\n            {\\n                for (int j = i; j < s.length(); j = j + step) \\n                {\\n                    sb.append(s.charAt(j));\\n                }\\n                //middle rows\\n            }\\n            else \\n            {\\n                int j = i;\\n                boolean flag = true;\\n                int step1 = 2 * (numRows - 1 - i);\\n                int step2 = step - step1;\\n                while (j < s.length()) \\n                {\\n                    sb.append(s.charAt(j));\\n                    if (flag)\\n                        j = j + step1;\\n                    else\\n                        j = j + step2;\\n                    flag = !flag;\\n                }\\n            }\\n        }\\n        return sb.toString();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1)\\n            return s;\\n        StringBuilder sb = new StringBuilder();\\n        // step\\n        int step = 2 * numRows - 2;\\n        for (int i = 0; i < numRows; i++)\\n        {\\n            //first & last rows\\n            if (i == 0 || i == numRows - 1) \\n            {\\n                for (int j = i; j < s.length(); j = j + step) \\n                {\\n                    sb.append(s.charAt(j));\\n                }\\n                //middle rows\\n            }\\n            else \\n            {\\n                int j = i;\\n                boolean flag = true;\\n                int step1 = 2 * (numRows - 1 - i);\\n                int step2 = step - step1;\\n                while (j < s.length()) \\n                {\\n                    sb.append(s.charAt(j));\\n                    if (flag)\\n                        j = j + step1;\\n                    else\\n                        j = j + step2;\\n                    flag = !flag;\\n                }\\n            }\\n        }\\n        return sb.toString();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3245250,
                "title": "c-solution-explained",
                "content": "# Approach\\nApproach 1):\\nOne could basically create numRows arrays of maximum (input string length / numRows + 1) elements and iteratively store the characters in those arrays.\\nAn example is:\\ns = \"ABCDE\", numRows = 3 -> 3 arrays :\\narr[0][0] = \\'A\\' -> incrementing until reaching numRows - 1\\narr[1][0] = \\'B\\'\\narr[2][0] = \\'C\\' -> now decrementing until reaching 0\\narr[1][0] = \\'D\\'\\narr[0][0] = \\'E\\'\\n\\nafter that, simply read each whole array starting from 0 up to arr[numRows - 1] in order to get the result.\\n\\nThis solution is probably simpler to understand but surely slower.\\n\\n\\nApproach 2) -- used in the solution below --\\nTrying to recognize a common pattern in each element of a certain level (think the level as the straight line that connects multiple elements on the same row).\\nConsider the example below:\\n\\n0_____8  \\n1___7__9\\n2__6\\n3_5\\n4\\n\\nwe see that we will have to print the sequence 0,8,1,7,9,2,6,3,5,4\\nIn order to go from 0 to 8 we need to add 8, which can be seen as numRows (5) * 2 - 2 (minus 2 because else we would be counting 4 and 0 two times).\\n\\nOther example:\\n0__4\\n1_3\\n2\\n\\nIn order to go from 0 to 4 we need to count 4 positions, which is also seen as numRows (3 in our case) * 2 - 2.\\n\\nNow, let\\'s go back to the previous example; having found the correlation between 0 and 8, now we need to find it for 1,7,9. Starting from 1, we need to add 6, which is exactly 8 (the number we had to add before) - 2 (because now we are not counting 0 and 8). What is now the correlation between 7 and 9? Exactly 2 (value subtracted from 8). \\nGoing on, 2 and 6 differ by 4 (again 6 - 2) and if there was also a 10th element, it would differ from 6 by 4 (2 + 2). 3 and 5 differ from 4 - 2 = 2 and so on.\\n\\n\\n\\nSolution below better explained:\\n- we get the length of the input string\\n- we allocate a dynamic array of chars of the same number of elements of the string + 1 (for string terminator character)\\n- initialize a and b (variables to add to j in order to get the values on the same level) -> if there is 1 character only b would be 0, so in that case we initialize it to 1\\n- for(i) -> i is the variable that goes from 0 to numRows - 1 and scans all the levels (in our ex. : level 0 is: 0 8, level 1 is 1 7 9, ...)\\n- j is set equal to i at the beginning (so it takes the values  0,1,2,3,4)\\n- change tells us if we need to add a or b to j (ex. from 1 to 7 we need to add 6 = b, but from 7 to 9 we need to add 2 = a)\\n- while(j): we will stop when j is greater than the length of the input string\\n- if(): alternatively add a or b; in case a is 0 or b is 0 we don\\'t want to count the character 2 times (we would add 0 to j and count s[j] two times) -> add a,b based on the one which is not 0 (if a is 0 add b, if b is zero add a)\\n- subtract 2 from b and add 2 to a (b goes from 8 (0->8) to 6 (1->7) and a goes to 2 (7->9))\\n- don\\'t forget to put the string terminator -> res[count] = 0; \\n- return the result\\n\\n\\n# Code\\n```\\nint str_len(char* s)\\n{\\n    int len = 0;\\n    while(s[len] != 0)\\n    {\\n        len++;\\n    }\\n\\n    return len;\\n}\\n\\nchar * convert(char * s, int numRows){\\n    int len = str_len(s);\\n    char* res = (char*)malloc(len * sizeof(char) + 1);\\n\\n    int a = 0;\\n    int b = numRows * 2 - 2 > 0 ? numRows * 2 - 2: 1;\\n    int count = 0;\\n\\n    for(int i = 0; i < numRows; i++)\\n    {\\n        int j = i;\\n        \\n        int change = 0;\\n        while(j < len)\\n        {\\n            res[count++] = s[j];\\n            \\n            if(change && a != 0 || !b)\\n            {\\n                j += a;\\n                change = 0;\\n            }\\n            else\\n            {\\n                j += b;\\n                change = 1;\\n            }\\n        }\\n\\n        a+=2;\\n        b-=2;\\n    }\\n    res[count] = 0;\\n    \\n    return res;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint str_len(char* s)\\n{\\n    int len = 0;\\n    while(s[len] != 0)\\n    {\\n        len++;\\n    }\\n\\n    return len;\\n}\\n\\nchar * convert(char * s, int numRows){\\n    int len = str_len(s);\\n    char* res = (char*)malloc(len * sizeof(char) + 1);\\n\\n    int a = 0;\\n    int b = numRows * 2 - 2 > 0 ? numRows * 2 - 2: 1;\\n    int count = 0;\\n\\n    for(int i = 0; i < numRows; i++)\\n    {\\n        int j = i;\\n        \\n        int change = 0;\\n        while(j < len)\\n        {\\n            res[count++] = s[j];\\n            \\n            if(change && a != 0 || !b)\\n            {\\n                j += a;\\n                change = 0;\\n            }\\n            else\\n            {\\n                j += b;\\n                change = 1;\\n            }\\n        }\\n\\n        a+=2;\\n        b-=2;\\n    }\\n    res[count] = 0;\\n    \\n    return res;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3144684,
                "title": "accepted-short-simple-best-method-easy-to-understand",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int nRows) {\\n        if(nRows <= 1)\\n         return s;\\n        string result = \"\";\\n        int cycle = 2 * nRows - 2;\\n        for(int i = 0; i < nRows; ++i)\\n        {\\n            for(int j = i; j < s.length(); j = j + cycle){\\n               result = result + s[j];\\n               int secondJ = (j - i) + cycle - i;\\n               if(i != 0 && i != nRows-1 && secondJ < s.length())\\n                   result = result + s[secondJ];\\n            }\\n        }\\n        return result;\\n    }\\n};\\n```\\nPlease **UPVOTE** if it helps \\u2764\\uFE0F\\uD83D\\uDE0A\\nThank You and Happy To Help You!!",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int nRows) {\\n        if(nRows <= 1)\\n         return s;\\n        string result = \"\";\\n        int cycle = 2 * nRows - 2;\\n        for(int i = 0; i < nRows; ++i)\\n        {\\n            for(int j = i; j < s.length(); j = j + cycle){\\n               result = result + s[j];\\n               int secondJ = (j - i) + cycle - i;\\n               if(i != 0 && i != nRows-1 && secondJ < s.length())\\n                   result = result + s[secondJ];\\n            }\\n        }\\n        return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3136532,
                "title": "c-easy-and-simple-solution-using-2d-array",
                "content": "***Guy\\'s if you find this solution helpful \\uD83D\\uDE0A, PLEASE do UPVOTE. By doing that it motivate\\'s me to create more better post like this \\u270D\\uFE0F***\\n\\n# Complexity\\n- Time complexity:\\nO(numRows*n)\\n\\n- Space complexity:\\nO(numRows*n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows<2) return s;\\n        vector<vector<char>>ans(numRows,vector<char>(s.length(),\\'0\\'));\\n        int row=0,c=1;\\n        for(int i=0;i<s.length();i++){\\n          ans[row][i]=s[i];\\n          if(row==numRows-1) c=-1;\\n          if(row==0) c=1;\\n          row+=c;\\n        }\\n        string res=\"\";\\n        for(auto i : ans){\\n            for(auto j : i){\\n                if(j!=\\'0\\')\\n                    res+=j;\\n            } \\n            \\n        }\\n        return res;\\n    }\\n};\\n```\\n***Guy\\'s if you find this solution helpful \\uD83D\\uDE0A, PLEASE do UPVOTE. By doing that it motivate\\'s me to create more better post like this \\u270D\\uFE0F***",
                "solutionTags": [
                    "C++",
                    "Array",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows<2) return s;\\n        vector<vector<char>>ans(numRows,vector<char>(s.length(),\\'0\\'));\\n        int row=0,c=1;\\n        for(int i=0;i<s.length();i++){\\n          ans[row][i]=s[i];\\n          if(row==numRows-1) c=-1;\\n          if(row==0) c=1;\\n          row+=c;\\n        }\\n        string res=\"\";\\n        for(auto i : ans){\\n            for(auto j : i){\\n                if(j!=\\'0\\')\\n                    res+=j;\\n            } \\n            \\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3136168,
                "title": "java-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n       List<List<Character>> l=new ArrayList<>();\\n       if(numRows==1)return s;\\n       for(int i=0;i<numRows;i++)\\n       {\\n           l.add(new ArrayList<>());\\n       } \\n       int row=0;\\n       int t=0;\\n       for(int i=0;i<s.length();i++)\\n       {\\n           l.get(row).add(s.charAt(i));\\n           if(t==0)row++;\\n           else row--;\\n           if(row==0||row==numRows-1)t=t==0?1:0;\\n       }\\n       String res=\"\";\\n       for(List l1:l)\\n       {\\n           for(int i=0;i<l1.size();i++)res+=(\"\"+l1.get(i));\\n       }\\n      // System.out.println(l);\\n       return res;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n       List<List<Character>> l=new ArrayList<>();\\n       if(numRows==1)return s;\\n       for(int i=0;i<numRows;i++)\\n       {\\n           l.add(new ArrayList<>());\\n       } \\n       int row=0;\\n       int t=0;\\n       for(int i=0;i<s.length();i++)\\n       {\\n           l.get(row).add(s.charAt(i));\\n           if(t==0)row++;\\n           else row--;\\n           if(row==0||row==numRows-1)t=t==0?1:0;\\n       }\\n       String res=\"\";\\n       for(List l1:l)\\n       {\\n           for(int i=0;i<l1.size();i++)res+=(\"\"+l1.get(i));\\n       }\\n      // System.out.println(l);\\n       return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3135775,
                "title": "python-simple-solution-46-ms-beats-97",
                "content": "# Intuition\\nk goes up and down so we add current letter to the right substring\\n\\n\\n# Code\\n```\\nclass Solution:\\n    def convert(self, s: str, n: int) -> str:\\n        if n == 1:\\n            return s\\n\\n        a = [\\'\\']*n\\n        k = index = 0\\n\\n        for letter in s:\\n            a[k%n] += letter\\n\\n            if k == n-1:\\n                index = 1\\n            if k == 0:\\n                index = 0\\n            k = k+1 if index == 0 else k-1\\n\\n        result = a[0]\\n        for i in a[1:]:\\n            result += i\\n        return result\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, n: int) -> str:\\n        if n == 1:\\n            return s\\n\\n        a = [\\'\\']*n\\n        k = index = 0\\n\\n        for letter in s:\\n            a[k%n] += letter\\n\\n            if k == n-1:\\n                index = 1\\n            if k == 0:\\n                index = 0\\n            k = k+1 if index == 0 else k-1\\n\\n        result = a[0]\\n        for i in a[1:]:\\n            result += i\\n        return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3135511,
                "title": "python3-50ms-very-simple-solution-detailed-explained",
                "content": "# Intuition\\n**![Capture.PNG](https://assets.leetcode.com/users/images/c777de6f-78d4-4daa-b97d-14a9b04c4ae0_1675446391.282558.png)**\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n**Zig-zag traversal is simple level order string traversal.**\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- we have to travers in level order, and our $$level-threshold$$ is $$numRows$$.\\n- travers over $$length-of-string$$ and initial level is $$0$$.\\n- increment level by 1 in each iteration\\n- if we reach at last level according to numRows then $$traverse backwards$$ and decrement level by 1.\\n- put current alphabet from string s to it\\'s respective level\\n- this all operation happens in $$O(n)$$ times.\\n- now $$concatenate-all-characters$$ from level array and return, this also happens in $$O(n)$$ time.\\n# Complexity\\n- Time complexity: $$O(2n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(n+c)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1:\\n            return s\\n        ans = [[] for _ in range(numRows)]\\n        level = 0\\n        answer = \"\"\\n        forward = True\\n        for i in range(len(s)):\\n            ans[level].append(s[i])\\n            if forward:\\n                level += 1\\n            if not forward:\\n                level -= 1\\n            if level > numRows - 1:\\n                level -= 2\\n                forward = False\\n            if level < 0:\\n                level += 2\\n                forward = True\\n        for i in ans:\\n            for j in i:\\n                answer += j\\n        return answer\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1:\\n            return s\\n        ans = [[] for _ in range(numRows)]\\n        level = 0\\n        answer = \"\"\\n        forward = True\\n        for i in range(len(s)):\\n            ans[level].append(s[i])\\n            if forward:\\n                level += 1\\n            if not forward:\\n                level -= 1\\n            if level > numRows - 1:\\n                level -= 2\\n                forward = False\\n            if level < 0:\\n                level += 2\\n                forward = True\\n        for i in ans:\\n            for j in i:\\n                answer += j\\n        return answer\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3135446,
                "title": "simple-java-c-easy-readable-beginners-100-working",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\npublic String convert(String s, int numRows) {\\n    if(numRows<=1)return s;\\n    StringBuilder[] sb=new StringBuilder[numRows];\\n    for(int i=0;i<sb.length;i++){\\n        sb[i]=new StringBuilder(\"\");//init every sb element *important steps!!!\\n    }\\n    int incre=1;\\n    int index=0;\\n    for(int i=0;i<s.length();i++){\\n        sb[index].append(s.charAt(i));\\n        if(index==0){incre=1;}\\n        if(index==numRows-1){incre=-1;}\\n        index+=incre;\\n    }\\n    String re=\"\";\\n        for(int i=0;i<sb.length;i++){\\n            re+=sb[i];\\n         }\\n        return re.toString();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\npublic class Solution {\\npublic String convert(String s, int numRows) {\\n    if(numRows<=1)return s;\\n    StringBuilder[] sb=new StringBuilder[numRows];\\n    for(int i=0;i<sb.length;i++){\\n        sb[i]=new StringBuilder(\"\");//init every sb element *important steps!!!\\n    }\\n    int incre=1;\\n    int index=0;\\n    for(int i=0;i<s.length();i++){\\n        sb[index].append(s.charAt(i));\\n        if(index==0){incre=1;}\\n        if(index==numRows-1){incre=-1;}\\n        index+=incre;\\n    }\\n    String re=\"\";\\n        for(int i=0;i<sb.length;i++){\\n            re+=sb[i];\\n         }\\n        return re.toString();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3135359,
                "title": "easy-c-solution-in-o-n-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nobserve pattern row wise \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nfrom pattern we can see after every 2(n-1) elments, the next element  will come for first and last row and there is one centre element b/w 2 consecutive elements of other rows ;\\nso we push element row wise \\nwith alternate long and a short jump ;\\nfor short jump 2*row elements decreses;\\n2*(n-1)-2*row; \\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\no(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\no(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n\\n    string convert(string s, int n) {\\n     string ans=\"\";\\n     int i=1;\\n     int j=0,f=0;\\n     int jmp=2*n-2;//long jump condition\\n     bool centre=true;\\n     \\nif(n==1 || s.size()<=n)return s;\\n//loop for first row\\nwhile(f<s.size()){\\n    ans.push_back(s[f]);\\n    f+=jmp;\\n     }\\n     //loop for between rows \\n     while(i<n-1){\\n         j=i;\\n         centre = true;\\n         ans.push_back(s[i]);\\n         //loop to push a row\\n     while(j<s.size())\\n     {\\n     if(centre){\\n     if(j+jmp-2*i<s.size())//short jump condition for centre element \\n     ans.push_back(s[j+jmp-2*i]);\\n    centre=false;\\n    }\\n    else\\n    {\\n    j+=jmp; //long jump similar to first and last row \\n    if(j<s.size())\\n    ans.push_back(s[j]);\\n    centre=true;\\n    }\\n  }\\n i++;\\n }\\n\\nf=n-1;\\n//loop for last row\\nwhile(f<s.size())\\n{\\n    ans.push_back(s[f]);\\n    f+=jmp;\\n}\\nreturn ans;\\n} \\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n\\n    string convert(string s, int n) {\\n     string ans=\"\";\\n     int i=1;\\n     int j=0,f=0;\\n     int jmp=2*n-2;//long jump condition\\n     bool centre=true;\\n     \\nif(n==1 || s.size()<=n)return s;\\n//loop for first row\\nwhile(f<s.size()){\\n    ans.push_back(s[f]);\\n    f+=jmp;\\n     }\\n     //loop for between rows \\n     while(i<n-1){\\n         j=i;\\n         centre = true;\\n         ans.push_back(s[i]);\\n         //loop to push a row\\n     while(j<s.size())\\n     {\\n     if(centre){\\n     if(j+jmp-2*i<s.size())//short jump condition for centre element \\n     ans.push_back(s[j+jmp-2*i]);\\n    centre=false;\\n    }\\n    else\\n    {\\n    j+=jmp; //long jump similar to first and last row \\n    if(j<s.size())\\n    ans.push_back(s[j]);\\n    centre=true;\\n    }\\n  }\\n i++;\\n }\\n\\nf=n-1;\\n//loop for last row\\nwhile(f<s.size())\\n{\\n    ans.push_back(s[f]);\\n    f+=jmp;\\n}\\nreturn ans;\\n} \\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3134192,
                "title": "python-well-explanation-simple-easy",
                "content": "![explanision.PNG](https://assets.leetcode.com/users/images/39ed3cd5-0c1e-4353-af74-777a021ecdcb_1675392805.2104511.png)\\nI solved this problem using index of each character in string `s`\\n###  The first and last rows:\\nI find sequence of numbers that, each element is greater than the one before it by 6 (add) `2*numRows - 2`,\\n### The others rows:\\nThere are two numbers, the difference between them is fixed and repeated every `numRows`,\\nThe first number, like the one I mentioned before, is greater than the one before it by 6 (add) `2*numRows - 2`.\\nThe second is greater than the first by this equation: `index = j + add - 2*i`, `j: index of character`, `i: number of row`.\\nAnd then I add every character using these equations in string `word` \\n\\n# Code\\n```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        if numRows == 1:\\n            return s\\n        word = \"\"\\n        add = 2*numRows - 2\\n        n = len(s)\\n        for i in range(numRows):\\n            if i == 0 or i == numRows-1:\\n                for j in range(i,n,add):\\n                    word += s[j]\\n            else:\\n                for j in range(i,n,add):\\n                    word += s[j]\\n                    index = j + add - 2*i\\n                    if index < n:\\n                        word += s[index]\\n                    \\n        return word\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution(object):\\n    def convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        if numRows == 1:\\n            return s\\n        word = \"\"\\n        add = 2*numRows - 2\\n        n = len(s)\\n        for i in range(numRows):\\n            if i == 0 or i == numRows-1:\\n                for j in range(i,n,add):\\n                    word += s[j]\\n            else:\\n                for j in range(i,n,add):\\n                    word += s[j]\\n                    index = j + add - 2*i\\n                    if index < n:\\n                        word += s[index]\\n                    \\n        return word\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3133926,
                "title": "0ms-dumb-solution",
                "content": "# Complexity\\n- Time complexity:$$O(n)$$\\n# Code\\n```\\nimpl Solution {\\n    pub fn convert(s: String, num_rows: i32) -> String {\\n        if num_rows == 1 { return s; }\\n        let mut results: Vec<String> = vec![String::new();num_rows as usize];\\n        let mut letters = s.chars();\\n\\n        let mut index:usize = 0;\\n        let mut direction:bool = true;\\n\\n        while let Some(letter) = letters.next(){\\n            results[index].push(letter);\\n            if direction { index += 1; } else { index -= 1;}\\n\\n            if index != num_rows as usize && index != usize::MAX { continue; }\\n            \\n            direction = !direction;\\n            if direction { index += 2; } else { index -= 2;}\\n        }\\n\\n        for index in 1..num_rows as usize {\\n            let temp = &results[index].clone();\\n            results[0].push_str(temp);\\n        }\\n        results[0].clone()\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn convert(s: String, num_rows: i32) -> String {\\n        if num_rows == 1 { return s; }\\n        let mut results: Vec<String> = vec![String::new();num_rows as usize];\\n        let mut letters = s.chars();\\n\\n        let mut index:usize = 0;\\n        let mut direction:bool = true;\\n\\n        while let Some(letter) = letters.next(){\\n            results[index].push(letter);\\n            if direction { index += 1; } else { index -= 1;}\\n\\n            if index != num_rows as usize && index != usize::MAX { continue; }\\n            \\n            direction = !direction;\\n            if direction { index += 2; } else { index -= 2;}\\n        }\\n\\n        for index in 1..num_rows as usize {\\n            let temp = &results[index].clone();\\n            results[0].push_str(temp);\\n        }\\n        results[0].clone()\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3133918,
                "title": "fastest-clean-code-o-1-extra-space-easy-to-understand-o-n-time",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int row) {\\n        if(row==1)return s;\\n\\n        string ans;\\n        int p=0,n=s.length();\\n\\n        // row=0\\n        while(p<n){\\n            ans.push_back(s[p]);\\n            p += (row-1)*2;\\n        }\\n\\n        //middle rows\\n        for(int i=1 ; i<row-1 ; i++){\\n            p = i;\\n            bool down=true;\\n            while(p<n){\\n                ans.push_back(s[p]);\\n                if(down){\\n                    p += (row-1-i)*2;\\n                }\\n                else{\\n                    p += i*2;\\n                }\\n                down = !down;\\n            }\\n        }\\n\\n        // last row\\n        p=row-1;\\n        while(p<n){\\n            ans.push_back(s[p]);\\n            p += (row-1)*2;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int row) {\\n        if(row==1)return s;\\n\\n        string ans;\\n        int p=0,n=s.length();\\n\\n        // row=0\\n        while(p<n){\\n            ans.push_back(s[p]);\\n            p += (row-1)*2;\\n        }\\n\\n        //middle rows\\n        for(int i=1 ; i<row-1 ; i++){\\n            p = i;\\n            bool down=true;\\n            while(p<n){\\n                ans.push_back(s[p]);\\n                if(down){\\n                    p += (row-1-i)*2;\\n                }\\n                else{\\n                    p += i*2;\\n                }\\n                down = !down;\\n            }\\n        }\\n\\n        // last row\\n        p=row-1;\\n        while(p<n){\\n            ans.push_back(s[p]);\\n            p += (row-1)*2;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3049344,
                "title": "c-such-an-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows==1) return s;\\n        bool down=true;\\n        string arr[numRows];\\n        int row=0;\\n        for(int i=0; i<s.size(); i++) {\\n            arr[row].push_back(s[i]);\\n            if(row==numRows-1) down=false;\\n            else if (row==0) down=true;\\n            if(down) row++;\\n            else row--;\\n        }\\n        string res=\"\";\\n        for(int i=0; i<numRows; i++) {\\n            res += arr[i];\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows==1) return s;\\n        bool down=true;\\n        string arr[numRows];\\n        int row=0;\\n        for(int i=0; i<s.size(); i++) {\\n            arr[row].push_back(s[i]);\\n            if(row==numRows-1) down=false;\\n            else if (row==0) down=true;\\n            if(down) row++;\\n            else row--;\\n        }\\n        string res=\"\";\\n        for(int i=0; i<numRows; i++) {\\n            res += arr[i];\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2876713,
                "title": "easiest-straight-forward-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    string convert(string &s, int numRows) {\\n        int n = s.size();\\n        if(numRows <= 1) return s;\\n        string ans = \"\";\\n        vector<string> out(numRows);\\n        int crow = 0, dir = 1;  //1->going down 2->going up\\n        for(int i = 0; i < n; i++) {\\n            out[crow].push_back(s[i]);\\n            // if hit the turning point, change direction\\n            if(crow == 0) dir = 1;\\n            else if((crow+1) == numRows) dir = 2;\\n            // inc or dec row depending upon the turning pt direction\\n            if(dir == 1) crow++;\\n            else crow--;        \\n            \\n        }\\n\\n        for(auto &str: out) ans += str;\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string &s, int numRows) {\\n        int n = s.size();\\n        if(numRows <= 1) return s;\\n        string ans = \"\";\\n        vector<string> out(numRows);\\n        int crow = 0, dir = 1;  //1->going down 2->going up\\n        for(int i = 0; i < n; i++) {\\n            out[crow].push_back(s[i]);\\n            // if hit the turning point, change direction\\n            if(crow == 0) dir = 1;\\n            else if((crow+1) == numRows) dir = 2;\\n            // inc or dec row depending upon the turning pt direction\\n            if(dir == 1) crow++;\\n            else crow--;        \\n            \\n        }\\n\\n        for(auto &str: out) ans += str;\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2777917,
                "title": "java-easy-solution-arraylist-stringbuilder",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<StringBuilder> list=new ArrayList<>();\\n        for(int i=0;i<numRows;i++){\\n            list.add(new StringBuilder());\\n        }\\n        int c=0;\\n        while(c<s.length()){\\n            for(int i=0;i<numRows && c<s.length() ;i++,c++){\\n                list.get(i).append(s.charAt(c));\\n            }\\n            for(int i=numRows-2;i>=1 && c<s.length();i--,c++){\\n                list.get(i).append(s.charAt(c));\\n            }\\n        }\\n        String ans=\"\";\\n        for(int i=0;i<numRows;i++){\\n            String str=new String(list.get(i));\\n            ans=ans+str;\\n        }\\n\\n        return ans;\\n    }\\n}\\n```\\n***Please Upvote if you like the solution*** \\n***Happy Coding :)***\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<StringBuilder> list=new ArrayList<>();\\n        for(int i=0;i<numRows;i++){\\n            list.add(new StringBuilder());\\n        }\\n        int c=0;\\n        while(c<s.length()){\\n            for(int i=0;i<numRows && c<s.length() ;i++,c++){\\n                list.get(i).append(s.charAt(c));\\n            }\\n            for(int i=numRows-2;i>=1 && c<s.length();i--,c++){\\n                list.get(i).append(s.charAt(c));\\n            }\\n        }\\n        String ans=\"\";\\n        for(int i=0;i<numRows;i++){\\n            String str=new String(list.get(i));\\n            ans=ans+str;\\n        }\\n\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2744632,
                "title": "c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<string> answer(numRows,\"\");\\n        if(numRows==1) return s;\\n        int index = 0;\\n        int ptr = 0;\\n        int size = s.size();\\n        while(index < size){\\n            int i;\\n            for(i=index;i<index+numRows;i++){\\n                if(i<=size-1){\\n                    answer[ptr] += s[i];\\n                    ptr++;\\n                }else break;\\n            }\\n            index = i; ptr-=2;\\n            while(index<size && ptr>0){\\n                answer[ptr] += s[index];\\n                index++;\\n                ptr--;\\n            }\\n        }\\n        string final_string = \"\";\\n        for(auto item:answer){\\n            cout<<item<<\" \";\\n            final_string += item;\\n        }\\n        \\n        return final_string;\\n    }\\n};\\n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<string> answer(numRows,\"\");\\n        if(numRows==1) return s;\\n        int index = 0;\\n        int ptr = 0;\\n        int size = s.size();\\n        while(index < size){\\n            int i;\\n            for(i=index;i<index+numRows;i++){\\n                if(i<=size-1){\\n                    answer[ptr] += s[i];\\n                    ptr++;\\n                }else break;\\n            }\\n            index = i; ptr-=2;\\n            while(index<size && ptr>0){\\n                answer[ptr] += s[index];\\n                index++;\\n                ptr--;\\n            }\\n        }\\n        string final_string = \"\";\\n        for(auto item:answer){\\n            cout<<item<<\" \";\\n            final_string += item;\\n        }\\n        \\n        return final_string;\\n    }\\n};\\n\\n```",
                "codeTag": "C++"
            },
            {
                "id": 2500707,
                "title": "java-simple-solution",
                "content": "https://www.youtube.com/watch?v=kv9cej4Ljuw",
                "solutionTags": [],
                "code": "https://www.youtube.com/watch?v=kv9cej4Ljuw",
                "codeTag": "Unknown"
            },
            {
                "id": 2364205,
                "title": "simple-c-python-java-javascript-here",
                "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "JavaScript"
                ],
                "code": "",
                "codeTag": "Unknown"
            },
            {
                "id": 2008824,
                "title": "python-o-n-with-period",
                "content": "The biggest part of this solution, is to understand, with which period each letter appears in zigzag. Let me explain.\\n\\nIn the image below, string *PAYPALISHIRING* is represented. Red circles are indexes of layers.\\n![image](https://assets.leetcode.com/users/images/d27beff7-be10-461c-96f0-cc64d46f8725_1651697596.7328937.png)\\n\\nWe can see, that the distance between purple and yellow circles is always the same. And it equals `numRows * 2 - 3`. I\\'ve figured out this formula, just drawing pictures with different number of layers. It is illustrated in the image above.\\n![image](https://assets.leetcode.com/users/images/9d3255ef-6901-4767-97b5-4cdede0612c9_1651697917.8858163.png)\\n\\nNow we also can see, that in one period (purple rectangle), there are always two characters on the same row. Not counting the bottom layer, of course. And the distance between those two characters equals  `(numRows - idx) * 2 - 3`, where index is taken from the red circles from the top image. Now, the best part. \\n\\nKnowing distance between chars in one period, and the length of the period. We can find indexes of all the characters on these layers. It is easier to understand it from a picture. There are provided calculation for the 2nd layer.  Then we have to handle a couple of edge cases, and that\\'s it! \\n![image](https://assets.leetcode.com/users/images/da9299e8-237e-47f7-89be-7b73e9b467bd_1651698445.9717364.png)\\n\\n\\n```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        zero_period = numRows * 2 - 3\\n\\n        def collect_chars_by_level(idx: int) -> str:\\n            iter_value = (numRows - idx) * 2 - 3\\n            chars_by_level = \\'\\'\\n\\n            while idx < len(s):\\n                chars_by_level += s[idx]\\n                if idx + iter_value + 1 < len(s) and iter_value != -1 and iter_value != zero_period:\\n                    chars_by_level += s[idx + iter_value + 1]\\n\\n                idx = idx + 1 if zero_period == -1 else idx + zero_period + 1\\n\\n            return chars_by_level\\n\\n        chars = \\'\\'\\n        for curr_row_idx in range(numRows):\\n            chars += collect_chars_by_level(idx=curr_row_idx)\\n\\n        return chars\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        zero_period = numRows * 2 - 3\\n\\n        def collect_chars_by_level(idx: int) -> str:\\n            iter_value = (numRows - idx) * 2 - 3\\n            chars_by_level = \\'\\'\\n\\n            while idx < len(s):\\n                chars_by_level += s[idx]\\n                if idx + iter_value + 1 < len(s) and iter_value != -1 and iter_value != zero_period:\\n                    chars_by_level += s[idx + iter_value + 1]\\n\\n                idx = idx + 1 if zero_period == -1 else idx + zero_period + 1\\n\\n            return chars_by_level\\n\\n        chars = \\'\\'\\n        for curr_row_idx in range(numRows):\\n            chars += collect_chars_by_level(idx=curr_row_idx)\\n\\n        return chars\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1896588,
                "title": "100-fastest-swift-solution",
                "content": "```\\nclass Solution {\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        guard numRows > 1 else { return s }\\n        var rows: [[Character]] = []\\n        var res = \"\"\\n\\n        for _ in 0..<numRows { rows.append([]) }\\n\\n        for (i, c) in s.enumerated() {\\n            let index = i % (numRows + numRows - 2)\\n            if index < numRows {\\n                rows[index].append(c)\\n            } else {\\n                rows[index - 2 * (index - numRows + 1)].append(c)\\n            }\\n        }\\n\\n        for row in rows {\\n            for c in row { res += String(c) }\\n        }\\n\\n        return res\\n    }\\n\\n}\\n\\n```\\n\\nLet me know in comments if you have any doubts. I will be happy to answer.\\n\\nPlease upvote if you found the solution useful.",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        guard numRows > 1 else { return s }\\n        var rows: [[Character]] = []\\n        var res = \"\"\\n\\n        for _ in 0..<numRows { rows.append([]) }\\n\\n        for (i, c) in s.enumerated() {\\n            let index = i % (numRows + numRows - 2)\\n            if index < numRows {\\n                rows[index].append(c)\\n            } else {\\n                rows[index - 2 * (index - numRows + 1)].append(c)\\n            }\\n        }\\n\\n        for row in rows {\\n            for c in row { res += String(c) }\\n        }\\n\\n        return res\\n    }\\n\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1760114,
                "title": "java-solution-with-explanation",
                "content": "Iterate through every row \\nfor first and last row, we need to add 2*numRows-2 to get the next element\\nfor rows between first and last, it follows a sequence first 2*numRows-2-2*i and then 2*i is added to get the next element\\n![image](https://assets.leetcode.com/users/images/ad1880fb-d042-4f45-abcb-baebf1635d7f_1644479800.7959855.png)\\n\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int constant = numRows - 2 + numRows;\\n        StringBuilder str = new StringBuilder();\\n        if( s.length() <= 2 || numRows == 1) return s;\\n        for( int i = 0 ; i  < numRows; i++ )\\n        {\\n            boolean oddTurn = false;\\n            for( int j = i ; j < s.length();)\\n            {\\n                str.append( s.charAt(j) );\\n                \\n                if( i == 0 || i == ( numRows - 1 ))\\n                        j += constant;\\n                else\\n                        j += ( oddTurn ? 2*i: constant-2*i );\\n                \\n                oddTurn =!oddTurn;    \\n            }\\n        }\\n        return str.toString();\\n    }\\n}\\n```\\nPlease **upvote** if you found it useful\\n\\nTimeComplexity = O(numRows*len(s))",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int constant = numRows - 2 + numRows;\\n        StringBuilder str = new StringBuilder();\\n        if( s.length() <= 2 || numRows == 1) return s;\\n        for( int i = 0 ; i  < numRows; i++ )\\n        {\\n            boolean oddTurn = false;\\n            for( int j = i ; j < s.length();)\\n            {\\n                str.append( s.charAt(j) );\\n                \\n                if( i == 0 || i == ( numRows - 1 ))\\n                        j += constant;\\n                else\\n                        j += ( oddTurn ? 2*i: constant-2*i );\\n                \\n                oddTurn =!oddTurn;    \\n            }\\n        }\\n        return str.toString();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1364816,
                "title": "zigzag-conversion-any-language-very-simple-fast-and-easy-to-understand",
                "content": "PLEASE UPVOTE THIS POST, IF IT HELPED.\\n```\\nif (numRows === 1) return s;\\n    let result = Array(numRows).fill(\\'\\');   //create array; [\"\",\"\",\"\"]//if numofrows = 3,\\n                                           //it will create 3strings(rows) inside array.\\n    let row = 0;\\n    let k = 1;\\n    for (const c of s) {     //simply - looping over every char of the string.\\n        result[row] = result[row] + c;  //put it in corresponding row.   \\n        if( row === numRows-1) k = -1;  // IF(IF AND ONLY IF) row reached last row, then k = -1. From now on, row will go backwards(or upwards(visually in mind)).\\n        if(row === 0) k = 1;//if row reached 0 again, then k = 1, and start from the first row again(meaning k will be 1, until this condition gets applied again)\\n        row = row + k*1;         \\n    }\\n    return result.join(\\'\\'); //return the joined strings(or rows).\\n```",
                "solutionTags": [],
                "code": "```\\nif (numRows === 1) return s;\\n    let result = Array(numRows).fill(\\'\\');   //create array; [\"\",\"\",\"\"]//if numofrows = 3,\\n                                           //it will create 3strings(rows) inside array.\\n    let row = 0;\\n    let k = 1;\\n    for (const c of s) {     //simply - looping over every char of the string.\\n        result[row] = result[row] + c;  //put it in corresponding row.   \\n        if( row === numRows-1) k = -1;  // IF(IF AND ONLY IF) row reached last row, then k = -1. From now on, row will go backwards(or upwards(visually in mind)).\\n        if(row === 0) k = 1;//if row reached 0 again, then k = 1, and start from the first row again(meaning k will be 1, until this condition gets applied again)\\n        row = row + k*1;         \\n    }\\n    return result.join(\\'\\'); //return the joined strings(or rows).\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1274361,
                "title": "easy-c-solution-90-faster",
                "content": "**If you like it then please upvote**\\n```\\nstring convert(string s, int numRows) {\\n        \\n        int n = s.length();\\n        if(numRows<=1||n<=1){\\n            return s;\\n        }\\n        int row = 0;\\n        int i = 0;\\n        string *str =new string[numRows];   \\n        while(row<numRows&&i<n){\\n            str[row].push_back(s[i]);\\n            i++;row++;\\n        }\\n        int step=0;\\n        while(i<n){\\n            if(step==0){\\n                row=numRows-2;\\n                while(row>=0&&i<n){\\n                    str[row].push_back(s[i]);\\n                    i++;\\n                    row--;\\n                }\\n                step=1;\\n            }\\n            else{\\n                row=1;\\n                while(row<numRows&&i<n){\\n                    str[row].push_back(s[i]);\\n                    i++;\\n                    row++;\\n                }\\n                step=0;\\n            }\\n        }\\n        \\n        string c = \"\";\\n        row=0;\\n        while(row<numRows){\\n            c+=str[row];\\n            row++;\\n        }\\n        return c;\\n    }\\n\\t\\n\\t```",
                "solutionTags": [],
                "code": "```\\nstring convert(string s, int numRows) {\\n        \\n        int n = s.length();\\n        if(numRows<=1||n<=1){\\n            return s;\\n        }\\n        int row = 0;\\n        int i = 0;\\n        string *str =new string[numRows];   \\n        while(row<numRows&&i<n){\\n            str[row].push_back(s[i]);\\n            i++;row++;\\n        }\\n        int step=0;\\n        while(i<n){\\n            if(step==0){\\n                row=numRows-2;\\n                while(row>=0&&i<n){\\n                    str[row].push_back(s[i]);\\n                    i++;\\n                    row--;\\n                }\\n                step=1;\\n            }\\n            else{\\n                row=1;\\n                while(row<numRows&&i<n){\\n                    str[row].push_back(s[i]);\\n                    i++;\\n                    row++;\\n                }\\n                step=0;\\n            }\\n        }\\n        \\n        string c = \"\";\\n        row=0;\\n        while(row<numRows){\\n            c+=str[row];\\n            row++;\\n        }\\n        return c;\\n    }\\n\\t\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1094221,
                "title": "python-o-n-only-52-ms-crazy",
                "content": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n      if numRows == 1:\\n        return s\\n      strlist = []\\n      for i in range(numRows):\\n        strlist.append(\"\")\\n      count = 0\\n      for i in s:\\n        if count==0:\\n          flag = 1\\n        if count == numRows-1:\\n          flag = -1\\n        strlist[count] += i\\n        count += flag\\n      res = \"\"\\n      for i in strlist:\\n        res += i\\n      return res\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n      if numRows == 1:\\n        return s\\n      strlist = []\\n      for i in range(numRows):\\n        strlist.append(\"\")\\n      count = 0\\n      for i in s:\\n        if count==0:\\n          flag = 1\\n        if count == numRows-1:\\n          flag = -1\\n        strlist[count] += i\\n        count += flag\\n      res = \"\"\\n      for i in strlist:\\n        res += i\\n      return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1047936,
                "title": "clear-kotlin-solution",
                "content": "Steps:\\n- We create a `StringBuilder` per row, since knowing the row for a character will be just enough to reconstitute the new string.\\n- We compute the length of a \"zigzag\", or in other words the length of a \"down-and-up\".\\n- We get the position of each letter according to that zigzag length: it\\'s either the position inside the zigzag (going down) or it\\'s the zigzag length minus the position (coming back up).\\n- Best is to draw the indices next to the letters on a piece of paper to get things clarified.\\n\\n```\\nfun convert(s: String, numRows: Int): String {\\n\\tval rows = Array(numRows) { StringBuilder() }\\n\\tval zigzagLength = maxOf(1, 2 * numRows - 2)\\n\\n\\tfor (i in s.indices) {\\n\\t\\tval position = i % zigzagLength\\n\\t\\tval row = when {\\n\\t\\t\\tposition < numRows -> position\\n\\t\\t\\telse -> zigzagLength - position\\n\\t\\t}\\n\\t\\trows[row].append(s[i])\\n\\t}\\n\\n\\treturn rows.joinToString(\"\")\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nfun convert(s: String, numRows: Int): String {\\n\\tval rows = Array(numRows) { StringBuilder() }\\n\\tval zigzagLength = maxOf(1, 2 * numRows - 2)\\n\\n\\tfor (i in s.indices) {\\n\\t\\tval position = i % zigzagLength\\n\\t\\tval row = when {\\n\\t\\t\\tposition < numRows -> position\\n\\t\\t\\telse -> zigzagLength - position\\n\\t\\t}\\n\\t\\trows[row].append(s[i])\\n\\t}\\n\\n\\treturn rows.joinToString(\"\")\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 731274,
                "title": "simple-java-solution-using-hashmap",
                "content": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1)return s;\\n        \\n        Map<Integer,StringBuilder> map = new HashMap<>();\\n        \\n        boolean incr = true;\\n        int pos = 0;\\n        \\n        for(char c  : s.toCharArray()){\\n            \\n           if(pos == numRows)incr = false;\\n           if(pos == 1)incr = true;\\n            \\n            if(incr)pos++;\\n            else pos--;\\n            \\n            if(!map.containsKey(pos)){\\n                map.put(pos,new StringBuilder());\\n            }\\n            \\n            map.get(pos).append(c);\\n            \\n        }\\n        \\n        StringBuilder sb = new StringBuilder();\\n        for(Map.Entry<Integer,StringBuilder> entry : map.entrySet()){\\n            sb.append(entry.getValue());\\n        }\\n        \\n      return sb.toString();  \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1)return s;\\n        \\n        Map<Integer,StringBuilder> map = new HashMap<>();\\n        \\n        boolean incr = true;\\n        int pos = 0;\\n        \\n        for(char c  : s.toCharArray()){\\n            \\n           if(pos == numRows)incr = false;\\n           if(pos == 1)incr = true;\\n            \\n            if(incr)pos++;\\n            else pos--;\\n            \\n            if(!map.containsKey(pos)){\\n                map.put(pos,new StringBuilder());\\n            }\\n            \\n            map.get(pos).append(c);\\n            \\n        }\\n        \\n        StringBuilder sb = new StringBuilder();\\n        for(Map.Entry<Integer,StringBuilder> entry : map.entrySet()){\\n            sb.append(entry.getValue());\\n        }\\n        \\n      return sb.toString();  \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 544020,
                "title": "java-solution-with-explanation",
                "content": "To: rearrange string by zigzag and read line by line\\n\\nThis is equivilent to: put characters with same new Row No. together in order\\n\\nSo we only need to get the new Row No. for each char and combine them \\n\\nIntroduce a variable \"up\" to mark the up/down trend would be very convenient.\\n\\nTip: when `numRows == 1`, we have to return `s` else would have ArrayIndexOutOfBoundsException\\n\\n```\\npublic String convert(String s, int numRows) {\\n\\tif (numRows == 1) return s;\\n\\tStringBuilder[] builder = new StringBuilder[numRows + 1];\\n\\tfor (int i = 0; i < builder.length; i++) builder[i] = new StringBuilder(\"\"); \\n\\n\\tint row = 1, col = 1;\\n\\tboolean up = false;\\n\\tfor (char c : s.toCharArray()) {\\n\\t\\tbuilder[row].append(c);\\n\\t\\tif (row == numRows) up = true; // we need to change direction to go up\\n\\t\\tif (row == 1) up = false; // we need to change direction to go down\\n\\t\\tif (up) {\\n\\t\\t\\trow--;\\n\\t\\t\\tcol++;\\n\\t\\t} else {\\n\\t\\t\\trow++;\\n\\t\\t}\\n\\t}\\n\\n\\tString res = \"\";\\n\\tfor (int i = 1; i < builder.length; i++) res += new String(builder[i]);\\n\\treturn res;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic String convert(String s, int numRows) {\\n\\tif (numRows == 1) return s;\\n\\tStringBuilder[] builder = new StringBuilder[numRows + 1];\\n\\tfor (int i = 0; i < builder.length; i++) builder[i] = new StringBuilder(\"\"); \\n\\n\\tint row = 1, col = 1;\\n\\tboolean up = false;\\n\\tfor (char c : s.toCharArray()) {\\n\\t\\tbuilder[row].append(c);\\n\\t\\tif (row == numRows) up = true; // we need to change direction to go up\\n\\t\\tif (row == 1) up = false; // we need to change direction to go down\\n\\t\\tif (up) {\\n\\t\\t\\trow--;\\n\\t\\t\\tcol++;\\n\\t\\t} else {\\n\\t\\t\\trow++;\\n\\t\\t}\\n\\t}\\n\\n\\tString res = \"\";\\n\\tfor (int i = 1; i < builder.length; i++) res += new String(builder[i]);\\n\\treturn res;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 429769,
                "title": "easy-understanding-solution-o-n-99",
                "content": "by [Michelle\\u5C0F\\u68A6\\u60F3\\u5BB6](https://youtu.be/re-WQ14s-Kg).\\n\\nOriginal Python version\\n```python\\ndef convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1 or numRows >= len(s):\\n            return s\\n        \\n        row, step = 0, 0\\n        res = [\\'\\'] * len(s)\\n        \\n        for c in s:\\n            res[row] += c\\n            \\n            if row == 0:\\n                step = 1\\n            elif row == numRows - 1:\\n                step = -1\\n                \\n            row += step\\n        \\n        return \"\".join(res)\\n```\\n\\nJava version\\n```java\\npublic String convert(String s, int numRows) {\\n        if (numRows == 1 || numRows >= s.length()) return s;  \\n        \\n        char[] chars = s.toCharArray();\\n        StringBuilder[] zigzag = new StringBuilder[numRows];\\n        \\n        int row = 0;\\n        int step = 0;\\n        \\n        for (char c : chars) {\\n            if (zigzag[row] == null) {\\n                zigzag[row] = new StringBuilder();\\n            }\\n            zigzag[row].append(c);\\n            \\n            if (row == 0) {\\n                step = 1;\\n            } else if (row == numRows - 1) {\\n                step = -1;\\n            }\\n            \\n            row += step;\\n        }\\n        \\n        StringBuilder res = new StringBuilder(s.length());\\n        for (StringBuilder sb : zigzag) {\\n            res.append(sb);\\n        }\\n        return res.toString();\\n    }\\n```",
                "solutionTags": [
                    "Java",
                    "Python"
                ],
                "code": "```python\\ndef convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1 or numRows >= len(s):\\n            return s\\n        \\n        row, step = 0, 0\\n        res = [\\'\\'] * len(s)\\n        \\n        for c in s:\\n            res[row] += c\\n            \\n            if row == 0:\\n                step = 1\\n            elif row == numRows - 1:\\n                step = -1\\n                \\n            row += step\\n        \\n        return \"\".join(res)\\n```\n```java\\npublic String convert(String s, int numRows) {\\n        if (numRows == 1 || numRows >= s.length()) return s;  \\n        \\n        char[] chars = s.toCharArray();\\n        StringBuilder[] zigzag = new StringBuilder[numRows];\\n        \\n        int row = 0;\\n        int step = 0;\\n        \\n        for (char c : chars) {\\n            if (zigzag[row] == null) {\\n                zigzag[row] = new StringBuilder();\\n            }\\n            zigzag[row].append(c);\\n            \\n            if (row == 0) {\\n                step = 1;\\n            } else if (row == numRows - 1) {\\n                step = -1;\\n            }\\n            \\n            row += step;\\n        }\\n        \\n        StringBuilder res = new StringBuilder(s.length());\\n        for (StringBuilder sb : zigzag) {\\n            res.append(sb);\\n        }\\n        return res.toString();\\n    }\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 363853,
                "title": "python-o-n-space-and-time-detail-explanation-turtle-code",
                "content": "1) skipping trails include cases when: (return original input string)\\n\\t- numRows = 1\\n\\t- string length < 2\\n2) main algorithm\\n\\t- thinking of an array with numRows elements, each element will be a row of zigzag\\n\\t- note that each element will be a string, where we can **add char to end of such string by doing string + char**\\n\\t- variable **index** and **step** will indicate which row to put current char and which row we heading to next\\n\\t- **Given input: paypalishiring, 4**\\n\\t\\t- for each individual char in our input: Do following\\n\\t\\t\\t- **add char to the end of the string at index**\\n\\t\\t\\t- **if index = 0: set step to 1 (going down the row)**\\n\\t\\t\\t- **if index = numRows: set step to -1, (going back up the row)**\\n\\t\\t\\t- **update index by step**\\n\\n\\n# A quick simulation of the algorithm\\n**Given input: paypalishiring, 4**\\n**Zigzag Structure:**\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nFirst we start at top row travel to bottom row, we will encounter the first 4 char \\'P A Y P\\'\\nput these 4 char into each element in our solution array:\\n```\\nans = [\\'P\\', \\'A\\', \\'Y\\', \\'P\\']\\n```\\n\\nNext we start at the bottom row, traveling to the top row, we can do this by having step = -1:\\n```\\n# for char \\'A\\': add to row 3 ====> ans = [\\'P\\', \\'A\\', \\'YA\\', \\'P\\']\\n# for char \\'L\\': add to row 2 ====> ans = [\\'P\\', \\'AL\\', \\'YA\\', \\'P\\']\\n# for char \\'I\\': add to row 1 ====> ans = [\\'PI\\', \\'AL\\', \\'YA\\', \\'P\\']\\n```\\n\\nFrom top row to bottom row:\\n```\\n# for char \\'S\\': add to row 2 ====> ans = [\\'PI\\', \\'AS\\', \\'YA\\', \\'P\\']\\n# for char \\'H\\': add to row 3 ====> ans = [\\'PI\\', \\'AS\\', \\'YAH\\', \\'P\\']\\n# for char \\'I\\': add to row 4 ====> ans = [\\'PI\\', \\'AS\\', \\'YAH\\', \\'PI\\']\\n```\\n\\nFrom bottom row to top row:\\n```\\n# for char \\'R\\': add to row 3 ====> ans = [\\'PI\\', \\'AS\\', \\'YAHR\\', \\'PI\\']\\n# for char \\'I\\': add to row 2 ====> ans = [\\'PI\\', \\'ASI\\', \\'YAHR\\', \\'PI\\']\\n# for char \\'N\\': add to row 1 ====> ans = [\\'PIN\\', \\'ASI\\', \\'YAHR\\', \\'PI\\']\\n```\\n\\nFinally:\\n```\\n# add \\'G\\' to row 2 ====> ans = [\\'PIN\\', \\'ASIG\\', \\'YAHR\\', \\'PI\\']\\n# convert to string we got :  \\'PINASIGYAHRPI\\'\\n```\\n\\n**Time and space complexity analysis:**\\n- we are looping through the string once, so the time complexity is **O(n)**, for n to be the length of input string.\\n- we are having array ans to hold our zigzag output, so it will have n characters, thus space complexity is also **O(n)**.\\n\\n**Python Code:**\\n```\\ndef convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1 or len(s) < 2:\\n            return s\\n        else:\\n            ans = [\\'\\']*numRows\\n            index, step = 0, 1\\n\\n            for char in s:\\n                ans[index] += char\\n                if index == 0:\\n                    step = 1\\n                elif index == numRows-1:\\n                    step = -1\\n                index += step\\n                \\n            return \\'\\'.join(ans)\\n```",
                "solutionTags": [],
                "code": "```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\n```\\nans = [\\'P\\', \\'A\\', \\'Y\\', \\'P\\']\\n```\n```\\n# for char \\'A\\': add to row 3 ====> ans = [\\'P\\', \\'A\\', \\'YA\\', \\'P\\']\\n# for char \\'L\\': add to row 2 ====> ans = [\\'P\\', \\'AL\\', \\'YA\\', \\'P\\']\\n# for char \\'I\\': add to row 1 ====> ans = [\\'PI\\', \\'AL\\', \\'YA\\', \\'P\\']\\n```\n```\\n# for char \\'S\\': add to row 2 ====> ans = [\\'PI\\', \\'AS\\', \\'YA\\', \\'P\\']\\n# for char \\'H\\': add to row 3 ====> ans = [\\'PI\\', \\'AS\\', \\'YAH\\', \\'P\\']\\n# for char \\'I\\': add to row 4 ====> ans = [\\'PI\\', \\'AS\\', \\'YAH\\', \\'PI\\']\\n```\n```\\n# for char \\'R\\': add to row 3 ====> ans = [\\'PI\\', \\'AS\\', \\'YAHR\\', \\'PI\\']\\n# for char \\'I\\': add to row 2 ====> ans = [\\'PI\\', \\'ASI\\', \\'YAHR\\', \\'PI\\']\\n# for char \\'N\\': add to row 1 ====> ans = [\\'PIN\\', \\'ASI\\', \\'YAHR\\', \\'PI\\']\\n```\n```\\n# add \\'G\\' to row 2 ====> ans = [\\'PIN\\', \\'ASIG\\', \\'YAHR\\', \\'PI\\']\\n# convert to string we got :  \\'PINASIGYAHRPI\\'\\n```\n```\\ndef convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1 or len(s) < 2:\\n            return s\\n        else:\\n            ans = [\\'\\']*numRows\\n            index, step = 0, 1\\n\\n            for char in s:\\n                ans[index] += char\\n                if index == 0:\\n                    step = 1\\n                elif index == numRows-1:\\n                    step = -1\\n                index += step\\n                \\n            return \\'\\'.join(ans)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 295830,
                "title": "share-java-solution-40ms-memory-99",
                "content": "\\n```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        StringBuilder sb = new StringBuilder(s.length());\\n        int n = numRows -1;\\n        for (int i = 0; i < numRows; i++) {\\n            for (int j = i, k = 0; j < s.length(); j += 2, k++) {\\n                if (k % n == 0) {\\n                    sb.append(s.charAt(j));\\n                    continue;\\n                }\\n                if ((i + k) % n == 0) {\\n                    sb.append(s.charAt(j));\\n                    continue;\\n                }\\n            }\\n        }\\n        return sb.toString();\\n    }\\n}\\n```\\n![image](https://assets.leetcode.com/users/dangerous1990/image_1558343393.png)\\n* **k** index of column\\n* **i** index of row\\n* n = numRows -1\\n*  **j** index of string\\n\\nwhen k=0,4 k%n=0,\\n5,6,7 (i+k)%n=0\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        if (numRows == 1) {\\n            return s;\\n        }\\n        StringBuilder sb = new StringBuilder(s.length());\\n        int n = numRows -1;\\n        for (int i = 0; i < numRows; i++) {\\n            for (int j = i, k = 0; j < s.length(); j += 2, k++) {\\n                if (k % n == 0) {\\n                    sb.append(s.charAt(j));\\n                    continue;\\n                }\\n                if ((i + k) % n == 0) {\\n                    sb.append(s.charAt(j));\\n                    continue;\\n                }\\n            }\\n        }\\n        return sb.toString();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 290913,
                "title": "c-100-speed-beat-100-memory-beat",
                "content": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        \\n        if (numRows <= 1) { return s; }\\n        \\n        int aRowLen[numRows];\\n        char aRowChar[numRows][s.size() / (numRows - 1) + 2];\\n        \\n        memset(aRowLen, 0, sizeof(aRowLen));\\n        memset(aRowChar, 0, sizeof(aRowChar));\\n        \\n        int aRow = 0;\\n        int aCol = 0;\\n        \\n        int i = 0;\\n        bool aVertical = true;\\n        while (i < s.size()) {\\n            \\n            if (aVertical) {\\n                \\n                aRowChar[aRow][aRowLen[aRow]++] = s[i];\\n                \\n                aRow++;\\n                if (aRow > (numRows - 1)) {\\n                    aRow = (numRows - 1);\\n                    aVertical = false;\\n                }\\n            } else {\\n                \\n                aRow -= 1;\\n                aRowChar[aRow][aRowLen[aRow]++] = s[i];\\n                \\n                if (aRow <= 0) {\\n                    aRow = 1;\\n                    aVertical = true;\\n                }\\n            }\\n            ++i;\\n        }\\n        \\n        string aResult;\\n        for (int aRow=0;aRow<numRows;aRow++) {\\n            aResult += string(aRowChar[aRow]);\\n        }\\n        \\n        return aResult;\\n    }\\n};\\n```\\n\\nNot sure if RnG plays in to speed rolls, might be faster on some runs. Basically, we have 3 copies of the data floating around, but do not allocate more memory than needed (except for maybe a partial subset of the \"rows\")",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        \\n        if (numRows <= 1) { return s; }\\n        \\n        int aRowLen[numRows];\\n        char aRowChar[numRows][s.size() / (numRows - 1) + 2];\\n        \\n        memset(aRowLen, 0, sizeof(aRowLen));\\n        memset(aRowChar, 0, sizeof(aRowChar));\\n        \\n        int aRow = 0;\\n        int aCol = 0;\\n        \\n        int i = 0;\\n        bool aVertical = true;\\n        while (i < s.size()) {\\n            \\n            if (aVertical) {\\n                \\n                aRowChar[aRow][aRowLen[aRow]++] = s[i];\\n                \\n                aRow++;\\n                if (aRow > (numRows - 1)) {\\n                    aRow = (numRows - 1);\\n                    aVertical = false;\\n                }\\n            } else {\\n                \\n                aRow -= 1;\\n                aRowChar[aRow][aRowLen[aRow]++] = s[i];\\n                \\n                if (aRow <= 0) {\\n                    aRow = 1;\\n                    aVertical = true;\\n                }\\n            }\\n            ++i;\\n        }\\n        \\n        string aResult;\\n        for (int aRow=0;aRow<numRows;aRow++) {\\n            aResult += string(aRowChar[aRow]);\\n        }\\n        \\n        return aResult;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 202682,
                "title": "c-solution-beats-100",
                "content": "```c\\nchar* convert(char* s, int numRows) {\\n    if (numRows == 1) {\\n        return s;\\n    }\\n    int len = strlen(s);\\n    char *buf = (char *) malloc(sizeof(char) * (len + 1));\\n    int i = 0;\\n    for (int row = 0; row < numRows; row++) {\\n        int step = (numRows - 1) * 2;\\n        int j = 0;\\n        while (j + row < len) {\\n            buf[i++] = s[j + row];\\n            j += step;\\n            if (row > 0 && row < numRows - 1 && j - row < len) {\\n                buf[i++] = s[j - row];\\n            }\\n        }\\n    }\\n    buf[len] = \\'\\\\0\\';\\n    return buf;\\n}\\n```",
                "solutionTags": [],
                "code": "```c\\nchar* convert(char* s, int numRows) {\\n    if (numRows == 1) {\\n        return s;\\n    }\\n    int len = strlen(s);\\n    char *buf = (char *) malloc(sizeof(char) * (len + 1));\\n    int i = 0;\\n    for (int row = 0; row < numRows; row++) {\\n        int step = (numRows - 1) * 2;\\n        int j = 0;\\n        while (j + row < len) {\\n            buf[i++] = s[j + row];\\n            j += step;\\n            if (row > 0 && row < numRows - 1 && j - row < len) {\\n                buf[i++] = s[j - row];\\n            }\\n        }\\n    }\\n    buf[len] = \\'\\\\0\\';\\n    return buf;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 197612,
                "title": "python-beatiful-5-lines-of-code-which-hit-100-percentile",
                "content": "```\\nfrom itertools import chain, cycle\\n\\nclass Solution(object):\\n    def convert(self, s, N):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        lines = [\\'\\'] * N\\n        levels = chain(range(N), range(N - 2, 0, -1))        \\n        for i, s in zip(cycle(levels), s):\\n            lines[i] += s\\n            \\n        return \\'\\'.join(lines)\\n```\\n\\nPlease vote, I will add full explanation if this topic will hit at least 5 points.",
                "solutionTags": [],
                "code": "```\\nfrom itertools import chain, cycle\\n\\nclass Solution(object):\\n    def convert(self, s, N):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        lines = [\\'\\'] * N\\n        levels = chain(range(N), range(N - 2, 0, -1))        \\n        for i, s in zip(cycle(levels), s):\\n            lines[i] += s\\n            \\n        return \\'\\'.join(lines)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 151388,
                "title": "javascript-solution",
                "content": "```js\\nfunction convert(s, numRows) {\\n  if (numRows === 1) {\\n    return s;\\n  }\\n\\n  const N = s.length;\\n  const arr = [...Array(numRows)].map(r => []);\\n\\n  for (let i = 0; i < N; i++) {\\n    const pos = i % (2*numRows-2);\\n    const ii = pos < numRows ? pos : 2*numRows-2-pos;\\n    arr[ii].push(s[i]);\\n  }\\n\\n  return arr.map(r => r.join(\\'\\')).join(\\'\\');\\n}\\n```",
                "solutionTags": [],
                "code": "```js\\nfunction convert(s, numRows) {\\n  if (numRows === 1) {\\n    return s;\\n  }\\n\\n  const N = s.length;\\n  const arr = [...Array(numRows)].map(r => []);\\n\\n  for (let i = 0; i < N; i++) {\\n    const pos = i % (2*numRows-2);\\n    const ii = pos < numRows ? pos : 2*numRows-2-pos;\\n    arr[ii].push(s[i]);\\n  }\\n\\n  return arr.map(r => r.join(\\'\\')).join(\\'\\');\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 122056,
                "title": "go-solution",
                "content": "```\\nfunc convert(s string, numRows int) string {\\n   length := len(s)\\n\\n    bufferSlice := make([]bytes.Buffer, numRows)\\n\\n  for i := 0; i < len(bufferSlice); i++ {\\n\\t  var buffer bytes.Buffer\\n\\t  bufferSlice[i] = buffer\\n  }\\n   i := 0\\n  for i < length {\\n  \\t  for index := 0; index < numRows && i < length; index++ {\\n\\t\\t  bufferSlice[index].WriteString(string(s[i]))\\n  \\t  \\t   i++\\n\\t  }\\n\\t  for index := numRows - 2; index >= 1 && i < length; index-- {\\n\\t\\t  bufferSlice[index].WriteString(string(s[i]))\\n\\t  \\ti++\\n\\t  }\\n  }\\n  for index := 1; index < len(bufferSlice); index++{\\n\\t  bufferSlice[0].WriteString(bufferSlice[index].String())\\n  }\\n  return bufferSlice[0].String()\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nfunc convert(s string, numRows int) string {\\n   length := len(s)\\n\\n    bufferSlice := make([]bytes.Buffer, numRows)\\n\\n  for i := 0; i < len(bufferSlice); i++ {\\n\\t  var buffer bytes.Buffer\\n\\t  bufferSlice[i] = buffer\\n  }\\n   i := 0\\n  for i < length {\\n  \\t  for index := 0; index < numRows && i < length; index++ {\\n\\t\\t  bufferSlice[index].WriteString(string(s[i]))\\n  \\t  \\t   i++\\n\\t  }\\n\\t  for index := numRows - 2; index >= 1 && i < length; index-- {\\n\\t\\t  bufferSlice[index].WriteString(string(s[i]))\\n\\t  \\ti++\\n\\t  }\\n  }\\n  for index := 1; index < len(bufferSlice); index++{\\n\\t  bufferSlice[0].WriteString(bufferSlice[index].String())\\n  }\\n  return bufferSlice[0].String()\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3587,
                "title": "java-quick-o-n-w-explanation",
                "content": "The trick to solving this problem is pattern recognition. Using the original String of \"PAYPALISHIRING\" and a variable number of rows, you can begin to see a pattern evolve. Values in brackets are the respective indexes of the String, \"Step\" represents the index mutation taken each iteration with a comma separating alternating values:\\n\\n3 rows:\\n```\\nP A H N <-(0,4,8...)Step=4\\nAPLSIIG <-(1,3,5...)Step=2\\nY I R   <-(2,6,10...)Step=4\\n```\\n\\n4 rows:\\n```\\nP  I  N <-(0,6,12...)Step=6\\nA LS IG <-(1,5,7...)Step=4,2\\nYA HR   <-(2,4,8...)Step=2,4\\nP  I    <-(3,9,15...)Step=6\\n```\\n\\n5 rows:\\n```\\nP   H <-(0,8,16...)Step=8\\nA  SI <-(1,7,9...)Step=6,2\\nY I R <-(2,6,10...)Step=4\\nPL  IG<-(3,5,11...)Step=2,6\\nA   N <-(4,12...)Step=8\\n```\\n\\nFrom this pattern you can deduce three things:\\n1) The \"original\" step taken is equal to (numRows * 2) - 2. This is only not true when numRows = 1.\\n2) The \"first\" step taken on each step decrements by 2 from the original step each iteration until it equals 0, at which point the original step is restored (i.e this is the last row). For example, 8->6->4->2->0(8). You can use the given row count starting at 0, i, to calculate this quickly using originalStep - (i * 2). This will only be untrue on the last step.\\n3) The alternating steps can be calculated by taking the absolute value of the current step and subtracting the original step from it. For example using the second row of the \"5 rows\" example, abs(6-8) = 2, abs(2-8) = 6, and so forth.\\n\\nMy solution:\\n\\n```\\n    public String convert(String s, int numRows) {\\n        if(numRows < 2 || numRows >= s.length()) return s;\\n        StringBuilder sb = new StringBuilder(s.length());\\n        int origStep = numRows * 2 - 2;\\n        int step = origStep;\\n        for(int i = 0; i < numRows; i++){\\n            step = i == numRows - 1 ? origStep : origStep - i * 2;\\n            int curr = i;\\n            while(curr < s.length()){\\n                sb.append(s.charAt(curr));\\n                curr += step;\\n                int temp = Math.abs(step - origStep);\\n                step = temp == 0 ? origStep : temp; //First/last rows\\n            }\\n        }\\n        return sb.toString();\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\nP A H N <-(0,4,8...)Step=4\\nAPLSIIG <-(1,3,5...)Step=2\\nY I R   <-(2,6,10...)Step=4\\n```\n```\\nP  I  N <-(0,6,12...)Step=6\\nA LS IG <-(1,5,7...)Step=4,2\\nYA HR   <-(2,4,8...)Step=2,4\\nP  I    <-(3,9,15...)Step=6\\n```\n```\\nP   H <-(0,8,16...)Step=8\\nA  SI <-(1,7,9...)Step=6,2\\nY I R <-(2,6,10...)Step=4\\nPL  IG<-(3,5,11...)Step=2,6\\nA   N <-(4,12...)Step=8\\n```\n```\\n    public String convert(String s, int numRows) {\\n        if(numRows < 2 || numRows >= s.length()) return s;\\n        StringBuilder sb = new StringBuilder(s.length());\\n        int origStep = numRows * 2 - 2;\\n        int step = origStep;\\n        for(int i = 0; i < numRows; i++){\\n            step = i == numRows - 1 ? origStep : origStep - i * 2;\\n            int curr = i;\\n            while(curr < s.length()){\\n                sb.append(s.charAt(curr));\\n                curr += step;\\n                int temp = Math.abs(step - origStep);\\n                step = temp == 0 ? origStep : temp; //First/last rows\\n            }\\n        }\\n        return sb.toString();\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3700,
                "title": "8-lines-python-code-using-mod",
                "content": "    class Solution(object):\\n    def convert(self, s, numRows):\\n        if numRows <2: return s\\n        n, m, i = len(s),numRows+numRows-2, 0\\n        rows = ['']*numRows\\n        while i < n:\\n            r = min(i%m, m-i%m)\\n            rows[r] += s[i]\\n            i += 1\\n        return ''.join(rows)",
                "solutionTags": [
                    "Python"
                ],
                "code": "    class Solution(object):\\n    def convert(self, s, numRows):\\n        if numRows <2: return s\\n        n, m, i = len(s),numRows+numRows-2, 0\\n        rows = ['']*numRows\\n        while i < n:\\n            r = min(i%m, m-i%m)\\n            rows[r] += s[i]\\n            i += 1\\n        return ''.join(rows)",
                "codeTag": "Java"
            },
            {
                "id": 3706,
                "title": "a-short-c-o-n-time-o-n-space-solution",
                "content": "    public class Solution {\\n        public string Convert(string s, int numRows) {\\n            if (numRows==1)\\n                return s;\\n            StringBuilder sb = new StringBuilder();\\n            for(int i = 0; i < numRows; i++){\\n                int increment = i * 2;\\n                for(int j=i; j<s.Length; j+=increment!=0?increment:numRows*2-2){\\n                    sb.Append(s[j]);\\n                    increment = numRows*2-2 - increment;\\n                }\\n            }\\n            return sb.ToString();\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public string Convert(string s, int numRows) {\\n            if (numRows==1)\\n                return s;\\n            StringBuilder sb = new StringBuilder();\\n            for(int i = 0; i < numRows; i++){\\n                int increment = i * 2;\\n                for(int j=i; j<s.Length; j+=increment!=0?increment:numRows*2-2){\\n                    sb.Append(s[j]);\\n                    increment = numRows*2-2 - increment;\\n                }",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1567156,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785574,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785511,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1567157,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785317,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785539,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785565,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1565933,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1566065,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1566233,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1567156,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785574,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785511,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1567157,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785317,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785539,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1785565,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1565933,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1566065,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1566233,
                "content": [
                    {
                        "username": "waitingtodie",
                        "content": "No details of what is required at all - it's almost like this:\\ngiven a string Idonthaveaclue, convert it to wtfareyoutalkingabout, and oh yes do it in a zig zag pattern. good luck.\\n\\nWhen you have to spend more time working out the spec than working on the problem, it's a sign of a bad question."
                    },
                    {
                        "username": "sunil-9",
                        "content": "A zigzag pattern is a specific geometric pattern characterized by a series of diagonal lines that alternate in direction, typically forming a \"zig\" and a \"zag\" shape. It\\'s not a random pattern; rather, it follows a structured and repeating sequence of movements. In the given question, the pattern is created by placing characters in rows, and the characters move diagonally between rows in a specific sequence."
                    },
                    {
                        "username": "ankit_lekhak03",
                        "content": "Bro this is really simple problem. Don\\'t know why people hate it so much! problem is solved in only a loop."
                    },
                    {
                        "username": "ankush920",
                        "content": "love you bro :)"
                    },
                    {
                        "username": "somendrasingh019",
                        "content": "[@codeblaze_](/codeblaze_)  BUT PAYPALISHIRING \\uD83E\\uDD23"
                    },
                    {
                        "username": "iamtanmayag",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02true bruh\\n"
                    },
                    {
                        "username": "khess13",
                        "content": "this one made me feel dumb. I think you have to read it vertical first, then up diagonally, down again.\\n\\nEXAMPLEWORD\\nrow = 4\\n\\n1  E          E\\n2  X      L W\\n3  A   P    O  D\\n4  M         R\\n\\nrip these letters and spacing"
                    },
                    {
                        "username": "user8296H",
                        "content": "HAHAH :)"
                    },
                    {
                        "username": "c_v_s",
                        "content": "When Paypal don\\'t want to hire you : )"
                    },
                    {
                        "username": "lafllamme",
                        "content": "bro on god same thought hahahaha wtf is this pattern"
                    },
                    {
                        "username": "Manish_1001",
                        "content": "Ironically, Paypal is laying off "
                    },
                    {
                        "username": "jatinchoubey_19",
                        "content": "Damnn!!! All this time, i was reading it as \"Paypal i shiring\" HAHA"
                    },
                    {
                        "username": "sushi27",
                        "content": "In question, we need to convert the string in zig-zag pattern i.e. think we have 2D array with row n and no limit of column and write the given string in this format\nFirst go from top to down writing each character, then go to next column but one above row until you reach top row. And follow this pattern repeatedly.\nPattern (row = 5)\n```\n1                  9                      17\n2             8    10               16   18                24\n3       7          11         15         19          23 \n4   6              12   14               20    22\n5                 13                    21\n```"
                    },
                    {
                        "username": "mohitosri",
                        "content": "thanks bro,  now it is clear that how will be the question\\'s output ."
                    },
                    {
                        "username": "AgusCloud",
                        "content": "thank you, your comment was more useful than the request"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nIt will be a good idea  if you provide a detailed test case when there is a 'Run time error'. This will ease the things to debug, especially when the code runs perfectly fine on local machines but not on Leet Code.\\n\\nThanks."
                    },
                    {
                        "username": "S-U-M-I-T",
                        "content": "in such cases just print the input data you can try that on local machines and fix it \\nfor example in this case you have input int row, and String str \\nthen just print it like the following\\nclass Solution {\\n      public String convert(int row, String str){\\n          System.out.println(\"row-> \"+row+\" str-> \"+str);\\n          ..................\\n          .......\\n          ....\\n     }\\n}\\nthis way you can see it will print it in std output of leetcode just try that in your local machine and it will fix the problem "
                    },
                    {
                        "username": "diabloexodia",
                        "content": "try directly returning the string if R=1"
                    },
                    {
                        "username": "hendrywiranto",
                        "content": "try print something to stdout, it showed the TC on me"
                    },
                    {
                        "username": "joseph261059",
                        "content": "Don\\'t think too much, use a 2D array to generate the pattern first, and then join characters of each row. Sometimes naive version works best"
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        if(numRows == 1) return s;\\n        String[] strArr = s.split(\"\");\\n        String ans = \"\";\\n        for(int i = 0; i < numRows; i++) {\\n            int j = i;\\n            while(j < strArr.length) {\\n                ans += strArr[j];\\n                if(!(i == j || i == 0 || i == numRows - 1)) {\\n                    j = j + 2 * i;\\n                    if(j < strArr.length) {\\n                        ans += strArr[j];\\n                    }\\n                }\\n                if(i < numRows - 1)\\n                    j = j + 2*(numRows - i - 1);\\n                else\\n                    j = j + 2*(numRows - 1);\\n            }\\n            // System.out.println(ans);\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "Subhan_11",
                        "content": "i did the same but time limits exceeds"
                    },
                    {
                        "username": "rotem250297",
                        "content": "I always get Time Limit Exceeded\\nthis is my solution:\\n\\ndef convert(self, s, numRows):\\n        \"\"\"\\n        :type s: str\\n        :type numRows: int\\n        :rtype: str\\n        \"\"\"\\n        new_s=\"\"\\n        matrix = np.zeros((numRows,len(s)),dtype=str)\\n        i=0\\n        j=0\\n        k=0\\n        \\n        while k<len(s):\\n            matrix[i][j]=s[k]\\n            if i+1==numRows:\\n                while i>0:\\n                    i-=1\\n                    j+=1\\n                    k+=1\\n                    matrix[i][j]=s[k]\\n            else:        \\n                i+=1\\n                k+=1\\n\\n        for row in matrix:\\n            new_s+=\\'\\'.join(row)\\n        return new_s"
                    },
                    {
                        "username": "Aadil42",
                        "content": "[@armagan979](/armagan979) You can add the edge case at the top\\n if(numRows === 1) return s;\\n\\ncheck out my code in JS.\\n///////////////////////////////////////////////code starts////////////////////////////////////////////\\nvar convert = function(s, numRows) {\\n    \\n    if(numRows === 1) return s;\\n    let zigZagArr = [];\\n    for(let i = 0; i < numRows; i++) {\\n        zigZagArr.push([]);\\n    };\\n\\n    let row = 0;\\n    let column = 0;\\n    let i = 0;\\n    let goUp = false;\\n    while(i < s.length) {\\n        if(!goUp) {\\n           [row, i] = goDown(row, column, i);\\n           goUp = !goUp;\\n           column++;\\n        } else {\\n            [row,column, i] = goUpD(row,column,i);\\n            goUp = !goUp;\\n        }\\n    }\\n\\n    function goUpD(r,c,i) {\\n        while(r > -1 && i < s.length) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            c++;\\n            r--;\\n        }\\n        r = 1;\\n        c = c - 1;\\n        return [r,c,i];\\n    }\\n\\n    function goDown(r,c,i) {\\n        while(r < numRows) {\\n            zigZagArr[r][c] = s[i];\\n            i++;\\n            r++;\\n        }\\n\\n        r = numRows - 2;\\n        return [r,i];\\n    }\\n\\n    zigZagArr = zigZagArr.map((arr) => {\\n        return arr.filter((char) => {\\n            return char !== undefined;\\n        });\\n    });\\n    \\n    let result = \\'\\';\\n    for(let i = 0; i < zigZagArr.length; i++) {\\n        result += zigZagArr[i].join(\\'\\');\\n    };\\n\\n    return result;\\n};\\n////////////////////////////////////////////////code ends/////////////////////////////////////////"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee) think it might be the \"edge\" cases, i.e. when numRows is 1 or s.length <= numRows ; for me those gave time limit exceeded. Hope you managed to solve it in the mean time :)"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "[@Crishpy_Coffee](/Crishpy_Coffee)  there must be some error in your code\\n"
                    },
                    {
                        "username": "armagan979",
                        "content": "//could you help here.. not understanding what is wring here.\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "i did it exactly that but it gives me tle, which is sad : ("
                    },
                    {
                        "username": "b0968760387",
                        "content": "Alien problem again today haha "
                    },
                    {
                        "username": "bk_3497",
                        "content": "I am ignoring this question for a long time."
                    },
                    {
                        "username": "Hemant3112",
                        "content": "I too was ignoring it but it was coming infront of my eyes many many times so i though let scramble our mind in this question \\n"
                    },
                    {
                        "username": "ishita_gupta21",
                        "content": "[@devhindo](/devhindo) i suggest giving up at this point LMAO, see a solution"
                    },
                    {
                        "username": "devhindo",
                        "content": "I got like 20 wrong submissions"
                    },
                    {
                        "username": "vigneshm",
                        "content": "I see a lot of answers specific to the code, but I'm trying to understand what it generally means in LeetCode OJ"
                    },
                    {
                        "username": "haishenjun",
                        "content": "What should be the pattern of \"ABC\", 2?\\n\\nI suppose it to be \\n\\nA\\nB C\\n\\nand return \"ABC\".\\n\\nWhy is the answer \"ACB\"?"
                    },
                    {
                        "username": "Code_Enthusiast232",
                        "content": "It\\'s like:\\n\\nA C\\nB"
                    },
                    {
                        "username": "AHCoding",
                        "content": "The pattern would be \\nA C\\nB\\nSo first we would read A then C then B that is why the answer is \\'ACB\\'. I understand the question and the task but I am unable to code, Plus I also figured out the n-Notation of the first layer step which is steps = n + (n -2)... if you know what I mean..."
                    },
                    {
                        "username": "Yanderuri",
                        "content": "The C is supposed to be on the first row. Since BC is on the \"diagonal\" shooting backup."
                    },
                    {
                        "username": "ayushkumartiwari468",
                        "content": "you typed it wrongly the pattern would be\\nA C\\nB"
                    },
                    {
                        "username": "Ayush_Singh_610",
                        "content": "When u fill 1 col acc to the row no. like r = 2 here. it fills here first \nA\n|\nB\nthen move up to next col for same style of fillings untill the chars r not empty in gievn string. so it goes up like this\n```\nA   C\n|  /\nB / \n```"
                    },
                    {
                        "username": "Pellyyy",
                        "content": "ACB is correct. You fill up every row and then move to the next column starting at the first row again. \\nRow 1: A C\\nRow 2: B\\n\\nJoining row 1 and 2 would then lead to -> ACB "
                    },
                    {
                        "username": "knitin",
                        "content": "Zig Zag Pattern \\n A  C \\n B\\nFirst write full column than Bottom to Up Diagonal .\\n"
                    },
                    {
                        "username": "meeshaw",
                        "content": "If the number of rows is 2, there is no intermittent diagonal rows => C goes to the top row => ACB"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "[@ittan](/ittan)   and how, exactly, did you determine which row the C should be written on?"
                    },
                    {
                        "username": "skrehbiel",
                        "content": "According to the specification given, when the numRows is even, the pattern writes to the higher-numbered center row first.  So Haishenjun is correct.   They gave the example shape (but I'm using numbers instead of the string):\n1________7\n2_____6__8\n3__5_____9\n4_________\n\nso according to their example, the pattern\n1___3\n2\nwould be wrong, because the 5 is on the lower row than the 6.\n\nSince we're given no specs whatsoever on the pattern, we can only infer it to be\n1\n2___3\n\nThere are two competing interpretations we could make.   One interpretation is that when numRows is even, always use the bottom-center row first, as in the example output.   The other possibility is that the rule just mentioned does not apply to the border rows, but then writing the 3 on the top or bottom row would also be wrong.   (and Leetcode expects to charge a membership fee for this junk?)\n\nMaybe if they bothered to define the question, I could give a better answer!  \n\n(by the way, this is a great test of whether you want to work for an employer or not - if they blame you for not being a mind-reader, then you probably don't want the job anyway!)"
                    },
                    {
                        "username": "ittan",
                        "content": "ACB is correct \\nSo basically string ABC with 2 numRows will give a string in below form\\nA C\\nB \\n\\nand not \\nA\\nB C \\nas you have mentioned in your comment"
                    },
                    {
                        "username": "romeshtripathi",
                        "content": "pattern is like :\\n|  /|  /|\\n|/  |/  |\\n\\nSo ABC, 2 will be\\nA  C\\nB\\n\\nYou can\\'t put them like \\n|    |\\n| _ |   and so on..\\n"
                    },
                    {
                        "username": "arthertz",
                        "content": "You are not quite right, it will begin to go up again after hitting the \"floor\" with B\n\nSo it will look like this:\nA C\nB\n\nThen it will read \"ACB\" as stated."
                    },
                    {
                        "username": "ank031100",
                        "content": "here the pattern is like\n\nA _  E\nB D\nC _\n\nfor s = ABCDE and r =3\nso first go down in that column and then come up but in that process each column will have only one char.\n\nso for ABC and r=3\nA  C\nB  \n\nand ans = ACB"
                    },
                    {
                        "username": "xuyi_sg",
                        "content": "I\\u2018m so confused about the qeustion description, please help me clarify. \\nIf no one answers, I have to look at your answers instead of to solve by meself first. And that will be sad. \\n\\nSuppose the input string is always \"ABCDEFGHIJKLMN\".\\n\\n**Case 1:**\\n\\nIf rowNum = 2, what does the zig zag pattern look like? Should C, D and G be inline with the first row or the section row ?\\n\\n\\nACDFGIJLM\\n\\nB[]E[]H[]K[]N\\n\\n**Case 2:**\\n\\nif rowNum = 4, what does the zig zag pattern look like? How many characters should be placed in the odd columns (suppose index starts from 0)? If there is only one character, same question as case 1, which row should this one character be inline with? \\n\\nA[]G[]M\\n\\nBEHKN\\n\\nCFIL\\n\\nD[]J[]\\n\\n**Case 3:**\\n\\nif rowNum = 5, how many columns should be between the adjacent two 5-row columns to make the shape like \"Z\"? Is it still only one or three (as shown below)?\\n\\nA[][][]I[]        \\n\\nBF[][]JN         \\n\\nC[]GK[]\\n\\nD[][]HL[]\\n\\nE[][][]M[]"
                    },
                    {
                        "username": "Aishwarya_Omar",
                        "content": "Suppose the input string is always \"ABCDEFGHIJKLMN\".\\n According to\\xA0my understanding, your case 1 is correct.\\n\\nCase 2:\\nif rowNum = 4, \\n\\nA[][]G[][]M\\n\\nB[]FH[]LN\\n\\nCE[]IK[][]\\n\\nD[][]J[][][]\\n\\nCase 3:\\nif rowNum = 5, \\n\\nA[][][]I[]\\n\\nB[][]HJ[]\\n\\nC[]GK[]\\n\\nDF[][]LN\\n\\nE[][][]M[]"
                    }
                ]
            },
            {
                "id": 1566731,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1570984,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1567790,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1785787,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1785543,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1785310,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1572970,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1569423,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1567751,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1567791,
                "content": [
                    {
                        "username": "vikaslinux",
                        "content": "Please provide a testcase when number of rows is 6 and 7.Actually the problem is not so clear to me."
                    },
                    {
                        "username": "shutdown-r",
                        "content": "[@hanupreeti_jain](/hanupreeti_jain) Thank you this helps"
                    },
                    {
                        "username": "hanupreeti_jain",
                        "content": "If you consider the indices of a 0 indexed string this is how the pattern would look\\n\\nFor rows = 6:\\n0________10 ________________20\\n1_____9__11____________19__21\\n2___8____12_________18_____22\\n3__7_____13______17________23\\n4_6______14__16____________24\\n5________15_________________25\\n\\nFor rows = 7:\\n0_______________12_____________________24\\n1__________11__13_________________23__25\\n2_______10_____14_____________22______26\\n3_____9_________15_________21_________27\\n4___8___________16_____20_____________28\\n5_7_____________17_19_________________29\\n6_______________18_____________________30"
                    },
                    {
                        "username": "zwsjink",
                        "content": "Strange, I got wrong answer, but the expected and output are exactly the same.!!!\\n\\nInput:\\t\"AB\", 2\\nOutput:\\t\"AB\"\\nExpected:\\t\"AB\"\\n\\nSomeone could explain it for me?"
                    },
                    {
                        "username": "GrosRat",
                        "content": "same help :\\'(\\n"
                    },
                    {
                        "username": "_FelixSun_",
                        "content": "I submitted the code and failed on the case (\"ABCD\", 2), shoudn't the ZigZag strings be\\n\\n{A  C  D}       | or |        {A  ... D}\\n\\n\\n{B  ......}      | or |        {B  C....} \\n\\nSo the answer should be either \"ACDB\" or \"ADBC\", but how could the expected answer is \"ACBD\"?"
                    },
                    {
                        "username": "LeetcodeProtector",
                        "content": "![alt text](https://i.imgur.com/QfbsjUh.png)\\n![alt text](https://i.imgur.com/RZpkxDZ.png)\\n\\nThings changed pretty quickly. "
                    },
                    {
                        "username": "PARILAKSHYA",
                        "content": "\\uD83D\\uDE02\\uD83D\\uDE02"
                    },
                    {
                        "username": "thetoon",
                        "content": "The description better be changed to reflex the reality to \"PAYPALISFIRING\"."
                    },
                    {
                        "username": "DexterHines",
                        "content": "Of all the questions I never wanted to see on leetcode daily this one had the crown and ofc leetcode would choose it out of its 2000+ question list"
                    },
                    {
                        "username": "EmmettHou",
                        "content": "just find the law in transformed partten for each column \\n\\n![image](https://assets.leetcode.com/users/emmetthou/image_1567133746.png)\\n"
                    },
                    {
                        "username": "shyamvenkat007",
                        "content": "Can you explain on this process a bit more briefly?"
                    },
                    {
                        "username": "BibhuPala",
                        "content": "Input: s = \"PAHNAPLSIIGYIR\", numRows = 3\\nGiven the string which is read row-wise generate the original string?\\n\\nOutput: \"PAYPALISHIRING\""
                    },
                    {
                        "username": "hellendspiel",
                        "content": "Yea i dont get it too.... "
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript  here: \\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "hxu",
                        "content": "A\\n\\nB C\\n\\n--> ABC\\n\\ncorrect me! I wasn't able pass this simple case, however, I believe this the right output."
                    },
                    {
                        "username": "akashkumar200",
                        "content": "it is in zig zag so\\nA C\\nB\\nand if it is ABCD, the answer should be\\nA C\\nB D"
                    }
                ]
            },
            {
                "id": 1566730,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1823113,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1570943,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1573242,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1572744,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1570977,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1570980,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1570983,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1567775,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1567764,
                "content": [
                    {
                        "username": "bill19",
                        "content": "I'm not quite understand what is ZipZag means in this question. For example, what are rules to generate the ZipZag format of a String, what the pattern looks like when there are 4 rows, 5 rows, etc."
                    },
                    {
                        "username": "programmer-buddy",
                        "content": "If you clearly read, and understand the question, it clearly states that, we have to traverse the string in a zig-zag form, which means, \\nFOR  \"ZIG\" just print r elements;\\nFOR  \"ZAG\" just print r-2 elements;\\n\\nBRUTE FORCE:\\n\\nEXAMPLE:  \\nSTRING = \"PAYPALISHIRING\"\\nR = 3\\n\\nFOR ZIG: if you simply store \"R\" elements in a 2d matrix like this:\\n[P]\\n[A]\\n[Y]\\n\\nand \\nFOR ZAG: if you store \"R-2\" elements in a 2d matrix from bottom to top like this:\\n\\n[P     ]\\n[A, P ]\\n[Y     ]\\n\\nand repeat the process for whole string.\\n\\nitr2:\\n[P      A]\\n[A  P  L]\\n[Y       I]\\n\\nitr3:\\n[P      A    ]\\n[A  P  L  S]\\n[Y       I    ]\\n\\nitr4:\\n[P      A      H]\\n[A  P  L  S   I ]\\n[Y       I       R]\\n\\nitr5:\\n[P      A      H   ]\\n[A  P  L  S   I   I]\\n[Y       I       R   ]\\n\\nitr6:\\n[P      A      H      N]\\n[A  P  L  S   I   I   G]\\n[Y       I       R        ]\\n\\nIf you understand this, try another optimized version. \\n\\nIf you still confused, try running for different number of rows."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Video Solution\\nhttps://nileshblog.tech/humix/video/f239ef5c145b049977c4fb8707654e1219d33372b4304f6571a4c43b40a4942c"
                    },
                    {
                        "username": "umangthusoo1995",
                        "content": "my code is Accepted while Running the test case shown in \"last executed input\" but fails when submitting. can anyone tell the reason"
                    },
                    {
                        "username": "danel_danel",
                        "content": "If you submit the same solution  many times then the site will report differnet runtime and memory usage :)"
                    },
                    {
                        "username": "sonnyrajagopalan",
                        "content": "Am I the only person scratching my head about zig zag conversion? The problem states little to no indication of what happens when numRows is not 3, not to mention if there is only character in the middle or something else. Terrible and not at all fun problem."
                    },
                    {
                        "username": "azhall",
                        "content": "First of all, lacking examples out the a-hole.  An even zig-zag?\\nSo I fail on this TC:\\nstring = \"ABC\"\\nnumRows = 2\\nexpected result: \"ACB\"\\n\\nOk, so mentally I'm picturing\\nA C \\nB\\n\\nSo I throw in a fix, only to fail on \\nstring = \"ABCDE\"\\nnumRows = 4\\nexpected result: \"ABCED\"\\n\\nABCED?? Are you fucking with me??  \\n\\nA E\\nB\\nC\\nD\\n\\n/rage quit"
                    },
                    {
                        "username": "uncle_cat",
                        "content": "Maybe I am too dumb to experience the essence of this problem, but I am really confused that there are thousand ways of playing with a string. What knowledge or skill does this problem want to test us? If I meet this problem in an interview, I will ask for another one, or  just quit."
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1568781,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1786520,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1786452,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1786409,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1785985,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1785952,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1785932,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1785821,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1750325,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1576669,
                "content": [
                    {
                        "username": "_NileshRaut",
                        "content": "Simple C++ | Python | Java | JavaScript here:\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    },
                    {
                        "username": "devhindo",
                        "content": "That problem was a nightmare"
                    },
                    {
                        "username": "ritiksharma8427",
                        "content": "Divide the problem in subsections and try to find out the pattern in the given matrix."
                    },
                    {
                        "username": "S_Basu",
                        "content": "# \\uD83D\\uDE30\\uD83D\\uDE25\\uD83E\\uDD75\\uD83E\\uDD2F\\uD83D\\uDE24\\uD83E\\uDD2F\\nThis question made me go through all of the above...\\nUntil FINALLY!!!\\n# \\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8"
                    },
                    {
                        "username": "ck439105",
                        "content": "Why my keyboard\\'s keys are not working on this problem??im very anxious."
                    },
                    {
                        "username": "VikasSoni10",
                        "content": "Paypal is hiring & Google is firing \\uD83E\\uDD23\\uD83D\\uDE02"
                    },
                    {
                        "username": "abhiMikasa",
                        "content": "You will be hired in PAYPAL if you solve this .\\nLOL"
                    },
                    {
                        "username": "belinskyi",
                        "content": "Nice, daily question which has number of dislikes almost two times more than likes. "
                    },
                    {
                        "username": "Mister_CK",
                        "content": "I think they probably updated it since those dislikes, I wouldn\\'t know what there is to dislike about this one. pretty straightforward puzzle"
                    },
                    {
                        "username": "yonifra",
                        "content": "This was a very nice question! Once you understand the logic behind the zigzagging it\\'s actually not to hard to code the solution for this. For me, it was basically running \"up and down\" the number of rows, creating a map of each row and its letters, and then combining it all together"
                    },
                    {
                        "username": "COdeGun007",
                        "content": "Fast C++ || Java || Python || JavaScript Solution \\n\\nhttps://www.nileshblog.tech/2022/04/21/leet-code-zigzag-conversion-solution-c-java-python-javascript-swift-typescript/"
                    }
                ]
            },
            {
                "id": 1576644,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1576534,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1575791,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1575478,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1574667,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1574033,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1573842,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1570979,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1570978,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1570981,
                "content": [
                    {
                        "username": "prathamruhela",
                        "content": "![image](https://assets.leetcode.com/users/images/93642a6e-2a52-441d-890a-2a1980c6a6eb_1650466312.4305205.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/3b038ccb-619b-4868-8726-11a5856d0c23_1632762605.835226.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/3fe42fb0-9706-4dfe-a361-49129b0dfebd_1632762610.1210344.png)\\n"
                    },
                    {
                        "username": "WilmerKrisp",
                        "content": "![image](https://assets.leetcode.com/users/images/73c7601e-b033-47fb-8ef8-5de8a708fa35_1625176545.550314.png)\\n\\n![image](https://assets.leetcode.com/users/images/33c8e974-b1cd-45ad-97f3-4a91ec2c49ed_1625176551.957508.png)\\n"
                    },
                    {
                        "username": "erkangxu",
                        "content": "I\\'ve got this follow up in my interview by a thoughtful Interviewer.\\nThink this kind of conversion is a encryption method. \\nHow do you convert the encrypted string back to it\\'s clear text form?"
                    },
                    {
                        "username": "msn_user",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/\\n"
                    },
                    {
                        "username": "john_112",
                        "content": "Here\\'s good explanation and code in C++/Java/Python with comments:\\nhttps://www.techiedelight.com/print-string-in-zig-zag-form-k-rows/"
                    },
                    {
                        "username": "zhugejunwei",
                        "content": "I think this question's description is not clear enough.  \\n\\nWhat if the number of rows is 4? How will the second column be like?"
                    },
                    {
                        "username": "trycatch",
                        "content": "How come convert(\"ABC\", 2) is ACB not ABC?"
                    },
                    {
                        "username": "stamen3054",
                        "content": "Why the result is not ABC?\\n\\nShouldn't the even line have a blank, so the first line should be A_, and the second line should be BC?"
                    }
                ]
            },
            {
                "id": 1570982,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2076223,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2073869,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2065785,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2057171,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2050816,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2050704,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2047636,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2036293,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2030972,
                "content": [
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nOnce the code is accepted, the previous wrong submissions code reflects the correct code but not the wrong one. This is not useful if we want to look at the wrong code and debug it at later point of time.\\n\\nCould you please correct this?\\n\\nthanks."
                    },
                    {
                        "username": "divyanshu08jan",
                        "content": "Here goes solution without 2D array\n\nclass Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1) return s;\n        String[] strArr = s.split(\"\");\n        String ans = \"\";\n        for(int i = 0; i < numRows; i++) {\n            int j = i;\n            while(j < strArr.length) {\n                ans += strArr[j];\n                if(!(i == j || i == 0 || i == numRows - 1)) {\n                    j = j + 2 * i;\n                    if(j < strArr.length) {\n                        ans += strArr[j];\n                    }\n                }\n                if(i < numRows - 1)\n                    j = j + 2*(numRows - i - 1);\n                else\n                    j = j + 2*(numRows - 1);\n            }\n            // System.out.println(ans);\n        }\n        return ans;\n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "vikasdongarwar",
                        "content": "can anyone explain me, what is wrong here?\n\nvar convert = function(s, numRows) {\n    console.log(s)\n    var arr=new Array(numRows).fill([]);\n    console.log(arr,arr[0])\n    var pos=0;\n    for(var i=0;i<s.length;i++)\n    {\n        arr[pos].push(s[i]);\n        pos=pos+1;\n        if(pos==numRows)\n        {\n            pos=0;\n        }\n    }\n    console.log(arr)\n};"
                    },
                    {
                        "username": "Cydraech",
                        "content": "I really like the problem, but sadly the wording is very unlucky. An easier explanation of the zig zag pattern would make this problem much better. A visual representation of it would\\'ve gone a long way."
                    },
                    {
                        "username": "harikrishna8121999",
                        "content": "\\nHint 1:\\nTo grasp the significance of the positions of elements in the output, it\\'s essential to recognize their relationship with the numRows parameter. Consider the following example:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\n\\nIn this case, let\\'s examine the difference between the first element \\'P\\' and the next element \\'I\\' in the output, which is 6. This difference corresponds to 2 times (numRows - 1), where (numRows - 1) equals 2*(4-1).\\n\\nHint 2:\\nThe calculation of the difference in positions changes when there are diagonal elements in the matrix. For instance:\\n\\nInput: s = \"PAYPALISHIRING\", numRows = 4\\nOutput: \"PINALSIGYAHRPI\"\\nExplanation:\\n\\n```\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n```\\n\\nIn the first and last rows, where there are no diagonal elements, the difference between element positions remains 2 times (numRows - 1). However, in the other rows, where diagonal elements are present, a different logic should be applied to calculate the diagonal difference."
                    },
                    {
                        "username": "Haseeeb1",
                        "content": "hey guys , the zigzag thing works like this\\n\\nstring: \"PAYPALISHIRING\"\\nstart mapping the characters from top to bottom in a column. \\nfirst column:\\nP\\nA\\nY\\n\\nnow move upwards in a zigzag manner and when you reach the first row, start moving top to bottom again, and repeat until characters end.\\n1):\\nP\\nA P (move zigzag)\\nY\\n\\n2):\\nP      A\\nA  P  L   I\\nY       I\\n"
                    },
                    {
                        "username": "nikolacincovic73",
                        "content": "Easy task, terrible explanation.\\nFor starters, first testcase might be less confusing if printed like this\\n\\nrow 0 || P              A               H               N\\nrow 1 ||     A      P       L      S       I        I       G\\nrow 2 ||         Y               I                R\\n\\nIf you read the letters by rows you will get \"PAHN\"+\"APLSIIG\"+\"YIR\"=\"PAHNAPLSIIGYIR\"\\n\\nBasically you make counter variable to remember what row are you currently in (starting from 0).\\nYou put next character from input string into that row, update counter value so you\\'re in next row and keep doing that until you\\'ve reached the end of input string.\\nKeep in mind that each time you get to the first or last row you switch direction of moving.\\nJoin all rows and you get the solution.\\n"
                    },
                    {
                        "username": "satendra_04",
                        "content": " buthie bdfjbuekb  jefiuhneui jbdufhiogvhe badiufhioser bfirehfiehriof ifrherhg ufoeir ieruhgoier and convert it into zigzag fashion"
                    },
                    {
                        "username": "sapercq",
                        "content": "Java solution 2ms (faster than 99.9)\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/3978572/faster-then-99-89-solution-43-78memory-loop-java/"
                    },
                    {
                        "username": "udayleetco",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        int x=s.length();\\n        char arr[][]=new char[numRows][x];\\n        int n=numRows;\\n        for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                arr[i][j]=\\'@\\';\\n            }\\n        }int k=0;\\n        int l=0;\\n        while(k<x){\\n        char t=s.charAt(k);\\n         for(int i=0;i<n-1;i++){\\n             arr[k][l]=t;\\n             k++;\\n         }\\n         l++;\\n         for(int j=n-2;j>1;j--){\\n          \\n             arr[k][l]=t;\\n                k--;\\n         }\\n        }\\n        String st=\"\";\\n     for(int i=0;i<n;i++){\\n            for(int j=0;j<x;j++){\\n                if (arr[i][j] !=\\'@\\'){\\n                  st+=arr[i][j];\\n                }\\n            }\\n        }\\n        return st;\\n        }\\n    }\\nwhats the error ?"
                    }
                ]
            },
            {
                "id": 2030461,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 2029642,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 2027882,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 2026473,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 2024321,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 2020721,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 2019735,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 2009569,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 2009302,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 1999254,
                "content": [
                    {
                        "username": "jordan222",
                        "content": "This was a great first problem to get back into LeetCode."
                    },
                    {
                        "username": "Klinag",
                        "content": "On leetCode shows that I have an unknown simbol in my answer, when i test it on my IDE answers mathes. Help please\\n"
                    },
                    {
                        "username": "yeedaKing",
                        "content": "I feel that it\\'s a pretty good problem once you understand what\\'s being asked"
                    },
                    {
                        "username": "jaydeepsolanki4567",
                        "content": " char * convert(char * s, int numRows)\\n{\\n    char *str=(char*)malloc(strlen(s)*sizeof(char));\\n    int k=0;\\n    for (int i=0; i<numRows; i++)\\n    {\\n        for(int j=i;j<strlen(s); j++)\\n        {\\n            if((j+i)%((numRows-1)*2)==0 || (j-i)%((numRows-1)*2)==0)\\n            {\\n            str[k++]=s[j];\\n            }\\n        }\\n    }\\n    return str;\\n}\\n\\nwhy my solution is throwing an error: \"heap-buffer-overflow\" ? while it\\'s working perfectly fine on VScode."
                    },
                    {
                        "username": "weraponpat",
                        "content": "this should be easy level tbh "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "They all say that the problem should be easy until they got it on an interview (c)"
                    },
                    {
                        "username": "piotr-ginal",
                        "content": "can someone please tell me why this problem has so many dislikes?"
                    },
                    {
                        "username": "Vaibhav247",
                        "content": "class Solution {\\npublic:\\n\\n    int solve(string s,int row) {\\n        if(row==1) {\\n            return s.size();\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        while(index<n) {\\n            index++;\\n            i++;\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        return j+1;\\n    }\\n\\n    string convert(string s, int row) {\\n        if(s.size()==1) {\\n            return s;\\n        }\\n        vector<vector<char>>v(row,vector<char>(solve(s,row),\\'0\\'));\\n        if(row==1) {\\n            return s;\\n        }\\n        int n = s.size();\\n        int i=0;\\n        int j=0;\\n        int index=0;\\n        v[0][0]=s[0];\\n        while(index<n) {\\n            index++;\\n            i++;\\n            v[i][j]=s[index];\\n            if(i==row-1) {\\n                while(i>0 && index<n-1) {\\n                    j++;\\n                    index++;\\n                    i--;\\n                    v[i][j]=s[index];\\n                    if(index==n-1) {\\n                        break;\\n                    }\\n                }\\n            }\\n            if(index==n-1) {\\n                break;\\n            }\\n        }\\n        string ans=\"\";\\n        for(auto i:v) {\\n            for(auto j:i) {\\n                if(j!=\\'0\\') {\\n                    ans.push_back(j);\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "Mister_CK",
                        "content": "please don\\'t post solutions in discussion. that\\'s what the solution tab is for"
                    },
                    {
                        "username": "shlok4112000",
                        "content": "If you are trying to print this zigzag pattern then saving the string in a 2D array in the given format is a viable solution. So for that:\\nMaximum number of columns required will always  = int ( ( len(s) + 1) / 2)"
                    },
                    {
                        "username": "cp_wallah",
                        "content": "one of the worst wording and explanantion of  a question"
                    },
                    {
                        "username": "thedabbinggamer894",
                        "content": "yeah it doesn\\'t really tell you that there are no zigs, only zags, so you have to read it vertically then diagonally, not diagonally all the way through"
                    },
                    {
                        "username": "tonynin1",
                        "content": "Spend a whole day to solve this problem, but then i realize it\\'s not an usual problem :) 100% depend on your creativity"
                    }
                ]
            },
            {
                "id": 1997061,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1996675,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1991001,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1976844,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1975121,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1974113,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1963356,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1957666,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1949689,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1949400,
                "content": [
                    {
                        "username": "kenzgf",
                        "content": "Actually kinda a cool problem that\\'s just pure string manipulation and coding basics, no strings attached!"
                    },
                    {
                        "username": "tomamais",
                        "content": "please, more examples to make it clear. As per the examples above, the test case \"ABCDE\" should be something like this:\\n\\nA - C - D\\nB -    -  E"
                    },
                    {
                        "username": "ChidiE",
                        "content": "No sure why the complaints tho....just increase and decrease the index of the numRows by 1.\\nso numRows 3 is equivalent to.\\n\\n\\'P A Y P A L I S H I R I N G\\'\\n\\'0 1 2 1 0 1 2 1 0 1 2 1 0 1\\'\\n\\nconcat the 0s 1s 2s"
                    },
                    {
                        "username": "user3974tS",
                        "content": "I really like this question"
                    },
                    {
                        "username": "Raveesh_gautam",
                        "content": "class Solution {\\n    public String convert(String s, int numRows) {\\n        ArrayList<Pair> list=new ArrayList<>();\\n        // boolean flag=true;\\n        int cnt=0,c=0;\\n        while(s.length()>cnt){\\n        for(int i=0;i<numRows;i++){\\n            if(i+c<s.length())\\nlist.add(new Pair(i,s.charAt(i+c)+\"\"));\\n\\ncnt++;\\n        }\\n        for(int j=numRows-2;j>=1;j--){\\n            if(cnt<s.length())\\n            list.add(new Pair(j,s.charAt(cnt)+\"\"));\\n            \\n            cnt++;\\n        }\\n        c=cnt;\\n\\n        }\\n\\n        StringBuilder sb=new StringBuilder(\"\");\\n        int k=0;\\n        while(k<numRows){\\n   for(Pair pair:list){\\n\\nif(pair.getKey()==k){\\nsb.append(pair.getValue());\\n}\\n\\n   }  \\n   k++;   \\n        }\\nreturn sb.toString();\\n    }\\n}\\nclass Pair{\\n     private int key;\\n    private String value;\\n\\n    public Pair(int key, String value) {\\n        this.key = key;\\n        this.value = value;\\n    }\\n\\n    public int getKey() {\\n        return key;\\n    }\\n\\n    public String getValue() {\\n        return value;\\n    }\\n\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "kapsimus",
                        "content": "Wrong Answer\\n\\nOutput\\n\"PINALSIGYAHRPI\"\\nExpected\\n\"PINALSIGYAHRPI\"\\n\\nWhy?\\n"
                    },
                    {
                        "username": "Krvijay_32",
                        "content": "It is one of the Nice question i have ever encountered.\n"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "garbage question"
                    },
                    {
                        "username": "jonahbebko",
                        "content": "Finally solved. Hint: lay out `s` up-to-down, like Snake. Reverse every second column."
                    },
                    {
                        "username": "jonahbebko",
                        "content": "me when the problem has zero real-world applications"
                    }
                ]
            },
            {
                "id": 1940066,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1936652,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1930551,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1902536,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1876132,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1875022,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1874592,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1868301,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1860535,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1850099,
                "content": [
                    {
                        "username": "shyamvenkat007",
                        "content": "I am getting the following error when I try to run my program, but I have checked the code with an online compiler and it works fine in it. What might be the problem?\\nterminate called after throwing an instance of \\'std::bad_alloc\\'\\n  what():  std::bad_alloc"
                    },
                    {
                        "username": "hd116527",
                        "content": "Heres how I understood this question, the string is read in this order\\n\\nnumRows = 3\\n\\n1     5    9\\n2 4 6 8\\n3    7\\n\\nyour goal is to return the string grouped by the rows in which they appear meaning they will be grouped as such:\\n\\n1     1     1\\n2 2 2 2 2\\n3    3    3\\n\\nthe letter are grouped by number in the order of appearance as shown by the first diagram\\n\\nhope this helps"
                    },
                    {
                        "username": "Alexamzi",
                        "content": "You can either rawdog it into an array and combine the rows (medium difficulty) or develop and implement an algorithm (hard difficulty). I like this problem."
                    },
                    {
                        "username": "Alexamzi",
                        "content": "Though I don\\'t think you can set the algorithm with runtime less than O(n^2)."
                    },
                    {
                        "username": "Mindframe",
                        "content": "Problems like these make me feel like a useless developer. All I\\'m good at is front end web design stuff and database queries. I sit here feeling defeated looking at these algorithmic things."
                    },
                    {
                        "username": "chiragchowdhury51",
                        "content": "So what does \"A\" , 3 look like?"
                    },
                    {
                        "username": "xecuti431",
                        "content": "is a zig zag pattern a known thing or are we to guess what the hell that means"
                    },
                    {
                        "username": "brightshinigamii",
                        "content": "not work"
                    },
                    {
                        "username": "mdmasidulhasan27",
                        "content": "ohh, it\\'s too easy how its described.\\nmannnnn. I hate this kind of problem. no proper explained."
                    },
                    {
                        "username": "Ankur__Mishra",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(s.size() <=2 || numRows == 1) return s;\\n        vector<string> ans(numRows, \"\");\\n        bool flag = true;\\n        for(int i=0;i<s.size(); i++)\\n        {\\n            if(flag)\\n            {\\n                int index = i%numRows;\\n                ans[index]+=s[i];\\n                if(index == numRows-1) flag = !flag;\\n            }\\n            else\\n            {\\n                ans[i - (i%numRows -2)] += s[i];\\n                if(i - (i%numRows -2) == 0) flag = !flag;\\n            }\\n        }\\n        for(int i=1;i<ans.size();i++) \\n        {\\n            ans[0]+=ans[i];\\n        }\\n        return ans[0];\\n    }\\n};\\n\\nSomeone pls tell me what wron i;m doing"
                    },
                    {
                        "username": "SKKUGoon",
                        "content": "I'm using rust. I wrote down all my code and the test cases are working as it should be on my local machine. But if I hand in the question, leetcode gives me this Runtime Error\n\n```bash\nassertion failed: step != 0 (/rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/iter/adapters/step_by.rs)\n```\nThere are no other explanation. Is there a way to solve this?"
                    }
                ]
            },
            {
                "id": 1844270,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1839793,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1836049,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1834011,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1827028,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1825174,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1802342,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1792117,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1789797,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1787187,
                "content": [
                    {
                        "username": "lskook47",
                        "content": "In C, the test case does multiple calls for the target converting function"
                    },
                    {
                        "username": "pg99285",
                        "content": "This is Rail Fence Cipher Encryption."
                    },
                    {
                        "username": "JoshBleggi",
                        "content": "The description of this is so confusing that I\\'m not even trying this. I\\'m a natural born english speaker with a decade of programming experience and I minored in Math in college."
                    },
                    {
                        "username": "Franco_20",
                        "content": "process exited with signal SIGILL\\n\\nFirstly, I wrote my program in my local machine. Then I copy all my code and insert it LeetCode. Usually it works! \\n\\nBut now, it\\'s giving me Runtime Error called: process exited with signal SIGILL\\n\\nFirst time facing this issue, is there anyone who can help me with this?\\n\\n `class Solution {\\n\\n    func convert(_ s: String, _ numRows: Int) -> String {\\n        var matrix: [[Character]] = []\\n\\nvar index = 1\\n\\n\\n\\nfunc goDown(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    index1 = 1\\n    //print(\"GO down\", terminator: \" \")\\n    for i in 0..<numRows-1{ // 0 1 2\\n        if index == s.count{\\n                    break\\n                }\\n        //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        \\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        index1 += 1\\n        index += 1\\n        \\n       \\n    }\\n    //print(\"\")\\n    index1 -= 1\\n}\\n//------------------------------------------------------------------\\nfunc goUp(_ matrix: inout [[Character]], _ index1: inout Int, _ index2: inout Int, _ s: String, _ numRows: Int, _ index: inout Int){\\n    //print(\"GO up\", terminator: \" \")\\n    index1 -= 1\\n    index2 += 1\\n    for i in 0..<numRows-1{\\n        if index == s.count{\\n            break\\n        }\\n                //print(\"\\\\(index1),\\\\(index2)\", terminator: \" \")\\n        matrix[index1][index2] = (s[s.index(s.startIndex, offsetBy: index)])\\n        \\n        \\n        index1 -= 1 \\n        index2 += 1 \\n        index += 1\\n            }\\n    index2 -= 1\\n    //print(\"\")\\n}\\n\\nfor i in 0..<numRows{\\n    matrix.append([])\\n    for j in 0..<s.count/2{\\n        matrix[i].append(\" \")\\n    }\\n}\\nmatrix[0][0] = (s[s.index(s.startIndex, offsetBy: 0)])\\n\\n\\nvar index1 = 1\\nvar index2 = 0\\n\\nwhile true {\\n    goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n    goUp(&matrix, &index1, &index2, s, numRows, &index)\\n    //print(index1, index2)\\n\\n    //goDown(&matrix, &index1, &index2, s, numRows, &index)\\n    \\n    if index == s.count{\\n                        break\\n                    }\\n}\\n\\n\\n\\n\\n\\n//for i in 0..<numRows{\\n//   print(matrix[i])\\n//}\\nvar myString = \"\"\\nfor i in 0..<numRows{\\n    for j in 0..<s.count/2{\\n        if matrix[i][j] == \" \"{\\n            continue\\n        }else{\\n            //print(matrix[i][j], terminator: \"\")\\n            myString.append(matrix[i][j])\\n        }\\n    }\\n}\\n        return myString\\n    }\\n\\n}`"
                    },
                    {
                        "username": "garggaurav823",
                        "content": "class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n\\n        final_ans = \\'\\'\\n        i=0\\n\\n        for row in range(1,numRows+1):\\n            \\n            temp = i\\n            temp_ans = \\'\\'\\n\\n            while temp<len(s):\\n                temp_ans += s[temp]\\n                print(temp_ans,row)\\n\\n                if row == 1 or len(temp_ans)%2 != 0 and row != numRows:\\n                    temp_num = numRows - row\\n                    jump = 2 * temp_num - 1\\n\\n                else:\\n                    temp_num = row-1\\n                    jump = 2*temp_num - 1\\n\\n                temp+=jump+1\\n                if temp>len(s):\\n                    break\\n                \\n            final_ans += temp_ans\\n\\n            i+=1\\n\\n            if len(final_ans) == len(s):\\n                break\\n                        \\n        return final_ans\\n\\n\\nThe above code works fine on my interpreter but LeetCode\\'s interpreter has a bug or something, the program just loops back to row 1 again and again"
                    },
                    {
                        "username": "akifahmed90",
                        "content": "Can anybody tell me why is it showing TLE?\\n\\n `\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n    \\n        int l=s.size();\\n        string res=\"\";\\n        for(int i=0;i<numRows;i++)\\n        {\\n            if(i==0 || i==(numRows-1))\\n            {\\n                int j=i;\\n              // if I comment out the while loop then it does not give TLE\\n                while(j<l)\\n                {\\n                    res+=s[j];\\n                    j+=2*(numRows-1);\\n                }\\n             \\n            }\\n            else\\n            {\\n                int c=0;\\n                for(int j=i;j<l;)\\n                {\\n                    res+=s[j];\\n                    if(c%2==0)\\n                        j+=(numRows-i-1)*2;\\n                    else\\n                        j+=i*2;\\n                    c++;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};`"
                    },
                    {
                        "username": "principoshi",
                        "content": "How is this in the most liked questions with an overwhelming number of actual \\'dislikes\\'?"
                    },
                    {
                        "username": "schuylermartin45",
                        "content": "Ah yes, I am allowed to pass as soon as I remove some debugging print statements. Glad I/O is my limiting factor, that seems fair."
                    },
                    {
                        "username": "tradingpractice2122",
                        "content": "Sorry, but what are the rules or requirements for zigzag? If I randomly split a string in numRows parts it\\'s not correct, while it doesn\\'t violate the rules according to the task. Awful, 0 explanations."
                    },
                    {
                        "username": "dhwaj_03",
                        "content": "i did write the code, and it executed perfectly on my sublime ide but leetcode input is just not passing it write to the function. any ideas how to solve for this\\n"
                    }
                ]
            },
            {
                "id": 1786568,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786561,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786497,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786464,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786430,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786423,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786411,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786393,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786275,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786265,
                "content": [
                    {
                        "username": "LilClown",
                        "content": "My code works perfectly on my pc(C++23), but when I run it on leetcode,  starts an endless loop \"while\" if numRows = 1,so i added extra lines to fix that wierd case, its that ok ?  You can see code in my profile,if you want.Sorry for my bad English. "
                    },
                    {
                        "username": "sandagolcea",
                        "content": "wondering if anyone actually got the formula from examples, like,\\n\\nI realised you \"use\" n chars for col 1,\\nand then 1 char for the next n-2 columns,\\nthen again a col of n chars,\\nthen 1 char for n-2 columns;\\nuntil you exhaust all letters..\\n\\nbut I actually had to build a naive solution to calc the matrix length.."
                    },
                    {
                        "username": "CodeWithbeer",
                        "content": "Shit here we go again"
                    },
                    {
                        "username": "kaaditya0625",
                        "content": "class Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        int n=s.size(), r=numRows;\\n        if(r==1 || n<=r){\\n            return s;\\n        }\\n        int t=2*r-2;\\n        string res;\\n        for(int i=0; i<r; i++){\\n            for(int j=0; i+j<n; j+=t){\\n                res.push_back(s[i+j]);\\n                if(i!=0 && i!=r-1 && j+t-i<n)\\n                    res.push_back(s[j+t-i]);\\n            }\\n        }\\n        return res;\\n    }\\n};  @"
                    },
                    {
                        "username": "smissner",
                        "content": "JaJa type problem"
                    },
                    {
                        "username": "BristolJ",
                        "content": "Understanding the question is half the problem"
                    },
                    {
                        "username": "a147688934",
                        "content": "First have to know that the \"zigzag\" means the shape of alphabet \"N\" and this problem flips it vertically. "
                    },
                    {
                        "username": "Michellead",
                        "content": "To be fair, this question doesn\\'t have the full context it\\nmeant to have."
                    },
                    {
                        "username": "Lokii1811",
                        "content": "could someone look into my code,im getting runtime error which i couldnt figure out\\n\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        vector<vector<char>> v;\\n        int x = 0;\\n        int i = 0;\\n        while(x<s.length()){\\n            if(i%(numRows-1) == 0){\\n                for(int k = 0;k<numRows;k++){\\n                    if(x<s.length()){\\n                        v[k][i] = s[x];\\n                        x++;\\n                    }\\n                    else{\\n                        break;\\n                    }\\n                }\\n                i++;\\n            }\\n            else{\\n                if(x<s.length()){\\n                    v[numRows-1-(i%numRows)][i] = s[x];\\n                    x++;\\n                    i++;\\n                }\\n                else{\\n                    break;\\n                }\\n            }\\n        }\\n        string ans = \"\";\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<v[i].size();j++){\\n                ans = ans+v[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "mohitjakhar",
                        "content": "it  gives runtime error , heap buffer overflow , but the code works fine on my pc, please suggest anything which help"
                    }
                ]
            },
            {
                "id": 1786255,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786154,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786153,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786149,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786142,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786110,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786084,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786071,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786066,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786060,
                "content": [
                    {
                        "username": "Yongbi",
                        "content": "```\n#1. Just create an empty list (length of numRows), then\n#2. Follow a loop of letter in the given string. \n#3. Pick up each letter in at each iteration by the following rule: \n#4. Define a _pointer_ or _i_  run in the range(0, numRows) with direction. \nWhen i=0 inscrease i+=1, direction=1, \notherwise, i=numRows then descreases i-=1, direction=-1.\nlist[i]+=letter\n#5. Return \"\".join(list)\n```\nMy solution is O(n), I'm thinking about an O(log(n)) solution."
                    },
                    {
                        "username": "aha_an007",
                        "content": "hi danish keep growing buddy !!!!!!!!"
                    },
                    {
                        "username": "mddanishsamir",
                        "content": "Hii Mudassir,\\nchamp where are you\\n"
                    },
                    {
                        "username": "kelvin950",
                        "content": "Took me two hours to solve this question. went through the discussion avoiding the solutions. saw \"rail fence cipher \" and searched it on google. create  a 2d array to store  the strings but loop through from column to row, top to down, when you reach the last row (numRows-1) move up by reducing row by one and diagonally by increasing column by 1 till you reach 0 and start over again."
                    },
                    {
                        "username": "pokaChika",
                        "content": "use me as a dislike button for this question! #paypallayingoff"
                    },
                    {
                        "username": "ayushluthra62",
                        "content": "LeetCode is playing with our feeling #paypal is laying off \n<br>\nUpvote It if you Like My solution <br>\nMy solution link : -> https://leetcode.com/problems/zigzag-conversion/solutions/3136532/c-easy-and-simple-solution-using-2d-array/"
                    },
                    {
                        "username": "A-V-Jagannathan",
                        "content": "easy to solve\\nhard to even understand since the question didnt give a f about readers lol"
                    },
                    {
                        "username": "bikram7151",
                        "content": "Explanation:\\n\\n1.If numRows is equal to 1, the string does not need to be converted and can be returned as is.\\n2.Create an array of StringBuilder objects with numRows elements.\\n3.Use a while loop to traverse the input string s.\\n4.In each iteration, append characters to the StringBuilder objects in the following way: first append to the 0th, then 1st, 2nd, ... numRows-1th elements, then numRows-2nd, numRows-3rd, ... 1st elements, and so on.\\n5.Finally, append all the StringBuilder objects except for the 0th to the 0th StringBuilder, and return the result as a string.\\n\\npublic String convert(String s, int numRows) {\\n    if (numRows == 1) return s;\\n    \\n    int len = s.length();\\n    StringBuilder[] sb = new StringBuilder[numRows];\\n    for (int i = 0; i < numRows; i++) {\\n        sb[i] = new StringBuilder();\\n    }\\n    \\n    int idx = 0;\\n    while (idx < len) {\\n        for (int i = 0; i < numRows && idx < len; i++) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n        for (int i = numRows-2; i > 0 && idx < len; i--) {\\n            sb[i].append(s.charAt(idx++));\\n        }\\n    }\\n    \\n    for (int i = 1; i < numRows; i++) {\\n        sb[0].append(sb[i]);\\n    }\\n    return sb[0].toString();\\n}\\n\\n"
                    },
                    {
                        "username": "Vinaygoswami321",
                        "content": "Doing this on my birthday, and was able to come up with a ac solution."
                    },
                    {
                        "username": "syed-m-osama",
                        "content": "```\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        int vertical = numRows;\n        int diagonal = vertical - 2;\n        int next = vertical + diagonal;\n        vector<vector<char>> matrix(vertical);\n        int c = 0, r = 0, i = 0;\n        while(i < s.length()){\n            while(r < vertical){\n                matrix[r].push_back(s[i]);\n                r++, i++;\n            }\n            if(i >= s.length()){ break; }\n            r-=2;\n            while(vertical - r != vertical){\n                matrix[r].push_back(s[i]);\n                r--, i++;     \n            }\n        }\n        string res ;\n        for(int k = 0; k< vertical; k++){\n            for(int j = 0; j< matrix[k].size(); j++){\n                res.push_back(matrix[k][j]);\n            }   \n        }\n        return res;\n    }\n};\n```\n\ncan somebody help me why its not working even there's no diff between 'expected' and 'output' solutions."
                    }
                ]
            },
            {
                "id": 1786040,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1786032,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1786022,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1786015,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1786003,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1785981,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1785936,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1785924,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1785882,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1785844,
                "content": [
                    {
                        "username": "armagan979",
                        "content": "//what is wrong with the approach.. and why the ans array is not getting updated. could anyone help\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        if(numRows ==1)\\n        return s;\\n\\n        int i,j,k,n,counter;\\n        n=s.size();\\n        i=0;j=0;\\n        counter=1;\\n        char ans[1001][1001];\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++)\\n            ans[i][j]=\\'_\\';\\n        }\\n        k=0;\\n        while(k<n){\\n            if(counter==1){\\n                ans[i][j]=s[k];\\n                i++;\\n                if(i==numRows){\\n                    counter=-1;\\n                    i=i-2;\\n                    j++;\\n                }\\n            }\\n            else{\\n                ans[i][j]=s[k];\\n                j++;\\n                i--;\\n                if(i==0){\\n                    counter=1;\\n                }\\n            }\\n            k++;\\n        }\\n        k=0;\\n        for(i=0;i<numRows;i++){\\n            for(j=0;j<n;j++){\\n                if(ans[i][j]!=\\'_\\'){\\n                    s[k]=ans[i][j];\\n                    k++;\\n                }\\n            }\\n        }\\n        return s;\\n    }\\n};"
                    },
                    {
                        "username": "anoyash",
                        "content": "just analyse the index and subsequent gaps each row -  wise\nfor given test case , numRows = 4 , \ninitial gap will be : 2*( numRows - 1)\n1  ->  7 -> 13\n2  ->  6 -> 8 -> 12 -> 14\n3  -> 9  -> 11\n4 -> 10\n ---------------------->\n +6 -> +6\n+4  -> +2 -> +4 -> +2 \n+2 -> + 4 -> +2 -> +4\n+6 -> +6  "
                    },
                    {
                        "username": "Evil_123",
                        "content": "//easy implementation\\nclass Solution {\\npublic:\\n    string convert(string s, int numRows) {\\n        string ans=\"\";\\n        int kd=2*(numRows-1),n=s.size();\\n        if(kd==0){\\n            return s;\\n        }\\n        else{\\n            for(int i=0;i<numRows;i++){\\n                int ci=i;\\n                while(ci<=n-1){\\n                    ans+=s[ci];\\n                 if(i!=0&&i!=numRows-1){\\n                    int secondindx=ci+(kd-2*i);\\n                    if(secondindx<=n-1){\\n                        ans+=s[secondindx];\\n                    }\\n                 }\\n                ci=ci+kd;\\n                }\\n            }\\n        }\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Eaglesight02",
                        "content": "The edge case is not given : what should be returned if the numRows is greater than the length of the string s itself?\\nThen the code won\\'t work - but what must be returned??\\n\\n\\n\\n\\n\\nEven if there is no edge case like this - then the question must specify a condition like : \"numRows <= s.size()\""
                    },
                    {
                        "username": "Mariia_89",
                        "content": "There was a test case s = \\xABAB\\xBB, numRows = 3. The correct answer was \\u201CAB\\u201D"
                    },
                    {
                        "username": "Masterdemon123",
                        "content": "I don\\'t think the problem is medium,it\\'s easier when you just forgot about the  ziczac and space things, it\\'s just like put the character into row from top to bottom and vice versa."
                    },
                    {
                        "username": "kuznetsov-m",
                        "content": "Spend many times for priority_queue implementation and realized that the container does not give the desired sequence of elements with the same index.\\n`#priority_queue`"
                    },
                    {
                        "username": "darasingh12998",
                        "content": "     \\n    class Solution:\\n    def convert(self, s: str, numRows: int) -> str:\\n        if numRows == 1: return s\\n        ans = [\"\" for _ in range(numRows)]\\n        n = len(s)\\n        for i in range(n):\\n            m = i%(2*numRows-2) \\n            if m < numRows:\\n                ans[m] += s[i]\\n            else:\\n                ans[numRows-m-2] += s[i]\\n                \\n        return \\'\\'.join(ans)\\n\\n\\n    def convert(self, s, numRows):\\n        box= collections.defaultdict(str)\\n        j = 0\\n        increment = 1\\n        for i , char in enumerate(s):\\n            box[j] += char\\n            j  += increment\\n            if j == numRows - 1 or j == 0:\\n                increment = - increment\\n        keys = list(box.keys())\\n        keys.sort()\\n        return \\'\\'.join(box[i] for i in keys)\\n\\uD83D\\uDE02\\uD83E\\uDD17\\uD83E\\uDD70"
                    },
                    {
                        "username": "waky",
                        "content": "If anybody wants to understand the question, check the diagram given in solution tab!!"
                    },
                    {
                        "username": "shinebayar999",
                        "content": "Now Paypall is laying off. Also big tech companies too sad 😔"
                    },
                    {
                        "username": "Rishu_Raj_Anand",
                        "content": "Can someone please explain the question briefly?"
                    }
                ]
            },
            {
                "id": 1785822,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785810,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785738,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785730,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785711,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785710,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785660,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785652,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785644,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785631,
                "content": [
                    {
                        "username": "kushalnagwanshicloud",
                        "content": "This was a question which I did when I was just starting out, that time it took me an hour to do, but today I was able to do it in a few minutes !!\\nI am pretty happy rn : ) "
                    },
                    {
                        "username": "user5400vw",
                        "content": "tricky, tried a general solution but ended up having to handle 3 special cases (numRows == 0, 1, and 2)"
                    },
                    {
                        "username": "sneha_bk",
                        "content": "Will just give a tip take out pen and paper and write down jig jag pattern and try to find the logic , DO NOT I REPEAT DO NOT COPY OTHERS CODE IT WONT MAKE SENSE TILL YOU WRITE BY YOUR OWN. Just give some time while working on it. ALL THE BEST"
                    },
                    {
                        "username": "no-username",
                        "content": "I am looking for a job but I am ok to fail the interview if this type of question I get. "
                    },
                    {
                        "username": "raghavrathore7415",
                        "content": "Just use StringBuilder array and create the pattern."
                    },
                    {
                        "username": "hemantdhamija",
                        "content": "Nope, PayPal is firing instead of hiring right now"
                    },
                    {
                        "username": "trivshekhar",
                        "content": "Essentially what is required from you Following : \\nthe given string is to be filled in number of rows given in a zig-gag manner.\\nlike this:\\n [P           A           H            N]\\n[   A    P      L    S     I      I        G]\\n[      Y            I           R]\\n\\nThat is Basically same as putting every character of string in given number of rows going from 1st row to last row then going to 1st row again.\\n\\nFor example: S=PAYPALISHIRING, NUMROWS= 3;\\n\\nIterating the string:\\n`0:row[0].append(s[0])`\\n`1:row[1].append(s[1])`\\n`2:row[2].append(s[2]) change to going up`\\n`3:row[1].append(s[3])`\\n`4:row[0].append(s[4]) change to going down`\\n`5:row[1].append(s[5])`\\nThis will continue till end of string. \\nHere till 6th character of string you have\\nrow[0] = [P ,A]\\nrow[1] = [A, P, L]\\nrow[2] = [Y]\\n\\nthis can be easily done by tracking the current row and if we are going up or down."
                    },
                    {
                        "username": "Jayanthsomuri",
                        "content": "The question description and the sample that they have shown don\\'t justify\\uD83D\\uDE2A\\uD83D\\uDE44"
                    },
                    {
                        "username": "agrawalharsh0522",
                        "content": "I got some stackoverflow problem , Don't know why\nclass Solution {\npublic:\n    string convert(string s, int numRows) {\n        // we know numrows \n        // for column we will try some math \n        int size=s.length();\n\n        if(size<=numRows){\n            return s;\n        }\n\n        else{\n            int col=0;\n            int l=size;\n\n            while(l!=0){\n                if(l>=(numRows)+(numRows-2)){\n                    col=col+(numRows-1);\n                    l=l-(numRows)+(numRows-2);\n                }\n\n                else if(l>numRows && l<(numRows)+(numRows-2) ){\n                    col=col+(1+l-numRows);\n                    l=0;\n                }\n\n                else if(l<=numRows){\n                    col=col+1;\n                    l=0;\n                }\n            }\n\n            char mat[numRows][col];\n            int index=0;\n            int i;\n            for(int j=0;j<col;j++){\n                for( i=0;i<numRows;i++){\n                    mat[i][j]=s[index];\n                    index++;\n                }\n                while(i>0){\n                    j++;\n                    i--;\n                    mat[i][j]=s[index];\n                    index++;\n                }\n            }\n\n            string res;\n            for(int i=0;i<numRows;i++){\n                for(int j=0;j<col;j++){\n                    if(mat[i][j]!=NULL){\n                        res=res+mat[i][j];\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        return 0;\n    }\n};\n\n==31==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe1ae40010 at pc 0x00000034488d bp 0x7ffe1ae3fdb0 sp 0x7ffe1ae3fda8\nREAD of size 1 at 0x7ffe1ae40010 thread T0\n    #3 0x7f0a95ac00b2  (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)\nAddress 0x7ffe1ae40010 is located in stack of thread T0 at offset 80 in frame\n  This frame has 2 object(s):"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Solution - https://leetcode.com/problems/zigzag-conversion/solutions/3134632/easy-and-neat-c-solution-using-array-of-pairs-full-explanation-o-n-m/\\n--> I have posted an easy C++ solution using array explaining the pattern and the approach in detail. The problem is easy if you get the pattern. Hope this helps you out.\\n"
                    }
                ]
            },
            {
                "id": 1785620,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785578,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785551,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785550,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785494,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785446,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785426,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785419,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785418,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785399,
                "content": [
                    {
                        "username": "Phoenix_21",
                        "content": "Ready to break my streak for this question."
                    },
                    {
                        "username": "jithu7432",
                        "content": "Personally, I didn\\'t have any trouble understanding the question, but from the dislikes I can see that a huge amount of people was not able the follow the description.\\nThis is a GIF from the LeetCode\\'s official solution for the problem, watch it and you\\'ll be good to go.\\nhttps://leetcode.com/problems/zigzag-conversion/solutions/2868537/Figures/6/filling.gif"
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "anyone explain me extra word\\nex- \\n1     5 \\n2 4  6\\n3     7    why 4 here "
                    },
                    {
                        "username": "mandliyarajendra11",
                        "content": "finding 2023 comment leetcode improve details or not \\n"
                    },
                    {
                        "username": "ironskillet2",
                        "content": "im getting the correct answer on my machine but not with leetCode so idk what to do here.\n\nmy code is rather large for this kind of problem i imagine. but my code still passes all the testcase's on my other environment just not here on leetCode\n\nnevermind i fixed it, but i ran beyond the time-limit HAHA man my code is bad"
                    },
                    {
                        "username": "jasimuddin164",
                        "content": "Why is the problem defined inaccurately?"
                    },
                    {
                        "username": "hosua",
                        "content": "Weird question lol"
                    },
                    {
                        "username": "zeta_omicron",
                        "content": "aint this the question a youtuber was ranting about \\uD83D\\uDE05 .... like how it was asked in his interview and he still doesnt know the solution til date even after his numerous co-workers explain it to him : summary it doesnt matter if you cant solve a leet problem in interview(yt video summary , not mine\\uD83D\\uDE01)"
                    },
                    {
                        "username": "lanthony42",
                        "content": "Why is this a medium? Is it just cause its poorly written?"
                    },
                    {
                        "username": "c4tdog",
                        "content": "good task and so many dislikes :("
                    }
                ]
            },
            {
                "id": 1785356,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1785333,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1785315,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1785314,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1784944,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1782166,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1781938,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1774359,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1771837,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1755957,
                "content": [
                    {
                        "username": "user0740h",
                        "content": "I had trouble with this one in the past and just saw the pattern, so here are some hints:\n\n- Based on the description, the expected result is the rows without the empty spaces. Are the spaces required?\n\n- In example 2:\n```\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N                  row 1\nA   L S  I G               row 2\nY A   H R                  row 3\nP     I                         row 4\n```\nThe first 4 characters (PAYP) go in rows 1 to 4, but the 5th (A) goes in row 3. The 6th (L) goes in row 2 and 7th (I) in row 1. We went back to row 1 and for the 8th (S) is row 2 again. Each character seems to go in the row adjacent to the previous character. Is there a pattern there?"
                    },
                    {
                        "username": "Diamantis",
                        "content": "If you want a few hints without the full solution continue reading!\nUse as many hints as you need, go one at a time if you want to test yourself!\n\n1) You should loop through the rows and apply a  formula on the input string for each one.\n\n2) That formula will include a secondary loop that transforms part of the input string in a partial output. (concatenate the partial outputs that you get in each iteration).\n\n3) Notice that for the first and last rows the formula is very straightforward.\n\n4) For the rows in the middle (when numRows > 2) you need to think a little bit more but it's not too hard."
                    },
                    {
                        "username": "rotkay",
                        "content": "literally worst described problem I\\'ve seen on the leetcode"
                    },
                    {
                        "username": "qle_13",
                        "content": "This one should be easy :>"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "I am seeing a pattern here. It is that first every character after numrows distance and then print every character after every  numrows-1 distance and so on. But this is failing in some cases someone help me out!\\n\\nHere is my code:\\n```class Solution {\\npublic:\\n\\n    string convert(string s, int numRows) {\\n        vector<bool> vis(size(s),false);\\n        int max,n=size(s);\\n         \\n        int k=numRows;\\n        if(numRows%2==0)\\n        max=numRows+2;\\n        else max=numRows+1;\\n        string ans=\"\";\\n        for(int i=0;i<n;i++)\\n        {\\n            if(max<=0)\\n            break;\\n            for(int j=i;j<n;j+=max)\\n            { if(vis[j]!=true){ans+=s[j]; vis[j]=true;}}\\n            if(k%2==0)\\n            max-=3;\\n            else max-=1;\\n        }\\n        \\n        for(int i=0;i<n;i++)\\n        { if(!vis[i]) ans+=s[i];}\\n\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "PredatorMK2",
                        "content": "how to pass 2d array in c++. I looked online and it is giving false answer.\\nhere is my code\\n\\n\\nclass Solution {\\npublic:\\nint col(string s,int numRows){\\n    int n=s.length();\\n    while(n=>0){\\n        n=n-numRows;\\n        col++;\\n        if(n<=0){\\n            return col;\\n            break;\\n        }\\n for(int i=0;i<numRows-2;i++){\\n     if(n==0){\\n         return col;\\n     }\\n     n-=1;\\n     col++;\\n }\\n    }\\n    return col;\\n}\\nstring answer(int arr[int n][int m]){\\nstring anand=\"\";\\nfor(int i=0;i<m;i++){\\n    for(int j=0;j<n;j++){\\n        anand+=arr[j][i];\\n    }\\n}\\nreturn anand;\\n}\\n\\n    string convert(string s, int numRows) {\\n        string anand=\"\";\\n        int column=col(s,numRows);\\n        char arr[numRows][col];\\n        for(int a=0;a<numRows;a++){\\n            for(int b=0;b<column;b++){\\n                arr[numRows][col]=\\' \\';\\n            }\\n        }\\n        int i=0;\\n        int row=0,col=0;\\n        while(i!=s.length()){\\n        while(row<numRows && i<s.length()){\\n            arr[row][col]=s[i];\\n            i++;\\n        }\\n        col++;\\n        row--;\\nif(i==s.length()){\\nanand=answer(arr[numRows][column]);\\n}\\nwhile(row>0){\\n    arr[row][col]=s[i];\\n    i++;\\n    row--;\\n    col++;\\n}\\n        }\\n        return anand;\\n    }\\n};"
                    },
                    {
                        "username": "genuine_stamina",
                        "content": "In the second example explanation is not these spaces extra (I've put 'x's there), that's not exactly ZigZag movement IMHO. In other words, the first section has 6 columns while the second has 5, which doesn't make sense to me.  \n```\nP     I    N\nA  xL S  I G\nY Ax  H R\nP     I\n```"
                    },
                    {
                        "username": "hexpranay",
                        "content": "# What is wrong with this solution?\\n\\nI am doing exactly what the official solution is doing with same complexity, but my solution gives me TLE, while the official solution is accepted.\\n\\nMy solution - \\n ```\\nstring convert(string s, int numRows) {\\n        string complete=\"\";\\n        int leng = s.size();\\n        if (leng==1 || numRows>=leng)\\n            return s;\\n        int j = 0;\\n        int k = 0;\\n        int tot_row = 2*numRows-2;\\n        for(int i=0;i<numRows;i++)\\n        {\\n            j = i;\\n            while(j<leng)\\n            {\\n                complete+=s[j];\\n                if (i!=0 && i!=numRows-1){\\n                k = j+tot_row - 2 *i;\\n                if(k<leng)\\n                    {complete+=s[k];}\\n                }\\n                j+=tot_row;\\n            }   \\n        }\\n        return complete;\\n    }\\n```"
                    },
                    {
                        "username": "cityfarmer2017",
                        "content": "Why this is a wrong answer?\n```\nWrong Answer\nRuntime: 3 ms\nCase 1\nCase 2\nCase 3\nInput\ns =\n\"PAYPALISHIRING\"\nnumRows =\n3\nOutput\n\"PAHNAPLSIIGYIR\"\nExpected\n\"PAHNAPLSIIGYIR\"\n```"
                    },
                    {
                        "username": "AasheeshLikePanner",
                        "content": "Anyone here can explain the question?"
                    }
                ]
            },
            {
                "id": 1750893,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1748223,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1742865,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1739005,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1738387,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1735649,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1724804,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1722734,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1721030,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1716133,
                "content": [
                    {
                        "username": "kannan-ramesh",
                        "content": "why this code error?,,but no error in cpp please any one help...\\n\\nLine 11: error: array required, but String found\\n                arr[row++][col]=s[cur++];\\n                                 ^\\nLine 15: error: array required, but String found\\n                arr[row--][++col]=s[cur++];\\n                                   ^\\n2 errors\\nConsole\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        String arr[][]=new String[numRows][s.length()];\\n\\n        int row=0;\\n        int col=0;\\n        int cur=0;\\n\\n        while(cur<s.length()){\\n            while(row<numRows && cur<s.length()){\\n                arr[row++][col]=s[cur++];\\n            }\\n            row=Math.max(0,row-2);\\n            while(row>0 && cur<s.length()){\\n                arr[row--][++col]=s[cur++];\\n            }\\n            col++;\\n        }\\n\\n        String ans=\" \";\\n\\n        for(int i=0;i<numRows;i++){\\n            for(int j=0;j<s.length();j++){\\n                ans+=arr[i][j];\\n            }\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "coder_Harsh",
                        "content": "Problem statement not clear!!!"
                    },
                    {
                        "username": "rawan9000",
                        "content": "Am I the Only one who don\\'t understand  what is the required  ?\\nI see this question is not clear and missing details "
                    },
                    {
                        "username": "pablomariaarranzpou",
                        "content": "It\\'s like the words are readed going up un down starting going down and the a diagonal to the right. This Is done with the number of rows in input."
                    },
                    {
                        "username": "pranil517161",
                        "content": "I am using 2 loops thats O(N^2) TC. Anyone can suggest good approach?"
                    },
                    {
                        "username": "Ikshan_Bhardwaj",
                        "content": "Can someone please explain why I am getting a runtime error here?\\n\\n    string convert(string s, int numRows) {\\n        //simply just start counting numRows times from the present index, if present index exceeds then take the % value\\n\\n        string ans;\\n        int len=s.size();\\n        int k=0;\\n\\n        if(len<1 || len >1000 || numRows <1 || numRows>1000)\\n        {\\n            return \" \";\\n        }\\n\\n        for(int i=0 ; i<len ; i=(i+numRows+1)%(len))\\n        {\\n            if(i==len-1)\\n            {\\n                return ans;\\n            }\\n\\n            ans[k]=s[i];\\n            k++;\\n        }\\n        return ans;\\n}"
                    },
                    {
                        "username": "bhanutechie",
                        "content": "string have s.length() to calculate size of string\\nyou are using s.size() which is used in vectors"
                    },
                    {
                        "username": "TheCScience",
                        "content": "Here is problem solution in Java Python C++ and C programming.\\n[https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html](https://thecscience.com/leetcode-zigzag-conversion-problem-solution.html)"
                    },
                    {
                        "username": "utsav1123",
                        "content": "There is a testcase where array \\'s\\' contains a single character but numRow is more than 1.\\n\\nHow can someone distribute one character in more than one rows?? \\nDoesn\\'t make sense. \\n"
                    },
                    {
                        "username": "pahwagautam786",
                        "content": "I have completely solved the question with  runtime 15ms.  contact me for detailed solution,  at instagram (gautam_pahwa07).   or mail me at  pahwagautam786@gmail.com"
                    },
                    {
                        "username": "rohitmondal2003",
                        "content": "Man what the question says only god knows."
                    },
                    {
                        "username": "hybp",
                        "content": "A haahahahahah I wrote a program that output\\n\"P   A   H   N   \\\\nA P L S I I G \\\\nY   I   R\\\\n\"\\nfor test 1\\n\\n\"P    I    N    \\\\nA  L S  I G  \\\\nP    I\\\\n\"\\nfor test 2\\n\\n\"A\"\\nfor test 3,\\njust to realize it was all a waste of time"
                    }
                ]
            },
            {
                "id": 1715460,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1713523,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1708245,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1704464,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1701763,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1671786,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1671232,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1648014,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1641202,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            },
            {
                "id": 1576451,
                "content": [
                    {
                        "username": "user3278TD",
                        "content": "I fail to understand why you couldn\\'t just post the picture from the solution as an example, the problem would\\'ve been a million times easier to understand than the given which makes absolutely 0 sense."
                    },
                    {
                        "username": "Mohamad-Badr",
                        "content": "I didn\\'t get the idea of the question, it is so mysterious the is not enough explanation about what the output of the question should be and what is the logic of this question I hope someone can give more details or put it in a simple way."
                    },
                    {
                        "username": "Nitishl",
                        "content": "\\nJava Solution -- Can someone explain why my solution isn\\'t working--??\\n\\nclass Solution {\\n    public String convert(String s, int numRows) {\\n        int start=0,diffcharcters=2*(numRows-1);\\n        int i=0;\\n        StringBuilder sb = new StringBuilder();\\n        for(i = 0;i<numRows;++i){\\n           start = i;\\n           while(start<s.length())\\n           {  \\n                sb.append(start);\\n               if(i!=0 && i!=numRows-1){\\n                   start += diffcharcters-2*i;\\n               }\\n               else{\\n                   start += diffcharcters;\\n               }\\n           }\\n        }\\n        return sb.toString();\\n    }\\n}\\n"
                    },
                    {
                        "username": "proGeekCoder",
                        "content": "Such a time waste question. What concept is this question testing at all?"
                    },
                    {
                        "username": "Bobzero",
                        "content": "Animated Description would be nice too"
                    },
                    {
                        "username": "MuftawoOmar",
                        "content": "What is this ??? "
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Java, Python, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-zigzag-problem-solution.html)"
                    },
                    {
                        "username": "fahdrafi",
                        "content": "What does an input like this mean for number or rows?\\n\\nFirst line:\\n\"Apalindromeisaword,phrase,number,orothersequenceofunitsthatcanbereadthesamewayineitherdirection,withgeneralallowancesforadjustmentstopunctuationandworddividers.\"\\n\\nSecond line:\\n\\' +\\n\\nThird line:\\n  \\'3"
                    },
                    {
                        "username": "Alok5102R",
                        "content": "Many people are confused about Rows=2:\n\n-> Let, s = PAYPALIS  and Rows=2\n\nP Y A I \nA P L S\n\nOutput : PYAIAPLS\n\n-> Let, s = PAYPALIS  and Rows=1\n\nP A Y P A L I S\n\nOutput : PAYPALIS\n\nHope it'll help you guys!!"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/zigzag-conversion-leetcode-solutions/"
                    }
                ]
            }
        ]
    }
]