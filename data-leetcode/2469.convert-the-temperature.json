[
    {
        "title": "Convert the Temperature",
        "question_content": "You are given a non-negative floating point number rounded to two decimal places celsius, that denotes the temperature in Celsius.\nYou should convert Celsius into Kelvin and Fahrenheit and return it as an array ans = [kelvin, fahrenheit].\nReturn the array ans. Answers within 10-5 of the actual answer will be accepted.\nNote that:\n\n\tKelvin = Celsius + 273.15\n\tFahrenheit = Celsius * 1.80 + 32.00\n\n&nbsp;\nExample 1:\n\nInput: celsius = 36.50\nOutput: [309.65000,97.70000]\nExplanation: Temperature at 36.50 Celsius converted in Kelvin is 309.65 and converted in Fahrenheit is 97.70.\n\nExample 2:\n\nInput: celsius = 122.11\nOutput: [395.26000,251.79800]\nExplanation: Temperature at 122.11 Celsius converted in Kelvin is 395.26 and converted in Fahrenheit is 251.798.\n\n&nbsp;\nConstraints:\n\n\t0 <= celsius <= 1000",
        "solutions": [
            {
                "id": 2808792,
                "title": "1-line-solution-o-1-100-fastest",
                "content": "***Guy\\'s if you find this solution helpful \\uD83D\\uDE0A, PLEASE do UPVOTE. By doing that it motivate\\'s me to create more better post like this \\u270D\\uFE0F***<br>\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n    return {(celsius+273.15),(celsius * 1.80 + 32.00)};\\n    }\\n};\\n```\\n***Guy\\'s if you find this solution helpful \\uD83D\\uDE0A, PLEASE do UPVOTE. By doing that it motivate\\'s me to create more better post like this \\u270D\\uFE0F***<br>",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n    return {(celsius+273.15),(celsius * 1.80 + 32.00)};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808834,
                "title": "java-python-c-100-fast-easy-solution-with-explanation",
                "content": "# Approach\\n- $$Kelvin = Celsius + 273.15$$\\n- $$Fahrenheit = Celsius * (9/5) + 32$$\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\nJava\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] res = new double[2];\\n        res[0] = celsius + 273.15;\\n        res[1] = celsius * 1.80 + 32.00;\\n        \\n        return res;\\n    }\\n}\\n```\\n\\nPython\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n\\n```\\n\\nC++\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, celsius * 1.80 + 32.00 };\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] res = new double[2];\\n        res[0] = celsius + 273.15;\\n        res[1] = celsius * 1.80 + 32.00;\\n        \\n        return res;\\n    }\\n}\\n```\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n\\n```\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, celsius * 1.80 + 32.00 };\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808825,
                "title": "c-solution-1-line-very-simple-and-easy-to-understand",
                "content": "<b> Up Vote if you like the solution\\n```\\n    //Simply return the formula\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, celsius*1.80 + 32.00 };\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    //Simply return the formula\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, celsius*1.80 + 32.00 };\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2808823,
                "title": "python-c-apply-school-arithmetics-explained",
                "content": "**\\u2705 IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n****\\nThis solution employs the use of school arithmetics. Time complexity is constant: **O(1)**. Space complexity is constant: **O(1)**.\\n\\n**Comment.** Is one needed?\\n\\n**Python.**\\n```\\nclass Solution:\\n    def convertTemperature(self, c: float) -> List[float]:\\n        return [c + 273.15, c * 1.80 + 32.00]\\n```\\n\\n**C++.**\\n```\\nclass Solution \\n{\\npublic:\\n    vector<double> convertTemperature(double c) \\n    {\\n        return { c + 273.15, c * 1.8 + 32};\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, c: float) -> List[float]:\\n        return [c + 273.15, c * 1.80 + 32.00]\\n```\n```\\nclass Solution \\n{\\npublic:\\n    vector<double> convertTemperature(double c) \\n    {\\n        return { c + 273.15, c * 1.8 + 32};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3367132,
                "title": "easy-100-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n\\n- just assign the formulas dude.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(n) \"cause we taken an extra array\".\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n`Upvote! It just takes a click :)`\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double kelvin = celsius + 273.15;\\n        double Fahrenheit = celsius * 1.80 + 32.00;\\n        ans.push_back(kelvin);\\n        ans.push_back(Fahrenheit);\\n        return ans;\\n    }\\n};\\n```\\n![Upvote.jpeg](https://assets.leetcode.com/users/images/442f0cbe-de35-4724-b92e-f902150164a8_1680372071.57104.jpeg)",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double kelvin = celsius + 273.15;\\n        double Fahrenheit = celsius * 1.80 + 32.00;\\n        ans.push_back(kelvin);\\n        ans.push_back(Fahrenheit);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3086293,
                "title": "c-simple-2-lines",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nDireclty use the formula and take` double data type not int`.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:$$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n            double kel=celsius + 273.15;\\n            double Fah = celsius * 1.80 + 32.00;\\n            return {kel,Fah};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n            double kel=celsius + 273.15;\\n            double Fah = celsius * 1.80 + 32.00;\\n            return {kel,Fah};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2812335,
                "title": "9-5-32",
                "content": "It\\'s good to recollect how to do temperature conversions.\\n\\n**C++**\\n```cpp\\nvector<double> convertTemperature(double c) {\\n    return { c + 273.15, c * 9 / 5 + 32};\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\nvector<double> convertTemperature(double c) {\\n    return { c + 273.15, c * 9 / 5 + 32};\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2808842,
                "title": "java-c-python-1-liner-easy-to-understand",
                "content": "*Time Complexity :* **O(1)**\\n*Space Complexity :* **O(1)**\\n##### Java\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[]{celsius + 273.15, (celsius * 1.80) + 32.00};\\n    }\\n}\\n```\\n##### C++\\n```\\nclass Solution \\n{\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, (celsius * 1.8) + 32};\\n    }\\n};\\n```\\n##### Python\\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        return [celsius + 273.15, (celsius * 1.80) + 32.00]\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[]{celsius + 273.15, (celsius * 1.80) + 32.00};\\n    }\\n}\\n```\n```\\nclass Solution \\n{\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, (celsius * 1.8) + 32};\\n    }\\n};\\n```\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        return [celsius + 273.15, (celsius * 1.80) + 32.00]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808803,
                "title": "simple-java-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double p[] = new double[2];\\n        p[0]=celsius+273.15;\\n        p[1]=celsius*1.80+32.00;\\n        return p;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double p[] = new double[2];\\n        p[0]=celsius+273.15;\\n        p[1]=celsius*1.80+32.00;\\n        return p;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3918458,
                "title": "simple-python-solution-easy-explanation",
                "content": "# Explanation\\nLet\\'s go through the code step by step and explain what it does:\\n\\n1. You have defined a class called `Solution` that contains a method named `convertTemperature`. In Python, classes are used to create objects with specific attributes and methods. In this case, you\\'ve created a class that can perform temperature conversions.\\n\\n2. The `convertTemperature` method takes one argument, `celsius`, which is the temperature in degrees Celsius that you want to convert.\\n\\n3. Inside the method, two variables are calculated:\\n\\n   a. `kelvin`: This variable is calculated by adding 273.15 to the input temperature `celsius`. This conversion is used to convert Celsius to Kelvin. The addition of 273.15 is based on the relationship between the Celsius and Kelvin scales. In the Kelvin scale, 0 Kelvin is equivalent to -273.15 degrees Celsius.\\n\\n   b. `fahrenheit`: This variable is calculated by multiplying the input temperature `celsius` by 1.80 (which represents the conversion factor from Celsius to Fahrenheit) and then adding 32.00. This converts the temperature from Celsius to Fahrenheit. The formula to convert Celsius to Fahrenheit is `F = (C \\xD7 9/5) + 32`, where `F` is the temperature in Fahrenheit and `C` is the temperature in Celsius.\\n\\n4. Finally, the method returns a list containing two elements: `kelvin` and `fahrenheit`. These elements represent the temperature in Kelvin and Fahrenheit, respectively, after the conversion.\\n\\nTo use this `convertTemperature` method, you can create an instance of the `Solution` class and then call the method with a Celsius temperature as an argument. For example:\\n\\n```python\\n# Create an instance of the Solution class\\nsolution = Solution()\\n\\n# Call the convertTemperature method with a Celsius temperature (e.g., 25 degrees Celsius)\\nresult = solution.convertTemperature(25)\\n\\n# Print the result\\nprint(result)\\n```\\n\\nThe output will be a list with the temperature in Kelvin and Fahrenheit based on the input Celsius temperature.\\n# Code\\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        kelvin = celsius + 273.15\\n        farenhite = celsius * 1.80 + 32.00\\n\\n        return [kelvin, farenhite]\\n```\\n\\n**Please upvote if you like the solution.\\nHappy Coding! \\uD83D\\uDE0A**",
                "solutionTags": [
                    "Python",
                    "Math"
                ],
                "code": "```python\\n# Create an instance of the Solution class\\nsolution = Solution()\\n\\n# Call the convertTemperature method with a Celsius temperature (e.g., 25 degrees Celsius)\\nresult = solution.convertTemperature(25)\\n\\n# Print the result\\nprint(result)\\n```\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        kelvin = celsius + 273.15\\n        farenhite = celsius * 1.80 + 32.00\\n\\n        return [kelvin, farenhite]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2997947,
                "title": "python-simple-one-line-solution",
                "content": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32]\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32]\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2839560,
                "title": "python-easy-solution",
                "content": "\\n\\n# Code\\u2705\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [(celsius + 273.15),(celsius * 1.80 + 32.00)]\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [(celsius + 273.15),(celsius * 1.80 + 32.00)]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2810126,
                "title": "very-difficult",
                "content": "# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.8 + 32]\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.8 + 32]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3889809,
                "title": "simple-logic-beats-95-50-of-users-with-python3-using-list-comprehension",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        kelvin=celsius+273.15\\n        fahrenheit=celsius*1.80+32.00\\n        list=[kelvin,fahrenheit]\\n        return list\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        kelvin=celsius+273.15\\n        fahrenheit=celsius*1.80+32.00\\n        list=[kelvin,fahrenheit]\\n        return list\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3545126,
                "title": "1-liner-and-that-s-it",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return celsius + 273.15 , celsius * 1.80+32.00\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return celsius + 273.15 , celsius * 1.80+32.00\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3454436,
                "title": "just-return-one-line",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        return new double[] {celsius+273.15,(celsius*1.80)+32.00};\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        return new double[] {celsius+273.15,(celsius*1.80)+32.00};\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3056546,
                "title": "one-line-solution-c",
                "content": "# Intuition\\n***Just know the formula*** \\n****Temperature in Kelvin = Temperature in Celcius + 273.15\\nTemperature in Fahreneight = 1.8*(Temperature in Celcius) + 32****\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n               //temperature in K, Temperature in F\\n        return { celsius + 273.15, celsius*1.80 + 32.00 };\\n    }\\n};\\n```\\n**Please upvote if it helped. Happy Coding!**",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n               //temperature in K, Temperature in F\\n        return { celsius + 273.15, celsius*1.80 + 32.00 };\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2869029,
                "title": "one-liner-javascript",
                "content": "```\\n/**\\n * @param {number} celsius\\n * @return {number[]}\\n */\\nvar convertTemperature = function(celsius) {\\n    return [(celsius + 273.15),(celsius * 1.80 + 32.00)]\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} celsius\\n * @return {number[]}\\n */\\nvar convertTemperature = function(celsius) {\\n    return [(celsius + 273.15),(celsius * 1.80 + 32.00)]\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2809884,
                "title": "simple-javascript-typescript-solution-100-faster",
                "content": "# Formula\\nFahrenheit = 1.8 * celsius + 32\\nKelvin = 273.15 + celsius\\n\\n\\n# Code\\n```\\nfunction convertTemperature(celsius: number): number[] {\\n    return [273.15 + celsius,1.8 * celsius + 32] \\n\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nfunction convertTemperature(celsius: number): number[] {\\n    return [273.15 + celsius,1.8 * celsius + 32] \\n\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2808863,
                "title": "simple-c-solution-using-set-precision",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double k = (celsius + 273.15)/1.00000;\\n        double f = (celsius * 1.80 + 32.00)/1.00000;\\n        ans = {k,f};\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double k = (celsius + 273.15)/1.00000;\\n        double f = (celsius * 1.80 + 32.00)/1.00000;\\n        ans = {k,f};\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3818356,
                "title": "python3-one-line-faster-than-92",
                "content": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius*1.8 + 32]\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius*1.8 + 32]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3341000,
                "title": "list-of-two-temperature-values-one-in-kelvin-and-another-in-fahrenheit",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThis code defines a class Solution with a method convertTemperature that takes a temperature value in Celsius and returns a list of two temperature values, one in Kelvin and another in Fahrenheit. The conversion formula for Kelvin is Celsius + 273.15 and for Fahrenheit is Celsius * 1.80 + 32.00.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe code uses a simple approach to convert Celsius temperature into Kelvin and Fahrenheit. It uses the conversion formulas to calculate the corresponding temperature values and returns them as a list.\\n\\n# Complexity\\n<!-- - Time complexity: -->\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n<!-- - Space complexity: -->\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of this code is O(1) because the conversion formula used to calculate the temperature values is a constant time operation. The space complexity is also O(1) because the function returns a fixed size list of two elements, regardless of the input value.\\n\\n# Code\\n```\\nclass Solution {\\n  List<double> convertTemperature(double celsius) {\\n    return ([celsius + 273.15, celsius * 1.80 + 32.00]);\\n  }\\n}\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  List<double> convertTemperature(double celsius) {\\n    return ([celsius + 273.15, celsius * 1.80 + 32.00]);\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3283834,
                "title": "python-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        temp=[]\\n        kelvin=celsius+273.15\\n        fahrenheit=celsius * 1.80 + 32.00\\n        temp.append(kelvin)\\n        temp.append(fahrenheit)\\n        return temp\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        temp=[]\\n        kelvin=celsius+273.15\\n        fahrenheit=celsius * 1.80 + 32.00\\n        temp.append(kelvin)\\n        temp.append(fahrenheit)\\n        return temp\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3178803,
                "title": "c-1-line-code-beginner-friendly",
                "content": "![image](https://assets.leetcode.com/users/images/41304601-115c-4109-b28d-67d423d0c5b0_1676265421.712688.png)\\n\\n**T->O(1) && S->O(1)**\\n\\n\\tclass Solution {\\n\\tpublic:\\n\\t\\tvector<double> convertTemperature(double celsius) {\\n\\t\\t\\treturn {celsius+273.15,celsius*1.80+32.00};\\n\\t\\t}\\n\\t};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tvector<double> convertTemperature(double celsius) {\\n\\t\\t\\treturn {celsius+273.15,celsius*1.80+32.00}",
                "codeTag": "Java"
            },
            {
                "id": 3130551,
                "title": "simple-c-solution-easy-to-understand",
                "content": "**Intuition:**\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThis question is simple, Just do mathmatical Calculations based on the formule\\n\\n```\\nKelvin = Celsius + 273.15\\n```\\n```\\nFahrenheit = Celsius * 1.80 + 32.00\\n```\\n<!-- # Approach -->\\n<!-- Describe your approach to solving the problem. -->\\n\\n---\\n\\n**Solution:**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {\\n                celsius + 273.15,\\n                celsius * 1.80 + 32.00\\n        };\\n    }\\n};\\n```\\n\\n----\\n**Analysis:**\\n- Time complexity:```O(1) ```\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:```O(1) ```\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n\\n----\\n\\nIf this solution $$helps$$ you then please ```upvote```,\\nTill then **Keep Learning, Keep Growing !!!!**\\n\\n\\n\\n**Thank You !!!**\\n\\n\\n----",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nKelvin = Celsius + 273.15\\n```\n```\\nFahrenheit = Celsius * 1.80 + 32.00\\n```\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {\\n                celsius + 273.15,\\n                celsius * 1.80 + 32.00\\n        };\\n    }\\n};\\n```\n```O(1) ```\n```O(1) ```\n```upvote```",
                "codeTag": "Java"
            },
            {
                "id": 2997370,
                "title": "simple-one-line-solution",
                "content": "# Intuition\\n\\n\\n# Approach\\nCreating array on return statement.\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[] {celsius+273.15,(celsius*1.8)+32}  ;     \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[] {celsius+273.15,(celsius*1.8)+32}  ;     \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2968542,
                "title": "my-java-solution-beats-100-in-runtime",
                "content": "# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kel = celsius + 273.15;\\n        double far = celsius * 1.80 + 32.00 ;\\n        double[] a = {kel,far};\\n        return a;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kel = celsius + 273.15;\\n        double far = celsius * 1.80 + 32.00 ;\\n        double[] a = {kel,far};\\n        return a;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2837008,
                "title": "1-line-solution",
                "content": "# Complexity\\n- Time complexity: *`O(1)`*\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: *`O(1)`*\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15, celsius * 1.80 + 32.00};\\n        // Kelvin and Fahrenheit \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15, celsius * 1.80 + 32.00};\\n        // Kelvin and Fahrenheit \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2836051,
                "title": "js-solution-runtime-94-9-memory-70-57",
                "content": "# Code\\n```\\n/**\\n * @param {number} celsius\\n * @return {number[]}\\n */\\nvar convertTemperature = function(celsius) {\\n    let resAr = [celsius +273.15, celsius*1.80 + 32.00];\\n    return resAr;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} celsius\\n * @return {number[]}\\n */\\nvar convertTemperature = function(celsius) {\\n    let resAr = [celsius +273.15, celsius*1.80 + 32.00];\\n    return resAr;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2818442,
                "title": "python-simple-one-liner",
                "content": "# Intuition\\n- Very simple code, one liner\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, c: float) -> List[float]:\\n        return [c+273.15, c*1.80+32]\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, c: float) -> List[float]:\\n        return [c+273.15, c*1.80+32]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2813742,
                "title": "one-line-solution-java-best-way",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nI just converted just celecius to kelvin and farh... then used string format to round off the value and the made sure the we have optimal round off value.\\nthen converted the value in Double using parseDouble\\n\\n\\n\\n\\nused String.format(\"%.5\", num)\\nand  Double.parseDouble(); \\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[]{Double.parseDouble(String.format(\"%.5f\",  Double.parseDouble(String.format(\"%.3f\", celsius + 273.15)))), Double.parseDouble(String.format(\"%.5f\",  Double.parseDouble(String.format(\"%.3f\", celsius*1.80 + 32.00))))};  \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[]{Double.parseDouble(String.format(\"%.5f\",  Double.parseDouble(String.format(\"%.3f\", celsius + 273.15)))), Double.parseDouble(String.format(\"%.5f\",  Double.parseDouble(String.format(\"%.3f\", celsius*1.80 + 32.00))))};  \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808858,
                "title": "simple-solution-with-100-beats-c",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>ans;\\n        ans.push_back(celsius+273.15);\\n        ans.push_back(celsius*1.80+32.00);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>ans;\\n        ans.push_back(celsius+273.15);\\n        ans.push_back(celsius*1.80+32.00);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808852,
                "title": "c-o-1-easy",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double c) {\\n        double k = c + 273.15;\\n        double f = c*1.80 + 32.00;\\n        return {k,f};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double c) {\\n        double k = c + 273.15;\\n        double f = c*1.80 + 32.00;\\n        return {k,f};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808837,
                "title": "2469-convert-the-temperature-java",
                "content": "class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double ans[] = new double[2];\\n        \\n        ans[0] = celsius + 273.15;\\n        ans[1] = celsius * 1.80 + 32.00;\\n            \\n            return ans;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double ans[] = new double[2];\\n        \\n        ans[0] = celsius + 273.15;\\n        ans[1] = celsius * 1.80 + 32.00;\\n            \\n            return ans;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 4032721,
                "title": "one-line-solution-of-convert-the-temperature-problem",
                "content": "# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n        \\n```",
                "solutionTags": [
                    "Python3",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3639526,
                "title": "one-of-the-easiest-way-in-java-beats-in-runtime-80-beats-in-memory",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kelvin  = celsius + 273.15;\\n        double fahrenheit = celsius * 1.80 + 32.00;\\n        return new double[] {kelvin, fahrenheit};\\n        // if you like it, please upvote it.\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kelvin  = celsius + 273.15;\\n        double fahrenheit = celsius * 1.80 + 32.00;\\n        return new double[] {kelvin, fahrenheit};\\n        // if you like it, please upvote it.\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3637788,
                "title": "2469-convert-the-temperature-100-easy-java-code",
                "content": "# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double k = celsius + 273.15;\\n        double f = (celsius * 1.80) + 32.00;\\n        double[] arr = {k,f};\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double k = celsius + 273.15;\\n        double f = (celsius * 1.80) + 32.00;\\n        double[] arr = {k,f};\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3517459,
                "title": "convert-the-temperature",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nuse the given formulas for converting Celsius to Kelvin and Fahrenheit.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe approach used in the code is straightforward. It takes the Celsius temperature and applies the conversion formulas to calculate the corresponding Kelvin and Fahrenheit temperatures. The calculated temperatures are then returned as a list containing the Kelvin and Fahrenheit values.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n The time complexity of this code is O(1) because the temperature conversion operations are constant time operations.\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity is also O(1) because the code only uses a fixed amount of additional space to store the converted temperatures in the list.\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        kelvin = celsius + 273.15\\n        fahrenheit = celsius * 1.80 + 32\\n        return [kelvin, fahrenheit]\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        kelvin = celsius + 273.15\\n        fahrenheit = celsius * 1.80 + 32\\n        return [kelvin, fahrenheit]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3480825,
                "title": "java-one-liner-best-solution-beats-100",
                "content": "# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] ret = new double[]{celsius + 273.15,celsius * 1.80 + 32};return ret;  \\n    }\\n}\\n```\\n",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] ret = new double[]{celsius + 273.15,celsius * 1.80 + 32};return ret;  \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3399809,
                "title": "very-simple-go-solution",
                "content": "\\n```\\nfunc convertTemperature(celsius float64) []float64 {\\n\\tk := celsius + 273.15\\n\\tf := celsius * 1.8 + 32\\n\\treturn []float64{k, f}\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc convertTemperature(celsius float64) []float64 {\\n\\tk := celsius + 273.15\\n\\tf := celsius * 1.8 + 32\\n\\treturn []float64{k, f}\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3360231,
                "title": "c-3-liner-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach \\n<!-- Describe your approach to solving the problem. -->Returning the pairs of k & F\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->O(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double k=celsius+273.15;\\n        double f=celsius*1.8+32.00;\\n\\n        return{k,f};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double k=celsius+273.15;\\n        double f=celsius*1.8+32.00;\\n\\n        return{k,f};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3359545,
                "title": "100-fastest-code",
                "content": "# Complexity\\n- Time complexity:\\n $$O(1)$$\\n\\n- Space complexity:\\n$$O(1)$$ \\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        double Kelvin = celsius + 273.15;\\n        double Fahrenheit = celsius * 1.80 + 32.00;\\n\\n        double ans[] = {Kelvin , Fahrenheit};\\n\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        double Kelvin = celsius + 273.15;\\n        double Fahrenheit = celsius * 1.80 + 32.00;\\n\\n        double ans[] = {Kelvin , Fahrenheit};\\n\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3302601,
                "title": "java-solution-beats-100-runtime-0ms-and-better-memory-beats-63-83",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double ans[] = new double[2];\\n        double kelvin = celsius + 273.15;\\n        double fahrenheit = celsius * 1.80 + 32.00;\\n        ans[0] = kelvin;\\n        ans[1] = fahrenheit;\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double ans[] = new double[2];\\n        double kelvin = celsius + 273.15;\\n        double fahrenheit = celsius * 1.80 + 32.00;\\n        ans[0] = kelvin;\\n        ans[1] = fahrenheit;\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3296173,
                "title": "one-line-solution-in-java-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nUpvote if you like it\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- kelvin = celcius + 273.15\\n    So simply add 273.15 to celsius as it gives a double value.\\n\\n- farenheit = celsius * 1.80 + 32.00 \\n    So just do these operations with celsius \\n\\nAfter doing these return value in array form\\n\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[]{(celsius+273.15),((celsius*1.80)+32.00)};\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[]{(celsius+273.15),((celsius*1.80)+32.00)};\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3289759,
                "title": "c-easy-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double f1=celsius+273.15;\\n        double f2=celsius*1.80+32.00;\\n        vector<double>v={f1,f2};\\n        return v;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double f1=celsius+273.15;\\n        double f2=celsius*1.80+32.00;\\n        vector<double>v={f1,f2};\\n        return v;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3244913,
                "title": "java-o-n-simple-15-line-solution-100-faster",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double c) {\\n        double k = c;\\n        for (int i = 0; i < 273; i++)\\n            k++;\\n        k += 0.15;\\n        double f = c * 1.80;\\n        for (int i = 0; i < 32; i++)\\n            f++;\\n        double[] t = new double[2];\\n        t[0] = k;\\n        t[1] = f;\\n        return new double[]{t[0], t[1]};\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double c) {\\n        double k = c;\\n        for (int i = 0; i < 273; i++)\\n            k++;\\n        k += 0.15;\\n        double f = c * 1.80;\\n        for (int i = 0; i < 32; i++)\\n            f++;\\n        double[] t = new double[2];\\n        t[0] = k;\\n        t[1] = f;\\n        return new double[]{t[0], t[1]};\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3229403,
                "title": "simplest-c-one-line-solution-best-for-begineers",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15, celsius * 1.80 + 32};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Memoization"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15, celsius * 1.80 + 32};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3221716,
                "title": "simplest-1-line-c-code-beats-100-beginner-friendly",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n    return {(celsius+273.15),(celsius * 1.80 + 32.00)};\\n    }\\n};\\nDO UPVOTE if you like \\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n    return {(celsius+273.15),(celsius * 1.80 + 32.00)};\\n    }\\n};\\nDO UPVOTE if you like \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3176856,
                "title": "best-simple-approach-c-setprecision",
                "content": "# Code\\n```\\n//********************* Creator- itwasme *******************//\\n//******************* Created on- 12/02/23 *******************//\\n\\n// setprecision()\\n// used to round of floating point number till required decimal places\\n\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double kelvin=celsius+273.15;\\n        ans.push_back(kelvin);\\n        double fahrenheit=(celsius*1.80)+32.00;\\n        ans.push_back(fahrenheit);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\n//********************* Creator- itwasme *******************//\\n//******************* Created on- 12/02/23 *******************//\\n\\n// setprecision()\\n// used to round of floating point number till required decimal places\\n\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double kelvin=celsius+273.15;\\n        ans.push_back(kelvin);\\n        double fahrenheit=(celsius*1.80)+32.00;\\n        ans.push_back(fahrenheit);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3128133,
                "title": "easy-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>ans;\\n        ans.push_back(celsius+273.15);\\n        ans.push_back(celsius*1.80+32.00);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>ans;\\n        ans.push_back(celsius+273.15);\\n        ans.push_back(celsius*1.80+32.00);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3081560,
                "title": "go-solution-beats-100",
                "content": "# Complexity\\n- Time complexity: O(1)\\n\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nfunc convertTemperature(celsius float64) []float64 {\\n    return [] float64 {\\n        celsius + 273.15,\\n        celsius * 1.80 + 32.00,\\n    }\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc convertTemperature(celsius float64) []float64 {\\n    return [] float64 {\\n        celsius + 273.15,\\n        celsius * 1.80 + 32.00,\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3079351,
                "title": "easiest-solution-c-with-0ms-beats-100-of-solutions",
                "content": "# Approach\\nExtremely simple solution, just return the creation of the array.\\n# Complexity\\n- Time complexity:\\n$O(1)$\\n\\n- Space complexity:\\n$O(1)$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15,celsius * 1.80 + 32.00};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15,celsius * 1.80 + 32.00};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3040552,
                "title": "beats-100-0ms-runtime-o-1",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double toFahrenheit(double c){\\n        return (((c*9)/5)+32);\\n    }\\n    double toKelvin(double c){\\n        return 273.15+c;\\n    }\\n    vector<double> convertTemperature(double celsius) {\\n        return {toKelvin(celsius),toFahrenheit(celsius)};\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double toFahrenheit(double c){\\n        return (((c*9)/5)+32);\\n    }\\n    double toKelvin(double c){\\n        return 273.15+c;\\n    }\\n    vector<double> convertTemperature(double celsius) {\\n        return {toKelvin(celsius),toFahrenheit(celsius)};\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2997897,
                "title": "c-just-do-the-math-one-short-line",
                "content": "\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15, celsius * 1.80 + 32};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15, celsius * 1.80 + 32};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2933005,
                "title": "brute-force-o-1-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nKelvin = Celsius + 273.15\\nFahrenheit = Celsius * 1.80 + 32.00\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nBrute Force\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double ans[]=new double[2];\\n        ans[0]=celsius+273.15;\\n        ans[1]=celsius*1.80+32.00;\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double ans[]=new double[2];\\n        ans[0]=celsius+273.15;\\n        ans[1]=celsius*1.80+32.00;\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2902469,
                "title": "dart-one-line-solution",
                "content": "If my solution was helpful, please upvote me. It motivates me to move on)\\n\\n# Code\\n```\\nclass Solution {\\n  List<double> convertTemperature(double celsius) {\\n      return <double>[celsius + 273.15, celsius * 1.80 + 32.00];\\n  }\\n}\\n```",
                "solutionTags": [
                    "Dart"
                ],
                "code": "```\\nclass Solution {\\n  List<double> convertTemperature(double celsius) {\\n      return <double>[celsius + 273.15, celsius * 1.80 + 32.00];\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2879444,
                "title": "java-javascript-python-solution",
                "content": "# Intuition\\nWe just have to convert the temprature from celsius to Fahrenheit and Kalvin.\\n\\n# Approach\\nUsing the formula, in the descripion, present the results in form of array elements.\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code - Java\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[] {celsius + 273.15, celsius * 1.8 + 32};\\n    }\\n}\\n```\\n\\n# Code - JavaScript\\n```\\nvar convertTemperature = function(celsius) {\\n    return [celsius + 273.15 , celsius * 1.8 + 32]\\n};\\n```\\n\\n# Code - Python\\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        return [celsius + 273.15 , celsius * 1.8 + 32]\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "JavaScript"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[] {celsius + 273.15, celsius * 1.8 + 32};\\n    }\\n}\\n```\n```\\nvar convertTemperature = function(celsius) {\\n    return [celsius + 273.15 , celsius * 1.8 + 32]\\n};\\n```\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        return [celsius + 273.15 , celsius * 1.8 + 32]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2878104,
                "title": "java-easiest-solution-2-liner-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] ans = {(celsius + 273.15),(celsius * 1.80 + 32.00)};\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] ans = {(celsius + 273.15),(celsius * 1.80 + 32.00)};\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2849858,
                "title": "python-oneliner",
                "content": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15, celsius*1.80+32]\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15, celsius*1.80+32]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2846734,
                "title": "java-0ms-o-1-1-line-solution",
                "content": "# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double c) {\\n        return new double[]{c + 273.15, c * 1.8 + 32.0};\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double c) {\\n        return new double[]{c + 273.15, c * 1.8 + 32.0};\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2830787,
                "title": "precise-and-concise-c-solution",
                "content": "# Intuition\\nDirectly use the available conversion formulae.\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n\\n      // declared a vector of double datatype named ans\\n      vector<double> ans;\\n\\n      /* using the conversion formulae to convert the temperature\\n      into kelvin and fahrenheit */\\n      double a = celsius + 273.15;\\n      double b = (celsius*1.80) + 32.00;\\n      \\n      // push the elements a and b into the vector and return \\n      ans.push_back(a);\\n      ans.push_back(b);\\n\\n      return ans;  \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n\\n      // declared a vector of double datatype named ans\\n      vector<double> ans;\\n\\n      /* using the conversion formulae to convert the temperature\\n      into kelvin and fahrenheit */\\n      double a = celsius + 273.15;\\n      double b = (celsius*1.80) + 32.00;\\n      \\n      // push the elements a and b into the vector and return \\n      ans.push_back(a);\\n      ans.push_back(b);\\n\\n      return ans;  \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2830308,
                "title": "java-1-line-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nJust use the calculation\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(1)$$\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n$$O(1)$$\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        return new double[]{celsius + 273.15,celsius * 1.80 + 32.00};\\n    \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        return new double[]{celsius + 273.15,celsius * 1.80 + 32.00};\\n    \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2820407,
                "title": "java-functional-style-solution",
                "content": "This is my simple java solution with function usage\\n\\n```\\nclass Solution {\\n    \\n    private static final Function<Double, Double> convertCelsiusToKelvine = t -> t + 273.15;\\n    \\n    private static final Function<Double, Double> convertCelsiusToFahrenheit = t -> t * 1.80 + 32.00;\\n    \\n    public double[] convertTemperature(double celsius) {\\n        return new double[] {\\n            convertCelsiusToKelvine.apply(celsius), \\n            convertCelsiusToFahrenheit.apply(celsius)\\n            };\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    \\n    private static final Function<Double, Double> convertCelsiusToKelvine = t -> t + 273.15;\\n    \\n    private static final Function<Double, Double> convertCelsiusToFahrenheit = t -> t * 1.80 + 32.00;\\n    \\n    public double[] convertTemperature(double celsius) {\\n        return new double[] {\\n            convertCelsiusToKelvine.apply(celsius), \\n            convertCelsiusToFahrenheit.apply(celsius)\\n            };\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2818760,
                "title": "python-easy-solution-in-one-line",
                "content": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15,celsius*1.8+32]\\n```\\n\\n**Upvote if you like the solution or ask if there is any query**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15,celsius*1.8+32]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2817777,
                "title": "python-1-liner",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2812816,
                "title": "c-very-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> final;\\n        double k = celsius + 273.15;\\n        double f = celsius * 1.80 + 32.00;\\n        final.push_back(k);\\n        final.push_back(f);\\n        return final;\\n    }\\n};\\n\\n```\\n\\nPLS PLS UPVOTE IF YOU FOUND IT HELPFUL :)",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> final;\\n        double k = celsius + 273.15;\\n        double f = celsius * 1.80 + 32.00;\\n        final.push_back(k);\\n        final.push_back(f);\\n        return final;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2811565,
                "title": "python-easiest-solution",
                "content": "\\tclass Solution:\\n\\t\\tdef convertTemperature(self, celsius: float) -> List[float]:\\n\\t\\t\\treturn [celsius+273.15,(celsius * 1.80)+32.00]",
                "solutionTags": [],
                "code": "\\tclass Solution:\\n\\t\\tdef convertTemperature(self, celsius: float) -> List[float]:\\n\\t\\t\\treturn [celsius+273.15,(celsius * 1.80)+32.00]",
                "codeTag": "Java"
            },
            {
                "id": 2810925,
                "title": "c-easy-solution-0ms-100-fast-and-consumes-100-less-space",
                "content": "```\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    double* ans=malloc(2*sizeof(double));\\n    double kelvin=(double)(celsius+273.15);\\n    double fah=(double)(celsius*1.80+32.00);\\n    ans[0]=kelvin;\\n    ans[1]=fah;\\n    *(returnSize)=2;\\n    return ans;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    double* ans=malloc(2*sizeof(double));\\n    double kelvin=(double)(celsius+273.15);\\n    double fah=(double)(celsius*1.80+32.00);\\n    ans[0]=kelvin;\\n    ans[1]=fah;\\n    *(returnSize)=2;\\n    return ans;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2810557,
                "title": "c-simple",
                "content": "```\\n\\n\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>v;\\n        v.push_back(273.15+ celsius);\\n        v.push_back((celsius*1.8)+32);\\n        return v;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n\\n\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>v;\\n        v.push_back(273.15+ celsius);\\n        v.push_back((celsius*1.8)+32);\\n        return v;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809670,
                "title": "c-easy-approach",
                "content": "Here is my c++ code for this problem.\\n\\'\\'\\'\\n\\n\\tclass Solution {\\n\\tpublic:\\n\\t\\tvector<double> convertTemperature(double celsius) {\\n\\t\\t\\tdouble k=celsius+273.15;\\n\\t\\t\\tdouble f=celsius*1.80+32.00;\\n\\t\\t\\treturn {k, f};\\n\\t\\t}\\n\\t};\\n\\'\\'\\'",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tvector<double> convertTemperature(double celsius) {\\n\\t\\t\\tdouble k=celsius+273.15;\\n\\t\\t\\tdouble f=celsius*1.80+32.00;\\n\\t\\t\\treturn {k, f}",
                "codeTag": "Java"
            },
            {
                "id": 2809396,
                "title": "easiest-c-solution-with-explanation",
                "content": "Here is my C++ solution :-\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double k= celsius+273.15;         //convert celsius to kelvin using the formula : k= c+273.15\\n        double f= (celsius*1.80)+32.00;  //convert celsius to farenheit using the formula : f= (c*1.8)+32\\n        vector<double> ans= {k,f};      //store the temperature in kelvin and fahrenheit in vector\\n        return ans;                    // return the ans\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double k= celsius+273.15;         //convert celsius to kelvin using the formula : k= c+273.15\\n        double f= (celsius*1.80)+32.00;  //convert celsius to farenheit using the formula : f= (c*1.8)+32\\n        vector<double> ans= {k,f};      //store the temperature in kelvin and fahrenheit in vector\\n        return ans;                    // return the ans\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809255,
                "title": "java-easy-approach",
                "content": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double d[]=new double[2];\\n        double k=celsius + 273.15;\\n        double f=celsius * 1.80 + 32.00;\\n         d[0]=Double.valueOf(String.format(\"%.5f\",k));\\n         d[1]=Double.valueOf(String.format(\"%.5f\",f));\\n        return d;\\n        \\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double d[]=new double[2];\\n        double k=celsius + 273.15;\\n        double f=celsius * 1.80 + 32.00;\\n         d[0]=Double.valueOf(String.format(\"%.5f\",k));\\n         d[1]=Double.valueOf(String.format(\"%.5f\",f));\\n        return d;\\n        \\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3864214,
                "title": "beats-100-solution-java-less-line-code-beginner-friendly-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] ans = new double[2];\\n        double kelvin = celsius+273.15;\\n        double fah = (celsius*1.80) + 32;\\n        ans[0] = kelvin;\\n        ans[1] = fah;\\n        \\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] ans = new double[2];\\n        double kelvin = celsius+273.15;\\n        double fah = (celsius*1.80) + 32;\\n        ans[0] = kelvin;\\n        ans[1] = fah;\\n        \\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3819846,
                "title": "one-line-code-easy-to-understand-simple-and-clean-code",
                "content": "# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        return new double[] {celsius + 273.15, celsius * 1.80 + 32.00};\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        return new double[] {celsius + 273.15, celsius * 1.80 + 32.00};\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3793594,
                "title": "fully-explained-c-simple-code",
                "content": "# Intuition & Approach\\n1. Inside the function, a vector of doubles named ```temp``` is *created to store the converted temperatures*.\\n\\n2. The first converted temperature is calculated by adding ```273.15``` to the input Celsius temperature and then pushed back into the \"temp\" vector.\\n\\n3. The second converted temperature is calculated using the formula ```celsius * 1.80 + 32.00``` (*Celsius to Fahrenheit conversion formula*). The result is then pushed back into the ```temp``` vector.\\n\\n4. Finally, the ```temp``` vector containing the converted temperatures in Kelvin and Fahrenheit is *returned as the output*.\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$ \\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        // Create an empty vector to store the converted temperatures\\n        vector<double> temp;\\n        \\n        // Convert Celsius to Kelvin and add it to the vector\\n        temp.push_back(celsius + 273.15);\\n        \\n        // Convert Celsius to Fahrenheit and add it to the vector\\n        temp.push_back(celsius * 1.80 + 32.00);\\n        \\n        // Return the vector containing the converted temperatures\\n        return temp;  \\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```temp```\n```273.15```\n```celsius * 1.80 + 32.00```\n```temp```\n```temp```\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        // Create an empty vector to store the converted temperatures\\n        vector<double> temp;\\n        \\n        // Convert Celsius to Kelvin and add it to the vector\\n        temp.push_back(celsius + 273.15);\\n        \\n        // Convert Celsius to Fahrenheit and add it to the vector\\n        temp.push_back(celsius * 1.80 + 32.00);\\n        \\n        // Return the vector containing the converted temperatures\\n        return temp;  \\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3676725,
                "title": "easy-c-solution-beats-100",
                "content": "# Intuition\\nJust do as said in the question no hidden logic\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nMake a vector and push in it two times first c+273.15 and next c*1.8+32.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(n)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n     vector<double>v;\\n     v.push_back(celsius+273.15);\\n     v.push_back(celsius*1.80+32);\\n        return v;\\n    }\\n};\\n```\\n\\n**Please upvote**",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n     vector<double>v;\\n     v.push_back(celsius+273.15);\\n     v.push_back(celsius*1.80+32);\\n        return v;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3614768,
                "title": "100-c-only-5-lines-killer-solution-by-sd-easy-upvote",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double c) \\n    {\\n        vector<double> v;\\n        double Kelvin = c + 273.15;\\n        v.push_back(Kelvin);\\n        double Fahrenheit = c * 1.80 + 32.00;\\n        v.push_back(Fahrenheit);\\n        return v;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double c) \\n    {\\n        vector<double> v;\\n        double Kelvin = c + 273.15;\\n        v.push_back(Kelvin);\\n        double Fahrenheit = c * 1.80 + 32.00;\\n        v.push_back(Fahrenheit);\\n        return v;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3599038,
                "title": "converting-from-celsius-to-kelvin-and-fahrenheit-temperature-c-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n     \\n        double k=celsius+273.15;\\n        double f=celsius*(1.80)+32.00;\\n        vector<double>v;\\n        v.push_back(k);\\n        v.push_back(f);\\n        return v;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n     \\n        double k=celsius+273.15;\\n        double f=celsius*(1.80)+32.00;\\n        vector<double>v;\\n        v.push_back(k);\\n        v.push_back(f);\\n        return v;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3586489,
                "title": "solution-in-python-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        \"\"\"\\n        :type celsius: float\\n        :rtype: List[float]\\n        \"\"\"\\n        l=[]\\n        l.append(celsius+273.15)\\n        l.append(celsius*1.80+32.00)\\n        return l\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        \"\"\"\\n        :type celsius: float\\n        :rtype: List[float]\\n        \"\"\"\\n        l=[]\\n        l.append(celsius+273.15)\\n        l.append(celsius*1.80+32.00)\\n        return l\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3537303,
                "title": "simplest-efficient-c-code-time-o-1-space-o-1",
                "content": "# Intuition\\nThe problem requires converting a temperature from Celsius to Kelvin and Fahrenheit. Celsius to Kelvin conversion involves adding 273.15 to the given temperature, and Celsius to Fahrenheit conversion involves multiplying the given temperature by 1.80 and adding 32.00.\\n\\n# Approach\\nThe approach involves creating a function convertTemperature that takes a temperature in Celsius as input and returns an array of two double values representing the converted temperatures in Kelvin and Fahrenheit. The function calculates the conversions directly by applying the necessary formulas and assigns the values to a static array. The array is then returned, providing the converted temperatures to the caller. This simplified approach eliminates dynamic memory allocation and reduces the code size while achieving the desired temperature conversions. returnSize to 2.\\n\\n# Complexity\\n- Time complexity: $O(1)$, because it performs a fixed number of arithmetic operations to convert the temperature and allocate memory. The time complexity does not depend on the input size.\\n\\n- Space complexity: $O(1)$, because it allocates memory for a double array of size 2. The space required does not depend on the input size.\\n\\n# Code\\n```\\ndouble* convertTemperature(double c, int* returnSize){\\n    *returnSize = 2;\\n    double*arr = malloc(2*sizeof(double));\\n    arr[0] = c + 273.15;\\n    arr[1] = c*1.80 + 32.00;\\n    return arr;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\ndouble* convertTemperature(double c, int* returnSize){\\n    *returnSize = 2;\\n    double*arr = malloc(2*sizeof(double));\\n    arr[0] = c + 273.15;\\n    arr[1] = c*1.80 + 32.00;\\n    return arr;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3362916,
                "title": "very-easy-to-understand-for-beginner-cpp",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>ans;\\n       double kelvin=celsius+273.15;\\n       double fahrenheit=celsius*1.80+32.00;\\n    ans.push_back(kelvin);\\n    ans.push_back(fahrenheit);\\n    return ans;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>ans;\\n       double kelvin=celsius+273.15;\\n       double fahrenheit=celsius*1.80+32.00;\\n    ans.push_back(kelvin);\\n    ans.push_back(fahrenheit);\\n    return ans;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3359547,
                "title": "100-fast-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kelvin = celsius + 273.15;\\n        double fahreheit = celsius*1.80 + 32;\\n        double arr[] = {kelvin,fahreheit};\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kelvin = celsius + 273.15;\\n        double fahreheit = celsius*1.80 + 32;\\n        double arr[] = {kelvin,fahreheit};\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3352342,
                "title": "100-efficient-c-solution",
                "content": "```\\ndouble* convertTemperature(double celsius, int* returnSize)\\n      {\\n       *returnSize = 2;\\n       double * a = malloc ( *returnSize*sizeof(double));\\n       a[0] = celsius + 273.15;\\n       a[1] = celsius * 1.80 + 32.00;\\n  return a;\\n}",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\ndouble* convertTemperature(double celsius, int* returnSize)\\n      {\\n       *returnSize = 2;\\n       double * a = malloc ( *returnSize*sizeof(double));\\n       a[0] = celsius + 273.15;\\n       a[1] = celsius * 1.80 + 32.00;\\n  return a;\\n}",
                "codeTag": "Unknown"
            },
            {
                "id": 3347091,
                "title": "one-line-solution-swift",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    func convertTemperature(_ celsius: Double) -> [Double] {\\n        [celsius + 273.15, celsius * 1.80 + 32.00]\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func convertTemperature(_ celsius: Double) -> [Double] {\\n        [celsius + 273.15, celsius * 1.80 + 32.00]\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3315809,
                "title": "o-1-tc-simple-conversion-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double Celsius) {\\n       double Kelvin = Celsius + 273.15;\\n       double Fahrenheit = Celsius * 1.80 + 32.00;\\n       vector<double> v;\\n       v.push_back(Kelvin);\\n       v.push_back(Fahrenheit);\\n       return v;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double Celsius) {\\n       double Kelvin = Celsius + 273.15;\\n       double Fahrenheit = Celsius * 1.80 + 32.00;\\n       vector<double> v;\\n       v.push_back(Kelvin);\\n       v.push_back(Fahrenheit);\\n       return v;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3302689,
                "title": "easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n\\n        double arr[] = new double[2];\\n        double kelvin = celsius + 273.15;\\n        double Fahrenheit = celsius*1.80 + 32.00;\\n\\n        arr[0] = kelvin;\\n        arr[1] = Fahrenheit;\\n\\n        return arr;\\n\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n\\n        double arr[] = new double[2];\\n        double kelvin = celsius + 273.15;\\n        double Fahrenheit = celsius*1.80 + 32.00;\\n\\n        arr[0] = kelvin;\\n        arr[1] = Fahrenheit;\\n\\n        return arr;\\n\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3280280,
                "title": "c-easy-solution",
                "content": "\\n# Complexity\\n- Time complexity:83 ms.Beats 90.75% of other solutions.\\n\\n- Space complexity:36.3 MB.\\n\\n# Code\\n```\\npublic class Solution {\\n    public double[] ConvertTemperature(double celsius) {\\n        double[] ans={celsius + 273.15,celsius * 1.80 + 32.00};\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public double[] ConvertTemperature(double celsius) {\\n        double[] ans={celsius + 273.15,celsius * 1.80 + 32.00};\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3202292,
                "title": "simple-java-solution-runtime-0ms-beats-100-memory-40-6mb-beats-70-97",
                "content": "# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kelvin = celsius + 273.15;\\n        double fahrenheit = celsius * 1.80 + 32.00;\\n        double ans[] = {kelvin, fahrenheit};\\n    return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kelvin = celsius + 273.15;\\n        double fahrenheit = celsius * 1.80 + 32.00;\\n        double ans[] = {kelvin, fahrenheit};\\n    return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3195225,
                "title": "o-1-python-3-easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3190016,
                "title": "1-line-solution-100-faster-and-99-7-less-memory-usage",
                "content": "# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n   public:\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, celsius * 1.80 + 32.00 };\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\n   public:\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, celsius * 1.80 + 32.00 };\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3173222,
                "title": "easy-to-understand-c",
                "content": "# Intuition\\njust use the formule.\\n\\n# Approach\\nKelvin = Celsius + 273.15\\nFahrenheit = (Celsius * 1.80) + 32.00\\n\\n# Complexity\\n- Time complexity: O(1)\\n\\n\\n- Space complexity: O(1)\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n            \\n            double K = celsius + 273.15;\\n            double F  = celsius * 1.80 + 32.00;\\n            return {K,F};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n            \\n            double K = celsius + 273.15;\\n            double F  = celsius * 1.80 + 32.00;\\n            return {K,F};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3172856,
                "title": "beats-100-simple-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n- $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[]{celsius + 273.15, celsius * 1.80 + 32};\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[]{celsius + 273.15, celsius * 1.80 + 32};\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3137974,
                "title": "c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n\\n      vector<double> ans;\\n        double kelvin=celsius+273.15;\\n        double fahrenheit=celsius*1.80+32.00;\\n\\n        ans.push_back(kelvin);\\n        ans.push_back(fahrenheit);\\n        return ans;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n\\n      vector<double> ans;\\n        double kelvin=celsius+273.15;\\n        double fahrenheit=celsius*1.80+32.00;\\n\\n        ans.push_back(kelvin);\\n        ans.push_back(fahrenheit);\\n        return ans;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3096406,
                "title": "pyhton-single-line-three-words-solution",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. --> Just return a list containg the temp in Kelvin and Fahrenhiet ( convet at the time of returning itself).\\n# Code\\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        \"\"\"\\n        :type celsius: float\\n        :rtype: List[float]\\n        \"\"\"\\n        return [celsius+273.15, celsius*1.80+32.0]\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        \"\"\"\\n        :type celsius: float\\n        :rtype: List[float]\\n        \"\"\"\\n        return [celsius+273.15, celsius*1.80+32.0]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3064867,
                "title": "very-much-easy-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n       vector<double> vec; \\n      double kelvin = celsius + 273.15;\\n      double fahrenheit = celsius * 1.80 + 32.00;\\n      vec.push_back(kelvin);\\n      vec.push_back(fahrenheit);\\n      return vec;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n       vector<double> vec; \\n      double kelvin = celsius + 273.15;\\n      double fahrenheit = celsius * 1.80 + 32.00;\\n      vec.push_back(kelvin);\\n      vec.push_back(fahrenheit);\\n      return vec;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3055576,
                "title": "java-easy-solution-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nMy first thought is to create an array and store the kelvin and Fahrenheit values in it\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nCreate an array of type double, length 2 and stored the respective values using the given formulae.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n    O(1)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n    O(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr=new double[2];\\n        arr[1]=1.80*celsius+32.00;\\n        arr[0]=celsius+273.15;\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr=new double[2];\\n        arr[1]=1.80*celsius+32.00;\\n        arr[0]=celsius+273.15;\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3014648,
                "title": "easy-java-5-line-solution",
                "content": "\\n// easiest approach\\n\\n\\n\\n\\tclass Solution {\\n\\n    public double[] convertTemperature(double celsius) { \\n        double ans[] =new double[2];\\n        double kelvin=celsius+273.15;\\n        double fahrenheit=celsius*1.80+32.00;\\n        ans[0]=Double.valueOf(String.format(\"%.5f\",kelvin));\\n        ans[1]=Double.valueOf(String.format(\"%.5f\",fahrenheit));\\n        \\n        return ans;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n\\n    public double[] convertTemperature(double celsius) { \\n        double ans[] =new double[2];\\n        double kelvin=celsius+273.15;\\n        double fahrenheit=celsius*1.80+32.00;\\n        ans[0]=Double.valueOf(String.format(\"%.5f\",kelvin));\\n        ans[1]=Double.valueOf(String.format(\"%.5f\",fahrenheit));\\n        \\n        return ans;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2999101,
                "title": "easy-simple-maths",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double kelv=celsius+273.15;\\n        double fah=celsius*1.80+32.00;\\n        return {kelv, fah};\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double kelv=celsius+273.15;\\n        double fah=celsius*1.80+32.00;\\n        return {kelv, fah};\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2947985,
                "title": "c",
                "content": "```\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    double* ans = malloc(2 * sizeof(double));\\n    ans[0] = celsius + 273.15;\\n    ans[1] = celsius*1.8 + 32;\\n    *returnSize = 2;\\n    return ans;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    double* ans = malloc(2 * sizeof(double));\\n    ans[0] = celsius + 273.15;\\n    ans[1] = celsius*1.8 + 32;\\n    *returnSize = 2;\\n    return ans;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2928212,
                "title": "c-2-line-solution-beat-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        ans.push_back(celsius+273.15);\\n        ans.push_back((celsius*1.80)+32);\\n     return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        ans.push_back(celsius+273.15);\\n        ans.push_back((celsius*1.80)+32);\\n     return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919060,
                "title": "2469-convert-the-temperature",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public double[] ConvertTemperature(double celsius) => new []{celsius + 273.15, celsius * 1.8 + 32};\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public double[] ConvertTemperature(double celsius) => new []{celsius + 273.15, celsius * 1.8 + 32};\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2904969,
                "title": "c-code",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double v1=(celsius+273.15);\\n        double v2=(celsius*1.80+32.00);\\n        return {v1,v2};  \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double v1=(celsius+273.15);\\n        double v2=(celsius*1.80+32.00);\\n        return {v1,v2};  \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2902267,
                "title": "kotlin-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    fun convertTemperature(celsius: Double): DoubleArray {\\n        return doubleArrayOf( celsius + 273.15, celsius * 1.80 + 32.00)\\n    }\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun convertTemperature(celsius: Double): DoubleArray {\\n        return doubleArrayOf( celsius + 273.15, celsius * 1.80 + 32.00)\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2898740,
                "title": "cpp-easy",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius+273.15,celsius*1.80+32.00};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius+273.15,celsius*1.80+32.00};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2877347,
                "title": "3ms-27-15-go-solution",
                "content": "```\\nfunc convertTemperature(c float64) []float64 {\\n  f := (c * 9 / 5) + 32\\n  k := c + 273.15\\n\\n  return []float64{k, f}\\n}\\n\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc convertTemperature(c float64) []float64 {\\n  f := (c * 9 / 5) + 32\\n  k := c + 273.15\\n\\n  return []float64{k, f}\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2859406,
                "title": "easy-java-solution",
                "content": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        double ans[] = new double[2];\\n        \\n        ans[0] = celsius + 273.15;\\n        ans[1] = celsius * 1.8 + 32;\\n        \\n        return ans;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        \\n        double ans[] = new double[2];\\n        \\n        ans[0] = celsius + 273.15;\\n        ans[1] = celsius * 1.8 + 32;\\n        \\n        return ans;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2837275,
                "title": "c-basic-solution",
                "content": "Create a vector of double and calculus directly in the vector, then return the vector\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> res(2);\\n        \\n        res[0] = celsius + 273.15;\\n        res[1] = celsius * 1.80 + 32.00;\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> res(2);\\n        \\n        res[0] = celsius + 273.15;\\n        res[1] = celsius * 1.80 + 32.00;\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2828107,
                "title": "100-faster-1line-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15, celsius * 1.80 + 32.00};\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius + 273.15, celsius * 1.80 + 32.00};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2824466,
                "title": "one-line-solution-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, celsius*1.80 + 32.00 };\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return { celsius + 273.15, celsius*1.80 + 32.00 };\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2819475,
                "title": "easiest-solution-c-plus-plus-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double a = celsius + 273.15;\\n        double b = celsius*1.80 + 32.00;\\n        ans.push_back(a);\\n        ans.push_back(b);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double a = celsius + 273.15;\\n        double b = celsius*1.80 + 32.00;\\n        ans.push_back(a);\\n        ans.push_back(b);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2818532,
                "title": "java-o-1-solution-by-formula-implementation",
                "content": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double temperature[] = new double[2];\\n        temperature[0] = celsius + 273.15;\\n        temperature[1] = celsius * 1.80 + 32.00;\\n        return temperature;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double temperature[] = new double[2];\\n        temperature[0] = celsius + 273.15;\\n        temperature[1] = celsius * 1.80 + 32.00;\\n        return temperature;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2817335,
                "title": "c-runtime-0-ms-100-faster-simple-solution",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>ans;\\n        ans.push_back(celsius+273.15);\\n        ans.push_back(celsius*1.80+32.00);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>ans;\\n        ans.push_back(celsius+273.15);\\n        ans.push_back(celsius*1.80+32.00);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2815133,
                "title": "js-use-tofixed-for-decimals",
                "content": "# Approach\\n`toFixed()` to handle decimals in JS.\\n\\n\\n\\n# Code\\n```\\n/**\\n * @param {number} celsius\\n * @return {number[]}\\n */\\nvar convertTemperature = function(celsius) {\\n    const k = celsius + 273.15;\\n    const f = celsius * 1.8 + 32;\\n    return [k.toFixed(5), f.toFixed (5)];\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} celsius\\n * @return {number[]}\\n */\\nvar convertTemperature = function(celsius) {\\n    const k = celsius + 273.15;\\n    const f = celsius * 1.8 + 32;\\n    return [k.toFixed(5), f.toFixed (5)];\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2813779,
                "title": "c-o-1-easy-explanation-2-methods",
                "content": "**CODE**:\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n\\n        return {celsius + 273.15,celsius * 1.80 + 32.00};  // we have used curly brackets\\n                                                           //because we had to return vector type\\n        \\n        // 2nd METHOD\\n        // vector<double> ans;\\n        // double kelvin = (celsius + 273.15) * 100000 + 0.5;\\n        // double fahrenheit = (celsius * 1.80 + 32.00) * 100000 + 0.5;\\n        // double v1, v2;\\n        // v1 = kelvin / 100000;\\n        // v2 = fahrenheit / 100000;\\n        // ans.push_back(v1);\\n        // ans.push_back(v2);\\n        // return ans;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n\\n        return {celsius + 273.15,celsius * 1.80 + 32.00};  // we have used curly brackets\\n                                                           //because we had to return vector type\\n        \\n        // 2nd METHOD\\n        // vector<double> ans;\\n        // double kelvin = (celsius + 273.15) * 100000 + 0.5;\\n        // double fahrenheit = (celsius * 1.80 + 32.00) * 100000 + 0.5;\\n        // double v1, v2;\\n        // v1 = kelvin / 100000;\\n        // v2 = fahrenheit / 100000;\\n        // ans.push_back(v1);\\n        // ans.push_back(v2);\\n        // return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2811485,
                "title": "java-most-easiest-explanation-easy-to-understand",
                "content": "**Easy to Understand \\n1 . Convert Celsius into Kelvin and Fahrenheit using the given equations.\\n2 . Store those values in an array name \\'ans\\'.\\n3. return ans.**\\n\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kelvin = celsius + 273.15;\\n        double fahrenheit = celsius * 1.80 + 32.00;\\n        double ans[] = {kelvin , fahrenheit};\\n        return ans;\\n    }\\n}\\n```\\n**UPVOTE IF YOU UNDERSTOOD THE ABOVE QUESTION.\\nHAVE A GREAT DAY.**",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double kelvin = celsius + 273.15;\\n        double fahrenheit = celsius * 1.80 + 32.00;\\n        double ans[] = {kelvin , fahrenheit};\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2811227,
                "title": "c-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double kelvin= celsius+273.15;\\n        double far=(celsius*1.80)+32.00;\\n        ans.push_back(kelvin);\\n        ans.push_back(far);\\n        return ans; \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n        double kelvin= celsius+273.15;\\n        double far=(celsius*1.80)+32.00;\\n        ans.push_back(kelvin);\\n        ans.push_back(far);\\n        return ans; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809955,
                "title": "python3",
                "content": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15,(celsius * 1.80) + 32.00]\\n```",
                "solutionTags": [
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15,(celsius * 1.80) + 32.00]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809907,
                "title": "java-i-am-really-surprised",
                "content": "### **Please Upvote** :D\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double f = celsius * 1.80 + 32.00;\\n        double k = celsius + 273.15;\\n        return new double[]{k, f};\\n    }\\n}\\n\\n// TC: O(1), SC: O(1)\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double f = celsius * 1.80 + 32.00;\\n        double k = celsius + 273.15;\\n        return new double[]{k, f};\\n    }\\n}\\n\\n// TC: O(1), SC: O(1)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809530,
                "title": "easily-understandable-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n       vector<double>ans;\\n        double kelvin=celsius+273.15;\\n        double far=celsius*1.80+32.00;\\n        ans.push_back(kelvin);\\n        ans.push_back(far);\\n        return ans;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n       vector<double>ans;\\n        double kelvin=celsius+273.15;\\n        double far=celsius*1.80+32.00;\\n        ans.push_back(kelvin);\\n        ans.push_back(far);\\n        return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809365,
                "title": "c-cpp-100-fast-one-line",
                "content": "\\n# Complexity\\n- Time complexity:O (1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O (1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius+273.15,celsius*1.80+32.00};\\n    }\\n};\\n```\\n**Upvote If You Finds This Helpful!**",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return {celsius+273.15,celsius*1.80+32.00};\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809284,
                "title": "easy-4-line-code",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>result(2);\\n        result[0]=celsius+273.15;\\n        result[1]=celsius*1.80 + 32.00;\\n        return result;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>result(2);\\n        result[0]=celsius+273.15;\\n        result[1]=celsius*1.80 + 32.00;\\n        return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2809125,
                "title": "easy-solution-in-java-and-faster-than-100",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe program takes a celsius value and converts it to fahrenheit and kelvin.\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double arr[] = new double[2];\\n        arr[1] = (celsius * 9.0/5.0) + 32.0;\\n        arr[0] = celsius + 273.15;\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double arr[] = new double[2];\\n        arr[1] = (celsius * 9.0/5.0) + 32.0;\\n        arr[0] = celsius + 273.15;\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808988,
                "title": "python3-formula",
                "content": "\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15, 1.8*celsius+32]\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15, 1.8*celsius+32]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808907,
                "title": "o-1-one-linear",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return{\\ncelsius +  273.15,\\ncelsius* 1.80 + 32.00\\n        };\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        return{\\ncelsius +  273.15,\\ncelsius* 1.80 + 32.00\\n        };\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808848,
                "title": "one-line",
                "content": "```\\nclass Solution {\\ntypedef double ld;\\npublic:\\n    vector<double> convertTemperature(ld celsius) {\\n        return vector<ld>({celsius+ld(273.15), (celsius*ld(1.80))+ld(32.00)});\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\ntypedef double ld;\\npublic:\\n    vector<double> convertTemperature(ld celsius) {\\n        return vector<ld>({celsius+ld(273.15), (celsius*ld(1.80))+ld(32.00)});\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808799,
                "title": "java-solution",
                "content": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[] {celsius + 273.15, celsius * 1.80 + 32.00};\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        return new double[] {celsius + 273.15, celsius * 1.80 + 32.00};\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2808794,
                "title": "python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4096977,
                "title": "0ms-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double k = celsius + 273.15;\\n        double f = celsius * 1.80 + 32.00;\\n\\n        vector<double> ans;\\n        ans.push_back(k);\\n        ans.push_back(f);\\n\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double k = celsius + 273.15;\\n        double f = celsius * 1.80 + 32.00;\\n\\n        vector<double> ans;\\n        ans.push_back(k);\\n        ans.push_back(f);\\n\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4095262,
                "title": "c-solution-beats-100",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans(2);\\n        ans[0] = celsius + 273.15;\\n        ans[1] = celsius*1.80 + 32.00;\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans(2);\\n        ans[0] = celsius + 273.15;\\n        ans[1] = celsius*1.80 + 32.00;\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4095257,
                "title": "4-lines-of-code-easy-to-understand",
                "content": "Upvote if this helps.\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> res;\\n        res.push_back((celsius + 273.15));\\n        res.push_back((celsius * 1.80 + 32.00));\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> res;\\n        res.push_back((celsius + 273.15));\\n        res.push_back((celsius * 1.80 + 32.00));\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4093782,
                "title": "very-easy-c-solution-for-btech-students-ezybits",
                "content": "# **UPVOTE++;**\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>v;\\n        double k=celsius+273.15;\\n        double f=celsius*(1.80)+32.00;\\n        v.push_back(k);\\n        v.push_back(f);\\n        return v;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double>v;\\n        double k=celsius+273.15;\\n        double f=celsius*(1.80)+32.00;\\n        v.push_back(k);\\n        v.push_back(f);\\n        return v;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4092816,
                "title": "easy-solution-o-1-time-complexity",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n\\n        ans.push_back(celsius + 273.15);\\n        ans.push_back(celsius * 1.80 + 32.00);\\n\\n        return ans;\\n\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        vector<double> ans;\\n\\n        ans.push_back(celsius + 273.15);\\n        ans.push_back(celsius * 1.80 + 32.00);\\n\\n        return ans;\\n\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4092670,
                "title": "c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double k = celsius + 273.15;\\n        double f = celsius*1.80 + 32;\\n        vector<double> ans;\\n            ans.push_back(k);\\n            ans.push_back(f);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<double> convertTemperature(double celsius) {\\n        double k = celsius + 273.15;\\n        double f = celsius*1.80 + 32;\\n        vector<double> ans;\\n            ans.push_back(k);\\n            ans.push_back(f);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4092610,
                "title": "solution-on-python",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        kelvin = celsius + 273.15\\n        fahrenheit = celsius*1.80 + 32.00\\n        ans =[kelvin, fahrenheit]\\n        return ans\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        kelvin = celsius + 273.15\\n        fahrenheit = celsius*1.80 + 32.00\\n        ans =[kelvin, fahrenheit]\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4091282,
                "title": "97-in-both-space-and-time-python-one-liner-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return[celsius + 273.15, celsius * 1.80 + 32.00]\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return[celsius + 273.15, celsius * 1.80 + 32.00]\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4089221,
                "title": "most-simple-solution-beats-100-00-of-users-with-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe code aims to convert a temperature value from Celsius to both Kelvin and Fahrenheit. It does this by applying the relevant conversion formulas to the input Celsius temperature. The results are stored in an array and returned.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Declare a method `convertTemperature` that takes a single argument, `celsius`, which is the temperature in Celsius that you want to convert.\\n2. Inside the method, create a double array `arr` of size 2 to store the converted temperatures.\\n3. Calculate the temperature in Kelvin using the formula `kelvin = celsius + 273.15`.\\n4. Calculate the temperature in Fahrenheit using the formula `Fahrenheit = celsius * 1.80 + 32.00`.\\n5. Store the calculated Kelvin temperature in `arr[0]` and the calculated Fahrenheit temperature in `arr[1]`.\\n6. Finally, return the `arr` array, which now contains the converted temperatures.\\n\\n# Code\\n```\\nimport java.util.*;\\n\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double arr[] = new double[2];\\n        \\n        double kelvin = celsius + 273.15;\\n        double Fahrenheit = celsius * 1.80 + 32.00;\\n\\n        arr[0] = kelvin;\\n        arr[1] = Fahrenheit;\\n\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nimport java.util.*;\\n\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double arr[] = new double[2];\\n        \\n        double kelvin = celsius + 273.15;\\n        double Fahrenheit = celsius * 1.80 + 32.00;\\n\\n        arr[0] = kelvin;\\n        arr[1] = Fahrenheit;\\n\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4087860,
                "title": "beginner-solution-takes-up-little-memory-effecient",
                "content": "# Code\\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        return [round(celsius+273.15, 5), round(celsius*1.8+32, 5)]\\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        return [round(celsius+273.15, 5), round(celsius*1.8+32, 5)]\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4085864,
                "title": "o-1-time-and-space-complexity",
                "content": "# Intuition\\nSimple math. Addition and multiplication are constant time operations.\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nDirect Conversion\\n<!-- Describe your approach to solving the problem. -->\\n\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        \"\"\"\\n        :type celsius: float\\n        :rtype: List[float]\\n        \"\"\"\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        \"\"\"\\n        :type celsius: float\\n        :rtype: List[float]\\n        \"\"\"\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4084189,
                "title": "python-onliner",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->Just using convertion of units\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15,celsius*1.80+32]\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius+273.15,celsius*1.80+32]\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4082254,
                "title": "double-array",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n100% faster\\n\\n- Space complexity:89% better\\n<!-- Ad your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] ans={celsius+273.15,celsius*1.80+32.00};\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] ans={celsius+273.15,celsius*1.80+32.00};\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4080582,
                "title": "temperature",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n\\n    double* ret=(double*)malloc(2*sizeof(double));\\n    ret[0]=celsius+273.15;\\n    ret[1]=(celsius*1.80)+32;\\n\\n    *returnSize=2;\\n    return ret;\\n\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n\\n    double* ret=(double*)malloc(2*sizeof(double));\\n    ret[0]=celsius+273.15;\\n    ret[1]=(celsius*1.80)+32;\\n\\n    *returnSize=2;\\n    return ret;\\n\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4080428,
                "title": "easy-to-understand-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] myArray = new double[2];\\n        double k = celsius+273.15;\\n        double f = celsius * 1.80 + 32.00;\\n        myArray[0] = k;\\n        myArray[1] = f;\\n        return myArray;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] myArray = new double[2];\\n        double k = celsius+273.15;\\n        double f = celsius * 1.80 + 32.00;\\n        myArray[0] = k;\\n        myArray[1] = f;\\n        return myArray;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4079682,
                "title": "very-easy-solution-of-convert-the-temperature",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        self.celsius = celsius\\n        kelvin = celsius + 273.15\\n        fahrenheit = celsius * 1.80+32.00\\n        result = [kelvin, fahrenheit]\\n        return result\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        self.celsius = celsius\\n        kelvin = celsius + 273.15\\n        fahrenheit = celsius * 1.80+32.00\\n        result = [kelvin, fahrenheit]\\n        return result\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4078390,
                "title": "python-1-line-easy-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4071879,
                "title": "c-terrible-solution-don-t-use-it-fr",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public double[] ConvertTemperature(double celsius) {\\n        double k = celsius + 273.15;\\n        double f = celsius * 1.80 + 32.00;\\n        double [] temp = new double [2];\\n        temp.SetValue(value: k, index: 0);\\n        temp.SetValue(value: f, index: 1);\\n        return temp;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public double[] ConvertTemperature(double celsius) {\\n        double k = celsius + 273.15;\\n        double f = celsius * 1.80 + 32.00;\\n        double [] temp = new double [2];\\n        temp.SetValue(value: k, index: 0);\\n        temp.SetValue(value: f, index: 1);\\n        return temp;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4070474,
                "title": "solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, Celsius: float) -> List[float]:\\n        return [Celsius + 273.15, (Celsius * 1.80) + 32.00]\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, Celsius: float) -> List[float]:\\n        return [Celsius + 273.15, (Celsius * 1.80) + 32.00]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4069290,
                "title": "php-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n\\n    /**\\n     * @param Float $celsius\\n     * @return Float[]\\n     */\\n    function convertTemperature($celsius) {\\n        $kelvin = $celsius + 273.15;\\n        $fahrenheit = $celsius * 1.80 + 32.00;\\n        return array($kelvin,$fahrenheit);\\n    }\\n}\\n```",
                "solutionTags": [
                    "PHP",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n\\n    /**\\n     * @param Float $celsius\\n     * @return Float[]\\n     */\\n    function convertTemperature($celsius) {\\n        $kelvin = $celsius + 273.15;\\n        $fahrenheit = $celsius * 1.80 + 32.00;\\n        return array($kelvin,$fahrenheit);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4069246,
                "title": "convert-from-celsius-into-kelvin-and-fahrenheit",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        def __init__(self,celsius):\\n            self.celsius\\n        list =[]\\n        kelvin = celsius + 273.15\\n        fah = celsius * 1.80 + 32.00\\n        return[kelvin,fah]\\n\\n\\n\\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def convertTemperature(self, celsius):\\n        def __init__(self,celsius):\\n            self.celsius\\n        list =[]\\n        kelvin = celsius + 273.15\\n        fah = celsius * 1.80 + 32.00\\n        return[kelvin,fah]\\n\\n\\n\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4068853,
                "title": "my-python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, c: float) -> List[float]:\\n        honey=[]\\n        honey.append(c+273.15)\\n        honey.append(c*1.80+32.00)\\n        return honey\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, c: float) -> List[float]:\\n        honey=[]\\n        honey.append(c+273.15)\\n        honey.append(c*1.80+32.00)\\n        return honey\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4068351,
                "title": "python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def convertTemperature(self, celsius: float) -> List[float]:\\n        return [celsius + 273.15, celsius * 1.80 + 32.00]\\n        \\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1682394,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1732175,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1787040,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1796886,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1793558,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1687879,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1842742,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1807352,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1720187,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1734158,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1682394,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1732175,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1787040,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1796886,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1793558,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1687879,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1842742,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1807352,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1720187,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 1734158,
                "content": [
                    {
                        "username": "florin5",
                        "content": "# New Difficulty Level\\n\\nThere are hard problems, there are medium problems, there are easy problems, and there is this problem that is soo easy it plays with your mind :\\n- am I missing something\\n- is that simple\\n- It cannot be \\n- what\\'s the catch\\n- there is any hidden edge case that I\\'m missing \\nIn a word this problem redefines what really easy mean,"
                    },
                    {
                        "username": "Schnedarb",
                        "content": "A beginner level wouldn\\'t be a bad idea.  "
                    },
                    {
                        "username": "godshiva",
                        "content": "I struggled with this one too, but I eventually came up with a solution. Check it out in the solutions area and give a thumbs up if it made you smile. It\\'s titled: Python3 - Modified Stack, List Comprehension, SHA256"
                    },
                    {
                        "username": "Lettuce16",
                        "content": "If this is easy, then I think all easy ones needs to be reevaluated :)"
                    },
                    {
                        "username": "VasilisX",
                        "content": "My thoughts exactly! I was sure that there was some hidden trap in it :)"
                    },
                    {
                        "username": "sudesh_pawar",
                        "content": "This has to be the easiest problem on Leetcode. It is so easy that it plays with your mind that you are missing something."
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "Tough competition for the \"Hello World\" coders lmao"
                    },
                    {
                        "username": "user6146v",
                        "content": "LeetCode should remove this question way to easy."
                    },
                    {
                        "username": "user6146v",
                        "content": "[@godshiva](/godshiva) Yaa that would be better."
                    },
                    {
                        "username": "godshiva",
                        "content": "Maybe they could add like a \\'tutorial\\' level difficulty."
                    },
                    {
                        "username": "UMCEKO",
                        "content": "/**\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\ndouble* convertTemperature(double celsius, int* returnSize){\\n    float ans[2];\\n    ans[0]=(float)celsius*1.80+32.00;\\n    ans[1]=(float)celsius+273.15;\\n    return ans;\\n}\\n\\n\\n\\nThis gives me the output= []\\nIm gonna go nuts what am i missing here"
                    },
                    {
                        "username": "Rennede",
                        "content": "im late but you need to provide a value for returnSize"
                    },
                    {
                        "username": "sai064",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65. \\nWhy does the result display it as 309.65000?"
                    },
                    {
                        "username": "vinay298",
                        "content": "because they asked to display upto 10^-5"
                    },
                    {
                        "username": "0x0E2FDB6F744",
                        "content": "Type of vector double"
                    },
                    {
                        "username": "sai064",
                        "content": "[@godshiva](/godshiva) Thanks for answering.\\nI have one more query. In the question they mentioned \"Answers within 10^-5 of the actual answer will be accepted.\"\\nif 309.65000 is same as 309.65, then the expected result [309.65000] and our result [309.65] matches?\\nBut when I execute the program, the output = [309.65000, 97.70000] and expected = [309.65000, 97.70000].\\nshouldn\\'t output = [309.65, 97.7] be the case?\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "Where is it displaying?\\nAnyway\\n309.65000 is the same as 309.65\\n"
                    },
                    {
                        "username": "rajaryan5614",
                        "content": "why it is showing 395.26000 instead of 395.26 ?"
                    },
                    {
                        "username": "NamanSaini18",
                        "content": "MOST EASIEST QUESTION EVER ON LEETCODE"
                    },
                    {
                        "username": "vk970097",
                        "content": "Simple Solution\\n`class Solution {\\n    public double[] convertTemperature(double celsius) {\\n        double[] arr = new double[2];\\n        arr[0] = celsius + 273.15;\\n        arr[1] = celsius * 1.80 + 32.00;\\n        return arr;\\n    }\\n}`"
                    },
                    {
                        "username": "carefree_ladka",
                        "content": "you posted the entire solution. You call it  a hint? I dont think people\\'ll need a hint for this one haha"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "easy c++ .....\\nvector<double> convertTemperature(double celsius) {\\n        vector<double> f;\\n        f.push_back(celsius + 273.15);\\n        f.push_back(celsius*1.80 + 32.00);\\n        return f;\\n    }"
                    }
                ]
            },
            {
                "id": 2029183,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1971078,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1949303,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1925656,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1890395,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1869516,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1786324,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1780813,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1777139,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            },
            {
                "id": 1762122,
                "content": [
                    {
                        "username": "codingbynight",
                        "content": "Although my solution is correct, I get a runtime error. Why do I need to use a class?"
                    },
                    {
                        "username": "Akashalf",
                        "content": "Hint!!! - Use 273.15000 instead of 273.15.\\nI hope, rest you can figure it out by yourself."
                    },
                    {
                        "username": "SoNiceCoder",
                        "content": "Those who are wondering about this problem, welcome to discussion \\uD83D\\uDE05"
                    },
                    {
                        "username": "rajshish333",
                        "content": "i thought it would be hard !"
                    },
                    {
                        "username": "niron",
                        "content": "Don\\'t think too much. First try to solve with a pen and paper. Then try to code. Upvote to support me bro."
                    },
                    {
                        "username": "niron",
                        "content": "When celsius = 36.50\\nthen kelvin = 36.50 + 273.15 = 309.65.\\nWhy does the result display it as 309.65000?\\n\\nWhy in the ouput it is showing 5 decimal places?"
                    },
                    {
                        "username": "anilbharadia",
                        "content": "\"Hint\" is also available for this question. Amazing."
                    },
                    {
                        "username": "contactaditya832126",
                        "content": "Isn\\'t it the easiest problem on leetcode? \\n"
                    },
                    {
                        "username": "mistergaryc",
                        "content": "I\\'m braindead and a wannable coder, but this was really easy even for me lol. There\\'s no way an interviewer would ask this. "
                    },
                    {
                        "username": "jwalkertrained",
                        "content": "What a joke of a question.."
                    },
                    {
                        "username": "Akash_Naik",
                        "content": "Seriously?"
                    }
                ]
            }
        ]
    }
]