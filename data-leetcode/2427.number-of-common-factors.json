[
    {
        "title": "Number of Common Factors",
        "question_content": "Given two positive integers a and b, return the number of common factors of a and b.\nAn integer x is a common factor of a and b if x divides both a and b.\n&nbsp;\nExample 1:\n\nInput: a = 12, b = 6\nOutput: 4\nExplanation: The common factors of 12 and 6 are 1, 2, 3, 6.\n\nExample 2:\n\nInput: a = 25, b = 30\nOutput: 2\nExplanation: The common factors of 25 and 30 are 1, 5.\n\n&nbsp;\nConstraints:\n\n\t1 <= a, b <= 1000",
        "solutions": [
            {
                "id": 2648945,
                "title": "brute-force",
                "content": "**C++**\\n```cpp\\nint commonFactors(int a, int b) {\\n    int res = 1, hi = gcd(a, b);\\n    for (int n = 2; n <= hi; ++n)\\n        res += a % n == 0 && b % n == 0;\\n    return res;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\nint commonFactors(int a, int b) {\\n    int res = 1, hi = gcd(a, b);\\n    for (int n = 2; n <= hi; ++n)\\n        res += a % n == 0 && b % n == 0;\\n    return res;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2651488,
                "title": "python3-simple-one-liner",
                "content": "```python\\ndef commonFactors(self, a: int, b: int) -> int:\\n        return sum(not(a%i or b%i) for i in range(1,min(a,b)+1))\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```python\\ndef commonFactors(self, a: int, b: int) -> int:\\n        return sum(not(a%i or b%i) for i in range(1,min(a,b)+1))\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2649159,
                "title": "c-python3-javascript-solution-with-comments-and-dry-run",
                "content": "<iframe src=\"https://leetcode.com/playground/KAVSMr4b/shared\" frameBorder=\"0\" width=\"550\" height=\"620\"></iframe>\\n\\n\\uD83C\\uDF1F**If you find it helpful, please consider giving an upvote\\uD83D\\uDD3C**\\n\\uD83C\\uDF1FIf you have any confusion, feel free to comment below.",
                "solutionTags": [
                    "Python3",
                    "C",
                    "JavaScript"
                ],
                "code": "<iframe src=\"https://leetcode.com/playground/KAVSMr4b/shared\" frameBorder=\"0\" width=\"550\" height=\"620\"></iframe>\\n\\n\\uD83C\\uDF1F**If you find it helpful, please consider giving an upvote\\uD83D\\uDD3C**\\n\\uD83C\\uDF1FIf you have any confusion, feel free to comment below.",
                "codeTag": "Unknown"
            },
            {
                "id": 2648877,
                "title": "c-o-sqrt-n",
                "content": "**Connect with me on LinkedIn**: https://www.linkedin.com/in/abhay5349singh/\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    set<int> getAllfactors(int n){\\n        set<int> st;\\n        for(int i=1;i*i<=n;i++){\\n            if(n%i == 0){\\n                st.insert(i);\\n                st.insert(n/i);\\n            }\\n        }\\n        return st;\\n    }\\n    \\n    int commonFactors(int a, int b) {\\n        set<int> s1=getAllfactors(a), s2=getAllfactors(b);\\n        \\n        set<int> :: iterator it;\\n        int c=0;\\n        for(it=s1.begin();it!=s1.end();it++){\\n            int val=*it;\\n            if(s2.find(val)!=s2.end()) c++;\\n        }\\n        return c;\\n    }\\n};\\n```\\n\\n**Using Set Intersection**\\nFollowing idea of @kamaltdinov\\n```\\nclass Solution {\\npublic:\\n    \\n    set<int> getAllfactors(int n){\\n        set<int> st;\\n        for(int i=1;i*i<=n;i++){\\n            if(n%i == 0){\\n                st.insert(i);\\n                st.insert(n/i);\\n            }\\n        }\\n        return st;\\n    }\\n    \\n    int commonFactors(int a, int b) {\\n        set<int> s1=getAllfactors(a), s2=getAllfactors(b), ans;\\n  \\n        set_intersection(s1.begin(), s1.end(), s2.begin(), s2.end(), inserter(ans, ans.begin()));\\n        \\n        return ans.size();\\n    }\\n};\\n```\\n\\n**Do Upvote If It Helps**",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    \\n    set<int> getAllfactors(int n){\\n        set<int> st;\\n        for(int i=1;i*i<=n;i++){\\n            if(n%i == 0){\\n                st.insert(i);\\n                st.insert(n/i);\\n            }\\n        }\\n        return st;\\n    }\\n    \\n    int commonFactors(int a, int b) {\\n        set<int> s1=getAllfactors(a), s2=getAllfactors(b);\\n        \\n        set<int> :: iterator it;\\n        int c=0;\\n        for(it=s1.begin();it!=s1.end();it++){\\n            int val=*it;\\n            if(s2.find(val)!=s2.end()) c++;\\n        }\\n        return c;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    \\n    set<int> getAllfactors(int n){\\n        set<int> st;\\n        for(int i=1;i*i<=n;i++){\\n            if(n%i == 0){\\n                st.insert(i);\\n                st.insert(n/i);\\n            }\\n        }\\n        return st;\\n    }\\n    \\n    int commonFactors(int a, int b) {\\n        set<int> s1=getAllfactors(a), s2=getAllfactors(b), ans;\\n  \\n        set_intersection(s1.begin(), s1.end(), s2.begin(), s2.end(), inserter(ans, ans.begin()));\\n        \\n        return ans.size();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2649592,
                "title": "java-1ms-solution-using-gcd",
                "content": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int n = gcd(a, b);\\n \\n        // Count divisors of n.\\n        int result = 0;\\n        for (int i = 1; i <= n; i++) {\\n            // if \\'i\\' is factor of n\\n            if (n % i == 0) {\\n                result++;\\n            }\\n        }\\n        return result;\\n    }\\n    static int gcd(int a, int b){\\n        if (a == 0)\\n            return b;\\n \\n        return gcd(b % a, a);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int n = gcd(a, b);\\n \\n        // Count divisors of n.\\n        int result = 0;\\n        for (int i = 1; i <= n; i++) {\\n            // if \\'i\\' is factor of n\\n            if (n % i == 0) {\\n                result++;\\n            }\\n        }\\n        return result;\\n    }\\n    static int gcd(int a, int b){\\n        if (a == 0)\\n            return b;\\n \\n        return gcd(b % a, a);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2670532,
                "title": "beginner-friendly-java-javascript-python-solution",
                "content": "**Java**\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0, n = 0;\\n        while(n++ <= Math.min(a,b)){\\n            if(a % n == 0 && b % n == 0)    count++;\\n        }\\n        return count;\\n    }\\n}\\n```\\n**JavaScript**\\n```\\nvar commonFactors = function(a, b) {\\n    let count = n = 0\\n    while(n++ <= Math.min(a,b)){\\n        if(a % n == 0 && b % n == 0)    count++\\n    }\\n    return count\\n};\\n```\\n**Python**\\n```\\nclass Solution(object):\\n    def commonFactors(self, a, b):\\n        count, n = 0, 1\\n        while n <= min(a,b):\\n            if a % n == 0 and b % n == 0:\\n                count += 1\\n            n += 1\\n        return count\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "JavaScript"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0, n = 0;\\n        while(n++ <= Math.min(a,b)){\\n            if(a % n == 0 && b % n == 0)    count++;\\n        }\\n        return count;\\n    }\\n}\\n```\n```\\nvar commonFactors = function(a, b) {\\n    let count = n = 0\\n    while(n++ <= Math.min(a,b)){\\n        if(a % n == 0 && b % n == 0)    count++\\n    }\\n    return count\\n};\\n```\n```\\nclass Solution(object):\\n    def commonFactors(self, a, b):\\n        count, n = 0, 1\\n        while n <= min(a,b):\\n            if a % n == 0 and b % n == 0:\\n                count += 1\\n            n += 1\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2916653,
                "title": "python-easy-solution",
                "content": "\\n# Code\\u2705\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int: # // a = 12, b = 6\\n        count = 0\\n        minn = min(a,b) # minn = 6\\n        if max(a,b) % minn == 0: # // 12 % 6 is 0, so count = 1 now\\n            count +=1\\n        for i in range(1,(minn//2)+1): # range is 1 to (6//2+1) \\n            if a % i == 0 and b % i ==0: # // the condition will be true when i = 1,2,3\\n                count +=1\\n        return count # count = 4\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int: # // a = 12, b = 6\\n        count = 0\\n        minn = min(a,b) # minn = 6\\n        if max(a,b) % minn == 0: # // 12 % 6 is 0, so count = 1 now\\n            count +=1\\n        for i in range(1,(minn//2)+1): # range is 1 to (6//2+1) \\n            if a % i == 0 and b % i ==0: # // the condition will be true when i = 1,2,3\\n                count +=1\\n        return count # count = 4\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2817862,
                "title": "easy-python-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c=0\\n        mi=min(a,b)\\n        for i in range(1,mi+1):\\n            if a%i==0 and b%i==0:\\n                c+=1\\n        return c\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c=0\\n        mi=min(a,b)\\n        for i in range(1,mi+1):\\n            if a%i==0 and b%i==0:\\n                c+=1\\n        return c\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2649739,
                "title": "factors-1-n",
                "content": "# Intuition\\nfactors of a numbers are int the range `[1, n]` inclusive.\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nwe need to run a loop from `1` to `min(a, b)` and count all i\\'s where `i` completely divides both `a` and `b`.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: *`O(min(a, b))`*\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: *`O(1)`*\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cf = 0;\\n        int m = min(a, b);\\n        for(int i = 1; i <= m; i++) {\\n            if(a % i == 0 && b % i == 0)\\n                cf++;\\n        }\\n        return cf;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cf = 0;\\n        int m = min(a, b);\\n        for(int i = 1; i <= m; i++) {\\n            if(a % i == 0 && b % i == 0)\\n                cf++;\\n        }\\n        return cf;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2648812,
                "title": "c-easy-peasy",
                "content": "```\\nclass Solution \\n{\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int cnt=0;\\n        int n = min(a, b);\\n        \\n        for(int i=1; i<=n; i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n                cnt++;\\n        }\\n        return cnt;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int cnt=0;\\n        int n = min(a, b);\\n        \\n        for(int i=1; i<=n; i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n                cnt++;\\n        }\\n        return cnt;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2661394,
                "title": "python-c-java-beginner-level-simple-short-solution-easytounderstand",
                "content": "***Please upvote to motivate me in my quest of documenting all leetcode solutions. HAPPY CODING:)\\nAny suggestions and improvements are always welcome*.**\\n___________________\\n_________________\\n***Q2427. Number of Common Factors***\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\u2705 **Python  Code** :\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c=0\\n        for i in range(1,min(a,b)+1):\\n            if a%i==0 and b%i==0:\\n                c+=1\\n        return c\\n```\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\n\\u2705 **Java Code** :\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int c=0,i=1;\\n        while(i<=Math.min(a,b))\\n        {\\n            if(a%i==0 && b%i==0)\\n                c++;\\n            i++;\\n        }\\n        return c;\\n    }\\n}\\n```\\n\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\u2705 **C++  Code** :\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int c = 0,i=1;\\n        while(i<=min(a,b))\\n        {\\n            if(a%i==0 && b%i==0)\\n                c++;\\n            i++;\\n        }\\n        return c;\\n    }\\n};\\n```\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\nIf you like the solution, please upvote \\uD83D\\uDD3C\\nFor any questions, or discussions, comment below. \\uD83D\\uDC47\\uFE0F\\n",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c=0\\n        for i in range(1,min(a,b)+1):\\n            if a%i==0 and b%i==0:\\n                c+=1\\n        return c\\n```\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int c=0,i=1;\\n        while(i<=Math.min(a,b))\\n        {\\n            if(a%i==0 && b%i==0)\\n                c++;\\n            i++;\\n        }\\n        return c;\\n    }\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int c = 0,i=1;\\n        while(i<=min(a,b))\\n        {\\n            if(a%i==0 && b%i==0)\\n                c++;\\n            i++;\\n        }\\n        return c;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2655530,
                "title": "python-3-2-versions-using-gcd-t-m-100-100",
                "content": "Two versions\\n\\n```\\nclass Solution:     # Pretty much the same plan as everyone else\\'s except we use the GCD\\n                    # instead of the lesser of a and b. We also use a break at G==n.\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        G, ans = gcd(a,b), 0\\n\\n        for n in range(1,1000):\\n            if not G%n:\\n                ans+= 1\\n   \\n                if G == n: return ans\\n        return ans+1\\n```\\n\\n[https://leetcode.com/submissions/detail/813822527/\\n](http://)\\n```\\nclass Solution:     # In this version, we determine the prime factors of the GCD. Because \\n                    # 37*37 > 1000, all but at most one prime factor are <= 31. Also, because\\n                    # 2^10 >1000, there can be no more than nine prime factors (including \\n                    # multplicity). \\n                    # \\n                    # Once we determine the multiplicity of each prime, the answer is the product \\n                    # of the elements of [(m(i)+1) where m(i) is the multiplicity of prime[i]]\\n                    #  \\n                    # Example 1: Suppose the GCD of a and b is 96. The prime factors are 2 (mult 3) and \\n                    #            3 (mult 2). All the factors of 96 are of the form (2^p)*(3^q) where\\n                    #            0<=p<=3 and 0<=q<=2, which implies the answer is (3+1)*(2+1) = 12.\\n                    #\\n                    # Example 2: Suppose the GCD of a and b is 885. The prime factors <= 31 are \\n                    #            3 (mult 1) and 5 (mult 1). Because 885//3//5 = 57, the factors of 885\\n                    #            are of the form (3^p)*(5^q)*(57^r) where 0<= p,q,r <= 1, which implies\\n                    #            the answer is (1+1)*(1+1)*(1+1) = 8.\\n\\n    def commonFactors(self, a: int, b: int) -> int:\\n\\n        primes = [2,3,5,7,11,13,17,19,23,29,31]\\n        i, G, ans = 0, gcd(a,b), [1]*12\\n\\n        while i < 11 and G > 1:\\n            while not G%primes[i]:\\n                ans[i]+= 1\\n                G//= primes[i]\\n            i+= 1    \\n\\n        ans[11]+= (G != 1)\\n\\n        return reduce(mul, ans) \\n```\\n[https://leetcode.com/submissions/detail/814195999/](http://)",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:     # Pretty much the same plan as everyone else\\'s except we use the GCD\\n                    # instead of the lesser of a and b. We also use a break at G==n.\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        G, ans = gcd(a,b), 0\\n\\n        for n in range(1,1000):\\n            if not G%n:\\n                ans+= 1\\n   \\n                if G == n: return ans\\n        return ans+1\\n```\n```\\nclass Solution:     # In this version, we determine the prime factors of the GCD. Because \\n                    # 37*37 > 1000, all but at most one prime factor are <= 31. Also, because\\n                    # 2^10 >1000, there can be no more than nine prime factors (including \\n                    # multplicity). \\n                    # \\n                    # Once we determine the multiplicity of each prime, the answer is the product \\n                    # of the elements of [(m(i)+1) where m(i) is the multiplicity of prime[i]]\\n                    #  \\n                    # Example 1: Suppose the GCD of a and b is 96. The prime factors are 2 (mult 3) and \\n                    #            3 (mult 2). All the factors of 96 are of the form (2^p)*(3^q) where\\n                    #            0<=p<=3 and 0<=q<=2, which implies the answer is (3+1)*(2+1) = 12.\\n                    #\\n                    # Example 2: Suppose the GCD of a and b is 885. The prime factors <= 31 are \\n                    #            3 (mult 1) and 5 (mult 1). Because 885//3//5 = 57, the factors of 885\\n                    #            are of the form (3^p)*(5^q)*(57^r) where 0<= p,q,r <= 1, which implies\\n                    #            the answer is (1+1)*(1+1)*(1+1) = 8.\\n\\n    def commonFactors(self, a: int, b: int) -> int:\\n\\n        primes = [2,3,5,7,11,13,17,19,23,29,31]\\n        i, G, ans = 0, gcd(a,b), [1]*12\\n\\n        while i < 11 and G > 1:\\n            while not G%primes[i]:\\n                ans[i]+= 1\\n                G//= primes[i]\\n            i+= 1    \\n\\n        ans[11]+= (G != 1)\\n\\n        return reduce(mul, ans) \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3327264,
                "title": "100-faster-java-solution",
                "content": "\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n        int n = Math.min(a,b);\\n        for(int i = 1; i<n+1;i++){\\n            if(a%i == 0 && b%i == 0) count++;\\n        }\\n        return count;\\n    }\\n}\\n```\\n\\n![478xve.jpg](https://assets.leetcode.com/users/images/1c74e6b4-a88c-450e-879b-2a342efc1727_1679462840.4236047.jpeg)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n        int n = Math.min(a,b);\\n        for(int i = 1; i<n+1;i++){\\n            if(a%i == 0 && b%i == 0) count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2998360,
                "title": "4-lines-of-code-in-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n\\n        int min = a < b ? a: b;\\n        int count = 0;\\n        for(int i = 1; i <= min; i ++) {\\n            if(a % i == 0 && b % i == 0) count ++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n\\n        int min = a < b ? a: b;\\n        int count = 0;\\n        for(int i = 1; i <= min; i ++) {\\n            if(a % i == 0 && b % i == 0) count ++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2683395,
                "title": "python-trash-solution-click-if-you-want-to-lower-your-iq",
                "content": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        count = 0\\n        c, d  = max(a,b), min(a,b)\\n        for x in range(1,c):\\n            if c % x == 0:\\n                if d % x == 0:\\n                    count += 1\\n        if a == b:\\n            count += 1\\n        return count",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        count = 0\\n        c, d  = max(a,b), min(a,b)\\n        for x in range(1,c):\\n            if c % x == 0:\\n                if d % x == 0:\\n                    count += 1\\n        if a == b:\\n            count += 1\\n        return count",
                "codeTag": "Java"
            },
            {
                "id": 2651143,
                "title": "short-javascript-solution-using-a-set-object",
                "content": "Found this solution helpful? Consider showing support by upvoting this post.\\nHave a question? Kindly leave a comment below.\\nThank you and happy hacking!\\n```\\nvar commonFactors = function (a, b) {\\n    let aFactors = new Set()\\n    let count = 0\\n\\n    for (let i = 1; i <= a; i++) {\\n        if (a % i === 0) aFactors.add(i)\\n    }\\n    for (let j = 1; j <= b; j++) {\\n        if (aFactors.has(b / j)) count++\\n    }\\n\\n    return count\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar commonFactors = function (a, b) {\\n    let aFactors = new Set()\\n    let count = 0\\n\\n    for (let i = 1; i <= a; i++) {\\n        if (a % i === 0) aFactors.add(i)\\n    }\\n    for (let j = 1; j <= b; j++) {\\n        if (aFactors.has(b / j)) count++\\n    }\\n\\n    return count\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2649240,
                "title": "python3-math-solution-with-explanation",
                "content": "Since the numbers **a**, **b** are small, we can find all the divisors of each of the numbers, and then calculate the number of intersections.\\n\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        def factors(n):\\n            return set(factor for i in range(1, int(n ** 0.5) + 1) if n % i == 0 \\\\\\n                       for factor in (i, n / i))\\n      \\n        return len(set(factors(a) & factors(b)))\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        def factors(n):\\n            return set(factor for i in range(1, int(n ** 0.5) + 1) if n % i == 0 \\\\\\n                       for factor in (i, n / i))\\n      \\n        return len(set(factors(a) & factors(b)))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3542535,
                "title": "100-java-easy",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count=0;\\n        int min=Math.min(a,b);\\n        for(int i=1;i<=min;i++)\\n        {\\n            if(a%i==0 && b%i==0)count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Enumeration",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count=0;\\n        int min=Math.min(a,b);\\n        for(int i=1;i<=min;i++)\\n        {\\n            if(a%i==0 && b%i==0)count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3322098,
                "title": "python-prime-factorization-and-gcd",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nTo count the number of factors just factor $$GCD(a, b)$$ into primes.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n* $$GCD(a, b)$$ is the product of common prime factors of `a` and `b`. For example, if $$a=2\\\\cdot2\\\\cdot2\\\\cdot3$$ and $$b=2\\\\cdot2\\\\cdot3\\\\cdot3$$, then $$GCD(a, b)=2\\\\cdot2\\\\cdot3$$.\\n* If a natural number is expressed as $$p_{1}^{x_{1}} \\\\cdot p_{2}^{x_{2}} \\\\cdot...\\\\cdot p_{i}^{x_{i}}$$, where $$p_{i}$$ is a prime, then you can count the number of its factors by formula $$(x_{1} + 1) \\\\cdot (x_{2} + 1) \\\\cdot ... \\\\cdot (x_{i} + 1)$$. For example, $$GCD(a, b)=2\\\\cdot2\\\\cdot3 = 2^{2} \\\\cdot 3^{1} \\\\Rightarrow  number \\\\space of \\\\space factors =(2 + 1) \\\\cdot (1 + 1) = 6$$.\\n* This one is **the easiest** prime factorization method.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(\\\\sqrt{N})$$: $$a = b = prime$$ in the worst case\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n$$O(1)$$\\n\\n---\\n* You could find some other extraordinary solutions in my [profile](https://leetcode.com/almostmonday/) on the Solutions tab (I don\\'t post obvious or not interesting solutions at all.)\\n* If this was helpful, please upvote so that others can see this solution too.\\n---\\n\\n# Code\\n```\\nclass Solution(object):\\n    def commonFactors(self, a, b):\\n        while b: a, b = b, a % b\\n        res = 1\\n        div = 2\\n        while a != 1 and div * div <= a:\\n            count = 0\\n            while a % div == 0:\\n                count += 1\\n                a //= div\\n            res *= count + 1\\n            div += 1\\n        \\n        if a != 1: res *= 2\\n        \\n        return res\\n```",
                "solutionTags": [
                    "Python",
                    "Math",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution(object):\\n    def commonFactors(self, a, b):\\n        while b: a, b = b, a % b\\n        res = 1\\n        div = 2\\n        while a != 1 and div * div <= a:\\n            count = 0\\n            while a % div == 0:\\n                count += 1\\n                a //= div\\n            res *= count + 1\\n            div += 1\\n        \\n        if a != 1: res *= 2\\n        \\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3073661,
                "title": "c-solution",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n = min(a, b), ans = 0;\\n        for(int i=1; i <= n; i++) {\\n            if(a % i == 0 and b % i == 0) ans++; \\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n = min(a, b), ans = 0;\\n        for(int i=1; i <= n; i++) {\\n            if(a % i == 0 and b % i == 0) ans++; \\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2948405,
                "title": "easy-python-one-line-solution",
                "content": "# Intuition\\nSince we\\'re using python, we can use the generator to quickly get the elements that can divide both a and b. Finally, just return the length of the list.\\n\\n# Approach\\nWe need to know which is larger between a and b, that is, i goes from 1 to max(a, b), and then check  i that can be divisible by a and b.\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        return len(list(i for i in range(1, max(a, b) + 1) if a % i == 0 and b % i == 0))\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        return len(list(i for i in range(1, max(a, b) + 1) if a % i == 0 and b % i == 0))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2702891,
                "title": "number-of-common-factors",
                "content": "class Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        {\\n        int m = min(a, b);\\n        int ans = 0;\\n        for (int i = 1; i <= m; i++)\\n            if (a % i == 0 && b % i == 0)\\n                ans++;\\n        return ans;\\n    }\\n        \\n    }\\n};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        {\\n        int m = min(a, b);\\n        int ans = 0;\\n        for (int i = 1; i <= m; i++)\\n            if (a % i == 0 && b % i == 0)\\n                ans++;\\n        return ans;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2699116,
                "title": "java-easiest-solution",
                "content": "\\n# Complexity\\n1. Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n      int c = 0;\\n      for(int i = 1; i <= Math.min(a, b); i ++) {\\n          if((a % i == 0) && (b % i == 0))\\n          c ++;\\n      }  \\n      return c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n      int c = 0;\\n      for(int i = 1; i <= Math.min(a, b); i ++) {\\n          if((a % i == 0) && (b % i == 0))\\n          c ++;\\n      }  \\n      return c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2689235,
                "title": "java-straightforward-approach",
                "content": "# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 1;\\n        int greater = a >= b ? a : b;\\n        int smaller = a < b ? a : b;\\n        int div = 2;\\n        while (div <= smaller) {\\n            if (greater % div == 0 && smaller % div == 0) {\\n                count++;\\n            }\\n            div++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 1;\\n        int greater = a >= b ? a : b;\\n        int smaller = a < b ? a : b;\\n        int div = 2;\\n        while (div <= smaller) {\\n            if (greater % div == 0 && smaller % div == 0) {\\n                count++;\\n            }\\n            div++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2662705,
                "title": "easy-solution-in-4-lines-c-java",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n    1)Iterate the for loop till i is less than a and b .\\n    2)Put a if condition which would check that if a and b have same factor by the help of mod operator.\\n    3)Now count the no of times the if condition is true.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n    O(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n    O(1)\\n\\n# Code\\n**Java Solution**\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n       int cnt=0;\\n        for(int i=1;i<=a&&i<=b;i++){\\n            if(a%i==0&&b%i==0)\\n                cnt++;\\n        }\\n        return cnt; \\n    }\\n}\\n```\\n**C++ Solution**\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cnt=0;\\n        for(int i=1;i<=a&&i<=b;i++){\\n            if(a%i==0&&b%i==0)\\n                cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n       int cnt=0;\\n        for(int i=1;i<=a&&i<=b;i++){\\n            if(a%i==0&&b%i==0)\\n                cnt++;\\n        }\\n        return cnt; \\n    }\\n}\\n```\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cnt=0;\\n        for(int i=1;i<=a&&i<=b;i++){\\n            if(a%i==0&&b%i==0)\\n                cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2657673,
                "title": "java-contest-problem",
                "content": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int gcd = getGcd(a,b);\\n        int count=1;\\n        for(int i=2;i<=gcd;i++) if(a%i==0 && b%i==0) count++;\\n        return count;\\n    }\\n    public int getGcd(int a,int b){\\n        if(b==0) return a;\\n        return getGcd(a,a%b);\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public int commonFactors(int a, int b) {\\n        int gcd = getGcd(a,b);\\n        int count=1;\\n        for(int i=2;i<=gcd;i++) if(a%i==0 && b%i==0) count++;\\n        return count;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2651457,
                "title": "python-js-one-liners",
                "content": "**Python**\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        return sum(a % n == 0 and b % n == 0 for n in range(1, min(a, b) + 1))\\n```\\n**Javascript**\\n```\\nconst commonFactors = (a, b) => (\\n    new Array(Math.min(a, b)+1).fill(0)\\n        .reduce((total, _, i) => total + (a % i == 0 && b % i == 0), 0)\\n)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "JavaScript"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        return sum(a % n == 0 and b % n == 0 for n in range(1, min(a, b) + 1))\\n```\n```\\nconst commonFactors = (a, b) => (\\n    new Array(Math.min(a, b)+1).fill(0)\\n        .reduce((total, _, i) => total + (a % i == 0 && b % i == 0), 0)\\n)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2651421,
                "title": "java-stream-operator-stream-pipeline",
                "content": "```\\nimport java.util.stream.*;\\n\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        return (int)Stream.iterate(1, n -> n + 1)\\n            .limit(Math.min(a, b))\\n            .filter(n -> a % n == 0 && b % n == 0)\\n            .count();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nimport java.util.stream.*;\\n\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        return (int)Stream.iterate(1, n -> n + 1)\\n            .limit(Math.min(a, b))\\n            .filter(n -> a % n == 0 && b % n == 0)\\n            .count();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2651164,
                "title": "python-one-liner",
                "content": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        return sum(a % x == b % x == 0 for x in range(1, min(a, b) + 1))\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        return sum(a % x == b % x == 0 for x in range(1, min(a, b) + 1))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2650459,
                "title": "java-c-py-one-liner-100-0ms-o-1-space",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\nUPVOTE PLEASE\\n\\n# Code java \\n```\\n\\n    public int commonFactors(int a, int b) {\\n        return (int)IntStream.range(1, 1001).filter(i->a%i==0 && b%i==0).count();\\n    \\n    }\\n```\\nCode block C++\\n```\\nint commonFactors(int a, int b,int r=0) {\\n        for(int i=1;i<1001;i++) r+=(a%i==0 && b%i==0);\\n        return r;\\n    }\\n```\\nCode block python /py3\\n```\\nreturn sum(a%i==0 and b%i==0 for i in range(1, 1001));\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Python3"
                ],
                "code": "```\\n\\n    public int commonFactors(int a, int b) {\\n        return (int)IntStream.range(1, 1001).filter(i->a%i==0 && b%i==0).count();\\n    \\n    }\\n```\n```\\nint commonFactors(int a, int b,int r=0) {\\n        for(int i=1;i<1001;i++) r+=(a%i==0 && b%i==0);\\n        return r;\\n    }\\n```\n```\\nreturn sum(a%i==0 and b%i==0 for i in range(1, 1001));\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2649212,
                "title": "c-gcd",
                "content": "```\\n    int commonFactors(int a, int b) {\\n        int c = gcd(a, b);\\n        int res = 0;\\n        for(int i = 1; i <= c; i++){\\n            if(c % i == 0) res++;\\n        }\\n        return res;        \\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n    int commonFactors(int a, int b) {\\n        int c = gcd(a, b);\\n        int res = 0;\\n        for(int i = 1; i <= c; i++){\\n            if(c % i == 0) res++;\\n        }\\n        return res;        \\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2648886,
                "title": "python3-brute-force",
                "content": "\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        ans = 0 \\n        for x in range(1, min(a, b)+1): \\n            if a % x == b % x == 0: ans += 1\\n        return ans \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        ans = 0 \\n        for x in range(1, min(a, b)+1): \\n            if a % x == b % x == 0: ans += 1\\n        return ans \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2648863,
                "title": "easy-to-understand-bruteforce-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b)\\n    {\\n        int ans =0;\\n        \\n        for(int i=1;i<=min(a,b);i++)\\n        {\\n            if(a%i==0&&b%i==0)\\n                ans++;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b)\\n    {\\n        int ans =0;\\n        \\n        for(int i=1;i<=min(a,b);i++)\\n        {\\n            if(a%i==0&&b%i==0)\\n                ans++;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2648853,
                "title": "c",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution\\n{\\n    public int CommonFactors(int a, int b)\\n    {\\n        var max = Math.Max(a, b);\\n        var counter = 0;\\n        for(int i = 1; i <= max; i++)\\n        {\\n            if (a % i == 0 && b % i == 0)\\n                counter++;\\n        }\\n        return counter;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution\\n{\\n    public int CommonFactors(int a, int b)\\n    {\\n        var max = Math.Max(a, b);\\n        var counter = 0;\\n        for(int i = 1; i <= max; i++)\\n        {\\n            if (a % i == 0 && b % i == 0)\\n                counter++;\\n        }\\n        return counter;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3827003,
                "title": "swift-one-liner-beats-100",
                "content": "\\n\\n# Complexity\\n- Time complexity: $$O(min(a,b))$$\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\n    func commonFactors(_ a: Int, _ b: Int) -> Int {\\n        (1...min(a,b)).reduce(0) { (a % $1 == 0 && b % $1 == 0) ? $0 + 1 : $0} }        \\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func commonFactors(_ a: Int, _ b: Int) -> Int {\\n        (1...min(a,b)).reduce(0) { (a % $1 == 0 && b % $1 == 0) ? $0 + 1 : $0} }        \\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3707510,
                "title": "easy-java-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count =0;\\n        int min=Math.min(a,b);\\n        for(int i =1;i<=min;i++){\\n             if(a%i==0 && b%i==0) {\\n             count++;\\n        \\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count =0;\\n        int min=Math.min(a,b);\\n        for(int i =1;i<=min;i++){\\n             if(a%i==0 && b%i==0) {\\n             count++;\\n        \\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3675547,
                "title": "2427-number-of-common-factors-100-easy-java-code",
                "content": "# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int test = 1;\\n        int count = 0;\\n\\n        while(a>=test && b>=test){\\n\\n            if(a%test ==0 && b%test ==0){\\n                count++;\\n            }\\n            test++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int test = 1;\\n        int count = 0;\\n\\n        while(a>=test && b>=test){\\n\\n            if(a%test ==0 && b%test ==0){\\n                count++;\\n            }\\n            test++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3673265,
                "title": "one-of-the-easiest-way-beats-in-runtime",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int i = 1;\\n        int count = 0;\\n        while(a >= i && b >= i) {\\n            if(a % i == 0 && b % i == 0) {\\n                count++;\\n            }\\n            i++;\\n        }\\n        return count;\\n       // if you like it, please upvote it.\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int i = 1;\\n        int count = 0;\\n        while(a >= i && b >= i) {\\n            if(a % i == 0 && b % i == 0) {\\n                count++;\\n            }\\n            i++;\\n        }\\n        return count;\\n       // if you like it, please upvote it.\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3533689,
                "title": "simplest-efficient-c-code-time-o-min-a-b-space-o-1",
                "content": "# Intuition\\nThe problem requires finding the number of common factors between two given numbers, a and b. To solve this, we can iterate from 1 up to the maximum of a and b and check if each number divides both a and b without a remainder. If a number i satisfies this condition, it is a common factor of a and b, and we increment a count variable c. Finally, we return the value of c as the result.\\n\\n# Approach\\nInitialize a count variable c to 0 to keep track of the number of common factors. Iterate from 1 up to the maximum of a and b. For each iteration, check if i divides both a and b without a remainder using the condition a % i == 0 and b % i == 0. If the condition is true, increment the count c by 1. After the loop, return the value of c as the result.\\n\\n# Complexity\\n- Time complexity: The loop iterates from 1 up to the maximum of a and b, which can be represented as min(a, b). Therefore, the time complexity is $O(min(a, b))$.\\n\\n- Space complexity: The algorithm uses a constant amount of space to store the count c. Thus, the space complexity is $O(1)$.\\n\\n# Code\\n```\\nint commonFactors(int a, int b)\\n{\\n    int c=0;\\n    for(int i=1;i<=(a>b?b:a);i++)\\n    {\\n        if(a%i==0 && b%i==0)\\n        c++;\\n    }\\n    return c;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint commonFactors(int a, int b)\\n{\\n    int c=0;\\n    for(int i=1;i<=(a>b?b:a);i++)\\n    {\\n        if(a%i==0 && b%i==0)\\n        c++;\\n    }\\n    return c;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3483765,
                "title": "java-beats-100-easy-math-explained",
                "content": "# Approach\\n- mark the smaller integer among a and b\\n- iterate from integer 1 to minimum amongst a and b. call the traversing value i.\\n- if a%i and b%i both equal 1, means both are divvisible by i;\\n- increment count by 1 everytime the above condition converges\\n- return count\\n\\n# Complexity\\n- Time complexity: O(n) , n is the minimum of a and b\\n\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int min = Math.min(a,b);\\n        int max = Math.max(a,b);\\n        int ret = 0;\\n        for(int i = 1;i<=min;i++){\\n            if(min%i == 0 && max%i == 0){\\n                ret++;\\n            }\\n        }\\n        return ret;\\n    }\\n}\\n```\\n",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int min = Math.min(a,b);\\n        int max = Math.max(a,b);\\n        int ret = 0;\\n        for(int i = 1;i<=min;i++){\\n            if(min%i == 0 && max%i == 0){\\n                ret++;\\n            }\\n        }\\n        return ret;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3314619,
                "title": "c-solution-easy-to-understand",
                "content": "# \\u2705C solution || Easy to understand\\n\\n# Code\\n```\\nint commonFactors(int a, int b){\\n  int m=0;\\n  int large,small;\\n  if(a<b)\\n  {\\n      small=a;\\n      large=b;\\n  }\\n  else\\n  {\\n      small=b;\\n      large=a;\\n  }\\n  for(int i=1;i<=large;i++)\\n  {\\n    if(small%i==0 && large%i==0)\\n    {\\n        m++;\\n    }\\n  }\\n  return m;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint commonFactors(int a, int b){\\n  int m=0;\\n  int large,small;\\n  if(a<b)\\n  {\\n      small=a;\\n      large=b;\\n  }\\n  else\\n  {\\n      small=b;\\n      large=a;\\n  }\\n  for(int i=1;i<=large;i++)\\n  {\\n    if(small%i==0 && large%i==0)\\n    {\\n        m++;\\n    }\\n  }\\n  return m;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3289907,
                "title": "c-solution-beats-100-runtime-0ms",
                "content": "# Complexity\\n- Time complexity:O(min(a,b))\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        \\n        int count=0;\\n        for(int i=1;i<=min(a,b);i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n                count++;\\n        }\\n        return count;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        \\n        int count=0;\\n        for(int i=1;i<=min(a,b);i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n                count++;\\n        }\\n        return count;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3260194,
                "title": "easy-solution-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int min=Math.min(a,b);\\n        int k=0;\\n        for(int i=1;i<=min;i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n            k++;\\n        }\\n        return k;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int min=Math.min(a,b);\\n        int k=0;\\n        for(int i=1;i<=min;i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n            k++;\\n        }\\n        return k;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3239424,
                "title": "c-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n = min(a, b), ans = 0;\\n        for(int i=1; i <= n; i++) {\\n            if(a % i == 0 and b % i == 0) ans++; \\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n = min(a, b), ans = 0;\\n        for(int i=1; i <= n; i++) {\\n            if(a % i == 0 and b % i == 0) ans++; \\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3232653,
                "title": "100-c-solution-via-euclidean-algorithm-to-find-the-gcd",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nUse Euclidean algorithm to find the gcd. Since the constraints 1 <= a, b <= 1000 allow no large numbers, the rest can be done by a brutal force.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nEach common divisor of a and b must be a factor the gcd(a,b).\\nThe left problem is to find out all of divisors for gcd(a,b).\\nSince a, b are not very large numbers, brute force will suffice.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int gcd(int x, int y){\\n        int r=x%y;\\n        if (r==0) return y;\\n        else return gcd(y,r);\\n    }\\n    int commonFactors(int a, int b) {\\n        int c=gcd(a,b);\\n        int n=0;\\n        for (int i=1; i<=c; i++){\\n            if( c%i==0) n++;\\n        }\\n    return n;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int gcd(int x, int y){\\n        int r=x%y;\\n        if (r==0) return y;\\n        else return gcd(y,r);\\n    }\\n    int commonFactors(int a, int b) {\\n        int c=gcd(a,b);\\n        int n=0;\\n        for (int i=1; i<=c; i++){\\n            if( c%i==0) n++;\\n        }\\n    return n;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3177430,
                "title": "number-of-common-factors-solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\ncount the number of integers which divide both the given numbers\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- Firstly determine the smaller number out of \"a\" and \"b\"\\n- then start a for loop from i=1 to i=min whichever is smaller out of a and b\\n- if \"i\" divides both the numbers, a and b, then increment count variable\\n- return count when the for loop ends\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int i, count=0, min;\\n        if(a>b)\\n        {\\n            min = b;\\n        }\\n        else\\n        {\\n            min = a;\\n        }\\n        for(i=1 ; i<=min ; i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n            {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int i, count=0, min;\\n        if(a>b)\\n        {\\n            min = b;\\n        }\\n        else\\n        {\\n            min = a;\\n        }\\n        for(i=1 ; i<=min ; i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n            {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3132408,
                "title": "beats-45-67-number-of-common-factors",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        min_ele=min(a,b)\\n        count=0\\n        while min_ele>0:\\n            if ( a%min_ele==0 and b%min_ele==0):\\n                count+=1\\n            min_ele-=1\\n        return count\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        min_ele=min(a,b)\\n        count=0\\n        while min_ele>0:\\n            if ( a%min_ele==0 and b%min_ele==0):\\n                count+=1\\n            min_ele-=1\\n        return count\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3065108,
                "title": "c-solution-easy-to-understand",
                "content": "Runtime: 3 ms, faster than 39.66% of C++ online submissions for Number of Common Factors.\\nMemory Usage: 5.9 MB, less than 86.11% of C++ online submissions for Number of Common Factors.\\n\\n\\t\\tint commonFactors(int a, int b) {\\n        int count=0;\\n        if(a<b){\\n        for(int i=1;i<=a;i++){\\n            if((a%i==0)&&b%i==0){\\n                count++;\\n            }\\n        }       \\n    } \\n        else{\\n            for(int i=1;i<=a;i++){\\n            if((a%i==0)&&(b%i==0)){\\n                count++;\\n            }\\n        }       \\n        }\\n        return count;\\n }\\n};",
                "solutionTags": [
                    "C",
                    "Math",
                    "Enumeration"
                ],
                "code": "Runtime: 3 ms, faster than 39.66% of C++ online submissions for Number of Common Factors.\\nMemory Usage: 5.9 MB, less than 86.11% of C++ online submissions for Number of Common Factors.\\n\\n\\t\\tint commonFactors(int a, int b) {\\n        int count=0;\\n        if(a<b){\\n        for(int i=1;i<=a;i++){\\n            if((a%i==0)&&b%i==0){\\n                count++;\\n            }\\n        }       \\n    } \\n        else{\\n            for(int i=1;i<=a;i++){\\n            if((a%i==0)&&(b%i==0)){\\n                count++;\\n            }\\n        }       \\n        }\\n        return count;\\n }\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 2942170,
                "title": "cpp-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\nint gcd(int a, int b)\\n{\\n    \\n       if(b==0)\\n       return a;\\n       else\\n       return gcd(b, a%b);\\n    \\n}\\n    int commonFactors(int a, int b) {\\n      int count=0;\\n      int c= gcd(a,b);\\n\\n     for(int i=1; i<=c; i++ )\\n        {\\n            if(c%i==0)\\n            count++; \\n        }\\n        return count;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\nint gcd(int a, int b)\\n{\\n    \\n       if(b==0)\\n       return a;\\n       else\\n       return gcd(b, a%b);\\n    \\n}\\n    int commonFactors(int a, int b) {\\n      int count=0;\\n      int c= gcd(a,b);\\n\\n     for(int i=1; i<=c; i++ )\\n        {\\n            if(c%i==0)\\n            count++; \\n        }\\n        return count;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2887311,
                "title": "c-easily-explain",
                "content": "# Taking minimum of two numbers as a condition For for loop and checking the condition for Factor possibility.\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int k=0;\\n        for(int i=1;i<=min(a,b);i++)\\n        {\\n        if(a%i==0 && b%i==0)\\n        {\\n        k++;\\n        }\\n        }\\n        return k;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Enumeration",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int k=0;\\n        for(int i=1;i<=min(a,b);i++)\\n        {\\n        if(a%i==0 && b%i==0)\\n        {\\n        k++;\\n        }\\n        }\\n        return k;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2884264,
                "title": "fastest-c-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n\\n      // decalared and initialised an integer variable named ans to 0\\n      int ans =0;\\n\\n      //as given constraints are from 1 to 1000 iterate through this range and find the numbers which commonly divide both a and b and increment the ans variable accordingly\\n      for(int i=1;i<=1000;++i){\\n          if(a%i==0 && b%i==0) ans++;\\n      }  \\n\\n      // finally return the counter variable\\n      return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n\\n      // decalared and initialised an integer variable named ans to 0\\n      int ans =0;\\n\\n      //as given constraints are from 1 to 1000 iterate through this range and find the numbers which commonly divide both a and b and increment the ans variable accordingly\\n      for(int i=1;i<=1000;++i){\\n          if(a%i==0 && b%i==0) ans++;\\n      }  \\n\\n      // finally return the counter variable\\n      return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2868741,
                "title": "easy-to-understand-very-basic-solution-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n       int i,y=0,w=0;\\n       if(a<b){\\n           w=b;\\n       }\\n       else{\\n           w=a;\\n       }\\n       for(i=1;i<=w;i++){\\n           if(a%i==0 && b%i==0 ){\\n               y++;\\n           }}\\n    \\n return y;   }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n       int i,y=0,w=0;\\n       if(a<b){\\n           w=b;\\n       }\\n       else{\\n           w=a;\\n       }\\n       for(i=1;i<=w;i++){\\n           if(a%i==0 && b%i==0 ){\\n               y++;\\n           }}\\n    \\n return y;   }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2819954,
                "title": "easiest-solution-c-plus-plus-simple-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        vector<int> ans;\\n        for(int i=1;i<=a;i++) if(a%i==0) ans.push_back(i);\\n        if(a==b) return ans.size();\\n        int ab =0;\\n        for(auto i:ans) if(b%i==0) ab++;\\n        return ab;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        vector<int> ans;\\n        for(int i=1;i<=a;i++) if(a%i==0) ans.push_back(i);\\n        if(a==b) return ans.size();\\n        int ab =0;\\n        for(auto i:ans) if(b%i==0) ab++;\\n        return ab;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2805796,
                "title": "javascript-solution-easy-to-understand",
                "content": "Here we check only for two conditions and those are both numbers \\'a\\' and \\'b\\' are equal or not.\\n```\\nvar commonFactors = function (a, b) {\\n  let count = 0;\\n  if (a !== b) { //To check if a is not equal to b\\n    for (let i = 1; i <= Math.abs(a - b); i++) { //comman factors of two different numbers are always less then their difference.\\n      if (a % i === 0 && b % i === 0) {\\n        count++;\\n      }\\n    }\\n  } else {\\n    for (let i = 1; i <= a; i++) {\\n      if (a % i === 0) {\\n        count++;\\n      }\\n    }\\n  }\\n  return count;\\n};\\n```\\nplz upvote if it helped you",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar commonFactors = function (a, b) {\\n  let count = 0;\\n  if (a !== b) { //To check if a is not equal to b\\n    for (let i = 1; i <= Math.abs(a - b); i++) { //comman factors of two different numbers are always less then their difference.\\n      if (a % i === 0 && b % i === 0) {\\n        count++;\\n      }\\n    }\\n  } else {\\n    for (let i = 1; i <= a; i++) {\\n      if (a % i === 0) {\\n        count++;\\n      }\\n    }\\n  }\\n  return count;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2791672,
                "title": "tc-o-sqrt-min-a-b-sc-o-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->we can solve this problem like normal count factors of the number. \\nbut the different is we want to calculate for two numbers in simultaneous way\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. find `min(a,b)`\\n2. iterate `from 1 to min(a , b)` until `i*i > min(a,b)`\\n3. if both are divid by i then check for `min(a,b)/i` also.\\n4. else if i divides any one of the value then also there is a possible `a/i` or `b/i` can be a divisor. so check that also.\\n5. return the ans\\n# Complexity\\n- Time complexity: $$O(Sqrt(Min(a,b)))$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int ans =0;\\n\\n        for(int i=1; i*i<=min(a, b); i++) \\n            \\n            if(a%i==0 && b%i==0){\\n                ans++;\\n                int fact = min(a,b)/i;\\n                if(a%fact==0 && b%fact==0 && b!=fact*fact && a!=fact*fact){\\n                    ans++;\\n                }\\n            }else if(a%i==0){\\n                int fact = a/i;\\n                if(a%fact==0 && b%fact==0){\\n                    ans++;\\n                }\\n            }else if(b%i==0){\\n                int fact = b/i;\\n                if(a%fact==0 && b%fact==0){\\n                    ans++;\\n                }\\n            }\\n    \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int ans =0;\\n\\n        for(int i=1; i*i<=min(a, b); i++) \\n            \\n            if(a%i==0 && b%i==0){\\n                ans++;\\n                int fact = min(a,b)/i;\\n                if(a%fact==0 && b%fact==0 && b!=fact*fact && a!=fact*fact){\\n                    ans++;\\n                }\\n            }else if(a%i==0){\\n                int fact = a/i;\\n                if(a%fact==0 && b%fact==0){\\n                    ans++;\\n                }\\n            }else if(b%i==0){\\n                int fact = b/i;\\n                if(a%fact==0 && b%fact==0){\\n                    ans++;\\n                }\\n            }\\n    \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2780169,
                "title": "easiest-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cnt=0;\\n        for(int x=1;x<=1000;x++){\\n            if(a%x==0 && b%x==0)\\n                cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cnt=0;\\n        for(int x=1;x<=1000;x++){\\n            if(a%x==0 && b%x==0)\\n                cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2773389,
                "title": "c-cpp-100-fast-easy-to-understand",
                "content": "**Brute Force Approach :**\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        int minimum=min(a,b);\\n        \\n        for(int i=1;i<=minimum;i++){\\n            if(a % i==0 && b % i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```\\n\\n**Optimized 100 % Fast :**\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        int minimum=min(a,b);\\n        \\n        for(int i=1;i<=minimum/2;i++){\\n            if(a % i==0 && b % i==0)\\n                count++;\\n        }\\n        \\n        if(a % minimum==0 && b % minimum ==0 )\\n            count++;\\n        \\n        return count;\\n    }\\n};\\n```\\n\\n**Please upvote if you finds helpful!**",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        int minimum=min(a,b);\\n        \\n        for(int i=1;i<=minimum;i++){\\n            if(a % i==0 && b % i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        int minimum=min(a,b);\\n        \\n        for(int i=1;i<=minimum/2;i++){\\n            if(a % i==0 && b % i==0)\\n                count++;\\n        }\\n        \\n        if(a % minimum==0 && b % minimum ==0 )\\n            count++;\\n        \\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2770146,
                "title": "easy",
                "content": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count =0;\\n        for(int i=1; i<=Math.min(a,b); i++){\\n            if(a%i==0 && b%i==0)\\n            { count ++;}\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count =0;\\n        for(int i=1; i<=Math.min(a,b); i++){\\n            if(a%i==0 && b%i==0)\\n            { count ++;}\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2764167,
                "title": "c-easy-one",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        for(int i=1;i<=max(a,b);i++){\\n            if(a%i==0 && b%i==0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        for(int i=1;i<=max(a,b);i++){\\n            if(a%i==0 && b%i==0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2759289,
                "title": "python-easy",
                "content": "**Solution A**\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        count = 0\\n        temp = min(a,b)\\n        \\n        for x in range(1,temp + 1):\\n            if(a % x == 0 and b % x == 0):\\n                count += 1\\n                \\n        return count\\n```\\n\\n**Solution B**\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        count = 0\\n        temp = gcd(a,b)\\n        \\n        for x in range(1,temp + 1):\\n            if(a % x == 0 and b % x == 0):\\n                count += 1\\n                \\n        return count\\n```\\n\\n**Please upvote if you find it useful !!!**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        count = 0\\n        temp = min(a,b)\\n        \\n        for x in range(1,temp + 1):\\n            if(a % x == 0 and b % x == 0):\\n                count += 1\\n                \\n        return count\\n```\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        count = 0\\n        temp = gcd(a,b)\\n        \\n        for x in range(1,temp + 1):\\n            if(a % x == 0 and b % x == 0):\\n                count += 1\\n                \\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2755432,
                "title": "easy-javascript",
                "content": "\\'\\'\\'\\nvar commonFactors = function(a, b) {\\n   let num= a > b ? b : a;\\n    let res = 0;\\n    for (let i =1; i<=num; i++){\\n        if(a%i===0 && b%i===0){\\n            res++\\n        }\\n    }\\n    return res;\\n};\\n\\'\\'\\'",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "\\'\\'\\'\\nvar commonFactors = function(a, b) {\\n   let num= a > b ? b : a;\\n    let res = 0;\\n    for (let i =1; i<=num; i++){\\n        if(a%i===0 && b%i===0){\\n            res++\\n        }\\n    }\\n    return res;\\n};\\n\\'\\'\\'",
                "codeTag": "Unknown"
            },
            {
                "id": 2752455,
                "title": "runtime-0-ms-and-100-faster-code",
                "content": "class Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count =0;\\n        for (int i =1;i<=a || i<=b;i++)\\n        {\\n            if (a%i==0 && b%i==0)\\n            {\\n                count = count +1;\\n            }\\n        }\\n     return count;   \\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count =0;\\n        for (int i =1;i<=a || i<=b;i++)\\n        {\\n            if (a%i==0 && b%i==0)\\n            {\\n                count = count +1;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2748688,
                "title": "easy-c-solution-100-beats",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n      int mini=min(a,b);\\n        int maxi=max(a,b);\\n        int count=0;\\n        for(int i=1;i<=mini;i++)\\n        {\\n            if(mini%i==0 && maxi%i==0)\\n                count++;\\n         }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n      int mini=min(a,b);\\n        int maxi=max(a,b);\\n        int count=0;\\n        for(int i=1;i<=mini;i++)\\n        {\\n            if(mini%i==0 && maxi%i==0)\\n                count++;\\n         }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2736175,
                "title": "python-1-line-with-gcd",
                "content": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n                        \\n        return sum([(a % n == 0 and b % n == 0) for n in range(1, gcd(a, b) + 1)])\\n\\t\\t\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n                        \\n        return sum([(a % n == 0 and b % n == 0) for n in range(1, gcd(a, b) + 1)])\\n\\t\\t\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2729111,
                "title": "javascript-solution",
                "content": "```\\n/**\\n * @param {number} a\\n * @param {number} b\\n * @return {number}\\n */\\nvar commonFactors = function(a, b) {\\n    let c = 0;\\n    for (let i = 1; i <= Math.min(a,b); i++) {\\n      if (a % i === 0 && b % i === 0) {\\n        c++;\\n      }\\n    }\\n    return c;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} a\\n * @param {number} b\\n * @return {number}\\n */\\nvar commonFactors = function(a, b) {\\n    let c = 0;\\n    for (let i = 1; i <= Math.min(a,b); i++) {\\n      if (a % i === 0 && b % i === 0) {\\n        c++;\\n      }\\n    }\\n    return c;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2718318,
                "title": "java-solution-easy-to-understand",
                "content": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count=0;\\n        int min=Math.min(a,b);\\n        for(int i=1;i<=min;i++){\\n            if(a%i==0&&b%i==0) count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count=0;\\n        int min=Math.min(a,b);\\n        for(int i=1;i<=min;i++){\\n            if(a%i==0&&b%i==0) count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2715837,
                "title": "python-simple-solution-in-5-lines-faster-than-92-79",
                "content": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        m,c=min(a,b),1\\n        for i in range(2,m+1):\\n            if a%i==0 and b%i==0: c+=1\\n        return c\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        m,c=min(a,b),1\\n        for i in range(2,m+1):\\n            if a%i==0 and b%i==0: c+=1\\n        return c\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2710739,
                "title": "c-easy-100-fast-soln",
                "content": "```\\nint commonFactors(int a, int b) {\\n        if(a>b) swap(a,b);\\n        int c = 0;\\n        for(int i=1;i<=b;i++){\\n            if(a%i==0 && b%i==0) c++;\\n        }\\n        return c;\\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint commonFactors(int a, int b) {\\n        if(a>b) swap(a,b);\\n        int c = 0;\\n        for(int i=1;i<=b;i++){\\n            if(a%i==0 && b%i==0) c++;\\n        }\\n        return c;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2686982,
                "title": "python-o-n",
                "content": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c = 0\\n        for i in range(1,min(a,b)+1):\\n            if a%i==0 and b%i==0:\\n                c+=1\\n        return c\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c = 0\\n        for i in range(1,min(a,b)+1):\\n            if a%i==0 and b%i==0:\\n                c+=1\\n        return c\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2677485,
                "title": "python-simple-count",
                "content": "count=0\\n\\t\\t\\tfor i in range(1,1001):\\n\\t\\t\\t\\tif(a%i==0 and b%i==0):\\n\\t\\t\\t\\t\\tcount+=1\\n\\t\\t\\treturn count\\n\\n",
                "solutionTags": [],
                "code": "count=0\\n\\t\\t\\tfor i in range(1,1001):\\n\\t\\t\\t\\tif(a%i==0 and b%i==0):\\n\\t\\t\\t\\t\\tcount+=1\\n\\t\\t\\treturn count\\n\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 2677373,
                "title": "c-easy",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n       for(int i=1;i<=min(a,b);i++)\\n       {\\n            if((a%i==0) and (b%i==0))\\n            {\\n              count++;\\t\\n            }\\n       }        \\n       return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n       for(int i=1;i<=min(a,b);i++)\\n       {\\n            if((a%i==0) and (b%i==0))\\n            {\\n              count++;\\t\\n            }\\n       }        \\n       return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2676346,
                "title": "1ms-solution-in-java",
                "content": "class Solution {\\n    public int commonFactors(int a, int b) {\\n        int minimum=Math.min(a,b);// it takes minimum from both numbers\\n        int count=0;\\n        for(int i=1;i<=minimum;i++)// loop will continue from 1 to lowets value\\n        {\\n            if(a%i==0 && b%i==0)// if the both numbers are divisble by the i then increase count by 1\\n                count++;\\n        }\\n        return count;// return answer simply\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int commonFactors(int a, int b) {\\n        int minimum=Math.min(a,b);// it takes minimum from both numbers\\n        int count=0;\\n        for(int i=1;i<=minimum;i++)// loop will continue from 1 to lowets value\\n        {\\n            if(a%i==0 && b%i==0)// if the both numbers are divisble by the i then increase count by 1\\n                count++;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2674086,
                "title": "easy-to-understand-for-beginners-code-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nEasy To Understand For Beginners \\nCode In C++\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n- O(N)\\n\\n- Space complexity:\\n- O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        \\n        int count=0;\\n        int minn;\\n\\n        if(a>b)\\n        {\\n            minn=b;\\n        }\\n        else{\\n            minn=a;\\n        }\\n        for(int i=1;i<=minn;i++)\\n        {\\n            if(b%i==0 && a%i==0)\\n            {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        \\n        int count=0;\\n        int minn;\\n\\n        if(a>b)\\n        {\\n            minn=b;\\n        }\\n        else{\\n            minn=a;\\n        }\\n        for(int i=1;i<=minn;i++)\\n        {\\n            if(b%i==0 && a%i==0)\\n            {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2668739,
                "title": "python-easiest-solution",
                "content": "\\tclass Solution:\\n\\t\\tdef commonFactors(self, a: int, b: int) -> int:\\n\\t\\t\\tcount=0\\n\\t\\t\\tfor i in range(1,max(a,b)+1):\\n\\t\\t\\t\\tif (a%i==0 and b%i==0):\\n\\t\\t\\t\\t\\tcount+=1\\n\\t\\t\\treturn count",
                "solutionTags": [],
                "code": "\\tclass Solution:\\n\\t\\tdef commonFactors(self, a: int, b: int) -> int:\\n\\t\\t\\tcount=0\\n\\t\\t\\tfor i in range(1,max(a,b)+1):\\n\\t\\t\\t\\tif (a%i==0 and b%i==0):\\n\\t\\t\\t\\t\\tcount+=1\\n\\t\\t\\treturn count",
                "codeTag": "Java"
            },
            {
                "id": 2661008,
                "title": "c-easy-and-simple-approaches",
                "content": "***Guy\\'s if you find this solution helpful \\uD83D\\uDE0A, PLEASE do UPVOTE. By doing that it motivate\\'s me to create more better post like this \\u270D\\uFE0F***\\n```\\nint commonFactors(int a, int b) {\\n        int mini=min(a,b);\\n        int count=0;\\n        for(int i=1;i<=mini;i++){\\n            if(a%i==0 && b%i==0) count++;\\n        }\\n        return count;\\n    }\\n```\\n***Guy\\'s if you find this solution helpful \\uD83D\\uDE0A, PLEASE do UPVOTE. By doing that it motivate\\'s me to create more better post like this \\u270D\\uFE0F***",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nint commonFactors(int a, int b) {\\n        int mini=min(a,b);\\n        int count=0;\\n        for(int i=1;i<=mini;i++){\\n            if(a%i==0 && b%i==0) count++;\\n        }\\n        return count;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2657822,
                "title": "python-a-pretty-one-liner",
                "content": "```python\\nreturn sum(0 == a % n == b % n for n in range(1, min(a, b)+1))\\n```",
                "solutionTags": [],
                "code": "```python\\nreturn sum(0 == a % n == b % n for n in range(1, min(a, b)+1))\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2657287,
                "title": "with-explanation-comments-time-0-ms-100-00-space-5-9-mb-73-15",
                "content": "\\'\\'\\'\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n              \\n        //initialize a counter\\n        int counter=0;\\n        \\n        //loop from 1 until the minimum value between the two integers\\n        for(int i=1;i<=min(a,b);i++)\\n            \\n            //check if the current element is divisible by the two given integers\\n            if(a%i==0 && b%i==0)\\n                //if yes-> add trhe counter by one\\n                counter++;\\n\\t\\t\\t\\t\\n\\t\\t//counter+=a%i==0&&b%i==0;\\n\\n        \\n        //return the final counter value\\n        return counter;\\n    }\\n};\\n\\'\\'\\'",
                "solutionTags": [
                    "C++",
                    "C",
                    "Array",
                    "Math"
                ],
                "code": "class Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n              \\n        //initialize a counter\\n        int counter=0;\\n        \\n        //loop from 1 until the minimum value between the two integers\\n        for(int i=1;i<=min(a,b);i++)\\n            \\n            //check if the current element is divisible by the two given integers\\n            if(a%i==0 && b%i==0)\\n                //if yes-> add trhe counter by one\\n                counter++;\\n\\t\\t\\t\\t\\n\\t\\t//counter+=a%i==0&&b%i==0;\\n\\n        \\n        //return the final counter value\\n        return counter;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2656870,
                "title": "python-100-run-time",
                "content": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        count = 0\\n        if max(a,b) % min(a,b) == 0:\\n            count += 1\\n        for i in range(1,(min(a,b)//2) + 1):\\n            if a % i == 0 and b % i == 0:\\n                count += 1\\n        return count\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        count = 0\\n        if max(a,b) % min(a,b) == 0:\\n            count += 1\\n        for i in range(1,(min(a,b)//2) + 1):\\n            if a % i == 0 and b % i == 0:\\n                count += 1\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2655597,
                "title": "c-easy",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int k=0,l=1;\\n        while(l<=min(a,b))\\n        {\\n            if(a%l==0&&b%l==0)k++;\\n            l++;\\n        }\\n        return k;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int k=0,l=1;\\n        while(l<=min(a,b))\\n        {\\n            if(a%l==0&&b%l==0)k++;\\n            l++;\\n        }\\n        return k;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2654065,
                "title": "0ms-solution-java",
                "content": "# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int n;\\n        if(a>b)\\n            n=b;\\n        else\\n            n=a;\\n        int count =0;\\n        for(int i=1; i<= n; i++){\\n            if(a%i ==0 && b%i==0)\\n                count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int n;\\n        if(a>b)\\n            n=b;\\n        else\\n            n=a;\\n        int count =0;\\n        for(int i=1; i<= n; i++){\\n            if(a%i ==0 && b%i==0)\\n                count++;\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2653876,
                "title": "very-very-easy-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n = __gcd(a, b);\\n  \\n    // Count divisors of n.\\n    int result = 0;\\n    for (int i = 1; i <= sqrt(n); i++) {\\n        // if \\'i\\' is factor of n\\n        if (n % i == 0) {\\n            // check if divisors are equal\\n            if (n / i == i)\\n                result += 1;\\n            else\\n                result += 2;\\n        }\\n    }\\n    return result;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n = __gcd(a, b);\\n  \\n    // Count divisors of n.\\n    int result = 0;\\n    for (int i = 1; i <= sqrt(n); i++) {\\n        // if \\'i\\' is factor of n\\n        if (n % i == 0) {\\n            // check if divisors are equal\\n            if (n / i == i)\\n                result += 1;\\n            else\\n                result += 2;\\n        }\\n    }\\n    return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2653309,
                "title": "count-divisors-of-gcd-a-b-c-beats-100",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int gcd = __gcd(a, b);\\n        int ans = 0;\\n        for (int i = 1; i * i <= gcd; i++)\\n            if (gcd % i == 0)\\n                ans += 1 + (i * i != gcd);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int gcd = __gcd(a, b);\\n        int ans = 0;\\n        for (int i = 1; i * i <= gcd; i++)\\n            if (gcd % i == 0)\\n                ans += 1 + (i * i != gcd);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2652392,
                "title": "java-solution100-faster-easiest-two-approaches-explained-1ms",
                "content": "```\\nimport java.util.*;\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n    int min=Math.min(a,b);\\n    int c=0;\\n        \\n    for(int i=1;i<=min;i++)\\n    {\\n        if(a%i==0 && b%i==0)c++;\\n    }\\n      return c;  \\n    }\\n}\\n\\n// //--->Optimised approach also given below<---\\n\\n// import java.util.*;\\n// class Solution {\\n//     public int commonFactors(int a, int b) {\\n//     int c=0;\\n        \\n//     for(int i=1;i<=a &&i<=b;i++)\\n//     {\\n//         if(a%i==0 && b%i==0)c++;\\n//     }\\n//       return c;  \\n//     }\\n// }\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nimport java.util.*;\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n    int min=Math.min(a,b);\\n    int c=0;\\n        \\n    for(int i=1;i<=min;i++)\\n    {\\n        if(a%i==0 && b%i==0)c++;\\n    }\\n      return c;  \\n    }\\n}\\n\\n// //--->Optimised approach also given below<---\\n\\n// import java.util.*;\\n// class Solution {\\n//     public int commonFactors(int a, int b) {\\n//     int c=0;\\n        \\n//     for(int i=1;i<=a &&i<=b;i++)\\n//     {\\n//         if(a%i==0 && b%i==0)c++;\\n//     }\\n//       return c;  \\n//     }\\n// }\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2652337,
                "title": "python3-solution-using-a-liitle-math-knowledge",
                "content": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        comA,comB = set(),set()\\n        for i in range(1,int(a**(1/2)+1)): #You just have to run square root \\n            if a % i == 0:\\n                comA.add(i)\\n                comA.add(a//i)\\n        for i in range(1,int(b**(1/2)+1)):\\n            if b % i == 0:\\n                comB.add(i)\\n                comB.add(b//i)\\n        return len(comA & comB)\\n```\\nIt\\'s a simple way to reduce the cost time.",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        comA,comB = set(),set()\\n        for i in range(1,int(a**(1/2)+1)): #You just have to run square root \\n            if a % i == 0:\\n                comA.add(i)\\n                comA.add(a//i)\\n        for i in range(1,int(b**(1/2)+1)):\\n            if b % i == 0:\\n                comB.add(i)\\n                comB.add(b//i)\\n        return len(comA & comB)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2651865,
                "title": "java-1ms-100-very-easy",
                "content": "# Please Upvote\\n\\n```\\n\\t\\tint min = a > b ? b : a;\\n        int count = 0;\\n        for(int i = 1; i <= min; i++){\\n            if(a%i == 0 && b%i == 0)\\n                count++;\\n        }\\n        return count;\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n\\t\\tint min = a > b ? b : a;\\n        int count = 0;\\n        for(int i = 1; i <= min; i++){\\n            if(a%i == 0 && b%i == 0)\\n                count++;\\n        }\\n        return count;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2651679,
                "title": "ruby-one-liner-beats-100-100",
                "content": "```\\nrequire \\'prime\\'\\n\\n# @param {Integer} a\\n# @param {Integer} b\\n# @return {Integer}\\ndef common_factors(a, b)\\n  a.gcd(b).prime_division.map { _2 + 1 }.reduce(1, :*)    \\nend\\n```",
                "solutionTags": [
                    "Ruby"
                ],
                "code": "```\\nrequire \\'prime\\'\\n\\n# @param {Integer} a\\n# @param {Integer} b\\n# @return {Integer}\\ndef common_factors(a, b)\\n  a.gcd(b).prime_division.map { _2 + 1 }.reduce(1, :*)    \\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2651645,
                "title": "python-83-33-faster-66-67-less-space-o-n-time-o-1-space",
                "content": "Basic Python. Coded under test conditions in < 1 min:\\n\\n```python\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \"\"\"\\n        Solution initialises an empty array outcome, then for i in range len 1 ->\\n        minimum of a and b +1 (as we start from 1), if a % i and b % i both evaluate\\n        to 0, append the value i to the outcome list. Finally, return len of output list.\\n        \\n        :param a: an integer to be assessed. (int)\\n        :param b: an integer to be assessed. (int)\\n        :return len(outcome): the number of common factors. (int)\\n        \"\"\"\\n        outcome = []\\n        for i in range(1, min(a,b)+1):\\n            if a % i == 0 and b % i == 0:\\n                outcome.append(i)\\n        return len(outcome)",
                "solutionTags": [
                    "Python"
                ],
                "code": "Basic Python. Coded under test conditions in < 1 min:\\n\\n```python\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \"\"\"\\n        Solution initialises an empty array outcome, then for i in range len 1 ->\\n        minimum of a and b +1 (as we start from 1), if a % i and b % i both evaluate\\n        to 0, append the value i to the outcome list. Finally, return len of output list.\\n        \\n        :param a: an integer to be assessed. (int)\\n        :param b: an integer to be assessed. (int)\\n        :return len(outcome): the number of common factors. (int)\\n        \"\"\"\\n        outcome = []\\n        for i in range(1, min(a,b)+1):\\n            if a % i == 0 and b % i == 0:\\n                outcome.append(i)\\n        return len(outcome)",
                "codeTag": "Java"
            },
            {
                "id": 2651629,
                "title": "c-optimised-solution-with-explanation-100-faster",
                "content": "Here we have to find common factors between 2 numbers.\\nSo as we know gcd is maximum factor between 2 numbers so we can run loop upto only gcd & check my gcd has how many common factors.\\n\\nNow again factors are lying equally by sqrt(n)\\n\\nex n = 100\\nfactors - > 1 2 5 10 50 100 so (1,100) (2,50) (10,10) so if i is factor of n then n/i is also factor.\\nUsing this property we can say that running loop till sqrt(n) can generate both factors for n.\\n\\nSo running loop upto sqrt(gcd) can also give us ans instead of running loop over gcd.\\n\\n```\\nclass Solution {\\npublic:\\n    int gcd(int a,int b){\\n        int maxi = max(a,b);\\n        int mini = min(a,b);\\n        \\n        while(maxi%mini){\\n            int temp = maxi;\\n            maxi = mini;\\n            mini = temp%mini;\\n            \\n        }\\n        return mini;\\n    }\\n    int commonFactors(int a, int b) {\\n        int n = gcd(a,b);\\n        \\n        int res = 0;\\n        \\n        for(int i=1;i<=sqrt(n);i++){\\n            if(n%i == 0){\\n                if(i*i == n){\\n                    res+=1;\\n                }\\n                else{\\n                    res+=2;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int gcd(int a,int b){\\n        int maxi = max(a,b);\\n        int mini = min(a,b);\\n        \\n        while(maxi%mini){\\n            int temp = maxi;\\n            maxi = mini;\\n            mini = temp%mini;\\n            \\n        }\\n        return mini;\\n    }\\n    int commonFactors(int a, int b) {\\n        int n = gcd(a,b);\\n        \\n        int res = 0;\\n        \\n        for(int i=1;i<=sqrt(n);i++){\\n            if(n%i == 0){\\n                if(i*i == n){\\n                    res+=1;\\n                }\\n                else{\\n                    res+=2;\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2651567,
                "title": "gcd-problem",
                "content": "// if you are a beginner then i would suggest you to learn concept of gcd its very easy just check on gfg\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0,temp= __gcd(a,b);\\n        for(int i=1;i<=temp;i++)\\n        {\\n            if(temp%i==0)\\n            {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0,temp= __gcd(a,b);\\n        for(int i=1;i<=temp;i++)\\n        {\\n            if(temp%i==0)\\n            {\\n                count++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2651254,
                "title": "c-easy-solution-100-faster",
                "content": "**Solution : 1**\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int count=0;\\n        for(int i=1; i<1001; i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n                count++;\\n        }\\n        return count;\\n    }\\n};\\n```\\n\\n\\n**Solution : 2 Using unordered_map**\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int count=0;\\n        unordered_map<int, int> m;\\n        for(int i=1; i<=a; i++)\\n        {\\n            if(a%i==0)\\n                m[i]=i; //store every factor in  map \\n        }\\n        for(int i=1; i<=b; i++)\\n        {\\n            if(b%i==0 && m.find(i)!=m.end()) // if i is factor and is present in map then it is common factor\\n                count++;\\n        }\\n        return count;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int count=0;\\n        for(int i=1; i<1001; i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n                count++;\\n        }\\n        return count;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int count=0;\\n        unordered_map<int, int> m;\\n        for(int i=1; i<=a; i++)\\n        {\\n            if(a%i==0)\\n                m[i]=i; //store every factor in  map \\n        }\\n        for(int i=1; i<=b; i++)\\n        {\\n            if(b%i==0 && m.find(i)!=m.end()) // if i is factor and is present in map then it is common factor\\n                count++;\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2651136,
                "title": "java-solution",
                "content": "```java \\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int i = a>b? b:a;\\n        int c=0;\\n        for(int j=1;j<=i;j++)\\n        {\\n            if(a%j==0 && b%j==0)\\n                c++;\\n        }\\n        return c;\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public int commonFactors(int a, int b) {\\n        int i = a>b? b:a;\\n        int c=0;\\n        for(int j=1;j<=i;j++)\\n        {\\n            if(a%j==0 && b%j==0)\\n                c++;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2650354,
                "title": "c-0ms-beats-100-intuitive-approach",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        int maxi=max(a,b);\\n        for(int i=1;i<=maxi;i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        int maxi=max(a,b);\\n        for(int i=1;i<=maxi;i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2649914,
                "title": "rust-0-ms-one-liner-with-detailed-comments",
                "content": "This [**solution**](https://leetcode.com/submissions/detail/813343022/) employs a functional-style approach to count common factors. It demonstrated **0 ms runtime (100.00%)** and used **2.0 MB memory (100.00%)**. Time complexity is linear: **O(N)**. Space complexity is constant: **O(1)**. Detailed comments are provided.\\n\\n**IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n```\\nimpl Solution \\n{\\n    pub fn common_factors(a: i32, b: i32) -> i32 \\n    {\\n        // just iterate up to min(a,b) and filter factors\\n        (1..=a.min(b)).filter(|&f| a % f + b % f == 0).count() as i32\\n    }\\n}\\n```\\n",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution \\n{\\n    pub fn common_factors(a: i32, b: i32) -> i32 \\n    {\\n        // just iterate up to min(a,b) and filter factors\\n        (1..=a.min(b)).filter(|&f| a % f + b % f == 0).count() as i32\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2649865,
                "title": "java-2-solutions",
                "content": "### ***Please Upvote !!!*** **(\\u25E0\\u203F\\u25E0)**\\n##### Approach 1:\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        Set<Integer> set = new HashSet<>();\\n\\n        for (int i = 1; i <= a; i++) {\\n            if (a % i == 0) {\\n                set.add(i);\\n            }\\n        }\\n\\n        int count = 0;\\n\\n        for (int i = 1; i <= a; i++) {\\n            if (b % i == 0) {\\n                if (set.contains(i)) {\\n                    count++;\\n                }\\n            }\\n        }\\n\\n        return count;\\n    }\\n}\\n\\n// TC: O(a + b), SC: O(a)\\n```\\n##### Approach 2:\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n\\n        for (int i = 1; i <= Math.min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) {\\n                count++;\\n            }\\n        }\\n\\n        return count;\\n    }\\n}\\n\\n// TC: O(min(a,b)), SC: O(1)\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        Set<Integer> set = new HashSet<>();\\n\\n        for (int i = 1; i <= a; i++) {\\n            if (a % i == 0) {\\n                set.add(i);\\n            }\\n        }\\n\\n        int count = 0;\\n\\n        for (int i = 1; i <= a; i++) {\\n            if (b % i == 0) {\\n                if (set.contains(i)) {\\n                    count++;\\n                }\\n            }\\n        }\\n\\n        return count;\\n    }\\n}\\n\\n// TC: O(a + b), SC: O(a)\\n```\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n\\n        for (int i = 1; i <= Math.min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) {\\n                count++;\\n            }\\n        }\\n\\n        return count;\\n    }\\n}\\n\\n// TC: O(min(a,b)), SC: O(1)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2649435,
                "title": "c-beats-100-best-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int m=min(a,b),c=0;\\n        for(int i=1;i<=m/2;i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n            c++;\\n        }\\n        if(a%m==0 && b%m==0)\\n            c++;\\n        return c;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int m=min(a,b),c=0;\\n        for(int i=1;i<=m/2;i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n            c++;\\n        }\\n        if(a%m==0 && b%m==0)\\n            c++;\\n        return c;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2649364,
                "title": "python-brute-force-easiest-to-understand",
                "content": "Upvote if it helped. Thanks\\n\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c = 0\\n        for i in range (1, 1001):\\n            if a%i ==0 and b%i ==0 :\\n                c += 1\\n        return c\\n```\\nSame approach as above, but a bit faster\\n```\\n\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c = 0\\n        if a > b :\\n            lim = a\\n        else:\\n            lim = b\\n        for i in range (1, lim+1):\\n            if a%i ==0 and b%i ==0 :\\n                c += 1\\n        return c\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c = 0\\n        for i in range (1, 1001):\\n            if a%i ==0 and b%i ==0 :\\n                c += 1\\n        return c\\n```\n```\\n\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        c = 0\\n        if a > b :\\n            lim = a\\n        else:\\n            lim = b\\n        for i in range (1, lim+1):\\n            if a%i ==0 and b%i ==0 :\\n                c += 1\\n        return c\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2649304,
                "title": "easy-to-understand-100-faster",
                "content": "**Brute Force easy to understand **\\n\\n```  \\n\\n   int commonFactors(int a, int b) {\\n        int count=0;\\n        for(int i=1; i<=min(a, b); i++){\\n            if(a%i==0 && b%i == 0)\\n                count++;\\n        }\\n        return count;\\n    }",
                "solutionTags": [
                    "C"
                ],
                "code": "**Brute Force easy to understand **\\n\\n```  \\n\\n   int commonFactors(int a, int b) {\\n        int count=0;\\n        for(int i=1; i<=min(a, b); i++){\\n            if(a%i==0 && b%i == 0)\\n                count++;\\n        }\\n        return count;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2649224,
                "title": "c-beginner-friendly",
                "content": "**Approach:**\\n\\n* The common factor of a and b can\\'t be greater than the minimum of both the numbers\\n* as the range of a and b are from 1 to 1000\\n* we can simply just check from 1 to min(a,b) that how many factors are common\\n\\n**Code:**\\n\\n```\\nclass Solution\\n{\\npublic:\\n    int commonFactors(int a, int b)\\n    {\\n        int m = min(a, b);\\n        int ans = 0;\\n        for (int i = 1; i <= m; i++)\\n            if (a % i == 0 && b % i == 0)\\n                ans++;\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution\\n{\\npublic:\\n    int commonFactors(int a, int b)\\n    {\\n        int m = min(a, b);\\n        int ans = 0;\\n        for (int i = 1; i <= m; i++)\\n            if (a % i == 0 && b % i == 0)\\n                ans++;\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2649184,
                "title": "easy-solution-c",
                "content": "```\\nint commonFactors(int a, int b) {\\n        set<int> s;\\n        for(int i=1;i<=a && i<=b ;i++){\\n            if(a%i==0 && b%i==0) s.insert(i);\\n        }\\n        return s.size();\\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint commonFactors(int a, int b) {\\n        set<int> s;\\n        for(int i=1;i<=a && i<=b ;i++){\\n            if(a%i==0 && b%i==0) s.insert(i);\\n        }\\n        return s.size();\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2649180,
                "title": "faster-easy-to-understand-c-code",
                "content": "* ***Math***\\n\\n* ***Time Complexity :- O(min(a, b))***\\n\\n* ***Space Complexity :- O(1)***\\n\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        \\n        int count = 0;\\n        \\n        for(int i = 1; i <= min(a, b); i++)\\n        {\\n            if(a % i == 0 && b % i == 0)\\n            {\\n                count++;\\n            }\\n        }\\n        \\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        \\n        int count = 0;\\n        \\n        for(int i = 1; i <= min(a, b); i++)\\n        {\\n            if(a % i == 0 && b % i == 0)\\n            {\\n                count++;\\n            }\\n        }\\n        \\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2649134,
                "title": "c-easy-solution",
                "content": "class Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        int n = min(a,b);\\n        for(int i = 1; i<=n ;i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        int n = min(a,b);\\n        for(int i = 1; i<=n ;i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2649060,
                "title": "c-easy-solution-time-complexity-o-n1-2-o-sqrt-n",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n    int n = gcd(a, b);\\n    int result = 0;\\n    for (int i = 1; i <= sqrt(n); i++) {\\n        // if \\'i\\' is factor of n\\n        if (n % i == 0) {\\n            // check if divisors are equal\\n            if (n / i == i)result += 1;\\n            else result += 2;\\n        }\\n    }\\n    return result;\\n    }\\n};\\n\\t```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n    int n = gcd(a, b);\\n    int result = 0;\\n    for (int i = 1; i <= sqrt(n); i++) {\\n        // if \\'i\\' is factor of n\\n        if (n % i == 0) {\\n            // check if divisors are equal\\n            if (n / i == i)result += 1;\\n            else result += 2;\\n        }\\n    }\\n    return result;\\n    }\\n};\\n\\t```",
                "codeTag": "Java"
            },
            {
                "id": 2648961,
                "title": "efficient-java-solution-with-explanation-using-common-factors-0ms-beats-100",
                "content": "First take minimum of a and b, and use for loop till that min value only\\nIncrement the counter whenever we encouter a case that both a and b are divisble by number\\n\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n      \\n      int min = Math.min(a,b);\\n      int commonFactors = 0;\\n      for(int i=1; i<=min; i++){\\n        if((a%i ==0) && (b%i ==0)){\\n          commonFactors++;\\n        }\\n      }\\n      return commonFactors; \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n      \\n      int min = Math.min(a,b);\\n      int commonFactors = 0;\\n      for(int i=1; i<=min; i++){\\n        if((a%i ==0) && (b%i ==0)){\\n          commonFactors++;\\n        }\\n      }\\n      return commonFactors; \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2648949,
                "title": "number-of-common-factors",
                "content": "\\n\\n\\n**Java Soloution**\\n   \\n   \\n\\n\\n     class Solution {\\n \\n\\t   public static int commonFactors(int a, int b) {\\n\\n     Set<Integer> setOfA = new HashSet<>();\\n        int count = 0;\\n\\n        for (int i = 1; i <= a; ++i) {\\n            // if number is divided by i\\n            // i is the factor\\n            if (a % i == 0) {\\n                setOfA.add(i);\\n\\n            }\\n            if (b % i == 0) {\\n                if (setOfA.contains(i)) {\\n                    count++;\\n                }\\n\\n            }\\n        }\\n\\n        return count;\\n    }\\n}\\n\\n\\n\\n\\n# More Efficient\\n  \\n    class Solution {\\n        public static int commonFactors(int a, int b) {\\n\\n        int count = 0;\\n\\n        for (int i = 1; i <= a; ++i) {\\n            // if number is divided by i\\n            // i is the factor\\n            if (a % i == 0 && b%i==0) {       \\n                count++;\\n\\n            }\\n\\n        }\\n\\n        return count;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n \\n\\t   public static int commonFactors(int a, int b) {\\n\\n     Set<Integer> setOfA = new HashSet<>();\\n        int count = 0;\\n\\n        for (int i = 1; i <= a; ++i) {\\n            // if number is divided by i\\n            // i is the factor\\n            if (a % i == 0) {\\n                setOfA.add(i);\\n\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2648883,
                "title": "c-easy-solution-in-3-lines",
                "content": "```\\n int commonFactors(int a, int b,int res= 0) {\\n        for(int i=1;i<=min(a,b);i++) \\n            if(a%i==0 and b%i ==0)++res;\\n        return res;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n int commonFactors(int a, int b,int res= 0) {\\n        for(int i=1;i<=min(a,b);i++) \\n            if(a%i==0 and b%i ==0)++res;\\n        return res;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2648844,
                "title": "c-i-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n=1000;\\n        int count=0;\\n        \\n        for(int i=1; i<=n;i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n        \\n    }\\n};\\n```\\n**If it helps please upvote**",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n=1000;\\n        int count=0;\\n        \\n        for(int i=1; i<=n;i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2648789,
                "title": "java-easy-bruteforce",
                "content": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int cnt=0;\\n        for(int i=1;i<=Math.max(a,b);i++){\\n            if(a%i==0 && b%i==0)\\n                cnt++;\\n        }\\n        return cnt;\\n    }\\n}\\n```\\n**IF YOU LIKED THE APPROACH PLEASE UPVOTE \\uD83D\\uDE4F\\uD83D\\uDE4F\\uD83D\\uDE4F**",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int cnt=0;\\n        for(int i=1;i<=Math.max(a,b);i++){\\n            if(a%i==0 && b%i==0)\\n                cnt++;\\n        }\\n        return cnt;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2648760,
                "title": "java-easy-simple-code",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        \\n        int count = 0;\\n        \\n        for(int i=1;i<=Math.min(a,b);i++)\\n        {\\n            if(a%i == 0 && b%i == 0)\\n            {\\n                count++;\\n            }\\n        }\\n        \\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        \\n        int count = 0;\\n        \\n        for(int i=1;i<=Math.min(a,b);i++)\\n        {\\n            if(a%i == 0 && b%i == 0)\\n            {\\n                count++;\\n            }\\n        }\\n        \\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2648749,
                "title": "easy-short-efficient-clean-code",
                "content": "```\\nclass Solution{\\ntypedef long long ll;\\npublic:\\nunordered_set<ll> getFactors(ll n) {\\n    if (n < 0)\\n        return {};\\n    if (n == 0)\\n        return { 0 };\\n    unordered_set<ll> res { 1, n };\\n    for (ll i = 2;i * i <= n;i++) {\\n        if (n % i == 0) {\\n            res.insert(i);\\n            if ((n / i) != i)\\n                res.insert(n / i);\\n        }\\n    }\\n    return res;\\n}\\n    int commonFactors(int a, int b) {\\n        auto fa=getFactors(a);\\n        auto fb=getFactors(b);\\n        ll ans=0;\\n        for(ll it:fa){\\n            if(fb.find(it)!=fb.end()){\\n                ++ans;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution{\\ntypedef long long ll;\\npublic:\\nunordered_set<ll> getFactors(ll n) {\\n    if (n < 0)\\n        return {};\\n    if (n == 0)\\n        return { 0 };\\n    unordered_set<ll> res { 1, n };\\n    for (ll i = 2;i * i <= n;i++) {\\n        if (n % i == 0) {\\n            res.insert(i);\\n            if ((n / i) != i)\\n                res.insert(n / i);\\n        }\\n    }\\n    return res;\\n}\\n    int commonFactors(int a, int b) {\\n        auto fa=getFactors(a);\\n        auto fb=getFactors(b);\\n        ll ans=0;\\n        for(ll it:fa){\\n            if(fb.find(it)!=fb.end()){\\n                ++ans;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2648741,
                "title": "rust-brute-force-with-comments",
                "content": "This is my unrevised submission for the 2022-10-02 Weekly Contest 313. Loop over all integers from 1 to the minimum of `a` and `b` (since it is the highest factor that can possibly divide both `a` and `b`), and count the factors that divide both `a` and `b` without any remainder.\\n\\nComment: Happy to have come up with a concise functional style solution in a contest context.\\n\\n```\\nimpl Solution {\\n    pub fn common_factors(a: i32, b: i32) -> i32 {\\n        (1..=a.min(b)).filter(|f| a % f == 0 && b % f == 0).count() as _\\n    }\\n}\\n```\\n",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn common_factors(a: i32, b: i32) -> i32 {\\n        (1..=a.min(b)).filter(|f| a % f == 0 && b % f == 0).count() as _\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2648707,
                "title": "c-easiest-3-lines-of-code-o-n-o-1",
                "content": "**Please Upvote if it helps !**\\n```\\nint commonFactors(int a, int b) {\\n        \\n        int cnt = 0 ;\\n        \\n        for( int i=1 ; i<=1000 ; i++ )\\n            if( a%i == 0 && b%i == 0) cnt++ ;\\n        \\n        return cnt ;\\n        \\n```\\n    }",
                "solutionTags": [],
                "code": "```\\nint commonFactors(int a, int b) {\\n        \\n        int cnt = 0 ;\\n        \\n        for( int i=1 ; i<=1000 ; i++ )\\n            if( a%i == 0 && b%i == 0) cnt++ ;\\n        \\n        return cnt ;\\n        \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2648663,
                "title": "very-easy-solution-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        if(a > b) swap(a,b);  // swap for make \\'a\\' minimum\\n        int cnt = 0;\\n        for(int i = 1; i<=a; i++) if(a % i == 0 && b % i== 0) cnt++;  \\n        return cnt;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        if(a > b) swap(a,b);  // swap for make \\'a\\' minimum\\n        int cnt = 0;\\n        for(int i = 1; i<=a; i++) if(a % i == 0 && b % i== 0) cnt++;  \\n        return cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4097134,
                "title": "for-loop",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        count = 0\\n        for i in range(1,min(a,b)//2+1):\\n            if not a%i and not b%i:\\n                count += 1\\n        if max(a,b) % min(a,b) == 0:\\n            count += 1\\n        return count    \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        count = 0\\n        for i in range(1,min(a,b)//2+1):\\n            if not a%i and not b%i:\\n                count += 1\\n        if max(a,b) % min(a,b) == 0:\\n            count += 1\\n        return count    \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4095329,
                "title": "beats-100-with-0ms-runtime",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    void solve1(int a, int b, int &count)\\n    {\\n        for(int i = 1; i <= a / 2; i++)\\n        {\\n            if(a % i == 0 && b % i == 0)\\n                count++;\\n        }\\n    }\\n\\n    void solve2(int a, int b, int &count)\\n    {\\n        for(int i = 1; i <= b / 2; i++)\\n        {\\n            if(a % i == 0 && b % i == 0)\\n                count++;\\n        }\\n    }\\n\\n    void solve3(int a, int b, int &count)\\n    {\\n        for(int i = 1; i <= (b / 2) + 1; i++)\\n        {\\n            if( b % i == 0)\\n                count++;\\n        }\\n        if(a != 1)\\n            count++;\\n    }\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int count = 0;\\n        if(a > b)\\n            solve1(a, b, count);\\n\\n        else if(a < b)\\n            solve2(a, b, count);\\n\\n        else \\n            solve3(a, b, count);\\n        \\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\n    void solve1(int a, int b, int &count)\\n    {\\n        for(int i = 1; i <= a / 2; i++)\\n        {\\n            if(a % i == 0 && b % i == 0)\\n                count++;\\n        }\\n    }\\n\\n    void solve2(int a, int b, int &count)\\n    {\\n        for(int i = 1; i <= b / 2; i++)\\n        {\\n            if(a % i == 0 && b % i == 0)\\n                count++;\\n        }\\n    }\\n\\n    void solve3(int a, int b, int &count)\\n    {\\n        for(int i = 1; i <= (b / 2) + 1; i++)\\n        {\\n            if( b % i == 0)\\n                count++;\\n        }\\n        if(a != 1)\\n            count++;\\n    }\\npublic:\\n    int commonFactors(int a, int b) \\n    {\\n        int count = 0;\\n        if(a > b)\\n            solve1(a, b, count);\\n\\n        else if(a < b)\\n            solve2(a, b, count);\\n\\n        else \\n            solve3(a, b, count);\\n        \\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4095235,
                "title": "beginner-friendly-pythonic-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nRemember your time in your school trying to find the common divisor of 2 numbers by continuously dividing each of them so long as it is possible. Let\\'s apply the same logic to this problem too.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nTo find all the divisors of 2 numbers, we firstly need to find the smallest among them, so that we can iterate number of times which is equal to the minimum number and we can check whether that number divides both the given numbers in a way that the remainder becomes 0. If so, we append it to a list.\\n\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        minnum=min(a,b)\\n        commonf=[]\\n        for x in range(1,minnum+1):\\n            if a%x==0 and b%x==0:\\n                commonf.append(x)\\n        return len(commonf)\\n\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        minnum=min(a,b)\\n        commonf=[]\\n        for x in range(1,minnum+1):\\n            if a%x==0 and b%x==0:\\n                commonf.append(x)\\n        return len(commonf)\\n\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4094900,
                "title": "python-simple-beats-97",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        count = 0\\n        low = 0\\n        if a > b:\\n            low = a\\n        else:\\n            low = b\\n\\n        for i in range(low):\\n            if a % (i + 1) == 0 and b % (i + 1) == 0:\\n                count += 1\\n        \\n        return count\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        count = 0\\n        low = 0\\n        if a > b:\\n            low = a\\n        else:\\n            low = b\\n\\n        for i in range(low):\\n            if a % (i + 1) == 0 and b % (i + 1) == 0:\\n                count += 1\\n        \\n        return count\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4093938,
                "title": "0-ms-solution-using-loop",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n        int min = 0;\\n        min = a>b ? b:a;\\n        for(int i=1; i<=min; i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n        int min = 0;\\n        min = a>b ? b:a;\\n        for(int i=1; i<=min; i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4093168,
                "title": "single-for-loop-c-beats-100",
                "content": "# Complexity\\n- Time complexity:O(c)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cnt=0;\\n        int c = 10000;\\n        for(int i=1; i<c; i++){\\n            if(a%i ==0 && b%i == 0)cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cnt=0;\\n        int c = 10000;\\n        for(int i=1; i<c; i++){\\n            if(a%i ==0 && b%i == 0)cnt++;\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4092590,
                "title": "one-line-solution-runtime-97",
                "content": "![\\u0421\\u043D\\u0438\\u043C\\u043E\\u043A \\u044D\\u043A\\u0440\\u0430\\u043D\\u0430 2023-09-26 \\u0432 15.13.04.png](https://assets.leetcode.com/users/images/17f71a50-565b-497d-9a7c-9134dd7f088e_1695730427.8890495.png)\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        return sum((a%n == b%n == 0 for n in range(1, gcd(a, b)//2+1)), start= 1)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        return sum((a%n == b%n == 0 for n in range(1, gcd(a, b)//2+1)), start= 1)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4092510,
                "title": "easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n      int count=0;\\n      int min=Math.min(a,b);\\n      for(int i=1;i<=min;i++)  {\\n          if(a%i==0 && b%i==0){\\n              count++\\n;          }\\n      }return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n      int count=0;\\n      int min=Math.min(a,b);\\n      for(int i=1;i<=min;i++)  {\\n          if(a%i==0 && b%i==0){\\n              count++\\n;          }\\n      }return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4080360,
                "title": "number-of-common",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nint commonFactors(int a, int b){\\n\\n    int c=a>b?a:b;\\n    int count=0;\\n    if(a==0 || b==0)\\n    {\\n        return 0;\\n    }\\n    for(int i=1;i<=c;i++)\\n    {\\n        if(a%i==0 && b%i==0)\\n        {\\n            count++;\\n        }\\n    }\\n    return count;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint commonFactors(int a, int b){\\n\\n    int c=a>b?a:b;\\n    int count=0;\\n    if(a==0 || b==0)\\n    {\\n        return 0;\\n    }\\n    for(int i=1;i<=c;i++)\\n    {\\n        if(a%i==0 && b%i==0)\\n        {\\n            count++;\\n        }\\n    }\\n    return count;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4067188,
                "title": "easy-c-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        set<int>st;\\n        int sz=min(sqrt(a),sqrt(b));\\n        for (int i=1;i<=sz;i++)\\n        {\\n            if (a%i==0 && b%i==0)\\n            {\\n               st.insert(i);\\n            }\\n            if (a%i==0 && b%(a/i)==0) st.insert(a/i);\\n            if (b%i==0 && a%(b/i)==0) st.insert(b/i);\\n        }\\n        for (auto it: st) cout<<it<<endl;\\n        return st.size();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        set<int>st;\\n        int sz=min(sqrt(a),sqrt(b));\\n        for (int i=1;i<=sz;i++)\\n        {\\n            if (a%i==0 && b%i==0)\\n            {\\n               st.insert(i);\\n            }\\n            if (a%i==0 && b%(a/i)==0) st.insert(a/i);\\n            if (b%i==0 && a%(b/i)==0) st.insert(b/i);\\n        }\\n        for (auto it: st) cout<<it<<endl;\\n        return st.size();\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 4065644,
                "title": "python-simple-with-explanation",
                "content": "# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        #INITIALISE ANS=0\\n        ans=0\\n        #ITERATE AND IF I DIVIDES BOTH THE NUMBERS, INCREMENT ANS BY 1\\n        for i in range(1,min(a,b)+1):\\n            if a%i==0 and b%i==0:\\n                ans+=1\\n        #RETURN ANS\\n        return ans\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        #INITIALISE ANS=0\\n        ans=0\\n        #ITERATE AND IF I DIVIDES BOTH THE NUMBERS, INCREMENT ANS BY 1\\n        for i in range(1,min(a,b)+1):\\n            if a%i==0 and b%i==0:\\n                ans+=1\\n        #RETURN ANS\\n        return ans\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4059926,
                "title": "good-php-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n\\n    /**\\n     * @param Integer $a\\n     * @param Integer $b\\n     * @return Integer\\n     */\\n    function commonFactors($a, $b) {\\n        $arr = [];\\n        $result = 0;\\n\\n        for ($i = 1; $i <= $a; $i ++) {\\n            \\n            if (($a % $i) == 0) {\\n                $arr[] = $i;\\n            }\\n        }\\n\\n        foreach ($arr as $value) {\\n\\n            if (($b % $value) == 0) {\\n                $result++;\\n            }\\n        }\\n\\n        return $result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "PHP"
                ],
                "code": "```\\nclass Solution {\\n\\n    /**\\n     * @param Integer $a\\n     * @param Integer $b\\n     * @return Integer\\n     */\\n    function commonFactors($a, $b) {\\n        $arr = [];\\n        $result = 0;\\n\\n        for ($i = 1; $i <= $a; $i ++) {\\n            \\n            if (($a % $i) == 0) {\\n                $arr[] = $i;\\n            }\\n        }\\n\\n        foreach ($arr as $value) {\\n\\n            if (($b % $value) == 0) {\\n                $result++;\\n            }\\n        }\\n\\n        return $result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4056039,
                "title": "simple-and-beats-100-time",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nTo solve this problem, we can follow these steps:\\n\\n- Initialize a variable count to 0. This variable will keep track of the number of common factors.\\n\\n- Find the minimum of a and b and store it in a variable test. We will iterate up to test to find common factors.\\n\\n- Use a for loop to iterate from 2 to test (inclusive) because 1 is a common factor of all integers and does not need to be checked.\\n\\n- Inside the loop, check if both a and b are divisible by the current value of i (i.e., if a % i == 0 and b % i == 0). If they are both divisible, increment the count variable by 1.\\n\\n- After the loop completes, return the count variable, which will contain the number of common factors between a and b.\\n\\n# Complexity\\n- Time complexity:O(min(a, b))\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count=1;\\n        int test=a<b?a:b;\\n        for(int i=2;i<=test;i++)\\n            if(a%i==0 && b%i==0)\\n                count++;\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count=1;\\n        int test=a<b?a:b;\\n        for(int i=2;i<=test;i++)\\n            if(a%i==0 && b%i==0)\\n                count++;\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4050535,
                "title": "js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} a\\n * @param {number} b\\n * @return {number}\\n */\\nvar commonFactors = function(a, b) {\\n    let aFactors = new Set()\\n    let count = 0\\n\\n    for (let i = 1; i <= a; i++) {\\n        if (a % i === 0) aFactors.add(i)\\n    }\\n    for (let j = 1; j <= b; j++) {\\n        if (aFactors.has(b / j)) count++\\n    }\\n\\n    return count\\n\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} a\\n * @param {number} b\\n * @return {number}\\n */\\nvar commonFactors = function(a, b) {\\n    let aFactors = new Set()\\n    let count = 0\\n\\n    for (let i = 1; i <= a; i++) {\\n        if (a % i === 0) aFactors.add(i)\\n    }\\n    for (let j = 1; j <= b; j++) {\\n        if (aFactors.has(b / j)) count++\\n    }\\n\\n    return count\\n\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4049925,
                "title": "best-solution-beats-100-in-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n      int check = Math.min(a,b);\\n      int count = 0;\\n      for(int i = 1; i <= check; i++){\\n          if(a % i == 0 && b % i == 0){\\n              count++;\\n          }\\n      }\\n      return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Iterator"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n      int check = Math.min(a,b);\\n      int count = 0;\\n      for(int i = 1; i <= check; i++){\\n          if(a % i == 0 && b % i == 0){\\n              count++;\\n          }\\n      }\\n      return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4049709,
                "title": "python-simple-and-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        def honey(suj):\\n            har=set()\\n            for i in range(1,suj+1):\\n                if suj%i==0:\\n                    har.add(i)\\n            return har\\n        k1=honey(a)\\n        k2=honey(b)\\n        return len(k1.intersection(k2))        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        def honey(suj):\\n            har=set()\\n            for i in range(1,suj+1):\\n                if suj%i==0:\\n                    har.add(i)\\n            return har\\n        k1=honey(a)\\n        k2=honey(b)\\n        return len(k1.intersection(k2))        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4047147,
                "title": "complexity-o-sqrt-min-a-b",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        smallest = min(a, b)\\n        largest = max(a, b)\\n        commonFactors = set()\\n        \\n        for candidate in range(1, int(math.sqrt(smallest))+1):\\n            if smallest % candidate == 0:\\n                if largest % candidate == 0:\\n                    commonFactors.add(candidate)\\n                if largest % (smallest // candidate) == 0:\\n                    commonFactors.add(smallest // candidate)\\n        \\n        return len(commonFactors)\\n\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        smallest = min(a, b)\\n        largest = max(a, b)\\n        commonFactors = set()\\n        \\n        for candidate in range(1, int(math.sqrt(smallest))+1):\\n            if smallest % candidate == 0:\\n                if largest % candidate == 0:\\n                    commonFactors.add(candidate)\\n                if largest % (smallest // candidate) == 0:\\n                    commonFactors.add(smallest // candidate)\\n        \\n        return len(commonFactors)\\n\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4045309,
                "title": "simple-cpp-solution-that-beats-100-users",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n = min(a,b);\\n        int ans = 0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(a%i == 0 && b%i == 0)\\n                ans++;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Enumeration",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n = min(a,b);\\n        int ans = 0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(a%i == 0 && b%i == 0)\\n                ans++;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4042915,
                "title": "a-beginner-s-solutions",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n       int minv,maxv;\\n        if (a>b) {\\n            minv=b;\\n            maxv=a;\\n        }\\n        else {\\n             minv=a;\\n             maxv=b;\\n        }\\n        int i=1,common=0;\\n        while (i<=minv){\\n            if (minv%i==0)\\n                if (maxv%i==0)\\n                common++;\\n            i++;\\n        }\\n        \\n    return common;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n       int minv,maxv;\\n        if (a>b) {\\n            minv=b;\\n            maxv=a;\\n        }\\n        else {\\n             minv=a;\\n             maxv=b;\\n        }\\n        int i=1,common=0;\\n        while (i<=minv){\\n            if (minv%i==0)\\n                if (maxv%i==0)\\n                common++;\\n            i++;\\n        }\\n        \\n    return common;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4041174,
                "title": "cpp-just-a-for-loop",
                "content": "just used a simple for loop, loop goes till minimum of (a, b)\\nand if we find number which divides both a nd b then count is increased.\\n\\n# Complexity\\n- Time complexity:\\no(min(a,b))\\n\\n- Space complexity:\\no(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        long long count=0;\\n        for(int i=1;i<=min(a,b);i++){\\n            if(a%i==0 && b%i==0){\\n                count=count+1;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        long long count=0;\\n        for(int i=1;i<=min(a,b);i++){\\n            if(a%i==0 && b%i==0){\\n                count=count+1;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4039093,
                "title": "0-ms-beats-100-easiest-method",
                "content": "# Intuition\\nrun the loop until reach of minimum value.\\n\\n# Approach\\ncount=1 because 1 is the common factor for every integer number.\\n# Complexity\\n- Time complexity:\\n0 ms\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n\\n        int min=Math.min(a,b);\\n        int max=Math.max(a,b);\\n\\n        int count=1;\\n    \\n        for(int i=2;i<=min;i++){\\n\\n            if(min%i==0 && max%i==0)\\n            count++;\\n\\n        \\n        }//end of for loop\\n\\n        \\n\\n        return count;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n\\n        int min=Math.min(a,b);\\n        int max=Math.max(a,b);\\n\\n        int count=1;\\n    \\n        for(int i=2;i<=min;i++){\\n\\n            if(min%i==0 && max%i==0)\\n            count++;\\n\\n        \\n        }//end of for loop\\n\\n        \\n\\n        return count;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4039009,
                "title": "simple-approach-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n=min(a,b);\\n        int cnt=1;\\n        for(int i=2;i<=n;i++){\\n            if((a%i==0)&&(b%i==0)){\\n                cnt++;\\n            }\\n        }return cnt; \\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int n=min(a,b);\\n        int cnt=1;\\n        for(int i=2;i<=n;i++){\\n            if((a%i==0)&&(b%i==0)){\\n                cnt++;\\n            }\\n        }return cnt; \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4038460,
                "title": "one-of-the-easiest-way-to-solve-this-question",
                "content": "# Intuition\\nIts easy I just have to run the loop till the smallest of the two (because all the common factors will be smaller than that) and every time I find an element whose modulo with both numbers is zero I will increase count by 1. And at the end I will return the count.\\n\\n# Approach\\nSame as Intution\\n\\n# Complexity\\n- Time complexity:\\no(n) - as we are running the loop till we reach the smaller number.\\n\\n- Space complexity:\\nO(1) - as we are not creating any extra memory.\\n\\n***Upvote Pls***\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int result = ( a < b ) ? a : b;\\n        int ans =1;\\n        for(int i =2; i<=result; i++){\\n            if(a%i==0 && b%i==0){\\n                ans++;\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```\\n# Request to Upvote\\n![5zadts.jpg](https://assets.leetcode.com/users/images/7cc61bb6-a7e3-48bd-a6fc-6928881ae5bc_1694584987.9099739.jpeg)\\n",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Iterator"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int result = ( a < b ) ? a : b;\\n        int ans =1;\\n        for(int i =2; i<=result; i++){\\n            if(a%i==0 && b%i==0){\\n                ans++;\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4038265,
                "title": "optimised-tc-o-log-min-a-b-o-sqrt-num-100-faster",
                "content": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        //Broute Force ::\\n        // int num =a>b?a:b;\\n        // int count=0;\\n        // for(int i=1;i<=num;i++){\\n        //     if(a%i==0 && b%i==0){\\n        //         count++;\\n        //     }\\n        // }\\n        // return count;\\n        //TC : O(n)\\n        //SC :O(1)\\n        \\n//         int count=0;\\n//         int num=gcd(a,b);\\n//         for(int i=1;i<=num;i++){\\n//             if(a%i==0 && b%i==0){\\n//                 count++;\\n//             }\\n//         }\\n//         return count;\\n        \\n        //TC : O(log(min(a,b)))+O(log(min(a,b)))\\n        //SC : O(1)\\n        \\n        int count=0;\\n        int num=gcd(a,b);\\n        for(int i=1;i<=Math.sqrt(num);i++){\\n            if(num%i==0){\\n                if(i*i==num){\\n                    count+=1;\\n                }else{\\n                    count+=2;\\n                }\\n            }\\n        }\\n        return count;\\n        //TC : O(log(min(a, b))) + O(sqrt(num))\\n        //SC: O(1)\\n        \\n    }\\n    public static int gcd(int a,int b){\\n        return a==0?b:gcd(b%a,a);\\n    }\\n    \\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        //Broute Force ::\\n        // int num =a>b?a:b;\\n        // int count=0;\\n        // for(int i=1;i<=num;i++){\\n        //     if(a%i==0 && b%i==0){\\n        //         count++;\\n        //     }\\n        // }\\n        // return count;\\n        //TC : O(n)\\n        //SC :O(1)\\n        \\n//         int count=0;\\n//         int num=gcd(a,b);\\n//         for(int i=1;i<=num;i++){\\n//             if(a%i==0 && b%i==0){\\n//                 count++;\\n//             }\\n//         }\\n//         return count;\\n        \\n        //TC : O(log(min(a,b)))+O(log(min(a,b)))\\n        //SC : O(1)\\n        \\n        int count=0;\\n        int num=gcd(a,b);\\n        for(int i=1;i<=Math.sqrt(num);i++){\\n            if(num%i==0){\\n                if(i*i==num){\\n                    count+=1;\\n                }else{\\n                    count+=2;\\n                }\\n            }\\n        }\\n        return count;\\n        //TC : O(log(min(a, b))) + O(sqrt(num))\\n        //SC: O(1)\\n        \\n    }\\n    public static int gcd(int a,int b){\\n        return a==0?b:gcd(b%a,a);\\n    }\\n    \\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4035702,
                "title": "easy-c-code-beats-100",
                "content": "\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n\\n        int min, ans = 0;\\n\\n        (a < b || a==b) ? min = a : min = b;\\n\\n        for(int i = 1 ; i <= min ; i++)\\n        {\\n            if(a % i == 0 && b % i == 0)\\n            {\\n                ans++;\\n            }\\n        }\\n\\n        return ans;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n\\n        int min, ans = 0;\\n\\n        (a < b || a==b) ? min = a : min = b;\\n\\n        for(int i = 1 ; i <= min ; i++)\\n        {\\n            if(a % i == 0 && b % i == 0)\\n            {\\n                ans++;\\n            }\\n        }\\n\\n        return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4033258,
                "title": "python-gcd-factorization-o-log-n-sqrt-n-time-o-1-space",
                "content": "# Intuition\\nThe common factors must divide GCD (or they are not a factor for both).\\n\\n# Approach\\nFind GCD, then factorize it.\\n\\n# Complexity\\n- Time complexity: $$O(log(n) + sqrt(n))$$ (`log` for GCD, `sqrt` for factorization)\\n\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        def gcd(a, b):\\n            return a if b == 0 else gcd(b, a % b)\\n        res, i, g = 0, 1, gcd(a, b)\\n        while i * i <= g:\\n            j = g // i\\n            if i * j == g:\\n                res += 1 + (j != i)\\n            i += 1\\n        return res\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        def gcd(a, b):\\n            return a if b == 0 else gcd(b, a % b)\\n        res, i, g = 0, 1, gcd(a, b)\\n        while i * i <= g:\\n            j = g // i\\n            if i * j == g:\\n                res += 1 + (j != i)\\n            i += 1\\n        return res\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4031998,
                "title": "easy-to-understand-and-implement-beats-100-in-runtime-and-82-29-in-memory",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe number of common factors will definitely be less than or equal to smaller number. So, we find the smaller value out of the two and store it.\\n\\nThen a simple for loop from 1, as 1 is smallest number which will be a common divisor between the two. And loop will run till we reach the smaller value. \\n\\nThen inside the for loop, we have an if condition to check if \"i\" is completely dividing the given numbers. If it is, then we increase the count by 1.\\n\\nThen, in the end return the count.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(min(a,b))\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n        int smaller = (a < b) ? a : b;\\n\\n        for(int i = 1;i<=smaller;i++) {\\n            if (a%i==0 && b%i==0){\\n            count++;\\n            }\\n        }\\n    return count;\\n    }\\n}\\n```\\nMake sure to upvote it. It motivates to write more solutions.",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n        int smaller = (a < b) ? a : b;\\n\\n        for(int i = 1;i<=smaller;i++) {\\n            if (a%i==0 && b%i==0){\\n            count++;\\n            }\\n        }\\n    return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4031725,
                "title": "easy-java-0ms",
                "content": "\\n# Complexity\\n- Time complexity:\\n$$O(N)$$\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int min = Math.min(a,b);\\n        int count = 0;\\n        for(int i = 1; i <= min; i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int min = Math.min(a,b);\\n        int count = 0;\\n        for(int i = 1; i <= min; i++){\\n            if(a%i==0 && b%i==0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4031193,
                "title": "c-python-brute-force-approach-too-easy-fully-explained",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nHere\\'s how the function works:\\n\\n1. It starts by initializing `cnt` to 0, which will be used to count the common factors of `a` and `b`.\\n\\n2. It calculates `it` as the minimum of `a` and `b`. This is done to ensure that the loop checks factors up to the smaller of the two numbers.\\n\\n3. It initializes `i` to 1, which is the starting point for checking factors.\\n\\n4. The function enters a `while` loop that continues as long as `i` is less than or equal to `it`.\\n\\n5. Inside the loop, it checks whether both `a` and `b` are divisible by `i` without a remainder (i.e., `a % i == 0` and `b % i == 0`). If this condition is met, it increments `cnt`, indicating that `i` is a common factor.\\n\\n6. After checking `i`, it increments `i` by 1 in each iteration to continue checking the next integer.\\n\\n7. Finally, the function returns the value of `cnt`, which represents the count of common factors of `a` and `b`.\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n``` C++ []\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cnt = 0;\\n        int it = min(a, b);\\n        int i = 1;\\n        while(i <= it){\\n            if(a % i == 0 && b % i == 0)\\n                cnt++;\\n            i++;\\n        }\\n    return cnt;\\n    }\\n};\\n```\\n``` Python []\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        cnt = 0\\n        for i in range (1, min(a, b) + 1):\\n            if a % i == 0 and b % i == 0:\\n                cnt += 1\\n        return cnt\\n```",
                "solutionTags": [
                    "C++",
                    "Python3"
                ],
                "code": "``` C++ []\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int cnt = 0;\\n        int it = min(a, b);\\n        int i = 1;\\n        while(i <= it){\\n            if(a % i == 0 && b % i == 0)\\n                cnt++;\\n            i++;\\n        }\\n    return cnt;\\n    }\\n};\\n```\n``` Python []\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        cnt = 0\\n        for i in range (1, min(a, b) + 1):\\n            if a % i == 0 and b % i == 0:\\n                cnt += 1\\n        return cnt\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4029345,
                "title": "commonfactors",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int c=0;\\n        for(int i=1;i<=1000;i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n           c++;\\n        }\\n        return c;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int c=0;\\n        for(int i=1;i<=1000;i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n           c++;\\n        }\\n        return c;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4025571,
                "title": "java-gcd-100-0ms",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n        int gcd = gcd(a, b);\\n        int limit = (int) Math.sqrt(gcd);\\n        for(int i=1; i<=limit; i++) {\\n            if(gcd%i==0){\\n                count+=2; // i and gcd/i are factors \\n                // 2 is factor of 8 (2 * 4 = 8) therefore 4 is also a factor therefore +2 is icremented;\\n                if(i==gcd/i)\\n                count--; // If i and gcd/i are the same, count only once\\n                //2 is factor of 4 (2 * 2 = 4) now here 2 will be counted twice thwrefore 1 is decremented;\\n            }\\n        }\\n        return count;\\n    }\\n\\n    int gcd(int a, int b) {\\n        if(b==0)\\n        return a;\\n\\n        return gcd(b, a%b);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int count = 0;\\n        int gcd = gcd(a, b);\\n        int limit = (int) Math.sqrt(gcd);\\n        for(int i=1; i<=limit; i++) {\\n            if(gcd%i==0){\\n                count+=2; // i and gcd/i are factors \\n                // 2 is factor of 8 (2 * 4 = 8) therefore 4 is also a factor therefore +2 is icremented;\\n                if(i==gcd/i)\\n                count--; // If i and gcd/i are the same, count only once\\n                //2 is factor of 4 (2 * 2 = 4) now here 2 will be counted twice thwrefore 1 is decremented;\\n            }\\n        }\\n        return count;\\n    }\\n\\n    int gcd(int a, int b) {\\n        if(b==0)\\n        return a;\\n\\n        return gcd(b, a%b);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4023561,
                "title": "java-and-python-solution-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n# Java\\n```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int n = Math.min(a, b);\\n        int count = 1;\\n        for(int i = 2; i <= n; i++){\\n            if(a % i == 0 && b % i == 0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```\\n\\n# Python\\n```\\ndef commonFactors(self, a: int, b: int) -> int:\\n        length = min(a,b)\\n        count = 1\\n        for i in range(2, length+1):\\n            if a%i == 0 and b%i == 0:\\n                count +=1\\n        return count\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution {\\n    public int commonFactors(int a, int b) {\\n        int n = Math.min(a, b);\\n        int count = 1;\\n        for(int i = 2; i <= n; i++){\\n            if(a % i == 0 && b % i == 0){\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```\n```\\ndef commonFactors(self, a: int, b: int) -> int:\\n        length = min(a,b)\\n        count = 1\\n        for i in range(2, length+1):\\n            if a%i == 0 and b%i == 0:\\n                count +=1\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4023229,
                "title": "c-solution-for-beginners-0ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for(int i=1;i<=min(a,b);i++){\\n            if((a%i==0)&&(b%i==0)){\\n                count+=1;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for(int i=1;i<=min(a,b);i++){\\n            if((a%i==0)&&(b%i==0)){\\n                count+=1;\\n            }\\n        }\\n        return count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4019275,
                "title": "simple-solution",
                "content": "\\n# Code\\n```\\nimport math\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        comf=0\\n\\n        for i in range(1,min(a,b)+1):\\n            if a%i==0 and b%i==0:\\n                comf+=1\\n        return comf\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nimport math\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        \\n        comf=0\\n\\n        for i in range(1,min(a,b)+1):\\n            if a%i==0 and b%i==0:\\n                comf+=1\\n        return comf\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4019171,
                "title": "simple-and-only-using-if-while-loops",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. --> \\nFirst we need to divide by numbers starting from 1 to the minimum of a, b and then make the counter to count the no of common factors whihc divides both a and b.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        i=1\\n        count=0\\n        while i <= min (a,b):\\n            if a%i ==0 and b%i == 0:\\n                count+=1\\n            i+=1\\n        return count\\n\\n\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def commonFactors(self, a: int, b: int) -> int:\\n        i=1\\n        count=0\\n        while i <= min (a,b):\\n            if a%i ==0 and b%i == 0:\\n                count+=1\\n            i+=1\\n        return count\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4019169,
                "title": "simple-approach-c-program-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n![commonFactors.png](https://assets.leetcode.com/users/images/f171b51b-9c0e-4a59-8adb-49993b0e58e5_1694193013.653204.png)\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- initialise a variable ans with 0;\\n- traverse from i = 1 to minimum of a and b and check if i divides both \"a\" and \"b\"\\n- if it does then increment the ans\\n- return the ans\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int ans = 0;\\n        for(int i=1; i<=min(a,b); i++){\\n            if(a % i==0 && b % i==0){\\n                ans++;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int ans = 0;\\n        for(int i=1; i<=min(a,b); i++){\\n            if(a % i==0 && b % i==0){\\n                ans++;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4018511,
                "title": "beats-100-00-of-users-with-c-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        for (int i=1;i<=min(a,b);i++){\\n        if(a%i==0 && b%i==0){\\n              count++;}\\n        }\\n        return count;\\n         }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count=0;\\n        for (int i=1;i<=min(a,b);i++){\\n        if(a%i==0 && b%i==0){\\n              count++;}\\n        }\\n        return count;\\n         }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4018473,
                "title": "beats-100-00-of-users-with-c-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nint commonFactors(int a, int b){\\nint i=1,count=0;\\nwhile(i<=a){\\n    if(a%i==0&&b%i==0){\\n        count+=1;\\n      //  i+=1;\\n    }\\n    i++;\\n}\\n\\nreturn count;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint commonFactors(int a, int b){\\nint i=1,count=0;\\nwhile(i<=a){\\n    if(a%i==0&&b%i==0){\\n        count+=1;\\n      //  i+=1;\\n    }\\n    i++;\\n}\\n\\nreturn count;\\n}\\n```",
                "codeTag": "Unknown"
            }
        ],
        "discussions": [
            {
                "id": 1815344,
                "content": [
                    {
                        "username": "anwendeng",
                        "content": "Use Euclidean algorithm to find the gcd. Since the constraints 1 <= a, b <= 1000 allow no large numbers, the rest can be done by a brutal force."
                    },
                    {
                        "username": "Tasnif",
                        "content": "Can be solve in O( sqrt(n) ) time, here n is the gcd of a and b. \\nFind  the sqrt of gcd then iterate from 1 through sqrt and two case arises.\\ngcd / i == i then cnt++ else cnt+=2.\\n"
                    },
                    {
                        "username": "almostmonday",
                        "content": "If you\\'re looking for a math solution with prime factorization of GCD, it\\'s [here](https://leetcode.com/problems/number-of-common-factors/solutions/3322098/python-prime-factorization-and-gcd/)."
                    },
                    {
                        "username": "S117",
                        "content": "A brute force approach would be to pass through all the numbers between 1 and min(a,b) and check if they divided both a and b."
                    },
                    {
                        "username": "trickycat10",
                        "content": "Brute Force GCD would be a good way to find the upper bound for the above question."
                    },
                    {
                        "username": "razrushil",
                        "content": "Not just an upper bound. If a number divides both a and b, then it must divide their gcd. It simplifies the problem from \"how many factors do these two numbers share\" to \"how many factors does this single number have\""
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Good point! I used the min of the two numbers."
                    },
                    {
                        "username": "ethanrao",
                        "content": "```cpp\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for (int i = 1; i <= min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "God007",
                        "content": "it should be Math.min in 5 line"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    },
                    {
                        "username": "kapilk",
                        "content": "```\\nfrom fractions import gcd\\nclass Solution(object):\\n    def commonFactors(self, num1, num2):\\n        \"\"\"\\n        :type a: int\\n        :type b: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        count = 0\\n        g = gcd(num1, num2)\\n        for i in range(1, g+1): \\n            if g%i == 0:\\n                count += 1\\n        return count\\n```"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    }
                ]
            },
            {
                "id": 2056833,
                "content": [
                    {
                        "username": "anwendeng",
                        "content": "Use Euclidean algorithm to find the gcd. Since the constraints 1 <= a, b <= 1000 allow no large numbers, the rest can be done by a brutal force."
                    },
                    {
                        "username": "Tasnif",
                        "content": "Can be solve in O( sqrt(n) ) time, here n is the gcd of a and b. \\nFind  the sqrt of gcd then iterate from 1 through sqrt and two case arises.\\ngcd / i == i then cnt++ else cnt+=2.\\n"
                    },
                    {
                        "username": "almostmonday",
                        "content": "If you\\'re looking for a math solution with prime factorization of GCD, it\\'s [here](https://leetcode.com/problems/number-of-common-factors/solutions/3322098/python-prime-factorization-and-gcd/)."
                    },
                    {
                        "username": "S117",
                        "content": "A brute force approach would be to pass through all the numbers between 1 and min(a,b) and check if they divided both a and b."
                    },
                    {
                        "username": "trickycat10",
                        "content": "Brute Force GCD would be a good way to find the upper bound for the above question."
                    },
                    {
                        "username": "razrushil",
                        "content": "Not just an upper bound. If a number divides both a and b, then it must divide their gcd. It simplifies the problem from \"how many factors do these two numbers share\" to \"how many factors does this single number have\""
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Good point! I used the min of the two numbers."
                    },
                    {
                        "username": "ethanrao",
                        "content": "```cpp\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for (int i = 1; i <= min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "God007",
                        "content": "it should be Math.min in 5 line"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    },
                    {
                        "username": "kapilk",
                        "content": "```\\nfrom fractions import gcd\\nclass Solution(object):\\n    def commonFactors(self, num1, num2):\\n        \"\"\"\\n        :type a: int\\n        :type b: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        count = 0\\n        g = gcd(num1, num2)\\n        for i in range(1, g+1): \\n            if g%i == 0:\\n                count += 1\\n        return count\\n```"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    }
                ]
            },
            {
                "id": 1838970,
                "content": [
                    {
                        "username": "anwendeng",
                        "content": "Use Euclidean algorithm to find the gcd. Since the constraints 1 <= a, b <= 1000 allow no large numbers, the rest can be done by a brutal force."
                    },
                    {
                        "username": "Tasnif",
                        "content": "Can be solve in O( sqrt(n) ) time, here n is the gcd of a and b. \\nFind  the sqrt of gcd then iterate from 1 through sqrt and two case arises.\\ngcd / i == i then cnt++ else cnt+=2.\\n"
                    },
                    {
                        "username": "almostmonday",
                        "content": "If you\\'re looking for a math solution with prime factorization of GCD, it\\'s [here](https://leetcode.com/problems/number-of-common-factors/solutions/3322098/python-prime-factorization-and-gcd/)."
                    },
                    {
                        "username": "S117",
                        "content": "A brute force approach would be to pass through all the numbers between 1 and min(a,b) and check if they divided both a and b."
                    },
                    {
                        "username": "trickycat10",
                        "content": "Brute Force GCD would be a good way to find the upper bound for the above question."
                    },
                    {
                        "username": "razrushil",
                        "content": "Not just an upper bound. If a number divides both a and b, then it must divide their gcd. It simplifies the problem from \"how many factors do these two numbers share\" to \"how many factors does this single number have\""
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Good point! I used the min of the two numbers."
                    },
                    {
                        "username": "ethanrao",
                        "content": "```cpp\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for (int i = 1; i <= min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "God007",
                        "content": "it should be Math.min in 5 line"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    },
                    {
                        "username": "kapilk",
                        "content": "```\\nfrom fractions import gcd\\nclass Solution(object):\\n    def commonFactors(self, num1, num2):\\n        \"\"\"\\n        :type a: int\\n        :type b: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        count = 0\\n        g = gcd(num1, num2)\\n        for i in range(1, g+1): \\n            if g%i == 0:\\n                count += 1\\n        return count\\n```"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    }
                ]
            },
            {
                "id": 1799698,
                "content": [
                    {
                        "username": "anwendeng",
                        "content": "Use Euclidean algorithm to find the gcd. Since the constraints 1 <= a, b <= 1000 allow no large numbers, the rest can be done by a brutal force."
                    },
                    {
                        "username": "Tasnif",
                        "content": "Can be solve in O( sqrt(n) ) time, here n is the gcd of a and b. \\nFind  the sqrt of gcd then iterate from 1 through sqrt and two case arises.\\ngcd / i == i then cnt++ else cnt+=2.\\n"
                    },
                    {
                        "username": "almostmonday",
                        "content": "If you\\'re looking for a math solution with prime factorization of GCD, it\\'s [here](https://leetcode.com/problems/number-of-common-factors/solutions/3322098/python-prime-factorization-and-gcd/)."
                    },
                    {
                        "username": "S117",
                        "content": "A brute force approach would be to pass through all the numbers between 1 and min(a,b) and check if they divided both a and b."
                    },
                    {
                        "username": "trickycat10",
                        "content": "Brute Force GCD would be a good way to find the upper bound for the above question."
                    },
                    {
                        "username": "razrushil",
                        "content": "Not just an upper bound. If a number divides both a and b, then it must divide their gcd. It simplifies the problem from \"how many factors do these two numbers share\" to \"how many factors does this single number have\""
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Good point! I used the min of the two numbers."
                    },
                    {
                        "username": "ethanrao",
                        "content": "```cpp\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for (int i = 1; i <= min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "God007",
                        "content": "it should be Math.min in 5 line"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    },
                    {
                        "username": "kapilk",
                        "content": "```\\nfrom fractions import gcd\\nclass Solution(object):\\n    def commonFactors(self, num1, num2):\\n        \"\"\"\\n        :type a: int\\n        :type b: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        count = 0\\n        g = gcd(num1, num2)\\n        for i in range(1, g+1): \\n            if g%i == 0:\\n                count += 1\\n        return count\\n```"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    }
                ]
            },
            {
                "id": 1633033,
                "content": [
                    {
                        "username": "anwendeng",
                        "content": "Use Euclidean algorithm to find the gcd. Since the constraints 1 <= a, b <= 1000 allow no large numbers, the rest can be done by a brutal force."
                    },
                    {
                        "username": "Tasnif",
                        "content": "Can be solve in O( sqrt(n) ) time, here n is the gcd of a and b. \\nFind  the sqrt of gcd then iterate from 1 through sqrt and two case arises.\\ngcd / i == i then cnt++ else cnt+=2.\\n"
                    },
                    {
                        "username": "almostmonday",
                        "content": "If you\\'re looking for a math solution with prime factorization of GCD, it\\'s [here](https://leetcode.com/problems/number-of-common-factors/solutions/3322098/python-prime-factorization-and-gcd/)."
                    },
                    {
                        "username": "S117",
                        "content": "A brute force approach would be to pass through all the numbers between 1 and min(a,b) and check if they divided both a and b."
                    },
                    {
                        "username": "trickycat10",
                        "content": "Brute Force GCD would be a good way to find the upper bound for the above question."
                    },
                    {
                        "username": "razrushil",
                        "content": "Not just an upper bound. If a number divides both a and b, then it must divide their gcd. It simplifies the problem from \"how many factors do these two numbers share\" to \"how many factors does this single number have\""
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Good point! I used the min of the two numbers."
                    },
                    {
                        "username": "ethanrao",
                        "content": "```cpp\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for (int i = 1; i <= min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "God007",
                        "content": "it should be Math.min in 5 line"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    },
                    {
                        "username": "kapilk",
                        "content": "```\\nfrom fractions import gcd\\nclass Solution(object):\\n    def commonFactors(self, num1, num2):\\n        \"\"\"\\n        :type a: int\\n        :type b: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        count = 0\\n        g = gcd(num1, num2)\\n        for i in range(1, g+1): \\n            if g%i == 0:\\n                count += 1\\n        return count\\n```"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    }
                ]
            },
            {
                "id": 1626944,
                "content": [
                    {
                        "username": "anwendeng",
                        "content": "Use Euclidean algorithm to find the gcd. Since the constraints 1 <= a, b <= 1000 allow no large numbers, the rest can be done by a brutal force."
                    },
                    {
                        "username": "Tasnif",
                        "content": "Can be solve in O( sqrt(n) ) time, here n is the gcd of a and b. \\nFind  the sqrt of gcd then iterate from 1 through sqrt and two case arises.\\ngcd / i == i then cnt++ else cnt+=2.\\n"
                    },
                    {
                        "username": "almostmonday",
                        "content": "If you\\'re looking for a math solution with prime factorization of GCD, it\\'s [here](https://leetcode.com/problems/number-of-common-factors/solutions/3322098/python-prime-factorization-and-gcd/)."
                    },
                    {
                        "username": "S117",
                        "content": "A brute force approach would be to pass through all the numbers between 1 and min(a,b) and check if they divided both a and b."
                    },
                    {
                        "username": "trickycat10",
                        "content": "Brute Force GCD would be a good way to find the upper bound for the above question."
                    },
                    {
                        "username": "razrushil",
                        "content": "Not just an upper bound. If a number divides both a and b, then it must divide their gcd. It simplifies the problem from \"how many factors do these two numbers share\" to \"how many factors does this single number have\""
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Good point! I used the min of the two numbers."
                    },
                    {
                        "username": "ethanrao",
                        "content": "```cpp\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for (int i = 1; i <= min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "God007",
                        "content": "it should be Math.min in 5 line"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    },
                    {
                        "username": "kapilk",
                        "content": "```\\nfrom fractions import gcd\\nclass Solution(object):\\n    def commonFactors(self, num1, num2):\\n        \"\"\"\\n        :type a: int\\n        :type b: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        count = 0\\n        g = gcd(num1, num2)\\n        for i in range(1, g+1): \\n            if g%i == 0:\\n                count += 1\\n        return count\\n```"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    }
                ]
            },
            {
                "id": 1628783,
                "content": [
                    {
                        "username": "anwendeng",
                        "content": "Use Euclidean algorithm to find the gcd. Since the constraints 1 <= a, b <= 1000 allow no large numbers, the rest can be done by a brutal force."
                    },
                    {
                        "username": "Tasnif",
                        "content": "Can be solve in O( sqrt(n) ) time, here n is the gcd of a and b. \\nFind  the sqrt of gcd then iterate from 1 through sqrt and two case arises.\\ngcd / i == i then cnt++ else cnt+=2.\\n"
                    },
                    {
                        "username": "almostmonday",
                        "content": "If you\\'re looking for a math solution with prime factorization of GCD, it\\'s [here](https://leetcode.com/problems/number-of-common-factors/solutions/3322098/python-prime-factorization-and-gcd/)."
                    },
                    {
                        "username": "S117",
                        "content": "A brute force approach would be to pass through all the numbers between 1 and min(a,b) and check if they divided both a and b."
                    },
                    {
                        "username": "trickycat10",
                        "content": "Brute Force GCD would be a good way to find the upper bound for the above question."
                    },
                    {
                        "username": "razrushil",
                        "content": "Not just an upper bound. If a number divides both a and b, then it must divide their gcd. It simplifies the problem from \"how many factors do these two numbers share\" to \"how many factors does this single number have\""
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Good point! I used the min of the two numbers."
                    },
                    {
                        "username": "ethanrao",
                        "content": "```cpp\\nclass Solution {\\npublic:\\n    int commonFactors(int a, int b) {\\n        int count = 0;\\n        for (int i = 1; i <= min(a, b); i++) {\\n            if (a % i == 0 && b % i == 0) count++;\\n        }\\n        return count;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "God007",
                        "content": "it should be Math.min in 5 line"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    },
                    {
                        "username": "kapilk",
                        "content": "```\\nfrom fractions import gcd\\nclass Solution(object):\\n    def commonFactors(self, num1, num2):\\n        \"\"\"\\n        :type a: int\\n        :type b: int\\n        :rtype: int\\n        \"\"\"\\n        \\n        count = 0\\n        g = gcd(num1, num2)\\n        for i in range(1, g+1): \\n            if g%i == 0:\\n                count += 1\\n        return count\\n```"
                    },
                    {
                        "username": "Cavalier_Poet",
                        "content": "Please do not add solutions to the discussion tab."
                    }
                ]
            }
        ]
    }
]